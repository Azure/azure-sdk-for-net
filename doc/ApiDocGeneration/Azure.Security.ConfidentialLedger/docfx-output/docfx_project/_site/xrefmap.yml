### YamlMime:XRefMap
sorted: true
references:
- uid: Azure.Security.ConfidentialLedger
  name: Azure.Security.ConfidentialLedger
  href: api/Azure.Security.ConfidentialLedger.html
  commentId: N:Azure.Security.ConfidentialLedger
  fullName: Azure.Security.ConfidentialLedger
  nameWithType: Azure.Security.ConfidentialLedger
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient
  name: ConfidentialLedgerClient
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html
  commentId: T:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient
  nameWithType: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor
  name: ConfidentialLedgerClient()
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient__ctor
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.ConfidentialLedgerClient()
  nameWithType: ConfidentialLedgerClient.ConfidentialLedgerClient()
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor(System.Uri,Azure.Core.TokenCredential)
  name: ConfidentialLedgerClient(Uri, TokenCredential)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient__ctor_System_Uri_Azure_Core_TokenCredential_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor(System.Uri,Azure.Core.TokenCredential)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.ConfidentialLedgerClient(Uri, TokenCredential)
  nameWithType: ConfidentialLedgerClient.ConfidentialLedgerClient(Uri, TokenCredential)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions)
  name: ConfidentialLedgerClient(Uri, TokenCredential, ConfidentialLedgerClientOptions)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient__ctor_System_Uri_Azure_Core_TokenCredential_Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.ConfidentialLedgerClient(Uri, TokenCredential, ConfidentialLedgerClientOptions)
  nameWithType: ConfidentialLedgerClient.ConfidentialLedgerClient(Uri, TokenCredential, ConfidentialLedgerClientOptions)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor*
  name: ConfidentialLedgerClient
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient__ctor_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.ConfidentialLedgerClient
  nameWithType: ConfidentialLedgerClient.ConfidentialLedgerClient
  type: constructor
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser(System.String,Azure.Core.RequestContent,Azure.RequestContext)
  name: CreateOrUpdateUser(String, RequestContent, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_CreateOrUpdateUser_System_String_Azure_Core_RequestContent_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser(System.String,Azure.Core.RequestContent,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser(String, RequestContent, RequestContext)
  nameWithType: ConfidentialLedgerClient.CreateOrUpdateUser(String, RequestContent, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser*
  name: CreateOrUpdateUser
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_CreateOrUpdateUser_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser
  nameWithType: ConfidentialLedgerClient.CreateOrUpdateUser
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)
  name: CreateOrUpdateUserAsync(String, RequestContent, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_CreateOrUpdateUserAsync_System_String_Azure_Core_RequestContent_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync(String, RequestContent, RequestContext)
  nameWithType: ConfidentialLedgerClient.CreateOrUpdateUserAsync(String, RequestContent, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync*
  name: CreateOrUpdateUserAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_CreateOrUpdateUserAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync
  nameWithType: ConfidentialLedgerClient.CreateOrUpdateUserAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser(System.String,Azure.RequestContext)
  name: DeleteUser(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_DeleteUser_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.DeleteUser(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser*
  name: DeleteUser
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_DeleteUser_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser
  nameWithType: ConfidentialLedgerClient.DeleteUser
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync(System.String,Azure.RequestContext)
  name: DeleteUserAsync(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_DeleteUserAsync_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.DeleteUserAsync(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_DeleteUserAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync
  nameWithType: ConfidentialLedgerClient.DeleteUserAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers(Azure.RequestContext)
  name: GetConsortiumMembers(RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConsortiumMembers_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers(Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers(RequestContext)
  nameWithType: ConfidentialLedgerClient.GetConsortiumMembers(RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers*
  name: GetConsortiumMembers
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConsortiumMembers_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers
  nameWithType: ConfidentialLedgerClient.GetConsortiumMembers
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync(Azure.RequestContext)
  name: GetConsortiumMembersAsync(RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConsortiumMembersAsync_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync(Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync(RequestContext)
  nameWithType: ConfidentialLedgerClient.GetConsortiumMembersAsync(RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync*
  name: GetConsortiumMembersAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConsortiumMembersAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync
  nameWithType: ConfidentialLedgerClient.GetConsortiumMembersAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution(Azure.RequestContext)
  name: GetConstitution(RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConstitution_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution(Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution(RequestContext)
  nameWithType: ConfidentialLedgerClient.GetConstitution(RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution*
  name: GetConstitution
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConstitution_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution
  nameWithType: ConfidentialLedgerClient.GetConstitution
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync(Azure.RequestContext)
  name: GetConstitutionAsync(RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConstitutionAsync_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync(Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync(RequestContext)
  nameWithType: ConfidentialLedgerClient.GetConstitutionAsync(RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync*
  name: GetConstitutionAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetConstitutionAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync
  nameWithType: ConfidentialLedgerClient.GetConstitutionAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry(System.String,Azure.RequestContext)
  name: GetCurrentLedgerEntry(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetCurrentLedgerEntry_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetCurrentLedgerEntry(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry*
  name: GetCurrentLedgerEntry
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetCurrentLedgerEntry_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry
  nameWithType: ConfidentialLedgerClient.GetCurrentLedgerEntry
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync(System.String,Azure.RequestContext)
  name: GetCurrentLedgerEntryAsync(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetCurrentLedgerEntryAsync_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetCurrentLedgerEntryAsync(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync*
  name: GetCurrentLedgerEntryAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetCurrentLedgerEntryAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync
  nameWithType: ConfidentialLedgerClient.GetCurrentLedgerEntryAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes(Azure.RequestContext)
  name: GetEnclaveQuotes(RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetEnclaveQuotes_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes(Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes(RequestContext)
  nameWithType: ConfidentialLedgerClient.GetEnclaveQuotes(RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes*
  name: GetEnclaveQuotes
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetEnclaveQuotes_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes
  nameWithType: ConfidentialLedgerClient.GetEnclaveQuotes
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync(Azure.RequestContext)
  name: GetEnclaveQuotesAsync(RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetEnclaveQuotesAsync_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync(Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync(RequestContext)
  nameWithType: ConfidentialLedgerClient.GetEnclaveQuotesAsync(RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync*
  name: GetEnclaveQuotesAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetEnclaveQuotesAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync
  nameWithType: ConfidentialLedgerClient.GetEnclaveQuotesAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries(System.String,System.String,System.String,Azure.RequestContext)
  name: GetLedgerEntries(String, String, String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntries_System_String_System_String_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries(System.String,System.String,System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries(String, String, String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetLedgerEntries(String, String, String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries*
  name: GetLedgerEntries
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntries_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries
  nameWithType: ConfidentialLedgerClient.GetLedgerEntries
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync(System.String,System.String,System.String,Azure.RequestContext)
  name: GetLedgerEntriesAsync(String, String, String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntriesAsync_System_String_System_String_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync(System.String,System.String,System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync(String, String, String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetLedgerEntriesAsync(String, String, String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync*
  name: GetLedgerEntriesAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntriesAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync
  nameWithType: ConfidentialLedgerClient.GetLedgerEntriesAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry(System.String,System.String,Azure.RequestContext)
  name: GetLedgerEntry(String, String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntry_System_String_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry(System.String,System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry(String, String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetLedgerEntry(String, String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry*
  name: GetLedgerEntry
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntry_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry
  nameWithType: ConfidentialLedgerClient.GetLedgerEntry
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync(System.String,System.String,Azure.RequestContext)
  name: GetLedgerEntryAsync(String, String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntryAsync_System_String_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync(System.String,System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync(String, String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetLedgerEntryAsync(String, String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync*
  name: GetLedgerEntryAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetLedgerEntryAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync
  nameWithType: ConfidentialLedgerClient.GetLedgerEntryAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt(System.String,Azure.RequestContext)
  name: GetReceipt(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetReceipt_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetReceipt(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt*
  name: GetReceipt
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetReceipt_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt
  nameWithType: ConfidentialLedgerClient.GetReceipt
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync(System.String,Azure.RequestContext)
  name: GetReceiptAsync(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetReceiptAsync_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetReceiptAsync(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync*
  name: GetReceiptAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetReceiptAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync
  nameWithType: ConfidentialLedgerClient.GetReceiptAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus(System.String,Azure.RequestContext)
  name: GetTransactionStatus(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetTransactionStatus_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetTransactionStatus(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus*
  name: GetTransactionStatus
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetTransactionStatus_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus
  nameWithType: ConfidentialLedgerClient.GetTransactionStatus
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync(System.String,Azure.RequestContext)
  name: GetTransactionStatusAsync(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetTransactionStatusAsync_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetTransactionStatusAsync(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync*
  name: GetTransactionStatusAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetTransactionStatusAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync
  nameWithType: ConfidentialLedgerClient.GetTransactionStatusAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser(System.String,Azure.RequestContext)
  name: GetUser(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetUser_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetUser(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser*
  name: GetUser
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetUser_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser
  nameWithType: ConfidentialLedgerClient.GetUser
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync(System.String,Azure.RequestContext)
  name: GetUserAsync(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetUserAsync_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync(String, RequestContext)
  nameWithType: ConfidentialLedgerClient.GetUserAsync(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync*
  name: GetUserAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_GetUserAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync
  nameWithType: ConfidentialLedgerClient.GetUserAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline
  name: Pipeline
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_Pipeline
  commentId: P:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline
  nameWithType: ConfidentialLedgerClient.Pipeline
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline*
  name: Pipeline
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_Pipeline_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline
  nameWithType: ConfidentialLedgerClient.Pipeline
  type: property
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(Azure.Core.RequestContent,System.String,Azure.RequestContext)
  name: PostLedgerEntry(RequestContent, String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_PostLedgerEntry_Azure_Core_RequestContent_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(Azure.Core.RequestContent,System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(RequestContent, String, RequestContext)
  nameWithType: ConfidentialLedgerClient.PostLedgerEntry(RequestContent, String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(Azure.Core.RequestContent,System.String,System.Boolean,Azure.RequestContext)
  name: PostLedgerEntry(RequestContent, String, Boolean, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_PostLedgerEntry_Azure_Core_RequestContent_System_String_System_Boolean_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(Azure.Core.RequestContent,System.String,System.Boolean,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(RequestContent, String, Boolean, RequestContext)
  nameWithType: ConfidentialLedgerClient.PostLedgerEntry(RequestContent, String, Boolean, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry*
  name: PostLedgerEntry
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_PostLedgerEntry_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry
  nameWithType: ConfidentialLedgerClient.PostLedgerEntry
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(Azure.Core.RequestContent,System.String,Azure.RequestContext)
  name: PostLedgerEntryAsync(RequestContent, String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_PostLedgerEntryAsync_Azure_Core_RequestContent_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(Azure.Core.RequestContent,System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(RequestContent, String, RequestContext)
  nameWithType: ConfidentialLedgerClient.PostLedgerEntryAsync(RequestContent, String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(Azure.Core.RequestContent,System.String,System.Boolean,Azure.RequestContext)
  name: PostLedgerEntryAsync(RequestContent, String, Boolean, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_PostLedgerEntryAsync_Azure_Core_RequestContent_System_String_System_Boolean_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(Azure.Core.RequestContent,System.String,System.Boolean,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(RequestContent, String, Boolean, RequestContext)
  nameWithType: ConfidentialLedgerClient.PostLedgerEntryAsync(RequestContent, String, Boolean, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync*
  name: PostLedgerEntryAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_PostLedgerEntryAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync
  nameWithType: ConfidentialLedgerClient.PostLedgerEntryAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions
  name: ConfidentialLedgerClientOptions
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.html
  commentId: T:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions
  nameWithType: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.#ctor(Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion)
  name: ConfidentialLedgerClientOptions(ConfidentialLedgerClientOptions+ServiceVersion)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions__ctor_Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions_ServiceVersion_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.#ctor(Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ConfidentialLedgerClientOptions(ConfidentialLedgerClientOptions+ServiceVersion)
  nameWithType: ConfidentialLedgerClientOptions.ConfidentialLedgerClientOptions(ConfidentialLedgerClientOptions+ServiceVersion)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.#ctor*
  name: ConfidentialLedgerClientOptions
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions__ctor_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.#ctor
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ConfidentialLedgerClientOptions
  nameWithType: ConfidentialLedgerClientOptions.ConfidentialLedgerClientOptions
  type: constructor
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.OperationPollingInterval
  name: OperationPollingInterval
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions_OperationPollingInterval
  commentId: P:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.OperationPollingInterval
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.OperationPollingInterval
  nameWithType: ConfidentialLedgerClientOptions.OperationPollingInterval
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.OperationPollingInterval*
  name: OperationPollingInterval
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions_OperationPollingInterval_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.OperationPollingInterval
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.OperationPollingInterval
  nameWithType: ConfidentialLedgerClientOptions.OperationPollingInterval
  type: property
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion
  name: ConfidentialLedgerClientOptions.ServiceVersion
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion.html
  commentId: T:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion
  nameWithType: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion.V0_1_preview
  name: V0_1_preview
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions_ServiceVersion_V0_1_preview
  commentId: F:Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion.V0_1_preview
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions.ServiceVersion.V0_1_preview
  nameWithType: ConfidentialLedgerClientOptions.ServiceVersion.V0_1_preview
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants
  name: ConfidentialLedgerConstants
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants.html
  commentId: T:Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants
  nameWithType: Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants.TransactionIdHeaderName
  name: TransactionIdHeaderName
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerConstants_TransactionIdHeaderName
  commentId: F:Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants.TransactionIdHeaderName
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerConstants.TransactionIdHeaderName
  nameWithType: ConfidentialLedgerConstants.TransactionIdHeaderName
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient
  name: ConfidentialLedgerIdentityServiceClient
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html
  commentId: T:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient
  nameWithType: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor
  name: ConfidentialLedgerIdentityServiceClient()
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient__ctor
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient()
  nameWithType: ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient()
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor(System.Uri)
  name: ConfidentialLedgerIdentityServiceClient(Uri)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient__ctor_System_Uri_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor(System.Uri)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient(Uri)
  nameWithType: ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient(Uri)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor(System.Uri,Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions)
  name: ConfidentialLedgerIdentityServiceClient(Uri, ConfidentialLedgerClientOptions)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient__ctor_System_Uri_Azure_Security_ConfidentialLedger_ConfidentialLedgerClientOptions_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor(System.Uri,Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient(Uri, ConfidentialLedgerClientOptions)
  nameWithType: ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient(Uri, ConfidentialLedgerClientOptions)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor*
  name: ConfidentialLedgerIdentityServiceClient
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient__ctor_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.#ctor
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient
  nameWithType: ConfidentialLedgerIdentityServiceClient.ConfidentialLedgerIdentityServiceClient
  type: constructor
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity(System.String,Azure.RequestContext)
  name: GetLedgerIdentity(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_GetLedgerIdentity_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity(String, RequestContext)
  nameWithType: ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity*
  name: GetLedgerIdentity
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_GetLedgerIdentity_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity
  nameWithType: ConfidentialLedgerIdentityServiceClient.GetLedgerIdentity
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync(System.String,Azure.RequestContext)
  name: GetLedgerIdentityAsync(String, RequestContext)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_GetLedgerIdentityAsync_System_String_Azure_RequestContext_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync(System.String,Azure.RequestContext)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync(String, RequestContext)
  nameWithType: ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync(String, RequestContext)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync*
  name: GetLedgerIdentityAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_GetLedgerIdentityAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync
  nameWithType: ConfidentialLedgerIdentityServiceClient.GetLedgerIdentityAsync
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ParseCertificate(Azure.Response)
  name: ParseCertificate(Response)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_ParseCertificate_Azure_Response_
  commentId: M:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ParseCertificate(Azure.Response)
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ParseCertificate(Response)
  nameWithType: ConfidentialLedgerIdentityServiceClient.ParseCertificate(Response)
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ParseCertificate*
  name: ParseCertificate
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_ParseCertificate_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ParseCertificate
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.ParseCertificate
  nameWithType: ConfidentialLedgerIdentityServiceClient.ParseCertificate
  type: method
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.Pipeline
  name: Pipeline
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_Pipeline
  commentId: P:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.Pipeline
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.Pipeline
  nameWithType: ConfidentialLedgerIdentityServiceClient.Pipeline
- uid: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.Pipeline*
  name: Pipeline
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.html#Azure_Security_ConfidentialLedger_ConfidentialLedgerIdentityServiceClient_Pipeline_
  commentId: Overload:Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.Pipeline
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.ConfidentialLedgerIdentityServiceClient.Pipeline
  nameWithType: ConfidentialLedgerIdentityServiceClient.Pipeline
  type: property
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation
  name: PostLedgerEntryOperation
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html
  commentId: T:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation
  nameWithType: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.#ctor
  name: PostLedgerEntryOperation()
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation__ctor
  commentId: M:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.#ctor
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.PostLedgerEntryOperation()
  nameWithType: PostLedgerEntryOperation.PostLedgerEntryOperation()
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.#ctor(Azure.Security.ConfidentialLedger.ConfidentialLedgerClient,System.String)
  name: PostLedgerEntryOperation(ConfidentialLedgerClient, String)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation__ctor_Azure_Security_ConfidentialLedger_ConfidentialLedgerClient_System_String_
  commentId: M:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.#ctor(Azure.Security.ConfidentialLedger.ConfidentialLedgerClient,System.String)
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.PostLedgerEntryOperation(ConfidentialLedgerClient, String)
  nameWithType: PostLedgerEntryOperation.PostLedgerEntryOperation(ConfidentialLedgerClient, String)
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.#ctor*
  name: PostLedgerEntryOperation
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation__ctor_
  commentId: Overload:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.#ctor
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.PostLedgerEntryOperation
  nameWithType: PostLedgerEntryOperation.PostLedgerEntryOperation
  type: constructor
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.GetRawResponse
  name: GetRawResponse()
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_GetRawResponse
  commentId: M:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.GetRawResponse
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.GetRawResponse()
  nameWithType: PostLedgerEntryOperation.GetRawResponse()
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.GetRawResponse*
  name: GetRawResponse
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_GetRawResponse_
  commentId: Overload:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.GetRawResponse
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.GetRawResponse
  nameWithType: PostLedgerEntryOperation.GetRawResponse
  type: method
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.HasCompleted
  name: HasCompleted
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_HasCompleted
  commentId: P:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.HasCompleted
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.HasCompleted
  nameWithType: PostLedgerEntryOperation.HasCompleted
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.HasCompleted*
  name: HasCompleted
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_HasCompleted_
  commentId: Overload:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.HasCompleted
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.HasCompleted
  nameWithType: PostLedgerEntryOperation.HasCompleted
  type: property
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.Id
  name: Id
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_Id
  commentId: P:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.Id
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.Id
  nameWithType: PostLedgerEntryOperation.Id
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.Id*
  name: Id
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_Id_
  commentId: Overload:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.Id
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.Id
  nameWithType: PostLedgerEntryOperation.Id
  type: property
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatus(System.Threading.CancellationToken)
  name: UpdateStatus(CancellationToken)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_UpdateStatus_System_Threading_CancellationToken_
  commentId: M:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatus(System.Threading.CancellationToken)
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatus(CancellationToken)
  nameWithType: PostLedgerEntryOperation.UpdateStatus(CancellationToken)
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatus*
  name: UpdateStatus
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_UpdateStatus_
  commentId: Overload:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatus
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatus
  nameWithType: PostLedgerEntryOperation.UpdateStatus
  type: method
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatusAsync(System.Threading.CancellationToken)
  name: UpdateStatusAsync(CancellationToken)
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_UpdateStatusAsync_System_Threading_CancellationToken_
  commentId: M:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatusAsync(System.Threading.CancellationToken)
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatusAsync(CancellationToken)
  nameWithType: PostLedgerEntryOperation.UpdateStatusAsync(CancellationToken)
- uid: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatusAsync*
  name: UpdateStatusAsync
  href: api/Azure.Security.ConfidentialLedger/Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.html#Azure_Security_ConfidentialLedger_PostLedgerEntryOperation_UpdateStatusAsync_
  commentId: Overload:Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatusAsync
  isSpec: "True"
  fullName: Azure.Security.ConfidentialLedger.PostLedgerEntryOperation.UpdateStatusAsync
  nameWithType: PostLedgerEntryOperation.UpdateStatusAsync
  type: method
