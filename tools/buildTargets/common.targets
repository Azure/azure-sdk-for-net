<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="common.tasks"/>
  <Import Project="signing.targets"/>
  <PropertyGroup>
    <NetFx452>net452</NetFx452>
    <NetStd14>netstandard1.4</NetStd14>
  </PropertyGroup>
  <!--<ItemGroup>
    <FilesToSign/>
  </ItemGroup>-->
  
  <PropertyGroup>
    <PreBuildStaticAnalysisTargets>
      BuildCiSign;
      BuildMsBuildTask;
      CategorizeProjects;
    </PreBuildStaticAnalysisTargets>
  </PropertyGroup>


  <PropertyGroup>
    <BuildTraversedProjectsDependsOn>
      PreBuildStaticAnalysis;
      <!-- RestoreLatestProjects; -->
      BuildLatestProjects;
      PreSign;
      Sign;
      PostSign;
      Package
    </BuildTraversedProjectsDependsOn>
	
	<RestoreTraversedProjectsDependsOn>
		RestoreLatestProjects;
	</RestoreTraversedProjectsDependsOn>

    <CleanTraversedProjectsDependsOn>
      CleanLatestProjects;
      _CleanSDKPackageFiles
    </CleanTraversedProjectsDependsOn>
  </PropertyGroup>
  
  <Target Name="CleanLatestProjects">
    <PropertyGroup>
      <LatestProjectDefaultCleanTarget Condition=" '$(LatestProjectDefaultCleanTarget)' == '' ">Clean</LatestProjectDefaultCleanTarget>
    </PropertyGroup>

    <Message Text="Cleaning Initiated....." />
    <MSBuild Targets="$(LatestProjectDefaultCleanTarget)"
         Projects="@(ProjectToBuild)"
             Properties="PackageOutputPath=$(PackageOutputPath)"
         ContinueOnError="ErrorAndStop" />
  </Target>

  <Target Name="_CleanSDKPackageFiles">
    <ItemGroup>
      <_SDKPackageFilesToDelete Include="$(PackageOutputPath)\*.nupkg"/>
      <_SDKPackageFilesToDelete Include="$(BaseIntermediateOutputPath)\*.nuspec"/>
    </ItemGroup>
    <Message Text="Cleaning..... @(_SDKPackageFilesToDelete)" Condition=" '@(_SDKPackageFilesToDelete)' != '' " />
    <Delete Files="@(_SDKPackageFilesToDelete)" Condition=" '@(_SDKPackageFilesToDelete)' != '' " ContinueOnError="true"/>
  </Target>


  <Target Name="RestoreLatestProjects">
    <PropertyGroup>
      <LatestProjectDefaultRestoreTarget Condition=" '$(LatestProjectDefaultRestoreTarget)' == '' ">Restore</LatestProjectDefaultRestoreTarget>
    </PropertyGroup>	
	  <Message Text="Now Restoring @(ProjectToBuild)" />
	
    <MSBuild Targets="$(LatestProjectDefaultRestoreTarget)"
         Projects="@(ProjectToBuild)"
         ContinueOnError="ErrorAndStop" />
  </Target>
  
  <Target Name="BuildLatestProjects">  
    <Message Text="IsBuildingInVS: $(AddProjectReferenceForDebuggingPurpose)"/>
    <Message Text="IsCIBuild: $(AddNugetReferenceForCIandCmdlineBuild)"/>
    <PropertyGroup>
	<!-- $(MSBuildProjectDefaultTargets)-->
      <LatestProjectDefaultBuildTarget Condition=" '$(LatestProjectDefaultBuildTarget)' == '' ">Build</LatestProjectDefaultBuildTarget>
    </PropertyGroup>
	  
	  <Message Text="Building SDK Projects ..... @(SDKProject)" />    
    <MSBuild Targets="Build"
             Projects="@(SDKProject)"
             Properties="TargetFramework=$(NetFx452)"
             BuildInParallel="$(BuildInParallel)"
             ContinueOnError="ErrorAndStop">
      <Output TaskParameter="TargetOutputs" ItemName="net452Assemblies" />
    </MSBuild>

    <MSBuild Targets="Build" 
             Projects="@(SDKProject)" 
             Properties="TargetFramework=$(NetStd14)"
             BuildInParallel="$(BuildInParallel)" 
             ContinueOnError="ErrorAndStop">
      <Output TaskParameter="TargetOutputs" ItemName="netStd14Assemblies" />
    </MSBuild>

    <!--BuildInParallel="$(BuildInParallel)"-->
    <!--<Properties="GeneratePackageOnBuild=true;IncludeSymbols=true">-->
    <ItemGroup>
      <FilesToSign Include="@(net452Assemblies);@(netStd14Assemblies)" />
    </ItemGroup>    
    
    <Message Text="Building SDKTest Projects ....... @(SDKTestProject)" />
    <MSBuild Targets="$(LatestProjectDefaultBuildTarget)"
         Projects="@(SDKTestProject)"
         Condition=" '$(SkipBuildingTestProjects)' != 'false' "
         ContinueOnError="ErrorAndStop">
    </MSBuild>         
  </Target>

  <Target Name="Test" DependsOnTargets="PreBuildStaticAnalysis">
    <Message Text="Executing Tests......"/>
    <ItemGroup>
      <FinalTestsToRun Include="@(SDKTestProject)"/>
      <FinalTestsToRun Remove="@(DoNotRunTests)" />
    </ItemGroup>
    <Message Text="Final Tests to run.... @(FinalTestsToRun)" />    
    <Exec Command="dotnet test %(FinalTestsToRun.Identity) -l trx;LogFileName=$(LibraryRoot)TestResults\%(FinalTestsToRun.Filename).trx --no-build" Condition="@(FinalTestsToRun) != ''" ContinueOnError="false" WorkingDirectory="%(FinalTestsToRun.RootDir)%(FinalTestsToRun.Directory)" />
  </Target>
  
  <!--
   $(LibraryRoot)\TestResults\%(SDKTestProject.Filename).trx
  -->
  <Target Name="Package">
    <Message Text="Packaging..... @(SDKProject)"/>
    <MSBuild
        Projects="@(SDKProject)"
        Targets="Pack"
        Properties="Configuration=$(Configuration);
        VisualStudioVersion=$(VisualStudioVersion); 
        PackageOutputPath=$(PackageOutputPath); 
        NoPackageAnalysis=true; 
        IncludeSymbols=false; 
        NoBuild=true;">
    </MSBuild>

  </Target>
  
  <Target Name="CategorizeProjects">
    <Message Text="Categorizing...."/>
      <ItemGroup>
        <SDKProject Include="%(ProjectToBuild.Identity)" Condition=" '%(ProjectToBuild.ProjectType)' != 'Test' "/>
        <SDKTestProject Include="%(ProjectToBuild.Identity)" Condition=" '%(ProjectToBuild.ProjectType)' == 'Test' "/>
      </ItemGroup>
  	<Message Text="Building SDK Projects ..... @(SDKProject)" />
	  <Message Text="Building Test Projects ..... @(SDKTestProject)" />
  </Target>

  <Target Name="PreBuildStaticAnalysis" DependsOnTargets="$(PreBuildStaticAnalysisTargets)">    
  </Target>
</Project>
