// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Intune.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// </summary>
    public partial class MAMPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the MAMPolicyProperties class.
        /// </summary>
        public MAMPolicyProperties() { }

        /// <summary>
        /// Initializes a new instance of the MAMPolicyProperties class.
        /// </summary>
        public MAMPolicyProperties(string friendlyName, string description = default(string), string appSharingFromLevel = default(string), string appSharingToLevel = default(string), string authentication = default(string), string clipboardSharingLevel = default(string), string dataBackup = default(string), string fileSharingSaveAs = default(string), string pin = default(string), int? pinNumRetry = default(int?), string deviceCompliance = default(string), string managedBrowser = default(string), TimeSpan? accessRecheckOfflineTimeout = default(TimeSpan?), TimeSpan? accessRecheckOnlineTimeout = default(TimeSpan?), TimeSpan? offlineWipeTimeout = default(TimeSpan?), int? numOfApps = default(int?), string groupStatus = default(string), DateTime? lastModifiedTime = default(DateTime?))
        {
            FriendlyName = friendlyName;
            Description = description;
            AppSharingFromLevel = appSharingFromLevel;
            AppSharingToLevel = appSharingToLevel;
            Authentication = authentication;
            ClipboardSharingLevel = clipboardSharingLevel;
            DataBackup = dataBackup;
            FileSharingSaveAs = fileSharingSaveAs;
            Pin = pin;
            PinNumRetry = pinNumRetry;
            DeviceCompliance = deviceCompliance;
            ManagedBrowser = managedBrowser;
            AccessRecheckOfflineTimeout = accessRecheckOfflineTimeout;
            AccessRecheckOnlineTimeout = accessRecheckOnlineTimeout;
            OfflineWipeTimeout = offlineWipeTimeout;
            NumOfApps = numOfApps;
            GroupStatus = groupStatus;
            LastModifiedTime = lastModifiedTime;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Possible values for this property include: 'none',
        /// 'policyManagedApps', 'allApps'.
        /// </summary>
        [JsonProperty(PropertyName = "appSharingFromLevel")]
        public string AppSharingFromLevel { get; set; }

        /// <summary>
        /// Possible values for this property include: 'none',
        /// 'policyManagedApps', 'allApps'.
        /// </summary>
        [JsonProperty(PropertyName = "appSharingToLevel")]
        public string AppSharingToLevel { get; set; }

        /// <summary>
        /// Possible values for this property include: 'required',
        /// 'notRequired'.
        /// </summary>
        [JsonProperty(PropertyName = "authentication")]
        public string Authentication { get; set; }

        /// <summary>
        /// Possible values for this property include: 'blocked',
        /// 'policyManagedApps', 'policyManagedAppsWithPasteIn', 'allApps'.
        /// </summary>
        [JsonProperty(PropertyName = "clipboardSharingLevel")]
        public string ClipboardSharingLevel { get; set; }

        /// <summary>
        /// Possible values for this property include: 'allow', 'block'.
        /// </summary>
        [JsonProperty(PropertyName = "dataBackup")]
        public string DataBackup { get; set; }

        /// <summary>
        /// Possible values for this property include: 'allow', 'block'.
        /// </summary>
        [JsonProperty(PropertyName = "fileSharingSaveAs")]
        public string FileSharingSaveAs { get; set; }

        /// <summary>
        /// Possible values for this property include: 'required',
        /// 'notRequired'.
        /// </summary>
        [JsonProperty(PropertyName = "pin")]
        public string Pin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pinNumRetry")]
        public int? PinNumRetry { get; set; }

        /// <summary>
        /// Possible values for this property include: 'enable', 'disable'.
        /// </summary>
        [JsonProperty(PropertyName = "deviceCompliance")]
        public string DeviceCompliance { get; set; }

        /// <summary>
        /// Possible values for this property include: 'required',
        /// 'notRequired'.
        /// </summary>
        [JsonProperty(PropertyName = "managedBrowser")]
        public string ManagedBrowser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessRecheckOfflineTimeout")]
        public TimeSpan? AccessRecheckOfflineTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessRecheckOnlineTimeout")]
        public TimeSpan? AccessRecheckOnlineTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "offlineWipeTimeout")]
        public TimeSpan? OfflineWipeTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numOfApps")]
        public int? NumOfApps { get; private set; }

        /// <summary>
        /// Possible values for this property include: 'notTargeted',
        /// 'targeted'.
        /// </summary>
        [JsonProperty(PropertyName = "groupStatus")]
        public string GroupStatus { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedTime")]
        public DateTime? LastModifiedTime { get; private set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FriendlyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FriendlyName");
            }
        }
    }
}
