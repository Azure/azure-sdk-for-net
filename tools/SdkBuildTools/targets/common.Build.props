<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<!--<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<IncludeSymbols>true</IncludeSymbols>-->
		<RestorePackagesPath>$(LibraryNugetPackageFolder)</RestorePackagesPath>
		<NugetCommonProfileTags></NugetCommonProfileTags>
		<PackageOutputPath>$(BuiltPackageOutputDir)</PackageOutputPath>
		<AddProjectReferenceForDebuggingPurpose>false</AddProjectReferenceForDebuggingPurpose>
		<AddNugetReferenceForCIandCmdlineBuild>true</AddNugetReferenceForCIandCmdlineBuild>
		<SkipBuildingTestProject>false</SkipBuildingTestProject>
		<!-- <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences> -->
		<SignAssembly>true</SignAssembly>
		<DelaySign>true</DelaySign>
		<AssemblyOriginatorKeyFile>$(LibraryToolsFolder)\MSSharedLibKey.snk</AssemblyOriginatorKeyFile>
		<NoWarn>1591;1701;1573;CS1591</NoWarn>
		<DefaultPathTokenToIgnore>$(IgnorePathTokens) Microsoft.Azure.KeyVault.Samples</DefaultPathTokenToIgnore>
		<BuildWideDebugTrace Condition=" '$(DebugTrace)' == '' ">false</BuildWideDebugTrace>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
	</PropertyGroup>

	<!-- <PropertyGroup Condition=" '$(Configuration)' == 'Debug' AND '$(DelaySignForInternalsVisible)' == 'true' ">
		There are certain projects that needs internals visible for test purpose
		<SignAssembly>true</SignAssembly>
		<DelaySign>true</DelaySign>
		<AssemblyOriginatorKeyFile>$(LibraryToolsFolder)\MSSharedLibKey.snk</AssemblyOriginatorKeyFile>
	</PropertyGroup>
	<PropertyGroup>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	</PropertyGroup>
	
	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		<SignAssembly>true</SignAssembly>
		<DelaySign>true</DelaySign>
		<AssemblyOriginatorKeyFile>$(LibraryToolsFolder)\MSSharedLibKey.snk</AssemblyOriginatorKeyFile>
	</PropertyGroup> -->

  <PropertyGroup>
		<SignManifestRootDir>$(BinariesFolder)\signManifest</SignManifestRootDir>
		<SignServiceDir>$(SignManifestRootDir)\signService</SignServiceDir>
		<SignClientConfigDir>$(SignManifestRootDir)\signClientConfig</SignClientConfigDir>
		<AuthenticodeSign>false</AuthenticodeSign>
  </PropertyGroup>
  <PropertyGroup>
		<PackageRootDir>$(BuiltPackageOutputDir)</PackageRootDir>
		<UnsignedPackageRootDir>$(PackageRootDir)\unsigned</UnsignedPackageRootDir>
		<SignedPackageRootDir>$(PackageRootDir)\signed</SignedPackageRootDir>
  </PropertyGroup>
  
  <PropertyGroup>	
		<BuildNameLabel>DesktopBuild</BuildNameLabel>
  </PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)'=='net452' ">
		<DefineConstants>net452;FullNetFx;LEGACY</DefineConstants>
		<OutputPath>bin\$(Configuration)\</OutputPath>
		<!-- <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile> -->
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.4' ">
		<DefineConstants>netstandard14</DefineConstants>
		<OutputPath>bin\$(Configuration)\</OutputPath>
		<!-- <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile> -->
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp1.1' ">
		<DefineConstants>netcoreapp11</DefineConstants>
		<OutputPath>bin\$(Configuration)\</OutputPath>
		<!-- <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile> -->
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.0' ">
		<DefineConstants>netcoreapp20</DefineConstants>
		<OutputPath>bin\$(Configuration)\</OutputPath>
		<!-- <DocumentationFile>bin\$(Configuration)\$(TargetFrameworks)\$(AssemblyName).xml</DocumentationFile> -->
	</PropertyGroup>

	<Choose>
		<When Condition=" '$(BuildingInsideVisualStudio)' == 'true' ">
		  <PropertyGroup>
			<AddProjectReferenceForDebuggingPurpose>true</AddProjectReferenceForDebuggingPurpose>
			<Scope Condition=" '$(Scope)' == 'All' ">IdeScope</Scope>
			<CmdLineBuild>false</CmdLineBuild>
			<DefineConstants>$(DefineConstants);DebugInVS</DefineConstants>
		  </PropertyGroup>
		</When>
		<Otherwise>
		  <PropertyGroup>
			<AddNugetReferenceForCIandCmdlineBuild>true</AddNugetReferenceForCIandCmdlineBuild>
			<CmdLineBuild>true</CmdLineBuild>
		  </PropertyGroup>
		</Otherwise>
	</Choose>
</Project>