// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Azure Cosmos DB Role Assignment
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SqlRoleAssignmentGetResults : ARMProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the SqlRoleAssignmentGetResults
        /// class.
        /// </summary>
        public SqlRoleAssignmentGetResults()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlRoleAssignmentGetResults
        /// class.
        /// </summary>
        /// <param name="id">The unique resource identifier of the database
        /// account.</param>
        /// <param name="name">The name of the database account.</param>
        /// <param name="type">The type of Azure resource.</param>
        /// <param name="roleDefinitionId">The unique identifier for the
        /// associated Role Definition.</param>
        /// <param name="scope">The data plane resource path for which access
        /// is being granted through this Role Assignment.</param>
        /// <param name="principalId">The unique identifier for the associated
        /// AAD principal in the AAD graph to which access is being granted
        /// through this Role Assignment. Tenant ID for the principal is
        /// inferred using the tenant associated with the subscription.</param>
        public SqlRoleAssignmentGetResults(string id = default(string), string name = default(string), string type = default(string), string roleDefinitionId = default(string), string scope = default(string), string principalId = default(string))
            : base(id, name, type)
        {
            RoleDefinitionId = roleDefinitionId;
            Scope = scope;
            PrincipalId = principalId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique identifier for the associated Role
        /// Definition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.roleDefinitionId")]
        public string RoleDefinitionId { get; set; }

        /// <summary>
        /// Gets or sets the data plane resource path for which access is being
        /// granted through this Role Assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for the associated AAD principal
        /// in the AAD graph to which access is being granted through this Role
        /// Assignment. Tenant ID for the principal is inferred using the
        /// tenant associated with the subscription.
        /// </summary>
        [JsonProperty(PropertyName = "properties.principalId")]
        public string PrincipalId { get; set; }

    }
}
