// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Reservation purchase details
    /// </summary>
    public partial class ReservationToPurchaseExchange
    {
        /// <summary>
        /// Initializes a new instance of the ReservationToPurchaseExchange
        /// class.
        /// </summary>
        public ReservationToPurchaseExchange()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationToPurchaseExchange
        /// class.
        /// </summary>
        /// <param name="reservationOrderId">Fully qualified id of the
        /// ReservationOrder being purchased</param>
        /// <param name="reservationId">Fully qualified id of the Reservation
        /// being purchased. This value is only guaranteed to be non-null if
        /// the purchase is successful.</param>
        /// <param name="status">Possible values include: 'Succeeded',
        /// 'Failed', 'Cancelled', 'Pending'</param>
        public ReservationToPurchaseExchange(string reservationOrderId = default(string), string reservationId = default(string), PurchaseRequest properties = default(PurchaseRequest), Price billingCurrencyTotal = default(Price), string status = default(string))
        {
            ReservationOrderId = reservationOrderId;
            ReservationId = reservationId;
            Properties = properties;
            BillingCurrencyTotal = billingCurrencyTotal;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets fully qualified id of the ReservationOrder being
        /// purchased
        /// </summary>
        [JsonProperty(PropertyName = "reservationOrderId")]
        public string ReservationOrderId { get; set; }

        /// <summary>
        /// Gets or sets fully qualified id of the Reservation being purchased.
        /// This value is only guaranteed to be non-null if the purchase is
        /// successful.
        /// </summary>
        [JsonProperty(PropertyName = "reservationId")]
        public string ReservationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public PurchaseRequest Properties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billingCurrencyTotal")]
        public Price BillingCurrencyTotal { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Succeeded', 'Failed',
        /// 'Cancelled', 'Pending'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

    }
}
