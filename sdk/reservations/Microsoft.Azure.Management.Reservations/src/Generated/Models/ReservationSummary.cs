// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The roll up count summary of reservations in each state
    /// </summary>
    public partial class ReservationSummary
    {
        /// <summary>
        /// Initializes a new instance of the ReservationSummary class.
        /// </summary>
        public ReservationSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationSummary class.
        /// </summary>
        /// <param name="succeededCount">The number of reservation in Succeeded
        /// state</param>
        /// <param name="failedCount">The number of reservation in Failed
        /// state</param>
        /// <param name="expiringCount">The number of reservation in Expiring
        /// state</param>
        /// <param name="expiredCount">The number of reservation in Expired
        /// state</param>
        /// <param name="pendingCount">The number of reservation in Pending
        /// state</param>
        /// <param name="cancelledCount">The number of reservation in Cancelled
        /// state</param>
        /// <param name="processingCount">The number of reservation in
        /// Processing state</param>
        public ReservationSummary(double? succeededCount = default(double?), double? failedCount = default(double?), double? expiringCount = default(double?), double? expiredCount = default(double?), double? pendingCount = default(double?), double? cancelledCount = default(double?), double? processingCount = default(double?))
        {
            SucceededCount = succeededCount;
            FailedCount = failedCount;
            ExpiringCount = expiringCount;
            ExpiredCount = expiredCount;
            PendingCount = pendingCount;
            CancelledCount = cancelledCount;
            ProcessingCount = processingCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the number of reservation in Succeeded state
        /// </summary>
        [JsonProperty(PropertyName = "succeededCount")]
        public double? SucceededCount { get; private set; }

        /// <summary>
        /// Gets the number of reservation in Failed state
        /// </summary>
        [JsonProperty(PropertyName = "failedCount")]
        public double? FailedCount { get; private set; }

        /// <summary>
        /// Gets the number of reservation in Expiring state
        /// </summary>
        [JsonProperty(PropertyName = "expiringCount")]
        public double? ExpiringCount { get; private set; }

        /// <summary>
        /// Gets the number of reservation in Expired state
        /// </summary>
        [JsonProperty(PropertyName = "expiredCount")]
        public double? ExpiredCount { get; private set; }

        /// <summary>
        /// Gets the number of reservation in Pending state
        /// </summary>
        [JsonProperty(PropertyName = "pendingCount")]
        public double? PendingCount { get; private set; }

        /// <summary>
        /// Gets the number of reservation in Cancelled state
        /// </summary>
        [JsonProperty(PropertyName = "cancelledCount")]
        public double? CancelledCount { get; private set; }

        /// <summary>
        /// Gets the number of reservation in Processing state
        /// </summary>
        [JsonProperty(PropertyName = "processingCount")]
        public double? ProcessingCount { get; private set; }

    }
}
