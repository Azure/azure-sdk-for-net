// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The definition of the reservation.
    /// </summary>
    public partial class ReservationResponse : IResource
    {
        /// <summary>
        /// Initializes a new instance of the ReservationResponse class.
        /// </summary>
        public ReservationResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationResponse class.
        /// </summary>
        /// <param name="location">The Azure Region where the reserved resource
        /// lives.</param>
        /// <param name="id">Identifier of the reservation</param>
        /// <param name="name">Name of the reservation</param>
        /// <param name="sku">The sku information associated to this
        /// reservation </param>
        /// <param name="properties">The properties associated to this
        /// reservation </param>
        /// <param name="type">Type of resource.
        /// "Microsoft.Capacity/reservationOrders/reservations"</param>
        /// <param name="kind">Resource Provider type to be reserved. Possible
        /// values include: 'Microsoft.Compute'</param>
        public ReservationResponse(string location = default(string), int? etag = default(int?), string id = default(string), string name = default(string), SkuName sku = default(SkuName), ReservationsProperties properties = default(ReservationsProperties), string type = default(string), Kind? kind = default(Kind?), SystemData systemData = default(SystemData))
        {
            Location = location;
            Etag = etag;
            Id = id;
            Name = name;
            Sku = sku;
            Properties = properties;
            Type = type;
            Kind = kind;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Azure Region where the reserved resource lives.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public int? Etag { get; set; }

        /// <summary>
        /// Gets identifier of the reservation
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets name of the reservation
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the sku information associated to this reservation
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public SkuName Sku { get; set; }

        /// <summary>
        /// Gets or sets the properties associated to this reservation
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public ReservationsProperties Properties { get; set; }

        /// <summary>
        /// Gets type of resource.
        /// "Microsoft.Capacity/reservationOrders/reservations"
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets resource Provider type to be reserved. Possible values
        /// include: 'Microsoft.Compute'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public Kind? Kind { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
