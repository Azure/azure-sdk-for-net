// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The aggregate values of reservation utilization
    /// </summary>
    public partial class ReservationUtilizationAggregates
    {
        /// <summary>
        /// Initializes a new instance of the ReservationUtilizationAggregates
        /// class.
        /// </summary>
        public ReservationUtilizationAggregates()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationUtilizationAggregates
        /// class.
        /// </summary>
        /// <param name="grain">The grain of the aggregate</param>
        /// <param name="grainUnit">The grain unit of the aggregate</param>
        /// <param name="value">The aggregate value</param>
        /// <param name="valueUnit">The aggregate value unit</param>
        public ReservationUtilizationAggregates(double? grain = default(double?), string grainUnit = default(string), double? value = default(double?), string valueUnit = default(string))
        {
            Grain = grain;
            GrainUnit = grainUnit;
            Value = value;
            ValueUnit = valueUnit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the grain of the aggregate
        /// </summary>
        [JsonProperty(PropertyName = "grain")]
        public double? Grain { get; private set; }

        /// <summary>
        /// Gets the grain unit of the aggregate
        /// </summary>
        [JsonProperty(PropertyName = "grainUnit")]
        public string GrainUnit { get; private set; }

        /// <summary>
        /// Gets the aggregate value
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public double? Value { get; private set; }

        /// <summary>
        /// Gets the aggregate value unit
        /// </summary>
        [JsonProperty(PropertyName = "valueUnit")]
        public string ValueUnit { get; private set; }

    }
}
