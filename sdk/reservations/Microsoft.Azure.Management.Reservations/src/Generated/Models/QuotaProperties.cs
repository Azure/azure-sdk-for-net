// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Quota properties for the resource.
    /// </summary>
    public partial class QuotaProperties
    {
        /// <summary>
        /// Initializes a new instance of the QuotaProperties class.
        /// </summary>
        public QuotaProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QuotaProperties class.
        /// </summary>
        /// <param name="limit">Quota properties.</param>
        /// <param name="currentValue">Current usage value for the
        /// resource.</param>
        /// <param name="unit"> The limit units, such as **count** and
        /// **bytes**. Use the unit field provided in the response of the GET
        /// quota operation.</param>
        /// <param name="name">Name of the resource provide by the resource
        /// provider. Use this property for quotaRequests resource
        /// operations.</param>
        /// <param name="resourceType">The name of the resource type.</param>
        /// <param name="quotaPeriod">The time period over which the quota
        /// usage values are summarized. For example, P1D (per one day), PT1M
        /// (per one minute), and PT1S (per one second). This parameter is
        /// optional because, for some resources such as compute, the time
        /// period is irrelevant.</param>
        /// <param name="properties">Additional properties for the specified
        /// resource provider.</param>
        public QuotaProperties(int? limit = default(int?), int? currentValue = default(int?), string unit = default(string), ResourceName name = default(ResourceName), object resourceType = default(object), string quotaPeriod = default(string), object properties = default(object))
        {
            Limit = limit;
            CurrentValue = currentValue;
            Unit = unit;
            Name = name;
            ResourceType = resourceType;
            QuotaPeriod = quotaPeriod;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets quota properties.
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Gets current usage value for the resource.
        /// </summary>
        [JsonProperty(PropertyName = "currentValue")]
        public int? CurrentValue { get; private set; }

        /// <summary>
        /// Gets or sets  The limit units, such as **count** and **bytes**. Use
        /// the unit field provided in the response of the GET quota operation.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets name of the resource provide by the resource provider.
        /// Use this property for quotaRequests resource operations.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public ResourceName Name { get; set; }

        /// <summary>
        /// Gets or sets the name of the resource type.
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public object ResourceType { get; set; }

        /// <summary>
        /// Gets the time period over which the quota usage values are
        /// summarized. For example, P1D (per one day), PT1M (per one minute),
        /// and PT1S (per one second). This parameter is optional because, for
        /// some resources such as compute, the time period is irrelevant.
        /// </summary>
        [JsonProperty(PropertyName = "quotaPeriod")]
        public string QuotaPeriod { get; private set; }

        /// <summary>
        /// Gets or sets additional properties for the specified resource
        /// provider.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public object Properties { get; set; }

    }
}
