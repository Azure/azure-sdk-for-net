// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Quota submit request response
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class QuotaRequestOneResourceSubmitResponse : IResource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// QuotaRequestOneResourceSubmitResponse class.
        /// </summary>
        public QuotaRequestOneResourceSubmitResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// QuotaRequestOneResourceSubmitResponse class.
        /// </summary>
        /// <param name="id">The quota request Id.</param>
        /// <param name="name">The name of the quota request.</param>
        /// <param name="type">Type of resource.
        /// "Microsoft.Capacity/ServiceLimits"</param>
        /// <param name="provisioningState">The quota request status.</param>
        /// <param name="message">User friendly status message.</param>
        /// <param name="requestSubmitTime">The quota request submit time. The
        /// date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as
        /// specified by the ISO 8601 standard.</param>
        /// <param name="limit">The quota limit.</param>
        /// <param name="currentValue">The current resource usages
        /// information.</param>
        /// <param name="unit"> The units of the limit, such as - Count, Bytes,
        /// etc. Use the unit field provided in the Get quota response.</param>
        /// <param name="name1">Name of the resource provide by the resource
        /// Provider. Please use this name property for quotaRequests.</param>
        /// <param name="resourceType">The Resource Type Name.</param>
        /// <param name="quotaPeriod">The quota period over which the usage
        /// values are summarized, such as - P1D (Per one day), PT1M (Per one
        /// minute), PT1S (Per one second). This parameter is optional because,
        /// for some resources like compute, the period doesn’t matter.</param>
        /// <param name="properties">Additional properties for the specific
        /// resource provider.</param>
        public QuotaRequestOneResourceSubmitResponse(string id = default(string), string name = default(string), string type = default(string), object provisioningState = default(object), string message = default(string), System.DateTime? requestSubmitTime = default(System.DateTime?), int? limit = default(int?), int? currentValue = default(int?), string unit = default(string), CurrentQuotaLimitBaseName name1 = default(CurrentQuotaLimitBaseName), object resourceType = default(object), string quotaPeriod = default(string), object properties = default(object))
        {
            Id = id;
            Name = name;
            Type = type;
            ProvisioningState = provisioningState;
            Message = message;
            RequestSubmitTime = requestSubmitTime;
            Limit = limit;
            CurrentValue = currentValue;
            Unit = unit;
            Name1 = name1;
            ResourceType = resourceType;
            QuotaPeriod = quotaPeriod;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the quota request Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the quota request.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets type of resource. "Microsoft.Capacity/ServiceLimits"
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets the quota request status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public object ProvisioningState { get; private set; }

        /// <summary>
        /// Gets user friendly status message.
        /// </summary>
        [JsonProperty(PropertyName = "properties.message")]
        public string Message { get; private set; }

        /// <summary>
        /// Gets the quota request submit time. The date conforms to the
        /// following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
        /// standard.
        /// </summary>
        [JsonProperty(PropertyName = "properties.requestSubmitTime")]
        public System.DateTime? RequestSubmitTime { get; private set; }

        /// <summary>
        /// Gets or sets the quota limit.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Gets the current resource usages information.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.currentValue")]
        public int? CurrentValue { get; private set; }

        /// <summary>
        /// Gets or sets  The units of the limit, such as - Count, Bytes, etc.
        /// Use the unit field provided in the Get quota response.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets name of the resource provide by the resource Provider.
        /// Please use this name property for quotaRequests.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.name")]
        public CurrentQuotaLimitBaseName Name1 { get; set; }

        /// <summary>
        /// Gets or sets the Resource Type Name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.resourceType")]
        public object ResourceType { get; set; }

        /// <summary>
        /// Gets the quota period over which the usage values are summarized,
        /// such as - P1D (Per one day), PT1M (Per one minute), PT1S (Per one
        /// second). This parameter is optional because, for some resources
        /// like compute, the period doesn’t matter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.quotaPeriod")]
        public string QuotaPeriod { get; private set; }

        /// <summary>
        /// Gets or sets additional properties for the specific resource
        /// provider.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties.properties")]
        public object Properties { get; set; }

    }
}
