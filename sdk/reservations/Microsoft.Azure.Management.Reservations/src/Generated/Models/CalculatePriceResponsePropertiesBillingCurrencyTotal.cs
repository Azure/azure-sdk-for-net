// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Currency and amount that customer will be charged in customer's local
    /// currency. Tax is not included.
    /// </summary>
    public partial class CalculatePriceResponsePropertiesBillingCurrencyTotal
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CalculatePriceResponsePropertiesBillingCurrencyTotal class.
        /// </summary>
        public CalculatePriceResponsePropertiesBillingCurrencyTotal()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CalculatePriceResponsePropertiesBillingCurrencyTotal class.
        /// </summary>
        /// <param name="currencyCode">The ISO 4217 3-letter currency code for
        /// the currency used by this purchase record.</param>
        /// <param name="amount">Amount in pricing currency. Tax is not
        /// included.</param>
        public CalculatePriceResponsePropertiesBillingCurrencyTotal(string currencyCode = default(string), double? amount = default(double?))
        {
            CurrencyCode = currencyCode;
            Amount = amount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ISO 4217 3-letter currency code for the currency
        /// used by this purchase record.
        /// </summary>
        [JsonProperty(PropertyName = "currencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Gets or sets amount in pricing currency. Tax is not included.
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

    }
}
