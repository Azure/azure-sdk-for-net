// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Rest.Serialization.JsonTransformation]
    public partial class Patch
    {
        /// <summary>
        /// Initializes a new instance of the Patch class.
        /// </summary>
        public Patch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Patch class.
        /// </summary>
        /// <param name="appliedScopeType">Possible values include: 'Single',
        /// 'Shared'</param>
        /// <param name="instanceFlexibility">Possible values include: 'On',
        /// 'Off'</param>
        /// <param name="name">Name of the Reservation</param>
        public Patch(string appliedScopeType = default(string), IList<string> appliedScopes = default(IList<string>), string instanceFlexibility = default(string), string name = default(string), bool? renew = default(bool?), PatchPropertiesRenewProperties renewProperties = default(PatchPropertiesRenewProperties))
        {
            AppliedScopeType = appliedScopeType;
            AppliedScopes = appliedScopes;
            InstanceFlexibility = instanceFlexibility;
            Name = name;
            Renew = renew;
            RenewProperties = renewProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Single', 'Shared'
        /// </summary>
        [JsonProperty(PropertyName = "properties.appliedScopeType")]
        public string AppliedScopeType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.appliedScopes")]
        public IList<string> AppliedScopes { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'On', 'Off'
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceFlexibility")]
        public string InstanceFlexibility { get; set; }

        /// <summary>
        /// Gets or sets name of the Reservation
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.renew")]
        public bool? Renew { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.renewProperties")]
        public PatchPropertiesRenewProperties RenewProperties { get; set; }

    }
}
