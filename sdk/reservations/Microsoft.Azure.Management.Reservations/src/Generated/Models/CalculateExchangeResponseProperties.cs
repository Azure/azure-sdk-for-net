// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// CalculateExchange response properties
    /// </summary>
    public partial class CalculateExchangeResponseProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CalculateExchangeResponseProperties class.
        /// </summary>
        public CalculateExchangeResponseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CalculateExchangeResponseProperties class.
        /// </summary>
        /// <param name="sessionId">Exchange session identifier</param>
        /// <param name="reservationsToPurchase">Details of the reservations
        /// being purchased</param>
        /// <param name="reservationsToExchange">Details of the reservations
        /// being returned</param>
        public CalculateExchangeResponseProperties(string sessionId = default(string), Price netPayable = default(Price), Price refundsTotal = default(Price), Price purchasesTotal = default(Price), IList<ReservationToPurchaseCalculateExchange> reservationsToPurchase = default(IList<ReservationToPurchaseCalculateExchange>), IList<ReservationToExchange> reservationsToExchange = default(IList<ReservationToExchange>), ExchangePolicyErrors policyResult = default(ExchangePolicyErrors))
        {
            SessionId = sessionId;
            NetPayable = netPayable;
            RefundsTotal = refundsTotal;
            PurchasesTotal = purchasesTotal;
            ReservationsToPurchase = reservationsToPurchase;
            ReservationsToExchange = reservationsToExchange;
            PolicyResult = policyResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets exchange session identifier
        /// </summary>
        [JsonProperty(PropertyName = "sessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "netPayable")]
        public Price NetPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "refundsTotal")]
        public Price RefundsTotal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchasesTotal")]
        public Price PurchasesTotal { get; set; }

        /// <summary>
        /// Gets or sets details of the reservations being purchased
        /// </summary>
        [JsonProperty(PropertyName = "reservationsToPurchase")]
        public IList<ReservationToPurchaseCalculateExchange> ReservationsToPurchase { get; set; }

        /// <summary>
        /// Gets or sets details of the reservations being returned
        /// </summary>
        [JsonProperty(PropertyName = "reservationsToExchange")]
        public IList<ReservationToExchange> ReservationsToExchange { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "policyResult")]
        public ExchangePolicyErrors PolicyResult { get; set; }

    }
}
