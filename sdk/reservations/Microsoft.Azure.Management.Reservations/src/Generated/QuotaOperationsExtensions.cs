// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for QuotaOperations.
    /// </summary>
    public static partial class QuotaOperationsExtensions
    {
            /// <summary>
            /// Get the current quota (service limit) and usage of a resource. You can use
            /// the response from the GET operation to submit quota update request.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            public static CurrentQuotaLimitBase Get(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName)
            {
                return operations.GetAsync(subscriptionId, providerId, location, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the current quota (service limit) and usage of a resource. You can use
            /// the response from the GET operation to submit quota update request.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CurrentQuotaLimitBase> GetAsync(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, providerId, location, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update the quota (service limits) of a resource to the requested
            /// value.
            /// Steps:
            ///
            /// 1. Make the Get request to get the quota information for specific resource.
            ///
            /// 2. To increase the quota, update the limit field in the response from Get
            /// request to new value.
            ///
            /// 3. Submit the JSON to the quota request API to update the quota.
            /// The Create quota request may be constructed as follows. The PUT operation
            /// can be used to update the quota.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Quota requests payload.
            /// </param>
            public static object CreateOrUpdate(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest)
            {
                return operations.CreateOrUpdateAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update the quota (service limits) of a resource to the requested
            /// value.
            /// Steps:
            ///
            /// 1. Make the Get request to get the quota information for specific resource.
            ///
            /// 2. To increase the quota, update the limit field in the response from Get
            /// request to new value.
            ///
            /// 3. Submit the JSON to the quota request API to update the quota.
            /// The Create quota request may be constructed as follows. The PUT operation
            /// can be used to update the quota.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Quota requests payload.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CreateOrUpdateAsync(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the quota (service limits) of this resource to the requested value.
            ///
            /// • To get the quota information for specific resource, send a GET request.
            ///
            /// • To increase the quota, update the limit field from the GET response to a
            /// new value.
            ///
            /// • To update the quota value, submit the JSON response to the quota request
            /// API to update the quota.
            /// • To update the quota. use the PATCH operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Payload for the quota request.
            /// </param>
            public static object Update(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest)
            {
                return operations.UpdateAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the quota (service limits) of this resource to the requested value.
            ///
            /// • To get the quota information for specific resource, send a GET request.
            ///
            /// • To increase the quota, update the limit field from the GET response to a
            /// new value.
            ///
            /// • To update the quota value, submit the JSON response to the quota request
            /// API to update the quota.
            /// • To update the quota. use the PATCH operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Payload for the quota request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> UpdateAsync(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of current quotas (service limits) and usage for all resources.
            /// The response from the list quota operation can be leveraged to request
            /// quota updates.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            public static IPage<CurrentQuotaLimitBase> List(this IQuotaOperations operations, string subscriptionId, string providerId, string location)
            {
                return operations.ListAsync(subscriptionId, providerId, location).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of current quotas (service limits) and usage for all resources.
            /// The response from the list quota operation can be leveraged to request
            /// quota updates.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<CurrentQuotaLimitBase>> ListAsync(this IQuotaOperations operations, string subscriptionId, string providerId, string location, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(subscriptionId, providerId, location, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update the quota (service limits) of a resource to the requested
            /// value.
            /// Steps:
            ///
            /// 1. Make the Get request to get the quota information for specific resource.
            ///
            /// 2. To increase the quota, update the limit field in the response from Get
            /// request to new value.
            ///
            /// 3. Submit the JSON to the quota request API to update the quota.
            /// The Create quota request may be constructed as follows. The PUT operation
            /// can be used to update the quota.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Quota requests payload.
            /// </param>
            public static object BeginCreateOrUpdate(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest)
            {
                return operations.BeginCreateOrUpdateAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update the quota (service limits) of a resource to the requested
            /// value.
            /// Steps:
            ///
            /// 1. Make the Get request to get the quota information for specific resource.
            ///
            /// 2. To increase the quota, update the limit field in the response from Get
            /// request to new value.
            ///
            /// 3. Submit the JSON to the quota request API to update the quota.
            /// The Create quota request may be constructed as follows. The PUT operation
            /// can be used to update the quota.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Quota requests payload.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> BeginCreateOrUpdateAsync(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the quota (service limits) of this resource to the requested value.
            ///
            /// • To get the quota information for specific resource, send a GET request.
            ///
            /// • To increase the quota, update the limit field from the GET response to a
            /// new value.
            ///
            /// • To update the quota value, submit the JSON response to the quota request
            /// API to update the quota.
            /// • To update the quota. use the PATCH operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Payload for the quota request.
            /// </param>
            public static object BeginUpdate(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest)
            {
                return operations.BeginUpdateAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the quota (service limits) of this resource to the requested value.
            ///
            /// • To get the quota information for specific resource, send a GET request.
            ///
            /// • To increase the quota, update the limit field from the GET response to a
            /// new value.
            ///
            /// • To update the quota value, submit the JSON response to the quota request
            /// API to update the quota.
            /// • To update the quota. use the PATCH operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='resourceName'>
            /// The resource name for a resource provider, such as SKU name for
            /// Microsoft.Compute, Sku or TotalLowPriorityCores for
            /// Microsoft.MachineLearningServices
            /// </param>
            /// <param name='createQuotaRequest'>
            /// Payload for the quota request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> BeginUpdateAsync(this IQuotaOperations operations, string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(subscriptionId, providerId, location, resourceName, createQuotaRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of current quotas (service limits) and usage for all resources.
            /// The response from the list quota operation can be leveraged to request
            /// quota updates.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<CurrentQuotaLimitBase> ListNext(this IQuotaOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of current quotas (service limits) and usage for all resources.
            /// The response from the list quota operation can be leveraged to request
            /// quota updates.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<CurrentQuotaLimitBase>> ListNextAsync(this IQuotaOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
