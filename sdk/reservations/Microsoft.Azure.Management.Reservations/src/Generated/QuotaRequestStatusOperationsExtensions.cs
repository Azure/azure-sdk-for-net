// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for QuotaRequestStatusOperations.
    /// </summary>
    public static partial class QuotaRequestStatusOperationsExtensions
    {
            /// <summary>
            /// For the specified Azure region (location), get the details and status of
            /// the quota request by the quota request ID for the resources of the resource
            /// provider. The PUT request for the quota (service limit) returns a response
            /// with the requestId parameter.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='id'>
            /// Quota Request ID.
            /// </param>
            public static QuotaRequestDetails Get(this IQuotaRequestStatusOperations operations, string subscriptionId, string providerId, string location, string id)
            {
                return operations.GetAsync(subscriptionId, providerId, location, id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// For the specified Azure region (location), get the details and status of
            /// the quota request by the quota request ID for the resources of the resource
            /// provider. The PUT request for the quota (service limit) returns a response
            /// with the requestId parameter.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='id'>
            /// Quota Request ID.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<QuotaRequestDetails> GetAsync(this IQuotaRequestStatusOperations operations, string subscriptionId, string providerId, string location, string id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, providerId, location, id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// For the specified Azure region (location), subscription, and resource
            /// provider, get the history of the quota requests for the past year. To
            /// select specific quota requests, use the oData filter.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='filter'>
            /// | Field                    | Supported operators
            /// |---------------------|------------------------
            ///
            /// |requestSubmitTime | ge, le, eq, gt, lt
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skiptoken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element includes a skiptoken parameter that specifies a starting
            /// point to use for subsequent calls.
            /// </param>
            public static IPage<QuotaRequestDetails> List(this IQuotaRequestStatusOperations operations, string subscriptionId, string providerId, string location, string filter = default(string), int? top = default(int?), string skiptoken = default(string))
            {
                return operations.ListAsync(subscriptionId, providerId, location, filter, top, skiptoken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// For the specified Azure region (location), subscription, and resource
            /// provider, get the history of the quota requests for the past year. To
            /// select specific quota requests, use the oData filter.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription ID.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource provider ID.
            /// </param>
            /// <param name='location'>
            /// Azure region.
            /// </param>
            /// <param name='filter'>
            /// | Field                    | Supported operators
            /// |---------------------|------------------------
            ///
            /// |requestSubmitTime | ge, le, eq, gt, lt
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skiptoken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element includes a skiptoken parameter that specifies a starting
            /// point to use for subsequent calls.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<QuotaRequestDetails>> ListAsync(this IQuotaRequestStatusOperations operations, string subscriptionId, string providerId, string location, string filter = default(string), int? top = default(int?), string skiptoken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(subscriptionId, providerId, location, filter, top, skiptoken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// For the specified Azure region (location), subscription, and resource
            /// provider, get the history of the quota requests for the past year. To
            /// select specific quota requests, use the oData filter.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<QuotaRequestDetails> ListNext(this IQuotaRequestStatusOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// For the specified Azure region (location), subscription, and resource
            /// provider, get the history of the quota requests for the past year. To
            /// select specific quota requests, use the oData filter.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<QuotaRequestDetails>> ListNextAsync(this IQuotaRequestStatusOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
