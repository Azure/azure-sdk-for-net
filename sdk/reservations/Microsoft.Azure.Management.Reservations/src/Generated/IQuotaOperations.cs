// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// QuotaOperations operations.
    /// </summary>
    public partial interface IQuotaOperations
    {
        /// <summary>
        /// Get the current quota (service limit) and usage of a resource. You
        /// can use the response from the GET operation to submit quota update
        /// request.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Azure subscription ID.
        /// </param>
        /// <param name='providerId'>
        /// Azure resource provider ID.
        /// </param>
        /// <param name='location'>
        /// Azure region.
        /// </param>
        /// <param name='resourceName'>
        /// The resource name for a resource provider, such as SKU name for
        /// Microsoft.Compute, Sku or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CurrentQuotaLimitBase,QuotaGetHeaders>> GetWithHttpMessagesAsync(string subscriptionId, string providerId, string location, string resourceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create or update the quota (service limits) of a resource to the
        /// requested value.
        /// Steps:
        ///
        /// 1. Make the Get request to get the quota information for specific
        /// resource.
        ///
        /// 2. To increase the quota, update the limit field in the response
        /// from Get request to new value.
        ///
        /// 3. Submit the JSON to the quota request API to update the quota.
        /// The Create quota request may be constructed as follows. The PUT
        /// operation can be used to update the quota.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Azure subscription ID.
        /// </param>
        /// <param name='providerId'>
        /// Azure resource provider ID.
        /// </param>
        /// <param name='location'>
        /// Azure region.
        /// </param>
        /// <param name='resourceName'>
        /// The resource name for a resource provider, such as SKU name for
        /// Microsoft.Compute, Sku or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// </param>
        /// <param name='createQuotaRequest'>
        /// Quota requests payload.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> CreateOrUpdateWithHttpMessagesAsync(string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the quota (service limits) of this resource to the requested
        /// value.
        ///
        /// • To get the quota information for specific resource, send a GET
        /// request.
        ///
        /// • To increase the quota, update the limit field from the GET
        /// response to a new value.
        ///
        /// • To update the quota value, submit the JSON response to the quota
        /// request API to update the quota.
        /// • To update the quota. use the PATCH operation.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Azure subscription ID.
        /// </param>
        /// <param name='providerId'>
        /// Azure resource provider ID.
        /// </param>
        /// <param name='location'>
        /// Azure region.
        /// </param>
        /// <param name='resourceName'>
        /// The resource name for a resource provider, such as SKU name for
        /// Microsoft.Compute, Sku or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// </param>
        /// <param name='createQuotaRequest'>
        /// Payload for the quota request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> UpdateWithHttpMessagesAsync(string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a list of current quotas (service limits) and usage for all
        /// resources. The response from the list quota operation can be
        /// leveraged to request quota updates.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Azure subscription ID.
        /// </param>
        /// <param name='providerId'>
        /// Azure resource provider ID.
        /// </param>
        /// <param name='location'>
        /// Azure region.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<CurrentQuotaLimitBase>,QuotaListHeaders>> ListWithHttpMessagesAsync(string subscriptionId, string providerId, string location, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create or update the quota (service limits) of a resource to the
        /// requested value.
        /// Steps:
        ///
        /// 1. Make the Get request to get the quota information for specific
        /// resource.
        ///
        /// 2. To increase the quota, update the limit field in the response
        /// from Get request to new value.
        ///
        /// 3. Submit the JSON to the quota request API to update the quota.
        /// The Create quota request may be constructed as follows. The PUT
        /// operation can be used to update the quota.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Azure subscription ID.
        /// </param>
        /// <param name='providerId'>
        /// Azure resource provider ID.
        /// </param>
        /// <param name='location'>
        /// Azure region.
        /// </param>
        /// <param name='resourceName'>
        /// The resource name for a resource provider, such as SKU name for
        /// Microsoft.Compute, Sku or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// </param>
        /// <param name='createQuotaRequest'>
        /// Quota requests payload.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> BeginCreateOrUpdateWithHttpMessagesAsync(string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the quota (service limits) of this resource to the requested
        /// value.
        ///
        /// • To get the quota information for specific resource, send a GET
        /// request.
        ///
        /// • To increase the quota, update the limit field from the GET
        /// response to a new value.
        ///
        /// • To update the quota value, submit the JSON response to the quota
        /// request API to update the quota.
        /// • To update the quota. use the PATCH operation.
        /// </summary>
        /// <param name='subscriptionId'>
        /// Azure subscription ID.
        /// </param>
        /// <param name='providerId'>
        /// Azure resource provider ID.
        /// </param>
        /// <param name='location'>
        /// Azure region.
        /// </param>
        /// <param name='resourceName'>
        /// The resource name for a resource provider, such as SKU name for
        /// Microsoft.Compute, Sku or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// </param>
        /// <param name='createQuotaRequest'>
        /// Payload for the quota request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> BeginUpdateWithHttpMessagesAsync(string subscriptionId, string providerId, string location, string resourceName, CurrentQuotaLimitBase createQuotaRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a list of current quotas (service limits) and usage for all
        /// resources. The response from the list quota operation can be
        /// leveraged to request quota updates.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<CurrentQuotaLimitBase>,QuotaListHeaders>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
