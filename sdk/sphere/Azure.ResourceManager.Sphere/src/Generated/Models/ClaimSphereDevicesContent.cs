// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Sphere.Models
{
    /// <summary>
    /// Request to the action call to bulk claim devices.
    /// Serialized Name: ClaimDevicesRequest
    /// </summary>
    public partial class ClaimSphereDevicesContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ClaimSphereDevicesContent"/>. </summary>
        /// <param name="deviceIdentifiers">
        /// Device identifiers of the devices to be claimed.
        /// Serialized Name: ClaimDevicesRequest.deviceIdentifiers
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="deviceIdentifiers"/> is null. </exception>
        public ClaimSphereDevicesContent(IEnumerable<string> deviceIdentifiers)
        {
            Argument.AssertNotNull(deviceIdentifiers, nameof(deviceIdentifiers));

            DeviceIdentifiers = deviceIdentifiers.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ClaimSphereDevicesContent"/>. </summary>
        /// <param name="deviceIdentifiers">
        /// Device identifiers of the devices to be claimed.
        /// Serialized Name: ClaimDevicesRequest.deviceIdentifiers
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ClaimSphereDevicesContent(IList<string> deviceIdentifiers, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DeviceIdentifiers = deviceIdentifiers;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ClaimSphereDevicesContent"/> for deserialization. </summary>
        internal ClaimSphereDevicesContent()
        {
        }

        /// <summary>
        /// Device identifiers of the devices to be claimed.
        /// Serialized Name: ClaimDevicesRequest.deviceIdentifiers
        /// </summary>
        public IList<string> DeviceIdentifiers { get; }
    }
}
