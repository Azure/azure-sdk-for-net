// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Sphere.Models
{
    /// <summary>
    /// Request of the action to create a signed device capability image
    /// Serialized Name: GenerateCapabilityImageRequest
    /// </summary>
    public partial class GenerateCapabilityImageContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="GenerateCapabilityImageContent"/>. </summary>
        /// <param name="capabilities">
        /// List of capabilities to create
        /// Serialized Name: GenerateCapabilityImageRequest.capabilities
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="capabilities"/> is null. </exception>
        public GenerateCapabilityImageContent(IEnumerable<SphereCapabilityType> capabilities)
        {
            Argument.AssertNotNull(capabilities, nameof(capabilities));

            Capabilities = capabilities.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="GenerateCapabilityImageContent"/>. </summary>
        /// <param name="capabilities">
        /// List of capabilities to create
        /// Serialized Name: GenerateCapabilityImageRequest.capabilities
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal GenerateCapabilityImageContent(IList<SphereCapabilityType> capabilities, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Capabilities = capabilities;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="GenerateCapabilityImageContent"/> for deserialization. </summary>
        internal GenerateCapabilityImageContent()
        {
        }

        /// <summary>
        /// List of capabilities to create
        /// Serialized Name: GenerateCapabilityImageRequest.capabilities
        /// </summary>
        public IList<SphereCapabilityType> Capabilities { get; }
    }
}
