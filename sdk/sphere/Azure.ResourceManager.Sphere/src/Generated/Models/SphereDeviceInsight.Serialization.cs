// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Sphere.Models
{
    public partial class SphereDeviceInsight
    {
        internal static SphereDeviceInsight DeserializeSphereDeviceInsight(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string deviceId = default;
            string description = default;
            DateTimeOffset startTimestampUtc = default;
            DateTimeOffset endTimestampUtc = default;
            string eventCategory = default;
            string eventClass = default;
            string eventType = default;
            int eventCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceId"u8))
                {
                    deviceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startTimestampUtc"u8))
                {
                    startTimestampUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endTimestampUtc"u8))
                {
                    endTimestampUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("eventCategory"u8))
                {
                    eventCategory = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eventClass"u8))
                {
                    eventClass = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eventType"u8))
                {
                    eventType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eventCount"u8))
                {
                    eventCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new SphereDeviceInsight(deviceId, description, startTimestampUtc, endTimestampUtc, eventCategory, eventClass, eventType, eventCount);
        }
    }
}
