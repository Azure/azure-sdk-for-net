// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Sphere.Models
{
    /// <summary>
    /// Paged collection of DeviceInsight items
    /// Serialized Name: PagedDeviceInsight
    /// </summary>
    internal partial class PagedDeviceInsight
    {
        /// <summary> Initializes a new instance of <see cref="PagedDeviceInsight"/>. </summary>
        /// <param name="value">
        /// The DeviceInsight items on this page
        /// Serialized Name: PagedDeviceInsight.value
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        internal PagedDeviceInsight(IEnumerable<SphereDeviceInsight> value)
        {
            Argument.AssertNotNull(value, nameof(value));

            Value = value.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="PagedDeviceInsight"/>. </summary>
        /// <param name="value">
        /// The DeviceInsight items on this page
        /// Serialized Name: PagedDeviceInsight.value
        /// </param>
        /// <param name="nextLink">
        /// The link to the next page of items
        /// Serialized Name: PagedDeviceInsight.nextLink
        /// </param>
        internal PagedDeviceInsight(IReadOnlyList<SphereDeviceInsight> value, Uri nextLink)
        {
            Value = value;
            NextLink = nextLink;
        }

        /// <summary>
        /// The DeviceInsight items on this page
        /// Serialized Name: PagedDeviceInsight.value
        /// </summary>
        public IReadOnlyList<SphereDeviceInsight> Value { get; }
        /// <summary>
        /// The link to the next page of items
        /// Serialized Name: PagedDeviceInsight.nextLink
        /// </summary>
        public Uri NextLink { get; }
    }
}
