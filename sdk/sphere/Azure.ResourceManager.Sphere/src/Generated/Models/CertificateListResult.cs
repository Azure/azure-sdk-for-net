// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Sphere;

namespace Azure.ResourceManager.Sphere.Models
{
    /// <summary>
    /// The response of a Certificate list operation.
    /// Serialized Name: CertificateListResult
    /// </summary>
    internal partial class CertificateListResult
    {
        /// <summary> Initializes a new instance of <see cref="CertificateListResult"/>. </summary>
        /// <param name="value">
        /// The Certificate items on this page
        /// Serialized Name: CertificateListResult.value
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        internal CertificateListResult(IEnumerable<SphereCertificateData> value)
        {
            Argument.AssertNotNull(value, nameof(value));

            Value = value.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="CertificateListResult"/>. </summary>
        /// <param name="value">
        /// The Certificate items on this page
        /// Serialized Name: CertificateListResult.value
        /// </param>
        /// <param name="nextLink">
        /// The link to the next page of items
        /// Serialized Name: CertificateListResult.nextLink
        /// </param>
        internal CertificateListResult(IReadOnlyList<SphereCertificateData> value, Uri nextLink)
        {
            Value = value;
            NextLink = nextLink;
        }

        /// <summary>
        /// The Certificate items on this page
        /// Serialized Name: CertificateListResult.value
        /// </summary>
        public IReadOnlyList<SphereCertificateData> Value { get; }
        /// <summary>
        /// The link to the next page of items
        /// Serialized Name: CertificateListResult.nextLink
        /// </summary>
        public Uri NextLink { get; }
    }
}
