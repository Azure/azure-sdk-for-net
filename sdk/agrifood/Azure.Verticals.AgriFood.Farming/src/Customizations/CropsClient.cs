// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.Verticals.AgriFood.Farming.Models;

namespace Azure.Verticals.AgriFood.Farming
{
    /// <summary> The Crops service client. </summary>
    public partial class CropsClient
    {

        /// <summary> Returns a paginated list of crop resources. </summary>
        /// <param name="options"> Options containing all optional parameters. <see cref="GetCropsOptions"/>. </param>
        /// <param name="cancellationToken"> The cancellation token. </param>
        public virtual AsyncPageable<FoodCrop> GetCropsValueAsync(GetCropsOptions options = null, CancellationToken cancellationToken = default)
        {
            AsyncPageable<BinaryData> pageableBinaryData = GetCropsAsync(options?.Phenotypes, options?.Ids, options?.Names, options?.PropertyFilters,
                options?.Statuses, options?.MinCreatedDateTime, options?.MaxCreatedDateTime, options?.MinLastModifiedDateTime, options?.MaxLastModifiedDateTime,
                options?.MaxPageSize, options?.SkipToken, new RequestContext{ CancellationToken = cancellationToken});

            return PageableHelpers.Select(pageableBinaryData, response => FoodCropListResponse.FromResponse(response).Value);
        }

        /// <summary> Returns a paginated list of crop resources. </summary>
        /// <param name="options"> Options containing all optional parameters. <see cref="GetCropsOptions"/>. </param>
        /// <param name="cancellationToken"> The cancellation token. </param>
        public virtual Pageable<FoodCrop> GetCropsValue(GetCropsOptions options = null, CancellationToken cancellationToken = default)
        {
            Pageable<BinaryData> pageableBinaryData = GetCrops(options?.Phenotypes, options?.Ids, options?.Names, options?.PropertyFilters,
                options?.Statuses, options?.MinCreatedDateTime, options?.MaxCreatedDateTime, options?.MinLastModifiedDateTime, options?.MaxLastModifiedDateTime,
                options?.MaxPageSize, options?.SkipToken, new RequestContext{ CancellationToken = cancellationToken});

            return PageableHelpers.Select(pageableBinaryData, response => FoodCropListResponse.FromResponse(response).Value);
        }
    }
}
