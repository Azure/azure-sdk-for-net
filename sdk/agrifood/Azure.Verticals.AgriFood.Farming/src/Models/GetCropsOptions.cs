// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Verticals.AgriFood.Farming.Models
{
    /// Option class containing all optional parameters to get crops request.
    public partial class GetCropsOptions
    {
        /// <Summary> Crop phenotypes of the resource. </Summary>
        public IEnumerable<string> Phenotypes { get; set; }
        /// <Summary> Ids of the resource. </Summary>
        public IEnumerable<string> Ids{ get; set;}
        /// <Summary> Names of the resource. </Summary>
        public IEnumerable<string> Names{ get; set;}
        /// <Summary>
        /// Filters on key-value pairs within the Properties object.
        /// eg. &quot;{testKey} eq {testValue}&quot;.
        /// </Summary>
        public IEnumerable<string> PropertyFilters {get; set;}
        /// <Summary> Statuses of the resource. </Summary>
        public IEnumerable<string> Statuses{ get; set;}
        /// <Summary> Minimum creation date of resource (inclusive). </Summary>
        public DateTimeOffset? MinCreatedDateTime{ get; set;}
        /// <Summary> Maximum creation date of resource (inclusive). </Summary>
        public DateTimeOffset? MaxCreatedDateTime{ get; set;}
        /// <Summary> Minimum last modified date of resource (inclusive). </Summary>
        public DateTimeOffset? MinLastModifiedDateTime{ get; set;}
        /// <Summary> Maximum last modified date of resource (inclusive). </Summary>
        public DateTimeOffset? MaxLastModifiedDateTime{ get; set;}
        /// <Summary>
        /// Maximum number of items needed (inclusive).
        /// Minimum = 10, Maximum = 1000, Default value = 50.
        /// </Summary>
        public int? MaxPageSize{ get; set;}
        /// <Summary> Skip token for getting next set of results. </Summary>
        public string SkipToken{ get; set;}

    }
}
