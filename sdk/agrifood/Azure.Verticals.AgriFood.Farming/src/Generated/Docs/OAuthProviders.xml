<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetOAuthProviderAsync(string,RequestContext)">
      <example>
This sample shows how to call GetOAuthProviderAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetOAuthProviderAsync("<oauthProviderId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetOAuthProviderAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetOAuthProviderAsync("<oauthProviderId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("appId").ToString());
Console.WriteLine(result.GetProperty("appSecret").ToString());
Console.WriteLine(result.GetProperty("apiKey").ToString());
Console.WriteLine(result.GetProperty("isProductionApp").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetOAuthProvider(string,RequestContext)">
      <example>
This sample shows how to call GetOAuthProvider and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = client.GetOAuthProvider("<oauthProviderId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetOAuthProvider with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = client.GetOAuthProvider("<oauthProviderId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("appId").ToString());
Console.WriteLine(result.GetProperty("appSecret").ToString());
Console.WriteLine(result.GetProperty("apiKey").ToString());
Console.WriteLine(result.GetProperty("isProductionApp").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateOrUpdateAsync("<oauthProviderId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    appId = "<appId>",
    appSecret = "<appSecret>",
    apiKey = "<apiKey>",
    isProductionApp = true,
    name = "<name>",
    description = "<description>",
    properties = new
    {
        key = new object(),
    },
});
Response response = await client.CreateOrUpdateAsync("<oauthProviderId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("appId").ToString());
Console.WriteLine(result.GetProperty("appSecret").ToString());
Console.WriteLine(result.GetProperty("apiKey").ToString());
Console.WriteLine(result.GetProperty("isProductionApp").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateOrUpdate("<oauthProviderId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

using RequestContent content = RequestContent.Create(new
{
    appId = "<appId>",
    appSecret = "<appSecret>",
    apiKey = "<apiKey>",
    isProductionApp = true,
    name = "<name>",
    description = "<description>",
    properties = new
    {
        key = new object(),
    },
});
Response response = client.CreateOrUpdate("<oauthProviderId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("appId").ToString());
Console.WriteLine(result.GetProperty("appSecret").ToString());
Console.WriteLine(result.GetProperty("apiKey").ToString());
Console.WriteLine(result.GetProperty("isProductionApp").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = await client.DeleteAsync("<oauthProviderId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = await client.DeleteAsync("<oauthProviderId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = client.Delete("<oauthProviderId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = client.Delete("<oauthProviderId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetCascadeDeleteJobDetailsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetCascadeDeleteJobDetailsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
]]></code>
This sample shows how to call GetCascadeDeleteJobDetailsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetCascadeDeleteJobDetails(string,RequestContext)">
      <example>
This sample shows how to call GetCascadeDeleteJobDetails and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = client.GetCascadeDeleteJobDetails("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
]]></code>
This sample shows how to call GetCascadeDeleteJobDetails with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Response response = client.GetCascadeDeleteJobDetails("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetOAuthProvidersAsync(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetOAuthProvidersAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetOAuthProvidersAsync(null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetOAuthProvidersAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetOAuthProvidersAsync(new string[] { "<providerIds>" }, new string[] { "<names>" }, new string[] { "<propertyFilters>" }, new string[] { "<statuses>" }, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("appId").ToString());
    Console.WriteLine(result.GetProperty("appSecret").ToString());
    Console.WriteLine(result.GetProperty("apiKey").ToString());
    Console.WriteLine(result.GetProperty("isProductionApp").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetOAuthProviders(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetOAuthProviders and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetOAuthProviders(null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetOAuthProviders with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetOAuthProviders(new string[] { "<providerIds>" }, new string[] { "<names>" }, new string[] { "<propertyFilters>" }, new string[] { "<statuses>" }, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("appId").ToString());
    Console.WriteLine(result.GetProperty("appSecret").ToString());
    Console.WriteLine(result.GetProperty("apiKey").ToString());
    Console.WriteLine(result.GetProperty("isProductionApp").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="CreateCascadeDeleteJobAsync(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call CreateCascadeDeleteJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<oauthProviderId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
]]></code>
This sample shows how to call CreateCascadeDeleteJobAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<oauthProviderId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateCascadeDeleteJob(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call CreateCascadeDeleteJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<oauthProviderId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
]]></code>
This sample shows how to call CreateCascadeDeleteJob with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
OAuthProviders client = new FarmBeatsClient(endpoint, credential).GetOAuthProvidersClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<oauthProviderId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("oauthProviderId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
  </members>
</doc>