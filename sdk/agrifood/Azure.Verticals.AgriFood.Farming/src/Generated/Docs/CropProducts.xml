<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetCropProductAsync(string,RequestContext)">
<example>
This sample shows how to call GetCropProductAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

Response response = await client.GetCropProductAsync("<cropProductId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cropIds")[0].ToString());
Console.WriteLine(result.GetProperty("brand").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("trait").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("treatments")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetCropProduct(string,RequestContext)">
<example>
This sample shows how to call GetCropProduct with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

Response response = client.GetCropProduct("<cropProductId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cropIds")[0].ToString());
Console.WriteLine(result.GetProperty("brand").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("trait").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("treatments")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

var data = new {};

Response response = await client.CreateOrUpdateAsync("<cropProductId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

var data = new {
    cropIds = new[] {
        "<String>"
    },
    brand = "<brand>",
    product = "<product>",
    trait = "<trait>",
    relativeMaturity = new {
        unit = "<unit>",
        value = 123.45d,
    },
    treatments = new[] {
        "<String>"
    },
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

Response response = await client.CreateOrUpdateAsync("<cropProductId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cropIds")[0].ToString());
Console.WriteLine(result.GetProperty("brand").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("trait").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("treatments")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

var data = new {};

Response response = client.CreateOrUpdate("<cropProductId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

var data = new {
    cropIds = new[] {
        "<String>"
    },
    brand = "<brand>",
    product = "<product>",
    trait = "<trait>",
    relativeMaturity = new {
        unit = "<unit>",
        value = 123.45d,
    },
    treatments = new[] {
        "<String>"
    },
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

Response response = client.CreateOrUpdate("<cropProductId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cropIds")[0].ToString());
Console.WriteLine(result.GetProperty("brand").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("trait").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("treatments")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

Response response = await client.DeleteAsync("<cropProductId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

Response response = client.Delete("<cropProductId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetCropProductsAsync(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetCropProductsAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

await foreach (var item in client.GetCropProductsAsync())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetCropProductsAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

await foreach (var item in client.GetCropProductsAsync(new String[]{"<cropIds>"}, new String[]{"<brands>"}, new String[]{"<products>"}, new String[]{"<traits>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cropIds")[0].ToString());
    Console.WriteLine(result.GetProperty("brand").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("trait").ToString());
    Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("treatments")[0].ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetCropProducts(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetCropProducts and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

foreach (var item in client.GetCropProducts())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetCropProducts with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetCropProductsClient("2022-11-01-preview");

foreach (var item in client.GetCropProducts(new String[]{"<cropIds>"}, new String[]{"<brands>"}, new String[]{"<products>"}, new String[]{"<traits>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cropIds")[0].ToString());
    Console.WriteLine(result.GetProperty("brand").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("trait").ToString());
    Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("relativeMaturity").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("treatments")[0].ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>