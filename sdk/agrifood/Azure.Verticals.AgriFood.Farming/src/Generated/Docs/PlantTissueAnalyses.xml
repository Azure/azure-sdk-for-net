<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetPlantTissueAnalysisAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetPlantTissueAnalysisAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

Response response = await client.GetPlantTissueAnalysisAsync("<partyId>", "<plantTissueAnalysisId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("cropProductId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
Console.WriteLine(result.GetProperty("growthStage").ToString());
Console.WriteLine(result.GetProperty("plantPart").ToString());
Console.WriteLine(result.GetProperty("plantPosition").ToString());
Console.WriteLine(result.GetProperty("plantAppearance").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetPlantTissueAnalysis(string,string,RequestContext)">
<example>
This sample shows how to call GetPlantTissueAnalysis with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

Response response = client.GetPlantTissueAnalysis("<partyId>", "<plantTissueAnalysisId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("cropProductId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
Console.WriteLine(result.GetProperty("growthStage").ToString());
Console.WriteLine(result.GetProperty("plantPart").ToString());
Console.WriteLine(result.GetProperty("plantPosition").ToString());
Console.WriteLine(result.GetProperty("plantAppearance").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

var data = new {};

Response response = await client.CreateOrUpdateAsync("<partyId>", "<plantTissueAnalysisId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

var data = new {
    fieldId = "<fieldId>",
    cropId = "<cropId>",
    cropProductId = "<cropProductId>",
    seasonId = "<seasonId>",
    plantingDateTime = "2022-05-10T18:57:31.2311892Z",
    growthStage = "<growthStage>",
    plantPart = "<plantPart>",
    plantPosition = "<plantPosition>",
    plantAppearance = "<plantAppearance>",
    sampleCollectionCondition = "<sampleCollectionCondition>",
    sampleCollectionDateTime = "2022-05-10T18:57:31.2311892Z",
    sampleReceivedDateTime = "2022-05-10T18:57:31.2311892Z",
    sampleTestResultDateTime = "2022-05-10T18:57:31.2311892Z",
    labDetails = new {
        code = "<code>",
        name = "<name>",
        description = "<description>",
        address = "<address>",
    },
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

Response response = await client.CreateOrUpdateAsync("<partyId>", "<plantTissueAnalysisId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("cropProductId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
Console.WriteLine(result.GetProperty("growthStage").ToString());
Console.WriteLine(result.GetProperty("plantPart").ToString());
Console.WriteLine(result.GetProperty("plantPosition").ToString());
Console.WriteLine(result.GetProperty("plantAppearance").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

var data = new {};

Response response = client.CreateOrUpdate("<partyId>", "<plantTissueAnalysisId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

var data = new {
    fieldId = "<fieldId>",
    cropId = "<cropId>",
    cropProductId = "<cropProductId>",
    seasonId = "<seasonId>",
    plantingDateTime = "2022-05-10T18:57:31.2311892Z",
    growthStage = "<growthStage>",
    plantPart = "<plantPart>",
    plantPosition = "<plantPosition>",
    plantAppearance = "<plantAppearance>",
    sampleCollectionCondition = "<sampleCollectionCondition>",
    sampleCollectionDateTime = "2022-05-10T18:57:31.2311892Z",
    sampleReceivedDateTime = "2022-05-10T18:57:31.2311892Z",
    sampleTestResultDateTime = "2022-05-10T18:57:31.2311892Z",
    labDetails = new {
        code = "<code>",
        name = "<name>",
        description = "<description>",
        address = "<address>",
    },
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

Response response = client.CreateOrUpdate("<partyId>", "<plantTissueAnalysisId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("cropProductId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
Console.WriteLine(result.GetProperty("growthStage").ToString());
Console.WriteLine(result.GetProperty("plantPart").ToString());
Console.WriteLine(result.GetProperty("plantPosition").ToString());
Console.WriteLine(result.GetProperty("plantAppearance").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

Response response = await client.DeleteAsync("<partyId>", "<plantTissueAnalysisId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

Response response = client.Delete("<partyId>", "<plantTissueAnalysisId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetCascadeDeleteJobDetailsAsync(string,RequestContext)">
<example>
This sample shows how to call GetCascadeDeleteJobDetailsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
    <member name="GetCascadeDeleteJobDetails(string,RequestContext)">
<example>
This sample shows how to call GetCascadeDeleteJobDetails with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

Response response = client.GetCascadeDeleteJobDetails("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
    <member name="GetPlantTissueAnalysesByPartyIdAsync(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetPlantTissueAnalysesByPartyIdAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

await foreach (var item in client.GetPlantTissueAnalysesByPartyIdAsync("<partyId>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetPlantTissueAnalysesByPartyIdAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

await foreach (var item in client.GetPlantTissueAnalysesByPartyIdAsync("<partyId>", new String[]{"<seasonIds>"}, new String[]{"<cropIds>"}, new String[]{"<cropProductsIds>"}, new String[]{"<fieldIds>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("cropProductId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
    Console.WriteLine(result.GetProperty("growthStage").ToString());
    Console.WriteLine(result.GetProperty("plantPart").ToString());
    Console.WriteLine(result.GetProperty("plantPosition").ToString());
    Console.WriteLine(result.GetProperty("plantAppearance").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
    Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetPlantTissueAnalysesByPartyId(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetPlantTissueAnalysesByPartyId with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

foreach (var item in client.GetPlantTissueAnalysesByPartyId("<partyId>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetPlantTissueAnalysesByPartyId with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

foreach (var item in client.GetPlantTissueAnalysesByPartyId("<partyId>", new String[]{"<seasonIds>"}, new String[]{"<cropIds>"}, new String[]{"<cropProductsIds>"}, new String[]{"<fieldIds>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("cropProductId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
    Console.WriteLine(result.GetProperty("growthStage").ToString());
    Console.WriteLine(result.GetProperty("plantPart").ToString());
    Console.WriteLine(result.GetProperty("plantPosition").ToString());
    Console.WriteLine(result.GetProperty("plantAppearance").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
    Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetPlantTissueAnalysesAsync(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetPlantTissueAnalysesAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

await foreach (var item in client.GetPlantTissueAnalysesAsync())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetPlantTissueAnalysesAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

await foreach (var item in client.GetPlantTissueAnalysesAsync(new String[]{"<seasonIds>"}, new String[]{"<cropIds>"}, new String[]{"<cropProductsIds>"}, new String[]{"<fieldIds>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("cropProductId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
    Console.WriteLine(result.GetProperty("growthStage").ToString());
    Console.WriteLine(result.GetProperty("plantPart").ToString());
    Console.WriteLine(result.GetProperty("plantPosition").ToString());
    Console.WriteLine(result.GetProperty("plantAppearance").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
    Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetPlantTissueAnalyses(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetPlantTissueAnalyses and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

foreach (var item in client.GetPlantTissueAnalyses())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetPlantTissueAnalyses with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

foreach (var item in client.GetPlantTissueAnalyses(new String[]{"<seasonIds>"}, new String[]{"<cropIds>"}, new String[]{"<cropProductsIds>"}, new String[]{"<fieldIds>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("cropProductId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("plantingDateTime").ToString());
    Console.WriteLine(result.GetProperty("growthStage").ToString());
    Console.WriteLine(result.GetProperty("plantPart").ToString());
    Console.WriteLine(result.GetProperty("plantPosition").ToString());
    Console.WriteLine(result.GetProperty("plantAppearance").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionCondition").ToString());
    Console.WriteLine(result.GetProperty("sampleCollectionDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleReceivedDateTime").ToString());
    Console.WriteLine(result.GetProperty("sampleTestResultDateTime").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("labDetails").GetProperty("address").ToString());
    Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="CreateCascadeDeleteJobAsync(WaitUntil,string,string,string,RequestContext)">
<example>
This sample shows how to call CreateCascadeDeleteJobAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

var operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<plantTissueAnalysisId>");

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
    <member name="CreateCascadeDeleteJob(WaitUntil,string,string,string,RequestContext)">
<example>
This sample shows how to call CreateCascadeDeleteJob with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetPlantTissueAnalysesClient("2022-11-01-preview");

var operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<plantTissueAnalysisId>");

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>