<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSeasonalFieldAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetSeasonalFieldAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

Response response = await client.GetSeasonalFieldAsync("<partyId>", "<seasonalFieldId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("farmId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetSeasonalField(string,string,RequestContext)">
<example>
This sample shows how to call GetSeasonalField with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

Response response = client.GetSeasonalField("<partyId>", "<seasonalFieldId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("farmId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

var data = new {};

Response response = await client.CreateOrUpdateAsync("<partyId>", "<seasonalFieldId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

var data = new {
    farmId = "<farmId>",
    fieldId = "<fieldId>",
    seasonId = "<seasonId>",
    cropProductIds = new[] {
        "<String>"
    },
    cropId = "<cropId>",
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

Response response = await client.CreateOrUpdateAsync("<partyId>", "<seasonalFieldId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("farmId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

var data = new {};

Response response = client.CreateOrUpdate("<partyId>", "<seasonalFieldId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

var data = new {
    farmId = "<farmId>",
    fieldId = "<fieldId>",
    seasonId = "<seasonId>",
    cropProductIds = new[] {
        "<String>"
    },
    cropId = "<cropId>",
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

Response response = client.CreateOrUpdate("<partyId>", "<seasonalFieldId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("farmId").ToString());
Console.WriteLine(result.GetProperty("fieldId").ToString());
Console.WriteLine(result.GetProperty("seasonId").ToString());
Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
Console.WriteLine(result.GetProperty("cropId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

Response response = await client.DeleteAsync("<partyId>", "<seasonalFieldId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

Response response = client.Delete("<partyId>", "<seasonalFieldId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetCascadeDeleteJobDetailsAsync(string,RequestContext)">
<example>
This sample shows how to call GetCascadeDeleteJobDetailsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
    <member name="GetCascadeDeleteJobDetails(string,RequestContext)">
<example>
This sample shows how to call GetCascadeDeleteJobDetails with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

Response response = client.GetCascadeDeleteJobDetails("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
    <member name="GetSeasonalFieldsByPartyIdAsync(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetSeasonalFieldsByPartyIdAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

await foreach (var item in client.GetSeasonalFieldsByPartyIdAsync("<partyId>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSeasonalFieldsByPartyIdAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

await foreach (var item in client.GetSeasonalFieldsByPartyIdAsync("<partyId>", new String[]{"<farmIds>"}, new String[]{"<fieldIds>"}, new String[]{"<seasonIds>"}, new String[]{"<cropProductIds>"}, new String[]{"<cropIds>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("farmId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSeasonalFieldsByPartyId(string,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetSeasonalFieldsByPartyId with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

foreach (var item in client.GetSeasonalFieldsByPartyId("<partyId>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSeasonalFieldsByPartyId with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

foreach (var item in client.GetSeasonalFieldsByPartyId("<partyId>", new String[]{"<farmIds>"}, new String[]{"<fieldIds>"}, new String[]{"<seasonIds>"}, new String[]{"<cropProductIds>"}, new String[]{"<cropIds>"}, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("farmId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSeasonalFieldsAsync(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetSeasonalFieldsAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

await foreach (var item in client.GetSeasonalFieldsAsync())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSeasonalFieldsAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

await foreach (var item in client.GetSeasonalFieldsAsync(new String[]{"<farmIds>"}, new String[]{"<fieldIds>"}, new String[]{"<seasonIds>"}, new String[]{"<cropProductIds>"}, new String[]{"<cropIds>"}, new String[]{"<seasonalFieldIds>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("farmId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSeasonalFields(IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
<example>
This sample shows how to call GetSeasonalFields and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

foreach (var item in client.GetSeasonalFields())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSeasonalFields with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

foreach (var item in client.GetSeasonalFields(new String[]{"<farmIds>"}, new String[]{"<fieldIds>"}, new String[]{"<seasonIds>"}, new String[]{"<cropProductIds>"}, new String[]{"<cropIds>"}, new String[]{"<seasonalFieldIds>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("farmId").ToString());
    Console.WriteLine(result.GetProperty("fieldId").ToString());
    Console.WriteLine(result.GetProperty("seasonId").ToString());
    Console.WriteLine(result.GetProperty("cropProductIds")[0].ToString());
    Console.WriteLine(result.GetProperty("cropId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
}
]]></code>
</example>
    </member>
    <member name="CreateCascadeDeleteJobAsync(WaitUntil,string,string,string,RequestContext)">
<example>
This sample shows how to call CreateCascadeDeleteJobAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

var operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<seasonalFieldId>");

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
    <member name="CreateCascadeDeleteJob(WaitUntil,string,string,string,RequestContext)">
<example>
This sample shows how to call CreateCascadeDeleteJob with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetSeasonalFieldsClient("2022-11-01-preview");

var operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<seasonalFieldId>");

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>