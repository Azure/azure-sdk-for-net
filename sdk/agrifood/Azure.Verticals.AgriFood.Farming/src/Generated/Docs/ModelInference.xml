<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetBiomassModelJobAsync(string,RequestContext)">
<example>
This sample shows how to call GetBiomassModelJobAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

Response response = await client.GetBiomassModelJobAsync("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("cropName").ToString());
Console.WriteLine(result.GetProperty("plantingStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("weatherExtensionId").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetBiomassModelJob(string,RequestContext)">
<example>
This sample shows how to call GetBiomassModelJob with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

Response response = client.GetBiomassModelJob("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("cropName").ToString());
Console.WriteLine(result.GetProperty("plantingStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("weatherExtensionId").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetSensorPlacementModelJobAsync(string,RequestContext)">
<example>
This sample shows how to call GetSensorPlacementModelJobAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

Response response = await client.GetSensorPlacementModelJobAsync("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("sensorType").ToString());
Console.WriteLine(result.GetProperty("isRanked").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetSensorPlacementModelJob(string,RequestContext)">
<example>
This sample shows how to call GetSensorPlacementModelJob with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

Response response = client.GetSensorPlacementModelJob("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("sensorType").ToString());
Console.WriteLine(result.GetProperty("isRanked").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetSoilMoistureModelJobAsync(string,RequestContext)">
<example>
This sample shows how to call GetSoilMoistureModelJobAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

Response response = await client.GetSoilMoistureModelJobAsync("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("sensorDataModelId").ToString());
Console.WriteLine(result.GetProperty("sensorPartnerId").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("sensorMeasurement").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("minProperty").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("maxProperty").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetSoilMoistureModelJob(string,RequestContext)">
<example>
This sample shows how to call GetSoilMoistureModelJob with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

Response response = client.GetSoilMoistureModelJob("<jobId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("sensorDataModelId").ToString());
Console.WriteLine(result.GetProperty("sensorPartnerId").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("sensorMeasurement").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("minProperty").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("maxProperty").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateBiomassModelJobAsync(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateBiomassModelJobAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    cropName = "Corn",
    plantingStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    weatherExtensionId = "<weatherExtensionId>",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
};

var operation = await client.CreateBiomassModelJobAsync(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("cropName").ToString());
Console.WriteLine(result.GetProperty("plantingStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("weatherExtensionId").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
]]></code>
This sample shows how to call CreateBiomassModelJobAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    cropName = "Corn",
    plantingStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    weatherExtensionId = "<weatherExtensionId>",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

var operation = await client.CreateBiomassModelJobAsync(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("cropName").ToString());
Console.WriteLine(result.GetProperty("plantingStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("weatherExtensionId").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateBiomassModelJob(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateBiomassModelJob with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    cropName = "Corn",
    plantingStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    weatherExtensionId = "<weatherExtensionId>",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
};

var operation = client.CreateBiomassModelJob(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("cropName").ToString());
Console.WriteLine(result.GetProperty("plantingStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("weatherExtensionId").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
]]></code>
This sample shows how to call CreateBiomassModelJob with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    cropName = "Corn",
    plantingStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    weatherExtensionId = "<weatherExtensionId>",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

var operation = client.CreateBiomassModelJob(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("cropName").ToString());
Console.WriteLine(result.GetProperty("plantingStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("weatherExtensionId").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateSensorPlacementModelJobAsync(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateSensorPlacementModelJobAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    sensorType = "<sensorType>",
    isRanked = true,
};

var operation = await client.CreateSensorPlacementModelJobAsync(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("sensorType").ToString());
Console.WriteLine(result.GetProperty("isRanked").ToString());
]]></code>
This sample shows how to call CreateSensorPlacementModelJobAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    sensorType = "<sensorType>",
    isRanked = true,
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

var operation = await client.CreateSensorPlacementModelJobAsync(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("sensorType").ToString());
Console.WriteLine(result.GetProperty("isRanked").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateSensorPlacementModelJob(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateSensorPlacementModelJob with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    sensorType = "<sensorType>",
    isRanked = true,
};

var operation = client.CreateSensorPlacementModelJob(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("sensorType").ToString());
Console.WriteLine(result.GetProperty("isRanked").ToString());
]]></code>
This sample shows how to call CreateSensorPlacementModelJob with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    modelVersion = "<modelVersion>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    sensorType = "<sensorType>",
    isRanked = true,
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

var operation = client.CreateSensorPlacementModelJob(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("sensorType").ToString());
Console.WriteLine(result.GetProperty("isRanked").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateSoilMoistureModelJobAsync(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateSoilMoistureModelJobAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    sensorDataModelId = "<sensorDataModelId>",
    sensorPartnerId = "<sensorPartnerId>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
    modelVersion = "<modelVersion>",
    sensorDefinition = new {
        sensorMeasurement = "<sensorMeasurement>",
        minProperty = "<minProperty>",
        maxProperty = "<maxProperty>",
    },
};

var operation = await client.CreateSoilMoistureModelJobAsync(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("sensorDataModelId").ToString());
Console.WriteLine(result.GetProperty("sensorPartnerId").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("sensorMeasurement").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("minProperty").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("maxProperty").ToString());
]]></code>
This sample shows how to call CreateSoilMoistureModelJobAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    sensorDataModelId = "<sensorDataModelId>",
    sensorPartnerId = "<sensorPartnerId>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
    modelVersion = "<modelVersion>",
    sensorDefinition = new {
        sensorMeasurement = "<sensorMeasurement>",
        minProperty = "<minProperty>",
        maxProperty = "<maxProperty>",
    },
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

var operation = await client.CreateSoilMoistureModelJobAsync(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("sensorDataModelId").ToString());
Console.WriteLine(result.GetProperty("sensorPartnerId").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("sensorMeasurement").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("minProperty").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("maxProperty").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="CreateSoilMoistureModelJob(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateSoilMoistureModelJob with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    sensorDataModelId = "<sensorDataModelId>",
    sensorPartnerId = "<sensorPartnerId>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
    modelVersion = "<modelVersion>",
    sensorDefinition = new {
        sensorMeasurement = "<sensorMeasurement>",
        minProperty = "<minProperty>",
        maxProperty = "<maxProperty>",
    },
};

var operation = client.CreateSoilMoistureModelJob(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("sensorDataModelId").ToString());
Console.WriteLine(result.GetProperty("sensorPartnerId").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("sensorMeasurement").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("minProperty").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("maxProperty").ToString());
]]></code>
This sample shows how to call CreateSoilMoistureModelJob with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new FarmBeatsClient(credential).GetModelInferenceClient("2022-11-01-preview");

var data = new {
    partyId = "<partyId>",
    boundaryId = "<boundaryId>",
    sensorDataModelId = "<sensorDataModelId>",
    sensorPartnerId = "<sensorPartnerId>",
    inferenceStartDateTime = "2022-05-10T18:57:31.2311892Z",
    inferenceEndDateTime = "2022-05-10T18:57:31.2311892Z",
    satelliteProvider = "Microsoft",
    satelliteSource = "Sentinel_2_L2A",
    imageResolution = 123.45d,
    imageFormat = "TIF",
    modelVersion = "<modelVersion>",
    sensorDefinition = new {
        sensorMeasurement = "<sensorMeasurement>",
        minProperty = "<minProperty>",
        maxProperty = "<maxProperty>",
    },
    name = "<name>",
    description = "<description>",
    properties = new {
        key = new {},
    },
};

var operation = client.CreateSoilMoistureModelJob(WaitUntil.Completed, "<jobId>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("boundaryId").ToString());
Console.WriteLine(result.GetProperty("sensorDataModelId").ToString());
Console.WriteLine(result.GetProperty("sensorPartnerId").ToString());
Console.WriteLine(result.GetProperty("inferenceStartDateTime").ToString());
Console.WriteLine(result.GetProperty("inferenceEndDateTime").ToString());
Console.WriteLine(result.GetProperty("satelliteProvider").ToString());
Console.WriteLine(result.GetProperty("satelliteSource").ToString());
Console.WriteLine(result.GetProperty("imageResolution").ToString());
Console.WriteLine(result.GetProperty("imageFormat").ToString());
Console.WriteLine(result.GetProperty("modelVersion").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("sensorMeasurement").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("minProperty").ToString());
Console.WriteLine(result.GetProperty("sensorDefinition").GetProperty("maxProperty").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>