<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetPlantingDataAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetPlantingDataAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetPlantingDataAsync("<partyId>", "<plantingDataId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPlantingDataAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetPlantingDataAsync("<partyId>", "<plantingDataId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetPlantingData(string,string,RequestContext)">
      <example>
This sample shows how to call GetPlantingData and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = client.GetPlantingData("<partyId>", "<plantingDataId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPlantingData with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = client.GetPlantingData("<partyId>", "<plantingDataId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateOrUpdateAsync("<partyId>", "<plantingDataId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

RequestContent content = RequestContent.Create(new
{
    avgPlantingRate = new
    {
        unit = "<unit>",
        value = 123.45,
    },
    plantingProductDetails = new List<object>()
    {
        new
        {
            productName = "<productName>",
        }
    },
    operationModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    operationStartDateTime = "2022-05-10T18:57:31.2311892Z",
    operationEndDateTime = "2022-05-10T18:57:31.2311892Z",
    associatedBoundaryId = "<associatedBoundaryId>",
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new
    {
        key = new object(),
    },
});
Response response = await client.CreateOrUpdateAsync("<partyId>", "<plantingDataId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

RequestContent content = RequestContent.Create(new object());
Response response = client.CreateOrUpdate("<partyId>", "<plantingDataId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

RequestContent content = RequestContent.Create(new
{
    avgPlantingRate = new
    {
        unit = "<unit>",
        value = 123.45,
    },
    plantingProductDetails = new List<object>()
    {
        new
        {
            productName = "<productName>",
        }
    },
    operationModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    operationStartDateTime = "2022-05-10T18:57:31.2311892Z",
    operationEndDateTime = "2022-05-10T18:57:31.2311892Z",
    associatedBoundaryId = "<associatedBoundaryId>",
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new
    {
        key = new object(),
    },
});
Response response = client.CreateOrUpdate("<partyId>", "<plantingDataId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgPlantingRate").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = await client.DeleteAsync("<partyId>", "<plantingDataId>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = await client.DeleteAsync("<partyId>", "<plantingDataId>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,string,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = client.Delete("<partyId>", "<plantingDataId>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = client.Delete("<partyId>", "<plantingDataId>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetCascadeDeleteJobDetailsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetCascadeDeleteJobDetailsAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call GetCascadeDeleteJobDetailsAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
    </member>
    <member name="GetCascadeDeleteJobDetails(string,RequestContext)">
      <example>
This sample shows how to call GetCascadeDeleteJobDetails and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = client.GetCascadeDeleteJobDetails("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call GetCascadeDeleteJobDetails with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Response response = client.GetCascadeDeleteJobDetails("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
    </member>
    <member name="GetAllPlantingDataByPartyIdAsync(string,double?,double?,double?,double?,double?,double?,IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,double?,double?,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAllPlantingDataByPartyIdAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetAllPlantingDataByPartyIdAsync("<partyId>", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].ToString());
}
]]></code>
This sample shows how to call GetAllPlantingDataByPartyIdAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetAllPlantingDataByPartyIdAsync("<partyId>", 123.45, 123.45, 123.45, 123.45, 123.45, 123.45, new List<string>()
{
    "<sources>"
}, new List<string>()
{
    "<associatedBoundaryIds>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 123.45, 123.45, new List<string>()
{
    "<ids>"
}, new List<string>()
{
    "<names>"
}, new List<string>()
{
    "<propertyFilters>"
}, new List<string>()
{
    "<statuses>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("operationModifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationStartDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationEndDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result[0].GetProperty("associatedBoundaryId").ToString());
    Console.WriteLine(result[0].GetProperty("partyId").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("eTag").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("source").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("description").ToString());
    Console.WriteLine(result[0].GetProperty("createdBy").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedBy").ToString());
    Console.WriteLine(result[0].GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllPlantingDataByPartyId(string,double?,double?,double?,double?,double?,double?,IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,double?,double?,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAllPlantingDataByPartyId and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetAllPlantingDataByPartyId("<partyId>", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].ToString());
}
]]></code>
This sample shows how to call GetAllPlantingDataByPartyId with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetAllPlantingDataByPartyId("<partyId>", 123.45, 123.45, 123.45, 123.45, 123.45, 123.45, new List<string>()
{
    "<sources>"
}, new List<string>()
{
    "<associatedBoundaryIds>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 123.45, 123.45, new List<string>()
{
    "<ids>"
}, new List<string>()
{
    "<names>"
}, new List<string>()
{
    "<propertyFilters>"
}, new List<string>()
{
    "<statuses>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("operationModifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationStartDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationEndDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result[0].GetProperty("associatedBoundaryId").ToString());
    Console.WriteLine(result[0].GetProperty("partyId").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("eTag").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("source").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("description").ToString());
    Console.WriteLine(result[0].GetProperty("createdBy").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedBy").ToString());
    Console.WriteLine(result[0].GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllPlantingDataAsync(double?,double?,double?,double?,double?,double?,IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,double?,double?,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAllPlantingDataAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetAllPlantingDataAsync(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].ToString());
}
]]></code>
This sample shows how to call GetAllPlantingDataAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

await foreach (BinaryData item in client.GetAllPlantingDataAsync(123.45, 123.45, 123.45, 123.45, 123.45, 123.45, new List<string>()
{
    "<sources>"
}, new List<string>()
{
    "<associatedBoundaryIds>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 123.45, 123.45, new List<string>()
{
    "<plantingDataIds>"
}, new List<string>()
{
    "<names>"
}, new List<string>()
{
    "<propertyFilters>"
}, new List<string>()
{
    "<statuses>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("operationModifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationStartDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationEndDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result[0].GetProperty("associatedBoundaryId").ToString());
    Console.WriteLine(result[0].GetProperty("partyId").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("eTag").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("source").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("description").ToString());
    Console.WriteLine(result[0].GetProperty("createdBy").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedBy").ToString());
    Console.WriteLine(result[0].GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllPlantingData(double?,double?,double?,double?,double?,double?,IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,double?,double?,IEnumerable{string},IEnumerable{string},IEnumerable{string},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAllPlantingData and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetAllPlantingData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].ToString());
}
]]></code>
This sample shows how to call GetAllPlantingData with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

foreach (BinaryData item in client.GetAllPlantingData(123.45, 123.45, 123.45, 123.45, 123.45, 123.45, new List<string>()
{
    "<sources>"
}, new List<string>()
{
    "<associatedBoundaryIds>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 123.45, 123.45, new List<string>()
{
    "<plantingDataIds>"
}, new List<string>()
{
    "<names>"
}, new List<string>()
{
    "<propertyFilters>"
}, new List<string>()
{
    "<statuses>"
}, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgPlantingRate").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("productName").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("plantingProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result[0].GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result[0].GetProperty("operationModifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationStartDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("operationEndDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("attachmentsLink").ToString());
    Console.WriteLine(result[0].GetProperty("associatedBoundaryId").ToString());
    Console.WriteLine(result[0].GetProperty("partyId").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("eTag").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result[0].GetProperty("source").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("description").ToString());
    Console.WriteLine(result[0].GetProperty("createdBy").ToString());
    Console.WriteLine(result[0].GetProperty("modifiedBy").ToString());
    Console.WriteLine(result[0].GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="CreateCascadeDeleteJobAsync(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call CreateCascadeDeleteJobAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<plantingDataId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call CreateCascadeDeleteJobAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<plantingDataId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
    </member>
    <member name="CreateCascadeDeleteJob(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call CreateCascadeDeleteJob and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<plantingDataId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call CreateCascadeDeleteJob with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
PlantingData client = new FarmBeatsClient(credential).GetPlantingDataClient(apiVersion: "2022-11-01-preview");

Operation<BinaryData> operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<plantingDataId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
    </member>
  </members>
</doc>