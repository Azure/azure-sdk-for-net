// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core.Extensions;
using Azure.Verticals.AgriFood.Farming;

namespace Microsoft.Extensions.Azure
{
    /// <summary> Extension methods to add <see cref="ApplicationDataClient"/>, <see cref="AttachmentsClient"/>, <see cref="BoundariesClient"/>, <see cref="CropsClient"/>, <see cref="CropVarietiesClient"/>, <see cref="FarmersClient"/>, <see cref="FarmClient"/>, <see cref="FarmsClient"/>, <see cref="FieldsClient"/>, <see cref="HarvestDataClient"/>, <see cref="ImageProcessingClient"/>, <see cref="OAuthProvidersClient"/>, <see cref="OAuthTokensClient"/>, <see cref="PlantingDataClient"/>, <see cref="ScenesClient"/>, <see cref="SeasonalFieldsClient"/>, <see cref="SeasonsClient"/>, <see cref="TillageDataClient"/>, <see cref="WeatherClient"/> to client builder. </summary>
    public static partial class FarmBeatsClientBuilderExtensions
    {
        /// <summary> Registers a <see cref="ApplicationDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<ApplicationDataClient, FarmBeatsClientOptions> AddApplicationDataClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<ApplicationDataClient, FarmBeatsClientOptions>((options, cred) => new ApplicationDataClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="AttachmentsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<AttachmentsClient, FarmBeatsClientOptions> AddAttachmentsClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<AttachmentsClient, FarmBeatsClientOptions>((options, cred) => new AttachmentsClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="BoundariesClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<BoundariesClient, FarmBeatsClientOptions> AddBoundariesClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<BoundariesClient, FarmBeatsClientOptions>((options, cred) => new BoundariesClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="CropsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<CropsClient, FarmBeatsClientOptions> AddCropsClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<CropsClient, FarmBeatsClientOptions>((options, cred) => new CropsClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="CropVarietiesClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<CropVarietiesClient, FarmBeatsClientOptions> AddCropVarietiesClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<CropVarietiesClient, FarmBeatsClientOptions>((options, cred) => new CropVarietiesClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="FarmersClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<FarmersClient, FarmBeatsClientOptions> AddFarmersClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<FarmersClient, FarmBeatsClientOptions>((options, cred) => new FarmersClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="FarmClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<FarmClient, FarmBeatsClientOptions> AddFarmClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<FarmClient, FarmBeatsClientOptions>((options, cred) => new FarmClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="FarmsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<FarmsClient, FarmBeatsClientOptions> AddFarmsClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<FarmsClient, FarmBeatsClientOptions>((options, cred) => new FarmsClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="FieldsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<FieldsClient, FarmBeatsClientOptions> AddFieldsClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<FieldsClient, FarmBeatsClientOptions>((options, cred) => new FieldsClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="HarvestDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<HarvestDataClient, FarmBeatsClientOptions> AddHarvestDataClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<HarvestDataClient, FarmBeatsClientOptions>((options, cred) => new HarvestDataClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="ImageProcessingClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<ImageProcessingClient, FarmBeatsClientOptions> AddImageProcessingClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<ImageProcessingClient, FarmBeatsClientOptions>((options, cred) => new ImageProcessingClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="OAuthProvidersClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<OAuthProvidersClient, FarmBeatsClientOptions> AddOAuthProvidersClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<OAuthProvidersClient, FarmBeatsClientOptions>((options, cred) => new OAuthProvidersClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="OAuthTokensClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<OAuthTokensClient, FarmBeatsClientOptions> AddOAuthTokensClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<OAuthTokensClient, FarmBeatsClientOptions>((options, cred) => new OAuthTokensClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="PlantingDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<PlantingDataClient, FarmBeatsClientOptions> AddPlantingDataClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<PlantingDataClient, FarmBeatsClientOptions>((options, cred) => new PlantingDataClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="ScenesClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<ScenesClient, FarmBeatsClientOptions> AddScenesClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<ScenesClient, FarmBeatsClientOptions>((options, cred) => new ScenesClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="SeasonalFieldsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<SeasonalFieldsClient, FarmBeatsClientOptions> AddSeasonalFieldsClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<SeasonalFieldsClient, FarmBeatsClientOptions>((options, cred) => new SeasonalFieldsClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="SeasonsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<SeasonsClient, FarmBeatsClientOptions> AddSeasonsClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<SeasonsClient, FarmBeatsClientOptions>((options, cred) => new SeasonsClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="TillageDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<TillageDataClient, FarmBeatsClientOptions> AddTillageDataClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<TillageDataClient, FarmBeatsClientOptions>((options, cred) => new TillageDataClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="WeatherClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        public static IAzureClientBuilder<WeatherClient, FarmBeatsClientOptions> AddWeatherClient<TBuilder>(this TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<WeatherClient, FarmBeatsClientOptions>((options, cred) => new WeatherClient(endpoint, cred, options));
        }

        /// <summary> Registers a <see cref="ApplicationDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<ApplicationDataClient, FarmBeatsClientOptions> AddApplicationDataClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ApplicationDataClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="AttachmentsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<AttachmentsClient, FarmBeatsClientOptions> AddAttachmentsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<AttachmentsClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="BoundariesClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<BoundariesClient, FarmBeatsClientOptions> AddBoundariesClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<BoundariesClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="CropsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<CropsClient, FarmBeatsClientOptions> AddCropsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<CropsClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="CropVarietiesClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<CropVarietiesClient, FarmBeatsClientOptions> AddCropVarietiesClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<CropVarietiesClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="FarmersClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<FarmersClient, FarmBeatsClientOptions> AddFarmersClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<FarmersClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="FarmClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<FarmClient, FarmBeatsClientOptions> AddFarmClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<FarmClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="FarmsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<FarmsClient, FarmBeatsClientOptions> AddFarmsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<FarmsClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="FieldsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<FieldsClient, FarmBeatsClientOptions> AddFieldsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<FieldsClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="HarvestDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<HarvestDataClient, FarmBeatsClientOptions> AddHarvestDataClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<HarvestDataClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="ImageProcessingClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<ImageProcessingClient, FarmBeatsClientOptions> AddImageProcessingClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ImageProcessingClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="OAuthProvidersClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<OAuthProvidersClient, FarmBeatsClientOptions> AddOAuthProvidersClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<OAuthProvidersClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="OAuthTokensClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<OAuthTokensClient, FarmBeatsClientOptions> AddOAuthTokensClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<OAuthTokensClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="PlantingDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<PlantingDataClient, FarmBeatsClientOptions> AddPlantingDataClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<PlantingDataClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="ScenesClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<ScenesClient, FarmBeatsClientOptions> AddScenesClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ScenesClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="SeasonalFieldsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<SeasonalFieldsClient, FarmBeatsClientOptions> AddSeasonalFieldsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<SeasonalFieldsClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="SeasonsClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<SeasonsClient, FarmBeatsClientOptions> AddSeasonsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<SeasonsClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="TillageDataClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<TillageDataClient, FarmBeatsClientOptions> AddTillageDataClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<TillageDataClient, FarmBeatsClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="WeatherClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<WeatherClient, FarmBeatsClientOptions> AddWeatherClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<WeatherClient, FarmBeatsClientOptions>(configuration);
        }
    }
}
