// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Verticals.AgriFood.Farming.Models
{
    /// <summary> Schema of tillage data resource. </summary>
    public partial class TillageData
    {
        /// <summary> Initializes a new instance of TillageData. </summary>
        public TillageData()
        {
            Properties = new ChangeTrackingDictionary<string, object>();
        }

        /// <summary> Initializes a new instance of TillageData. </summary>
        /// <param name="tillageDepth"> Schema for storing measurement reading and unit. </param>
        /// <param name="tillagePressure"> Schema for storing measurement reading and unit. </param>
        /// <param name="area"> Schema for storing measurement reading and unit. </param>
        /// <param name="source"> Source of the operation data. </param>
        /// <param name="operationModifiedDateTime">
        /// Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
        /// Note: this will be specified by the source provider itself.
        /// </param>
        /// <param name="operationStartDateTime"> Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="operationEndDateTime"> End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="attachmentsLink"> Link for attachments. </param>
        /// <param name="associatedBoundaryId"> Optional boundary ID of the field for which operation was applied. </param>
        /// <param name="operationBoundaryId"> Optional boundary ID of the actual area for which operation was applied inside the specified field. </param>
        /// <param name="farmerId"> Farmer ID which belongs to the operation data. </param>
        /// <param name="id"> Unique resource ID. </param>
        /// <param name="eTag"> The ETag value to implement optimistic concurrency. </param>
        /// <param name="status"> Status of the resource. </param>
        /// <param name="createdDateTime"> Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="modifiedDateTime"> Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="name"> Name to identify resource. </param>
        /// <param name="description"> Textual description of the resource. </param>
        /// <param name="properties">
        /// A collection of key value pairs that belongs to the resource.
        /// Each pair must not have a key greater than 50 characters
        /// and must not have a value greater than 150 characters.
        /// Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
        /// </param>
        internal TillageData(Measure tillageDepth, Measure tillagePressure, Measure area, string source, DateTimeOffset? operationModifiedDateTime, DateTimeOffset? operationStartDateTime, DateTimeOffset? operationEndDateTime, string attachmentsLink, string associatedBoundaryId, string operationBoundaryId, string farmerId, string id, string eTag, string status, DateTimeOffset? createdDateTime, DateTimeOffset? modifiedDateTime, string name, string description, IDictionary<string, object> properties)
        {
            TillageDepth = tillageDepth;
            TillagePressure = tillagePressure;
            Area = area;
            Source = source;
            OperationModifiedDateTime = operationModifiedDateTime;
            OperationStartDateTime = operationStartDateTime;
            OperationEndDateTime = operationEndDateTime;
            AttachmentsLink = attachmentsLink;
            AssociatedBoundaryId = associatedBoundaryId;
            OperationBoundaryId = operationBoundaryId;
            FarmerId = farmerId;
            Id = id;
            ETag = eTag;
            Status = status;
            CreatedDateTime = createdDateTime;
            ModifiedDateTime = modifiedDateTime;
            Name = name;
            Description = description;
            Properties = properties;
        }

        /// <summary> Schema for storing measurement reading and unit. </summary>
        public Measure TillageDepth { get; set; }
        /// <summary> Schema for storing measurement reading and unit. </summary>
        public Measure TillagePressure { get; set; }
        /// <summary> Schema for storing measurement reading and unit. </summary>
        public Measure Area { get; set; }
        /// <summary> Source of the operation data. </summary>
        public string Source { get; set; }
        /// <summary>
        /// Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
        /// Note: this will be specified by the source provider itself.
        /// </summary>
        public DateTimeOffset? OperationModifiedDateTime { get; set; }
        /// <summary> Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? OperationStartDateTime { get; set; }
        /// <summary> End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? OperationEndDateTime { get; set; }
        /// <summary> Link for attachments. </summary>
        public string AttachmentsLink { get; }
        /// <summary> Optional boundary ID of the field for which operation was applied. </summary>
        public string AssociatedBoundaryId { get; set; }
        /// <summary> Optional boundary ID of the actual area for which operation was applied inside the specified field. </summary>
        public string OperationBoundaryId { get; set; }
        /// <summary> Farmer ID which belongs to the operation data. </summary>
        public string FarmerId { get; }
        /// <summary> Unique resource ID. </summary>
        public string Id { get; }
        /// <summary> The ETag value to implement optimistic concurrency. </summary>
        public string ETag { get; }
        /// <summary> Status of the resource. </summary>
        public string Status { get; set; }
        /// <summary> Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? CreatedDateTime { get; }
        /// <summary> Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? ModifiedDateTime { get; }
        /// <summary> Name to identify resource. </summary>
        public string Name { get; set; }
        /// <summary> Textual description of the resource. </summary>
        public string Description { get; set; }
        /// <summary>
        /// A collection of key value pairs that belongs to the resource.
        /// Each pair must not have a key greater than 50 characters
        /// and must not have a value greater than 150 characters.
        /// Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
        /// </summary>
        public IDictionary<string, object> Properties { get; }
    }
}
