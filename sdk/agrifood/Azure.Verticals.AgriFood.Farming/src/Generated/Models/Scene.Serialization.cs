// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Verticals.AgriFood.Farming.Models
{
    public partial class Scene
    {
        internal static Scene DeserializeScene(JsonElement element)
        {
            Optional<DateTimeOffset> sceneDateTime = default;
            Optional<string> provider = default;
            Optional<string> source = default;
            Optional<IReadOnlyList<ImageFile>> imageFiles = default;
            Optional<ImageFormat> imageFormat = default;
            Optional<double> cloudCoverPercentage = default;
            Optional<double> darkPixelPercentage = default;
            Optional<double> ndviMedianValue = default;
            Optional<string> boundaryId = default;
            Optional<string> farmerId = default;
            Optional<string> id = default;
            Optional<string> eTag = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sceneDateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sceneDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("provider"))
                {
                    provider = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    source = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("imageFiles"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ImageFile> array = new List<ImageFile>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ImageFile.DeserializeImageFile(item));
                    }
                    imageFiles = array;
                    continue;
                }
                if (property.NameEquals("imageFormat"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    imageFormat = new ImageFormat(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("cloudCoverPercentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cloudCoverPercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("darkPixelPercentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    darkPixelPercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("ndviMedianValue"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ndviMedianValue = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("boundaryId"))
                {
                    boundaryId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("farmerId"))
                {
                    farmerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eTag"))
                {
                    eTag = property.Value.GetString();
                    continue;
                }
            }
            return new Scene(Optional.ToNullable(sceneDateTime), provider.Value, source.Value, Optional.ToList(imageFiles), Optional.ToNullable(imageFormat), Optional.ToNullable(cloudCoverPercentage), Optional.ToNullable(darkPixelPercentage), Optional.ToNullable(ndviMedianValue), boundaryId.Value, farmerId.Value, id.Value, eTag.Value);
        }
    }
}
