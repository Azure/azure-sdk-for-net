// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Verticals.AgriFood.Farming.Models
{
    public partial class HarvestProductDetail : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ProductName))
            {
                writer.WritePropertyName("productName");
                writer.WriteStringValue(ProductName);
            }
            if (Optional.IsDefined(Area))
            {
                writer.WritePropertyName("area");
                writer.WriteObjectValue(Area);
            }
            if (Optional.IsDefined(TotalYield))
            {
                writer.WritePropertyName("totalYield");
                writer.WriteObjectValue(TotalYield);
            }
            if (Optional.IsDefined(AvgYield))
            {
                writer.WritePropertyName("avgYield");
                writer.WriteObjectValue(AvgYield);
            }
            if (Optional.IsDefined(AvgMoisture))
            {
                writer.WritePropertyName("avgMoisture");
                writer.WriteObjectValue(AvgMoisture);
            }
            if (Optional.IsDefined(TotalWetMass))
            {
                writer.WritePropertyName("totalWetMass");
                writer.WriteObjectValue(TotalWetMass);
            }
            if (Optional.IsDefined(AvgWetMass))
            {
                writer.WritePropertyName("avgWetMass");
                writer.WriteObjectValue(AvgWetMass);
            }
            writer.WriteEndObject();
        }

        internal static HarvestProductDetail DeserializeHarvestProductDetail(JsonElement element)
        {
            Optional<string> productName = default;
            Optional<Measure> area = default;
            Optional<Measure> totalYield = default;
            Optional<Measure> avgYield = default;
            Optional<Measure> avgMoisture = default;
            Optional<Measure> totalWetMass = default;
            Optional<Measure> avgWetMass = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("productName"))
                {
                    productName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("area"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    area = Measure.DeserializeMeasure(property.Value);
                    continue;
                }
                if (property.NameEquals("totalYield"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalYield = Measure.DeserializeMeasure(property.Value);
                    continue;
                }
                if (property.NameEquals("avgYield"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    avgYield = Measure.DeserializeMeasure(property.Value);
                    continue;
                }
                if (property.NameEquals("avgMoisture"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    avgMoisture = Measure.DeserializeMeasure(property.Value);
                    continue;
                }
                if (property.NameEquals("totalWetMass"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalWetMass = Measure.DeserializeMeasure(property.Value);
                    continue;
                }
                if (property.NameEquals("avgWetMass"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    avgWetMass = Measure.DeserializeMeasure(property.Value);
                    continue;
                }
            }
            return new HarvestProductDetail(productName.Value, area.Value, totalYield.Value, avgYield.Value, avgMoisture.Value, totalWetMass.Value, avgWetMass.Value);
        }
    }
}
