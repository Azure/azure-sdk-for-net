// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Verticals.AgriFood.Farming.Models
{
    /// <summary> Schema of satellite data ingestion job. </summary>
    public partial class SatelliteDataIngestionJob
    {
        /// <summary> Initializes a new instance of SatelliteDataIngestionJob. </summary>
        /// <param name="farmerId"> Farmer ID. </param>
        /// <param name="boundaryId"> The id of the boundary object for which satellite data is being fetched. </param>
        /// <param name="startDateTime"> Start Date. </param>
        /// <param name="endDateTime"> End Date. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="farmerId"/> or <paramref name="boundaryId"/> is null. </exception>
        public SatelliteDataIngestionJob(string farmerId, string boundaryId, DateTimeOffset startDateTime, DateTimeOffset endDateTime)
        {
            if (farmerId == null)
            {
                throw new ArgumentNullException(nameof(farmerId));
            }
            if (boundaryId == null)
            {
                throw new ArgumentNullException(nameof(boundaryId));
            }

            FarmerId = farmerId;
            BoundaryId = boundaryId;
            StartDateTime = startDateTime;
            EndDateTime = endDateTime;
            Properties = new ChangeTrackingDictionary<string, object>();
        }

        /// <summary> Initializes a new instance of SatelliteDataIngestionJob. </summary>
        /// <param name="farmerId"> Farmer ID. </param>
        /// <param name="boundaryId"> The id of the boundary object for which satellite data is being fetched. </param>
        /// <param name="startDateTime"> Start Date. </param>
        /// <param name="endDateTime"> End Date. </param>
        /// <param name="provider"> Provider of satellite data. </param>
        /// <param name="source"> Source of satellite data. </param>
        /// <param name="data"> Data Model for SatelliteIngestionJobRequest. </param>
        /// <param name="id"> Unique job id. </param>
        /// <param name="status">
        /// Status of the job.
        /// Possible values: &apos;Waiting&apos;, &apos;Running&apos;, &apos;Succeeded&apos;, &apos;Failed&apos;, &apos;Cancelled&apos;.
        /// </param>
        /// <param name="durationInSeconds"> Duration of the job in seconds. </param>
        /// <param name="message"> Status message to capture more details of the job. </param>
        /// <param name="createdDateTime"> Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="lastActionDateTime"> Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="startTime"> Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="endTime"> Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="name"> Name to identify resource. </param>
        /// <param name="description"> Textual description of the resource. </param>
        /// <param name="properties">
        /// A collection of key value pairs that belongs to the resource.
        /// Each pair must not have a key greater than 50 characters
        /// and must not have a value greater than 150 characters.
        /// Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
        /// </param>
        internal SatelliteDataIngestionJob(string farmerId, string boundaryId, DateTimeOffset startDateTime, DateTimeOffset endDateTime, DataProvider? provider, Source? source, SatelliteData data, string id, string status, double? durationInSeconds, string message, DateTimeOffset? createdDateTime, DateTimeOffset? lastActionDateTime, DateTimeOffset? startTime, DateTimeOffset? endTime, string name, string description, IDictionary<string, object> properties)
        {
            FarmerId = farmerId;
            BoundaryId = boundaryId;
            StartDateTime = startDateTime;
            EndDateTime = endDateTime;
            Provider = provider;
            Source = source;
            Data = data;
            Id = id;
            Status = status;
            DurationInSeconds = durationInSeconds;
            Message = message;
            CreatedDateTime = createdDateTime;
            LastActionDateTime = lastActionDateTime;
            StartTime = startTime;
            EndTime = endTime;
            Name = name;
            Description = description;
            Properties = properties;
        }

        /// <summary> Farmer ID. </summary>
        public string FarmerId { get; set; }
        /// <summary> The id of the boundary object for which satellite data is being fetched. </summary>
        public string BoundaryId { get; set; }
        /// <summary> Start Date. </summary>
        public DateTimeOffset StartDateTime { get; set; }
        /// <summary> End Date. </summary>
        public DateTimeOffset EndDateTime { get; set; }
        /// <summary> Provider of satellite data. </summary>
        public DataProvider? Provider { get; set; }
        /// <summary> Source of satellite data. </summary>
        public Source? Source { get; set; }
        /// <summary> Data Model for SatelliteIngestionJobRequest. </summary>
        public SatelliteData Data { get; set; }
        /// <summary> Unique job id. </summary>
        public string Id { get; }
        /// <summary>
        /// Status of the job.
        /// Possible values: &apos;Waiting&apos;, &apos;Running&apos;, &apos;Succeeded&apos;, &apos;Failed&apos;, &apos;Cancelled&apos;.
        /// </summary>
        public string Status { get; }
        /// <summary> Duration of the job in seconds. </summary>
        public double? DurationInSeconds { get; }
        /// <summary> Status message to capture more details of the job. </summary>
        public string Message { get; }
        /// <summary> Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? CreatedDateTime { get; }
        /// <summary> Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? LastActionDateTime { get; }
        /// <summary> Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> Name to identify resource. </summary>
        public string Name { get; set; }
        /// <summary> Textual description of the resource. </summary>
        public string Description { get; set; }
        /// <summary>
        /// A collection of key value pairs that belongs to the resource.
        /// Each pair must not have a key greater than 50 characters
        /// and must not have a value greater than 150 characters.
        /// Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
        /// </summary>
        public IDictionary<string, object> Properties { get; }
    }
}
