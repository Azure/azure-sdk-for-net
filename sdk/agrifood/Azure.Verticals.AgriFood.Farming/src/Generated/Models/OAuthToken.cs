// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Verticals.AgriFood.Farming.Models
{
    /// <summary> Schema of OAuth token resource. </summary>
    public partial class OAuthToken
    {
        /// <summary> Initializes a new instance of OAuthToken. </summary>
        /// <param name="farmerId"> Farmer ID for this OAuth config. </param>
        /// <param name="authProviderId"> ID of the OAuth provider resource containing app information. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="farmerId"/> or <paramref name="authProviderId"/> is null. </exception>
        internal OAuthToken(string farmerId, string authProviderId)
        {
            if (farmerId == null)
            {
                throw new ArgumentNullException(nameof(farmerId));
            }
            if (authProviderId == null)
            {
                throw new ArgumentNullException(nameof(authProviderId));
            }

            FarmerId = farmerId;
            AuthProviderId = authProviderId;
        }

        /// <summary> Initializes a new instance of OAuthToken. </summary>
        /// <param name="farmerId"> Farmer ID for this OAuth config. </param>
        /// <param name="authProviderId"> ID of the OAuth provider resource containing app information. </param>
        /// <param name="isValid"> An optional flag indicating whether the token is a valid or expired (Default value: true). </param>
        /// <param name="eTag"> The ETag value to implement optimistic concurrency. </param>
        /// <param name="createdDateTime"> Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="modifiedDateTime"> Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        internal OAuthToken(string farmerId, string authProviderId, bool? isValid, string eTag, DateTimeOffset? createdDateTime, DateTimeOffset? modifiedDateTime)
        {
            FarmerId = farmerId;
            AuthProviderId = authProviderId;
            IsValid = isValid;
            ETag = eTag;
            CreatedDateTime = createdDateTime;
            ModifiedDateTime = modifiedDateTime;
        }

        /// <summary> Farmer ID for this OAuth config. </summary>
        public string FarmerId { get; }
        /// <summary> ID of the OAuth provider resource containing app information. </summary>
        public string AuthProviderId { get; }
        /// <summary> An optional flag indicating whether the token is a valid or expired (Default value: true). </summary>
        public bool? IsValid { get; }
        /// <summary> The ETag value to implement optimistic concurrency. </summary>
        public string ETag { get; }
        /// <summary> Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? CreatedDateTime { get; }
        /// <summary> Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? ModifiedDateTime { get; }
    }
}
