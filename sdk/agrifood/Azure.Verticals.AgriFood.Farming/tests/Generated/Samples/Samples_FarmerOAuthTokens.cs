// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Verticals.AgriFood.Farming.Samples
{
    internal class Samples_FarmerOAuthTokens
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetOAuthConnectionLink()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var data = new
            {
                partyId = "<partyId>",
                oAuthProviderId = "<oAuthProviderId>",
                userRedirectLink = "<userRedirectLink>",
            };

            Response response = client.GetOAuthConnectionLink(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetOAuthConnectionLink_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var data = new
            {
                partyId = "<partyId>",
                oAuthProviderId = "<oAuthProviderId>",
                userRedirectLink = "<userRedirectLink>",
                userRedirectState = "<userRedirectState>",
            };

            Response response = client.GetOAuthConnectionLink(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetOAuthConnectionLink_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var data = new
            {
                partyId = "<partyId>",
                oAuthProviderId = "<oAuthProviderId>",
                userRedirectLink = "<userRedirectLink>",
            };

            Response response = await client.GetOAuthConnectionLinkAsync(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetOAuthConnectionLink_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var data = new
            {
                partyId = "<partyId>",
                oAuthProviderId = "<oAuthProviderId>",
                userRedirectLink = "<userRedirectLink>",
                userRedirectState = "<userRedirectState>",
            };

            Response response = await client.GetOAuthConnectionLinkAsync(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCascadeDeleteJobDetails()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            Response response = client.GetCascadeDeleteJobDetails("<jobId>");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCascadeDeleteJobDetails_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            Response response = client.GetCascadeDeleteJobDetails("<jobId>");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("errorCode").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
            Console.WriteLine(result.GetProperty("startTime").ToString());
            Console.WriteLine(result.GetProperty("endTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCascadeDeleteJobDetails_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCascadeDeleteJobDetails_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("errorCode").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
            Console.WriteLine(result.GetProperty("startTime").ToString());
            Console.WriteLine(result.GetProperty("endTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAuthenticatedFarmersDetails()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            foreach (var item in client.GetAuthenticatedFarmersDetails())
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("partyId").ToString());
                Console.WriteLine(result.GetProperty("authProviderId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAuthenticatedFarmersDetails_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            foreach (var item in client.GetAuthenticatedFarmersDetails(new string[] { "<authProviderIds>" }, new string[] { "<partyIds>" }, true, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("partyId").ToString());
                Console.WriteLine(result.GetProperty("authProviderId").ToString());
                Console.WriteLine(result.GetProperty("isValid").ToString());
                Console.WriteLine(result.GetProperty("eTag").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAuthenticatedFarmersDetails_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            await foreach (var item in client.GetAuthenticatedFarmersDetailsAsync())
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("partyId").ToString());
                Console.WriteLine(result.GetProperty("authProviderId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAuthenticatedFarmersDetails_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            await foreach (var item in client.GetAuthenticatedFarmersDetailsAsync(new string[] { "<authProviderIds>" }, new string[] { "<partyIds>" }, true, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("partyId").ToString());
                Console.WriteLine(result.GetProperty("authProviderId").ToString());
                Console.WriteLine(result.GetProperty("isValid").ToString());
                Console.WriteLine(result.GetProperty("eTag").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateCascadeDeleteJob()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<oauthProviderId>");

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateCascadeDeleteJob_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<oauthProviderId>");

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("errorCode").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
            Console.WriteLine(result.GetProperty("startTime").ToString());
            Console.WriteLine(result.GetProperty("endTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateCascadeDeleteJob_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<oauthProviderId>");

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateCascadeDeleteJob_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetFarmerOAuthTokensClient("2022-11-01-preview");

            var operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<oauthProviderId>");

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("partyId").ToString());
            Console.WriteLine(result.GetProperty("resourceId").ToString());
            Console.WriteLine(result.GetProperty("resourceType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("errorCode").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
            Console.WriteLine(result.GetProperty("startTime").ToString());
            Console.WriteLine(result.GetProperty("endTime").ToString());
        }
    }
}
