// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Verticals.AgriFood.Farming.Samples
{
    internal class Samples_SolutionInference
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Cancel()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
            };

            Response response = client.Cancel("<solutionId>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Cancel_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
                partnerRequestBody = new
                {
                    key = new { },
                },
            };

            Response response = client.Cancel("<solutionId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Cancel_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
            };

            Response response = await client.CancelAsync("<solutionId>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Cancel_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
                partnerRequestBody = new
                {
                    key = new { },
                },
            };

            Response response = await client.CancelAsync("<solutionId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Fetch()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
            };

            Response response = client.Fetch("<solutionId>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Fetch_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
                partnerRequestBody = new
                {
                    key = new { },
                },
            };

            Response response = client.Fetch("<solutionId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Fetch_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
            };

            Response response = await client.FetchAsync("<solutionId>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Fetch_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
                partnerRequestBody = new
                {
                    key = new { },
                },
            };

            Response response = await client.FetchAsync("<solutionId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
            };

            var operation = client.CreateOrUpdate(WaitUntil.Completed, "<solutionId>", RequestContent.Create(data));

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
                partnerRequestBody = new
                {
                    key = new { },
                },
            };

            var operation = client.CreateOrUpdate(WaitUntil.Completed, "<solutionId>", RequestContent.Create(data), new RequestContext());

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
            };

            var operation = await client.CreateOrUpdateAsync(WaitUntil.Completed, "<solutionId>", RequestContent.Create(data));

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new FarmBeatsClient(credential).GetSolutionInferenceClient("2022-11-01-preview");

            var data = new
            {
                requestPath = "<requestPath>",
                partnerRequestBody = new
                {
                    key = new { },
                },
            };

            var operation = await client.CreateOrUpdateAsync(WaitUntil.Completed, "<solutionId>", RequestContent.Create(data), new RequestContext());

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("<test>").ToString());
        }
    }
}
