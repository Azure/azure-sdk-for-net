// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Verticals.AgriFood.Farming.Tests
{
    public partial class ImageProcessingTests : VerticalsAgriFoodFarmingTestBase
    {
        public ImageProcessingTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetRasterizeJob_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            ImageProcessing client = CreateFarmBeatsClient(endpoint, credential).GetImageProcessingClient();

            Response response = await client.GetRasterizeJobAsync("<jobId>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetRasterizeJob_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            ImageProcessing client = CreateFarmBeatsClient(endpoint, credential).GetImageProcessingClient();

            Response response = await client.GetRasterizeJobAsync("<jobId>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateRasterizeJob_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            ImageProcessing client = CreateFarmBeatsClient(endpoint, credential).GetImageProcessingClient();

            using RequestContent content = RequestContent.Create(new
            {
                partyId = "<partyId>",
                shapefileAttachmentId = "<shapefileAttachmentId>",
                shapefileColumnNames = new object[]
            {
"<shapefileColumnNames>"
            },
            });
            Operation<BinaryData> operation = await client.CreateRasterizeJobAsync(WaitUntil.Completed, "<jobId>", content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateRasterizeJob_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            ImageProcessing client = CreateFarmBeatsClient(endpoint, credential).GetImageProcessingClient();

            using RequestContent content = RequestContent.Create(new
            {
                partyId = "<partyId>",
                shapefileAttachmentId = "<shapefileAttachmentId>",
                shapefileColumnNames = new object[]
            {
"<shapefileColumnNames>"
            },
                name = "<name>",
                description = "<description>",
                properties = new
                {
                    key = new object(),
                },
            });
            Operation<BinaryData> operation = await client.CreateRasterizeJobAsync(WaitUntil.Completed, "<jobId>", content);
            BinaryData responseData = operation.Value;
        }
    }
}
