// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Verticals.AgriFood.Farming.Tests
{
    public partial class WeatherDataTests : VerticalsAgriFoodFarmingTestBase
    {
        public WeatherDataTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetWeatherData_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            WeatherData client = CreateFarmBeatsClient(endpoint, credential).GetWeatherDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                providerApiKey = "<providerApiKey>",
                extensionId = "<extensionId>",
                extensionApiName = "<extensionApiName>",
                units = "<units>",
            });
            Response response = await client.GetWeatherDataAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetWeatherData_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            WeatherData client = CreateFarmBeatsClient(endpoint, credential).GetWeatherDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                locations = new object[]
            {
new
{
type = "LatLong",
value = "<value>",
}
            },
                providerAppId = "<providerAppId>",
                providerApiKey = "<providerApiKey>",
                extensionId = "<extensionId>",
                extensionApiName = "<extensionApiName>",
                language = "<language>",
                startTimeHours = 1234,
                endTimeHours = 1234,
                duration = 1234,
                units = "<units>",
                additionalParams = new
                {
                    iconResolution = "<iconResolution>",
                    details = true,
                },
            });
            Response response = await client.GetWeatherDataAsync(content);
        }
    }
}
