// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Verticals.AgriFood.Farming.Tests
{
    public partial class FarmOperationsDataIngestionTests : VerticalsAgriFoodFarmingTestBase
    {
        public FarmOperationsDataIngestionTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetJobDetails_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            FarmOperationsDataIngestion client = CreateFarmBeatsClient(endpoint, credential).GetFarmOperationsDataIngestionClient();

            Response response = await client.GetJobDetailsAsync("<jobId>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetJobDetails_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            FarmOperationsDataIngestion client = CreateFarmBeatsClient(endpoint, credential).GetFarmOperationsDataIngestionClient();

            Response response = await client.GetJobDetailsAsync("<jobId>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateJob_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            FarmOperationsDataIngestion client = CreateFarmBeatsClient(endpoint, credential).GetFarmOperationsDataIngestionClient();

            using RequestContent content = RequestContent.Create(new
            {
                partyId = "<partyId>",
                authProviderId = "<authProviderId>",
                startYear = 1234,
            });
            Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, "<jobId>", content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateJob_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            FarmOperationsDataIngestion client = CreateFarmBeatsClient(endpoint, credential).GetFarmOperationsDataIngestionClient();

            using RequestContent content = RequestContent.Create(new
            {
                partyId = "<partyId>",
                authProviderId = "<authProviderId>",
                operations = new object[]
            {
"<operations>"
            },
                startYear = 1234,
                isIncremental = true,
                name = "<name>",
                description = "<description>",
                properties = new
                {
                    key = new object(),
                },
            });
            Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, "<jobId>", content);
            BinaryData responseData = operation.Value;
        }
    }
}
