// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AgFoodPlatform
{
    /// <summary>
    /// A class representing the Extension data model.
    /// Extension resource.
    /// </summary>
    public partial class ExtensionData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="ExtensionData"/>. </summary>
        public ExtensionData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ExtensionData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="eTag"> The ETag value to implement optimistic concurrency. </param>
        /// <param name="extensionId"> Extension Id. </param>
        /// <param name="extensionCategory"> Extension category. e.g. weather/sensor/satellite. </param>
        /// <param name="installedExtensionVersion"> Installed extension version. </param>
        /// <param name="extensionAuthLink"> Extension auth link. </param>
        /// <param name="extensionApiDocsLink"> Extension api docs link. </param>
        internal ExtensionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ETag? eTag, string extensionId, string extensionCategory, string installedExtensionVersion, string extensionAuthLink, string extensionApiDocsLink) : base(id, name, resourceType, systemData)
        {
            ETag = eTag;
            ExtensionId = extensionId;
            ExtensionCategory = extensionCategory;
            InstalledExtensionVersion = installedExtensionVersion;
            ExtensionAuthLink = extensionAuthLink;
            ExtensionApiDocsLink = extensionApiDocsLink;
        }

        /// <summary> The ETag value to implement optimistic concurrency. </summary>
        public ETag? ETag { get; }
        /// <summary> Extension Id. </summary>
        public string ExtensionId { get; }
        /// <summary> Extension category. e.g. weather/sensor/satellite. </summary>
        public string ExtensionCategory { get; }
        /// <summary> Installed extension version. </summary>
        public string InstalledExtensionVersion { get; }
        /// <summary> Extension auth link. </summary>
        public string ExtensionAuthLink { get; }
        /// <summary> Extension api docs link. </summary>
        public string ExtensionApiDocsLink { get; }
    }
}
