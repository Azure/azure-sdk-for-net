// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MongoCluster.Models
{
    /// <summary> The updatable properties of the MongoCluster. </summary>
    public partial class MongoClusterUpdateProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MongoClusterUpdateProperties"/>. </summary>
        public MongoClusterUpdateProperties()
        {
            NodeGroupSpecs = new ChangeTrackingList<NodeGroupSpec>();
            PreviewFeatures = new ChangeTrackingList<PreviewFeature>();
        }

        /// <summary> Initializes a new instance of <see cref="MongoClusterUpdateProperties"/>. </summary>
        /// <param name="administratorLogin"> The administrator's login for the mongo cluster. </param>
        /// <param name="administratorLoginPassword"> The password of the administrator login. </param>
        /// <param name="serverVersion"> The Mongo DB server version. Defaults to the latest available version if not specified. </param>
        /// <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this mongo cluster. </param>
        /// <param name="nodeGroupSpecs"> The list of node group specs in the cluster. </param>
        /// <param name="previewFeatures"> List of private endpoint connections. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MongoClusterUpdateProperties(string administratorLogin, string administratorLoginPassword, string serverVersion, PublicNetworkAccess? publicNetworkAccess, IList<NodeGroupSpec> nodeGroupSpecs, IList<PreviewFeature> previewFeatures, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AdministratorLogin = administratorLogin;
            AdministratorLoginPassword = administratorLoginPassword;
            ServerVersion = serverVersion;
            PublicNetworkAccess = publicNetworkAccess;
            NodeGroupSpecs = nodeGroupSpecs;
            PreviewFeatures = previewFeatures;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The administrator's login for the mongo cluster. </summary>
        public string AdministratorLogin { get; set; }
        /// <summary> The password of the administrator login. </summary>
        public string AdministratorLoginPassword { get; set; }
        /// <summary> The Mongo DB server version. Defaults to the latest available version if not specified. </summary>
        public string ServerVersion { get; set; }
        /// <summary> Whether or not public endpoint access is allowed for this mongo cluster. </summary>
        public PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary> The list of node group specs in the cluster. </summary>
        public IList<NodeGroupSpec> NodeGroupSpecs { get; }
        /// <summary> List of private endpoint connections. </summary>
        public IList<PreviewFeature> PreviewFeatures { get; }
    }
}
