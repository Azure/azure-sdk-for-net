// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MongoCluster.Models
{
    /// <summary> The properties of a mongo cluster. </summary>
    public partial class MongoClusterProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MongoClusterProperties"/>. </summary>
        public MongoClusterProperties()
        {
            NodeGroupSpecs = new ChangeTrackingList<NodeGroupSpec>();
            PrivateEndpointConnections = new ChangeTrackingList<MongoClusterPrivateEndpointConnection>();
            PreviewFeatures = new ChangeTrackingList<PreviewFeature>();
        }

        /// <summary> Initializes a new instance of <see cref="MongoClusterProperties"/>. </summary>
        /// <param name="createMode"> The mode to create a mongo cluster. </param>
        /// <param name="restoreParameters"> The parameters to create a point-in-time restore mongo cluster. </param>
        /// <param name="replicaParameters"> The parameters to create a replica mongo cluster. </param>
        /// <param name="administratorLogin"> The administrator's login for the mongo cluster. </param>
        /// <param name="administratorLoginPassword"> The password of the administrator login. </param>
        /// <param name="serverVersion"> The Mongo DB server version. Defaults to the latest available version if not specified. </param>
        /// <param name="connectionString"> The default mongo connection string for the cluster. </param>
        /// <param name="earliestRestoreTime"> Earliest restore timestamp in UTC ISO8601 format. </param>
        /// <param name="provisioningState"> The provisioning state of the mongo cluster. </param>
        /// <param name="clusterStatus"> The status of the mongo cluster. </param>
        /// <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this mongo cluster. </param>
        /// <param name="nodeGroupSpecs"> The list of node group specs in the cluster. </param>
        /// <param name="privateEndpointConnections"> List of private endpoint connections. </param>
        /// <param name="previewFeatures"> List of private endpoint connections. </param>
        /// <param name="replica"> The replication properties for the mongo cluster. </param>
        /// <param name="infrastructureVersion"> The infrastructure version the cluster is provisioned on. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MongoClusterProperties(CreateMode? createMode, MongoClusterRestoreContent restoreParameters, MongoClusterReplicaParameters replicaParameters, string administratorLogin, string administratorLoginPassword, string serverVersion, string connectionString, string earliestRestoreTime, ProvisioningState? provisioningState, MongoClusterStatus? clusterStatus, PublicNetworkAccess? publicNetworkAccess, IList<NodeGroupSpec> nodeGroupSpecs, IReadOnlyList<MongoClusterPrivateEndpointConnection> privateEndpointConnections, IList<PreviewFeature> previewFeatures, ReplicationProperties replica, string infrastructureVersion, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CreateMode = createMode;
            RestoreParameters = restoreParameters;
            ReplicaParameters = replicaParameters;
            AdministratorLogin = administratorLogin;
            AdministratorLoginPassword = administratorLoginPassword;
            ServerVersion = serverVersion;
            ConnectionString = connectionString;
            EarliestRestoreTime = earliestRestoreTime;
            ProvisioningState = provisioningState;
            ClusterStatus = clusterStatus;
            PublicNetworkAccess = publicNetworkAccess;
            NodeGroupSpecs = nodeGroupSpecs;
            PrivateEndpointConnections = privateEndpointConnections;
            PreviewFeatures = previewFeatures;
            Replica = replica;
            InfrastructureVersion = infrastructureVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The mode to create a mongo cluster. </summary>
        public CreateMode? CreateMode { get; set; }
        /// <summary> The parameters to create a point-in-time restore mongo cluster. </summary>
        public MongoClusterRestoreContent RestoreParameters { get; set; }
        /// <summary> The parameters to create a replica mongo cluster. </summary>
        public MongoClusterReplicaParameters ReplicaParameters { get; set; }
        /// <summary> The administrator's login for the mongo cluster. </summary>
        public string AdministratorLogin { get; set; }
        /// <summary> The password of the administrator login. </summary>
        public string AdministratorLoginPassword { get; set; }
        /// <summary> The Mongo DB server version. Defaults to the latest available version if not specified. </summary>
        public string ServerVersion { get; set; }
        /// <summary> The default mongo connection string for the cluster. </summary>
        public string ConnectionString { get; }
        /// <summary> Earliest restore timestamp in UTC ISO8601 format. </summary>
        public string EarliestRestoreTime { get; }
        /// <summary> The provisioning state of the mongo cluster. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The status of the mongo cluster. </summary>
        public MongoClusterStatus? ClusterStatus { get; }
        /// <summary> Whether or not public endpoint access is allowed for this mongo cluster. </summary>
        public PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary> The list of node group specs in the cluster. </summary>
        public IList<NodeGroupSpec> NodeGroupSpecs { get; }
        /// <summary> List of private endpoint connections. </summary>
        public IReadOnlyList<MongoClusterPrivateEndpointConnection> PrivateEndpointConnections { get; }
        /// <summary> List of private endpoint connections. </summary>
        public IList<PreviewFeature> PreviewFeatures { get; }
        /// <summary> The replication properties for the mongo cluster. </summary>
        public ReplicationProperties Replica { get; }
        /// <summary> The infrastructure version the cluster is provisioned on. </summary>
        public string InfrastructureVersion { get; }
    }
}
