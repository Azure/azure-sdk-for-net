// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AFDOriginGroupsOperations.
    /// </summary>
    public static partial class AFDOriginGroupsOperationsExtensions
    {
            /// <summary>
            /// Lists all of the existing origin groups within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            public static IPage<AFDOriginGroup> ListByProfile(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName)
            {
                return operations.ListByProfileAsync(resourceGroupName, profileName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all of the existing origin groups within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AFDOriginGroup>> ListByProfileAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByProfileWithHttpMessagesAsync(resourceGroupName, profileName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            public static AFDOriginGroup Get(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName)
            {
                return operations.GetAsync(resourceGroupName, profileName, originGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AFDOriginGroup> GetAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a new origin group within the specified profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            /// <param name='originGroup'>
            /// Origin group properties
            /// </param>
            public static AFDOriginGroup Create(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroup originGroup)
            {
                return operations.CreateAsync(resourceGroupName, profileName, originGroupName, originGroup).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new origin group within the specified profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            /// <param name='originGroup'>
            /// Origin group properties
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AFDOriginGroup> CreateAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroup originGroup, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, originGroup, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            /// <param name='originGroupUpdateProperties'>
            /// Origin group properties
            /// </param>
            public static AFDOriginGroup Update(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroupUpdateParameters originGroupUpdateProperties)
            {
                return operations.UpdateAsync(resourceGroupName, profileName, originGroupName, originGroupUpdateProperties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            /// <param name='originGroupUpdateProperties'>
            /// Origin group properties
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AFDOriginGroup> UpdateAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroupUpdateParameters originGroupUpdateProperties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, originGroupUpdateProperties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            public static void Delete(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName)
            {
                operations.DeleteAsync(resourceGroupName, profileName, originGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Checks the quota and actual usage of endpoints under the given CDN profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            public static IPage<Usage> ListResourceUsage(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName)
            {
                return operations.ListResourceUsageAsync(resourceGroupName, profileName, originGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks the quota and actual usage of endpoints under the given CDN profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Usage>> ListResourceUsageAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListResourceUsageWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a new origin group within the specified profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            /// <param name='originGroup'>
            /// Origin group properties
            /// </param>
            public static AFDOriginGroup BeginCreate(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroup originGroup)
            {
                return operations.BeginCreateAsync(resourceGroupName, profileName, originGroupName, originGroup).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new origin group within the specified profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the endpoint.
            /// </param>
            /// <param name='originGroup'>
            /// Origin group properties
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AFDOriginGroup> BeginCreateAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroup originGroup, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, originGroup, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            /// <param name='originGroupUpdateProperties'>
            /// Origin group properties
            /// </param>
            public static AFDOriginGroup BeginUpdate(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroupUpdateParameters originGroupUpdateProperties)
            {
                return operations.BeginUpdateAsync(resourceGroupName, profileName, originGroupName, originGroupUpdateProperties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            /// <param name='originGroupUpdateProperties'>
            /// Origin group properties
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AFDOriginGroup> BeginUpdateAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, AFDOriginGroupUpdateParameters originGroupUpdateProperties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, originGroupUpdateProperties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            public static void BeginDelete(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName)
            {
                operations.BeginDeleteAsync(resourceGroupName, profileName, originGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an existing origin group within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the Resource group within the Azure subscription.
            /// </param>
            /// <param name='profileName'>
            /// Name of the CDN profile which is unique within the resource group.
            /// </param>
            /// <param name='originGroupName'>
            /// Name of the origin group which is unique within the profile.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IAFDOriginGroupsOperations operations, string resourceGroupName, string profileName, string originGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, profileName, originGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists all of the existing origin groups within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<AFDOriginGroup> ListByProfileNext(this IAFDOriginGroupsOperations operations, string nextPageLink)
            {
                return operations.ListByProfileNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all of the existing origin groups within a profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AFDOriginGroup>> ListByProfileNextAsync(this IAFDOriginGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByProfileNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Checks the quota and actual usage of endpoints under the given CDN profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Usage> ListResourceUsageNext(this IAFDOriginGroupsOperations operations, string nextPageLink)
            {
                return operations.ListResourceUsageNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks the quota and actual usage of endpoints under the given CDN profile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Usage>> ListResourceUsageNextAsync(this IAFDOriginGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListResourceUsageNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
