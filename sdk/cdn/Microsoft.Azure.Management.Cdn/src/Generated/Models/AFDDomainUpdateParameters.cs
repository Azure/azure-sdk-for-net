// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The domain JSON object required for domain creation or update.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AFDDomainUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the AFDDomainUpdateParameters class.
        /// </summary>
        public AFDDomainUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AFDDomainUpdateParameters class.
        /// </summary>
        /// <param name="tlsSettings">The configuration specifying how to
        /// enable HTTPS for the domain - using AzureFrontDoor managed
        /// certificate or user's own certificate. If not specified, enabling
        /// ssl uses AzureFrontDoor managed certificate by default.</param>
        /// <param name="azureDnsZone">Resource reference to the Azure DNS
        /// zone</param>
        public AFDDomainUpdateParameters(AFDDomainHttpsParameters tlsSettings = default(AFDDomainHttpsParameters), ResourceReference azureDnsZone = default(ResourceReference))
        {
            TlsSettings = tlsSettings;
            AzureDnsZone = azureDnsZone;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the configuration specifying how to enable HTTPS for
        /// the domain - using AzureFrontDoor managed certificate or user's own
        /// certificate. If not specified, enabling ssl uses AzureFrontDoor
        /// managed certificate by default.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tlsSettings")]
        public AFDDomainHttpsParameters TlsSettings { get; set; }

        /// <summary>
        /// Gets or sets resource reference to the Azure DNS zone
        /// </summary>
        [JsonProperty(PropertyName = "properties.azureDnsZone")]
        public ResourceReference AzureDnsZone { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TlsSettings != null)
            {
                TlsSettings.Validate();
            }
        }
    }
}
