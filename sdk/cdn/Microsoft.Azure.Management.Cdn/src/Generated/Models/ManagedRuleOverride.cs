// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines a managed rule group override setting.
    /// </summary>
    public partial class ManagedRuleOverride
    {
        /// <summary>
        /// Initializes a new instance of the ManagedRuleOverride class.
        /// </summary>
        public ManagedRuleOverride()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedRuleOverride class.
        /// </summary>
        /// <param name="ruleId">Identifier for the managed rule.</param>
        /// <param name="enabledState">Describes if the managed rule is in
        /// enabled or disabled state. Defaults to Disabled if not specified.
        /// Possible values include: 'Disabled', 'Enabled'</param>
        /// <param name="action">Describes the override action to be applied
        /// when rule matches. Possible values include: 'Allow', 'Block',
        /// 'Log', 'Redirect'</param>
        public ManagedRuleOverride(string ruleId, string enabledState = default(string), string action = default(string))
        {
            RuleId = ruleId;
            EnabledState = enabledState;
            Action = action;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identifier for the managed rule.
        /// </summary>
        [JsonProperty(PropertyName = "ruleId")]
        public string RuleId { get; set; }

        /// <summary>
        /// Gets or sets describes if the managed rule is in enabled or
        /// disabled state. Defaults to Disabled if not specified. Possible
        /// values include: 'Disabled', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "enabledState")]
        public string EnabledState { get; set; }

        /// <summary>
        /// Gets or sets describes the override action to be applied when rule
        /// matches. Possible values include: 'Allow', 'Block', 'Log',
        /// 'Redirect'
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public string Action { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RuleId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RuleId");
            }
        }
    }
}
