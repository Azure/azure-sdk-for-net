// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A rule that specifies a set of actions and conditions
    /// </summary>
    public partial class DeliveryRule
    {
        /// <summary>
        /// Initializes a new instance of the DeliveryRule class.
        /// </summary>
        public DeliveryRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeliveryRule class.
        /// </summary>
        /// <param name="order">The order in which the rules are applied for
        /// the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser
        /// order will be applied before a rule with a greater order. Rule with
        /// order 0 is a special rule. It does not require any condition and
        /// actions listed in it will always be applied.</param>
        /// <param name="actions">A list of actions that are executed when all
        /// the conditions of a rule are satisfied.</param>
        /// <param name="name">Name of the rule</param>
        /// <param name="conditions">A list of conditions that must be matched
        /// for the actions to be executed</param>
        public DeliveryRule(int order, IList<DeliveryRuleAction> actions, string name = default(string), IList<DeliveryRuleCondition> conditions = default(IList<DeliveryRuleCondition>))
        {
            Name = name;
            Order = order;
            Conditions = conditions;
            Actions = actions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the rule
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the order in which the rules are applied for the
        /// endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order
        /// will be applied before a rule with a greater order. Rule with order
        /// 0 is a special rule. It does not require any condition and actions
        /// listed in it will always be applied.
        /// </summary>
        [JsonProperty(PropertyName = "order")]
        public int Order { get; set; }

        /// <summary>
        /// Gets or sets a list of conditions that must be matched for the
        /// actions to be executed
        /// </summary>
        [JsonProperty(PropertyName = "conditions")]
        public IList<DeliveryRuleCondition> Conditions { get; set; }

        /// <summary>
        /// Gets or sets a list of actions that are executed when all the
        /// conditions of a rule are satisfied.
        /// </summary>
        [JsonProperty(PropertyName = "actions")]
        public IList<DeliveryRuleAction> Actions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Actions == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Actions");
            }
        }
    }
}
