// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The JSON object that contains the properties to validate a domain.
    /// </summary>
    public partial class DomainValidationProperties
    {
        /// <summary>
        /// Initializes a new instance of the DomainValidationProperties class.
        /// </summary>
        public DomainValidationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DomainValidationProperties class.
        /// </summary>
        /// <param name="validationToken">Challenge used for DNS TXT record or
        /// file based validation</param>
        /// <param name="expirationDate">The date time that the token
        /// expires</param>
        public DomainValidationProperties(string validationToken = default(string), string expirationDate = default(string))
        {
            ValidationToken = validationToken;
            ExpirationDate = expirationDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets challenge used for DNS TXT record or file based validation
        /// </summary>
        [JsonProperty(PropertyName = "validationToken")]
        public string ValidationToken { get; private set; }

        /// <summary>
        /// Gets the date time that the token expires
        /// </summary>
        [JsonProperty(PropertyName = "expirationDate")]
        public string ExpirationDate { get; private set; }

    }
}
