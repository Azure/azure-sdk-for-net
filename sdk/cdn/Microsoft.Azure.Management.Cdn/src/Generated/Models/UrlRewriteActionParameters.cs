// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the parameters for the url rewrite action.
    /// </summary>
    public partial class UrlRewriteActionParameters
    {
        /// <summary>
        /// Initializes a new instance of the UrlRewriteActionParameters class.
        /// </summary>
        public UrlRewriteActionParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UrlRewriteActionParameters class.
        /// </summary>
        /// <param name="sourcePattern">define a request URI pattern that
        /// identifies the type of requests that may be rewritten. If value is
        /// blank, all strings are matched.</param>
        /// <param name="destination">Define the relative URL to which the
        /// above requests will be rewritten by.</param>
        /// <param name="preserveUnmatchedPath">Whether to preserve unmatched
        /// path. Default value is true.</param>
        public UrlRewriteActionParameters(string sourcePattern, string destination, bool? preserveUnmatchedPath = default(bool?))
        {
            SourcePattern = sourcePattern;
            Destination = destination;
            PreserveUnmatchedPath = preserveUnmatchedPath;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for UrlRewriteActionParameters class.
        /// </summary>
        static UrlRewriteActionParameters()
        {
            Odatatype = "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRewriteActionParameters";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets define a request URI pattern that identifies the type
        /// of requests that may be rewritten. If value is blank, all strings
        /// are matched.
        /// </summary>
        [JsonProperty(PropertyName = "sourcePattern")]
        public string SourcePattern { get; set; }

        /// <summary>
        /// Gets or sets define the relative URL to which the above requests
        /// will be rewritten by.
        /// </summary>
        [JsonProperty(PropertyName = "destination")]
        public string Destination { get; set; }

        /// <summary>
        /// Gets or sets whether to preserve unmatched path. Default value is
        /// true.
        /// </summary>
        [JsonProperty(PropertyName = "preserveUnmatchedPath")]
        public bool? PreserveUnmatchedPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "@odata.type")]
        public static string Odatatype { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourcePattern == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourcePattern");
            }
            if (Destination == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Destination");
            }
        }
    }
}
