// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Customer Certificate used for https
    /// </summary>
    public partial class CustomerCertificate : Certificate
    {
        /// <summary>
        /// Initializes a new instance of the CustomerCertificate class.
        /// </summary>
        public CustomerCertificate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerCertificate class.
        /// </summary>
        /// <param name="type">Possible values include: 'UrlSigningKey',
        /// 'CustomerCertificate', 'ManagedCertificate',
        /// 'AzureFirstPartyManagedCertificate'</param>
        /// <param name="subject">Subject name in the certificate.</param>
        /// <param name="expirationDate">Certificate expiration date.</param>
        /// <param name="secretSource">Resource reference to the Azure Key
        /// Vault certificate. Expected to be in format of
        /// /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</param>
        /// <param name="secretVersion">Certificate version.</param>
        /// <param name="certificateAuthority">Certificate issuing
        /// authority.</param>
        /// <param name="useLatestVersion">Whether to use the latest version
        /// for the certificate</param>
        /// <param name="subjectAlternativeNames">The list of SANs.</param>
        /// <param name="thumbprint">Certificate thumbprint.</param>
        public CustomerCertificate(string type = default(string), string subject = default(string), string expirationDate = default(string), ResourceReference secretSource = default(ResourceReference), string secretVersion = default(string), string certificateAuthority = default(string), bool? useLatestVersion = default(bool?), IList<string> subjectAlternativeNames = default(IList<string>), string thumbprint = default(string))
            : base(type, subject, expirationDate)
        {
            SecretSource = secretSource;
            SecretVersion = secretVersion;
            CertificateAuthority = certificateAuthority;
            UseLatestVersion = useLatestVersion;
            SubjectAlternativeNames = subjectAlternativeNames;
            Thumbprint = thumbprint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource reference to the Azure Key Vault certificate.
        /// Expected to be in format of
        /// /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
        /// </summary>
        [JsonProperty(PropertyName = "secretSource")]
        public ResourceReference SecretSource { get; set; }

        /// <summary>
        /// Gets or sets certificate version.
        /// </summary>
        [JsonProperty(PropertyName = "secretVersion")]
        public string SecretVersion { get; set; }

        /// <summary>
        /// Gets certificate issuing authority.
        /// </summary>
        [JsonProperty(PropertyName = "certificateAuthority")]
        public string CertificateAuthority { get; private set; }

        /// <summary>
        /// Gets or sets whether to use the latest version for the certificate
        /// </summary>
        [JsonProperty(PropertyName = "useLatestVersion")]
        public bool? UseLatestVersion { get; set; }

        /// <summary>
        /// Gets or sets the list of SANs.
        /// </summary>
        [JsonProperty(PropertyName = "subjectAlternativeNames")]
        public IList<string> SubjectAlternativeNames { get; set; }

        /// <summary>
        /// Gets certificate thumbprint.
        /// </summary>
        [JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint { get; private set; }

    }
}
