// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Request body for Migrate operation.
    /// </summary>
    public partial class MigrationParameters : IResource
    {
        /// <summary>
        /// Initializes a new instance of the MigrationParameters class.
        /// </summary>
        public MigrationParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrationParameters class.
        /// </summary>
        /// <param name="sku">Sku for the migration</param>
        /// <param name="classicResourceReference">Resource reference of the
        /// classic cdn profile or classic frontdoor that need to be
        /// migrated.</param>
        /// <param name="profileName">Name of the new profile that need to be
        /// created.</param>
        /// <param name="migrationWebApplicationFirewallMappings">Waf mapping
        /// for the migrated profile</param>
        public MigrationParameters(Sku sku, ResourceReference classicResourceReference, string profileName, IList<MigrationWebApplicationFirewallMapping> migrationWebApplicationFirewallMappings = default(IList<MigrationWebApplicationFirewallMapping>))
        {
            Sku = sku;
            ClassicResourceReference = classicResourceReference;
            ProfileName = profileName;
            MigrationWebApplicationFirewallMappings = migrationWebApplicationFirewallMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets sku for the migration
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Gets or sets resource reference of the classic cdn profile or
        /// classic frontdoor that need to be migrated.
        /// </summary>
        [JsonProperty(PropertyName = "classicResourceReference")]
        public ResourceReference ClassicResourceReference { get; set; }

        /// <summary>
        /// Gets or sets name of the new profile that need to be created.
        /// </summary>
        [JsonProperty(PropertyName = "profileName")]
        public string ProfileName { get; set; }

        /// <summary>
        /// Gets or sets waf mapping for the migrated profile
        /// </summary>
        [JsonProperty(PropertyName = "migrationWebApplicationFirewallMappings")]
        public IList<MigrationWebApplicationFirewallMapping> MigrationWebApplicationFirewallMappings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sku");
            }
            if (ClassicResourceReference == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ClassicResourceReference");
            }
            if (ProfileName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProfileName");
            }
        }
    }
}
