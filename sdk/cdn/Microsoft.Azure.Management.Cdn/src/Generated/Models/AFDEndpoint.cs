// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// CDN endpoint is the entity within a CDN profile containing
    /// configuration information such as origin, protocol, content caching and
    /// delivery behavior. The AzureFrontDoor endpoint uses the URL format
    /// &lt;endpointname&gt;.azureedge.net.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AFDEndpoint : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the AFDEndpoint class.
        /// </summary>
        public AFDEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AFDEndpoint class.
        /// </summary>
        /// <param name="location">Resource location.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="originResponseTimeoutSeconds">Send and receive timeout
        /// on forwarding request to the origin. When timeout is reached, the
        /// request fails and returns.</param>
        /// <param name="enabledState">Whether to enable use of this rule.
        /// Permitted values are 'Enabled' or 'Disabled'. Possible values
        /// include: 'Enabled', 'Disabled'</param>
        /// <param name="provisioningState">Provisioning status. Possible
        /// values include: 'Succeeded', 'Failed', 'Updating', 'Deleting',
        /// 'Creating'</param>
        /// <param name="deploymentStatus">Possible values include:
        /// 'NotStarted', 'InProgress', 'Succeeded', 'Failed'</param>
        /// <param name="hostName">The host name of the endpoint structured as
        /// {endpointName}.{DNSZone}, e.g. contoso.azureedge.net</param>
        public AFDEndpoint(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), int? originResponseTimeoutSeconds = default(int?), string enabledState = default(string), string provisioningState = default(string), string deploymentStatus = default(string), string hostName = default(string))
            : base(location, id, name, type, systemData, tags)
        {
            OriginResponseTimeoutSeconds = originResponseTimeoutSeconds;
            EnabledState = enabledState;
            ProvisioningState = provisioningState;
            DeploymentStatus = deploymentStatus;
            HostName = hostName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets send and receive timeout on forwarding request to the
        /// origin. When timeout is reached, the request fails and returns.
        /// </summary>
        [JsonProperty(PropertyName = "properties.originResponseTimeoutSeconds")]
        public int? OriginResponseTimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or sets whether to enable use of this rule. Permitted values
        /// are 'Enabled' or 'Disabled'. Possible values include: 'Enabled',
        /// 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.enabledState")]
        public string EnabledState { get; set; }

        /// <summary>
        /// Gets provisioning status. Possible values include: 'Succeeded',
        /// 'Failed', 'Updating', 'Deleting', 'Creating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets possible values include: 'NotStarted', 'InProgress',
        /// 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.deploymentStatus")]
        public string DeploymentStatus { get; private set; }

        /// <summary>
        /// Gets the host name of the endpoint structured as
        /// {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostName")]
        public string HostName { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (OriginResponseTimeoutSeconds < 16)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "OriginResponseTimeoutSeconds", 16);
            }
        }
    }
}
