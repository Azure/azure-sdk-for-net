// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Certificate used for https
    /// </summary>
    public partial class Certificate
    {
        /// <summary>
        /// Initializes a new instance of the Certificate class.
        /// </summary>
        public Certificate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Certificate class.
        /// </summary>
        /// <param name="type">Possible values include: 'UrlSigningKey',
        /// 'CustomerCertificate', 'ManagedCertificate',
        /// 'AzureFirstPartyManagedCertificate'</param>
        /// <param name="subject">Subject name in the certificate.</param>
        /// <param name="expirationDate">Certificate expiration date.</param>
        public Certificate(string type = default(string), string subject = default(string), string expirationDate = default(string))
        {
            Type = type;
            Subject = subject;
            ExpirationDate = expirationDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'UrlSigningKey',
        /// 'CustomerCertificate', 'ManagedCertificate',
        /// 'AzureFirstPartyManagedCertificate'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets subject name in the certificate.
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; private set; }

        /// <summary>
        /// Gets certificate expiration date.
        /// </summary>
        [JsonProperty(PropertyName = "expirationDate")]
        public string ExpirationDate { get; private set; }

    }
}
