// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Metric specification of operation.
    /// </summary>
    public partial class MetricSpecification
    {
        /// <summary>
        /// Initializes a new instance of the MetricSpecification class.
        /// </summary>
        public MetricSpecification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricSpecification class.
        /// </summary>
        /// <param name="name">Name of metric specification.</param>
        /// <param name="displayName">Display name of metric
        /// specification.</param>
        /// <param name="displayDescription">Display description of metric
        /// specification.</param>
        /// <param name="unit">The metric unit. Possible values include:
        /// 'Bytes', 'Count', 'Milliseconds'.</param>
        /// <param name="aggregationType">The metric aggregation type. Possible
        /// values include: 'Average', 'Count', 'Total'.</param>
        /// <param name="availabilities">Retention policies of a resource
        /// metric.</param>
        /// <param name="supportedTimeGrainTypes">The supported time grain
        /// types for the metrics.</param>
        /// <param name="dimensions">The dimensions of metric</param>
        /// <param name="fillGapWithZero">Property to specify whether to fill
        /// gap with zero.</param>
        /// <param name="metricFilterPattern">Pattern to filter based on
        /// name</param>
        /// <param name="isInternal">Property to specify metric is internal or
        /// not.</param>
        public MetricSpecification(string name = default(string), string displayName = default(string), string displayDescription = default(string), string unit = default(string), string aggregationType = default(string), IList<MetricAvailability> availabilities = default(IList<MetricAvailability>), IList<string> supportedTimeGrainTypes = default(IList<string>), IList<DimensionProperties> dimensions = default(IList<DimensionProperties>), bool? fillGapWithZero = default(bool?), string metricFilterPattern = default(string), bool? isInternal = default(bool?))
        {
            Name = name;
            DisplayName = displayName;
            DisplayDescription = displayDescription;
            Unit = unit;
            AggregationType = aggregationType;
            Availabilities = availabilities;
            SupportedTimeGrainTypes = supportedTimeGrainTypes;
            Dimensions = dimensions;
            FillGapWithZero = fillGapWithZero;
            MetricFilterPattern = metricFilterPattern;
            IsInternal = isInternal;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of metric specification.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets display name of metric specification.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets display description of metric specification.
        /// </summary>
        [JsonProperty(PropertyName = "displayDescription")]
        public string DisplayDescription { get; set; }

        /// <summary>
        /// Gets or sets the metric unit. Possible values include: 'Bytes',
        /// 'Count', 'Milliseconds'.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets the metric aggregation type. Possible values include:
        /// 'Average', 'Count', 'Total'.
        /// </summary>
        [JsonProperty(PropertyName = "aggregationType")]
        public string AggregationType { get; set; }

        /// <summary>
        /// Gets or sets retention policies of a resource metric.
        /// </summary>
        [JsonProperty(PropertyName = "availabilities")]
        public IList<MetricAvailability> Availabilities { get; set; }

        /// <summary>
        /// Gets or sets the supported time grain types for the metrics.
        /// </summary>
        [JsonProperty(PropertyName = "supportedTimeGrainTypes")]
        public IList<string> SupportedTimeGrainTypes { get; set; }

        /// <summary>
        /// Gets or sets the dimensions of metric
        /// </summary>
        [JsonProperty(PropertyName = "dimensions")]
        public IList<DimensionProperties> Dimensions { get; set; }

        /// <summary>
        /// Gets or sets property to specify whether to fill gap with zero.
        /// </summary>
        [JsonProperty(PropertyName = "fillGapWithZero")]
        public bool? FillGapWithZero { get; set; }

        /// <summary>
        /// Gets or sets pattern to filter based on name
        /// </summary>
        [JsonProperty(PropertyName = "metricFilterPattern")]
        public string MetricFilterPattern { get; set; }

        /// <summary>
        /// Gets or sets property to specify metric is internal or not.
        /// </summary>
        [JsonProperty(PropertyName = "isInternal")]
        public bool? IsInternal { get; set; }

    }
}
