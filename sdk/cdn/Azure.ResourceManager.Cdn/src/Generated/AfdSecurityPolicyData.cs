// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Cdn
{
    /// <summary> A class representing the AfdSecurityPolicy data model. </summary>
    public partial class AfdSecurityPolicyData : ResourceData
    {
        /// <summary> Initializes a new instance of AfdSecurityPolicyData. </summary>
        public AfdSecurityPolicyData()
        {
        }

        /// <summary> Initializes a new instance of AfdSecurityPolicyData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Provisioning status. </param>
        /// <param name="deploymentStatus"></param>
        /// <param name="profileName"> The name of the profile which holds the security policy. </param>
        /// <param name="parameters"> object which contains security policy parameters. </param>
        internal AfdSecurityPolicyData(ResourceIdentifier id, string name, Core.ResourceType resourceType, SystemData systemData, AfdProvisioningState? provisioningState, DeploymentStatus? deploymentStatus, string profileName, SecurityPolicyPropertiesParameters parameters) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            DeploymentStatus = deploymentStatus;
            ProfileName = profileName;
            Parameters = parameters;
        }

        /// <summary> Provisioning status. </summary>
        public AfdProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the deployment status. </summary>
        public DeploymentStatus? DeploymentStatus { get; }
        /// <summary> The name of the profile which holds the security policy. </summary>
        public string ProfileName { get; }
        /// <summary> object which contains security policy parameters. </summary>
        internal SecurityPolicyPropertiesParameters Parameters { get; set; }
        /// <summary> The type of the Security policy to create. </summary>
        internal SecurityPolicyType ParametersPolicyType
        {
            get => Parameters is null ? default : Parameters.PolicyType;
            set
            {
                if (Parameters is null)
                    Parameters = new SecurityPolicyPropertiesParameters();
                Parameters.PolicyType = value;
            }
        }
    }
}
