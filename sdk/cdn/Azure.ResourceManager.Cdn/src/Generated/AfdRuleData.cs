// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Cdn
{
    /// <summary> A class representing the AfdRule data model. </summary>
    public partial class AfdRuleData : Resource
    {
        /// <summary> Initializes a new instance of AfdRuleData. </summary>
        public AfdRuleData()
        {
            Conditions = new ChangeTrackingList<DeliveryRuleCondition>();
            Actions = new ChangeTrackingList<DeliveryRuleActionAutoGenerated>();
        }

        /// <summary> Initializes a new instance of AfdRuleData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="order"> The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. </param>
        /// <param name="conditions"> A list of conditions that must be matched for the actions to be executed. </param>
        /// <param name="actions"> A list of actions that are executed when all the conditions of a rule are satisfied. </param>
        /// <param name="matchProcessingBehavior"> If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. </param>
        /// <param name="provisioningState"> Provisioning status. </param>
        /// <param name="deploymentStatus"></param>
        internal AfdRuleData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, int? order, IList<DeliveryRuleCondition> conditions, IList<DeliveryRuleActionAutoGenerated> actions, MatchProcessingBehavior? matchProcessingBehavior, AfdProvisioningState? provisioningState, DeploymentStatus? deploymentStatus) : base(id, name, type, systemData)
        {
            Order = order;
            Conditions = conditions;
            Actions = actions;
            MatchProcessingBehavior = matchProcessingBehavior;
            ProvisioningState = provisioningState;
            DeploymentStatus = deploymentStatus;
        }

        /// <summary> The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. </summary>
        public int? Order { get; set; }
        /// <summary> A list of conditions that must be matched for the actions to be executed. </summary>
        public IList<DeliveryRuleCondition> Conditions { get; }
        /// <summary> A list of actions that are executed when all the conditions of a rule are satisfied. </summary>
        public IList<DeliveryRuleActionAutoGenerated> Actions { get; }
        /// <summary> If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. </summary>
        public MatchProcessingBehavior? MatchProcessingBehavior { get; set; }
        /// <summary> Provisioning status. </summary>
        public AfdProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the deployment status. </summary>
        public DeploymentStatus? DeploymentStatus { get; }
    }
}
