// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> Defines the parameters for the cache expiration action. </summary>
    public partial class CacheExpirationActionDefinition
    {
        /// <summary> Initializes a new instance of CacheExpirationActionDefinition. </summary>
        /// <param name="typeName"></param>
        /// <param name="cacheBehavior"> Caching behavior for the requests. </param>
        /// <param name="cacheType"> The level at which the content needs to be cached. </param>
        public CacheExpirationActionDefinition(CacheExpirationActionType typeName, CacheBehaviorSettings cacheBehavior, CacheLevel cacheType)
        {
            TypeName = typeName;
            CacheBehavior = cacheBehavior;
            CacheType = cacheType;
        }

        /// <summary> Initializes a new instance of CacheExpirationActionDefinition. </summary>
        /// <param name="typeName"></param>
        /// <param name="cacheBehavior"> Caching behavior for the requests. </param>
        /// <param name="cacheType"> The level at which the content needs to be cached. </param>
        /// <param name="cacheDuration"> The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss. </param>
        internal CacheExpirationActionDefinition(CacheExpirationActionType typeName, CacheBehaviorSettings cacheBehavior, CacheLevel cacheType, TimeSpan? cacheDuration)
        {
            TypeName = typeName;
            CacheBehavior = cacheBehavior;
            CacheType = cacheType;
            CacheDuration = cacheDuration;
        }

        /// <summary> Gets or sets the type name. </summary>
        public CacheExpirationActionType TypeName { get; set; }
        /// <summary> Caching behavior for the requests. </summary>
        public CacheBehaviorSettings CacheBehavior { get; set; }
        /// <summary> The level at which the content needs to be cached. </summary>
        public CacheLevel CacheType { get; set; }
        /// <summary> The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss. </summary>
        public TimeSpan? CacheDuration { get; set; }
    }
}
