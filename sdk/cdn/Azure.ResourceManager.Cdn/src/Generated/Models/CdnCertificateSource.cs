// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Defines the parameters for using CDN managed certificate for securing custom domain.
    /// Serialized Name: CdnCertificateSourceParameters
    /// </summary>
    public partial class CdnCertificateSource : CertificateSourceProperties
    {
        /// <summary> Initializes a new instance of <see cref="CdnCertificateSource"/>. </summary>
        /// <param name="certificateType">
        /// Type of certificate used
        /// Serialized Name: CdnCertificateSourceParameters.certificateType
        /// </param>
        public CdnCertificateSource(CdnManagedCertificateType certificateType)
        {
            CertificateType = certificateType;
            TypeName = CertificateSourceParametersType.CdnCertificateSourceParameters;
        }

        /// <summary> Initializes a new instance of <see cref="CdnCertificateSource"/>. </summary>
        /// <param name="typeName"> Serialized Name: CertificateSourceParameters.typeName. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="certificateType">
        /// Type of certificate used
        /// Serialized Name: CdnCertificateSourceParameters.certificateType
        /// </param>
        internal CdnCertificateSource(CertificateSourceParametersType typeName, IDictionary<string, BinaryData> serializedAdditionalRawData, CdnManagedCertificateType certificateType) : base(typeName, serializedAdditionalRawData)
        {
            CertificateType = certificateType;
            TypeName = typeName;
        }

        /// <summary> Initializes a new instance of <see cref="CdnCertificateSource"/> for deserialization. </summary>
        internal CdnCertificateSource()
        {
        }

        /// <summary>
        /// Type of certificate used
        /// Serialized Name: CdnCertificateSourceParameters.certificateType
        /// </summary>
        public CdnManagedCertificateType CertificateType { get; set; }
    }
}
