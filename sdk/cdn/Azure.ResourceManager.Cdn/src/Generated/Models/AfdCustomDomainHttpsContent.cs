// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> The JSON object that contains the properties to secure a domain. </summary>
    public partial class AfdCustomDomainHttpsContent
    {
        /// <summary> Initializes a new instance of AfdCustomDomainHttpsContent. </summary>
        /// <param name="certificateType"> Defines the source of the SSL certificate. </param>
        public AfdCustomDomainHttpsContent(AfdCertificateType certificateType)
        {
            CertificateType = certificateType;
        }

        /// <summary> Initializes a new instance of AfdCustomDomainHttpsContent. </summary>
        /// <param name="certificateType"> Defines the source of the SSL certificate. </param>
        /// <param name="minimumTlsVersion"> TLS protocol version that will be used for Https. </param>
        /// <param name="secret"> Resource reference to the secret. ie. subs/rg/profile/secret. </param>
        internal AfdCustomDomainHttpsContent(AfdCertificateType certificateType, AfdMinimumTlsVersion? minimumTlsVersion, AfdCustomDomainHttpsContentSecret secret)
        {
            CertificateType = certificateType;
            MinimumTlsVersion = minimumTlsVersion;
            Secret = secret;
        }

        /// <summary> Defines the source of the SSL certificate. </summary>
        public AfdCertificateType CertificateType { get; set; }
        /// <summary> TLS protocol version that will be used for Https. </summary>
        public AfdMinimumTlsVersion? MinimumTlsVersion { get; set; }
        /// <summary> Resource reference to the secret. ie. subs/rg/profile/secret. </summary>
        internal AfdCustomDomainHttpsContentSecret Secret { get; set; }
        /// <summary> Resource ID. </summary>
        public ResourceIdentifier SecretId
        {
            get => Secret is null ? default : Secret.Id;
            set
            {
                if (Secret is null)
                    Secret = new AfdCustomDomainHttpsContentSecret();
                Secret.Id = value;
            }
        }
    }
}
