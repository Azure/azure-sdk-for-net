// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Defines the parameters for the cache expiration action.
    /// Serialized Name: CacheExpirationActionParameters
    /// </summary>
    public partial class CacheExpirationActionProperties : DeliveryRuleActionProperties
    {
        /// <summary> Initializes a new instance of <see cref="CacheExpirationActionProperties"/>. </summary>
        /// <param name="cacheBehavior">
        /// Caching behavior for the requests
        /// Serialized Name: CacheExpirationActionParameters.cacheBehavior
        /// </param>
        /// <param name="cacheType">
        /// The level at which the content needs to be cached.
        /// Serialized Name: CacheExpirationActionParameters.cacheType
        /// </param>
        public CacheExpirationActionProperties(CacheBehaviorSetting cacheBehavior, CdnCacheLevel cacheType)
        {
            CacheBehavior = cacheBehavior;
            CacheType = cacheType;
            TypeName = DeliveryRuleActionParametersType.DeliveryRuleCacheExpirationActionParameters;
        }

        /// <summary> Initializes a new instance of <see cref="CacheExpirationActionProperties"/>. </summary>
        /// <param name="typeName"> Serialized Name: DeliveryRuleActionParameters.typeName. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="cacheBehavior">
        /// Caching behavior for the requests
        /// Serialized Name: CacheExpirationActionParameters.cacheBehavior
        /// </param>
        /// <param name="cacheType">
        /// The level at which the content needs to be cached.
        /// Serialized Name: CacheExpirationActionParameters.cacheType
        /// </param>
        /// <param name="cacheDuration">
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// Serialized Name: CacheExpirationActionParameters.cacheDuration
        /// </param>
        internal CacheExpirationActionProperties(DeliveryRuleActionParametersType typeName, IDictionary<string, BinaryData> serializedAdditionalRawData, CacheBehaviorSetting cacheBehavior, CdnCacheLevel cacheType, TimeSpan? cacheDuration) : base(typeName, serializedAdditionalRawData)
        {
            CacheBehavior = cacheBehavior;
            CacheType = cacheType;
            CacheDuration = cacheDuration;
            TypeName = typeName;
        }

        /// <summary> Initializes a new instance of <see cref="CacheExpirationActionProperties"/> for deserialization. </summary>
        internal CacheExpirationActionProperties()
        {
        }

        /// <summary>
        /// Caching behavior for the requests
        /// Serialized Name: CacheExpirationActionParameters.cacheBehavior
        /// </summary>
        public CacheBehaviorSetting CacheBehavior { get; set; }
        /// <summary>
        /// The level at which the content needs to be cached.
        /// Serialized Name: CacheExpirationActionParameters.cacheType
        /// </summary>
        public CdnCacheLevel CacheType { get; set; }
        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// Serialized Name: CacheExpirationActionParameters.cacheDuration
        /// </summary>
        public TimeSpan? CacheDuration { get; set; }
    }
}
