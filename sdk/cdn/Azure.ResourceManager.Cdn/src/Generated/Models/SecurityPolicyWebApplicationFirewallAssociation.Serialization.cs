// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Cdn.Models
{
    internal partial class SecurityPolicyWebApplicationFirewallAssociation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Domains))
            {
                writer.WritePropertyName("domains");
                writer.WriteStartArray();
                foreach (var item in Domains)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(PatternsToMatch))
            {
                writer.WritePropertyName("patternsToMatch");
                writer.WriteStartArray();
                foreach (var item in PatternsToMatch)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static SecurityPolicyWebApplicationFirewallAssociation DeserializeSecurityPolicyWebApplicationFirewallAssociation(JsonElement element)
        {
            Optional<IList<ActivatedResourceReference>> domains = default;
            Optional<IList<string>> patternsToMatch = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("domains"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ActivatedResourceReference> array = new List<ActivatedResourceReference>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ActivatedResourceReference.DeserializeActivatedResourceReference(item));
                    }
                    domains = array;
                    continue;
                }
                if (property.NameEquals("patternsToMatch"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    patternsToMatch = array;
                    continue;
                }
            }
            return new SecurityPolicyWebApplicationFirewallAssociation(Optional.ToList(domains), Optional.ToList(patternsToMatch));
        }
    }
}
