// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Cdn.Models
{
    public partial class AfdRouteCacheConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(QueryStringCachingBehavior))
            {
                writer.WritePropertyName("queryStringCachingBehavior");
                writer.WriteStringValue(QueryStringCachingBehavior.Value.ToString());
            }
            if (Optional.IsDefined(QueryParameters))
            {
                writer.WritePropertyName("queryParameters");
                writer.WriteStringValue(QueryParameters);
            }
            if (Optional.IsDefined(CompressionSettings))
            {
                writer.WritePropertyName("compressionSettings");
                writer.WriteObjectValue(CompressionSettings);
            }
            writer.WriteEndObject();
        }

        internal static AfdRouteCacheConfiguration DeserializeAfdRouteCacheConfiguration(JsonElement element)
        {
            Optional<AfdQueryStringCachingBehavior> queryStringCachingBehavior = default;
            Optional<string> queryParameters = default;
            Optional<CompressionSettings> compressionSettings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("queryStringCachingBehavior"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    queryStringCachingBehavior = new AfdQueryStringCachingBehavior(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("queryParameters"))
                {
                    queryParameters = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("compressionSettings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    compressionSettings = CompressionSettings.DeserializeCompressionSettings(property.Value);
                    continue;
                }
            }
            return new AfdRouteCacheConfiguration(Optional.ToNullable(queryStringCachingBehavior), queryParameters.Value, compressionSettings.Value);
        }
    }
}
