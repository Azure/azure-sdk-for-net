// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> Rules defining user&apos;s geo access within a CDN endpoint. </summary>
    public partial class GeoFilter
    {
        /// <summary> Initializes a new instance of GeoFilter. </summary>
        /// <param name="relativePath"> Relative path applicable to geo filter. (e.g. &apos;/mypictures&apos;, &apos;/mypicture/kitty.jpg&apos;, and etc.). </param>
        /// <param name="action"> Action of the geo filter, i.e. allow or block access. </param>
        /// <param name="countryCodes"> Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="relativePath"/> or <paramref name="countryCodes"/> is null. </exception>
        public GeoFilter(string relativePath, GeoFilterActions action, IEnumerable<string> countryCodes)
        {
            if (relativePath == null)
            {
                throw new ArgumentNullException(nameof(relativePath));
            }
            if (countryCodes == null)
            {
                throw new ArgumentNullException(nameof(countryCodes));
            }

            RelativePath = relativePath;
            Action = action;
            CountryCodes = countryCodes.ToList();
        }

        /// <summary> Initializes a new instance of GeoFilter. </summary>
        /// <param name="relativePath"> Relative path applicable to geo filter. (e.g. &apos;/mypictures&apos;, &apos;/mypicture/kitty.jpg&apos;, and etc.). </param>
        /// <param name="action"> Action of the geo filter, i.e. allow or block access. </param>
        /// <param name="countryCodes"> Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US. </param>
        internal GeoFilter(string relativePath, GeoFilterActions action, IList<string> countryCodes)
        {
            RelativePath = relativePath;
            Action = action;
            CountryCodes = countryCodes;
        }

        /// <summary> Relative path applicable to geo filter. (e.g. &apos;/mypictures&apos;, &apos;/mypicture/kitty.jpg&apos;, and etc.). </summary>
        public string RelativePath { get; set; }
        /// <summary> Action of the geo filter, i.e. allow or block access. </summary>
        public GeoFilterActions Action { get; set; }
        /// <summary> Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US. </summary>
        public IList<string> CountryCodes { get; }
    }
}
