// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// The AfdCustomizedCipherSuiteForTls13.
    /// Serialized Name: AfdCustomizedCipherSuiteForTls13
    /// </summary>
    public readonly partial struct AfdCustomizedCipherSuiteForTls13 : IEquatable<AfdCustomizedCipherSuiteForTls13>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AfdCustomizedCipherSuiteForTls13"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AfdCustomizedCipherSuiteForTls13(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string Tls_Aes_128_Gcm_Sha256Value = "TLS_AES_128_GCM_SHA256";
        private const string Tls_Aes_256_Gcm_Sha384Value = "TLS_AES_256_GCM_SHA384";
        /// <summary> Determines if two <see cref="AfdCustomizedCipherSuiteForTls13"/> values are the same. </summary>
        public static bool operator ==(AfdCustomizedCipherSuiteForTls13 left, AfdCustomizedCipherSuiteForTls13 right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AfdCustomizedCipherSuiteForTls13"/> values are not the same. </summary>
        public static bool operator !=(AfdCustomizedCipherSuiteForTls13 left, AfdCustomizedCipherSuiteForTls13 right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AfdCustomizedCipherSuiteForTls13"/>. </summary>
        public static implicit operator AfdCustomizedCipherSuiteForTls13(string value) => new AfdCustomizedCipherSuiteForTls13(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AfdCustomizedCipherSuiteForTls13 other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AfdCustomizedCipherSuiteForTls13 other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
