// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. </summary>
    public partial class FrontDoorRouteCacheConfiguration
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="FrontDoorRouteCacheConfiguration"/>. </summary>
        public FrontDoorRouteCacheConfiguration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="FrontDoorRouteCacheConfiguration"/>. </summary>
        /// <param name="queryStringCachingBehavior"> Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. </param>
        /// <param name="queryParameters"> query parameters to include or exclude (comma separated). </param>
        /// <param name="compressionSettings"> compression settings. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal FrontDoorRouteCacheConfiguration(FrontDoorQueryStringCachingBehavior? queryStringCachingBehavior, string queryParameters, RouteCacheCompressionSettings compressionSettings, Dictionary<string, BinaryData> rawData)
        {
            QueryStringCachingBehavior = queryStringCachingBehavior;
            QueryParameters = queryParameters;
            CompressionSettings = compressionSettings;
            _rawData = rawData;
        }

        /// <summary> Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. </summary>
        public FrontDoorQueryStringCachingBehavior? QueryStringCachingBehavior { get; set; }
        /// <summary> query parameters to include or exclude (comma separated). </summary>
        public string QueryParameters { get; set; }
        /// <summary> compression settings. </summary>
        public RouteCacheCompressionSettings CompressionSettings { get; set; }
    }
}
