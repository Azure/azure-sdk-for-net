// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Defines contents of a web application rule
    /// Serialized Name: CustomRuleAutoGenerated
    /// </summary>
    public partial class CustomRuleAutoGenerated
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CustomRuleAutoGenerated"/>. </summary>
        /// <param name="priority">
        /// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
        /// Serialized Name: CustomRuleAutoGenerated.priority
        /// </param>
        /// <param name="ruleType">
        /// Describes type of rule.
        /// Serialized Name: CustomRuleAutoGenerated.ruleType
        /// </param>
        /// <param name="matchConditions">
        /// List of match conditions.
        /// Serialized Name: CustomRuleAutoGenerated.matchConditions
        /// </param>
        /// <param name="action">
        /// Describes what action to be applied when rule matches.
        /// Serialized Name: CustomRuleAutoGenerated.action
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="matchConditions"/> is null. </exception>
        public CustomRuleAutoGenerated(int priority, RuleType ruleType, IEnumerable<MatchConditionAutoGenerated> matchConditions, OverrideActionType action)
        {
            Argument.AssertNotNull(matchConditions, nameof(matchConditions));

            Priority = priority;
            RuleType = ruleType;
            GroupBy = new ChangeTrackingList<GroupByVariable>();
            MatchConditions = matchConditions.ToList();
            Action = action;
        }

        /// <summary> Initializes a new instance of <see cref="CustomRuleAutoGenerated"/>. </summary>
        /// <param name="name">
        /// Describes the name of the rule.
        /// Serialized Name: CustomRuleAutoGenerated.name
        /// </param>
        /// <param name="priority">
        /// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
        /// Serialized Name: CustomRuleAutoGenerated.priority
        /// </param>
        /// <param name="enabledState">
        /// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
        /// Serialized Name: CustomRuleAutoGenerated.enabledState
        /// </param>
        /// <param name="ruleType">
        /// Describes type of rule.
        /// Serialized Name: CustomRuleAutoGenerated.ruleType
        /// </param>
        /// <param name="rateLimitDurationInMinutes">
        /// Time window for resetting the rate limit count. Default is 1 minute.
        /// Serialized Name: CustomRuleAutoGenerated.rateLimitDurationInMinutes
        /// </param>
        /// <param name="rateLimitThreshold">
        /// Number of allowed requests per client within the time window.
        /// Serialized Name: CustomRuleAutoGenerated.rateLimitThreshold
        /// </param>
        /// <param name="groupBy">
        /// Describes the list of variables to group the rate limit requests
        /// Serialized Name: CustomRuleAutoGenerated.groupBy
        /// </param>
        /// <param name="matchConditions">
        /// List of match conditions.
        /// Serialized Name: CustomRuleAutoGenerated.matchConditions
        /// </param>
        /// <param name="action">
        /// Describes what action to be applied when rule matches.
        /// Serialized Name: CustomRuleAutoGenerated.action
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CustomRuleAutoGenerated(string name, int priority, CustomRuleEnabledState? enabledState, RuleType ruleType, int? rateLimitDurationInMinutes, int? rateLimitThreshold, IList<GroupByVariable> groupBy, IList<MatchConditionAutoGenerated> matchConditions, OverrideActionType action, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Priority = priority;
            EnabledState = enabledState;
            RuleType = ruleType;
            RateLimitDurationInMinutes = rateLimitDurationInMinutes;
            RateLimitThreshold = rateLimitThreshold;
            GroupBy = groupBy;
            MatchConditions = matchConditions;
            Action = action;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CustomRuleAutoGenerated"/> for deserialization. </summary>
        internal CustomRuleAutoGenerated()
        {
        }

        /// <summary>
        /// Describes the name of the rule.
        /// Serialized Name: CustomRuleAutoGenerated.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
        /// Serialized Name: CustomRuleAutoGenerated.priority
        /// </summary>
        public int Priority { get; set; }
        /// <summary>
        /// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
        /// Serialized Name: CustomRuleAutoGenerated.enabledState
        /// </summary>
        public CustomRuleEnabledState? EnabledState { get; set; }
        /// <summary>
        /// Describes type of rule.
        /// Serialized Name: CustomRuleAutoGenerated.ruleType
        /// </summary>
        public RuleType RuleType { get; set; }
        /// <summary>
        /// Time window for resetting the rate limit count. Default is 1 minute.
        /// Serialized Name: CustomRuleAutoGenerated.rateLimitDurationInMinutes
        /// </summary>
        public int? RateLimitDurationInMinutes { get; set; }
        /// <summary>
        /// Number of allowed requests per client within the time window.
        /// Serialized Name: CustomRuleAutoGenerated.rateLimitThreshold
        /// </summary>
        public int? RateLimitThreshold { get; set; }
        /// <summary>
        /// Describes the list of variables to group the rate limit requests
        /// Serialized Name: CustomRuleAutoGenerated.groupBy
        /// </summary>
        public IList<GroupByVariable> GroupBy { get; }
        /// <summary>
        /// List of match conditions.
        /// Serialized Name: CustomRuleAutoGenerated.matchConditions
        /// </summary>
        public IList<MatchConditionAutoGenerated> MatchConditions { get; }
        /// <summary>
        /// Describes what action to be applied when rule matches.
        /// Serialized Name: CustomRuleAutoGenerated.action
        /// </summary>
        public OverrideActionType Action { get; set; }
    }
}
