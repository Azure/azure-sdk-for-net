// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> The MetricsSeriesUnit. </summary>
    public readonly partial struct MetricsSeriesUnit : IEquatable<MetricsSeriesUnit>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MetricsSeriesUnit"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MetricsSeriesUnit(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CountValue = "count";
        private const string BytesValue = "bytes";
        private const string BitsPerSecondValue = "bitsPerSecond";
        private const string MilliSecondsValue = "milliSeconds";

        /// <summary> count. </summary>
        public static MetricsSeriesUnit Count { get; } = new MetricsSeriesUnit(CountValue);
        /// <summary> bytes. </summary>
        public static MetricsSeriesUnit Bytes { get; } = new MetricsSeriesUnit(BytesValue);
        /// <summary> bitsPerSecond. </summary>
        public static MetricsSeriesUnit BitsPerSecond { get; } = new MetricsSeriesUnit(BitsPerSecondValue);
        /// <summary> milliSeconds. </summary>
        public static MetricsSeriesUnit MilliSeconds { get; } = new MetricsSeriesUnit(MilliSecondsValue);
        /// <summary> Determines if two <see cref="MetricsSeriesUnit"/> values are the same. </summary>
        public static bool operator ==(MetricsSeriesUnit left, MetricsSeriesUnit right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MetricsSeriesUnit"/> values are not the same. </summary>
        public static bool operator !=(MetricsSeriesUnit left, MetricsSeriesUnit right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MetricsSeriesUnit"/>. </summary>
        public static implicit operator MetricsSeriesUnit(string value) => new MetricsSeriesUnit(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MetricsSeriesUnit other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MetricsSeriesUnit other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
