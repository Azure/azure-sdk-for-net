// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Resource type supported by preview.
    /// Serialized Name: PreviewSupportedResourceType
    /// </summary>
    internal readonly partial struct PreviewSupportedResourceType : IEquatable<PreviewSupportedResourceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PreviewSupportedResourceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PreviewSupportedResourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MicrosoftCdnProfilesAfdEndpointsRoutesValue = "Microsoft.Cdn/profiles/afdEndpoints/routes";
        private const string MicrosoftCdnProfilesOriginGroupsValue = "Microsoft.Cdn/profiles/originGroups";
        private const string MicrosoftCdnProfilesOriginGroupsOriginsValue = "Microsoft.Cdn/profiles/originGroups/origins";
        private const string MicrosoftCdnProfilesRuleSetsValue = "Microsoft.Cdn/profiles/ruleSets";
        private const string MicrosoftCdnProfilesRuleSetsRulesValue = "Microsoft.Cdn/profiles/ruleSets/rules";
        private const string MicrosoftCdnProfilesSecurityPoliciesValue = "Microsoft.Cdn/profiles/securityPolicies";

        /// <summary>
        /// Microsoft.Cdn/profiles/afdEndpoints/routes
        /// Serialized Name: PreviewSupportedResourceType.Microsoft.Cdn/profiles/afdEndpoints/routes
        /// </summary>
        public static PreviewSupportedResourceType MicrosoftCdnProfilesAfdEndpointsRoutes { get; } = new PreviewSupportedResourceType(MicrosoftCdnProfilesAfdEndpointsRoutesValue);
        /// <summary>
        /// Microsoft.Cdn/profiles/originGroups
        /// Serialized Name: PreviewSupportedResourceType.Microsoft.Cdn/profiles/originGroups
        /// </summary>
        public static PreviewSupportedResourceType MicrosoftCdnProfilesOriginGroups { get; } = new PreviewSupportedResourceType(MicrosoftCdnProfilesOriginGroupsValue);
        /// <summary>
        /// Microsoft.Cdn/profiles/originGroups/origins
        /// Serialized Name: PreviewSupportedResourceType.Microsoft.Cdn/profiles/originGroups/origins
        /// </summary>
        public static PreviewSupportedResourceType MicrosoftCdnProfilesOriginGroupsOrigins { get; } = new PreviewSupportedResourceType(MicrosoftCdnProfilesOriginGroupsOriginsValue);
        /// <summary>
        /// Microsoft.Cdn/profiles/ruleSets
        /// Serialized Name: PreviewSupportedResourceType.Microsoft.Cdn/profiles/ruleSets
        /// </summary>
        public static PreviewSupportedResourceType MicrosoftCdnProfilesRuleSets { get; } = new PreviewSupportedResourceType(MicrosoftCdnProfilesRuleSetsValue);
        /// <summary>
        /// Microsoft.Cdn/profiles/ruleSets/rules
        /// Serialized Name: PreviewSupportedResourceType.Microsoft.Cdn/profiles/ruleSets/rules
        /// </summary>
        public static PreviewSupportedResourceType MicrosoftCdnProfilesRuleSetsRules { get; } = new PreviewSupportedResourceType(MicrosoftCdnProfilesRuleSetsRulesValue);
        /// <summary>
        /// Microsoft.Cdn/profiles/securityPolicies
        /// Serialized Name: PreviewSupportedResourceType.Microsoft.Cdn/profiles/securityPolicies
        /// </summary>
        public static PreviewSupportedResourceType MicrosoftCdnProfilesSecurityPolicies { get; } = new PreviewSupportedResourceType(MicrosoftCdnProfilesSecurityPoliciesValue);
        /// <summary> Determines if two <see cref="PreviewSupportedResourceType"/> values are the same. </summary>
        public static bool operator ==(PreviewSupportedResourceType left, PreviewSupportedResourceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PreviewSupportedResourceType"/> values are not the same. </summary>
        public static bool operator !=(PreviewSupportedResourceType left, PreviewSupportedResourceType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="PreviewSupportedResourceType"/>. </summary>
        public static implicit operator PreviewSupportedResourceType(string value) => new PreviewSupportedResourceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PreviewSupportedResourceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PreviewSupportedResourceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
