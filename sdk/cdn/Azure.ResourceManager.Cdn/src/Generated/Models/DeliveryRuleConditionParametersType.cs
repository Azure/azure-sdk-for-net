// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// The DeliveryRuleConditionParametersType.
    /// Serialized Name: DeliveryRuleConditionParametersType
    /// </summary>
    internal readonly partial struct DeliveryRuleConditionParametersType : IEquatable<DeliveryRuleConditionParametersType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DeliveryRuleConditionParametersType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DeliveryRuleConditionParametersType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DeliveryRuleRemoteAddressConditionParametersValue = "DeliveryRuleRemoteAddressConditionParameters";
        private const string DeliveryRuleRequestMethodConditionParametersValue = "DeliveryRuleRequestMethodConditionParameters";
        private const string DeliveryRuleQueryStringConditionParametersValue = "DeliveryRuleQueryStringConditionParameters";
        private const string DeliveryRulePostArgsConditionParametersValue = "DeliveryRulePostArgsConditionParameters";
        private const string DeliveryRuleRequestUriConditionParametersValue = "DeliveryRuleRequestUriConditionParameters";
        private const string DeliveryRuleRequestHeaderConditionParametersValue = "DeliveryRuleRequestHeaderConditionParameters";
        private const string DeliveryRuleRequestBodyConditionParametersValue = "DeliveryRuleRequestBodyConditionParameters";
        private const string DeliveryRuleRequestSchemeConditionParametersValue = "DeliveryRuleRequestSchemeConditionParameters";
        private const string DeliveryRuleUriPathMatchConditionParametersValue = "DeliveryRuleUrlPathMatchConditionParameters";
        private const string DeliveryRuleUriFileExtensionMatchConditionParametersValue = "DeliveryRuleUrlFileExtensionMatchConditionParameters";
        private const string DeliveryRuleUriFilenameConditionParametersValue = "DeliveryRuleUrlFilenameConditionParameters";
        private const string DeliveryRuleHttpVersionConditionParametersValue = "DeliveryRuleHttpVersionConditionParameters";
        private const string DeliveryRuleCookiesConditionParametersValue = "DeliveryRuleCookiesConditionParameters";
        private const string DeliveryRuleIsDeviceConditionParametersValue = "DeliveryRuleIsDeviceConditionParameters";
        private const string DeliveryRuleSocketAddrConditionParametersValue = "DeliveryRuleSocketAddrConditionParameters";
        private const string DeliveryRuleClientPortConditionParametersValue = "DeliveryRuleClientPortConditionParameters";
        private const string DeliveryRuleServerPortConditionParametersValue = "DeliveryRuleServerPortConditionParameters";
        private const string DeliveryRuleHostNameConditionParametersValue = "DeliveryRuleHostNameConditionParameters";
        private const string DeliveryRuleSslProtocolConditionParametersValue = "DeliveryRuleSslProtocolConditionParameters";

        /// <summary>
        /// DeliveryRuleRemoteAddressConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleRemoteAddressConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleRemoteAddressConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleRemoteAddressConditionParametersValue);
        /// <summary>
        /// DeliveryRuleRequestMethodConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleRequestMethodConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleRequestMethodConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleRequestMethodConditionParametersValue);
        /// <summary>
        /// DeliveryRuleQueryStringConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleQueryStringConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleQueryStringConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleQueryStringConditionParametersValue);
        /// <summary>
        /// DeliveryRulePostArgsConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRulePostArgsConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRulePostArgsConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRulePostArgsConditionParametersValue);
        /// <summary>
        /// DeliveryRuleRequestUriConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleRequestUriConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleRequestUriConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleRequestUriConditionParametersValue);
        /// <summary>
        /// DeliveryRuleRequestHeaderConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleRequestHeaderConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleRequestHeaderConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleRequestHeaderConditionParametersValue);
        /// <summary>
        /// DeliveryRuleRequestBodyConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleRequestBodyConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleRequestBodyConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleRequestBodyConditionParametersValue);
        /// <summary>
        /// DeliveryRuleRequestSchemeConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleRequestSchemeConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleRequestSchemeConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleRequestSchemeConditionParametersValue);
        /// <summary>
        /// DeliveryRuleUrlPathMatchConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleUrlPathMatchConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleUriPathMatchConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleUriPathMatchConditionParametersValue);
        /// <summary>
        /// DeliveryRuleUrlFileExtensionMatchConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleUrlFileExtensionMatchConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleUriFileExtensionMatchConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleUriFileExtensionMatchConditionParametersValue);
        /// <summary>
        /// DeliveryRuleUrlFilenameConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleUrlFilenameConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleUriFilenameConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleUriFilenameConditionParametersValue);
        /// <summary>
        /// DeliveryRuleHttpVersionConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleHttpVersionConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleHttpVersionConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleHttpVersionConditionParametersValue);
        /// <summary>
        /// DeliveryRuleCookiesConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleCookiesConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleCookiesConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleCookiesConditionParametersValue);
        /// <summary>
        /// DeliveryRuleIsDeviceConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleIsDeviceConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleIsDeviceConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleIsDeviceConditionParametersValue);
        /// <summary>
        /// DeliveryRuleSocketAddrConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleSocketAddrConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleSocketAddrConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleSocketAddrConditionParametersValue);
        /// <summary>
        /// DeliveryRuleClientPortConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleClientPortConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleClientPortConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleClientPortConditionParametersValue);
        /// <summary>
        /// DeliveryRuleServerPortConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleServerPortConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleServerPortConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleServerPortConditionParametersValue);
        /// <summary>
        /// DeliveryRuleHostNameConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleHostNameConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleHostNameConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleHostNameConditionParametersValue);
        /// <summary>
        /// DeliveryRuleSslProtocolConditionParameters
        /// Serialized Name: DeliveryRuleConditionParametersType.DeliveryRuleSslProtocolConditionParameters
        /// </summary>
        public static DeliveryRuleConditionParametersType DeliveryRuleSslProtocolConditionParameters { get; } = new DeliveryRuleConditionParametersType(DeliveryRuleSslProtocolConditionParametersValue);
        /// <summary> Determines if two <see cref="DeliveryRuleConditionParametersType"/> values are the same. </summary>
        public static bool operator ==(DeliveryRuleConditionParametersType left, DeliveryRuleConditionParametersType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DeliveryRuleConditionParametersType"/> values are not the same. </summary>
        public static bool operator !=(DeliveryRuleConditionParametersType left, DeliveryRuleConditionParametersType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DeliveryRuleConditionParametersType"/>. </summary>
        public static implicit operator DeliveryRuleConditionParametersType(string value) => new DeliveryRuleConditionParametersType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DeliveryRuleConditionParametersType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DeliveryRuleConditionParametersType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
