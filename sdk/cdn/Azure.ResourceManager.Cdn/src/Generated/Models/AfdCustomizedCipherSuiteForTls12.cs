// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> The AfdCustomizedCipherSuiteForTls12. </summary>
    public readonly partial struct AfdCustomizedCipherSuiteForTls12 : IEquatable<AfdCustomizedCipherSuiteForTls12>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AfdCustomizedCipherSuiteForTls12"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AfdCustomizedCipherSuiteForTls12(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string EcdheRSAAES128GCMSHA256Value = "ECDHE_RSA_AES128_GCM_SHA256";
        private const string EcdheRSAAES256GCMSHA384Value = "ECDHE_RSA_AES256_GCM_SHA384";
        private const string DHERSAAES256GCMSHA384Value = "DHE_RSA_AES256_GCM_SHA384";
        private const string DHERSAAES128GCMSHA256Value = "DHE_RSA_AES128_GCM_SHA256";
        private const string EcdheRSAAES128Sha256Value = "ECDHE_RSA_AES128_SHA256";
        private const string EcdheRSAAES256SHA384Value = "ECDHE_RSA_AES256_SHA384";

        /// <summary> ECDHE_RSA_AES128_GCM_SHA256. </summary>
        public static AfdCustomizedCipherSuiteForTls12 EcdheRSAAES128GCMSHA256 { get; } = new AfdCustomizedCipherSuiteForTls12(EcdheRSAAES128GCMSHA256Value);
        /// <summary> ECDHE_RSA_AES256_GCM_SHA384. </summary>
        public static AfdCustomizedCipherSuiteForTls12 EcdheRSAAES256GCMSHA384 { get; } = new AfdCustomizedCipherSuiteForTls12(EcdheRSAAES256GCMSHA384Value);
        /// <summary> DHE_RSA_AES256_GCM_SHA384. </summary>
        public static AfdCustomizedCipherSuiteForTls12 DHERSAAES256GCMSHA384 { get; } = new AfdCustomizedCipherSuiteForTls12(DHERSAAES256GCMSHA384Value);
        /// <summary> DHE_RSA_AES128_GCM_SHA256. </summary>
        public static AfdCustomizedCipherSuiteForTls12 DHERSAAES128GCMSHA256 { get; } = new AfdCustomizedCipherSuiteForTls12(DHERSAAES128GCMSHA256Value);
        /// <summary> ECDHE_RSA_AES128_SHA256. </summary>
        public static AfdCustomizedCipherSuiteForTls12 EcdheRSAAES128Sha256 { get; } = new AfdCustomizedCipherSuiteForTls12(EcdheRSAAES128Sha256Value);
        /// <summary> ECDHE_RSA_AES256_SHA384. </summary>
        public static AfdCustomizedCipherSuiteForTls12 EcdheRSAAES256SHA384 { get; } = new AfdCustomizedCipherSuiteForTls12(EcdheRSAAES256SHA384Value);
        /// <summary> Determines if two <see cref="AfdCustomizedCipherSuiteForTls12"/> values are the same. </summary>
        public static bool operator ==(AfdCustomizedCipherSuiteForTls12 left, AfdCustomizedCipherSuiteForTls12 right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AfdCustomizedCipherSuiteForTls12"/> values are not the same. </summary>
        public static bool operator !=(AfdCustomizedCipherSuiteForTls12 left, AfdCustomizedCipherSuiteForTls12 right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AfdCustomizedCipherSuiteForTls12"/>. </summary>
        public static implicit operator AfdCustomizedCipherSuiteForTls12(string value) => new AfdCustomizedCipherSuiteForTls12(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AfdCustomizedCipherSuiteForTls12 other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AfdCustomizedCipherSuiteForTls12 other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
