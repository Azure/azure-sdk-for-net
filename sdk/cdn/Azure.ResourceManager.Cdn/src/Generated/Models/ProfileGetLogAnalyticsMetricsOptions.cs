// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> A class representing the query and header parameters in GetLogAnalyticsMetrics method. </summary>
    public partial class ProfileGetLogAnalyticsMetricsOptions
    {
        /// <summary> Initializes a new instance of ProfileGetLogAnalyticsMetricsOptions. </summary>
        /// <param name="metrics"></param>
        /// <param name="dateTimeBegin"></param>
        /// <param name="dateTimeEnd"></param>
        /// <param name="granularity"></param>
        /// <param name="customDomains"></param>
        /// <param name="protocols"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="metrics"/>, <paramref name="customDomains"/> or <paramref name="protocols"/> is null. </exception>
        public ProfileGetLogAnalyticsMetricsOptions(IEnumerable<LogMetric> metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, LogMetricsGranularity granularity, IEnumerable<string> customDomains, IEnumerable<string> protocols)
        {
            Argument.AssertNotNull(metrics, nameof(metrics));
            Argument.AssertNotNull(customDomains, nameof(customDomains));
            Argument.AssertNotNull(protocols, nameof(protocols));

            Metrics = metrics.ToList();
            DateTimeBegin = dateTimeBegin;
            DateTimeEnd = dateTimeEnd;
            Granularity = granularity;
            GroupBy = new ChangeTrackingList<LogMetricsGroupBy>();
            Continents = new ChangeTrackingList<string>();
            CountryOrRegions = new ChangeTrackingList<string>();
            CustomDomains = customDomains.ToList();
            Protocols = protocols.ToList();
        }

        /// <summary> Gets the metrics. </summary>
        public IList<LogMetric> Metrics { get; }
        /// <summary> Gets the date time begin. </summary>
        public DateTimeOffset DateTimeBegin { get; }
        /// <summary> Gets the date time end. </summary>
        public DateTimeOffset DateTimeEnd { get; }
        /// <summary> Gets the granularity. </summary>
        public LogMetricsGranularity Granularity { get; }
        /// <summary> Gets the group by. </summary>
        public IList<LogMetricsGroupBy> GroupBy { get; }
        /// <summary> Gets the continents. </summary>
        public IList<string> Continents { get; }
        /// <summary> Gets the country or regions. </summary>
        public IList<string> CountryOrRegions { get; }
        /// <summary> Gets the custom domains. </summary>
        public IList<string> CustomDomains { get; }
        /// <summary> Gets the protocols. </summary>
        public IList<string> Protocols { get; }
    }
}
