// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> The ProfileResourceGetLogAnalyticsMetricsOptions. </summary>
    public partial class ProfileResourceGetLogAnalyticsMetricsOptions
    {
        /// <summary> Initializes a new instance of ProfileResourceGetLogAnalyticsMetricsOptions. </summary>
        /// <param name="metrics"> The ArrayOfLogMetric to use. </param>
        /// <param name="dateTimeBegin"> The DateTime to use. </param>
        /// <param name="dateTimeEnd"> The DateTime to use. </param>
        /// <param name="granularity"> The LogMetricsGranularity to use. </param>
        /// <param name="customDomains"> The ArrayOfGet11ItemsItem to use. </param>
        /// <param name="protocols"> The ArrayOfGet12ItemsItem to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="metrics"/>, <paramref name="customDomains"/> or <paramref name="protocols"/> is null. </exception>
        public ProfileResourceGetLogAnalyticsMetricsOptions(IEnumerable<LogMetric> metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, LogMetricsGranularity granularity, IEnumerable<string> customDomains, IEnumerable<string> protocols)
        {
            Argument.AssertNotNull(metrics, nameof(metrics));
            Argument.AssertNotNull(customDomains, nameof(customDomains));
            Argument.AssertNotNull(protocols, nameof(protocols));

            Metrics = metrics.ToList();
            DateTimeBegin = dateTimeBegin;
            DateTimeEnd = dateTimeEnd;
            Granularity = granularity;
            CustomDomains = customDomains.ToList();
            Protocols = protocols.ToList();
            GroupBy = new ChangeTrackingList<LogMetricsGroupBy>();
            Continents = new ChangeTrackingList<string>();
            CountryOrRegions = new ChangeTrackingList<string>();
        }

        /// <summary> The ArrayOfLogMetric to use. </summary>
        public IList<LogMetric> Metrics { get; }
        /// <summary> The DateTime to use. </summary>
        public DateTimeOffset DateTimeBegin { get; }
        /// <summary> The DateTime to use. </summary>
        public DateTimeOffset DateTimeEnd { get; }
        /// <summary> The LogMetricsGranularity to use. </summary>
        public LogMetricsGranularity Granularity { get; }
        /// <summary> The ArrayOfGet11ItemsItem to use. </summary>
        public IList<string> CustomDomains { get; }
        /// <summary> The ArrayOfGet12ItemsItem to use. </summary>
        public IList<string> Protocols { get; }
        /// <summary> The ArrayOfLogMetricsGroupBy to use. </summary>
        public IList<LogMetricsGroupBy> GroupBy { get; }
        /// <summary> The ArrayOfGet9ItemsItem to use. </summary>
        public IList<string> Continents { get; }
        /// <summary> The ArrayOfGet10ItemsItem to use. </summary>
        public IList<string> CountryOrRegions { get; }
    }
}
