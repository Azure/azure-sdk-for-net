// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> Customer Certificate used for https. </summary>
    internal partial class CustomerCertificate : Certificate
    {
        /// <summary> Initializes a new instance of CustomerCertificate. </summary>
        internal CustomerCertificate()
        {
            SubjectAlternativeNames = new ChangeTrackingList<string>();
        }

        /// <summary> Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​. </summary>
        internal WritableSubResource SecretSource { get; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier SecretSourceId
        {
            get => SecretSource.Id;
            set => SecretSource.Id = value;
        }

        /// <summary> Certificate version. </summary>
        public string SecretVersion { get; }
        /// <summary> Certificate issuing authority. </summary>
        public string CertificateAuthority { get; }
        /// <summary> Whether to use the latest version for the certificate. </summary>
        public bool? UseLatestVersion { get; }
        /// <summary> The list of SANs. </summary>
        public IReadOnlyList<string> SubjectAlternativeNames { get; }
        /// <summary> Certificate thumbprint. </summary>
        public string Thumbprint { get; }
    }
}
