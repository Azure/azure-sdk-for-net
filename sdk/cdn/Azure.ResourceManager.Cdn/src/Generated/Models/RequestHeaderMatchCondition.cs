// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> Defines the parameters for RequestHeader match conditions. </summary>
    public partial class RequestHeaderMatchCondition : DeliveryRuleConditionParameters
    {
        /// <summary> Initializes a new instance of <see cref="RequestHeaderMatchCondition"/>. </summary>
        /// <param name="requestHeaderOperator"> Describes operator to be matched. </param>
        public RequestHeaderMatchCondition(RequestHeaderOperator requestHeaderOperator)
        {
            RequestHeaderOperator = requestHeaderOperator;
            MatchValues = new ChangeTrackingList<string>();
            Transforms = new ChangeTrackingList<PreTransformCategory>();
            TypeName = DeliveryRuleConditionParametersType.DeliveryRuleRequestHeaderConditionParameters;
        }

        /// <summary> Initializes a new instance of <see cref="RequestHeaderMatchCondition"/>. </summary>
        /// <param name="typeName"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="selector"> Name of Header to be matched. </param>
        /// <param name="requestHeaderOperator"> Describes operator to be matched. </param>
        /// <param name="negateCondition"> Describes if this is negate condition or not. </param>
        /// <param name="matchValues"> The match value for the condition of the delivery rule. </param>
        /// <param name="transforms"> List of transforms. </param>
        internal RequestHeaderMatchCondition(DeliveryRuleConditionParametersType typeName, IDictionary<string, BinaryData> serializedAdditionalRawData, string selector, RequestHeaderOperator requestHeaderOperator, bool? negateCondition, IList<string> matchValues, IList<PreTransformCategory> transforms) : base(typeName, serializedAdditionalRawData)
        {
            Selector = selector;
            RequestHeaderOperator = requestHeaderOperator;
            NegateCondition = negateCondition;
            MatchValues = matchValues;
            Transforms = transforms;
            TypeName = typeName;
        }

        /// <summary> Initializes a new instance of <see cref="RequestHeaderMatchCondition"/> for deserialization. </summary>
        internal RequestHeaderMatchCondition()
        {
        }

        /// <summary> Name of Header to be matched. </summary>
        public string Selector { get; set; }
        /// <summary> Describes operator to be matched. </summary>
        public RequestHeaderOperator RequestHeaderOperator { get; set; }
        /// <summary> Describes if this is negate condition or not. </summary>
        public bool? NegateCondition { get; set; }
        /// <summary> The match value for the condition of the delivery rule. </summary>
        public IList<string> MatchValues { get; }
        /// <summary> List of transforms. </summary>
        public IList<PreTransformCategory> Transforms { get; }
    }
}
