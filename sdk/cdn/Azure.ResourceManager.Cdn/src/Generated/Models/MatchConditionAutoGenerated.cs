// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Define a match condition.
    /// Serialized Name: MatchConditionAutoGenerated
    /// </summary>
    public partial class MatchConditionAutoGenerated
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MatchConditionAutoGenerated"/>. </summary>
        /// <param name="matchVariable">
        /// Request variable to compare with.
        /// Serialized Name: MatchConditionAutoGenerated.matchVariable
        /// </param>
        /// <param name="operator">
        /// Comparison type to use for matching with the variable value.
        /// Serialized Name: MatchConditionAutoGenerated.operator
        /// </param>
        /// <param name="matchValue">
        /// List of possible match values.
        /// Serialized Name: MatchConditionAutoGenerated.matchValue
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="matchValue"/> is null. </exception>
        public MatchConditionAutoGenerated(MatchVariable matchVariable, MatchOperator @operator, IEnumerable<string> matchValue)
        {
            Argument.AssertNotNull(matchValue, nameof(matchValue));

            MatchVariable = matchVariable;
            Operator = @operator;
            MatchValue = matchValue.ToList();
            Transforms = new ChangeTrackingList<TransformType>();
        }

        /// <summary> Initializes a new instance of <see cref="MatchConditionAutoGenerated"/>. </summary>
        /// <param name="matchVariable">
        /// Request variable to compare with.
        /// Serialized Name: MatchConditionAutoGenerated.matchVariable
        /// </param>
        /// <param name="selector">
        /// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
        /// Serialized Name: MatchConditionAutoGenerated.selector
        /// </param>
        /// <param name="operator">
        /// Comparison type to use for matching with the variable value.
        /// Serialized Name: MatchConditionAutoGenerated.operator
        /// </param>
        /// <param name="negateCondition">
        /// Describes if the result of this condition should be negated.
        /// Serialized Name: MatchConditionAutoGenerated.negateCondition
        /// </param>
        /// <param name="matchValue">
        /// List of possible match values.
        /// Serialized Name: MatchConditionAutoGenerated.matchValue
        /// </param>
        /// <param name="transforms">
        /// List of transforms.
        /// Serialized Name: MatchConditionAutoGenerated.transforms
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MatchConditionAutoGenerated(MatchVariable matchVariable, string selector, MatchOperator @operator, bool? negateCondition, IList<string> matchValue, IList<TransformType> transforms, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MatchVariable = matchVariable;
            Selector = selector;
            Operator = @operator;
            NegateCondition = negateCondition;
            MatchValue = matchValue;
            Transforms = transforms;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="MatchConditionAutoGenerated"/> for deserialization. </summary>
        internal MatchConditionAutoGenerated()
        {
        }

        /// <summary>
        /// Request variable to compare with.
        /// Serialized Name: MatchConditionAutoGenerated.matchVariable
        /// </summary>
        public MatchVariable MatchVariable { get; set; }
        /// <summary>
        /// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
        /// Serialized Name: MatchConditionAutoGenerated.selector
        /// </summary>
        public string Selector { get; set; }
        /// <summary>
        /// Comparison type to use for matching with the variable value.
        /// Serialized Name: MatchConditionAutoGenerated.operator
        /// </summary>
        public MatchOperator Operator { get; set; }
        /// <summary>
        /// Describes if the result of this condition should be negated.
        /// Serialized Name: MatchConditionAutoGenerated.negateCondition
        /// </summary>
        public bool? NegateCondition { get; set; }
        /// <summary>
        /// List of possible match values.
        /// Serialized Name: MatchConditionAutoGenerated.matchValue
        /// </summary>
        public IList<string> MatchValue { get; }
        /// <summary>
        /// List of transforms.
        /// Serialized Name: MatchConditionAutoGenerated.transforms
        /// </summary>
        public IList<TransformType> Transforms { get; }
    }
}
