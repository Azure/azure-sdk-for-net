// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Defines top-level WebApplicationFirewallPolicy configuration settings.
    /// Serialized Name: PolicySettingsAutoGenerated
    /// </summary>
    public partial class PolicySettingsAutoGenerated
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PolicySettingsAutoGenerated"/>. </summary>
        public PolicySettingsAutoGenerated()
        {
            ScrubbingRules = new ChangeTrackingList<WebApplicationFirewallScrubbingRules>();
        }

        /// <summary> Initializes a new instance of <see cref="PolicySettingsAutoGenerated"/>. </summary>
        /// <param name="enabledState">
        /// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
        /// Serialized Name: PolicySettingsAutoGenerated.enabledState
        /// </param>
        /// <param name="mode">
        /// Describes if it is in detection mode or prevention mode at policy level.
        /// Serialized Name: PolicySettingsAutoGenerated.mode
        /// </param>
        /// <param name="redirectUri">
        /// If action type is redirect, this field represents redirect URL for the client.
        /// Serialized Name: PolicySettingsAutoGenerated.redirectUrl
        /// </param>
        /// <param name="customBlockResponseStatusCode">
        /// If the action type is block, customer can override the response status code.
        /// Serialized Name: PolicySettingsAutoGenerated.customBlockResponseStatusCode
        /// </param>
        /// <param name="customBlockResponseBody">
        /// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
        /// Serialized Name: PolicySettingsAutoGenerated.customBlockResponseBody
        /// </param>
        /// <param name="requestBodyCheck">
        /// Describes if policy managed rules will inspect the request body content.
        /// Serialized Name: PolicySettingsAutoGenerated.requestBodyCheck
        /// </param>
        /// <param name="javascriptChallengeExpirationInMinutes">
        /// Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.
        /// Serialized Name: PolicySettingsAutoGenerated.javascriptChallengeExpirationInMinutes
        /// </param>
        /// <param name="captchaExpirationInMinutes">
        /// Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.
        /// Serialized Name: PolicySettingsAutoGenerated.captchaExpirationInMinutes
        /// </param>
        /// <param name="state">
        /// State of the log scrubbing config. Default value is Enabled.
        /// Serialized Name: PolicySettingsAutoGenerated.logScrubbing.state
        /// </param>
        /// <param name="scrubbingRules">
        /// List of log scrubbing rules applied to the Web Application Firewall logs.
        /// Serialized Name: PolicySettingsAutoGenerated.logScrubbing.scrubbingRules
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PolicySettingsAutoGenerated(PolicyEnabledState? enabledState, PolicyMode? mode, Uri redirectUri, int? customBlockResponseStatusCode, string customBlockResponseBody, PolicyRequestBodyCheck? requestBodyCheck, int? javascriptChallengeExpirationInMinutes, int? captchaExpirationInMinutes, WebApplicationFirewallScrubbingState? state, IList<WebApplicationFirewallScrubbingRules> scrubbingRules, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            EnabledState = enabledState;
            Mode = mode;
            RedirectUri = redirectUri;
            CustomBlockResponseStatusCode = customBlockResponseStatusCode;
            CustomBlockResponseBody = customBlockResponseBody;
            RequestBodyCheck = requestBodyCheck;
            JavascriptChallengeExpirationInMinutes = javascriptChallengeExpirationInMinutes;
            CaptchaExpirationInMinutes = captchaExpirationInMinutes;
            State = state;
            ScrubbingRules = scrubbingRules;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
        /// Serialized Name: PolicySettingsAutoGenerated.enabledState
        /// </summary>
        public PolicyEnabledState? EnabledState { get; set; }
        /// <summary>
        /// Describes if it is in detection mode or prevention mode at policy level.
        /// Serialized Name: PolicySettingsAutoGenerated.mode
        /// </summary>
        public PolicyMode? Mode { get; set; }
        /// <summary>
        /// If action type is redirect, this field represents redirect URL for the client.
        /// Serialized Name: PolicySettingsAutoGenerated.redirectUrl
        /// </summary>
        public Uri RedirectUri { get; set; }
        /// <summary>
        /// If the action type is block, customer can override the response status code.
        /// Serialized Name: PolicySettingsAutoGenerated.customBlockResponseStatusCode
        /// </summary>
        public int? CustomBlockResponseStatusCode { get; set; }
        /// <summary>
        /// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
        /// Serialized Name: PolicySettingsAutoGenerated.customBlockResponseBody
        /// </summary>
        public string CustomBlockResponseBody { get; set; }
        /// <summary>
        /// Describes if policy managed rules will inspect the request body content.
        /// Serialized Name: PolicySettingsAutoGenerated.requestBodyCheck
        /// </summary>
        public PolicyRequestBodyCheck? RequestBodyCheck { get; set; }
        /// <summary>
        /// Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.
        /// Serialized Name: PolicySettingsAutoGenerated.javascriptChallengeExpirationInMinutes
        /// </summary>
        public int? JavascriptChallengeExpirationInMinutes { get; set; }
        /// <summary>
        /// Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.
        /// Serialized Name: PolicySettingsAutoGenerated.captchaExpirationInMinutes
        /// </summary>
        public int? CaptchaExpirationInMinutes { get; set; }
        /// <summary>
        /// State of the log scrubbing config. Default value is Enabled.
        /// Serialized Name: PolicySettingsAutoGenerated.logScrubbing.state
        /// </summary>
        public WebApplicationFirewallScrubbingState? State { get; set; }
        /// <summary>
        /// List of log scrubbing rules applied to the Web Application Firewall logs.
        /// Serialized Name: PolicySettingsAutoGenerated.logScrubbing.scrubbingRules
        /// </summary>
        public IList<WebApplicationFirewallScrubbingRules> ScrubbingRules { get; }
    }
}
