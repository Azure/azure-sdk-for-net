// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Defines web application firewall policy.
    /// Serialized Name: WebApplicationFirewallPolicy
    /// </summary>
    public partial class WebApplicationFirewallPolicy : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="WebApplicationFirewallPolicy"/>. </summary>
        public WebApplicationFirewallPolicy()
        {
            FrontendEndpointLinks = new ChangeTrackingList<SubResource>();
            RoutingRuleLinks = new ChangeTrackingList<SubResource>();
            SecurityPolicyLinks = new ChangeTrackingList<SubResource>();
        }

        /// <summary> Initializes a new instance of <see cref="WebApplicationFirewallPolicy"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag">
        /// Gets a unique read-only string that changes whenever the resource is updated.
        /// Serialized Name: WebApplicationFirewallPolicy.etag
        /// </param>
        /// <param name="sku">
        /// The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.
        /// Serialized Name: WebApplicationFirewallPolicy.sku
        /// </param>
        /// <param name="policySettings">
        /// Describes settings for the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.policySettings
        /// </param>
        /// <param name="customSettings">
        /// Describes custom rules inside the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.customRules
        /// </param>
        /// <param name="managedRules">
        /// Describes managed rules inside the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.managedRules
        /// </param>
        /// <param name="frontendEndpointLinks">
        /// Describes Frontend Endpoints associated with this Web Application Firewall policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.frontendEndpointLinks
        /// </param>
        /// <param name="routingRuleLinks">
        /// Describes Routing Rules associated with this Web Application Firewall policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.routingRuleLinks
        /// </param>
        /// <param name="securityPolicyLinks">
        /// Describes Security Policy associated with this Web Application Firewall policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.securityPolicyLinks
        /// </param>
        /// <param name="provisioningState">
        /// Provisioning state of the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.provisioningState
        /// </param>
        /// <param name="resourceState"> Serialized Name: WebApplicationFirewallPolicy.properties.resourceState. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal WebApplicationFirewallPolicy(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ETag? etag, CdnSku sku, PolicySettingsAutoGenerated policySettings, CustomRuleListAutoGenerated customSettings, ManagedRuleSetListAutoGenerated managedRules, IReadOnlyList<SubResource> frontendEndpointLinks, IReadOnlyList<SubResource> routingRuleLinks, IReadOnlyList<SubResource> securityPolicyLinks, string provisioningState, PolicyResourceState? resourceState, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            ETag = etag;
            Sku = sku;
            PolicySettings = policySettings;
            CustomSettings = customSettings;
            ManagedRules = managedRules;
            FrontendEndpointLinks = frontendEndpointLinks;
            RoutingRuleLinks = routingRuleLinks;
            SecurityPolicyLinks = securityPolicyLinks;
            ProvisioningState = provisioningState;
            ResourceState = resourceState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is updated.
        /// Serialized Name: WebApplicationFirewallPolicy.etag
        /// </summary>
        public ETag? ETag { get; set; }
        /// <summary>
        /// The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.
        /// Serialized Name: WebApplicationFirewallPolicy.sku
        /// </summary>
        internal CdnSku Sku { get; set; }
        /// <summary>
        /// Name of the pricing tier.
        /// Serialized Name: Sku.name
        /// </summary>
        public CdnSkuName? SkuName
        {
            get => Sku is null ? default : Sku.Name;
            set
            {
                if (Sku is null)
                    Sku = new CdnSku();
                Sku.Name = value;
            }
        }

        /// <summary>
        /// Describes settings for the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.policySettings
        /// </summary>
        public PolicySettingsAutoGenerated PolicySettings { get; set; }
        /// <summary>
        /// Describes custom rules inside the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.customRules
        /// </summary>
        internal CustomRuleListAutoGenerated CustomSettings { get; set; }
        /// <summary>
        /// List of rules
        /// Serialized Name: CustomRuleListAutoGenerated.rules
        /// </summary>
        public IList<CustomRuleAutoGenerated> CustomRules
        {
            get
            {
                if (CustomSettings is null)
                    CustomSettings = new CustomRuleListAutoGenerated();
                return CustomSettings.Rules;
            }
        }

        /// <summary>
        /// Describes managed rules inside the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.managedRules
        /// </summary>
        internal ManagedRuleSetListAutoGenerated ManagedRules { get; set; }
        /// <summary>
        /// List of rule sets.
        /// Serialized Name: ManagedRuleSetListAutoGenerated.managedRuleSets
        /// </summary>
        public IList<ManagedRuleSetAutoGenerated> ManagedRuleSets
        {
            get
            {
                if (ManagedRules is null)
                    ManagedRules = new ManagedRuleSetListAutoGenerated();
                return ManagedRules.ManagedRuleSets;
            }
        }

        /// <summary>
        /// Describes Frontend Endpoints associated with this Web Application Firewall policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.frontendEndpointLinks
        /// </summary>
        public IReadOnlyList<SubResource> FrontendEndpointLinks { get; }
        /// <summary>
        /// Describes Routing Rules associated with this Web Application Firewall policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.routingRuleLinks
        /// </summary>
        public IReadOnlyList<SubResource> RoutingRuleLinks { get; }
        /// <summary>
        /// Describes Security Policy associated with this Web Application Firewall policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.securityPolicyLinks
        /// </summary>
        public IReadOnlyList<SubResource> SecurityPolicyLinks { get; }
        /// <summary>
        /// Provisioning state of the policy.
        /// Serialized Name: WebApplicationFirewallPolicy.properties.provisioningState
        /// </summary>
        public string ProvisioningState { get; }
        /// <summary> Serialized Name: WebApplicationFirewallPolicy.properties.resourceState. </summary>
        public PolicyResourceState? ResourceState { get; }
    }
}
