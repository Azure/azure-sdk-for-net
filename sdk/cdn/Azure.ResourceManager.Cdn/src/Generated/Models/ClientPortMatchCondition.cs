// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary>
    /// Defines the parameters for ClientPort match conditions
    /// Serialized Name: ClientPortMatchConditionParameters
    /// </summary>
    public partial class ClientPortMatchCondition : DeliveryRuleConditionProperties
    {
        /// <summary> Initializes a new instance of <see cref="ClientPortMatchCondition"/>. </summary>
        /// <param name="clientPortOperator">
        /// Describes operator to be matched
        /// Serialized Name: ClientPortMatchConditionParameters.operator
        /// </param>
        public ClientPortMatchCondition(ClientPortOperator clientPortOperator)
        {
            ClientPortOperator = clientPortOperator;
            MatchValues = new ChangeTrackingList<string>();
            Transforms = new ChangeTrackingList<PreTransformCategory>();
            TypeName = DeliveryRuleConditionParametersType.DeliveryRuleClientPortConditionParameters;
        }

        /// <summary> Initializes a new instance of <see cref="ClientPortMatchCondition"/>. </summary>
        /// <param name="typeName"> Serialized Name: DeliveryRuleConditionParameters.typeName. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="clientPortOperator">
        /// Describes operator to be matched
        /// Serialized Name: ClientPortMatchConditionParameters.operator
        /// </param>
        /// <param name="negateCondition">
        /// Describes if this is negate condition or not
        /// Serialized Name: ClientPortMatchConditionParameters.negateCondition
        /// </param>
        /// <param name="matchValues">
        /// The match value for the condition of the delivery rule
        /// Serialized Name: ClientPortMatchConditionParameters.matchValues
        /// </param>
        /// <param name="transforms">
        /// List of transforms
        /// Serialized Name: ClientPortMatchConditionParameters.transforms
        /// </param>
        internal ClientPortMatchCondition(DeliveryRuleConditionParametersType typeName, IDictionary<string, BinaryData> serializedAdditionalRawData, ClientPortOperator clientPortOperator, bool? negateCondition, IList<string> matchValues, IList<PreTransformCategory> transforms) : base(typeName, serializedAdditionalRawData)
        {
            ClientPortOperator = clientPortOperator;
            NegateCondition = negateCondition;
            MatchValues = matchValues;
            Transforms = transforms;
            TypeName = typeName;
        }

        /// <summary> Initializes a new instance of <see cref="ClientPortMatchCondition"/> for deserialization. </summary>
        internal ClientPortMatchCondition()
        {
        }

        /// <summary>
        /// Describes operator to be matched
        /// Serialized Name: ClientPortMatchConditionParameters.operator
        /// </summary>
        public ClientPortOperator ClientPortOperator { get; set; }
        /// <summary>
        /// Describes if this is negate condition or not
        /// Serialized Name: ClientPortMatchConditionParameters.negateCondition
        /// </summary>
        public bool? NegateCondition { get; set; }
        /// <summary>
        /// The match value for the condition of the delivery rule
        /// Serialized Name: ClientPortMatchConditionParameters.matchValues
        /// </summary>
        public IList<string> MatchValues { get; }
        /// <summary>
        /// List of transforms
        /// Serialized Name: ClientPortMatchConditionParameters.transforms
        /// </summary>
        public IList<PreTransformCategory> Transforms { get; }
    }
}
