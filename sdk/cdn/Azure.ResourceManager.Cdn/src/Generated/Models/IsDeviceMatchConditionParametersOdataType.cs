// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Cdn.Models
{
    /// <summary> The IsDeviceMatchConditionParametersOdataType. </summary>
    public readonly partial struct IsDeviceMatchConditionParametersOdataType : IEquatable<IsDeviceMatchConditionParametersOdataType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="IsDeviceMatchConditionParametersOdataType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public IsDeviceMatchConditionParametersOdataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MicrosoftAzureCdnModelsDeliveryRuleIsDeviceConditionParametersValue = "#Microsoft.Azure.Cdn.Models.DeliveryRuleIsDeviceConditionParameters";

        /// <summary> #Microsoft.Azure.Cdn.Models.DeliveryRuleIsDeviceConditionParameters. </summary>
        public static IsDeviceMatchConditionParametersOdataType MicrosoftAzureCdnModelsDeliveryRuleIsDeviceConditionParameters { get; } = new IsDeviceMatchConditionParametersOdataType(MicrosoftAzureCdnModelsDeliveryRuleIsDeviceConditionParametersValue);
        /// <summary> Determines if two <see cref="IsDeviceMatchConditionParametersOdataType"/> values are the same. </summary>
        public static bool operator ==(IsDeviceMatchConditionParametersOdataType left, IsDeviceMatchConditionParametersOdataType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="IsDeviceMatchConditionParametersOdataType"/> values are not the same. </summary>
        public static bool operator !=(IsDeviceMatchConditionParametersOdataType left, IsDeviceMatchConditionParametersOdataType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="IsDeviceMatchConditionParametersOdataType"/>. </summary>
        public static implicit operator IsDeviceMatchConditionParametersOdataType(string value) => new IsDeviceMatchConditionParametersOdataType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is IsDeviceMatchConditionParametersOdataType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(IsDeviceMatchConditionParametersOdataType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
