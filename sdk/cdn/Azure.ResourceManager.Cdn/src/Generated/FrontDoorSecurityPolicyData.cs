// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Cdn
{
    /// <summary>
    /// A class representing the FrontDoorSecurityPolicy data model.
    /// SecurityPolicy association for AzureFrontDoor profile
    /// </summary>
    public partial class FrontDoorSecurityPolicyData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="FrontDoorSecurityPolicyData"/>. </summary>
        public FrontDoorSecurityPolicyData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="FrontDoorSecurityPolicyData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Provisioning status. </param>
        /// <param name="deploymentStatus"></param>
        /// <param name="profileName"> The name of the profile which holds the security policy. </param>
        /// <param name="properties">
        /// object which contains security policy parameters
        /// Please note <see cref="SecurityPolicyProperties"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecurityPolicyWebApplicationFirewall"/>.
        /// </param>
        internal FrontDoorSecurityPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, FrontDoorProvisioningState? provisioningState, FrontDoorDeploymentStatus? deploymentStatus, string profileName, SecurityPolicyProperties properties) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            DeploymentStatus = deploymentStatus;
            ProfileName = profileName;
            Properties = properties;
        }

        /// <summary> Provisioning status. </summary>
        public FrontDoorProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the deployment status. </summary>
        public FrontDoorDeploymentStatus? DeploymentStatus { get; }
        /// <summary> The name of the profile which holds the security policy. </summary>
        public string ProfileName { get; }
        /// <summary>
        /// object which contains security policy parameters
        /// Please note <see cref="SecurityPolicyProperties"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecurityPolicyWebApplicationFirewall"/>.
        /// </summary>
        public SecurityPolicyProperties Properties { get; set; }
    }
}
