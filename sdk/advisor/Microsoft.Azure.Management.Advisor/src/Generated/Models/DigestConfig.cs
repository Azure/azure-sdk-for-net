// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Advisor.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Advisor Digest configuration entity
    /// </summary>
    public partial class DigestConfig
    {
        /// <summary>
        /// Initializes a new instance of the DigestConfig class.
        /// </summary>
        public DigestConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DigestConfig class.
        /// </summary>
        /// <param name="name">Name of digest configuration. Value is
        /// case-insensitive and must be unique within a subscription.</param>
        /// <param name="actionGroupResourceId">Action group resource id used
        /// by digest.</param>
        /// <param name="frequency">Frequency that digest will be triggered, in
        /// days. Value must be between 7 and 30 days inclusive.</param>
        /// <param name="categories">Categories to send digest for. If
        /// categories are not provided, then digest will be sent for all
        /// categories.</param>
        /// <param name="language">Language for digest content body. Value must
        /// be ISO 639-1 code for one of Azure portal supported languages.
        /// Otherwise, it will be converted into one. Default value is English
        /// (en).</param>
        /// <param name="state">State of digest configuration. Possible values
        /// include: 'Active', 'Disabled'</param>
        public DigestConfig(string name = default(string), string actionGroupResourceId = default(string), int? frequency = default(int?), IList<string> categories = default(IList<string>), string language = default(string), string state = default(string))
        {
            Name = name;
            ActionGroupResourceId = actionGroupResourceId;
            Frequency = frequency;
            Categories = categories;
            Language = language;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of digest configuration. Value is
        /// case-insensitive and must be unique within a subscription.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets action group resource id used by digest.
        /// </summary>
        [JsonProperty(PropertyName = "actionGroupResourceId")]
        public string ActionGroupResourceId { get; set; }

        /// <summary>
        /// Gets or sets frequency that digest will be triggered, in days.
        /// Value must be between 7 and 30 days inclusive.
        /// </summary>
        [JsonProperty(PropertyName = "frequency")]
        public int? Frequency { get; set; }

        /// <summary>
        /// Gets or sets categories to send digest for. If categories are not
        /// provided, then digest will be sent for all categories.
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<string> Categories { get; set; }

        /// <summary>
        /// Gets or sets language for digest content body. Value must be ISO
        /// 639-1 code for one of Azure portal supported languages. Otherwise,
        /// it will be converted into one. Default value is English (en).
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Gets or sets state of digest configuration. Possible values
        /// include: 'Active', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

    }
}
