// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Advisor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Advisor Recommendation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ResourceRecommendationBase : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ResourceRecommendationBase class.
        /// </summary>
        public ResourceRecommendationBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceRecommendationBase class.
        /// </summary>
        /// <param name="id">The resource ID.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="category">The category of the recommendation. Possible
        /// values include: 'HighAvailability', 'Security', 'Performance',
        /// 'Cost'</param>
        /// <param name="impact">The business impact of the recommendation.
        /// Possible values include: 'High', 'Medium', 'Low'</param>
        /// <param name="impactedField">The resource type identified by
        /// Advisor.</param>
        /// <param name="impactedValue">The resource identified by
        /// Advisor.</param>
        /// <param name="lastUpdated">The most recent time that Advisor checked
        /// the validity of the recommendation.</param>
        /// <param name="metadata">The recommendation metadata.</param>
        /// <param name="recommendationTypeId">The recommendation-type
        /// GUID.</param>
        /// <param name="risk">The potential risk of not implementing the
        /// recommendation. Possible values include: 'Error', 'Warning',
        /// 'None'</param>
        /// <param name="shortDescription">A summary of the
        /// recommendation.</param>
        /// <param name="suppressionIds">The list of snoozed and dismissed
        /// rules for the recommendation.</param>
        /// <param name="extendedProperties">Extended properties</param>
        public ResourceRecommendationBase(string id = default(string), string name = default(string), string type = default(string), string category = default(string), string impact = default(string), string impactedField = default(string), string impactedValue = default(string), System.DateTime? lastUpdated = default(System.DateTime?), IDictionary<string, object> metadata = default(IDictionary<string, object>), string recommendationTypeId = default(string), string risk = default(string), ShortDescription shortDescription = default(ShortDescription), IList<System.Guid?> suppressionIds = default(IList<System.Guid?>), IDictionary<string, string> extendedProperties = default(IDictionary<string, string>))
            : base(id, name, type)
        {
            Category = category;
            Impact = impact;
            ImpactedField = impactedField;
            ImpactedValue = impactedValue;
            LastUpdated = lastUpdated;
            Metadata = metadata;
            RecommendationTypeId = recommendationTypeId;
            Risk = risk;
            ShortDescription = shortDescription;
            SuppressionIds = suppressionIds;
            ExtendedProperties = extendedProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the category of the recommendation. Possible values
        /// include: 'HighAvailability', 'Security', 'Performance', 'Cost'
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets the business impact of the recommendation. Possible
        /// values include: 'High', 'Medium', 'Low'
        /// </summary>
        [JsonProperty(PropertyName = "properties.impact")]
        public string Impact { get; set; }

        /// <summary>
        /// Gets or sets the resource type identified by Advisor.
        /// </summary>
        [JsonProperty(PropertyName = "properties.impactedField")]
        public string ImpactedField { get; set; }

        /// <summary>
        /// Gets or sets the resource identified by Advisor.
        /// </summary>
        [JsonProperty(PropertyName = "properties.impactedValue")]
        public string ImpactedValue { get; set; }

        /// <summary>
        /// Gets or sets the most recent time that Advisor checked the validity
        /// of the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastUpdated")]
        public System.DateTime? LastUpdated { get; set; }

        /// <summary>
        /// Gets or sets the recommendation metadata.
        /// </summary>
        [JsonProperty(PropertyName = "properties.metadata")]
        public IDictionary<string, object> Metadata { get; set; }

        /// <summary>
        /// Gets or sets the recommendation-type GUID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommendationTypeId")]
        public string RecommendationTypeId { get; set; }

        /// <summary>
        /// Gets or sets the potential risk of not implementing the
        /// recommendation. Possible values include: 'Error', 'Warning', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "properties.risk")]
        public string Risk { get; set; }

        /// <summary>
        /// Gets or sets a summary of the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.shortDescription")]
        public ShortDescription ShortDescription { get; set; }

        /// <summary>
        /// Gets or sets the list of snoozed and dismissed rules for the
        /// recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.suppressionIds")]
        public IList<System.Guid?> SuppressionIds { get; set; }

        /// <summary>
        /// Gets or sets extended properties
        /// </summary>
        [JsonProperty(PropertyName = "properties.extendedProperties")]
        public IDictionary<string, string> ExtendedProperties { get; set; }

    }
}
