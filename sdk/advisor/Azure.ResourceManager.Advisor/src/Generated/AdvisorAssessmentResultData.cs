// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Advisor
{
    /// <summary>
    /// A class representing the AdvisorAssessmentResult data model.
    /// The Advisor assessment result data structure.
    /// </summary>
    public partial class AdvisorAssessmentResultData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AdvisorAssessmentResultData"/>. </summary>
        public AdvisorAssessmentResultData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AdvisorAssessmentResultData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="workloadId"> Workload Id. </param>
        /// <param name="workloadName"> Workload Name. </param>
        /// <param name="assessmentId"> Assessment Id. </param>
        /// <param name="description"> Assessment Type Description. </param>
        /// <param name="typeId"> Assessment Type Id. </param>
        /// <param name="score"> Assessment Score. </param>
        /// <param name="state"> Assessment State. </param>
        /// <param name="typeVersion"> Assessment Type Version. </param>
        /// <param name="locale"> Assessment Type Locale. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AdvisorAssessmentResultData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string workloadId, string workloadName, string assessmentId, string description, string typeId, int? score, string state, string typeVersion, string locale, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            WorkloadId = workloadId;
            WorkloadName = workloadName;
            AssessmentId = assessmentId;
            Description = description;
            TypeId = typeId;
            Score = score;
            State = state;
            TypeVersion = typeVersion;
            Locale = locale;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Workload Id. </summary>
        public string WorkloadId { get; set; }
        /// <summary> Workload Name. </summary>
        public string WorkloadName { get; }
        /// <summary> Assessment Id. </summary>
        public string AssessmentId { get; }
        /// <summary> Assessment Type Description. </summary>
        public string Description { get; }
        /// <summary> Assessment Type Id. </summary>
        public string TypeId { get; set; }
        /// <summary> Assessment Score. </summary>
        public int? Score { get; }
        /// <summary> Assessment State. </summary>
        public string State { get; }
        /// <summary> Assessment Type Version. </summary>
        public string TypeVersion { get; }
        /// <summary> Assessment Type Locale. </summary>
        public string Locale { get; set; }
    }
}
