// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> JsonWebKey Key Type (kty), as defined in https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40. </summary>
    public readonly partial struct JsonWebKeyType : IEquatable<JsonWebKeyType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="JsonWebKeyType"/> values are the same. </summary>
        public JsonWebKeyType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ECValue = "EC";
        private const string ECHSMValue = "EC-HSM";
        private const string RSAValue = "RSA";
        private const string RSAHSMValue = "RSA-HSM";
        private const string OctValue = "oct";

        /// <summary> Elliptic Curve. </summary>
        public static JsonWebKeyType EC { get; } = new JsonWebKeyType(ECValue);
        /// <summary> Elliptic Curve with a private key which is not exportable from the HSM. </summary>
        public static JsonWebKeyType ECHSM { get; } = new JsonWebKeyType(ECHSMValue);
        /// <summary> RSA (https://tools.ietf.org/html/rfc3447). </summary>
        public static JsonWebKeyType RSA { get; } = new JsonWebKeyType(RSAValue);
        /// <summary> RSA with a private key which is not exportable from the HSM. </summary>
        public static JsonWebKeyType RSAHSM { get; } = new JsonWebKeyType(RSAHSMValue);
        /// <summary> Octet sequence (used to represent symmetric keys). </summary>
        public static JsonWebKeyType Oct { get; } = new JsonWebKeyType(OctValue);
        /// <summary> Determines if two <see cref="JsonWebKeyType"/> values are the same. </summary>
        public static bool operator ==(JsonWebKeyType left, JsonWebKeyType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="JsonWebKeyType"/> values are not the same. </summary>
        public static bool operator !=(JsonWebKeyType left, JsonWebKeyType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="JsonWebKeyType"/>. </summary>
        public static implicit operator JsonWebKeyType(string value) => new JsonWebKeyType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is JsonWebKeyType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(JsonWebKeyType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
