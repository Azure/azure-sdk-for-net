// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> A certificate operation is returned in case of asynchronous requests. </summary>
    public partial class CertificateOperation
    {
        /// <summary> Initializes a new instance of CertificateOperation. </summary>
        internal CertificateOperation()
        {
        }

        /// <summary> Initializes a new instance of CertificateOperation. </summary>
        /// <param name="id"> The certificate id. </param>
        /// <param name="issuerParameters"> Parameters for the issuer of the X509 component of a certificate. </param>
        /// <param name="csr"> The certificate signing request (CSR) that is being used in the certificate operation. </param>
        /// <param name="cancellationRequested"> Indicates if cancellation was requested on the certificate operation. </param>
        /// <param name="status"> Status of the certificate operation. </param>
        /// <param name="statusDetails"> The status details of the certificate operation. </param>
        /// <param name="error"> Error encountered, if any, during the certificate operation. </param>
        /// <param name="target"> Location which contains the result of the certificate operation. </param>
        /// <param name="requestId"> Identifier for the certificate operation. </param>
        internal CertificateOperation(string id, IssuerParameters issuerParameters, byte[] csr, bool? cancellationRequested, string status, string statusDetails, Error error, string target, string requestId)
        {
            Id = id;
            IssuerParameters = issuerParameters;
            Csr = csr;
            CancellationRequested = cancellationRequested;
            Status = status;
            StatusDetails = statusDetails;
            Error = error;
            Target = target;
            RequestId = requestId;
        }

        /// <summary> The certificate id. </summary>
        public string Id { get; }
        /// <summary> Parameters for the issuer of the X509 component of a certificate. </summary>
        public IssuerParameters IssuerParameters { get; }
        /// <summary> The certificate signing request (CSR) that is being used in the certificate operation. </summary>
        public byte[] Csr { get; }
        /// <summary> Indicates if cancellation was requested on the certificate operation. </summary>
        public bool? CancellationRequested { get; }
        /// <summary> Status of the certificate operation. </summary>
        public string Status { get; }
        /// <summary> The status details of the certificate operation. </summary>
        public string StatusDetails { get; }
        /// <summary> Error encountered, if any, during the certificate operation. </summary>
        public Error Error { get; }
        /// <summary> Location which contains the result of the certificate operation. </summary>
        public string Target { get; }
        /// <summary> Identifier for the certificate operation. </summary>
        public string RequestId { get; }
    }
}
