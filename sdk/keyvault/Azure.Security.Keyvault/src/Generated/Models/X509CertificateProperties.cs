// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> Properties of the X509 component of a certificate. </summary>
    public partial class X509CertificateProperties
    {
        /// <summary> Initializes a new instance of X509CertificateProperties. </summary>
        public X509CertificateProperties()
        {
        }

        /// <summary> Initializes a new instance of X509CertificateProperties. </summary>
        /// <param name="subject"> The subject name. Should be a valid X509 distinguished Name. </param>
        /// <param name="ekus"> The enhanced key usage. </param>
        /// <param name="subjectAlternativeNames"> The subject alternative names. </param>
        /// <param name="keyUsage"> List of key usages. </param>
        /// <param name="validityInMonths"> The duration that the certificate is valid in months. </param>
        internal X509CertificateProperties(string subject, IList<string> ekus, SubjectAlternativeNames subjectAlternativeNames, IList<KeyUsageType> keyUsage, int? validityInMonths)
        {
            Subject = subject;
            Ekus = ekus;
            SubjectAlternativeNames = subjectAlternativeNames;
            KeyUsage = keyUsage;
            ValidityInMonths = validityInMonths;
        }

        /// <summary> The subject name. Should be a valid X509 distinguished Name. </summary>
        public string Subject { get; set; }
        /// <summary> The enhanced key usage. </summary>
        public IList<string> Ekus { get; set; }
        /// <summary> The subject alternative names. </summary>
        public SubjectAlternativeNames SubjectAlternativeNames { get; set; }
        /// <summary> List of key usages. </summary>
        public IList<KeyUsageType> KeyUsage { get; set; }
        /// <summary> The duration that the certificate is valid in months. </summary>
        public int? ValidityInMonths { get; set; }
    }
}
