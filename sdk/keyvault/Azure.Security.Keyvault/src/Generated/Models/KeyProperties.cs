// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Security.KeyVault.Models
{
    /// <summary> Properties of the key pair backing a certificate. </summary>
    public partial class KeyProperties
    {
        /// <summary> Initializes a new instance of KeyProperties. </summary>
        public KeyProperties()
        {
        }

        /// <summary> Initializes a new instance of KeyProperties. </summary>
        /// <param name="exportable"> Indicates if the private key can be exported. </param>
        /// <param name="keyType"> The type of key pair to be used for the certificate. </param>
        /// <param name="keySize"> The key size in bits. For example: 2048, 3072, or 4096 for RSA. </param>
        /// <param name="reuseKey"> Indicates if the same key pair will be used on certificate renewal. </param>
        /// <param name="curve"> Elliptic curve name. For valid values, see JsonWebKeyCurveName. </param>
        internal KeyProperties(bool? exportable, JsonWebKeyType? keyType, int? keySize, bool? reuseKey, JsonWebKeyCurveName? curve)
        {
            Exportable = exportable;
            KeyType = keyType;
            KeySize = keySize;
            ReuseKey = reuseKey;
            Curve = curve;
        }

        /// <summary> Indicates if the private key can be exported. </summary>
        public bool? Exportable { get; set; }
        /// <summary> The type of key pair to be used for the certificate. </summary>
        public JsonWebKeyType? KeyType { get; set; }
        /// <summary> The key size in bits. For example: 2048, 3072, or 4096 for RSA. </summary>
        public int? KeySize { get; set; }
        /// <summary> Indicates if the same key pair will be used on certificate renewal. </summary>
        public bool? ReuseKey { get; set; }
        /// <summary> Elliptic curve name. For valid values, see JsonWebKeyCurveName. </summary>
        public JsonWebKeyCurveName? Curve { get; set; }
    }
}
