// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Security.KeyVault.Models
{
    public partial class IssuerBundle
    {
        internal static IssuerBundle DeserializeIssuerBundle(JsonElement element)
        {
            string id = default;
            string provider = default;
            IssuerCredentials credentials = default;
            OrganizationDetails orgDetails = default;
            IssuerAttributes attributes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provider"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provider = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("credentials"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    credentials = IssuerCredentials.DeserializeIssuerCredentials(property.Value);
                    continue;
                }
                if (property.NameEquals("org_details"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    orgDetails = OrganizationDetails.DeserializeOrganizationDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("attributes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    attributes = IssuerAttributes.DeserializeIssuerAttributes(property.Value);
                    continue;
                }
            }
            return new IssuerBundle(id, provider, credentials, orgDetails, attributes);
        }
    }
}
