// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> The deleted certificate item containing metadata about the deleted certificate. </summary>
    public partial class DeletedCertificateItem : CertificateItem
    {
        /// <summary> Initializes a new instance of DeletedCertificateItem. </summary>
        internal DeletedCertificateItem()
        {
        }

        /// <summary> Initializes a new instance of DeletedCertificateItem. </summary>
        /// <param name="id"> Certificate identifier. </param>
        /// <param name="attributes"> The certificate management attributes. </param>
        /// <param name="tags"> Application specific metadata in the form of key-value pairs. </param>
        /// <param name="x509Thumbprint"> Thumbprint of the certificate. </param>
        /// <param name="recoveryId"> The url of the recovery object, used to identify and recover the deleted certificate. </param>
        /// <param name="scheduledPurgeDate"> The time when the certificate is scheduled to be purged, in UTC. </param>
        /// <param name="deletedDate"> The time when the certificate was deleted, in UTC. </param>
        internal DeletedCertificateItem(string id, CertificateAttributes attributes, IReadOnlyDictionary<string, string> tags, byte[] x509Thumbprint, string recoveryId, DateTimeOffset? scheduledPurgeDate, DateTimeOffset? deletedDate) : base(id, attributes, tags, x509Thumbprint)
        {
            RecoveryId = recoveryId;
            ScheduledPurgeDate = scheduledPurgeDate;
            DeletedDate = deletedDate;
        }

        /// <summary> The url of the recovery object, used to identify and recover the deleted certificate. </summary>
        public string RecoveryId { get; }
        /// <summary> The time when the certificate is scheduled to be purged, in UTC. </summary>
        public DateTimeOffset? ScheduledPurgeDate { get; }
        /// <summary> The time when the certificate was deleted, in UTC. </summary>
        public DateTimeOffset? DeletedDate { get; }
    }
}
