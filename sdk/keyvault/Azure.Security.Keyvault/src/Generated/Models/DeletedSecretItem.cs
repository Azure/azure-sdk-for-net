// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> The deleted secret item containing metadata about the deleted secret. </summary>
    public partial class DeletedSecretItem : SecretItem
    {
        /// <summary> Initializes a new instance of DeletedSecretItem. </summary>
        internal DeletedSecretItem()
        {
        }

        /// <summary> Initializes a new instance of DeletedSecretItem. </summary>
        /// <param name="id"> Secret identifier. </param>
        /// <param name="attributes"> The secret management attributes. </param>
        /// <param name="tags"> Application specific metadata in the form of key-value pairs. </param>
        /// <param name="contentType"> Type of the secret value such as a password. </param>
        /// <param name="managed"> True if the secret&apos;s lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true. </param>
        /// <param name="recoveryId"> The url of the recovery object, used to identify and recover the deleted secret. </param>
        /// <param name="scheduledPurgeDate"> The time when the secret is scheduled to be purged, in UTC. </param>
        /// <param name="deletedDate"> The time when the secret was deleted, in UTC. </param>
        internal DeletedSecretItem(string id, SecretAttributes attributes, IReadOnlyDictionary<string, string> tags, string contentType, bool? managed, string recoveryId, DateTimeOffset? scheduledPurgeDate, DateTimeOffset? deletedDate) : base(id, attributes, tags, contentType, managed)
        {
            RecoveryId = recoveryId;
            ScheduledPurgeDate = scheduledPurgeDate;
            DeletedDate = deletedDate;
        }

        /// <summary> The url of the recovery object, used to identify and recover the deleted secret. </summary>
        public string RecoveryId { get; }
        /// <summary> The time when the secret is scheduled to be purged, in UTC. </summary>
        public DateTimeOffset? ScheduledPurgeDate { get; }
        /// <summary> The time when the secret was deleted, in UTC. </summary>
        public DateTimeOffset? DeletedDate { get; }
    }
}
