// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> algorithm identifier. </summary>
    public readonly partial struct JsonWebKeyEncryptionAlgorithm : IEquatable<JsonWebKeyEncryptionAlgorithm>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="JsonWebKeyEncryptionAlgorithm"/> values are the same. </summary>
        public JsonWebKeyEncryptionAlgorithm(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string RSAOaepValue = "RSA-OAEP";
        private const string RSAOaep256Value = "RSA-OAEP-256";
        private const string RSA15Value = "RSA1_5";

        /// <summary> RSA-OAEP. </summary>
        public static JsonWebKeyEncryptionAlgorithm RSAOaep { get; } = new JsonWebKeyEncryptionAlgorithm(RSAOaepValue);
        /// <summary> RSA-OAEP-256. </summary>
        public static JsonWebKeyEncryptionAlgorithm RSAOaep256 { get; } = new JsonWebKeyEncryptionAlgorithm(RSAOaep256Value);
        /// <summary> RSA1_5. </summary>
        public static JsonWebKeyEncryptionAlgorithm RSA15 { get; } = new JsonWebKeyEncryptionAlgorithm(RSA15Value);
        /// <summary> Determines if two <see cref="JsonWebKeyEncryptionAlgorithm"/> values are the same. </summary>
        public static bool operator ==(JsonWebKeyEncryptionAlgorithm left, JsonWebKeyEncryptionAlgorithm right) => left.Equals(right);
        /// <summary> Determines if two <see cref="JsonWebKeyEncryptionAlgorithm"/> values are not the same. </summary>
        public static bool operator !=(JsonWebKeyEncryptionAlgorithm left, JsonWebKeyEncryptionAlgorithm right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="JsonWebKeyEncryptionAlgorithm"/>. </summary>
        public static implicit operator JsonWebKeyEncryptionAlgorithm(string value) => new JsonWebKeyEncryptionAlgorithm(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is JsonWebKeyEncryptionAlgorithm other && Equals(other);
        /// <inheritdoc />
        public bool Equals(JsonWebKeyEncryptionAlgorithm other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
