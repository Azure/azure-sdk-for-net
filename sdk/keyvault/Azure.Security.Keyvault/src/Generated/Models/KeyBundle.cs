// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Security.KeyVault.Models
{
    /// <summary> A KeyBundle consisting of a WebKey plus its attributes. </summary>
    public partial class KeyBundle
    {
        /// <summary> Initializes a new instance of KeyBundle. </summary>
        internal KeyBundle()
        {
        }

        /// <summary> Initializes a new instance of KeyBundle. </summary>
        /// <param name="key"> The Json web key. </param>
        /// <param name="attributes"> The key management attributes. </param>
        /// <param name="tags"> Application specific metadata in the form of key-value pairs. </param>
        /// <param name="managed"> True if the key&apos;s lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true. </param>
        internal KeyBundle(JsonWebKey key, KeyAttributes attributes, IReadOnlyDictionary<string, string> tags, bool? managed)
        {
            Key = key;
            Attributes = attributes;
            Tags = tags;
            Managed = managed;
        }

        /// <summary> The Json web key. </summary>
        public JsonWebKey Key { get; }
        /// <summary> The key management attributes. </summary>
        public KeyAttributes Attributes { get; }
        /// <summary> Application specific metadata in the form of key-value pairs. </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
        /// <summary> True if the key&apos;s lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true. </summary>
        public bool? Managed { get; }
    }
}
