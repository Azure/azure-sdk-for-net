// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.KeyVault;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.KeyVault.Tests.Mock
{
    /// <summary> Test for Vault. </summary>
    public partial class VaultCollectionMockTests : MockTestBase
    {
        public VaultCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<KeyVault.VaultCollection> GetVaultCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            VaultCollection vaultCollection = resourceGroup.GetVaults();
            return vaultCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create a new vault or update an existing vault
            var collection = await GetVaultCollectionAsync("sample-resource-group");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "sample-vault");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Retrieve a vault
            var collection = await GetVaultCollectionAsync("sample-resource-group");
            await TestHelper.GetExampleInstanceAsync(collection, "sample-vault");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List vaults in the specified resource group
            var collection = await GetVaultCollectionAsync("sample-group");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
