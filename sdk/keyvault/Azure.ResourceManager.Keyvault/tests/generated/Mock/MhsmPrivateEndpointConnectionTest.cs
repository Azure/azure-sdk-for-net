// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.KeyVault;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.KeyVault.Tests.Mock
{
    /// <summary> Test for MhsmPrivateEndpointConnection. </summary>
    public partial class MhsmPrivateEndpointConnectionMockTests : MockTestBase
    {
        public MhsmPrivateEndpointConnectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<KeyVault.MhsmPrivateEndpointConnectionCollection> GetMhsmPrivateEndpointConnectionCollectionAsync(string resourceGroupName, string name)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedHsmCollection managedHsmCollection = resourceGroup.GetManagedHsms();
            var managedHsmOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedHsmCollection, name);
            ManagedHsm managedHsm = managedHsmOperation.Value;
            MhsmPrivateEndpointConnectionCollection mhsmPrivateEndpointConnectionCollection = managedHsm.GetMhsmPrivateEndpointConnections();
            return mhsmPrivateEndpointConnectionCollection;
        }

        private async Task<KeyVault.MhsmPrivateEndpointConnection> GetMhsmPrivateEndpointConnectionAsync()
        {
            var collection = await GetMhsmPrivateEndpointConnectionCollectionAsync("sample-group", "sample-mhsm");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "sample-pec");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: ManagedHsmGetPrivateEndpointConnection
            var mhsmPrivateEndpointConnection = await GetMhsmPrivateEndpointConnectionAsync();

            await mhsmPrivateEndpointConnection.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: ManagedHsmDeletePrivateEndpointConnection
            var mhsmPrivateEndpointConnection = await GetMhsmPrivateEndpointConnectionAsync();

            await mhsmPrivateEndpointConnection.DeleteAsync();
        }
    }
}
