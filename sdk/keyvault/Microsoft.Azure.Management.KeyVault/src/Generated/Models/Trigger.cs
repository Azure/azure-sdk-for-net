// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KeyVault.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Trigger
    {
        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>
        public Trigger()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>
        /// <param name="timeAfterCreate">The time duration after key creation
        /// to rotate the key. It only applies to rotate. It will be in ISO
        /// 8601 duration format. Eg: 'P90D', 'P1Y'.</param>
        /// <param name="timeBeforeExpiry">The time duration before key
        /// expiring to rotate or notify. It will be in ISO 8601 duration
        /// format. Eg: 'P90D', 'P1Y'.</param>
        public Trigger(string timeAfterCreate = default(string), string timeBeforeExpiry = default(string))
        {
            TimeAfterCreate = timeAfterCreate;
            TimeBeforeExpiry = timeBeforeExpiry;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the time duration after key creation to rotate the
        /// key. It only applies to rotate. It will be in ISO 8601 duration
        /// format. Eg: 'P90D', 'P1Y'.
        /// </summary>
        [JsonProperty(PropertyName = "timeAfterCreate")]
        public string TimeAfterCreate { get; set; }

        /// <summary>
        /// Gets or sets the time duration before key expiring to rotate or
        /// notify. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'.
        /// </summary>
        [JsonProperty(PropertyName = "timeBeforeExpiry")]
        public string TimeBeforeExpiry { get; set; }

    }
}
