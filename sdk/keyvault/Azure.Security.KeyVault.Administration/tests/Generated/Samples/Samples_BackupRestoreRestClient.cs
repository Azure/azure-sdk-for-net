// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.Security.KeyVault.Administration.Models;
using NUnit.Framework;

namespace Azure.Security.KeyVault.Administration.Samples
{
    public partial class Samples_BackupRestoreRestClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_FullBackupStatus_GetTheStatusOfAFullBackupOperation()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response response = client.FullBackupStatus("45aacd568ab049a2803861e8dd3ae21f", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_FullBackupStatus_GetTheStatusOfAFullBackupOperation_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response response = await client.FullBackupStatusAsync("45aacd568ab049a2803861e8dd3ae21f", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_FullBackupStatus_GetTheStatusOfAFullBackupOperation_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response<FullBackupDetailsInternal> response = client.FullBackupStatus("45aacd568ab049a2803861e8dd3ae21f");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_FullBackupStatus_GetTheStatusOfAFullBackupOperation_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response<FullBackupDetailsInternal> response = await client.FullBackupStatusAsync("45aacd568ab049a2803861e8dd3ae21f");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_RestoreStatus_GetTheStatusOfRestoreOperation()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response response = client.RestoreStatus("45aacd568ab049a2803861e8dd3ae21f", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_RestoreStatus_GetTheStatusOfRestoreOperation_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response response = await client.RestoreStatusAsync("45aacd568ab049a2803861e8dd3ae21f", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_RestoreStatus_GetTheStatusOfRestoreOperation_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response<RestoreDetailsInternal> response = client.RestoreStatus("45aacd568ab049a2803861e8dd3ae21f");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_RestoreStatus_GetTheStatusOfRestoreOperation_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            Response<RestoreDetailsInternal> response = await client.RestoreStatusAsync("45aacd568ab049a2803861e8dd3ae21f");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_FullBackup_CreateAFullBackup()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            });
            Operation<BinaryData> operation = client.FullBackup(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_FullBackup_CreateAFullBackup_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            });
            Operation<BinaryData> operation = await client.FullBackupAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_FullBackup_CreateAFullBackup_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            SASTokenParameter azureStorageBlobContainerUri = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
            {
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            };
            Operation<FullBackupDetailsInternal> operation = client.FullBackup(WaitUntil.Completed, azureStorageBlobContainerUri);
            FullBackupDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_FullBackup_CreateAFullBackup_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            SASTokenParameter azureStorageBlobContainerUri = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
            {
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            };
            Operation<FullBackupDetailsInternal> operation = await client.FullBackupAsync(WaitUntil.Completed, azureStorageBlobContainerUri);
            FullBackupDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_PreFullBackup_CheckWhetherTheCustomerCanPerformAFullBackupOperation()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            });
            Operation<BinaryData> operation = client.PreFullBackup(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_PreFullBackup_CheckWhetherTheCustomerCanPerformAFullBackupOperation_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            });
            Operation<BinaryData> operation = await client.PreFullBackupAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_PreFullBackup_CheckWhetherTheCustomerCanPerformAFullBackupOperation_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            PreBackupOperationParameters preBackupOperationParameters = new PreBackupOperationParameters
            {
                StorageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            };
            Operation<FullBackupDetailsInternal> operation = client.PreFullBackup(WaitUntil.Completed, preBackupOperationParameters);
            FullBackupDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_PreFullBackup_CheckWhetherTheCustomerCanPerformAFullBackupOperation_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            PreBackupOperationParameters preBackupOperationParameters = new PreBackupOperationParameters
            {
                StorageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            };
            Operation<FullBackupDetailsInternal> operation = await client.PreFullBackupAsync(WaitUntil.Completed, preBackupOperationParameters);
            FullBackupDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_PreFullRestoreOperation_CheckWhetherTheCustomerCanPerformAFullRestoreOperation()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sasTokenParameters = new
                {
                    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                folderToRestore = "mhsm-mypool-20200303062926785",
            });
            Operation<BinaryData> operation = client.PreFullRestoreOperation(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_PreFullRestoreOperation_CheckWhetherTheCustomerCanPerformAFullRestoreOperation_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sasTokenParameters = new
                {
                    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                folderToRestore = "mhsm-mypool-20200303062926785",
            });
            Operation<BinaryData> operation = await client.PreFullRestoreOperationAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_PreFullRestoreOperation_CheckWhetherTheCustomerCanPerformAFullRestoreOperation_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            PreRestoreOperationParameters preRestoreOperationParameters = new PreRestoreOperationParameters
            {
                SasTokenParameters = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
                {
                    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                FolderToRestore = "mhsm-mypool-20200303062926785",
            };
            Operation<RestoreDetailsInternal> operation = client.PreFullRestoreOperation(WaitUntil.Completed, preRestoreOperationParameters);
            RestoreDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_PreFullRestoreOperation_CheckWhetherTheCustomerCanPerformAFullRestoreOperation_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            PreRestoreOperationParameters preRestoreOperationParameters = new PreRestoreOperationParameters
            {
                SasTokenParameters = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
                {
                    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                FolderToRestore = "mhsm-mypool-20200303062926785",
            };
            Operation<RestoreDetailsInternal> operation = await client.PreFullRestoreOperationAsync(WaitUntil.Completed, preRestoreOperationParameters);
            RestoreDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_FullRestoreOperation_RestoreAllKeyMaterialsFromAPreviouslyStoredAzureBlobStorageBackup()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sasTokenParameters = new
                {
                    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                folderToRestore = "mhsm-mypool-20200303062926785",
            });
            Operation<BinaryData> operation = client.FullRestoreOperation(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_FullRestoreOperation_RestoreAllKeyMaterialsFromAPreviouslyStoredAzureBlobStorageBackup_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sasTokenParameters = new
                {
                    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                folderToRestore = "mhsm-mypool-20200303062926785",
            });
            Operation<BinaryData> operation = await client.FullRestoreOperationAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_FullRestoreOperation_RestoreAllKeyMaterialsFromAPreviouslyStoredAzureBlobStorageBackup_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            RestoreOperationParameters restoreBlobDetails = new RestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
            {
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            }, "mhsm-mypool-20200303062926785");
            Operation<RestoreDetailsInternal> operation = client.FullRestoreOperation(WaitUntil.Completed, restoreBlobDetails);
            RestoreDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_FullRestoreOperation_RestoreAllKeyMaterialsFromAPreviouslyStoredAzureBlobStorageBackup_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            RestoreOperationParameters restoreBlobDetails = new RestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
            {
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            }, "mhsm-mypool-20200303062926785");
            Operation<RestoreDetailsInternal> operation = await client.FullRestoreOperationAsync(WaitUntil.Completed, restoreBlobDetails);
            RestoreDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_SelectiveKeyRestoreOperation_RestoresAllKeyVersionsOfAGivenKey()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sasTokenParameters = new
                {
                    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                folder = "mhsm-mypool-20200303062926785",
            });
            Operation<BinaryData> operation = client.SelectiveKeyRestoreOperation(WaitUntil.Completed, "hsm-mail-key", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_SelectiveKeyRestoreOperation_RestoresAllKeyVersionsOfAGivenKey_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sasTokenParameters = new
                {
                    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
                    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
                },
                folder = "mhsm-mypool-20200303062926785",
            });
            Operation<BinaryData> operation = await client.SelectiveKeyRestoreOperationAsync(WaitUntil.Completed, "hsm-mail-key", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_BackupRestoreRestClient_SelectiveKeyRestoreOperation_RestoresAllKeyVersionsOfAGivenKey_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            SelectiveKeyRestoreOperationParameters restoreBlobDetails = new SelectiveKeyRestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
            {
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            }, "mhsm-mypool-20200303062926785");
            Operation<SelectiveKeyRestoreDetailsInternal> operation = client.SelectiveKeyRestoreOperation(WaitUntil.Completed, "hsm-mail-key", restoreBlobDetails);
            SelectiveKeyRestoreDetailsInternal responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_BackupRestoreRestClient_SelectiveKeyRestoreOperation_RestoresAllKeyVersionsOfAGivenKey_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

            SelectiveKeyRestoreOperationParameters restoreBlobDetails = new SelectiveKeyRestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
            {
                Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
            }, "mhsm-mypool-20200303062926785");
            Operation<SelectiveKeyRestoreDetailsInternal> operation = await client.SelectiveKeyRestoreOperationAsync(WaitUntil.Completed, "hsm-mail-key", restoreBlobDetails);
            SelectiveKeyRestoreDetailsInternal responseData = operation.Value;
        }
    }
}
