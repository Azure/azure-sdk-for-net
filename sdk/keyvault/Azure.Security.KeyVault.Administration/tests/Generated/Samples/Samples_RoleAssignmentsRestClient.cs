// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.Security.KeyVault.Administration.Models;
using NUnit.Framework;

namespace Azure.Security.KeyVault.Administration.Samples
{
    public partial class Samples_RoleAssignmentsRestClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_Delete_DeleteARoleAssignment()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response response = client.Delete("keys", "roleAssignmentName", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_Delete_DeleteARoleAssignment_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response response = await client.DeleteAsync("keys", "roleAssignmentName", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_Delete_DeleteARoleAssignment_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response<Models.KeyVaultRoleAssignment> response = client.Delete("keys", "roleAssignmentName");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_Delete_DeleteARoleAssignment_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response<Models.KeyVaultRoleAssignment> response = await client.DeleteAsync("keys", "roleAssignmentName");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_Create_CreateARoleAssignment()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    roleDefinitionId = "/keys/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId",
                    principalId = "principalId",
                },
            });
            Response response = client.Create("keys", "roleAssignmentName", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_Create_CreateARoleAssignment_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    roleDefinitionId = "/keys/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId",
                    principalId = "principalId",
                },
            });
            Response response = await client.CreateAsync("keys", "roleAssignmentName", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_Create_CreateARoleAssignment_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            RoleAssignmentCreateParameters parameters = new RoleAssignmentCreateParameters(new KeyVaultRoleAssignmentPropertiesInternal("/keys/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId", "principalId"));
            Response<Models.KeyVaultRoleAssignment> response = client.Create("keys", "roleAssignmentName", parameters);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_Create_CreateARoleAssignment_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            RoleAssignmentCreateParameters parameters = new RoleAssignmentCreateParameters(new KeyVaultRoleAssignmentPropertiesInternal("/keys/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId", "principalId"));
            Response<Models.KeyVaultRoleAssignment> response = await client.CreateAsync("keys", "roleAssignmentName", parameters);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_GetRoleAssignmentsRestClient_GetTheSpecifiedRoleAssignment()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response response = client.GetRoleAssignmentsRestClient("keys", "roleAssignmentName", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_GetRoleAssignmentsRestClient_GetTheSpecifiedRoleAssignment_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response response = await client.GetRoleAssignmentsRestClientAsync("keys", "roleAssignmentName", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_GetRoleAssignmentsRestClient_GetTheSpecifiedRoleAssignment_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response<Models.KeyVaultRoleAssignment> response = client.GetRoleAssignmentsRestClient("keys", "roleAssignmentName");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_GetRoleAssignmentsRestClient_GetTheSpecifiedRoleAssignment_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            Response<Models.KeyVaultRoleAssignment> response = await client.GetRoleAssignmentsRestClientAsync("keys", "roleAssignmentName");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_GetForScopes_GetRoleAssignmentsForAScope()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            foreach (BinaryData item in client.GetForScopes("keys", null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_GetForScopes_GetRoleAssignmentsForAScope_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            await foreach (BinaryData item in client.GetForScopesAsync("keys", null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoleAssignmentsRestClient_GetForScopes_GetRoleAssignmentsForAScope_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            foreach (Models.KeyVaultRoleAssignment item in client.GetForScopes("keys"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RoleAssignmentsRestClient_GetForScopes_GetRoleAssignmentsForAScope_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleAssignmentsRestClient client = new RoleAssignmentsRestClient(endpoint, credential);

            await foreach (Models.KeyVaultRoleAssignment item in client.GetForScopesAsync("keys"))
            {
            }
        }
    }
}
