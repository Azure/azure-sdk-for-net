// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Security.KeyVault.Administration
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class KeyVaultAdministrationModelFactory
    {
        /// <summary> Role Assignments. </summary>
        /// <param name="id"> The role assignment ID. </param>
        /// <param name="name"> The role assignment name. </param>
        /// <param name="type"> The role assignment type. </param>
        /// <param name="properties"> Role assignment properties. </param>
        /// <returns> A new <see cref="Administration.KeyVaultRoleAssignment"/> instance for mocking. </returns>
        public static KeyVaultRoleAssignment KeyVaultRoleAssignment(string id = default, string name = default, string @type = default, KeyVaultRoleAssignmentProperties properties = default)
        {
            return new KeyVaultRoleAssignment(id, name, @type, properties, additionalBinaryDataProperties: null);
        }

        /// <summary> Role assignment properties with scope. </summary>
        /// <param name="scope"> The role scope. </param>
        /// <param name="roleDefinitionId"> The role definition ID. </param>
        /// <param name="principalId"> The principal ID. </param>
        /// <returns> A new <see cref="Administration.KeyVaultRoleAssignmentProperties"/> instance for mocking. </returns>
        public static KeyVaultRoleAssignmentProperties KeyVaultRoleAssignmentProperties(KeyVaultRoleScope? scope = default, string roleDefinitionId = default, string principalId = default)
        {
            return new KeyVaultRoleAssignmentProperties(scope, roleDefinitionId, principalId, additionalBinaryDataProperties: null);
        }
    }
}
