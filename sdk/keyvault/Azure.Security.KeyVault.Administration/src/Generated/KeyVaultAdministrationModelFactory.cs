// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Security.KeyVault.Administration
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class KeyVaultAdministrationModelFactory
    {
        /// <summary> Initializes new instance of KeyVaultRoleDefinition class. </summary>
        /// <param name="id"> The role definition ID. </param>
        /// <param name="name"> The role definition name. </param>
        /// <param name="type"> The role definition type. </param>
        /// <param name="roleName"> The role name. </param>
        /// <param name="description"> The role definition description. </param>
        /// <param name="roleType"> The role type. </param>
        /// <param name="permissions"> Role definition permissions. </param>
        /// <param name="assignableScopes"> Role definition assignable scopes. </param>
        /// <returns> A new <see cref="Administration.KeyVaultRoleDefinition"/> instance for mocking. </returns>
        public static KeyVaultRoleDefinition KeyVaultRoleDefinition(string id = default, string name = default, KeyVaultRoleDefinitionType? type = default, string roleName = default, string description = default, KeyVaultRoleType? roleType = default, IList<KeyVaultPermission> permissions = default, IList<KeyVaultRoleScope> assignableScopes = default)
        {
            permissions ??= new List<KeyVaultPermission>();
            assignableScopes ??= new List<KeyVaultRoleScope>();
            return new KeyVaultRoleDefinition(id, name, type, roleName, description, roleType, permissions, assignableScopes);
        }

        /// <summary> Initializes new instance of KeyVaultRoleAssignment class. </summary>
        /// <param name="id"> The role assignment ID. </param>
        /// <param name="name"> The role assignment name. </param>
        /// <param name="type"> The role assignment type. </param>
        /// <param name="properties"> Role assignment properties. </param>
        /// <returns> A new <see cref="Administration.KeyVaultRoleAssignment"/> instance for mocking. </returns>
        public static KeyVaultRoleAssignment KeyVaultRoleAssignment(string id = default, string name = default, string type = default, KeyVaultRoleAssignmentProperties properties = default)
        {
            return new KeyVaultRoleAssignment(id, name, type, properties);
        }

        /// <summary> Initializes new instance of KeyVaultRoleAssignmentProperties class. </summary>
        /// <param name="scope"> The role scope. </param>
        /// <param name="roleDefinitionId"> The role definition ID. </param>
        /// <param name="principalId"> The principal ID. </param>
        /// <returns> A new <see cref="Administration.KeyVaultRoleAssignmentProperties"/> instance for mocking. </returns>
        public static KeyVaultRoleAssignmentProperties KeyVaultRoleAssignmentProperties(KeyVaultRoleScope? scope = default, string roleDefinitionId = default, string principalId = default)
        {
            return new KeyVaultRoleAssignmentProperties(scope, roleDefinitionId, principalId);
        }
    }
}
