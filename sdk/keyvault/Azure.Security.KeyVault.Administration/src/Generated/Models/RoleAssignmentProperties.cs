// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Security.KeyVault.Administration;

namespace Azure.Security.KeyVault.Administration.Models
{
    internal partial class RoleAssignmentProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="RoleAssignmentProperties"/>. </summary>
        /// <param name="roleDefinitionId"> The role definition ID used in the role assignment. </param>
        /// <param name="principalId"> The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="roleDefinitionId"/> or <paramref name="principalId"/> is null. </exception>
        public RoleAssignmentProperties(string roleDefinitionId, string principalId)
        {
            Argument.AssertNotNull(roleDefinitionId, nameof(roleDefinitionId));
            Argument.AssertNotNull(principalId, nameof(principalId));

            RoleDefinitionId = roleDefinitionId;
            PrincipalId = principalId;
        }

        /// <summary> Initializes a new instance of <see cref="RoleAssignmentProperties"/>. </summary>
        /// <param name="roleDefinitionId"> The role definition ID used in the role assignment. </param>
        /// <param name="principalId"> The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal RoleAssignmentProperties(string roleDefinitionId, string principalId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            RoleDefinitionId = roleDefinitionId;
            PrincipalId = principalId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The role definition ID used in the role assignment. </summary>
        public string RoleDefinitionId { get; }

        /// <summary> The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group. </summary>
        public string PrincipalId { get; }
    }
}
