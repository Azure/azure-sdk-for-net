<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="FullBackupStatusAsync(string,CancellationToken)">
      <example>
This sample shows how to call FullBackupStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response<FullBackupDetailsInternal> response = await client.FullBackupStatusAsync("45aacd568ab049a2803861e8dd3ae21f");
]]></code></example>
    </member>
    <member name="FullBackupStatus(string,CancellationToken)">
      <example>
This sample shows how to call FullBackupStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response<FullBackupDetailsInternal> response = client.FullBackupStatus("45aacd568ab049a2803861e8dd3ae21f");
]]></code></example>
    </member>
    <member name="FullBackupStatusAsync(string,RequestContext)">
      <example>
This sample shows how to call FullBackupStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response response = await client.FullBackupStatusAsync("45aacd568ab049a2803861e8dd3ae21f", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="FullBackupStatus(string,RequestContext)">
      <example>
This sample shows how to call FullBackupStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response response = client.FullBackupStatus("45aacd568ab049a2803861e8dd3ae21f", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="RestoreStatusAsync(string,CancellationToken)">
      <example>
This sample shows how to call RestoreStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response<RestoreDetailsInternal> response = await client.RestoreStatusAsync("45aacd568ab049a2803861e8dd3ae21f");
]]></code></example>
    </member>
    <member name="RestoreStatus(string,CancellationToken)">
      <example>
This sample shows how to call RestoreStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response<RestoreDetailsInternal> response = client.RestoreStatus("45aacd568ab049a2803861e8dd3ae21f");
]]></code></example>
    </member>
    <member name="RestoreStatusAsync(string,RequestContext)">
      <example>
This sample shows how to call RestoreStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response response = await client.RestoreStatusAsync("45aacd568ab049a2803861e8dd3ae21f", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="RestoreStatus(string,RequestContext)">
      <example>
This sample shows how to call RestoreStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

Response response = client.RestoreStatus("45aacd568ab049a2803861e8dd3ae21f", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="FullBackupAsync(WaitUntil,SASTokenParameter,CancellationToken)">
      <example>
This sample shows how to call FullBackupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

SASTokenParameter azureStorageBlobContainerUri = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
{
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
};
Operation<FullBackupDetailsInternal> operation = await client.FullBackupAsync(WaitUntil.Completed, azureStorageBlobContainerUri);
FullBackupDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="FullBackup(WaitUntil,SASTokenParameter,CancellationToken)">
      <example>
This sample shows how to call FullBackup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

SASTokenParameter azureStorageBlobContainerUri = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
{
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
};
Operation<FullBackupDetailsInternal> operation = client.FullBackup(WaitUntil.Completed, azureStorageBlobContainerUri);
FullBackupDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="FullBackupAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call FullBackupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
});
Operation<BinaryData> operation = await client.FullBackupAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="FullBackup(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call FullBackup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
});
Operation<BinaryData> operation = client.FullBackup(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="PreFullBackupAsync(WaitUntil,PreBackupOperationParameters,CancellationToken)">
      <example>
This sample shows how to call PreFullBackupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

PreBackupOperationParameters preBackupOperationParameters = new PreBackupOperationParameters
{
    StorageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
};
Operation<FullBackupDetailsInternal> operation = await client.PreFullBackupAsync(WaitUntil.Completed, preBackupOperationParameters);
FullBackupDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="PreFullBackup(WaitUntil,PreBackupOperationParameters,CancellationToken)">
      <example>
This sample shows how to call PreFullBackup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

PreBackupOperationParameters preBackupOperationParameters = new PreBackupOperationParameters
{
    StorageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
};
Operation<FullBackupDetailsInternal> operation = client.PreFullBackup(WaitUntil.Completed, preBackupOperationParameters);
FullBackupDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="PreFullBackupAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call PreFullBackupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
});
Operation<BinaryData> operation = await client.PreFullBackupAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="PreFullBackup(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call PreFullBackup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
});
Operation<BinaryData> operation = client.PreFullBackup(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="PreFullRestoreOperationAsync(WaitUntil,PreRestoreOperationParameters,CancellationToken)">
      <example>
This sample shows how to call PreFullRestoreOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

PreRestoreOperationParameters preRestoreOperationParameters = new PreRestoreOperationParameters
{
    SasTokenParameters = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
    {
        Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    FolderToRestore = "mhsm-mypool-20200303062926785",
};
Operation<RestoreDetailsInternal> operation = await client.PreFullRestoreOperationAsync(WaitUntil.Completed, preRestoreOperationParameters);
RestoreDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="PreFullRestoreOperation(WaitUntil,PreRestoreOperationParameters,CancellationToken)">
      <example>
This sample shows how to call PreFullRestoreOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

PreRestoreOperationParameters preRestoreOperationParameters = new PreRestoreOperationParameters
{
    SasTokenParameters = new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
    {
        Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    FolderToRestore = "mhsm-mypool-20200303062926785",
};
Operation<RestoreDetailsInternal> operation = client.PreFullRestoreOperation(WaitUntil.Completed, preRestoreOperationParameters);
RestoreDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="PreFullRestoreOperationAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call PreFullRestoreOperationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sasTokenParameters = new
    {
        storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
        token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    folderToRestore = "mhsm-mypool-20200303062926785",
});
Operation<BinaryData> operation = await client.PreFullRestoreOperationAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="PreFullRestoreOperation(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call PreFullRestoreOperation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sasTokenParameters = new
    {
        storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
        token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    folderToRestore = "mhsm-mypool-20200303062926785",
});
Operation<BinaryData> operation = client.PreFullRestoreOperation(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="FullRestoreOperationAsync(WaitUntil,RestoreOperationParameters,CancellationToken)">
      <example>
This sample shows how to call FullRestoreOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

RestoreOperationParameters restoreBlobDetails = new RestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
{
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
}, "mhsm-mypool-20200303062926785");
Operation<RestoreDetailsInternal> operation = await client.FullRestoreOperationAsync(WaitUntil.Completed, restoreBlobDetails);
RestoreDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="FullRestoreOperation(WaitUntil,RestoreOperationParameters,CancellationToken)">
      <example>
This sample shows how to call FullRestoreOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

RestoreOperationParameters restoreBlobDetails = new RestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
{
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
}, "mhsm-mypool-20200303062926785");
Operation<RestoreDetailsInternal> operation = client.FullRestoreOperation(WaitUntil.Completed, restoreBlobDetails);
RestoreDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="FullRestoreOperationAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call FullRestoreOperationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sasTokenParameters = new
    {
        storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
        token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    folderToRestore = "mhsm-mypool-20200303062926785",
});
Operation<BinaryData> operation = await client.FullRestoreOperationAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="FullRestoreOperation(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call FullRestoreOperation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sasTokenParameters = new
    {
        storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
        token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    folderToRestore = "mhsm-mypool-20200303062926785",
});
Operation<BinaryData> operation = client.FullRestoreOperation(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="SelectiveKeyRestoreOperationAsync(WaitUntil,string,SelectiveKeyRestoreOperationParameters,CancellationToken)">
      <example>
This sample shows how to call SelectiveKeyRestoreOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

SelectiveKeyRestoreOperationParameters restoreBlobDetails = new SelectiveKeyRestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
{
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
}, "mhsm-mypool-20200303062926785");
Operation<SelectiveKeyRestoreDetailsInternal> operation = await client.SelectiveKeyRestoreOperationAsync(WaitUntil.Completed, "hsm-mail-key", restoreBlobDetails);
SelectiveKeyRestoreDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="SelectiveKeyRestoreOperation(WaitUntil,string,SelectiveKeyRestoreOperationParameters,CancellationToken)">
      <example>
This sample shows how to call SelectiveKeyRestoreOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

SelectiveKeyRestoreOperationParameters restoreBlobDetails = new SelectiveKeyRestoreOperationParameters(new SASTokenParameter("https://myaccount.blob.core.windows.net/sascontainer/sasContainer")
{
    Token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
}, "mhsm-mypool-20200303062926785");
Operation<SelectiveKeyRestoreDetailsInternal> operation = client.SelectiveKeyRestoreOperation(WaitUntil.Completed, "hsm-mail-key", restoreBlobDetails);
SelectiveKeyRestoreDetailsInternal responseData = operation.Value;
]]></code></example>
    </member>
    <member name="SelectiveKeyRestoreOperationAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SelectiveKeyRestoreOperationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sasTokenParameters = new
    {
        storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
        token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    folder = "mhsm-mypool-20200303062926785",
});
Operation<BinaryData> operation = await client.SelectiveKeyRestoreOperationAsync(WaitUntil.Completed, "hsm-mail-key", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="SelectiveKeyRestoreOperation(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SelectiveKeyRestoreOperation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BackupRestoreRestClient client = new BackupRestoreRestClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sasTokenParameters = new
    {
        storageResourceUri = "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
        token = "se=2018-02-01T00%3A00Z&spr=https&sv=2017-04-17&sr=b&sig=REDACTED",
    },
    folder = "mhsm-mypool-20200303062926785",
});
Operation<BinaryData> operation = client.SelectiveKeyRestoreOperation(WaitUntil.Completed, "hsm-mail-key", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
  </members>
</doc>