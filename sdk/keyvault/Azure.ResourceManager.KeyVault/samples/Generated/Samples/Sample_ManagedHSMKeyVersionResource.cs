// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;

namespace Azure.ResourceManager.KeyVault.Samples
{
    public partial class Sample_ManagedHSMKeyVersionResource
    {
        // Get a key version
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAKeyVersion()
        {
            // Generated from example definition: specification/keyvault/resource-manager/Microsoft.KeyVault/stable/2023-07-01/examples/managedHsmGetKeyVersion.json
            // this example is just showing the usage of "ManagedHsmKeys_GetVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ManagedHSMKeyVersionResource created on azure
            // for more information of creating ManagedHSMKeyVersionResource, please refer to the document of ManagedHSMKeyVersionResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "sample-group";
            string name = "sample-managedhsm-name";
            string keyName = "sample-key-name";
            string keyVersion = "fd618d9519b74f9aae94ade66b876acc";
            ResourceIdentifier managedHSMKeyVersionResourceId = ManagedHSMKeyVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, name, keyName, keyVersion);
            ManagedHSMKeyVersionResource managedHSMKeyVersion = client.GetManagedHSMKeyVersionResource(managedHSMKeyVersionResourceId);

            // invoke the operation
            ManagedHSMKeyVersionResource result = await managedHSMKeyVersion.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ManagedHsmKeyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
