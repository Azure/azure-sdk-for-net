// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.KeyVault.Models
{
    /// <summary> Permissions the identity has for keys, secrets, certificates and storage. </summary>
    public partial class Permissions
    {
        /// <summary> Initializes a new instance of Permissions. </summary>
        public Permissions()
        {
            Keys = new ChangeTrackingList<KeyPermissions>();
            Secrets = new ChangeTrackingList<SecretPermissions>();
            Certificates = new ChangeTrackingList<CertificatePermissions>();
            Storage = new ChangeTrackingList<StoragePermissions>();
        }

        /// <summary> Initializes a new instance of Permissions. </summary>
        /// <param name="keys"> Permissions to keys. </param>
        /// <param name="secrets"> Permissions to secrets. </param>
        /// <param name="certificates"> Permissions to certificates. </param>
        /// <param name="storage"> Permissions to storage accounts. </param>
        internal Permissions(IList<KeyPermissions> keys, IList<SecretPermissions> secrets, IList<CertificatePermissions> certificates, IList<StoragePermissions> storage)
        {
            Keys = keys;
            Secrets = secrets;
            Certificates = certificates;
            Storage = storage;
        }

        /// <summary> Permissions to keys. </summary>
        public IList<KeyPermissions> Keys { get; }
        /// <summary> Permissions to secrets. </summary>
        public IList<SecretPermissions> Secrets { get; }
        /// <summary> Permissions to certificates. </summary>
        public IList<CertificatePermissions> Certificates { get; }
        /// <summary> Permissions to storage accounts. </summary>
        public IList<StoragePermissions> Storage { get; }
    }
}
