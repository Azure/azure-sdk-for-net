// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.KeyVault.Models
{
    /// <summary> The object attributes managed by the KeyVault service. </summary>
    public partial class SecretBaseAttributes
    {
        /// <summary> Initializes a new instance of <see cref="SecretBaseAttributes"/>. </summary>
        public SecretBaseAttributes()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SecretBaseAttributes"/>. </summary>
        /// <param name="enabled"> Determines whether the object is enabled. </param>
        /// <param name="notBefore"> Not before date in seconds since 1970-01-01T00:00:00Z. </param>
        /// <param name="expires"> Expiry date in seconds since 1970-01-01T00:00:00Z. </param>
        /// <param name="created"> Creation time in seconds since 1970-01-01T00:00:00Z. </param>
        /// <param name="updated"> Last updated time in seconds since 1970-01-01T00:00:00Z. </param>
        internal SecretBaseAttributes(bool? enabled, DateTimeOffset? notBefore, DateTimeOffset? expires, DateTimeOffset? created, DateTimeOffset? updated)
        {
            Enabled = enabled;
            NotBefore = notBefore;
            Expires = expires;
            Created = created;
            Updated = updated;
        }

        /// <summary> Determines whether the object is enabled. </summary>
        public bool? Enabled { get; set; }
        /// <summary> Not before date in seconds since 1970-01-01T00:00:00Z. </summary>
        public DateTimeOffset? NotBefore { get; set; }
        /// <summary> Expiry date in seconds since 1970-01-01T00:00:00Z. </summary>
        public DateTimeOffset? Expires { get; set; }
        /// <summary> Creation time in seconds since 1970-01-01T00:00:00Z. </summary>
        public DateTimeOffset? Created { get; }
        /// <summary> Last updated time in seconds since 1970-01-01T00:00:00Z. </summary>
        public DateTimeOffset? Updated { get; }
    }
}
