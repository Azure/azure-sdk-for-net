// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WorkloadMonitor
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// HealthMonitorsOperations operations.
    /// </summary>
    public partial interface IHealthMonitorsOperations
    {
        /// <summary>
        /// Get the current health status of all monitors of a virtual machine.
        /// Optional parameters: $expand (retrieve the monitor's evidence and
        /// configuration) and $filter (filter by monitor name).
        /// </summary>
        /// <param name='subscriptionId'>
        /// The subscription Id of the virtual machine.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group of the virtual machine.
        /// </param>
        /// <param name='providerName'>
        /// The provider name (ex: Microsoft.Compute for virtual machines).
        /// </param>
        /// <param name='resourceCollectionName'>
        /// The resource collection name (ex: virtualMachines for virtual
        /// machines).
        /// </param>
        /// <param name='resourceName'>
        /// The name of the virtual machine.
        /// </param>
        /// <param name='filter'>
        /// Optionally filter by monitor name. Example: $filter=monitorName eq
        /// 'logical-disks|C:|disk-free-space-mb.'
        /// </param>
        /// <param name='expand'>
        /// Optionally expand the monitor’s evidence and/or configuration.
        /// Example: $expand=evidence,configuration.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<HealthMonitor>>> ListWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string providerName, string resourceCollectionName, string resourceName, string filter = default(string), string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the current health status of a monitor of a virtual machine.
        /// Optional parameter: $expand (retrieve the monitor's evidence and
        /// configuration).
        /// </summary>
        /// <param name='subscriptionId'>
        /// The subscription Id of the virtual machine.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group of the virtual machine.
        /// </param>
        /// <param name='providerName'>
        /// The provider name (ex: Microsoft.Compute for virtual machines).
        /// </param>
        /// <param name='resourceCollectionName'>
        /// The resource collection name (ex: virtualMachines for virtual
        /// machines).
        /// </param>
        /// <param name='resourceName'>
        /// The name of the virtual machine.
        /// </param>
        /// <param name='monitorId'>
        /// The monitor Id of the virtual machine.
        /// </param>
        /// <param name='expand'>
        /// Optionally expand the monitor’s evidence and/or configuration.
        /// Example: $expand=evidence,configuration.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<HealthMonitor>> GetWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the health state changes of a monitor of a virtual machine
        /// within the provided time window (default is the last 24 hours).
        /// Optional parameters: $expand (retrieve the monitor's evidence and
        /// configuration) and $filter (filter by heartbeat condition).
        /// </summary>
        /// <param name='subscriptionId'>
        /// The subscription Id of the virtual machine.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group of the virtual machine.
        /// </param>
        /// <param name='providerName'>
        /// The provider name (ex: Microsoft.Compute for virtual machines).
        /// </param>
        /// <param name='resourceCollectionName'>
        /// The resource collection name (ex: virtualMachines for virtual
        /// machines).
        /// </param>
        /// <param name='resourceName'>
        /// The name of the virtual machine.
        /// </param>
        /// <param name='monitorId'>
        /// The monitor Id of the virtual machine.
        /// </param>
        /// <param name='filter'>
        /// Optionally filter by heartbeat condition. Example:
        /// $filter=isHeartbeat eq false.
        /// </param>
        /// <param name='expand'>
        /// Optionally expand the monitor’s evidence and/or configuration.
        /// Example: $expand=evidence,configuration.
        /// </param>
        /// <param name='startTimestampUtc'>
        /// The start of the time window.
        /// </param>
        /// <param name='endTimestampUtc'>
        /// The end of the time window.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<HealthMonitorStateChange>>> ListStateChangesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string providerName, string resourceCollectionName, string resourceName, string monitorId, string filter = default(string), string expand = default(string), System.DateTime? startTimestampUtc = default(System.DateTime?), System.DateTime? endTimestampUtc = default(System.DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the health state change of a monitor of a virtual machine at
        /// the provided timestamp. Optional parameter: $expand (retrieve the
        /// monitor's evidence and configuration).
        /// </summary>
        /// <param name='subscriptionId'>
        /// The subscription Id of the virtual machine.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group of the virtual machine.
        /// </param>
        /// <param name='providerName'>
        /// The provider name (ex: Microsoft.Compute for virtual machines).
        /// </param>
        /// <param name='resourceCollectionName'>
        /// The resource collection name (ex: virtualMachines for virtual
        /// machines).
        /// </param>
        /// <param name='resourceName'>
        /// The name of the virtual machine.
        /// </param>
        /// <param name='monitorId'>
        /// The monitor Id of the virtual machine.
        /// </param>
        /// <param name='timestampUnix'>
        /// The timestamp of the state change (unix format).
        /// </param>
        /// <param name='expand'>
        /// Optionally expand the monitor’s evidence and/or configuration.
        /// Example: $expand=evidence,configuration.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<HealthMonitorStateChange>> GetStateChangeWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string providerName, string resourceCollectionName, string resourceName, string monitorId, string timestampUnix, string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the current health status of all monitors of a virtual machine.
        /// Optional parameters: $expand (retrieve the monitor's evidence and
        /// configuration) and $filter (filter by monitor name).
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<HealthMonitor>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the health state changes of a monitor of a virtual machine
        /// within the provided time window (default is the last 24 hours).
        /// Optional parameters: $expand (retrieve the monitor's evidence and
        /// configuration) and $filter (filter by heartbeat condition).
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<HealthMonitorStateChange>>> ListStateChangesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
