// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> The PageAsset. </summary>
    public partial class PageAsset : InventoryAsset
    {
        /// <summary> Initializes a new instance of PageAsset. </summary>
        public PageAsset()
        {
            IpAddresses = new ChangeTrackingList<ObservedString>();
            Successful = new ChangeTrackingList<ObservedBoolean>();
            HttpResponseCodes = new ChangeTrackingList<ObservedInteger>();
            HttpResponseMessages = new ChangeTrackingList<ObservedString>();
            ResponseTimes = new ChangeTrackingList<ObservedLong>();
            Frames = new ChangeTrackingList<ObservedBoolean>();
            Windows = new ChangeTrackingList<ObservedBoolean>();
            NonHtmlFrames = new ChangeTrackingList<ObservedBoolean>();
            UndirectedContent = new ChangeTrackingList<ObservedBoolean>();
            ContentTypes = new ChangeTrackingList<ObservedString>();
            ContentLengths = new ChangeTrackingList<ObservedLong>();
            WindowNames = new ChangeTrackingList<ObservedString>();
            Charsets = new ChangeTrackingList<ObservedString>();
            Titles = new ChangeTrackingList<ObservedString>();
            Languages = new ChangeTrackingList<ObservedString>();
            ResponseHeaders = new ChangeTrackingList<ObservedHeader>();
            Cookies = new ChangeTrackingList<Cookie>();
            WebComponents = new ChangeTrackingList<WebComponent>();
            Attributes = new ChangeTrackingList<Attribute>();
            AssetSecurityPolicies = new ChangeTrackingList<AssetSecurityPolicy>();
            ResponseBodyMinhashSignatures = new ChangeTrackingList<ObservedIntegers>();
            FullDomMinhashSignatures = new ChangeTrackingList<ObservedIntegers>();
            ResponseBodyHashSignatures = new ChangeTrackingList<ObservedString>();
            Errors = new ChangeTrackingList<ObservedString>();
            SslCerts = new ChangeTrackingList<SslCertAsset>();
            Sources = new ChangeTrackingList<Source>();
            RedirectUrls = new ChangeTrackingList<ObservedString>();
            FinalUrls = new ChangeTrackingList<ObservedString>();
            FinalResponseCodes = new ChangeTrackingList<ObservedInteger>();
            ParkedPage = new ChangeTrackingList<ObservedBoolean>();
            ResourceUrls = new ChangeTrackingList<ResourceUrl>();
            Guids = new ChangeTrackingList<GuidPair>();
            FinalIpAddresses = new ChangeTrackingList<ObservedString>();
            Asns = new ChangeTrackingList<ObservedLong>();
            IpBlocks = new ChangeTrackingList<IpBlock>();
            FinalAsns = new ChangeTrackingList<ObservedLong>();
            FinalIpBlocks = new ChangeTrackingList<IpBlock>();
            ResponseBodies = new ChangeTrackingList<ObservedString>();
            Location = new ChangeTrackingList<ObservedLocation>();
            Services = new ChangeTrackingList<Service>();
            Cnames = new ChangeTrackingList<ObservedString>();
            Cdns = new ChangeTrackingList<ObservedString>();
            SslServerConfig = new ChangeTrackingList<SslServerConfig>();
            GdprAssetSecurityPolicies = new ChangeTrackingList<AssetSecurityPolicy>();
            Ipv4 = new ChangeTrackingList<ObservedBoolean>();
            Ipv6 = new ChangeTrackingList<ObservedBoolean>();
        }

        /// <summary> Initializes a new instance of PageAsset. </summary>
        /// <param name="url"></param>
        /// <param name="httpMethod"></param>
        /// <param name="service"></param>
        /// <param name="ipAddresses"></param>
        /// <param name="successful"></param>
        /// <param name="httpResponseCodes"></param>
        /// <param name="httpResponseMessages"></param>
        /// <param name="responseTimes"></param>
        /// <param name="frames"></param>
        /// <param name="windows"></param>
        /// <param name="nonHtmlFrames"></param>
        /// <param name="undirectedContent"></param>
        /// <param name="contentTypes"></param>
        /// <param name="contentLengths"></param>
        /// <param name="windowNames"></param>
        /// <param name="charsets"></param>
        /// <param name="titles"></param>
        /// <param name="languages"></param>
        /// <param name="responseHeaders"></param>
        /// <param name="cookies"></param>
        /// <param name="webComponents"></param>
        /// <param name="attributes"></param>
        /// <param name="assetSecurityPolicies"></param>
        /// <param name="responseBodyMinhashSignatures"></param>
        /// <param name="fullDomMinhashSignatures"></param>
        /// <param name="responseBodyHashSignatures"></param>
        /// <param name="errors"></param>
        /// <param name="sslCerts"></param>
        /// <param name="sources"></param>
        /// <param name="firstSeen"></param>
        /// <param name="lastSeen"></param>
        /// <param name="count"></param>
        /// <param name="cause"></param>
        /// <param name="referrer"></param>
        /// <param name="redirectUrls"></param>
        /// <param name="redirectType"></param>
        /// <param name="finalUrls"></param>
        /// <param name="finalResponseCodes"></param>
        /// <param name="parkedPage"></param>
        /// <param name="resourceUrls"></param>
        /// <param name="guids"></param>
        /// <param name="finalIpAddresses"></param>
        /// <param name="asns"></param>
        /// <param name="ipBlocks"></param>
        /// <param name="finalAsns"></param>
        /// <param name="finalIpBlocks"></param>
        /// <param name="responseBodies"></param>
        /// <param name="domainAsset"></param>
        /// <param name="rootUrl"></param>
        /// <param name="isRootUrl"></param>
        /// <param name="location"></param>
        /// <param name="services"></param>
        /// <param name="siteStatus"></param>
        /// <param name="cnames"></param>
        /// <param name="cdns"></param>
        /// <param name="host"></param>
        /// <param name="domain"></param>
        /// <param name="sslServerConfig"></param>
        /// <param name="gdprAssetSecurityPolicies"></param>
        /// <param name="ipv4"></param>
        /// <param name="ipv6"></param>
        internal PageAsset(Uri url, string httpMethod, string service, IList<ObservedString> ipAddresses, IList<ObservedBoolean> successful, IList<ObservedInteger> httpResponseCodes, IList<ObservedString> httpResponseMessages, IList<ObservedLong> responseTimes, IList<ObservedBoolean> frames, IList<ObservedBoolean> windows, IList<ObservedBoolean> nonHtmlFrames, IList<ObservedBoolean> undirectedContent, IList<ObservedString> contentTypes, IList<ObservedLong> contentLengths, IList<ObservedString> windowNames, IList<ObservedString> charsets, IList<ObservedString> titles, IList<ObservedString> languages, IList<ObservedHeader> responseHeaders, IList<Cookie> cookies, IList<WebComponent> webComponents, IList<Attribute> attributes, IList<AssetSecurityPolicy> assetSecurityPolicies, IList<ObservedIntegers> responseBodyMinhashSignatures, IList<ObservedIntegers> fullDomMinhashSignatures, IList<ObservedString> responseBodyHashSignatures, IList<ObservedString> errors, IList<SslCertAsset> sslCerts, IList<Source> sources, DateTimeOffset? firstSeen, DateTimeOffset? lastSeen, long? count, PageCause cause, string referrer, IList<ObservedString> redirectUrls, PageAssetRedirectType? redirectType, IList<ObservedString> finalUrls, IList<ObservedInteger> finalResponseCodes, IList<ObservedBoolean> parkedPage, IList<ResourceUrl> resourceUrls, IList<GuidPair> guids, IList<ObservedString> finalIpAddresses, IList<ObservedLong> asns, IList<IpBlock> ipBlocks, IList<ObservedLong> finalAsns, IList<IpBlock> finalIpBlocks, IList<ObservedString> responseBodies, DomainAsset domainAsset, ObservedBoolean rootUrl, bool? isRootUrl, IList<ObservedLocation> location, IList<Service> services, string siteStatus, IList<ObservedString> cnames, IList<ObservedString> cdns, string host, string domain, IList<SslServerConfig> sslServerConfig, IList<AssetSecurityPolicy> gdprAssetSecurityPolicies, IList<ObservedBoolean> ipv4, IList<ObservedBoolean> ipv6)
        {
            Url = url;
            HttpMethod = httpMethod;
            Service = service;
            IpAddresses = ipAddresses;
            Successful = successful;
            HttpResponseCodes = httpResponseCodes;
            HttpResponseMessages = httpResponseMessages;
            ResponseTimes = responseTimes;
            Frames = frames;
            Windows = windows;
            NonHtmlFrames = nonHtmlFrames;
            UndirectedContent = undirectedContent;
            ContentTypes = contentTypes;
            ContentLengths = contentLengths;
            WindowNames = windowNames;
            Charsets = charsets;
            Titles = titles;
            Languages = languages;
            ResponseHeaders = responseHeaders;
            Cookies = cookies;
            WebComponents = webComponents;
            Attributes = attributes;
            AssetSecurityPolicies = assetSecurityPolicies;
            ResponseBodyMinhashSignatures = responseBodyMinhashSignatures;
            FullDomMinhashSignatures = fullDomMinhashSignatures;
            ResponseBodyHashSignatures = responseBodyHashSignatures;
            Errors = errors;
            SslCerts = sslCerts;
            Sources = sources;
            FirstSeen = firstSeen;
            LastSeen = lastSeen;
            Count = count;
            Cause = cause;
            Referrer = referrer;
            RedirectUrls = redirectUrls;
            RedirectType = redirectType;
            FinalUrls = finalUrls;
            FinalResponseCodes = finalResponseCodes;
            ParkedPage = parkedPage;
            ResourceUrls = resourceUrls;
            Guids = guids;
            FinalIpAddresses = finalIpAddresses;
            Asns = asns;
            IpBlocks = ipBlocks;
            FinalAsns = finalAsns;
            FinalIpBlocks = finalIpBlocks;
            ResponseBodies = responseBodies;
            DomainAsset = domainAsset;
            RootUrl = rootUrl;
            IsRootUrl = isRootUrl;
            Location = location;
            Services = services;
            SiteStatus = siteStatus;
            Cnames = cnames;
            Cdns = cdns;
            Host = host;
            Domain = domain;
            SslServerConfig = sslServerConfig;
            GdprAssetSecurityPolicies = gdprAssetSecurityPolicies;
            Ipv4 = ipv4;
            Ipv6 = ipv6;
        }

        /// <summary> Gets or sets the url. </summary>
        public Uri Url { get; set; }
        /// <summary> Gets or sets the http method. </summary>
        public string HttpMethod { get; set; }
        /// <summary> Gets or sets the service. </summary>
        public string Service { get; set; }
        /// <summary> Gets the ip addresses. </summary>
        public IList<ObservedString> IpAddresses { get; }
        /// <summary> Gets the successful. </summary>
        public IList<ObservedBoolean> Successful { get; }
        /// <summary> Gets the http response codes. </summary>
        public IList<ObservedInteger> HttpResponseCodes { get; }
        /// <summary> Gets the http response messages. </summary>
        public IList<ObservedString> HttpResponseMessages { get; }
        /// <summary> Gets the response times. </summary>
        public IList<ObservedLong> ResponseTimes { get; }
        /// <summary> Gets the frames. </summary>
        public IList<ObservedBoolean> Frames { get; }
        /// <summary> Gets the windows. </summary>
        public IList<ObservedBoolean> Windows { get; }
        /// <summary> Gets the non html frames. </summary>
        public IList<ObservedBoolean> NonHtmlFrames { get; }
        /// <summary> Gets the undirected content. </summary>
        public IList<ObservedBoolean> UndirectedContent { get; }
        /// <summary> Gets the content types. </summary>
        public IList<ObservedString> ContentTypes { get; }
        /// <summary> Gets the content lengths. </summary>
        public IList<ObservedLong> ContentLengths { get; }
        /// <summary> Gets the window names. </summary>
        public IList<ObservedString> WindowNames { get; }
        /// <summary> Gets the charsets. </summary>
        public IList<ObservedString> Charsets { get; }
        /// <summary> Gets the titles. </summary>
        public IList<ObservedString> Titles { get; }
        /// <summary> Gets the languages. </summary>
        public IList<ObservedString> Languages { get; }
        /// <summary> Gets the response headers. </summary>
        public IList<ObservedHeader> ResponseHeaders { get; }
        /// <summary> Gets the cookies. </summary>
        public IList<Cookie> Cookies { get; }
        /// <summary> Gets the web components. </summary>
        public IList<WebComponent> WebComponents { get; }
        /// <summary> Gets the attributes. </summary>
        public IList<Attribute> Attributes { get; }
        /// <summary> Gets the asset security policies. </summary>
        public IList<AssetSecurityPolicy> AssetSecurityPolicies { get; }
        /// <summary> Gets the response body minhash signatures. </summary>
        public IList<ObservedIntegers> ResponseBodyMinhashSignatures { get; }
        /// <summary> Gets the full dom minhash signatures. </summary>
        public IList<ObservedIntegers> FullDomMinhashSignatures { get; }
        /// <summary> Gets the response body hash signatures. </summary>
        public IList<ObservedString> ResponseBodyHashSignatures { get; }
        /// <summary> Gets the errors. </summary>
        public IList<ObservedString> Errors { get; }
        /// <summary> Gets the ssl certs. </summary>
        public IList<SslCertAsset> SslCerts { get; }
        /// <summary> Gets the sources. </summary>
        public IList<Source> Sources { get; }
        /// <summary> Gets or sets the first seen. </summary>
        public DateTimeOffset? FirstSeen { get; set; }
        /// <summary> Gets or sets the last seen. </summary>
        public DateTimeOffset? LastSeen { get; set; }
        /// <summary> Gets or sets the count. </summary>
        public long? Count { get; set; }
        /// <summary> Gets or sets the cause. </summary>
        public PageCause Cause { get; set; }
        /// <summary> Gets or sets the referrer. </summary>
        public string Referrer { get; set; }
        /// <summary> Gets the redirect urls. </summary>
        public IList<ObservedString> RedirectUrls { get; }
        /// <summary> Gets or sets the redirect type. </summary>
        public PageAssetRedirectType? RedirectType { get; set; }
        /// <summary> Gets the final urls. </summary>
        public IList<ObservedString> FinalUrls { get; }
        /// <summary> Gets the final response codes. </summary>
        public IList<ObservedInteger> FinalResponseCodes { get; }
        /// <summary> Gets the parked page. </summary>
        public IList<ObservedBoolean> ParkedPage { get; }
        /// <summary> Gets the resource urls. </summary>
        public IList<ResourceUrl> ResourceUrls { get; }
        /// <summary> Gets the guids. </summary>
        public IList<GuidPair> Guids { get; }
        /// <summary> Gets the final ip addresses. </summary>
        public IList<ObservedString> FinalIpAddresses { get; }
        /// <summary> Gets the asns. </summary>
        public IList<ObservedLong> Asns { get; }
        /// <summary> Gets the ip blocks. </summary>
        public IList<IpBlock> IpBlocks { get; }
        /// <summary> Gets the final asns. </summary>
        public IList<ObservedLong> FinalAsns { get; }
        /// <summary> Gets the final ip blocks. </summary>
        public IList<IpBlock> FinalIpBlocks { get; }
        /// <summary> Gets the response bodies. </summary>
        public IList<ObservedString> ResponseBodies { get; }
        /// <summary> Gets or sets the domain asset. </summary>
        public DomainAsset DomainAsset { get; set; }
        /// <summary> Gets or sets the root url. </summary>
        public ObservedBoolean RootUrl { get; set; }
        /// <summary> Gets or sets the is root url. </summary>
        public bool? IsRootUrl { get; set; }
        /// <summary> Gets the location. </summary>
        public IList<ObservedLocation> Location { get; }
        /// <summary> Gets the services. </summary>
        public IList<Service> Services { get; }
        /// <summary> Gets or sets the site status. </summary>
        public string SiteStatus { get; set; }
        /// <summary> Gets the cnames. </summary>
        public IList<ObservedString> Cnames { get; }
        /// <summary> Gets the cdns. </summary>
        public IList<ObservedString> Cdns { get; }
        /// <summary> Gets or sets the host. </summary>
        public string Host { get; set; }
        /// <summary> Gets or sets the domain. </summary>
        public string Domain { get; set; }
        /// <summary> Gets the ssl server config. </summary>
        public IList<SslServerConfig> SslServerConfig { get; }
        /// <summary> Gets the gdpr asset security policies. </summary>
        public IList<AssetSecurityPolicy> GdprAssetSecurityPolicies { get; }
        /// <summary> Gets the ipv 4. </summary>
        public IList<ObservedBoolean> Ipv4 { get; }
        /// <summary> Gets the ipv 6. </summary>
        public IList<ObservedBoolean> Ipv6 { get; }
    }
}
