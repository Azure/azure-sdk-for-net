// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    public partial class DependentResource
    {
        internal static DependentResource DeserializeDependentResource(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> md5 = default;
            Optional<long> responseBodySize = default;
            Optional<DateTimeOffset> firstSeen = default;
            Optional<DateTimeOffset> lastSeen = default;
            Optional<long> count = default;
            Optional<string> firstSeenCrawlGuid = default;
            Optional<string> firstSeenPageGuid = default;
            Optional<string> firstSeenResourceGuid = default;
            Optional<string> lastSeenCrawlGuid = default;
            Optional<string> lastSeenPageGuid = default;
            Optional<string> lastSeenResourceGuid = default;
            Optional<IReadOnlyList<int>> responseBodyMinhash = default;
            Optional<string> contentType = default;
            Optional<string> sha256 = default;
            Optional<string> sha384 = default;
            Optional<string> sha512 = default;
            Optional<Uri> url = default;
            Optional<bool> cached = default;
            Optional<IReadOnlyList<SubResourceIntegrityCheck>> sriChecks = default;
            Optional<string> host = default;
            Optional<DateTimeOffset> lastObservedViolation = default;
            Optional<DateTimeOffset> lastObservedValidation = default;
            Optional<string> lastObservedActualSriHash = default;
            Optional<string> lastObservedExpectedSriHash = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("md5"u8))
                {
                    md5 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("responseBodySize"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    responseBodySize = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("firstSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    firstSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("count"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    count = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("firstSeenCrawlGuid"u8))
                {
                    firstSeenCrawlGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("firstSeenPageGuid"u8))
                {
                    firstSeenPageGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("firstSeenResourceGuid"u8))
                {
                    firstSeenResourceGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastSeenCrawlGuid"u8))
                {
                    lastSeenCrawlGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastSeenPageGuid"u8))
                {
                    lastSeenPageGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastSeenResourceGuid"u8))
                {
                    lastSeenResourceGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("responseBodyMinhash"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<int> array = new List<int>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetInt32());
                    }
                    responseBodyMinhash = array;
                    continue;
                }
                if (property.NameEquals("contentType"u8))
                {
                    contentType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sha256"u8))
                {
                    sha256 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sha384"u8))
                {
                    sha384 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sha512"u8))
                {
                    sha512 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("url"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    url = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("cached"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cached = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("sriChecks"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<SubResourceIntegrityCheck> array = new List<SubResourceIntegrityCheck>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SubResourceIntegrityCheck.DeserializeSubResourceIntegrityCheck(item));
                    }
                    sriChecks = array;
                    continue;
                }
                if (property.NameEquals("host"u8))
                {
                    host = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastObservedViolation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastObservedViolation = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastObservedValidation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastObservedValidation = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastObservedActualSriHash"u8))
                {
                    lastObservedActualSriHash = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastObservedExpectedSriHash"u8))
                {
                    lastObservedExpectedSriHash = property.Value.GetString();
                    continue;
                }
            }
            return new DependentResource(md5.Value, Optional.ToNullable(responseBodySize), Optional.ToNullable(firstSeen), Optional.ToNullable(lastSeen), Optional.ToNullable(count), firstSeenCrawlGuid.Value, firstSeenPageGuid.Value, firstSeenResourceGuid.Value, lastSeenCrawlGuid.Value, lastSeenPageGuid.Value, lastSeenResourceGuid.Value, Optional.ToList(responseBodyMinhash), contentType.Value, sha256.Value, sha384.Value, sha512.Value, url.Value, Optional.ToNullable(cached), Optional.ToList(sriChecks), host.Value, Optional.ToNullable(lastObservedViolation), Optional.ToNullable(lastObservedValidation), lastObservedActualSriHash.Value, lastObservedExpectedSriHash.Value);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static DependentResource FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeDependentResource(document.RootElement);
        }
    }
}
