// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> The Reputation. </summary>
    public partial class Reputation
    {
        /// <summary> Initializes a new instance of Reputation. </summary>
        public Reputation()
        {
        }

        /// <summary> Initializes a new instance of Reputation. </summary>
        /// <param name="listName"></param>
        /// <param name="threatType"></param>
        /// <param name="trusted"></param>
        /// <param name="cidr"></param>
        /// <param name="firstSeen"></param>
        /// <param name="lastSeen"></param>
        /// <param name="listUpdatedAt"></param>
        /// <param name="recent"></param>
        internal Reputation(string listName, string threatType, bool? trusted, string cidr, DateTimeOffset? firstSeen, DateTimeOffset? lastSeen, DateTimeOffset? listUpdatedAt, bool? recent)
        {
            ListName = listName;
            ThreatType = threatType;
            Trusted = trusted;
            Cidr = cidr;
            FirstSeen = firstSeen;
            LastSeen = lastSeen;
            ListUpdatedAt = listUpdatedAt;
            Recent = recent;
        }

        /// <summary> Gets or sets the list name. </summary>
        public string ListName { get; set; }
        /// <summary> Gets or sets the threat type. </summary>
        public string ThreatType { get; set; }
        /// <summary> Gets or sets the trusted. </summary>
        public bool? Trusted { get; set; }
        /// <summary> Gets or sets the cidr. </summary>
        public string Cidr { get; set; }
        /// <summary> Gets or sets the first seen. </summary>
        public DateTimeOffset? FirstSeen { get; set; }
        /// <summary> Gets or sets the last seen. </summary>
        public DateTimeOffset? LastSeen { get; set; }
        /// <summary> Gets or sets the list updated at. </summary>
        public DateTimeOffset? ListUpdatedAt { get; set; }
        /// <summary> Gets or sets the recent. </summary>
        public bool? Recent { get; set; }
    }
}
