// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> The AssetSecurityPolicy. </summary>
    public partial class AssetSecurityPolicy
    {
        /// <summary> Initializes a new instance of AssetSecurityPolicy. </summary>
        public AssetSecurityPolicy()
        {
            Sources = new ChangeTrackingList<Source>();
        }

        /// <summary> Initializes a new instance of AssetSecurityPolicy. </summary>
        /// <param name="policyName"></param>
        /// <param name="isAffected"></param>
        /// <param name="description"></param>
        /// <param name="firstSeen"></param>
        /// <param name="lastSeen"></param>
        /// <param name="count"></param>
        /// <param name="recent"></param>
        /// <param name="sources"></param>
        internal AssetSecurityPolicy(string policyName, bool? isAffected, string description, DateTimeOffset? firstSeen, DateTimeOffset? lastSeen, long? count, bool? recent, IList<Source> sources)
        {
            PolicyName = policyName;
            IsAffected = isAffected;
            Description = description;
            FirstSeen = firstSeen;
            LastSeen = lastSeen;
            Count = count;
            Recent = recent;
            Sources = sources;
        }

        /// <summary> Gets or sets the policy name. </summary>
        public string PolicyName { get; set; }
        /// <summary> Gets or sets the is affected. </summary>
        public bool? IsAffected { get; set; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the first seen. </summary>
        public DateTimeOffset? FirstSeen { get; set; }
        /// <summary> Gets or sets the last seen. </summary>
        public DateTimeOffset? LastSeen { get; set; }
        /// <summary> Gets or sets the count. </summary>
        public long? Count { get; set; }
        /// <summary> Gets or sets the recent. </summary>
        public bool? Recent { get; set; }
        /// <summary> Gets the sources. </summary>
        public IList<Source> Sources { get; }
    }
}
