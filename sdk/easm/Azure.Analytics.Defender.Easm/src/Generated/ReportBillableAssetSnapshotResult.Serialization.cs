// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    public partial class ReportBillableAssetSnapshotResult
    {
        internal static ReportBillableAssetSnapshotResult DeserializeReportBillableAssetSnapshotResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DateTimeOffset> date = default;
            Optional<long> total = default;
            Optional<IReadOnlyList<ReportBillableAssetBreakdown>> assetBreakdown = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("date"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    date = property.Value.GetDateTimeOffset("D");
                    continue;
                }
                if (property.NameEquals("total"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    total = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("assetBreakdown"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ReportBillableAssetBreakdown> array = new List<ReportBillableAssetBreakdown>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ReportBillableAssetBreakdown.DeserializeReportBillableAssetBreakdown(item));
                    }
                    assetBreakdown = array;
                    continue;
                }
            }
            return new ReportBillableAssetSnapshotResult(Optional.ToNullable(date), Optional.ToNullable(total), Optional.ToList(assetBreakdown));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ReportBillableAssetSnapshotResult FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeReportBillableAssetSnapshotResult(document.RootElement);
        }
    }
}
