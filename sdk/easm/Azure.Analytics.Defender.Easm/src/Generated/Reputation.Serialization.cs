// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    public partial class Reputation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ListName))
            {
                writer.WritePropertyName("listName"u8);
                writer.WriteStringValue(ListName);
            }
            if (Optional.IsDefined(ThreatType))
            {
                writer.WritePropertyName("threatType"u8);
                writer.WriteStringValue(ThreatType);
            }
            if (Optional.IsDefined(Trusted))
            {
                writer.WritePropertyName("trusted"u8);
                writer.WriteBooleanValue(Trusted.Value);
            }
            if (Optional.IsDefined(Cidr))
            {
                writer.WritePropertyName("cidr"u8);
                writer.WriteStringValue(Cidr);
            }
            if (Optional.IsDefined(FirstSeen))
            {
                writer.WritePropertyName("firstSeen"u8);
                writer.WriteStringValue(FirstSeen.Value, "O");
            }
            if (Optional.IsDefined(LastSeen))
            {
                writer.WritePropertyName("lastSeen"u8);
                writer.WriteStringValue(LastSeen.Value, "O");
            }
            if (Optional.IsDefined(ListUpdatedAt))
            {
                writer.WritePropertyName("listUpdatedAt"u8);
                writer.WriteStringValue(ListUpdatedAt.Value, "O");
            }
            if (Optional.IsDefined(Recent))
            {
                writer.WritePropertyName("recent"u8);
                writer.WriteBooleanValue(Recent.Value);
            }
            writer.WriteEndObject();
        }

        internal static Reputation DeserializeReputation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> listName = default;
            Optional<string> threatType = default;
            Optional<bool> trusted = default;
            Optional<string> cidr = default;
            Optional<DateTimeOffset> firstSeen = default;
            Optional<DateTimeOffset> lastSeen = default;
            Optional<DateTimeOffset> listUpdatedAt = default;
            Optional<bool> recent = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("listName"u8))
                {
                    listName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("threatType"u8))
                {
                    threatType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("trusted"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    trusted = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("cidr"u8))
                {
                    cidr = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("firstSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    firstSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("listUpdatedAt"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    listUpdatedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("recent"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    recent = property.Value.GetBoolean();
                    continue;
                }
            }
            return new Reputation(listName.Value, threatType.Value, Optional.ToNullable(trusted), cidr.Value, Optional.ToNullable(firstSeen), Optional.ToNullable(lastSeen), Optional.ToNullable(listUpdatedAt), Optional.ToNullable(recent));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static Reputation FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeReputation(document.RootElement);
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
