// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    public partial class HostCore
    {
        internal static HostCore DeserializeHostCore(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> host = default;
            Optional<string> domain = default;
            Optional<DateTimeOffset> firstSeen = default;
            Optional<DateTimeOffset> lastSeen = default;
            Optional<long> count = default;
            Optional<DateTimeOffset> blacklistCauseFirstSeen = default;
            Optional<DateTimeOffset> blacklistCauseLastSeen = default;
            Optional<long> blacklistCauseCount = default;
            Optional<DateTimeOffset> blacklistResourceFirstSeen = default;
            Optional<DateTimeOffset> blacklistResourceLastSeen = default;
            Optional<long> blacklistResourceCount = default;
            Optional<DateTimeOffset> blacklistSequenceFirstSeen = default;
            Optional<DateTimeOffset> blacklistSequenceLastSeen = default;
            Optional<long> blacklistSequenceCount = default;
            Optional<long> phishCauseCount = default;
            Optional<long> malwareCauseCount = default;
            Optional<long> spamCauseCount = default;
            Optional<long> scamCauseCount = default;
            Optional<long> phishResourceCount = default;
            Optional<long> malwareResourceCount = default;
            Optional<long> spamResourceCount = default;
            Optional<long> scamResourceCount = default;
            Optional<long> phishSequenceCount = default;
            Optional<long> malwareSequenceCount = default;
            Optional<long> spamSequenceCount = default;
            Optional<long> scamSequenceCount = default;
            Optional<int> alexaRank = default;
            Optional<int> hostReputationScore = default;
            Optional<int> hostPhishReputationScore = default;
            Optional<int> hostMalwareReputationScore = default;
            Optional<int> hostSpamReputationScore = default;
            Optional<int> hostScamReputationScore = default;
            Optional<int> domainReputationScore = default;
            Optional<int> domainPhishReputationScore = default;
            Optional<int> domainMalwareReputationScore = default;
            Optional<int> domainSpamReputationScore = default;
            Optional<int> domainScamReputationScore = default;
            Optional<string> uuid = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("host"u8))
                {
                    host = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("domain"u8))
                {
                    domain = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("firstSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    firstSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("count"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    count = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("blacklistCauseFirstSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistCauseFirstSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("blacklistCauseLastSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistCauseLastSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("blacklistCauseCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistCauseCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("blacklistResourceFirstSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistResourceFirstSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("blacklistResourceLastSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistResourceLastSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("blacklistResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistResourceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("blacklistSequenceFirstSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistSequenceFirstSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("blacklistSequenceLastSeen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistSequenceLastSeen = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("blacklistSequenceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blacklistSequenceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("phishCauseCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    phishCauseCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("malwareCauseCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    malwareCauseCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("spamCauseCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    spamCauseCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("scamCauseCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scamCauseCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("phishResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    phishResourceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("malwareResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    malwareResourceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("spamResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    spamResourceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("scamResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scamResourceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("phishSequenceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    phishSequenceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("malwareSequenceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    malwareSequenceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("spamSequenceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    spamSequenceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("scamSequenceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scamSequenceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("alexaRank"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    alexaRank = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("hostReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    hostReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("hostPhishReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    hostPhishReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("hostMalwareReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    hostMalwareReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("hostSpamReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    hostSpamReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("hostScamReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    hostScamReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("domainReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("domainPhishReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainPhishReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("domainMalwareReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainMalwareReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("domainSpamReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainSpamReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("domainScamReputationScore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainScamReputationScore = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("uuid"u8))
                {
                    uuid = property.Value.GetString();
                    continue;
                }
            }
            return new HostCore(host.Value, domain.Value, Optional.ToNullable(firstSeen), Optional.ToNullable(lastSeen), Optional.ToNullable(count), Optional.ToNullable(blacklistCauseFirstSeen), Optional.ToNullable(blacklistCauseLastSeen), Optional.ToNullable(blacklistCauseCount), Optional.ToNullable(blacklistResourceFirstSeen), Optional.ToNullable(blacklistResourceLastSeen), Optional.ToNullable(blacklistResourceCount), Optional.ToNullable(blacklistSequenceFirstSeen), Optional.ToNullable(blacklistSequenceLastSeen), Optional.ToNullable(blacklistSequenceCount), Optional.ToNullable(phishCauseCount), Optional.ToNullable(malwareCauseCount), Optional.ToNullable(spamCauseCount), Optional.ToNullable(scamCauseCount), Optional.ToNullable(phishResourceCount), Optional.ToNullable(malwareResourceCount), Optional.ToNullable(spamResourceCount), Optional.ToNullable(scamResourceCount), Optional.ToNullable(phishSequenceCount), Optional.ToNullable(malwareSequenceCount), Optional.ToNullable(spamSequenceCount), Optional.ToNullable(scamSequenceCount), Optional.ToNullable(alexaRank), Optional.ToNullable(hostReputationScore), Optional.ToNullable(hostPhishReputationScore), Optional.ToNullable(hostMalwareReputationScore), Optional.ToNullable(hostSpamReputationScore), Optional.ToNullable(hostScamReputationScore), Optional.ToNullable(domainReputationScore), Optional.ToNullable(domainPhishReputationScore), Optional.ToNullable(domainMalwareReputationScore), Optional.ToNullable(domainSpamReputationScore), Optional.ToNullable(domainScamReputationScore), uuid.Value);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static HostCore FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeHostCore(document.RootElement);
        }
    }
}
