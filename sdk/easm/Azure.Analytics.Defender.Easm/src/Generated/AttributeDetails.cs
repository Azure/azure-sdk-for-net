// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> The AttributeDetails. </summary>
    public partial class AttributeDetails
    {
        /// <summary> Initializes a new instance of <see cref="AttributeDetails"/>. </summary>
        internal AttributeDetails()
        {
            Sources = new ChangeTrackingList<SourceDetails>();
        }

        /// <summary> Initializes a new instance of <see cref="AttributeDetails"/>. </summary>
        /// <param name="attributeType"></param>
        /// <param name="attributeValue"></param>
        /// <param name="sources"></param>
        /// <param name="firstSeen"></param>
        /// <param name="lastSeen"></param>
        /// <param name="count"></param>
        /// <param name="recent"></param>
        internal AttributeDetails(string attributeType, string attributeValue, IReadOnlyList<SourceDetails> sources, DateTimeOffset? firstSeen, DateTimeOffset? lastSeen, long? count, bool? recent)
        {
            AttributeType = attributeType;
            AttributeValue = attributeValue;
            Sources = sources;
            FirstSeen = firstSeen;
            LastSeen = lastSeen;
            Count = count;
            Recent = recent;
        }

        /// <summary> Gets the attribute type. </summary>
        public string AttributeType { get; }
        /// <summary> Gets the attribute value. </summary>
        public string AttributeValue { get; }
        /// <summary> Gets the sources. </summary>
        public IReadOnlyList<SourceDetails> Sources { get; }
        /// <summary> Gets the first seen. </summary>
        public DateTimeOffset? FirstSeen { get; }
        /// <summary> Gets the last seen. </summary>
        public DateTimeOffset? LastSeen { get; }
        /// <summary> Gets the count. </summary>
        public long? Count { get; }
        /// <summary> Gets the recent. </summary>
        public bool? Recent { get; }
    }
}
