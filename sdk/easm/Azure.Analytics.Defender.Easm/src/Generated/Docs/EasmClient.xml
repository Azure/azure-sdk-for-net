<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="UpdateAssetsAsync(string,AssetUpdateState?,string,IDictionary{string,bool},AssetUpdateTransfers?,CancellationToken)">
      <example>
This sample shows how to call UpdateAssetsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.UpdateAssetsAsync("<filter>");
]]></code>
This sample shows how to call UpdateAssetsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.UpdateAssetsAsync("<filter>", state: AssetUpdateState.Candidate, externalId: "<externalId>", labels: new Dictionary<string, bool>
{
    ["key"] = true
}, transfers: AssetUpdateTransfers.As);
]]></code></example>
    </member>
    <member name="UpdateAssets(string,AssetUpdateState?,string,IDictionary{string,bool},AssetUpdateTransfers?,CancellationToken)">
      <example>
This sample shows how to call UpdateAssets.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.UpdateAssets("<filter>");
]]></code>
This sample shows how to call UpdateAssets with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.UpdateAssets("<filter>", state: AssetUpdateState.Candidate, externalId: "<externalId>", labels: new Dictionary<string, bool>
{
    ["key"] = true
}, transfers: AssetUpdateTransfers.As);
]]></code></example>
    </member>
    <member name="UpdateAssetsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssetsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateAssetsAsync("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateAssetsAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    state = "candidate",
    externalId = "<externalId>",
    labels = new
    {
        key = true,
    },
    transfers = "as",
});
Response response = await client.UpdateAssetsAsync("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="UpdateAssets(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssets and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateAssets("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateAssets with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    state = "candidate",
    externalId = "<externalId>",
    labels = new
    {
        key = true,
    },
    transfers = "as",
});
Response response = client.UpdateAssets("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = await client.GetAssetResourceAsync("<assetId>");
]]></code>
This sample shows how to call GetAssetResourceAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = await client.GetAssetResourceAsync("<assetId>");
]]></code></example>
    </member>
    <member name="GetAssetResource(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResource.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = client.GetAssetResource("<assetId>");
]]></code>
This sample shows how to call GetAssetResource with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = client.GetAssetResource("<assetId>");
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetAssetResourceAsync("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetAssetResourceAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetAssetResourceAsync("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResource(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetAssetResource("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetAssetResource with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetAssetResource("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetAssetsExportAsync(AssetsExportRequest,string,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetsExportAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetsExportRequest body = new AssetsExportRequest("<fileName>", new string[] { "<columns>" });
Response<TaskResource> response = await client.GetAssetsExportAsync(body);
]]></code>
This sample shows how to call GetAssetsExportAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetsExportRequest body = new AssetsExportRequest("<fileName>", new string[] { "<columns>" });
Response<TaskResource> response = await client.GetAssetsExportAsync(body, filter: "<filter>", orderby: "<orderby>");
]]></code></example>
    </member>
    <member name="GetAssetsExport(AssetsExportRequest,string,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetsExport.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetsExportRequest body = new AssetsExportRequest("<fileName>", new string[] { "<columns>" });
Response<TaskResource> response = client.GetAssetsExport(body);
]]></code>
This sample shows how to call GetAssetsExport with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetsExportRequest body = new AssetsExportRequest("<fileName>", new string[] { "<columns>" });
Response<TaskResource> response = client.GetAssetsExport(body, filter: "<filter>", orderby: "<orderby>");
]]></code></example>
    </member>
    <member name="GetAssetsExportAsync(RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call GetAssetsExportAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    fileName = "<fileName>",
    columns = new object[]
    {
        "<columns>"
    },
});
Response response = await client.GetAssetsExportAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetAssetsExportAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    fileName = "<fileName>",
    columns = new object[]
    {
        "<columns>"
    },
});
Response response = await client.GetAssetsExportAsync(content, filter: "<filter>", orderby: "<orderby>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAssetsExport(RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call GetAssetsExport and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    fileName = "<fileName>",
    columns = new object[]
    {
        "<columns>"
    },
});
Response response = client.GetAssetsExport(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetAssetsExport with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    fileName = "<fileName>",
    columns = new object[]
    {
        "<columns>"
    },
});
Response response = client.GetAssetsExport(content, filter: "<filter>", orderby: "<orderby>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetObservationsAsync(string,string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetObservationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ObservationPageResult> response = await client.GetObservationsAsync("<assetId>");
]]></code>
This sample shows how to call GetObservationsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ObservationPageResult> response = await client.GetObservationsAsync("<assetId>", filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234);
]]></code></example>
    </member>
    <member name="GetObservations(string,string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetObservations.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ObservationPageResult> response = client.GetObservations("<assetId>");
]]></code>
This sample shows how to call GetObservations with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ObservationPageResult> response = client.GetObservations("<assetId>", filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234);
]]></code></example>
    </member>
    <member name="GetObservationsAsync(string,string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetObservationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetObservationsAsync("<assetId>", null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("prioritySummary").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("types")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("priority").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV2").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV3").ToString());
]]></code>
This sample shows how to call GetObservationsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetObservationsAsync("<assetId>", "<filter>", "<orderby>", 1234, 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("prioritySummary").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("types")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("priority").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV2").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV3").ToString());
]]></code></example>
    </member>
    <member name="GetObservations(string,string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetObservations and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetObservations("<assetId>", null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("prioritySummary").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("types")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("priority").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV2").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV3").ToString());
]]></code>
This sample shows how to call GetObservations with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetObservations("<assetId>", "<filter>", "<orderby>", 1234, 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("prioritySummary").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("types")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("priority").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV2").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV3").ToString());
]]></code></example>
    </member>
    <member name="GetDeltaSummaryAsync(DeltaSummaryRequest,CancellationToken)">
      <example>
This sample shows how to call GetDeltaSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaSummaryRequest body = new DeltaSummaryRequest();
Response<DeltaSummaryResult> response = await client.GetDeltaSummaryAsync(body);
]]></code>
This sample shows how to call GetDeltaSummaryAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaSummaryRequest body = new DeltaSummaryRequest
{
    PriorDays = 1234,
    Date = "<date>",
};
Response<DeltaSummaryResult> response = await client.GetDeltaSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetDeltaSummary(DeltaSummaryRequest,CancellationToken)">
      <example>
This sample shows how to call GetDeltaSummary.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaSummaryRequest body = new DeltaSummaryRequest();
Response<DeltaSummaryResult> response = client.GetDeltaSummary(body);
]]></code>
This sample shows how to call GetDeltaSummary with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaSummaryRequest body = new DeltaSummaryRequest
{
    PriorDays = 1234,
    Date = "<date>",
};
Response<DeltaSummaryResult> response = client.GetDeltaSummary(body);
]]></code></example>
    </member>
    <member name="GetDeltaSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetDeltaSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetDeltaSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").GetProperty("range").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("difference").ToString());
]]></code>
This sample shows how to call GetDeltaSummaryAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    priorDays = 1234,
    date = "<date>",
});
Response response = await client.GetDeltaSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").GetProperty("range").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("difference").ToString());
]]></code></example>
    </member>
    <member name="GetDeltaSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetDeltaSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetDeltaSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").GetProperty("range").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("difference").ToString());
]]></code>
This sample shows how to call GetDeltaSummary with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    priorDays = 1234,
    date = "<date>",
});
Response response = client.GetDeltaSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").GetProperty("range").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("difference").ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties());
Response<ValidateResult> response = await client.ValidateDataConnectionAsync(body);
]]></code>
This sample shows how to call ValidateDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<ValidateResult> response = await client.ValidateDataConnectionAsync(body);
]]></code></example>
    </member>
    <member name="ValidateDataConnection(DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties());
Response<ValidateResult> response = client.ValidateDataConnection(body);
]]></code>
This sample shows how to call ValidateDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<ValidateResult> response = client.ValidateDataConnection(body);
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new object(),
});
Response response = await client.ValidateDataConnectionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDataConnectionAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = await client.ValidateDataConnectionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnection(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new object(),
});
Response response = client.ValidateDataConnection(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDataConnection with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = client.ValidateDataConnection(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = await client.GetDataConnectionAsync("<dataConnectionName>");
]]></code>
This sample shows how to call GetDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = await client.GetDataConnectionAsync("<dataConnectionName>");
]]></code></example>
    </member>
    <member name="GetDataConnection(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = client.GetDataConnection("<dataConnectionName>");
]]></code>
This sample shows how to call GetDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = client.GetDataConnection("<dataConnectionName>");
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDataConnectionAsync("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDataConnectionAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDataConnectionAsync("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="GetDataConnection(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDataConnection("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDataConnection with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDataConnection("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties());
Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", body);
]]></code>
This sample shows how to call CreateOrReplaceDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties());
Response<DataConnection> response = client.CreateOrReplaceDataConnection("<dataConnectionName>", body);
]]></code>
This sample shows how to call CreateOrReplaceDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<DataConnection> response = client.CreateOrReplaceDataConnection("<dataConnectionName>", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new object(),
});
Response response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDataConnectionAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new object(),
});
Response response = client.CreateOrReplaceDataConnection("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDataConnection with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = client.CreateOrReplaceDataConnection("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="DeleteDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDataConnectionAsync("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDataConnectionAsync("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteDataConnection(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDataConnection("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDataConnection("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroupAsync(DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload();
Response<ValidateResult> response = await client.ValidateDiscoGroupAsync(body);
]]></code>
This sample shows how to call ValidateDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Name = "<name>",
    Description = "<description>",
    Tier = "<tier>",
    FrequencyMilliseconds = 1234L,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.As,
        Name = "<name>",
    }},
    Names = { "<names>" },
    Excludes = { default },
    TemplateId = "<templateId>",
};
Response<ValidateResult> response = await client.ValidateDiscoGroupAsync(body);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroup(DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload();
Response<ValidateResult> response = client.ValidateDiscoGroup(body);
]]></code>
This sample shows how to call ValidateDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Name = "<name>",
    Description = "<description>",
    Tier = "<tier>",
    FrequencyMilliseconds = 1234L,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.As,
        Name = "<name>",
    }},
    Names = { "<names>" },
    Excludes = { default },
    TemplateId = "<templateId>",
};
Response<ValidateResult> response = client.ValidateDiscoGroup(body);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroupAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ValidateDiscoGroupAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDiscoGroupAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = await client.ValidateDiscoGroupAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="ValidateDiscoGroup(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.ValidateDiscoGroup(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDiscoGroup with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = client.ValidateDiscoGroup(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoGroupAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = await client.GetDiscoGroupAsync("<groupName>");
]]></code>
This sample shows how to call GetDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = await client.GetDiscoGroupAsync("<groupName>");
]]></code></example>
    </member>
    <member name="GetDiscoGroup(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = client.GetDiscoGroup("<groupName>");
]]></code>
This sample shows how to call GetDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = client.GetDiscoGroup("<groupName>");
]]></code></example>
    </member>
    <member name="GetDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoGroupAsync("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDiscoGroupAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoGroupAsync("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoGroup("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDiscoGroup with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoGroup("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="DeleteDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDiscoGroupAsync("<groupName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDiscoGroupAsync("<groupName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call DeleteDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDiscoGroup("<groupName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDiscoGroup("<groupName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroupAsync(string,string,string,string,long?,IEnumerable{DiscoverySource},IEnumerable{string},IEnumerable{DiscoverySource},string,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>");
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", name: "<name>", description: "<description>", tier: "<tier>", frequencyMilliseconds: 1234L, seeds: new DiscoverySource[]
{
    new DiscoverySource
    {
        Kind = DiscoverySourceKind.As,
        Name = "<name>",
    }
}, names: new string[] { "<names>" }, excludes: new DiscoverySource[]
{
    default
}, templateId: "<templateId>");
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroup(string,string,string,string,long?,IEnumerable{DiscoverySource},IEnumerable{string},IEnumerable{DiscoverySource},string,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = client.CreateOrReplaceDiscoGroup("<groupName>");
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = client.CreateOrReplaceDiscoGroup("<groupName>", name: "<name>", description: "<description>", tier: "<tier>", frequencyMilliseconds: 1234L, seeds: new DiscoverySource[]
{
    new DiscoverySource
    {
        Kind = DiscoverySourceKind.As,
        Name = "<name>",
    }
}, names: new string[] { "<names>" }, excludes: new DiscoverySource[]
{
    default
}, templateId: "<templateId>");
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroupAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroupAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroup(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateOrReplaceDiscoGroup("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroup with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = client.CreateOrReplaceDiscoGroup("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="RunDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunDiscoGroupAsync("<groupName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RunDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunDiscoGroupAsync("<groupName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RunDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunDiscoGroup("<groupName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RunDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunDiscoGroup("<groupName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetAssetChainSummaryAsync(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call GetAssetChainSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<AssetChainSummaryResult> response = await client.GetAssetChainSummaryAsync(body);
]]></code>
This sample shows how to call GetAssetChainSummaryAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<AssetChainSummaryResult> response = await client.GetAssetChainSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetAssetChainSummary(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call GetAssetChainSummary.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<AssetChainSummaryResult> response = client.GetAssetChainSummary(body);
]]></code>
This sample shows how to call GetAssetChainSummary with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<AssetChainSummaryResult> response = client.GetAssetChainSummary(body);
]]></code></example>
    </member>
    <member name="GetAssetChainSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetAssetChainSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = await client.GetAssetChainSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("affectedCount").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("displayName").ToString());
]]></code>
This sample shows how to call GetAssetChainSummaryAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = await client.GetAssetChainSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("affectedCount").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="GetAssetChainSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetAssetChainSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = client.GetAssetChainSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("affectedCount").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("displayName").ToString());
]]></code>
This sample shows how to call GetAssetChainSummary with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = client.GetAssetChainSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("affectedCount").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="DismissAssetChainAsync(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call DismissAssetChainAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<TaskResource> response = await client.DismissAssetChainAsync(body);
]]></code>
This sample shows how to call DismissAssetChainAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<TaskResource> response = await client.DismissAssetChainAsync(body);
]]></code></example>
    </member>
    <member name="DismissAssetChain(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call DismissAssetChain.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<TaskResource> response = client.DismissAssetChain(body);
]]></code>
This sample shows how to call DismissAssetChain with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.DISCOGROUP, new string[] { "<sourceIds>" });
Response<TaskResource> response = client.DismissAssetChain(body);
]]></code></example>
    </member>
    <member name="DismissAssetChainAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DismissAssetChainAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = await client.DismissAssetChainAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call DismissAssetChainAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = await client.DismissAssetChainAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DismissAssetChain(RequestContent,RequestContext)">
      <example>
This sample shows how to call DismissAssetChain and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = client.DismissAssetChain(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call DismissAssetChain with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "DISCO_GROUP",
    sourceIds = new object[]
    {
        "<sourceIds>"
    },
});
Response response = client.DismissAssetChain(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoTemplateAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = await client.GetDiscoTemplateAsync("<templateId>");
]]></code>
This sample shows how to call GetDiscoTemplateAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = await client.GetDiscoTemplateAsync("<templateId>");
]]></code></example>
    </member>
    <member name="GetDiscoTemplate(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplate.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = client.GetDiscoTemplate("<templateId>");
]]></code>
This sample shows how to call GetDiscoTemplate with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = client.GetDiscoTemplate("<templateId>");
]]></code></example>
    </member>
    <member name="GetDiscoTemplateAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoTemplateAsync("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetDiscoTemplateAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoTemplateAsync("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("industry").ToString());
Console.WriteLine(result.GetProperty("region").ToString());
Console.WriteLine(result.GetProperty("countryCode").ToString());
Console.WriteLine(result.GetProperty("stateCode").ToString());
Console.WriteLine(result.GetProperty("city").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
]]></code></example>
    </member>
    <member name="GetDiscoTemplate(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoTemplate("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetDiscoTemplate with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoTemplate("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("industry").ToString());
Console.WriteLine(result.GetProperty("region").ToString());
Console.WriteLine(result.GetProperty("countryCode").ToString());
Console.WriteLine(result.GetProperty("stateCode").ToString());
Console.WriteLine(result.GetProperty("city").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
]]></code></example>
    </member>
    <member name="GetBillableAsync(CancellationToken)">
      <example>
This sample shows how to call GetBillableAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = await client.GetBillableAsync();
]]></code>
This sample shows how to call GetBillableAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = await client.GetBillableAsync();
]]></code></example>
    </member>
    <member name="GetBillable(CancellationToken)">
      <example>
This sample shows how to call GetBillable.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = client.GetBillable();
]]></code>
This sample shows how to call GetBillable with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = client.GetBillable();
]]></code></example>
    </member>
    <member name="GetBillableAsync(RequestContext)">
      <example>
This sample shows how to call GetBillableAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetBillableAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetBillableAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetBillableAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetBillable(RequestContext)">
      <example>
This sample shows how to call GetBillable and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetBillable(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetBillable with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetBillable(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(ReportAssetSnapshotPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload();
Response<ReportAssetSnapshotResult> response = await client.GetSnapshotAsync(body);
]]></code>
This sample shows how to call GetSnapshotAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload
{
    Metric = "<metric>",
    LabelName = "<labelName>",
    Size = 1234,
    Page = 1234,
};
Response<ReportAssetSnapshotResult> response = await client.GetSnapshotAsync(body);
]]></code></example>
    </member>
    <member name="GetSnapshot(ReportAssetSnapshotPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshot.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload();
Response<ReportAssetSnapshotResult> response = client.GetSnapshot(body);
]]></code>
This sample shows how to call GetSnapshot with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload
{
    Metric = "<metric>",
    LabelName = "<labelName>",
    Size = 1234,
    Page = 1234,
};
Response<ReportAssetSnapshotResult> response = client.GetSnapshot(body);
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSnapshotAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSnapshotAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "<metric>",
    labelName = "<labelName>",
    size = 1234,
    page = 1234,
});
Response response = await client.GetSnapshotAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("mark").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshot(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshot and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetSnapshot(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSnapshot with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "<metric>",
    labelName = "<labelName>",
    size = 1234,
    page = 1234,
});
Response response = client.GetSnapshot(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("mark").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetSummaryAsync(ReportAssetSummaryPayload,CancellationToken)">
      <example>
This sample shows how to call GetSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload();
Response<ReportAssetSummaryResult> response = await client.GetSummaryAsync(body);
]]></code>
This sample shows how to call GetSummaryAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload
{
    MetricCategories = { "<metricCategories>" },
    Metrics = { "<metrics>" },
    Filters = { "<filters>" },
    GroupBy = "<groupBy>",
    SegmentBy = "<segmentBy>",
    LabelName = "<labelName>",
};
Response<ReportAssetSummaryResult> response = await client.GetSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetSummary(ReportAssetSummaryPayload,CancellationToken)">
      <example>
This sample shows how to call GetSummary.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload();
Response<ReportAssetSummaryResult> response = client.GetSummary(body);
]]></code>
This sample shows how to call GetSummary with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload
{
    MetricCategories = { "<metricCategories>" },
    Metrics = { "<metrics>" },
    Filters = { "<filters>" },
    GroupBy = "<groupBy>",
    SegmentBy = "<segmentBy>",
    LabelName = "<labelName>",
};
Response<ReportAssetSummaryResult> response = client.GetSummary(body);
]]></code></example>
    </member>
    <member name="GetSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSummaryAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metricCategories = new object[]
    {
        "<metricCategories>"
    },
    metrics = new object[]
    {
        "<metrics>"
    },
    filters = new object[]
    {
        "<filters>"
    },
    groupBy = "<groupBy>",
    segmentBy = "<segmentBy>",
    labelName = "<labelName>",
});
Response response = await client.GetSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metricCategory").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("link").ToString());
]]></code></example>
    </member>
    <member name="GetSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSummary with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metricCategories = new object[]
    {
        "<metricCategories>"
    },
    metrics = new object[]
    {
        "<metrics>"
    },
    filters = new object[]
    {
        "<filters>"
    },
    groupBy = "<groupBy>",
    segmentBy = "<segmentBy>",
    labelName = "<labelName>",
});
Response response = client.GetSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metricCategory").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("link").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotExportAsync(ReportAssetSnapshotExportPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotExportAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotExportPayload body = new ReportAssetSnapshotExportPayload();
Response<TaskResource> response = await client.GetSnapshotExportAsync(body);
]]></code>
This sample shows how to call GetSnapshotExportAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotExportPayload body = new ReportAssetSnapshotExportPayload
{
    Metric = "<metric>",
    FileName = "<fileName>",
    Columns = { "<columns>" },
};
Response<TaskResource> response = await client.GetSnapshotExportAsync(body);
]]></code></example>
    </member>
    <member name="GetSnapshotExport(ReportAssetSnapshotExportPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotExport.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotExportPayload body = new ReportAssetSnapshotExportPayload();
Response<TaskResource> response = client.GetSnapshotExport(body);
]]></code>
This sample shows how to call GetSnapshotExport with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotExportPayload body = new ReportAssetSnapshotExportPayload
{
    Metric = "<metric>",
    FileName = "<fileName>",
    Columns = { "<columns>" },
};
Response<TaskResource> response = client.GetSnapshotExport(body);
]]></code></example>
    </member>
    <member name="GetSnapshotExportAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotExportAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSnapshotExportAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetSnapshotExportAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "<metric>",
    fileName = "<fileName>",
    columns = new object[]
    {
        "<columns>"
    },
});
Response response = await client.GetSnapshotExportAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotExport(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotExport and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetSnapshotExport(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetSnapshotExport with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "<metric>",
    fileName = "<fileName>",
    columns = new object[]
    {
        "<columns>"
    },
});
Response response = client.GetSnapshotExport(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = await client.GetSavedFilterAsync("<filterName>");
]]></code>
This sample shows how to call GetSavedFilterAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = await client.GetSavedFilterAsync("<filterName>");
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = client.GetSavedFilter("<filterName>");
]]></code>
This sample shows how to call GetSavedFilter with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = client.GetSavedFilter("<filterName>");
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetSavedFilterAsync("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetSavedFilterAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetSavedFilterAsync("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetSavedFilter("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetSavedFilter with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetSavedFilter("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", "<filter>", "<description>");
]]></code>
This sample shows how to call CreateOrReplaceSavedFilterAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", "<filter>", "<description>");
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,string,string,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = client.CreateOrReplaceSavedFilter("<filterName>", "<filter>", "<description>");
]]></code>
This sample shows how to call CreateOrReplaceSavedFilter with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = client.CreateOrReplaceSavedFilter("<filterName>", "<filter>", "<description>");
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceSavedFilterAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = client.CreateOrReplaceSavedFilter("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceSavedFilter with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = client.CreateOrReplaceSavedFilter("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="DeleteSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteSavedFilterAsync("<filterName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteSavedFilterAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteSavedFilterAsync("<filterName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteSavedFilter("<filterName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteSavedFilter with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteSavedFilter("<filterName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.GetTaskAsync("<taskId>");
]]></code>
This sample shows how to call GetTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.GetTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="GetTask(string,CancellationToken)">
      <example>
This sample shows how to call GetTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.GetTask("<taskId>");
]]></code>
This sample shows how to call GetTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.GetTask("<taskId>");
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetTask(string,RequestContext)">
      <example>
This sample shows how to call GetTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.CancelTaskAsync("<taskId>");
]]></code>
This sample shows how to call CancelTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.CancelTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="CancelTask(string,CancellationToken)">
      <example>
This sample shows how to call CancelTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.CancelTask("<taskId>");
]]></code>
This sample shows how to call CancelTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.CancelTask("<taskId>");
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.CancelTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CancelTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.CancelTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CancelTask(string,RequestContext)">
      <example>
This sample shows how to call CancelTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.CancelTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CancelTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.CancelTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="RunTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call RunTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.RunTaskAsync("<taskId>");
]]></code>
This sample shows how to call RunTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.RunTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="RunTask(string,CancellationToken)">
      <example>
This sample shows how to call RunTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.RunTask("<taskId>");
]]></code>
This sample shows how to call RunTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.RunTask("<taskId>");
]]></code></example>
    </member>
    <member name="RunTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call RunTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call RunTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="RunTask(string,RequestContext)">
      <example>
This sample shows how to call RunTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call RunTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DownloadTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call DownloadTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.DownloadTaskAsync("<taskId>");
]]></code>
This sample shows how to call DownloadTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.DownloadTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="DownloadTask(string,CancellationToken)">
      <example>
This sample shows how to call DownloadTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.DownloadTask("<taskId>");
]]></code>
This sample shows how to call DownloadTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.DownloadTask("<taskId>");
]]></code></example>
    </member>
    <member name="DownloadTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call DownloadTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DownloadTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call DownloadTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DownloadTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DownloadTask(string,RequestContext)">
      <example>
This sample shows how to call DownloadTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DownloadTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call DownloadTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DownloadTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetCisaCveAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetCisaCveAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<CisaCveResult> response = await client.GetCisaCveAsync("<cveId>");
]]></code>
This sample shows how to call GetCisaCveAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<CisaCveResult> response = await client.GetCisaCveAsync("<cveId>");
]]></code></example>
    </member>
    <member name="GetCisaCve(string,CancellationToken)">
      <example>
This sample shows how to call GetCisaCve.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<CisaCveResult> response = client.GetCisaCve("<cveId>");
]]></code>
This sample shows how to call GetCisaCve with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<CisaCveResult> response = client.GetCisaCve("<cveId>");
]]></code></example>
    </member>
    <member name="GetCisaCveAsync(string,RequestContext)">
      <example>
This sample shows how to call GetCisaCveAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetCisaCveAsync("<cveId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cveId").ToString());
Console.WriteLine(result.GetProperty("vendorProject").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
Console.WriteLine(result.GetProperty("shortDescription").ToString());
Console.WriteLine(result.GetProperty("requiredAction").ToString());
Console.WriteLine(result.GetProperty("notes").ToString());
Console.WriteLine(result.GetProperty("dateAdded").ToString());
Console.WriteLine(result.GetProperty("dueDate").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("count").ToString());
]]></code>
This sample shows how to call GetCisaCveAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetCisaCveAsync("<cveId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cveId").ToString());
Console.WriteLine(result.GetProperty("vendorProject").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
Console.WriteLine(result.GetProperty("shortDescription").ToString());
Console.WriteLine(result.GetProperty("requiredAction").ToString());
Console.WriteLine(result.GetProperty("notes").ToString());
Console.WriteLine(result.GetProperty("dateAdded").ToString());
Console.WriteLine(result.GetProperty("dueDate").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetCisaCve(string,RequestContext)">
      <example>
This sample shows how to call GetCisaCve and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetCisaCve("<cveId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cveId").ToString());
Console.WriteLine(result.GetProperty("vendorProject").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
Console.WriteLine(result.GetProperty("shortDescription").ToString());
Console.WriteLine(result.GetProperty("requiredAction").ToString());
Console.WriteLine(result.GetProperty("notes").ToString());
Console.WriteLine(result.GetProperty("dateAdded").ToString());
Console.WriteLine(result.GetProperty("dueDate").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("count").ToString());
]]></code>
This sample shows how to call GetCisaCve with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetCisaCve("<cveId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cveId").ToString());
Console.WriteLine(result.GetProperty("vendorProject").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
Console.WriteLine(result.GetProperty("shortDescription").ToString());
Console.WriteLine(result.GetProperty("requiredAction").ToString());
Console.WriteLine(result.GetProperty("notes").ToString());
Console.WriteLine(result.GetProperty("dateAdded").ToString());
Console.WriteLine(result.GetProperty("dueDate").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,AssetResponseType?,IEnumerable{string},bool?,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (AssetResource item in client.GetAssetResourcesAsync())
{
}
]]></code>
This sample shows how to call GetAssetResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (AssetResource item in client.GetAssetResourcesAsync(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234, mark: "<mark>", responseType: AssetResponseType.Id, responseIncludes: new string[] { "<responseIncludes>" }, recentOnly: true))
{
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,AssetResponseType?,IEnumerable{string},bool?,CancellationToken)">
      <example>
This sample shows how to call GetAssetResources.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (AssetResource item in client.GetAssetResources())
{
}
]]></code>
This sample shows how to call GetAssetResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (AssetResource item in client.GetAssetResources(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234, mark: "<mark>", responseType: AssetResponseType.Id, responseIncludes: new string[] { "<responseIncludes>" }, recentOnly: true))
{
}
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,string,IEnumerable{string},bool?,RequestContext)">
      <example>
This sample shows how to call GetAssetResourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetAssetResourcesAsync(null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetAssetResourcesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetAssetResourcesAsync("<filter>", "<orderby>", 1234, 1234, "<mark>", "id", new string[] { "<responseIncludes>" }, true, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("uuid").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("externalId").ToString());
    Console.WriteLine(result.GetProperty("labels")[0].ToString());
    Console.WriteLine(result.GetProperty("wildcard").ToString());
    Console.WriteLine(result.GetProperty("discoGroupName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,string,IEnumerable{string},bool?,RequestContext)">
      <example>
This sample shows how to call GetAssetResources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetAssetResources(null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetAssetResources with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetAssetResources("<filter>", "<orderby>", 1234, 1234, "<mark>", "id", new string[] { "<responseIncludes>" }, true, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("uuid").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("externalId").ToString());
    Console.WriteLine(result.GetProperty("labels")[0].ToString());
    Console.WriteLine(result.GetProperty("wildcard").ToString());
    Console.WriteLine(result.GetProperty("discoGroupName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeltaDetailsAsync(DeltaDetailsRequest,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeltaDetailsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaDetailsRequest body = new DeltaDetailsRequest(DeltaDetailType.Added, GlobalAssetType.Page);
await foreach (DeltaResult item in client.GetDeltaDetailsAsync(body))
{
}
]]></code>
This sample shows how to call GetDeltaDetailsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaDetailsRequest body = new DeltaDetailsRequest(DeltaDetailType.Added, GlobalAssetType.Page)
{
    PriorDays = 1234,
    Date = "<date>",
};
await foreach (DeltaResult item in client.GetDeltaDetailsAsync(body, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeltaDetails(DeltaDetailsRequest,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeltaDetails.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaDetailsRequest body = new DeltaDetailsRequest(DeltaDetailType.Added, GlobalAssetType.Page);
foreach (DeltaResult item in client.GetDeltaDetails(body))
{
}
]]></code>
This sample shows how to call GetDeltaDetails with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaDetailsRequest body = new DeltaDetailsRequest(DeltaDetailType.Added, GlobalAssetType.Page)
{
    PriorDays = 1234,
    Date = "<date>",
};
foreach (DeltaResult item in client.GetDeltaDetails(body, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeltaDetailsAsync(RequestContent,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeltaDetailsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deltaDetailType = "added",
    kind = "page",
});
await foreach (BinaryData item in client.GetDeltaDetailsAsync(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
}
]]></code>
This sample shows how to call GetDeltaDetailsAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deltaDetailType = "added",
    priorDays = 1234,
    kind = "page",
    date = "<date>",
});
await foreach (BinaryData item in client.GetDeltaDetailsAsync(content, skip: 1234, maxpagesize: 1234))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeltaDetails(RequestContent,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeltaDetails and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deltaDetailType = "added",
    kind = "page",
});
foreach (BinaryData item in client.GetDeltaDetails(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
}
]]></code>
This sample shows how to call GetDeltaDetails with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deltaDetailType = "added",
    priorDays = 1234,
    kind = "page",
    date = "<date>",
});
foreach (BinaryData item in client.GetDeltaDetails(content, skip: 1234, maxpagesize: 1234))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DataConnection item in client.GetDataConnectionsAsync())
{
}
]]></code>
This sample shows how to call GetDataConnectionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DataConnection item in client.GetDataConnectionsAsync(skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnections.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DataConnection item in client.GetDataConnections())
{
}
]]></code>
This sample shows how to call GetDataConnections with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DataConnection item in client.GetDataConnections(skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDataConnectionsAsync(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDataConnectionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDataConnectionsAsync(1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("content").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("frequency").ToString());
    Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("active").ToString());
    Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnections and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDataConnections(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDataConnections with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDataConnections(1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("content").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("frequency").ToString());
    Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("active").ToString());
    Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoGroupsAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroupsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryGroup item in client.GetDiscoGroupsAsync())
{
}
]]></code>
This sample shows how to call GetDiscoGroupsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryGroup item in client.GetDiscoGroupsAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoGroups(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroups.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryGroup item in client.GetDiscoGroups())
{
}
]]></code>
This sample shows how to call GetDiscoGroups with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryGroup item in client.GetDiscoGroups(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoGroupsAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroupsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoGroupsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDiscoGroupsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoGroupsAsync("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("templateId").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoGroups(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroups and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoGroups(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDiscoGroups with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoGroups("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("templateId").ToString());
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryRunResult item in client.GetRunsAsync("<groupName>"))
{
}
]]></code>
This sample shows how to call GetRunsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryRunResult item in client.GetRunsAsync("<groupName>", filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetRuns(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRuns.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryRunResult item in client.GetRuns("<groupName>"))
{
}
]]></code>
This sample shows how to call GetRuns with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryRunResult item in client.GetRuns("<groupName>", filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetRunsAsync("<groupName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetRunsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetRunsAsync("<groupName>", "<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetRuns(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetRuns("<groupName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetRuns with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetRuns("<groupName>", "<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplatesAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplatesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryTemplate item in client.GetDiscoTemplatesAsync())
{
}
]]></code>
This sample shows how to call GetDiscoTemplatesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryTemplate item in client.GetDiscoTemplatesAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplates(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplates.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryTemplate item in client.GetDiscoTemplates())
{
}
]]></code>
This sample shows how to call GetDiscoTemplates with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryTemplate item in client.GetDiscoTemplates(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplatesAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplatesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoTemplatesAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDiscoTemplatesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoTemplatesAsync("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("industry").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
    Console.WriteLine(result.GetProperty("countryCode").ToString());
    Console.WriteLine(result.GetProperty("stateCode").ToString());
    Console.WriteLine(result.GetProperty("city").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplates(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplates and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoTemplates(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDiscoTemplates with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoTemplates("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("industry").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
    Console.WriteLine(result.GetProperty("countryCode").ToString());
    Console.WriteLine(result.GetProperty("stateCode").ToString());
    Console.WriteLine(result.GetProperty("city").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFiltersAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (SavedFilter item in client.GetSavedFiltersAsync())
{
}
]]></code>
This sample shows how to call GetSavedFiltersAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (SavedFilter item in client.GetSavedFiltersAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (SavedFilter item in client.GetSavedFilters())
{
}
]]></code>
This sample shows how to call GetSavedFilters with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (SavedFilter item in client.GetSavedFilters(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFiltersAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetSavedFiltersAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetSavedFiltersAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetSavedFiltersAsync("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("filter").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFilters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetSavedFilters(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetSavedFilters with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetSavedFilters("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("filter").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (TaskResource item in client.GetTasksAsync())
{
}
]]></code>
This sample shows how to call GetTasksAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (TaskResource item in client.GetTasksAsync(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasks.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (TaskResource item in client.GetTasks())
{
}
]]></code>
This sample shows how to call GetTasks with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (TaskResource item in client.GetTasks(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetTasksAsync(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetTasksAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetTasksAsync("<filter>", "<orderby>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("completedAt").ToString());
    Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("phase").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetTasks(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetTasks with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetTasks("<filter>", "<orderby>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("completedAt").ToString());
    Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("phase").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetCisaCvesAsync(CancellationToken)">
      <example>
This sample shows how to call GetCisaCvesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (CisaCveResult item in client.GetCisaCvesAsync())
{
}
]]></code>
This sample shows how to call GetCisaCvesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (CisaCveResult item in client.GetCisaCvesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetCisaCves(CancellationToken)">
      <example>
This sample shows how to call GetCisaCves.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (CisaCveResult item in client.GetCisaCves())
{
}
]]></code>
This sample shows how to call GetCisaCves with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (CisaCveResult item in client.GetCisaCves())
{
}
]]></code></example>
    </member>
    <member name="GetCisaCvesAsync(RequestContext)">
      <example>
This sample shows how to call GetCisaCvesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetCisaCvesAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cveId").ToString());
    Console.WriteLine(result.GetProperty("vendorProject").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
    Console.WriteLine(result.GetProperty("shortDescription").ToString());
    Console.WriteLine(result.GetProperty("requiredAction").ToString());
    Console.WriteLine(result.GetProperty("notes").ToString());
    Console.WriteLine(result.GetProperty("dateAdded").ToString());
    Console.WriteLine(result.GetProperty("dueDate").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("count").ToString());
}
]]></code>
This sample shows how to call GetCisaCvesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetCisaCvesAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cveId").ToString());
    Console.WriteLine(result.GetProperty("vendorProject").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
    Console.WriteLine(result.GetProperty("shortDescription").ToString());
    Console.WriteLine(result.GetProperty("requiredAction").ToString());
    Console.WriteLine(result.GetProperty("notes").ToString());
    Console.WriteLine(result.GetProperty("dateAdded").ToString());
    Console.WriteLine(result.GetProperty("dueDate").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("count").ToString());
}
]]></code></example>
    </member>
    <member name="GetCisaCves(RequestContext)">
      <example>
This sample shows how to call GetCisaCves and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetCisaCves(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cveId").ToString());
    Console.WriteLine(result.GetProperty("vendorProject").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
    Console.WriteLine(result.GetProperty("shortDescription").ToString());
    Console.WriteLine(result.GetProperty("requiredAction").ToString());
    Console.WriteLine(result.GetProperty("notes").ToString());
    Console.WriteLine(result.GetProperty("dateAdded").ToString());
    Console.WriteLine(result.GetProperty("dueDate").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("count").ToString());
}
]]></code>
This sample shows how to call GetCisaCves with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetCisaCves(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cveId").ToString());
    Console.WriteLine(result.GetProperty("vendorProject").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
    Console.WriteLine(result.GetProperty("shortDescription").ToString());
    Console.WriteLine(result.GetProperty("requiredAction").ToString());
    Console.WriteLine(result.GetProperty("notes").ToString());
    Console.WriteLine(result.GetProperty("dateAdded").ToString());
    Console.WriteLine(result.GetProperty("dueDate").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("count").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>