<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="UpdateAssetsAsync(string,AssetUpdateData,CancellationToken)">
      <example>
This sample shows how to call UpdateAssetsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

AssetUpdateData assetUpdateData = new AssetUpdateData();
Response<Task> response = await client.UpdateAssetsAsync("<filter>", assetUpdateData);
]]></code>
This sample shows how to call UpdateAssetsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

AssetUpdateData assetUpdateData = new AssetUpdateData
{
    State = AssetUpdateState.Candidate,
    ExternalId = "<externalId>",
    Labels =
    {
        ["key"] = true
    },
    Transfers = AssetUpdateTransfers.As,
};
Response<Task> response = await client.UpdateAssetsAsync("<filter>", assetUpdateData);
]]></code></example>
    </member>
    <member name="UpdateAssets(string,AssetUpdateData,CancellationToken)">
      <example>
This sample shows how to call UpdateAssets.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

AssetUpdateData assetUpdateData = new AssetUpdateData();
Response<Task> response = client.UpdateAssets("<filter>", assetUpdateData);
]]></code>
This sample shows how to call UpdateAssets with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

AssetUpdateData assetUpdateData = new AssetUpdateData
{
    State = AssetUpdateState.Candidate,
    ExternalId = "<externalId>",
    Labels =
    {
        ["key"] = true
    },
    Transfers = AssetUpdateTransfers.As,
};
Response<Task> response = client.UpdateAssets("<filter>", assetUpdateData);
]]></code></example>
    </member>
    <member name="UpdateAssetsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssetsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateAssetsAsync("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateAssetsAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    state = "candidate",
    externalId = "<externalId>",
    labels = new
    {
        key = true,
    },
    transfers = "as",
});
Response response = await client.UpdateAssetsAsync("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="UpdateAssets(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssets and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateAssets("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateAssets with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    state = "candidate",
    externalId = "<externalId>",
    labels = new
    {
        key = true,
    },
    transfers = "as",
});
Response response = client.UpdateAssets("<filter>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<AssetResource> response = await client.GetAssetResourceAsync("<assetId>");
]]></code>
This sample shows how to call GetAssetResourceAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<AssetResource> response = await client.GetAssetResourceAsync("<assetId>");
]]></code></example>
    </member>
    <member name="GetAssetResource(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResource.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<AssetResource> response = client.GetAssetResource("<assetId>");
]]></code>
This sample shows how to call GetAssetResource with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<AssetResource> response = client.GetAssetResource("<assetId>");
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetAssetResourceAsync("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetAssetResourceAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetAssetResourceAsync("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResource(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetAssetResource("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetAssetResource with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetAssetResource("<assetId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(DataConnectionData,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
Response<ValidateResult> response = await client.ValidateDataConnectionAsync(dataConnectionData);
]]></code>
This sample shows how to call ValidateDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<ValidateResult> response = await client.ValidateDataConnectionAsync(dataConnectionData);
]]></code></example>
    </member>
    <member name="ValidateDataConnection(DataConnectionData,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
Response<ValidateResult> response = client.ValidateDataConnection(dataConnectionData);
]]></code>
This sample shows how to call ValidateDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<ValidateResult> response = client.ValidateDataConnection(dataConnectionData);
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new object(),
    kind = "logAnalytics",
});
Response response = await client.ValidateDataConnectionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDataConnectionAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    kind = "logAnalytics",
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = await client.ValidateDataConnectionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnection(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new object(),
    kind = "logAnalytics",
});
Response response = client.ValidateDataConnection(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDataConnection with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    kind = "logAnalytics",
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = client.ValidateDataConnection(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DataConnection> response = await client.GetDataConnectionAsync("<dataConnectionName>");
]]></code>
This sample shows how to call GetDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DataConnection> response = await client.GetDataConnectionAsync("<dataConnectionName>");
]]></code></example>
    </member>
    <member name="GetDataConnection(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DataConnection> response = client.GetDataConnection("<dataConnectionName>");
]]></code>
This sample shows how to call GetDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DataConnection> response = client.GetDataConnection("<dataConnectionName>");
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetDataConnectionAsync("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDataConnectionAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetDataConnectionAsync("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="GetDataConnection(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetDataConnection("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDataConnection with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetDataConnection("<dataConnectionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,DataConnectionData,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", dataConnectionData);
]]></code>
This sample shows how to call CreateOrReplaceDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", dataConnectionData);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,DataConnectionData,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
Response<DataConnection> response = client.CreateOrReplaceDataConnection("<dataConnectionName>", dataConnectionData);
]]></code>
This sample shows how to call CreateOrReplaceDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "<apiKey>",
    WorkspaceId = "<workspaceId>",
})
{
    Name = "<name>",
    Content = DataConnectionContent.Assets,
    Frequency = DataConnectionFrequency.Daily,
    FrequencyOffset = 1234,
};
Response<DataConnection> response = client.CreateOrReplaceDataConnection("<dataConnectionName>", dataConnectionData);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new object(),
    kind = "logAnalytics",
});
Response response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDataConnectionAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    kind = "logAnalytics",
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new object(),
    kind = "logAnalytics",
});
Response response = client.CreateOrReplaceDataConnection("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDataConnection with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        apiKey = "<apiKey>",
        workspaceId = "<workspaceId>",
    },
    kind = "logAnalytics",
    name = "<name>",
    content = "assets",
    frequency = "daily",
    frequencyOffset = 1234,
});
Response response = client.CreateOrReplaceDataConnection("<dataConnectionName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("content").ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
Console.WriteLine(result.GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
]]></code></example>
    </member>
    <member name="DeleteDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.DeleteDataConnectionAsync("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteDataConnectionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.DeleteDataConnectionAsync("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteDataConnection(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.DeleteDataConnection("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteDataConnection with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.DeleteDataConnection("<dataConnectionName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroupAsync(DiscoGroupData,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData();
Response<ValidateResult> response = await client.ValidateDiscoGroupAsync(discoGroupData);
]]></code>
This sample shows how to call ValidateDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData
{
    Name = "<name>",
    Description = "<description>",
    Tier = "<tier>",
    FrequencyMilliseconds = 1234L,
    Seeds = {new DiscoSource
    {
        Kind = DiscoSourceKind.As,
        Name = "<name>",
    }},
    Names = { "<names>" },
    Excludes = { default },
    TemplateId = "<templateId>",
};
Response<ValidateResult> response = await client.ValidateDiscoGroupAsync(discoGroupData);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroup(DiscoGroupData,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData();
Response<ValidateResult> response = client.ValidateDiscoGroup(discoGroupData);
]]></code>
This sample shows how to call ValidateDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData
{
    Name = "<name>",
    Description = "<description>",
    Tier = "<tier>",
    FrequencyMilliseconds = 1234L,
    Seeds = {new DiscoSource
    {
        Kind = DiscoSourceKind.As,
        Name = "<name>",
    }},
    Names = { "<names>" },
    Excludes = { default },
    TemplateId = "<templateId>",
};
Response<ValidateResult> response = client.ValidateDiscoGroup(discoGroupData);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroupAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ValidateDiscoGroupAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDiscoGroupAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = await client.ValidateDiscoGroupAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="ValidateDiscoGroup(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.ValidateDiscoGroup(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call ValidateDiscoGroup with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = client.ValidateDiscoGroup(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoGroupAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoGroup> response = await client.GetDiscoGroupAsync("<groupName>");
]]></code>
This sample shows how to call GetDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoGroup> response = await client.GetDiscoGroupAsync("<groupName>");
]]></code></example>
    </member>
    <member name="GetDiscoGroup(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoGroup> response = client.GetDiscoGroup("<groupName>");
]]></code>
This sample shows how to call GetDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoGroup> response = client.GetDiscoGroup("<groupName>");
]]></code></example>
    </member>
    <member name="GetDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetDiscoGroupAsync("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDiscoGroupAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetDiscoGroupAsync("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetDiscoGroup("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDiscoGroup with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetDiscoGroup("<groupName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroupAsync(string,DiscoGroupData,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData();
Response<DiscoGroup> response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", discoGroupData);
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData
{
    Name = "<name>",
    Description = "<description>",
    Tier = "<tier>",
    FrequencyMilliseconds = 1234L,
    Seeds = {new DiscoSource
    {
        Kind = DiscoSourceKind.As,
        Name = "<name>",
    }},
    Names = { "<names>" },
    Excludes = { default },
    TemplateId = "<templateId>",
};
Response<DiscoGroup> response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", discoGroupData);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroup(string,DiscoGroupData,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData();
Response<DiscoGroup> response = client.CreateOrReplaceDiscoGroup("<groupName>", discoGroupData);
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

DiscoGroupData discoGroupData = new DiscoGroupData
{
    Name = "<name>",
    Description = "<description>",
    Tier = "<tier>",
    FrequencyMilliseconds = 1234L,
    Seeds = {new DiscoSource
    {
        Kind = DiscoSourceKind.As,
        Name = "<name>",
    }},
    Names = { "<names>" },
    Excludes = { default },
    TemplateId = "<templateId>",
};
Response<DiscoGroup> response = client.CreateOrReplaceDiscoGroup("<groupName>", discoGroupData);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroupAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroupAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = await client.CreateOrReplaceDiscoGroupAsync("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroup(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateOrReplaceDiscoGroup("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceDiscoGroup with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    tier = "<tier>",
    frequencyMilliseconds = 1234L,
    seeds = new object[]
    {
        new
        {
            kind = "as",
            name = "<name>",
        }
    },
    names = new object[]
    {
        "<names>"
    },
    excludes = new object[]
    {
        null
    },
    templateId = "<templateId>",
});
Response response = client.CreateOrReplaceDiscoGroup("<groupName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
Console.WriteLine(result.GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("templateId").ToString());
]]></code></example>
    </member>
    <member name="RunDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.RunDiscoGroupAsync("<groupName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RunDiscoGroupAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.RunDiscoGroupAsync("<groupName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RunDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.RunDiscoGroup("<groupName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RunDiscoGroup with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.RunDiscoGroup("<groupName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDiscoTemplateAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoTemplate> response = await client.GetDiscoTemplateAsync("<templateId>");
]]></code>
This sample shows how to call GetDiscoTemplateAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoTemplate> response = await client.GetDiscoTemplateAsync("<templateId>");
]]></code></example>
    </member>
    <member name="GetDiscoTemplate(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplate.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoTemplate> response = client.GetDiscoTemplate("<templateId>");
]]></code>
This sample shows how to call GetDiscoTemplate with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<DiscoTemplate> response = client.GetDiscoTemplate("<templateId>");
]]></code></example>
    </member>
    <member name="GetDiscoTemplateAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetDiscoTemplateAsync("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetDiscoTemplateAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetDiscoTemplateAsync("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("industry").ToString());
Console.WriteLine(result.GetProperty("region").ToString());
Console.WriteLine(result.GetProperty("countryCode").ToString());
Console.WriteLine(result.GetProperty("stateCode").ToString());
Console.WriteLine(result.GetProperty("city").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
]]></code></example>
    </member>
    <member name="GetDiscoTemplate(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetDiscoTemplate("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetDiscoTemplate with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetDiscoTemplate("<templateId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("industry").ToString());
Console.WriteLine(result.GetProperty("region").ToString());
Console.WriteLine(result.GetProperty("countryCode").ToString());
Console.WriteLine(result.GetProperty("stateCode").ToString());
Console.WriteLine(result.GetProperty("city").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("names")[0].ToString());
]]></code></example>
    </member>
    <member name="GetBillableAsync(CancellationToken)">
      <example>
This sample shows how to call GetBillableAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<ReportBillableAssetSummaryResult> response = await client.GetBillableAsync();
]]></code>
This sample shows how to call GetBillableAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<ReportBillableAssetSummaryResult> response = await client.GetBillableAsync();
]]></code></example>
    </member>
    <member name="GetBillable(CancellationToken)">
      <example>
This sample shows how to call GetBillable.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<ReportBillableAssetSummaryResult> response = client.GetBillable();
]]></code>
This sample shows how to call GetBillable with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<ReportBillableAssetSummaryResult> response = client.GetBillable();
]]></code></example>
    </member>
    <member name="GetBillableAsync(RequestContext)">
      <example>
This sample shows how to call GetBillableAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetBillableAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetBillableAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetBillableAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetBillable(RequestContext)">
      <example>
This sample shows how to call GetBillable and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetBillable(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetBillable with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetBillable(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("assetBreakdown")[0].GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(ReportAssetSnapshotRequest,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSnapshotRequest reportAssetSnapshotRequest = new ReportAssetSnapshotRequest();
Response<ReportAssetSnapshotResult> response = await client.GetSnapshotAsync(reportAssetSnapshotRequest);
]]></code>
This sample shows how to call GetSnapshotAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSnapshotRequest reportAssetSnapshotRequest = new ReportAssetSnapshotRequest
{
    Metric = "<metric>",
    LabelName = "<labelName>",
    Size = 1234,
    Page = 1234,
};
Response<ReportAssetSnapshotResult> response = await client.GetSnapshotAsync(reportAssetSnapshotRequest);
]]></code></example>
    </member>
    <member name="GetSnapshot(ReportAssetSnapshotRequest,CancellationToken)">
      <example>
This sample shows how to call GetSnapshot.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSnapshotRequest reportAssetSnapshotRequest = new ReportAssetSnapshotRequest();
Response<ReportAssetSnapshotResult> response = client.GetSnapshot(reportAssetSnapshotRequest);
]]></code>
This sample shows how to call GetSnapshot with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSnapshotRequest reportAssetSnapshotRequest = new ReportAssetSnapshotRequest
{
    Metric = "<metric>",
    LabelName = "<labelName>",
    Size = 1234,
    Page = 1234,
};
Response<ReportAssetSnapshotResult> response = client.GetSnapshot(reportAssetSnapshotRequest);
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSnapshotAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSnapshotAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "<metric>",
    labelName = "<labelName>",
    size = 1234,
    page = 1234,
});
Response response = await client.GetSnapshotAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("mark").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshot(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshot and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetSnapshot(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSnapshot with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "<metric>",
    labelName = "<labelName>",
    size = 1234,
    page = 1234,
});
Response response = client.GetSnapshot(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("mark").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("uuid").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("createdDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("updatedDate").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("externalId").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("labels")[0].ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("wildcard").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("discoGroupName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("auditTrail")[0].GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("assets").GetProperty("value")[0].GetProperty("reason").ToString());
]]></code></example>
    </member>
    <member name="GetSummaryAsync(ReportAssetSummaryRequest,CancellationToken)">
      <example>
This sample shows how to call GetSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSummaryRequest reportAssetSummaryRequest = new ReportAssetSummaryRequest();
Response<ReportAssetSummaryResult> response = await client.GetSummaryAsync(reportAssetSummaryRequest);
]]></code>
This sample shows how to call GetSummaryAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSummaryRequest reportAssetSummaryRequest = new ReportAssetSummaryRequest
{
    MetricCategories = { "<metricCategories>" },
    Metrics = { "<metrics>" },
    Filters = { "<filters>" },
    GroupBy = "<groupBy>",
    SegmentBy = "<segmentBy>",
    LabelName = "<labelName>",
};
Response<ReportAssetSummaryResult> response = await client.GetSummaryAsync(reportAssetSummaryRequest);
]]></code></example>
    </member>
    <member name="GetSummary(ReportAssetSummaryRequest,CancellationToken)">
      <example>
This sample shows how to call GetSummary.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSummaryRequest reportAssetSummaryRequest = new ReportAssetSummaryRequest();
Response<ReportAssetSummaryResult> response = client.GetSummary(reportAssetSummaryRequest);
]]></code>
This sample shows how to call GetSummary with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

ReportAssetSummaryRequest reportAssetSummaryRequest = new ReportAssetSummaryRequest
{
    MetricCategories = { "<metricCategories>" },
    Metrics = { "<metrics>" },
    Filters = { "<filters>" },
    GroupBy = "<groupBy>",
    SegmentBy = "<segmentBy>",
    LabelName = "<labelName>",
};
Response<ReportAssetSummaryResult> response = client.GetSummary(reportAssetSummaryRequest);
]]></code></example>
    </member>
    <member name="GetSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSummaryAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    metricCategories = new object[]
    {
        "<metricCategories>"
    },
    metrics = new object[]
    {
        "<metrics>"
    },
    filters = new object[]
    {
        "<filters>"
    },
    groupBy = "<groupBy>",
    segmentBy = "<segmentBy>",
    labelName = "<labelName>",
});
Response response = await client.GetSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metricCategory").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("link").ToString());
]]></code></example>
    </member>
    <member name="GetSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSummary with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    metricCategories = new object[]
    {
        "<metricCategories>"
    },
    metrics = new object[]
    {
        "<metrics>"
    },
    filters = new object[]
    {
        "<filters>"
    },
    groupBy = "<groupBy>",
    segmentBy = "<segmentBy>",
    labelName = "<labelName>",
});
Response response = client.GetSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metricCategory").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("metric").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("labelName").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("assetSummaries")[0].GetProperty("link").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<SavedFilter> response = await client.GetSavedFilterAsync("<filterName>");
]]></code>
This sample shows how to call GetSavedFilterAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<SavedFilter> response = await client.GetSavedFilterAsync("<filterName>");
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<SavedFilter> response = client.GetSavedFilter("<filterName>");
]]></code>
This sample shows how to call GetSavedFilter with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<SavedFilter> response = client.GetSavedFilter("<filterName>");
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetSavedFilterAsync("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetSavedFilterAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetSavedFilterAsync("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetSavedFilter("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetSavedFilter with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetSavedFilter("<filterName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,SavedFilterData,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

SavedFilterData savedFilterData = new SavedFilterData("<filter>", "<description>");
Response<SavedFilter> response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", savedFilterData);
]]></code>
This sample shows how to call CreateOrReplaceSavedFilterAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

SavedFilterData savedFilterData = new SavedFilterData("<filter>", "<description>");
Response<SavedFilter> response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", savedFilterData);
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,SavedFilterData,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

SavedFilterData savedFilterData = new SavedFilterData("<filter>", "<description>");
Response<SavedFilter> response = client.CreateOrReplaceSavedFilter("<filterName>", savedFilterData);
]]></code>
This sample shows how to call CreateOrReplaceSavedFilter with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

SavedFilterData savedFilterData = new SavedFilterData("<filter>", "<description>");
Response<SavedFilter> response = client.CreateOrReplaceSavedFilter("<filterName>", savedFilterData);
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceSavedFilterAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = await client.CreateOrReplaceSavedFilterAsync("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = client.CreateOrReplaceSavedFilter("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOrReplaceSavedFilter with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "<filter>",
    description = "<description>",
});
Response response = client.CreateOrReplaceSavedFilter("<filterName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="DeleteSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.DeleteSavedFilterAsync("<filterName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteSavedFilterAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.DeleteSavedFilterAsync("<filterName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.DeleteSavedFilter("<filterName>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteSavedFilter with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.DeleteSavedFilter("<filterName>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = await client.GetTaskAsync("<taskId>");
]]></code>
This sample shows how to call GetTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = await client.GetTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="GetTask(string,CancellationToken)">
      <example>
This sample shows how to call GetTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = client.GetTask("<taskId>");
]]></code>
This sample shows how to call GetTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = client.GetTask("<taskId>");
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.GetTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetTask(string,RequestContext)">
      <example>
This sample shows how to call GetTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.GetTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = await client.CancelTaskAsync("<taskId>");
]]></code>
This sample shows how to call CancelTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = await client.CancelTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="CancelTask(string,CancellationToken)">
      <example>
This sample shows how to call CancelTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = client.CancelTask("<taskId>");
]]></code>
This sample shows how to call CancelTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response<Task> response = client.CancelTask("<taskId>");
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.CancelTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CancelTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = await client.CancelTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CancelTask(string,RequestContext)">
      <example>
This sample shows how to call CancelTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.CancelTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CancelTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

Response response = client.CancelTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (AssetResource item in client.GetAssetResourcesAsync())
{
}
]]></code>
This sample shows how to call GetAssetResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (AssetResource item in client.GetAssetResourcesAsync(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234, mark: "<mark>"))
{
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResources.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (AssetResource item in client.GetAssetResources())
{
}
]]></code>
This sample shows how to call GetAssetResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (AssetResource item in client.GetAssetResources(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234, mark: "<mark>"))
{
}
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAssetResourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetAssetResourcesAsync(null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetAssetResourcesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetAssetResourcesAsync("<filter>", "<orderby>", 1234, 1234, "<mark>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("uuid").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("externalId").ToString());
    Console.WriteLine(result.GetProperty("labels")[0].ToString());
    Console.WriteLine(result.GetProperty("wildcard").ToString());
    Console.WriteLine(result.GetProperty("discoGroupName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAssetResources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetAssetResources(null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetAssetResources with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetAssetResources("<filter>", "<orderby>", 1234, 1234, "<mark>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("uuid").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("externalId").ToString());
    Console.WriteLine(result.GetProperty("labels")[0].ToString());
    Console.WriteLine(result.GetProperty("wildcard").ToString());
    Console.WriteLine(result.GetProperty("discoGroupName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DataConnection item in client.GetDataConnectionsAsync())
{
}
]]></code>
This sample shows how to call GetDataConnectionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DataConnection item in client.GetDataConnectionsAsync(skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnections.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DataConnection item in client.GetDataConnections())
{
}
]]></code>
This sample shows how to call GetDataConnections with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DataConnection item in client.GetDataConnections(skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetDataConnectionsAsync(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDataConnectionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetDataConnectionsAsync(1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("content").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("frequency").ToString());
    Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("active").ToString());
    Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnections and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetDataConnections(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDataConnections with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetDataConnections(1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("content").ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("frequency").ToString());
    Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
    Console.WriteLine(result.GetProperty("updatedDate").ToString());
    Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("active").ToString());
    Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoGroupsAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroupsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DiscoGroup item in client.GetDiscoGroupsAsync())
{
}
]]></code>
This sample shows how to call GetDiscoGroupsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DiscoGroup item in client.GetDiscoGroupsAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoGroups(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroups.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DiscoGroup item in client.GetDiscoGroups())
{
}
]]></code>
This sample shows how to call GetDiscoGroups with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DiscoGroup item in client.GetDiscoGroups(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoGroupsAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroupsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetDiscoGroupsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDiscoGroupsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetDiscoGroupsAsync("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("templateId").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoGroups(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroups and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetDiscoGroups(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDiscoGroups with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetDiscoGroups("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("frequencyMilliseconds").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("latestRun").GetProperty("names")[0].ToString());
    Console.WriteLine(result.GetProperty("createdDate").ToString());
    Console.WriteLine(result.GetProperty("templateId").ToString());
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DiscoRunResult item in client.GetRunsAsync("<groupName>"))
{
}
]]></code>
This sample shows how to call GetRunsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DiscoRunResult item in client.GetRunsAsync("<groupName>", filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetRuns(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRuns.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DiscoRunResult item in client.GetRuns("<groupName>"))
{
}
]]></code>
This sample shows how to call GetRuns with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DiscoRunResult item in client.GetRuns("<groupName>", filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetRunsAsync("<groupName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetRunsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetRunsAsync("<groupName>", "<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetRuns(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetRuns("<groupName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetRuns with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetRuns("<groupName>", "<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("submittedDate").ToString());
    Console.WriteLine(result.GetProperty("startedDate").ToString());
    Console.WriteLine(result.GetProperty("completedDate").ToString());
    Console.WriteLine(result.GetProperty("tier").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("totalAssetsFoundCount").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("excludes")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplatesAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplatesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DiscoTemplate item in client.GetDiscoTemplatesAsync())
{
}
]]></code>
This sample shows how to call GetDiscoTemplatesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (DiscoTemplate item in client.GetDiscoTemplatesAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplates(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplates.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DiscoTemplate item in client.GetDiscoTemplates())
{
}
]]></code>
This sample shows how to call GetDiscoTemplates with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (DiscoTemplate item in client.GetDiscoTemplates(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplatesAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplatesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetDiscoTemplatesAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDiscoTemplatesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetDiscoTemplatesAsync("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("industry").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
    Console.WriteLine(result.GetProperty("countryCode").ToString());
    Console.WriteLine(result.GetProperty("stateCode").ToString());
    Console.WriteLine(result.GetProperty("city").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplates(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplates and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetDiscoTemplates(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDiscoTemplates with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetDiscoTemplates("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("industry").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
    Console.WriteLine(result.GetProperty("countryCode").ToString());
    Console.WriteLine(result.GetProperty("stateCode").ToString());
    Console.WriteLine(result.GetProperty("city").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("names")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFiltersAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (SavedFilter item in client.GetSavedFiltersAsync())
{
}
]]></code>
This sample shows how to call GetSavedFiltersAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (SavedFilter item in client.GetSavedFiltersAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (SavedFilter item in client.GetSavedFilters())
{
}
]]></code>
This sample shows how to call GetSavedFilters with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (SavedFilter item in client.GetSavedFilters(filter: "<filter>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFiltersAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetSavedFiltersAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetSavedFiltersAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetSavedFiltersAsync("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("filter").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFilters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetSavedFilters(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetSavedFilters with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetSavedFilters("<filter>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("filter").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (Task item in client.GetTasksAsync())
{
}
]]></code>
This sample shows how to call GetTasksAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (Task item in client.GetTasksAsync(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasks.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (Task item in client.GetTasks())
{
}
]]></code>
This sample shows how to call GetTasks with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (Task item in client.GetTasks(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetTasksAsync(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetTasksAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

await foreach (BinaryData item in client.GetTasksAsync("<filter>", "<orderby>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("completedAt").ToString());
    Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("phase").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetTasks(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetTasks with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, "<subscriptionId>", "<resourceGroupName>", "<workspaceName>", credential);

foreach (BinaryData item in client.GetTasks("<filter>", "<orderby>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("completedAt").ToString());
    Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("phase").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>