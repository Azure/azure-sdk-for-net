<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="UpdateAssetsAsync(string,AssetUpdatePayload,CancellationToken)">
      <example>
This sample shows how to call UpdateAssetsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetUpdatePayload body = new AssetUpdatePayload
{
    State = AssetUpdateState.Confirmed,
    ExternalId = "contosoInternalId",
    Labels =
    {
        ["contosoLabel"] = true
    },
};
Response<TaskResource> response = await client.UpdateAssetsAsync("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", body);
]]></code></example>
    </member>
    <member name="UpdateAssets(string,AssetUpdatePayload,CancellationToken)">
      <example>
This sample shows how to call UpdateAssets.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetUpdatePayload body = new AssetUpdatePayload
{
    State = AssetUpdateState.Confirmed,
    ExternalId = "contosoInternalId",
    Labels =
    {
        ["contosoLabel"] = true
    },
};
Response<TaskResource> response = client.UpdateAssets("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", body);
]]></code></example>
    </member>
    <member name="UpdateAssetsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssetsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    state = "confirmed",
    externalId = "contosoInternalId",
    labels = new
    {
        contosoLabel = true,
    },
});
Response response = await client.UpdateAssetsAsync("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="UpdateAssets(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssets and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    state = "confirmed",
    externalId = "contosoInternalId",
    labels = new
    {
        contosoLabel = true,
    },
});
Response response = client.UpdateAssets("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = await client.GetAssetResourceAsync("aG9zdCQkY29udG9zby5jb20");
]]></code></example>
    </member>
    <member name="GetAssetResource(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResource.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = client.GetAssetResource("aG9zdCQkY29udG9zby5jb20");
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetAssetResourceAsync("aG9zdCQkY29udG9zby5jb20", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResource(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetAssetResource("aG9zdCQkY29udG9zby5jb20", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Name = "ThisisaDataConnection",
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<ValidateResult> response = await client.ValidateDataConnectionAsync(body);
]]></code></example>
    </member>
    <member name="ValidateDataConnection(DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Name = "ThisisaDataConnection",
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<ValidateResult> response = client.ValidateDataConnection(body);
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
    name = "ThisisaDataConnection",
});
Response response = await client.ValidateDataConnectionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnection(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
    name = "ThisisaDataConnection",
});
Response response = client.ValidateDataConnection(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = await client.GetDataConnectionAsync("ThisisaDataConnection");
]]></code></example>
    </member>
    <member name="GetDataConnection(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = client.GetDataConnection("ThisisaDataConnection");
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDataConnectionAsync("ThisisaDataConnection", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetDataConnection(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDataConnection("ThisisaDataConnection", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("ThisisaDataConnection", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<DataConnection> response = client.CreateOrReplaceDataConnection("ThisisaDataConnection", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
});
Response response = await client.CreateOrReplaceDataConnectionAsync("ThisisaDataConnection", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
});
Response response = client.CreateOrReplaceDataConnection("ThisisaDataConnection", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="DeleteDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDataConnectionAsync("ThisisaDataConnection");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteDataConnection(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDataConnection("ThisisaDataConnection");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ValidateDiscoveryGroupAsync(DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoveryGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<ValidateResult> response = await client.ValidateDiscoveryGroupAsync(body);
]]></code></example>
    </member>
    <member name="ValidateDiscoveryGroup(DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoveryGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<ValidateResult> response = client.ValidateDiscoveryGroup(body);
]]></code></example>
    </member>
    <member name="ValidateDiscoveryGroupAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoveryGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    description = "This is a disco group",
    frequencyMilliseconds = 604800000,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = await client.ValidateDiscoveryGroupAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="ValidateDiscoveryGroup(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoveryGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    description = "This is a disco group",
    frequencyMilliseconds = 604800000,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = client.ValidateDiscoveryGroup(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = await client.GetDiscoveryGroupAsync("ThisisaDiscoGroup");
]]></code></example>
    </member>
    <member name="GetDiscoveryGroup(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = client.GetDiscoveryGroup("ThisisaDiscoGroup");
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoveryGroupAsync("ThisisaDiscoGroup", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoveryGroup(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoveryGroup("ThisisaDiscoGroup", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoveryGroupAsync(string,DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoveryGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<DiscoveryGroup> response = await client.CreateOrReplaceDiscoveryGroupAsync("ThisisaDiscoGroup", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoveryGroup(string,DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoveryGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<DiscoveryGroup> response = client.CreateOrReplaceDiscoveryGroup("ThisisaDiscoGroup", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoveryGroupAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoveryGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    description = "This is a disco group",
    frequencyMilliseconds = 604800000,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = await client.CreateOrReplaceDiscoveryGroupAsync("ThisisaDiscoGroup", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoveryGroup(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoveryGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    description = "This is a disco group",
    frequencyMilliseconds = 604800000,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = client.CreateOrReplaceDiscoveryGroup("ThisisaDiscoGroup", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="RunDiscoveryGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoveryGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunDiscoveryGroupAsync("ThisisaDiscoGroup");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RunDiscoveryGroup(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoveryGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunDiscoveryGroup("ThisisaDiscoGroup");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplateAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryTemplateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = await client.GetDiscoveryTemplateAsync("12345");
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplate(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryTemplate.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = client.GetDiscoveryTemplate("12345");
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplateAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryTemplateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoveryTemplateAsync("12345", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplate(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryTemplate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoveryTemplate("12345", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetBillableAsync(CancellationToken)">
      <example>
This sample shows how to call GetBillableAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = await client.GetBillableAsync();
]]></code></example>
    </member>
    <member name="GetBillable(CancellationToken)">
      <example>
This sample shows how to call GetBillable.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = client.GetBillable();
]]></code></example>
    </member>
    <member name="GetBillableAsync(RequestContext)">
      <example>
This sample shows how to call GetBillableAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetBillableAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetBillable(RequestContext)">
      <example>
This sample shows how to call GetBillable and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetBillable(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(ReportAssetSnapshotPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload
{
    Metric = "site_status_active",
    Size = 5,
    Page = 0,
};
Response<ReportAssetSnapshotResult> response = await client.GetSnapshotAsync(body);
]]></code></example>
    </member>
    <member name="GetSnapshot(ReportAssetSnapshotPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshot.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload
{
    Metric = "site_status_active",
    Size = 5,
    Page = 0,
};
Response<ReportAssetSnapshotResult> response = client.GetSnapshot(body);
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "site_status_active",
    page = 0,
    size = 5,
});
Response response = await client.GetSnapshotAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSnapshot(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshot and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "site_status_active",
    page = 0,
    size = 5,
});
Response response = client.GetSnapshot(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSummaryAsync(ReportAssetSummaryPayload,CancellationToken)">
      <example>
This sample shows how to call GetSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload
{
    Filters = { "state = \"confirmed\" AND kind = \"domain\"", "state = \"confirmed\" AND kind = \"host\"", "state = \"confirmed\" AND kind = \"page\"" },
};
Response<ReportAssetSummaryResult> response = await client.GetSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetSummary(ReportAssetSummaryPayload,CancellationToken)">
      <example>
This sample shows how to call GetSummary.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload
{
    Filters = { "state = \"confirmed\" AND kind = \"domain\"", "state = \"confirmed\" AND kind = \"host\"", "state = \"confirmed\" AND kind = \"page\"" },
};
Response<ReportAssetSummaryResult> response = client.GetSummary(body);
]]></code></example>
    </member>
    <member name="GetSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filters = new object[]
    {
        "state = \"confirmed\" AND kind = \"domain\"",
        "state = \"confirmed\" AND kind = \"host\"",
        "state = \"confirmed\" AND kind = \"page\""
    },
});
Response response = await client.GetSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filters = new object[]
    {
        "state = \"confirmed\" AND kind = \"domain\"",
        "state = \"confirmed\" AND kind = \"host\"",
        "state = \"confirmed\" AND kind = \"page\""
    },
});
Response response = client.GetSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = await client.GetSavedFilterAsync("ThisisaSavedFilter");
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = client.GetSavedFilter("ThisisaSavedFilter");
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetSavedFilterAsync("ThisisaSavedFilter", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetSavedFilter("ThisisaSavedFilter", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,SavedFilterPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

SavedFilterPayload body = new SavedFilterPayload("state IN (\"confirmed\")", "This is a saved filter");
Response<SavedFilter> response = await client.CreateOrReplaceSavedFilterAsync("ThisisaSavedFilter", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,SavedFilterPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

SavedFilterPayload body = new SavedFilterPayload("state IN (\"confirmed\")", "This is a saved filter");
Response<SavedFilter> response = client.CreateOrReplaceSavedFilter("ThisisaSavedFilter", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "state IN (\"confirmed\")",
    description = "This is a saved filter",
});
Response response = await client.CreateOrReplaceSavedFilterAsync("ThisisaSavedFilter", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "state IN (\"confirmed\")",
    description = "This is a saved filter",
});
Response response = client.CreateOrReplaceSavedFilter("ThisisaSavedFilter", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="DeleteSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteSavedFilterAsync("ThisisaSavedFilter");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteSavedFilter("ThisisaSavedFilter");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.GetTaskAsync("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="GetTask(string,CancellationToken)">
      <example>
This sample shows how to call GetTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.GetTask("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetTaskAsync("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetTask(string,RequestContext)">
      <example>
This sample shows how to call GetTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetTask("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.CancelTaskAsync("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="CancelTask(string,CancellationToken)">
      <example>
This sample shows how to call CancelTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.CancelTask("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.CancelTaskAsync("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CancelTask(string,RequestContext)">
      <example>
This sample shows how to call CancelTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.CancelTask("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (AssetResource item in client.GetAssetResourcesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (AssetResource item in client.GetAssetResources())
{
}
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAssetResourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetAssetResourcesAsync("state%20%3D%20%22confirmed%22", null, 0, 5, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetAssetResources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetAssetResources("state%20%3D%20%22confirmed%22", null, 0, 5, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DataConnection item in client.GetDataConnectionsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnections.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DataConnection item in client.GetDataConnections())
{
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDataConnectionsAsync(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnections and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDataConnections(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupsAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryGroupsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryGroup item in client.GetDiscoveryGroupsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroups(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryGroups.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryGroup item in client.GetDiscoveryGroups())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupsAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryGroupsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoveryGroupsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroups(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryGroups and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoveryGroups(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupRunsAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryGroupRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryRunResult item in client.GetDiscoveryGroupRunsAsync("ThisisaDiscoGroup"))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupRuns(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryGroupRuns.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryRunResult item in client.GetDiscoveryGroupRuns("ThisisaDiscoGroup"))
{
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupRunsAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryGroupRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoveryGroupRunsAsync("ThisisaDiscoGroup", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoveryGroupRuns(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryGroupRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoveryGroupRuns("ThisisaDiscoGroup", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplatesAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryTemplatesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryTemplate item in client.GetDiscoveryTemplatesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplates(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoveryTemplates.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryTemplate item in client.GetDiscoveryTemplates())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplatesAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryTemplatesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoveryTemplatesAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoveryTemplates(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoveryTemplates and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoveryTemplates(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFiltersAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (SavedFilter item in client.GetSavedFiltersAsync())
{
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (SavedFilter item in client.GetSavedFilters())
{
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFiltersAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetSavedFiltersAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFilters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetSavedFilters(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (TaskResource item in client.GetTasksAsync())
{
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasks.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (TaskResource item in client.GetTasks())
{
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetTasksAsync(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetTasks(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>