<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="UpdateAssetsAsync(string,AssetUpdatePayload,CancellationToken)">
      <example>
This sample shows how to call UpdateAssetsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetUpdatePayload body = new AssetUpdatePayload
{
    State = AssetUpdateState.Confirmed,
    ExternalId = "contosoInternalId",
    Labels =
    {
        ["contosoLabel"] = true
    },
    Remediations = { new ObservationRemediationItem(ObservationType.Cve, "CVE-0000-00000", ObservationRemediationState.Active), new ObservationRemediationItem(ObservationType.Insight, "This is an insight", ObservationRemediationState.NonApplicable) },
};
Response<TaskResource> response = await client.UpdateAssetsAsync("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", body);
]]></code></example>
    </member>
    <member name="UpdateAssets(string,AssetUpdatePayload,CancellationToken)">
      <example>
This sample shows how to call UpdateAssets.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetUpdatePayload body = new AssetUpdatePayload
{
    State = AssetUpdateState.Confirmed,
    ExternalId = "contosoInternalId",
    Labels =
    {
        ["contosoLabel"] = true
    },
    Remediations = { new ObservationRemediationItem(ObservationType.Cve, "CVE-0000-00000", ObservationRemediationState.Active), new ObservationRemediationItem(ObservationType.Insight, "This is an insight", ObservationRemediationState.NonApplicable) },
};
Response<TaskResource> response = client.UpdateAssets("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", body);
]]></code></example>
    </member>
    <member name="UpdateAssetsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssetsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    state = "confirmed",
    externalId = "contosoInternalId",
    labels = new
    {
        contosoLabel = true,
    },
    remediations = new object[]
    {
        new
        {
            name = "CVE-0000-00000",
            kind = "cve",
            state = "active",
        },
        new
        {
            name = "This is an insight",
            kind = "insight",
            state = "nonApplicable",
        }
    },
});
Response response = await client.UpdateAssetsAsync("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="UpdateAssets(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAssets and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    state = "confirmed",
    externalId = "contosoInternalId",
    labels = new
    {
        contosoLabel = true,
    },
    remediations = new object[]
    {
        new
        {
            name = "CVE-0000-00000",
            kind = "cve",
            state = "active",
        },
        new
        {
            name = "This is an insight",
            kind = "insight",
            state = "nonApplicable",
        }
    },
});
Response response = client.UpdateAssets("state%20%3D%20%22confirmed%22%20AND%20name%20%5E%3D%20%22contoso.com%22", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = await client.GetAssetResourceAsync("aG9zdCQkY29udG9zby5jb20");
]]></code></example>
    </member>
    <member name="GetAssetResource(string,CancellationToken)">
      <example>
This sample shows how to call GetAssetResource.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<AssetResource> response = client.GetAssetResource("aG9zdCQkY29udG9zby5jb20");
]]></code></example>
    </member>
    <member name="GetAssetResourceAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetAssetResourceAsync("aG9zdCQkY29udG9zby5jb20", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResource(string,RequestContext)">
      <example>
This sample shows how to call GetAssetResource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetAssetResource("aG9zdCQkY29udG9zby5jb20", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetsExportAsync(AssetsExportRequest,string,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetsExportAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetsExportRequest body = new AssetsExportRequest("ThisisaFileName", new string[] { "asset", "name" });
Response<TaskResource> response = await client.GetAssetsExportAsync(body);
]]></code></example>
    </member>
    <member name="GetAssetsExport(AssetsExportRequest,string,string,CancellationToken)">
      <example>
This sample shows how to call GetAssetsExport.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetsExportRequest body = new AssetsExportRequest("ThisisaFileName", new string[] { "asset", "name" });
Response<TaskResource> response = client.GetAssetsExport(body);
]]></code></example>
    </member>
    <member name="GetAssetsExportAsync(RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call GetAssetsExportAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    fileName = "ThisisaFileName",
    columns = new object[]
    {
        "asset",
        "name"
    },
});
Response response = await client.GetAssetsExportAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetAssetsExport(RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call GetAssetsExport and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    fileName = "ThisisaFileName",
    columns = new object[]
    {
        "asset",
        "name"
    },
});
Response response = client.GetAssetsExport(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetObservationsAsync(string,string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetObservationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ObservationPageResult> response = await client.GetObservationsAsync("aG9zdCQkY29udG9zby5jb20");
]]></code></example>
    </member>
    <member name="GetObservations(string,string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetObservations.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ObservationPageResult> response = client.GetObservations("aG9zdCQkY29udG9zby5jb20");
]]></code></example>
    </member>
    <member name="GetObservationsAsync(string,string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetObservationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetObservationsAsync("aG9zdCQkY29udG9zby5jb20", null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("prioritySummary").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("types")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("priority").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV2").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV3").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("remediationState").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("remediationSource").ToString());
]]></code></example>
    </member>
    <member name="GetObservations(string,string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetObservations and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetObservations("aG9zdCQkY29udG9zby5jb20", null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("prioritySummary").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("types")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("priority").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV2").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("cvssScoreV3").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("remediationState").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("remediationSource").ToString());
]]></code></example>
    </member>
    <member name="GetDeltaSummaryAsync(DeltaSummaryRequest,CancellationToken)">
      <example>
This sample shows how to call GetDeltaSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaSummaryRequest body = new DeltaSummaryRequest
{
    PriorDays = 30,
    Date = "2024-03-17",
};
Response<DeltaSummaryResult> response = await client.GetDeltaSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetDeltaSummary(DeltaSummaryRequest,CancellationToken)">
      <example>
This sample shows how to call GetDeltaSummary.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaSummaryRequest body = new DeltaSummaryRequest
{
    PriorDays = 30,
    Date = "2024-03-17",
};
Response<DeltaSummaryResult> response = client.GetDeltaSummary(body);
]]></code></example>
    </member>
    <member name="GetDeltaSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetDeltaSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    priorDays = 30,
    date = "2024-03-17",
});
Response response = await client.GetDeltaSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").GetProperty("range").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("difference").ToString());
]]></code></example>
    </member>
    <member name="GetDeltaSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetDeltaSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    priorDays = 30,
    date = "2024-03-17",
});
Response response = client.GetDeltaSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").GetProperty("range").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("kindSummaries")[0].GetProperty("difference").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("date").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("removed").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("added").ToString());
Console.WriteLine(result.GetProperty("daily")[0].GetProperty("deltas")[0].GetProperty("difference").ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Name = "ThisisaDataConnection",
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<ValidateResult> response = await client.ValidateDataConnectionAsync(body);
]]></code></example>
    </member>
    <member name="ValidateDataConnection(DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Name = "ThisisaDataConnection",
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<ValidateResult> response = client.ValidateDataConnection(body);
]]></code></example>
    </member>
    <member name="ValidateDataConnectionAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
    name = "ThisisaDataConnection",
});
Response response = await client.ValidateDataConnectionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="ValidateDataConnection(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
    name = "ThisisaDataConnection",
});
Response response = client.ValidateDataConnection(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = await client.GetDataConnectionAsync("ThisisaDataConnection");
]]></code></example>
    </member>
    <member name="GetDataConnection(string,CancellationToken)">
      <example>
This sample shows how to call GetDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DataConnection> response = client.GetDataConnection("ThisisaDataConnection");
]]></code></example>
    </member>
    <member name="GetDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDataConnectionAsync("ThisisaDataConnection", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetDataConnection(string,RequestContext)">
      <example>
This sample shows how to call GetDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDataConnection("ThisisaDataConnection", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("ThisisaDataConnection", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,DataConnectionPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DataConnectionPayload body = new LogAnalyticsDataConnectionPayload(new LogAnalyticsDataConnectionProperties
{
    ApiKey = "ThisisApiKey",
    WorkspaceId = "ThisisWorkspaceId",
})
{
    Frequency = DataConnectionFrequency.Weekly,
    FrequencyOffset = 1,
};
Response<DataConnection> response = client.CreateOrReplaceDataConnection("ThisisaDataConnection", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnectionAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
});
Response response = await client.CreateOrReplaceDataConnectionAsync("ThisisaDataConnection", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDataConnection(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDataConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    kind = "logAnalytics",
    properties = new
    {
        apiKey = "ThisisApiKey",
        workspaceId = "ThisisWorkspaceId",
    },
    frequency = "weekly",
    frequencyOffset = 1,
});
Response response = client.CreateOrReplaceDataConnection("ThisisaDataConnection", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="DeleteDataConnectionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDataConnectionAsync("ThisisaDataConnection");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteDataConnection(string,RequestContext)">
      <example>
This sample shows how to call DeleteDataConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDataConnection("ThisisaDataConnection");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroupAsync(DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Name = "ThisisaDiscoGroup",
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000L,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<ValidateResult> response = await client.ValidateDiscoGroupAsync(body);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroup(DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call ValidateDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Name = "ThisisaDiscoGroup",
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000L,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<ValidateResult> response = client.ValidateDiscoGroup(body);
]]></code></example>
    </member>
    <member name="ValidateDiscoGroupAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    name = "ThisisaDiscoGroup",
    description = "This is a disco group",
    frequencyMilliseconds = 604800000L,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = await client.ValidateDiscoGroupAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="ValidateDiscoGroup(RequestContent,RequestContext)">
      <example>
This sample shows how to call ValidateDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    name = "ThisisaDiscoGroup",
    description = "This is a disco group",
    frequencyMilliseconds = 604800000L,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = client.ValidateDiscoGroup(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetDiscoGroupAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = await client.GetDiscoGroupAsync("ThisisaDiscoGroup");
]]></code></example>
    </member>
    <member name="GetDiscoGroup(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryGroup> response = client.GetDiscoGroup("ThisisaDiscoGroup");
]]></code></example>
    </member>
    <member name="GetDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoGroupAsync("ThisisaDiscoGroup", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoGroup("ThisisaDiscoGroup", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="DeleteDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteDiscoGroupAsync("ThisisaDiscoGroup");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call DeleteDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteDiscoGroup("ThisisaDiscoGroup");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroupAsync(string,DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000L,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<DiscoveryGroup> response = await client.CreateOrReplaceDiscoGroupAsync("ThisisaDiscoGroup", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroup(string,DiscoveryGroupPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DiscoveryGroupPayload body = new DiscoveryGroupPayload
{
    Description = "This is a disco group",
    Tier = "advanced",
    FrequencyMilliseconds = 604800000L,
    Seeds = {new DiscoverySource
    {
        Kind = DiscoverySourceKind.Host,
        Name = "thisisatest.microsoft.com",
    }},
};
Response<DiscoveryGroup> response = client.CreateOrReplaceDiscoGroup("ThisisaDiscoGroup", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroupAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroupAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    description = "This is a disco group",
    frequencyMilliseconds = 604800000L,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = await client.CreateOrReplaceDiscoGroupAsync("ThisisaDiscoGroup", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceDiscoGroup(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceDiscoGroup and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    description = "This is a disco group",
    frequencyMilliseconds = 604800000L,
    tier = "advanced",
    seeds = new object[]
    {
        new
        {
            name = "thisisatest.microsoft.com",
            kind = "host",
        }
    },
});
Response response = client.CreateOrReplaceDiscoGroup("ThisisaDiscoGroup", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="RunDiscoGroupAsync(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoGroupAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunDiscoGroupAsync("ThisisaDiscoGroup");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RunDiscoGroup(string,RequestContext)">
      <example>
This sample shows how to call RunDiscoGroup.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunDiscoGroup("ThisisaDiscoGroup");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetAssetChainSummaryAsync(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call GetAssetChainSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.ASSET, new string[] { "DOMAIN$$contoso.com" });
Response<AssetChainSummaryResult> response = await client.GetAssetChainSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetAssetChainSummary(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call GetAssetChainSummary.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.ASSET, new string[] { "DOMAIN$$contoso.com" });
Response<AssetChainSummaryResult> response = client.GetAssetChainSummary(body);
]]></code></example>
    </member>
    <member name="GetAssetChainSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetAssetChainSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "ASSET",
    sourceIds = new object[]
    {
        "DOMAIN$$contoso.com"
    },
});
Response response = await client.GetAssetChainSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("affectedCount").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("displayName").ToString());
]]></code></example>
    </member>
    <member name="GetAssetChainSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetAssetChainSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "ASSET",
    sourceIds = new object[]
    {
        "DOMAIN$$contoso.com"
    },
});
Response response = client.GetAssetChainSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("affectedAssetsSummary")[0].GetProperty("affectedCount").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("affectedGroupsSummary")[0].GetProperty("displayName").ToString());
]]></code></example>
    </member>
    <member name="DismissAssetChainAsync(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call DismissAssetChainAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.ASSET, new string[] { "DOMAIN$$contoso.com" });
Response<TaskResource> response = await client.DismissAssetChainAsync(body);
]]></code></example>
    </member>
    <member name="DismissAssetChain(AssetChainRequest,CancellationToken)">
      <example>
This sample shows how to call DismissAssetChain.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

AssetChainRequest body = new AssetChainRequest(AssetChainSource.ASSET, new string[] { "DOMAIN$$contoso.com" });
Response<TaskResource> response = client.DismissAssetChain(body);
]]></code></example>
    </member>
    <member name="DismissAssetChainAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DismissAssetChainAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "ASSET",
    sourceIds = new object[]
    {
        "DOMAIN$$contoso.com"
    },
});
Response response = await client.DismissAssetChainAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="DismissAssetChain(RequestContent,RequestContext)">
      <example>
This sample shows how to call DismissAssetChain and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    assetChainSource = "ASSET",
    sourceIds = new object[]
    {
        "DOMAIN$$contoso.com"
    },
});
Response response = client.DismissAssetChain(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoTemplateAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = await client.GetDiscoTemplateAsync("12345");
]]></code></example>
    </member>
    <member name="GetDiscoTemplate(string,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplate.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<DiscoveryTemplate> response = client.GetDiscoTemplate("12345");
]]></code></example>
    </member>
    <member name="GetDiscoTemplateAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetDiscoTemplateAsync("12345", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetDiscoTemplate(string,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetDiscoTemplate("12345", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetBillableAsync(CancellationToken)">
      <example>
This sample shows how to call GetBillableAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = await client.GetBillableAsync();
]]></code></example>
    </member>
    <member name="GetBillable(CancellationToken)">
      <example>
This sample shows how to call GetBillable.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<ReportBillableAssetSummaryResult> response = client.GetBillable();
]]></code></example>
    </member>
    <member name="GetBillableAsync(RequestContext)">
      <example>
This sample shows how to call GetBillableAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetBillableAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetBillable(RequestContext)">
      <example>
This sample shows how to call GetBillable and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetBillable(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(ReportAssetSnapshotPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload
{
    Metric = "site_status_active",
    Size = 5,
    Page = 0,
};
Response<ReportAssetSnapshotResult> response = await client.GetSnapshotAsync(body);
]]></code></example>
    </member>
    <member name="GetSnapshot(ReportAssetSnapshotPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshot.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotPayload body = new ReportAssetSnapshotPayload
{
    Metric = "site_status_active",
    Size = 5,
    Page = 0,
};
Response<ReportAssetSnapshotResult> response = client.GetSnapshot(body);
]]></code></example>
    </member>
    <member name="GetSnapshotAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "site_status_active",
    page = 0,
    size = 5,
});
Response response = await client.GetSnapshotAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSnapshot(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshot and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "site_status_active",
    page = 0,
    size = 5,
});
Response response = client.GetSnapshot(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSummaryAsync(ReportAssetSummaryPayload,CancellationToken)">
      <example>
This sample shows how to call GetSummaryAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload
{
    Filters = { "state = \"confirmed\" AND kind = \"domain\"", "state = \"confirmed\" AND kind = \"host\"", "state = \"confirmed\" AND kind = \"page\"" },
};
Response<ReportAssetSummaryResult> response = await client.GetSummaryAsync(body);
]]></code></example>
    </member>
    <member name="GetSummary(ReportAssetSummaryPayload,CancellationToken)">
      <example>
This sample shows how to call GetSummary.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSummaryPayload body = new ReportAssetSummaryPayload
{
    Filters = { "state = \"confirmed\" AND kind = \"domain\"", "state = \"confirmed\" AND kind = \"host\"", "state = \"confirmed\" AND kind = \"page\"" },
};
Response<ReportAssetSummaryResult> response = client.GetSummary(body);
]]></code></example>
    </member>
    <member name="GetSummaryAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filters = new object[]
    {
        "state = \"confirmed\" AND kind = \"domain\"",
        "state = \"confirmed\" AND kind = \"host\"",
        "state = \"confirmed\" AND kind = \"page\""
    },
});
Response response = await client.GetSummaryAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSummary(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSummary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filters = new object[]
    {
        "state = \"confirmed\" AND kind = \"domain\"",
        "state = \"confirmed\" AND kind = \"host\"",
        "state = \"confirmed\" AND kind = \"page\""
    },
});
Response response = client.GetSummary(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotExportAsync(ReportAssetSnapshotExportPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotExportAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotExportPayload body = new ReportAssetSnapshotExportPayload
{
    Metric = "ThisisaMetricName",
    FileName = "exportedFileName",
    Columns = { "Column1", "Column2", "Column3" },
};
Response<TaskResource> response = await client.GetSnapshotExportAsync(body);
]]></code></example>
    </member>
    <member name="GetSnapshotExport(ReportAssetSnapshotExportPayload,CancellationToken)">
      <example>
This sample shows how to call GetSnapshotExport.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

ReportAssetSnapshotExportPayload body = new ReportAssetSnapshotExportPayload
{
    Metric = "ThisisaMetricName",
    FileName = "exportedFileName",
    Columns = { "Column1", "Column2", "Column3" },
};
Response<TaskResource> response = client.GetSnapshotExport(body);
]]></code></example>
    </member>
    <member name="GetSnapshotExportAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotExportAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "ThisisaMetricName",
    fileName = "exportedFileName",
    columns = new object[]
    {
        "Column1",
        "Column2",
        "Column3"
    },
});
Response response = await client.GetSnapshotExportAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetSnapshotExport(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetSnapshotExport and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metric = "ThisisaMetricName",
    fileName = "exportedFileName",
    columns = new object[]
    {
        "Column1",
        "Column2",
        "Column3"
    },
});
Response response = client.GetSnapshotExport(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = await client.GetSavedFilterAsync("ThisisaSavedFilter");
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<SavedFilter> response = client.GetSavedFilter("ThisisaSavedFilter");
]]></code></example>
    </member>
    <member name="GetSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetSavedFilterAsync("ThisisaSavedFilter", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call GetSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetSavedFilter("ThisisaSavedFilter", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,SavedFilterPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

SavedFilterPayload body = new SavedFilterPayload("state IN (\"confirmed\")", "This is a saved filter");
Response<SavedFilter> response = await client.CreateOrReplaceSavedFilterAsync("ThisisaSavedFilter", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,SavedFilterPayload,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

SavedFilterPayload body = new SavedFilterPayload("state IN (\"confirmed\")", "This is a saved filter");
Response<SavedFilter> response = client.CreateOrReplaceSavedFilter("ThisisaSavedFilter", body);
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilterAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilterAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "state IN (\"confirmed\")",
    description = "This is a saved filter",
});
Response response = await client.CreateOrReplaceSavedFilterAsync("ThisisaSavedFilter", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceSavedFilter(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceSavedFilter and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filter = "state IN (\"confirmed\")",
    description = "This is a saved filter",
});
Response response = client.CreateOrReplaceSavedFilter("ThisisaSavedFilter", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="DeleteSavedFilterAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilterAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeleteSavedFilterAsync("ThisisaSavedFilter");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteSavedFilter(string,RequestContext)">
      <example>
This sample shows how to call DeleteSavedFilter.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeleteSavedFilter("ThisisaSavedFilter");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.GetTaskAsync("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="GetTask(string,CancellationToken)">
      <example>
This sample shows how to call GetTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.GetTask("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetTaskAsync("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetTask(string,RequestContext)">
      <example>
This sample shows how to call GetTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetTask("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.CancelTaskAsync("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="CancelTask(string,CancellationToken)">
      <example>
This sample shows how to call CancelTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.CancelTask("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.CancelTaskAsync("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CancelTask(string,RequestContext)">
      <example>
This sample shows how to call CancelTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.CancelTask("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="RunTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call RunTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.RunTaskAsync("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="RunTask(string,CancellationToken)">
      <example>
This sample shows how to call RunTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.RunTask("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="RunTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call RunTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.RunTaskAsync("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="RunTask(string,RequestContext)">
      <example>
This sample shows how to call RunTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.RunTask("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="DownloadTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call DownloadTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = await client.DownloadTaskAsync("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="DownloadTask(string,CancellationToken)">
      <example>
This sample shows how to call DownloadTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<TaskResource> response = client.DownloadTask("ThisisaTaskId");
]]></code></example>
    </member>
    <member name="DownloadTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call DownloadTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DownloadTaskAsync("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="DownloadTask(string,RequestContext)">
      <example>
This sample shows how to call DownloadTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DownloadTask("ThisisaTaskId", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetCisaCveAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetCisaCveAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<CisaCveResult> response = await client.GetCisaCveAsync("CVE-2021-40438");
]]></code></example>
    </member>
    <member name="GetCisaCve(string,CancellationToken)">
      <example>
This sample shows how to call GetCisaCve.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<CisaCveResult> response = client.GetCisaCve("CVE-2021-40438");
]]></code></example>
    </member>
    <member name="GetCisaCveAsync(string,RequestContext)">
      <example>
This sample shows how to call GetCisaCveAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetCisaCveAsync("CVE-2021-40438", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cveId").ToString());
Console.WriteLine(result.GetProperty("vendorProject").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
Console.WriteLine(result.GetProperty("shortDescription").ToString());
Console.WriteLine(result.GetProperty("requiredAction").ToString());
Console.WriteLine(result.GetProperty("notes").ToString());
Console.WriteLine(result.GetProperty("dateAdded").ToString());
Console.WriteLine(result.GetProperty("dueDate").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetCisaCve(string,RequestContext)">
      <example>
This sample shows how to call GetCisaCve and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetCisaCve("CVE-2021-40438", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("cveId").ToString());
Console.WriteLine(result.GetProperty("vendorProject").ToString());
Console.WriteLine(result.GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
Console.WriteLine(result.GetProperty("shortDescription").ToString());
Console.WriteLine(result.GetProperty("requiredAction").ToString());
Console.WriteLine(result.GetProperty("notes").ToString());
Console.WriteLine(result.GetProperty("dateAdded").ToString());
Console.WriteLine(result.GetProperty("dueDate").ToString());
Console.WriteLine(result.GetProperty("updatedAt").ToString());
Console.WriteLine(result.GetProperty("count").ToString());
]]></code></example>
    </member>
    <member name="GetPolicyAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetPolicyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<Policy> response = await client.GetPolicyAsync("ThisisaPolicy");
]]></code></example>
    </member>
    <member name="GetPolicy(string,CancellationToken)">
      <example>
This sample shows how to call GetPolicy.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response<Policy> response = client.GetPolicy("ThisisaPolicy");
]]></code></example>
    </member>
    <member name="GetPolicyAsync(string,RequestContext)">
      <example>
This sample shows how to call GetPolicyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.GetPolicyAsync("ThisisaPolicy", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("filterName").ToString());
Console.WriteLine(result.GetProperty("action").ToString());
Console.WriteLine(result.GetProperty("actionParameters").ToString());
]]></code></example>
    </member>
    <member name="GetPolicy(string,RequestContext)">
      <example>
This sample shows how to call GetPolicy and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.GetPolicy("ThisisaPolicy", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("filterName").ToString());
Console.WriteLine(result.GetProperty("action").ToString());
Console.WriteLine(result.GetProperty("actionParameters").ToString());
]]></code></example>
    </member>
    <member name="DeletePolicyAsync(string,RequestContext)">
      <example>
This sample shows how to call DeletePolicyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = await client.DeletePolicyAsync("ThisisaPolicy");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeletePolicy(string,RequestContext)">
      <example>
This sample shows how to call DeletePolicy.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Response response = client.DeletePolicy("ThisisaPolicy");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateOrReplacePolicyAsync(string,Policy,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplacePolicyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Policy body = new Policy("ThisisaFilter", PolicyAction.SetState, new ActionParameters
{
    Value = "confirmed",
})
{
    Description = "This is a policy",
};
Response<Policy> response = await client.CreateOrReplacePolicyAsync("ThisisaPolicy", body);
]]></code></example>
    </member>
    <member name="CreateOrReplacePolicy(string,Policy,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplacePolicy.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

Policy body = new Policy("ThisisaFilter", PolicyAction.SetState, new ActionParameters
{
    Value = "confirmed",
})
{
    Description = "This is a policy",
};
Response<Policy> response = client.CreateOrReplacePolicy("ThisisaPolicy", body);
]]></code></example>
    </member>
    <member name="CreateOrReplacePolicyAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplacePolicyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filterName = "ThisisaFilter",
    description = "This is a policy",
    action = "setState",
    actionParameters = new
    {
        value = "confirmed",
    },
});
Response response = await client.CreateOrReplacePolicyAsync("ThisisaPolicy", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("filterName").ToString());
Console.WriteLine(result.GetProperty("action").ToString());
Console.WriteLine(result.GetProperty("actionParameters").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplacePolicy(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplacePolicy and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filterName = "ThisisaFilter",
    description = "This is a policy",
    action = "setState",
    actionParameters = new
    {
        value = "confirmed",
    },
});
Response response = client.CreateOrReplacePolicy("ThisisaPolicy", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("filterName").ToString());
Console.WriteLine(result.GetProperty("action").ToString());
Console.WriteLine(result.GetProperty("actionParameters").ToString());
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,AssetResponseType?,IEnumerable{string},bool?,CancellationToken)">
      <example>
This sample shows how to call GetAssetResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (AssetResource item in client.GetAssetResourcesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,AssetResponseType?,IEnumerable{string},bool?,CancellationToken)">
      <example>
This sample shows how to call GetAssetResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (AssetResource item in client.GetAssetResources())
{
}
]]></code></example>
    </member>
    <member name="GetAssetResourcesAsync(string,string,int?,int?,string,string,IEnumerable{string},bool?,RequestContext)">
      <example>
This sample shows how to call GetAssetResourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetAssetResourcesAsync("state%20%3D%20%22confirmed%22", null, 0, 5, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetAssetResources(string,string,int?,int?,string,string,IEnumerable{string},bool?,RequestContext)">
      <example>
This sample shows how to call GetAssetResources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetAssetResources("state%20%3D%20%22confirmed%22", null, 0, 5, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeltaDetailsAsync(DeltaDetailsRequest,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeltaDetailsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaDetailsRequest body = new DeltaDetailsRequest(DeltaDetailType.Added, GlobalAssetType.Domain)
{
    PriorDays = 30,
    Date = "2024-03-17",
};
await foreach (DeltaResult item in client.GetDeltaDetailsAsync(body))
{
}
]]></code></example>
    </member>
    <member name="GetDeltaDetails(DeltaDetailsRequest,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeltaDetails.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

DeltaDetailsRequest body = new DeltaDetailsRequest(DeltaDetailType.Added, GlobalAssetType.Domain)
{
    PriorDays = 30,
    Date = "2024-03-17",
};
foreach (DeltaResult item in client.GetDeltaDetails(body))
{
}
]]></code></example>
    </member>
    <member name="GetDeltaDetailsAsync(RequestContent,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeltaDetailsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deltaDetailType = "added",
    priorDays = 30,
    kind = "domain",
    date = "2024-03-17",
});
await foreach (BinaryData item in client.GetDeltaDetailsAsync(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeltaDetails(RequestContent,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeltaDetails and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deltaDetailType = "added",
    priorDays = 30,
    kind = "domain",
    date = "2024-03-17",
});
foreach (BinaryData item in client.GetDeltaDetails(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnectionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DataConnection item in client.GetDataConnectionsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDataConnections.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DataConnection item in client.GetDataConnections())
{
}
]]></code></example>
    </member>
    <member name="GetDataConnectionsAsync(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnectionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDataConnectionsAsync(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDataConnections(int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDataConnections and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDataConnections(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoGroupsAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroupsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryGroup item in client.GetDiscoGroupsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoGroups(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoGroups.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryGroup item in client.GetDiscoGroups())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoGroupsAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroupsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoGroupsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoGroups(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoGroups and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoGroups(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryRunResult item in client.GetRunsAsync("ThisisaDiscoGroup"))
{
}
]]></code></example>
    </member>
    <member name="GetRuns(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRuns.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryRunResult item in client.GetRuns("ThisisaDiscoGroup"))
{
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetRunsAsync("ThisisaDiscoGroup", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetRuns(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetRuns("ThisisaDiscoGroup", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplatesAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplatesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (DiscoveryTemplate item in client.GetDiscoTemplatesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplates(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDiscoTemplates.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (DiscoveryTemplate item in client.GetDiscoTemplates())
{
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplatesAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplatesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetDiscoTemplatesAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetDiscoTemplates(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDiscoTemplates and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetDiscoTemplates(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFiltersAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (SavedFilter item in client.GetSavedFiltersAsync())
{
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSavedFilters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (SavedFilter item in client.GetSavedFilters())
{
}
]]></code></example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFiltersAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetSavedFiltersAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSavedFilters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetSavedFilters(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (TaskResource item in client.GetTasksAsync())
{
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasks.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (TaskResource item in client.GetTasks())
{
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetTasksAsync(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetTasks(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetCisaCvesAsync(CancellationToken)">
      <example>
This sample shows how to call GetCisaCvesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (CisaCveResult item in client.GetCisaCvesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetCisaCves(CancellationToken)">
      <example>
This sample shows how to call GetCisaCves.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (CisaCveResult item in client.GetCisaCves())
{
}
]]></code></example>
    </member>
    <member name="GetCisaCvesAsync(RequestContext)">
      <example>
This sample shows how to call GetCisaCvesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetCisaCvesAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cveId").ToString());
    Console.WriteLine(result.GetProperty("vendorProject").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
    Console.WriteLine(result.GetProperty("shortDescription").ToString());
    Console.WriteLine(result.GetProperty("requiredAction").ToString());
    Console.WriteLine(result.GetProperty("notes").ToString());
    Console.WriteLine(result.GetProperty("dateAdded").ToString());
    Console.WriteLine(result.GetProperty("dueDate").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("count").ToString());
}
]]></code></example>
    </member>
    <member name="GetCisaCves(RequestContext)">
      <example>
This sample shows how to call GetCisaCves and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetCisaCves(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("cveId").ToString());
    Console.WriteLine(result.GetProperty("vendorProject").ToString());
    Console.WriteLine(result.GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("vulnerabilityName").ToString());
    Console.WriteLine(result.GetProperty("shortDescription").ToString());
    Console.WriteLine(result.GetProperty("requiredAction").ToString());
    Console.WriteLine(result.GetProperty("notes").ToString());
    Console.WriteLine(result.GetProperty("dateAdded").ToString());
    Console.WriteLine(result.GetProperty("dueDate").ToString());
    Console.WriteLine(result.GetProperty("updatedAt").ToString());
    Console.WriteLine(result.GetProperty("count").ToString());
}
]]></code></example>
    </member>
    <member name="GetPoliciesAsync(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetPoliciesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (Policy item in client.GetPoliciesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetPolicies(string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetPolicies.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (Policy item in client.GetPolicies())
{
}
]]></code></example>
    </member>
    <member name="GetPoliciesAsync(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetPoliciesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

await foreach (BinaryData item in client.GetPoliciesAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("filterName").ToString());
    Console.WriteLine(result.GetProperty("action").ToString());
    Console.WriteLine(result.GetProperty("actionParameters").ToString());
}
]]></code></example>
    </member>
    <member name="GetPolicies(string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetPolicies and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
EasmClient client = new EasmClient(endpoint, credential);

foreach (BinaryData item in client.GetPolicies(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("filterName").ToString());
    Console.WriteLine(result.GetProperty("action").ToString());
    Console.WriteLine(result.GetProperty("actionParameters").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>