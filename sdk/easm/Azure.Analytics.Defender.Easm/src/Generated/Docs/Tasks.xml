<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = await client.GetTaskAsync("<taskId>");
]]></code>
This sample shows how to call GetTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = await client.GetTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="GetTask(string,CancellationToken)">
      <example>
This sample shows how to call GetTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = client.GetTask("<taskId>");
]]></code>
This sample shows how to call GetTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = client.GetTask("<taskId>");
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = await client.GetTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = await client.GetTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetTask(string,RequestContext)">
      <example>
This sample shows how to call GetTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = client.GetTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = client.GetTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = await client.CancelTaskAsync("<taskId>");
]]></code>
This sample shows how to call CancelTaskAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = await client.CancelTaskAsync("<taskId>");
]]></code></example>
    </member>
    <member name="CancelTask(string,CancellationToken)">
      <example>
This sample shows how to call CancelTask.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = client.CancelTask("<taskId>");
]]></code>
This sample shows how to call CancelTask with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response<Task> response = client.CancelTask("<taskId>");
]]></code></example>
    </member>
    <member name="CancelTaskAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = await client.CancelTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CancelTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = await client.CancelTaskAsync("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CancelTask(string,RequestContext)">
      <example>
This sample shows how to call CancelTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = client.CancelTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CancelTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

Response response = client.CancelTask("<taskId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
Console.WriteLine(result.GetProperty("state").ToString());
Console.WriteLine(result.GetProperty("phase").ToString());
Console.WriteLine(result.GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

await foreach (Task item in client.GetTasksAsync())
{
}
]]></code>
This sample shows how to call GetTasksAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

await foreach (Task item in client.GetTasksAsync(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTasks.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

foreach (Task item in client.GetTasks())
{
}
]]></code>
This sample shows how to call GetTasks with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

foreach (Task item in client.GetTasks(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

await foreach (BinaryData item in client.GetTasksAsync(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetTasksAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

await foreach (BinaryData item in client.GetTasksAsync("<filter>", "<orderby>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("completedAt").ToString());
    Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("phase").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasks(string,string,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

foreach (BinaryData item in client.GetTasks(null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetTasks with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Tasks client = new EasmClient(endpoint, credential).GetTasksClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

foreach (BinaryData item in client.GetTasks("<filter>", "<orderby>", 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("completedAt").ToString());
    Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
    Console.WriteLine(result.GetProperty("state").ToString());
    Console.WriteLine(result.GetProperty("phase").ToString());
    Console.WriteLine(result.GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>