// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    public partial class PageCause
    {
        internal static PageCause DeserializePageCause(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> cause = default;
            Optional<string> causeElementXPath = default;
            Optional<string> location = default;
            Optional<int> possibleMatches = default;
            Optional<bool> loopDetected = default;
            Optional<int> version = default;
            Optional<int> domChangeIndex = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("cause"u8))
                {
                    cause = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("causeElementXPath"u8))
                {
                    causeElementXPath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("location"u8))
                {
                    location = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("possibleMatches"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    possibleMatches = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("loopDetected"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    loopDetected = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("version"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    version = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("domChangeIndex"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domChangeIndex = property.Value.GetInt32();
                    continue;
                }
            }
            return new PageCause(cause.Value, causeElementXPath.Value, location.Value, Optional.ToNullable(possibleMatches), Optional.ToNullable(loopDetected), Optional.ToNullable(version), Optional.ToNullable(domChangeIndex));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static PageCause FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializePageCause(document.RootElement);
        }
    }
}
