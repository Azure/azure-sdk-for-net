// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> The SslServerConfig. </summary>
    public partial class SslServerConfig
    {
        /// <summary> Initializes a new instance of SslServerConfig. </summary>
        public SslServerConfig()
        {
            TlsVersions = new ChangeTrackingList<string>();
            CipherSuites = new ChangeTrackingList<string>();
            Sources = new ChangeTrackingList<Source>();
        }

        /// <summary> Initializes a new instance of SslServerConfig. </summary>
        /// <param name="tlsVersions"></param>
        /// <param name="cipherSuites"></param>
        /// <param name="firstSeen"></param>
        /// <param name="lastSeen"></param>
        /// <param name="count"></param>
        /// <param name="sources"></param>
        internal SslServerConfig(IList<string> tlsVersions, IList<string> cipherSuites, DateTimeOffset? firstSeen, DateTimeOffset? lastSeen, long? count, IList<Source> sources)
        {
            TlsVersions = tlsVersions;
            CipherSuites = cipherSuites;
            FirstSeen = firstSeen;
            LastSeen = lastSeen;
            Count = count;
            Sources = sources;
        }

        /// <summary> Gets the tls versions. </summary>
        public IList<string> TlsVersions { get; }
        /// <summary> Gets the cipher suites. </summary>
        public IList<string> CipherSuites { get; }
        /// <summary> Gets or sets the first seen. </summary>
        public DateTimeOffset? FirstSeen { get; set; }
        /// <summary> Gets or sets the last seen. </summary>
        public DateTimeOffset? LastSeen { get; set; }
        /// <summary> Gets or sets the count. </summary>
        public long? Count { get; set; }
        /// <summary> Gets the sources. </summary>
        public IList<Source> Sources { get; }
    }
}
