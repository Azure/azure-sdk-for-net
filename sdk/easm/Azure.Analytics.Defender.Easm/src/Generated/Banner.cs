// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Defender.Easm
{
    /// <summary> The Banner. </summary>
    public partial class Banner
    {
        /// <summary> Initializes a new instance of <see cref="Banner"/>. </summary>
        internal Banner()
        {
            Sources = new ChangeTrackingList<Source>();
        }

        /// <summary> Initializes a new instance of <see cref="Banner"/>. </summary>
        /// <param name="port"></param>
        /// <param name="bannerProperty"></param>
        /// <param name="firstSeen"></param>
        /// <param name="lastSeen"></param>
        /// <param name="count"></param>
        /// <param name="scanType"></param>
        /// <param name="bannerMetadata"></param>
        /// <param name="recent"></param>
        /// <param name="sha256"></param>
        /// <param name="sources"></param>
        internal Banner(int? port, string bannerProperty, DateTimeOffset? firstSeen, DateTimeOffset? lastSeen, long? count, string scanType, string bannerMetadata, bool? recent, string sha256, IReadOnlyList<Source> sources)
        {
            Port = port;
            BannerProperty = bannerProperty;
            FirstSeen = firstSeen;
            LastSeen = lastSeen;
            Count = count;
            ScanType = scanType;
            BannerMetadata = bannerMetadata;
            Recent = recent;
            Sha256 = sha256;
            Sources = sources;
        }

        /// <summary> Gets the port. </summary>
        public int? Port { get; }
        /// <summary> Gets the banner property. </summary>
        public string BannerProperty { get; }
        /// <summary> Gets the first seen. </summary>
        public DateTimeOffset? FirstSeen { get; }
        /// <summary> Gets the last seen. </summary>
        public DateTimeOffset? LastSeen { get; }
        /// <summary> Gets the count. </summary>
        public long? Count { get; }
        /// <summary> Gets the scan type. </summary>
        public string ScanType { get; }
        /// <summary> Gets the banner metadata. </summary>
        public string BannerMetadata { get; }
        /// <summary> Gets the recent. </summary>
        public bool? Recent { get; }
        /// <summary> Gets the sha 256. </summary>
        public string Sha256 { get; }
        /// <summary> Gets the sources. </summary>
        public IReadOnlyList<Source> Sources { get; }
    }
}
