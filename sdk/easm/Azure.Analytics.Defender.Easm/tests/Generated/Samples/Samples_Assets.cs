// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Analytics.Defender.Easm;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Analytics.Defender.Easm.Samples
{
    public partial class Samples_Assets
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_UpdateAssets_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.UpdateAssets("<filter>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_UpdateAssets_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.UpdateAssetsAsync("<filter>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_UpdateAssets_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            AssetUpdateData assetUpdateData = new AssetUpdateData();
            Response<Task> response = client.UpdateAssets("<filter>", assetUpdateData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_UpdateAssets_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            AssetUpdateData assetUpdateData = new AssetUpdateData();
            Response<Task> response = await client.UpdateAssetsAsync("<filter>", assetUpdateData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_UpdateAssets_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                state = "candidate",
                externalId = "<externalId>",
                labels = new
                {
                    key = true,
                },
                transfers = "as",
            });
            Response response = client.UpdateAssets("<filter>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("startedAt").ToString());
            Console.WriteLine(result.GetProperty("completedAt").ToString());
            Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("phase").ToString());
            Console.WriteLine(result.GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_UpdateAssets_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                state = "candidate",
                externalId = "<externalId>",
                labels = new
                {
                    key = true,
                },
                transfers = "as",
            });
            Response response = await client.UpdateAssetsAsync("<filter>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("startedAt").ToString());
            Console.WriteLine(result.GetProperty("completedAt").ToString());
            Console.WriteLine(result.GetProperty("lastPolledAt").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("phase").ToString());
            Console.WriteLine(result.GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_UpdateAssets_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            AssetUpdateData assetUpdateData = new AssetUpdateData
            {
                State = AssetUpdateState.Candidate,
                ExternalId = "<externalId>",
                Labels =
{
["key"] = true
},
                Transfers = AssetUpdateTransfers.As,
            };
            Response<Task> response = client.UpdateAssets("<filter>", assetUpdateData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_UpdateAssets_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            AssetUpdateData assetUpdateData = new AssetUpdateData
            {
                State = AssetUpdateState.Candidate,
                ExternalId = "<externalId>",
                Labels =
{
["key"] = true
},
                Transfers = AssetUpdateTransfers.As,
            };
            Response<Task> response = await client.UpdateAssetsAsync("<filter>", assetUpdateData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResource_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.GetAssetResource("<assetId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResource_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.GetAssetResourceAsync("<assetId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResource_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<AssetResource> response = client.GetAssetResource("<assetId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResource_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<AssetResource> response = await client.GetAssetResourceAsync("<assetId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResource_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.GetAssetResource("<assetId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("uuid").ToString());
            Console.WriteLine(result.GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("updatedDate").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("externalId").ToString());
            Console.WriteLine(result.GetProperty("labels")[0].ToString());
            Console.WriteLine(result.GetProperty("wildcard").ToString());
            Console.WriteLine(result.GetProperty("discoGroupName").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("reason").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResource_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.GetAssetResourceAsync("<assetId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("uuid").ToString());
            Console.WriteLine(result.GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("updatedDate").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("externalId").ToString());
            Console.WriteLine(result.GetProperty("labels")[0].ToString());
            Console.WriteLine(result.GetProperty("wildcard").ToString());
            Console.WriteLine(result.GetProperty("discoGroupName").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("reason").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResource_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<AssetResource> response = client.GetAssetResource("<assetId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResource_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<AssetResource> response = await client.GetAssetResourceAsync("<assetId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResources_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (BinaryData item in client.GetAssetResources(null, null, null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResources_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (BinaryData item in client.GetAssetResourcesAsync(null, null, null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResources_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (AssetResource item in client.GetAssetResources())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResources_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (AssetResource item in client.GetAssetResourcesAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResources_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (BinaryData item in client.GetAssetResources("<filter>", "<orderby>", 1234, 1234, "<mark>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("uuid").ToString());
                Console.WriteLine(result.GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("updatedDate").ToString());
                Console.WriteLine(result.GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("externalId").ToString());
                Console.WriteLine(result.GetProperty("labels")[0].ToString());
                Console.WriteLine(result.GetProperty("wildcard").ToString());
                Console.WriteLine(result.GetProperty("discoGroupName").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("reason").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResources_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (BinaryData item in client.GetAssetResourcesAsync("<filter>", "<orderby>", 1234, 1234, "<mark>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("uuid").ToString());
                Console.WriteLine(result.GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("updatedDate").ToString());
                Console.WriteLine(result.GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("externalId").ToString());
                Console.WriteLine(result.GetProperty("labels")[0].ToString());
                Console.WriteLine(result.GetProperty("wildcard").ToString());
                Console.WriteLine(result.GetProperty("discoGroupName").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("auditTrail")[0].GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("reason").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AssetResource_GetAssetResources_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (AssetResource item in client.GetAssetResources(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234, mark: "<mark>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_AssetResource_GetAssetResources_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            Assets client = new EasmClient(endpoint, credential).GetAssetsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (AssetResource item in client.GetAssetResourcesAsync(filter: "<filter>", orderby: "<orderby>", skip: 1234, maxpagesize: 1234, mark: "<mark>"))
            {
            }
        }
    }
}
