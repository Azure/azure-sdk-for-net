// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Analytics.Defender.Easm;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Analytics.Defender.Easm.Samples
{
    public partial class Samples_DataConnections
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnections_ValidateDataConnection_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new object(),
                kind = "logAnalytics",
            });
            Response response = client.ValidateDataConnection(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnections_ValidateDataConnection_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new object(),
                kind = "logAnalytics",
            });
            Response response = await client.ValidateDataConnectionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnections_ValidateDataConnection_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
            Response<ValidateResult> response = client.ValidateDataConnection(dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnections_ValidateDataConnection_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
            Response<ValidateResult> response = await client.ValidateDataConnectionAsync(dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnections_ValidateDataConnection_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    apiKey = "<apiKey>",
                    workspaceId = "<workspaceId>",
                },
                kind = "logAnalytics",
                name = "<name>",
                content = "assets",
                frequency = "daily",
                frequencyOffset = 1234,
            });
            Response response = client.ValidateDataConnection(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnections_ValidateDataConnection_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    apiKey = "<apiKey>",
                    workspaceId = "<workspaceId>",
                },
                kind = "logAnalytics",
                name = "<name>",
                content = "assets",
                frequency = "daily",
                frequencyOffset = 1234,
            });
            Response response = await client.ValidateDataConnectionAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnections_ValidateDataConnection_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
            {
                ApiKey = "<apiKey>",
                WorkspaceId = "<workspaceId>",
            })
            {
                Name = "<name>",
                Content = DataConnectionContent.Assets,
                Frequency = DataConnectionFrequency.Daily,
                FrequencyOffset = 1234,
            };
            Response<ValidateResult> response = client.ValidateDataConnection(dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnections_ValidateDataConnection_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
            {
                ApiKey = "<apiKey>",
                WorkspaceId = "<workspaceId>",
            })
            {
                Name = "<name>",
                Content = DataConnectionContent.Assets,
                Frequency = DataConnectionFrequency.Daily,
                FrequencyOffset = 1234,
            };
            Response<ValidateResult> response = await client.ValidateDataConnectionAsync(dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnection_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.GetDataConnection("<dataConnectionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnection_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.GetDataConnectionAsync("<dataConnectionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnection_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DataConnection> response = client.GetDataConnection("<dataConnectionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnection_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DataConnection> response = await client.GetDataConnectionAsync("<dataConnectionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnection_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.GetDataConnection("<dataConnectionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("content").ToString());
            Console.WriteLine(result.GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("frequency").ToString());
            Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
            Console.WriteLine(result.GetProperty("updatedDate").ToString());
            Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
            Console.WriteLine(result.GetProperty("active").ToString());
            Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnection_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.GetDataConnectionAsync("<dataConnectionName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("content").ToString());
            Console.WriteLine(result.GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("frequency").ToString());
            Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
            Console.WriteLine(result.GetProperty("updatedDate").ToString());
            Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
            Console.WriteLine(result.GetProperty("active").ToString());
            Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnection_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DataConnection> response = client.GetDataConnection("<dataConnectionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnection_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DataConnection> response = await client.GetDataConnectionAsync("<dataConnectionName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_CreateOrReplaceDataConnection_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new object(),
                kind = "logAnalytics",
            });
            Response response = client.CreateOrReplaceDataConnection("<dataConnectionName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_CreateOrReplaceDataConnection_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new object(),
                kind = "logAnalytics",
            });
            Response response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_CreateOrReplaceDataConnection_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
            Response<DataConnection> response = client.CreateOrReplaceDataConnection("<dataConnectionName>", dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_CreateOrReplaceDataConnection_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties());
            Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_CreateOrReplaceDataConnection_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    apiKey = "<apiKey>",
                    workspaceId = "<workspaceId>",
                },
                kind = "logAnalytics",
                name = "<name>",
                content = "assets",
                frequency = "daily",
                frequencyOffset = 1234,
            });
            Response response = client.CreateOrReplaceDataConnection("<dataConnectionName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("content").ToString());
            Console.WriteLine(result.GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("frequency").ToString());
            Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
            Console.WriteLine(result.GetProperty("updatedDate").ToString());
            Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
            Console.WriteLine(result.GetProperty("active").ToString());
            Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_CreateOrReplaceDataConnection_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    apiKey = "<apiKey>",
                    workspaceId = "<workspaceId>",
                },
                kind = "logAnalytics",
                name = "<name>",
                content = "assets",
                frequency = "daily",
                frequencyOffset = 1234,
            });
            Response response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("content").ToString());
            Console.WriteLine(result.GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("frequency").ToString());
            Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
            Console.WriteLine(result.GetProperty("updatedDate").ToString());
            Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
            Console.WriteLine(result.GetProperty("active").ToString());
            Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_CreateOrReplaceDataConnection_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
            {
                ApiKey = "<apiKey>",
                WorkspaceId = "<workspaceId>",
            })
            {
                Name = "<name>",
                Content = DataConnectionContent.Assets,
                Frequency = DataConnectionFrequency.Daily,
                FrequencyOffset = 1234,
            };
            Response<DataConnection> response = client.CreateOrReplaceDataConnection("<dataConnectionName>", dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_CreateOrReplaceDataConnection_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            DataConnectionData dataConnectionData = new LogAnalyticsDataConnectionData(new LogAnalyticsDataConnectionProperties
            {
                ApiKey = "<apiKey>",
                WorkspaceId = "<workspaceId>",
            })
            {
                Name = "<name>",
                Content = DataConnectionContent.Assets,
                Frequency = DataConnectionFrequency.Daily,
                FrequencyOffset = 1234,
            };
            Response<DataConnection> response = await client.CreateOrReplaceDataConnectionAsync("<dataConnectionName>", dataConnectionData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_DeleteDataConnection_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.DeleteDataConnection("<dataConnectionName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_DeleteDataConnection_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.DeleteDataConnectionAsync("<dataConnectionName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_DeleteDataConnection_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.DeleteDataConnection("<dataConnectionName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_DeleteDataConnection_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.DeleteDataConnectionAsync("<dataConnectionName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnections_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (BinaryData item in client.GetDataConnections(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnections_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (BinaryData item in client.GetDataConnectionsAsync(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnections_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (DataConnection item in client.GetDataConnections())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnections_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (DataConnection item in client.GetDataConnectionsAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnections_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (BinaryData item in client.GetDataConnections(1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("content").ToString());
                Console.WriteLine(result.GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("frequency").ToString());
                Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
                Console.WriteLine(result.GetProperty("updatedDate").ToString());
                Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
                Console.WriteLine(result.GetProperty("active").ToString());
                Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnections_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (BinaryData item in client.GetDataConnectionsAsync(1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("content").ToString());
                Console.WriteLine(result.GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("frequency").ToString());
                Console.WriteLine(result.GetProperty("frequencyOffset").ToString());
                Console.WriteLine(result.GetProperty("updatedDate").ToString());
                Console.WriteLine(result.GetProperty("userUpdatedAt").ToString());
                Console.WriteLine(result.GetProperty("active").ToString());
                Console.WriteLine(result.GetProperty("inactiveMessage").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DataConnection_GetDataConnections_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (DataConnection item in client.GetDataConnections(skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DataConnection_GetDataConnections_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DataConnections client = new EasmClient(endpoint, credential).GetDataConnectionsClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (DataConnection item in client.GetDataConnectionsAsync(skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
