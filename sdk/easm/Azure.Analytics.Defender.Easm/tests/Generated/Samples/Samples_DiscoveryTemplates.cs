// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Analytics.Defender.Easm;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Analytics.Defender.Easm.Samples
{
    public partial class Samples_DiscoveryTemplates
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplate_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.GetDiscoTemplate("<templateId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplate_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.GetDiscoTemplateAsync("<templateId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplate_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DiscoTemplate> response = client.GetDiscoTemplate("<templateId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplate_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DiscoTemplate> response = await client.GetDiscoTemplateAsync("<templateId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplate_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = client.GetDiscoTemplate("<templateId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("industry").ToString());
            Console.WriteLine(result.GetProperty("region").ToString());
            Console.WriteLine(result.GetProperty("countryCode").ToString());
            Console.WriteLine(result.GetProperty("stateCode").ToString());
            Console.WriteLine(result.GetProperty("city").ToString());
            Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("names")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplate_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response response = await client.GetDiscoTemplateAsync("<templateId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("industry").ToString());
            Console.WriteLine(result.GetProperty("region").ToString());
            Console.WriteLine(result.GetProperty("countryCode").ToString());
            Console.WriteLine(result.GetProperty("stateCode").ToString());
            Console.WriteLine(result.GetProperty("city").ToString());
            Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("names")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplate_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DiscoTemplate> response = client.GetDiscoTemplate("<templateId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplate_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            Response<DiscoTemplate> response = await client.GetDiscoTemplateAsync("<templateId>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplates_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (BinaryData item in client.GetDiscoTemplates(null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplates_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (BinaryData item in client.GetDiscoTemplatesAsync(null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplates_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (DiscoTemplate item in client.GetDiscoTemplates())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplates_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (DiscoTemplate item in client.GetDiscoTemplatesAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplates_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (BinaryData item in client.GetDiscoTemplates("<filter>", 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("industry").ToString());
                Console.WriteLine(result.GetProperty("region").ToString());
                Console.WriteLine(result.GetProperty("countryCode").ToString());
                Console.WriteLine(result.GetProperty("stateCode").ToString());
                Console.WriteLine(result.GetProperty("city").ToString());
                Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("names")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplates_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (BinaryData item in client.GetDiscoTemplatesAsync("<filter>", 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("industry").ToString());
                Console.WriteLine(result.GetProperty("region").ToString());
                Console.WriteLine(result.GetProperty("countryCode").ToString());
                Console.WriteLine(result.GetProperty("stateCode").ToString());
                Console.WriteLine(result.GetProperty("city").ToString());
                Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("seeds")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("names")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DiscoTemplate_GetDiscoTemplates_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            foreach (DiscoTemplate item in client.GetDiscoTemplates(filter: "<filter>", skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async System.Threading.Tasks.Task Example_DiscoTemplate_GetDiscoTemplates_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DiscoveryTemplates client = new EasmClient(endpoint, credential).GetDiscoveryTemplatesClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", apiVersion: "2023-03-01-preview");

            await foreach (DiscoTemplate item in client.GetDiscoTemplatesAsync(filter: "<filter>", skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
