// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Migration.Assessment.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Migration.Assessment
{
    /// <summary>
    /// A class representing the MigrationAssessedSqlMachine data model.
    /// SQL Assessment REST resource.
    /// </summary>
    public partial class MigrationAssessedSqlMachineData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MigrationAssessedSqlMachineData"/>. </summary>
        public MigrationAssessedSqlMachineData()
        {
            SqlInstances = new ChangeTrackingList<AssessedSqlInstanceSummary>();
            Disks = new ChangeTrackingDictionary<string, MigrationAssessedDataDisk>();
            NetworkAdapters = new ChangeTrackingDictionary<string, SqlAssessedNetworkAdapter>();
            CostComponents = new ChangeTrackingList<AssessmentCostComponent>();
            MigrationGuidelines = new ChangeTrackingList<SqlMigrationGuideline>();
        }

        /// <summary> Initializes a new instance of <see cref="MigrationAssessedSqlMachineData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="biosGuid"> Gets or sets the BIOS GUID for the machine. </param>
        /// <param name="fqdn"> Gets or sets the FQDN for the machine. </param>
        /// <param name="sqlInstances"> Gets the list of SQL instances discovered on the machine. </param>
        /// <param name="suitabilityDetail">
        /// Gets or sets the detailed messages that were set on the machine during
        /// evaluation.
        /// </param>
        /// <param name="suitabilityExplanation"> Gets or sets the explanation if machine is not suitable for cloud. </param>
        /// <param name="recommendedVmSize"> Gets or sets the Recommended Azure Size for the machine. </param>
        /// <param name="recommendedVmFamily"> Gets or sets the Recommended Azure VM Family for the machine. </param>
        /// <param name="productSupportStatus"> Gets the product support status related details. </param>
        /// <param name="recommendedVmSizeNumberOfCores"> Gets or sets the Number of cores for recommended size. </param>
        /// <param name="recommendedVmSizeMegabytesOfMemory"> Gets or sets the Megabytes of memory for recommended size. </param>
        /// <param name="monthlyComputeCost"> Gets or sets the monthly compute cost calculated for recommended size. </param>
        /// <param name="disks"> Gets the list of data disks that were assessed as part of this assessment. </param>
        /// <param name="networkAdapters"> Gets the list of network adapters that were assessed as part of this assessment. </param>
        /// <param name="monthlyBandwidthCost"> Gets or sets the monthly networking cost. </param>
        /// <param name="monthlyStorageCost"> Gets or sets the monthly total storage cost. </param>
        /// <param name="costComponents"> Gets the collection of cost components. </param>
        /// <param name="securitySuitability"> Gets the suitability for Microsoft cloud defender. </param>
        /// <param name="migrationGuidelines"> Gets the list of migration guidelines applicable. </param>
        /// <param name="bootType"> Boot type of machine discovered in private data center. </param>
        /// <param name="operatingSystemType"> Operating system as reported by datacenter management solution. </param>
        /// <param name="operatingSystemName"> Operating system as reported by datacenter management solution. </param>
        /// <param name="operatingSystemVersion"> Operating system version as reported by datacenter management solution. </param>
        /// <param name="operatingSystemArchitecture"> Operating system architecture as reported by datacenter management solution. </param>
        /// <param name="createdOn"> When was machine first created. </param>
        /// <param name="updatedOn"> When was machine last updated. </param>
        /// <param name="displayName"> Display Name of the Machine. </param>
        /// <param name="typePropertiesType"> Assessed machine type. </param>
        /// <param name="description"> Description for the machine. </param>
        /// <param name="datacenterMachineArmId"> Data center machine ARM id. </param>
        /// <param name="datacenterManagementServerArmId"> Data center management server ARM id. </param>
        /// <param name="datacenterManagementServerName"> Data center management server name. </param>
        /// <param name="megabytesOfMemory"> Megabytes of memory found allocated for the machine in private data center. </param>
        /// <param name="numberOfCores"> Number of CPU cores found on the machine. </param>
        /// <param name="confidenceRatingInPercentage"> Confidence Rating in Percentage. </param>
        /// <param name="percentageCoresUtilization">
        /// Percentile of Percentage of Cores Utilized noted during time period T.
        ///
        ///    Here N and T are settings on Assessment.
        /// </param>
        /// <param name="percentageMemoryUtilization">
        /// Percentile of Percentage of Memory Utilized noted during time period T.
        ///
        ///     Here N and T are settings on Assessment.
        /// </param>
        /// <param name="suitability">
        /// Gets a value indicating whether machine is suitable for the cloud platform
        /// selected.
        /// </param>
        /// <param name="sizingCriterion"> Assessment sizing criterion. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MigrationAssessedSqlMachineData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string biosGuid, string fqdn, IReadOnlyList<AssessedSqlInstanceSummary> sqlInstances, AssessmentVmSuitabilityDetail? suitabilityDetail, AssessmentVmSuitabilityExplanation? suitabilityExplanation, AssessmentVmSize? recommendedVmSize, AssessmentVmFamily? recommendedVmFamily, AssessmentProductSupportStatus productSupportStatus, int? recommendedVmSizeNumberOfCores, double? recommendedVmSizeMegabytesOfMemory, double? monthlyComputeCost, IReadOnlyDictionary<string, MigrationAssessedDataDisk> disks, IReadOnlyDictionary<string, SqlAssessedNetworkAdapter> networkAdapters, double? monthlyBandwidthCost, double? monthlyStorageCost, IList<AssessmentCostComponent> costComponents, MigrationAssessmentCloudSuitability? securitySuitability, IReadOnlyList<SqlMigrationGuideline> migrationGuidelines, AssessedMachineBootType? bootType, string operatingSystemType, string operatingSystemName, string operatingSystemVersion, GuestOperatingSystemArchitecture? operatingSystemArchitecture, DateTimeOffset? createdOn, DateTimeOffset? updatedOn, string displayName, MigrationAssessedMachineType? typePropertiesType, string description, ResourceIdentifier datacenterMachineArmId, ResourceIdentifier datacenterManagementServerArmId, string datacenterManagementServerName, double? megabytesOfMemory, int? numberOfCores, double? confidenceRatingInPercentage, double? percentageCoresUtilization, double? percentageMemoryUtilization, MigrationAssessmentCloudSuitability? suitability, AssessmentSizingCriterion? sizingCriterion, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            BiosGuid = biosGuid;
            Fqdn = fqdn;
            SqlInstances = sqlInstances;
            SuitabilityDetail = suitabilityDetail;
            SuitabilityExplanation = suitabilityExplanation;
            RecommendedVmSize = recommendedVmSize;
            RecommendedVmFamily = recommendedVmFamily;
            ProductSupportStatus = productSupportStatus;
            RecommendedVmSizeNumberOfCores = recommendedVmSizeNumberOfCores;
            RecommendedVmSizeMegabytesOfMemory = recommendedVmSizeMegabytesOfMemory;
            MonthlyComputeCost = monthlyComputeCost;
            Disks = disks;
            NetworkAdapters = networkAdapters;
            MonthlyBandwidthCost = monthlyBandwidthCost;
            MonthlyStorageCost = monthlyStorageCost;
            CostComponents = costComponents;
            SecuritySuitability = securitySuitability;
            MigrationGuidelines = migrationGuidelines;
            BootType = bootType;
            OperatingSystemType = operatingSystemType;
            OperatingSystemName = operatingSystemName;
            OperatingSystemVersion = operatingSystemVersion;
            OperatingSystemArchitecture = operatingSystemArchitecture;
            CreatedOn = createdOn;
            UpdatedOn = updatedOn;
            DisplayName = displayName;
            TypePropertiesType = typePropertiesType;
            Description = description;
            DatacenterMachineArmId = datacenterMachineArmId;
            DatacenterManagementServerArmId = datacenterManagementServerArmId;
            DatacenterManagementServerName = datacenterManagementServerName;
            MegabytesOfMemory = megabytesOfMemory;
            NumberOfCores = numberOfCores;
            ConfidenceRatingInPercentage = confidenceRatingInPercentage;
            PercentageCoresUtilization = percentageCoresUtilization;
            PercentageMemoryUtilization = percentageMemoryUtilization;
            Suitability = suitability;
            SizingCriterion = sizingCriterion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the BIOS GUID for the machine. </summary>
        public string BiosGuid { get; }
        /// <summary> Gets or sets the FQDN for the machine. </summary>
        public string Fqdn { get; }
        /// <summary> Gets the list of SQL instances discovered on the machine. </summary>
        public IReadOnlyList<AssessedSqlInstanceSummary> SqlInstances { get; }
        /// <summary>
        /// Gets or sets the detailed messages that were set on the machine during
        /// evaluation.
        /// </summary>
        public AssessmentVmSuitabilityDetail? SuitabilityDetail { get; }
        /// <summary> Gets or sets the explanation if machine is not suitable for cloud. </summary>
        public AssessmentVmSuitabilityExplanation? SuitabilityExplanation { get; }
        /// <summary> Gets or sets the Recommended Azure Size for the machine. </summary>
        public AssessmentVmSize? RecommendedVmSize { get; }
        /// <summary> Gets or sets the Recommended Azure VM Family for the machine. </summary>
        public AssessmentVmFamily? RecommendedVmFamily { get; }
        /// <summary> Gets the product support status related details. </summary>
        public AssessmentProductSupportStatus ProductSupportStatus { get; }
        /// <summary> Gets or sets the Number of cores for recommended size. </summary>
        public int? RecommendedVmSizeNumberOfCores { get; }
        /// <summary> Gets or sets the Megabytes of memory for recommended size. </summary>
        public double? RecommendedVmSizeMegabytesOfMemory { get; }
        /// <summary> Gets or sets the monthly compute cost calculated for recommended size. </summary>
        public double? MonthlyComputeCost { get; }
        /// <summary> Gets the list of data disks that were assessed as part of this assessment. </summary>
        public IReadOnlyDictionary<string, MigrationAssessedDataDisk> Disks { get; }
        /// <summary> Gets the list of network adapters that were assessed as part of this assessment. </summary>
        public IReadOnlyDictionary<string, SqlAssessedNetworkAdapter> NetworkAdapters { get; }
        /// <summary> Gets or sets the monthly networking cost. </summary>
        public double? MonthlyBandwidthCost { get; }
        /// <summary> Gets or sets the monthly total storage cost. </summary>
        public double? MonthlyStorageCost { get; }
        /// <summary> Gets the collection of cost components. </summary>
        public IList<AssessmentCostComponent> CostComponents { get; }
        /// <summary> Gets the suitability for Microsoft cloud defender. </summary>
        public MigrationAssessmentCloudSuitability? SecuritySuitability { get; }
        /// <summary> Gets the list of migration guidelines applicable. </summary>
        public IReadOnlyList<SqlMigrationGuideline> MigrationGuidelines { get; }
        /// <summary> Boot type of machine discovered in private data center. </summary>
        public AssessedMachineBootType? BootType { get; }
        /// <summary> Operating system as reported by datacenter management solution. </summary>
        public string OperatingSystemType { get; }
        /// <summary> Operating system as reported by datacenter management solution. </summary>
        public string OperatingSystemName { get; }
        /// <summary> Operating system version as reported by datacenter management solution. </summary>
        public string OperatingSystemVersion { get; }
        /// <summary> Operating system architecture as reported by datacenter management solution. </summary>
        public GuestOperatingSystemArchitecture? OperatingSystemArchitecture { get; }
        /// <summary> When was machine first created. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> When was machine last updated. </summary>
        public DateTimeOffset? UpdatedOn { get; }
        /// <summary> Display Name of the Machine. </summary>
        public string DisplayName { get; }
        /// <summary> Assessed machine type. </summary>
        public MigrationAssessedMachineType? TypePropertiesType { get; }
        /// <summary> Description for the machine. </summary>
        public string Description { get; }
        /// <summary> Data center machine ARM id. </summary>
        public ResourceIdentifier DatacenterMachineArmId { get; }
        /// <summary> Data center management server ARM id. </summary>
        public ResourceIdentifier DatacenterManagementServerArmId { get; }
        /// <summary> Data center management server name. </summary>
        public string DatacenterManagementServerName { get; }
        /// <summary> Megabytes of memory found allocated for the machine in private data center. </summary>
        public double? MegabytesOfMemory { get; }
        /// <summary> Number of CPU cores found on the machine. </summary>
        public int? NumberOfCores { get; }
        /// <summary> Confidence Rating in Percentage. </summary>
        public double? ConfidenceRatingInPercentage { get; }
        /// <summary>
        /// Percentile of Percentage of Cores Utilized noted during time period T.
        ///
        ///    Here N and T are settings on Assessment.
        /// </summary>
        public double? PercentageCoresUtilization { get; }
        /// <summary>
        /// Percentile of Percentage of Memory Utilized noted during time period T.
        ///
        ///     Here N and T are settings on Assessment.
        /// </summary>
        public double? PercentageMemoryUtilization { get; }
        /// <summary>
        /// Gets a value indicating whether machine is suitable for the cloud platform
        /// selected.
        /// </summary>
        public MigrationAssessmentCloudSuitability? Suitability { get; }
        /// <summary> Assessment sizing criterion. </summary>
        public AssessmentSizingCriterion? SizingCriterion { get; }
    }
}
