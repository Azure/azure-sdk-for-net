// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migration.Assessment.Models
{
    /// <summary> The ManagedDiskSkuDtoDiskRedundancy. </summary>
    public readonly partial struct ManagedDiskSkuDtoDiskRedundancy : IEquatable<ManagedDiskSkuDtoDiskRedundancy>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ManagedDiskSkuDtoDiskRedundancy"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ManagedDiskSkuDtoDiskRedundancy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string LrsValue = "LRS";
        private const string ZrsValue = "ZRS";

        /// <summary> Unknown. </summary>
        public static ManagedDiskSkuDtoDiskRedundancy Unknown { get; } = new ManagedDiskSkuDtoDiskRedundancy(UnknownValue);
        /// <summary> LRS. </summary>
        public static ManagedDiskSkuDtoDiskRedundancy Lrs { get; } = new ManagedDiskSkuDtoDiskRedundancy(LrsValue);
        /// <summary> ZRS. </summary>
        public static ManagedDiskSkuDtoDiskRedundancy Zrs { get; } = new ManagedDiskSkuDtoDiskRedundancy(ZrsValue);
        /// <summary> Determines if two <see cref="ManagedDiskSkuDtoDiskRedundancy"/> values are the same. </summary>
        public static bool operator ==(ManagedDiskSkuDtoDiskRedundancy left, ManagedDiskSkuDtoDiskRedundancy right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ManagedDiskSkuDtoDiskRedundancy"/> values are not the same. </summary>
        public static bool operator !=(ManagedDiskSkuDtoDiskRedundancy left, ManagedDiskSkuDtoDiskRedundancy right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ManagedDiskSkuDtoDiskRedundancy"/>. </summary>
        public static implicit operator ManagedDiskSkuDtoDiskRedundancy(string value) => new ManagedDiskSkuDtoDiskRedundancy(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ManagedDiskSkuDtoDiskRedundancy other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ManagedDiskSkuDtoDiskRedundancy other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
