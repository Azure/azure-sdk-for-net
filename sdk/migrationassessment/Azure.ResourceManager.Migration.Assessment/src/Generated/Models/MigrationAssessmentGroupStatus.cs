// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migration.Assessment.Models
{
    /// <summary> The MigrationAssessmentGroupStatus. </summary>
    public readonly partial struct MigrationAssessmentGroupStatus : IEquatable<MigrationAssessmentGroupStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MigrationAssessmentGroupStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MigrationAssessmentGroupStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatedValue = "Created";
        private const string UpdatedValue = "Updated";
        private const string RunningValue = "Running";
        private const string CompletedValue = "Completed";
        private const string InvalidValue = "Invalid";

        /// <summary> Created. </summary>
        public static MigrationAssessmentGroupStatus Created { get; } = new MigrationAssessmentGroupStatus(CreatedValue);
        /// <summary> Updated. </summary>
        public static MigrationAssessmentGroupStatus Updated { get; } = new MigrationAssessmentGroupStatus(UpdatedValue);
        /// <summary> Running. </summary>
        public static MigrationAssessmentGroupStatus Running { get; } = new MigrationAssessmentGroupStatus(RunningValue);
        /// <summary> Completed. </summary>
        public static MigrationAssessmentGroupStatus Completed { get; } = new MigrationAssessmentGroupStatus(CompletedValue);
        /// <summary> Invalid. </summary>
        public static MigrationAssessmentGroupStatus Invalid { get; } = new MigrationAssessmentGroupStatus(InvalidValue);
        /// <summary> Determines if two <see cref="MigrationAssessmentGroupStatus"/> values are the same. </summary>
        public static bool operator ==(MigrationAssessmentGroupStatus left, MigrationAssessmentGroupStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MigrationAssessmentGroupStatus"/> values are not the same. </summary>
        public static bool operator !=(MigrationAssessmentGroupStatus left, MigrationAssessmentGroupStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MigrationAssessmentGroupStatus"/>. </summary>
        public static implicit operator MigrationAssessmentGroupStatus(string value) => new MigrationAssessmentGroupStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MigrationAssessmentGroupStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MigrationAssessmentGroupStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
