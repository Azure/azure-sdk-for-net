// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migration.Assessment.Models
{
    /// <summary> Cloud Suitability for Azure. </summary>
    public readonly partial struct MigrationAssessmentCloudSuitability : IEquatable<MigrationAssessmentCloudSuitability>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MigrationAssessmentCloudSuitability"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MigrationAssessmentCloudSuitability(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string NotSuitableValue = "NotSuitable";
        private const string SuitableValue = "Suitable";
        private const string ConditionallySuitableValue = "ConditionallySuitable";
        private const string ReadinessUnknownValue = "ReadinessUnknown";

        /// <summary> Unknown. Indicates missing data. </summary>
        public static MigrationAssessmentCloudSuitability Unknown { get; } = new MigrationAssessmentCloudSuitability(UnknownValue);
        /// <summary> Not Suitable for Azure. </summary>
        public static MigrationAssessmentCloudSuitability NotSuitable { get; } = new MigrationAssessmentCloudSuitability(NotSuitableValue);
        /// <summary> Suitable for Azure. </summary>
        public static MigrationAssessmentCloudSuitability Suitable { get; } = new MigrationAssessmentCloudSuitability(SuitableValue);
        /// <summary> Conditionally Suitable for Azure. </summary>
        public static MigrationAssessmentCloudSuitability ConditionallySuitable { get; } = new MigrationAssessmentCloudSuitability(ConditionallySuitableValue);
        /// <summary> Unknown Readiness for Azure. </summary>
        public static MigrationAssessmentCloudSuitability ReadinessUnknown { get; } = new MigrationAssessmentCloudSuitability(ReadinessUnknownValue);
        /// <summary> Determines if two <see cref="MigrationAssessmentCloudSuitability"/> values are the same. </summary>
        public static bool operator ==(MigrationAssessmentCloudSuitability left, MigrationAssessmentCloudSuitability right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MigrationAssessmentCloudSuitability"/> values are not the same. </summary>
        public static bool operator !=(MigrationAssessmentCloudSuitability left, MigrationAssessmentCloudSuitability right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MigrationAssessmentCloudSuitability"/>. </summary>
        public static implicit operator MigrationAssessmentCloudSuitability(string value) => new MigrationAssessmentCloudSuitability(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MigrationAssessmentCloudSuitability other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MigrationAssessmentCloudSuitability other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
