// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migration.Assessment.Models
{
    /// <summary> The AssessmentVmFamily. </summary>
    public readonly partial struct AssessmentVmFamily : IEquatable<AssessmentVmFamily>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AssessmentVmFamily"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AssessmentVmFamily(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string BasicA0A4Value = "Basic_A0_A4";
        private const string StandardA0A7Value = "Standard_A0_A7";
        private const string StandardA8A11Value = "Standard_A8_A11";
        private const string Av2SeriesValue = "Av2_series";
        private const string DSeriesValue = "D_series";
        private const string Dv2SeriesValue = "Dv2_series";
        private const string DSSeriesValue = "DS_series";
        private const string DSv2SeriesValue = "DSv2_series";
        private const string FSeriesValue = "F_series";
        private const string FsSeriesValue = "Fs_series";
        private const string GSeriesValue = "G_series";
        private const string GSSeriesValue = "GS_series";
        private const string HSeriesValue = "H_series";
        private const string LsSeriesValue = "Ls_series";
        private const string Dsv3SeriesValue = "Dsv3_series";
        private const string Dv3SeriesValue = "Dv3_series";
        private const string Fsv2SeriesValue = "Fsv2_series";
        private const string Ev3SeriesValue = "Ev3_series";
        private const string Esv3SeriesValue = "Esv3_series";
        private const string MSeriesValue = "M_series";
        private const string DCSeriesValue = "DC_Series";
        private const string Lsv2SeriesValue = "Lsv2_series";
        private const string Ev4SeriesValue = "Ev4_series";
        private const string Esv4SeriesValue = "Esv4_series";
        private const string Edv4SeriesValue = "Edv4_series";
        private const string Edsv4SeriesValue = "Edsv4_series";
        private const string Dv4SeriesValue = "Dv4_series";
        private const string Dsv4SeriesValue = "Dsv4_series";
        private const string Ddv4SeriesValue = "Ddv4_series";
        private const string Ddsv4SeriesValue = "Ddsv4_series";
        private const string Easv4SeriesValue = "Easv4_series";
        private const string Dasv4SeriesValue = "Dasv4_series";
        private const string Mv2SeriesValue = "Mv2_series";
        private const string Eav4SeriesValue = "Eav4_series";
        private const string Dav4SeriesValue = "Dav4_series";
        private const string Msv2SeriesValue = "Msv2_series";
        private const string Mdsv2SeriesValue = "Mdsv2_series";
        private const string Dv5SeriesValue = "Dv5_series";
        private const string Dsv5SeriesValue = "Dsv5_series";
        private const string Ddv5SeriesValue = "Ddv5_series";
        private const string Ddsv5SeriesValue = "Ddsv5_series";
        private const string Dasv5SeriesValue = "Dasv5_series";
        private const string Dadsv5SeriesValue = "Dadsv5_series";
        private const string Ev5SeriesValue = "Ev5_series";
        private const string Esv5SeriesValue = "Esv5_series";
        private const string Edv5SeriesValue = "Edv5_series";
        private const string Edsv5SeriesValue = "Edsv5_series";
        private const string Easv5SeriesValue = "Easv5_series";
        private const string Eadsv5SeriesValue = "Eadsv5_series";
        private const string Ebsv5SeriesValue = "Ebsv5_series";
        private const string Ebdsv5SeriesValue = "Ebdsv5_series";

        /// <summary> Unknown. </summary>
        public static AssessmentVmFamily Unknown { get; } = new AssessmentVmFamily(UnknownValue);
        /// <summary> Basic_A0_A4. </summary>
        public static AssessmentVmFamily BasicA0A4 { get; } = new AssessmentVmFamily(BasicA0A4Value);
        /// <summary> Standard_A0_A7. </summary>
        public static AssessmentVmFamily StandardA0A7 { get; } = new AssessmentVmFamily(StandardA0A7Value);
        /// <summary> Standard_A8_A11. </summary>
        public static AssessmentVmFamily StandardA8A11 { get; } = new AssessmentVmFamily(StandardA8A11Value);
        /// <summary> Av2_series. </summary>
        public static AssessmentVmFamily Av2Series { get; } = new AssessmentVmFamily(Av2SeriesValue);
        /// <summary> D_series. </summary>
        public static AssessmentVmFamily DSeries { get; } = new AssessmentVmFamily(DSeriesValue);
        /// <summary> Dv2_series. </summary>
        public static AssessmentVmFamily Dv2Series { get; } = new AssessmentVmFamily(Dv2SeriesValue);
        /// <summary> DS_series. </summary>
        public static AssessmentVmFamily DSSeries { get; } = new AssessmentVmFamily(DSSeriesValue);
        /// <summary> DSv2_series. </summary>
        public static AssessmentVmFamily DSv2Series { get; } = new AssessmentVmFamily(DSv2SeriesValue);
        /// <summary> F_series. </summary>
        public static AssessmentVmFamily FSeries { get; } = new AssessmentVmFamily(FSeriesValue);
        /// <summary> Fs_series. </summary>
        public static AssessmentVmFamily FsSeries { get; } = new AssessmentVmFamily(FsSeriesValue);
        /// <summary> G_series. </summary>
        public static AssessmentVmFamily GSeries { get; } = new AssessmentVmFamily(GSeriesValue);
        /// <summary> GS_series. </summary>
        public static AssessmentVmFamily GSSeries { get; } = new AssessmentVmFamily(GSSeriesValue);
        /// <summary> H_series. </summary>
        public static AssessmentVmFamily HSeries { get; } = new AssessmentVmFamily(HSeriesValue);
        /// <summary> Ls_series. </summary>
        public static AssessmentVmFamily LsSeries { get; } = new AssessmentVmFamily(LsSeriesValue);
        /// <summary> Dsv3_series. </summary>
        public static AssessmentVmFamily Dsv3Series { get; } = new AssessmentVmFamily(Dsv3SeriesValue);
        /// <summary> Dv3_series. </summary>
        public static AssessmentVmFamily Dv3Series { get; } = new AssessmentVmFamily(Dv3SeriesValue);
        /// <summary> Fsv2_series. </summary>
        public static AssessmentVmFamily Fsv2Series { get; } = new AssessmentVmFamily(Fsv2SeriesValue);
        /// <summary> Ev3_series. </summary>
        public static AssessmentVmFamily Ev3Series { get; } = new AssessmentVmFamily(Ev3SeriesValue);
        /// <summary> Esv3_series. </summary>
        public static AssessmentVmFamily Esv3Series { get; } = new AssessmentVmFamily(Esv3SeriesValue);
        /// <summary> M_series. </summary>
        public static AssessmentVmFamily MSeries { get; } = new AssessmentVmFamily(MSeriesValue);
        /// <summary> DC_Series. </summary>
        public static AssessmentVmFamily DCSeries { get; } = new AssessmentVmFamily(DCSeriesValue);
        /// <summary> Lsv2_series. </summary>
        public static AssessmentVmFamily Lsv2Series { get; } = new AssessmentVmFamily(Lsv2SeriesValue);
        /// <summary> Ev4_series. </summary>
        public static AssessmentVmFamily Ev4Series { get; } = new AssessmentVmFamily(Ev4SeriesValue);
        /// <summary> Esv4_series. </summary>
        public static AssessmentVmFamily Esv4Series { get; } = new AssessmentVmFamily(Esv4SeriesValue);
        /// <summary> Edv4_series. </summary>
        public static AssessmentVmFamily Edv4Series { get; } = new AssessmentVmFamily(Edv4SeriesValue);
        /// <summary> Edsv4_series. </summary>
        public static AssessmentVmFamily Edsv4Series { get; } = new AssessmentVmFamily(Edsv4SeriesValue);
        /// <summary> Dv4_series. </summary>
        public static AssessmentVmFamily Dv4Series { get; } = new AssessmentVmFamily(Dv4SeriesValue);
        /// <summary> Dsv4_series. </summary>
        public static AssessmentVmFamily Dsv4Series { get; } = new AssessmentVmFamily(Dsv4SeriesValue);
        /// <summary> Ddv4_series. </summary>
        public static AssessmentVmFamily Ddv4Series { get; } = new AssessmentVmFamily(Ddv4SeriesValue);
        /// <summary> Ddsv4_series. </summary>
        public static AssessmentVmFamily Ddsv4Series { get; } = new AssessmentVmFamily(Ddsv4SeriesValue);
        /// <summary> Easv4_series. </summary>
        public static AssessmentVmFamily Easv4Series { get; } = new AssessmentVmFamily(Easv4SeriesValue);
        /// <summary> Dasv4_series. </summary>
        public static AssessmentVmFamily Dasv4Series { get; } = new AssessmentVmFamily(Dasv4SeriesValue);
        /// <summary> Mv2_series. </summary>
        public static AssessmentVmFamily Mv2Series { get; } = new AssessmentVmFamily(Mv2SeriesValue);
        /// <summary> Eav4_series. </summary>
        public static AssessmentVmFamily Eav4Series { get; } = new AssessmentVmFamily(Eav4SeriesValue);
        /// <summary> Dav4_series. </summary>
        public static AssessmentVmFamily Dav4Series { get; } = new AssessmentVmFamily(Dav4SeriesValue);
        /// <summary> Msv2_series. </summary>
        public static AssessmentVmFamily Msv2Series { get; } = new AssessmentVmFamily(Msv2SeriesValue);
        /// <summary> Mdsv2_series. </summary>
        public static AssessmentVmFamily Mdsv2Series { get; } = new AssessmentVmFamily(Mdsv2SeriesValue);
        /// <summary> Dv5_series. </summary>
        public static AssessmentVmFamily Dv5Series { get; } = new AssessmentVmFamily(Dv5SeriesValue);
        /// <summary> Dsv5_series. </summary>
        public static AssessmentVmFamily Dsv5Series { get; } = new AssessmentVmFamily(Dsv5SeriesValue);
        /// <summary> Ddv5_series. </summary>
        public static AssessmentVmFamily Ddv5Series { get; } = new AssessmentVmFamily(Ddv5SeriesValue);
        /// <summary> Ddsv5_series. </summary>
        public static AssessmentVmFamily Ddsv5Series { get; } = new AssessmentVmFamily(Ddsv5SeriesValue);
        /// <summary> Dasv5_series. </summary>
        public static AssessmentVmFamily Dasv5Series { get; } = new AssessmentVmFamily(Dasv5SeriesValue);
        /// <summary> Dadsv5_series. </summary>
        public static AssessmentVmFamily Dadsv5Series { get; } = new AssessmentVmFamily(Dadsv5SeriesValue);
        /// <summary> Ev5_series. </summary>
        public static AssessmentVmFamily Ev5Series { get; } = new AssessmentVmFamily(Ev5SeriesValue);
        /// <summary> Esv5_series. </summary>
        public static AssessmentVmFamily Esv5Series { get; } = new AssessmentVmFamily(Esv5SeriesValue);
        /// <summary> Edv5_series. </summary>
        public static AssessmentVmFamily Edv5Series { get; } = new AssessmentVmFamily(Edv5SeriesValue);
        /// <summary> Edsv5_series. </summary>
        public static AssessmentVmFamily Edsv5Series { get; } = new AssessmentVmFamily(Edsv5SeriesValue);
        /// <summary> Easv5_series. </summary>
        public static AssessmentVmFamily Easv5Series { get; } = new AssessmentVmFamily(Easv5SeriesValue);
        /// <summary> Eadsv5_series. </summary>
        public static AssessmentVmFamily Eadsv5Series { get; } = new AssessmentVmFamily(Eadsv5SeriesValue);
        /// <summary> Ebsv5_series. </summary>
        public static AssessmentVmFamily Ebsv5Series { get; } = new AssessmentVmFamily(Ebsv5SeriesValue);
        /// <summary> Ebdsv5_series. </summary>
        public static AssessmentVmFamily Ebdsv5Series { get; } = new AssessmentVmFamily(Ebdsv5SeriesValue);
        /// <summary> Determines if two <see cref="AssessmentVmFamily"/> values are the same. </summary>
        public static bool operator ==(AssessmentVmFamily left, AssessmentVmFamily right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AssessmentVmFamily"/> values are not the same. </summary>
        public static bool operator !=(AssessmentVmFamily left, AssessmentVmFamily right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AssessmentVmFamily"/>. </summary>
        public static implicit operator AssessmentVmFamily(string value) => new AssessmentVmFamily(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AssessmentVmFamily other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AssessmentVmFamily other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
