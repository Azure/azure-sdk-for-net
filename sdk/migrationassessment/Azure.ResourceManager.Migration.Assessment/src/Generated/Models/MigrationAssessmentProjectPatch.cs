// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Migration.Assessment.Models
{
    /// <summary> The type used for update operations of the AssessmentProject. </summary>
    public partial class MigrationAssessmentProjectPatch
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MigrationAssessmentProjectPatch"/>. </summary>
        public MigrationAssessmentProjectPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="MigrationAssessmentProjectPatch"/>. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="assessmentSolutionId"> Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects. </param>
        /// <param name="projectStatus"> Assessment project status. </param>
        /// <param name="customerWorkspaceId"> The ARM id of service map workspace created by customer. </param>
        /// <param name="customerWorkspaceLocation"> Location of service map workspace created by customer. </param>
        /// <param name="publicNetworkAccess">
        /// This value can be set to 'enabled' to avoid breaking changes on existing
        /// customer resources and templates. If set to 'disabled', traffic over public
        /// interface is not allowed, and private endpoint connections would be the
        /// exclusive access method.
        /// </param>
        /// <param name="customerStorageAccountArmId">
        /// The ARM id of the storage account used for interactions when public access is
        /// disabled.
        /// </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MigrationAssessmentProjectPatch(IDictionary<string, string> tags, ResourceIdentifier assessmentSolutionId, AssessmentProjectStatus? projectStatus, ResourceIdentifier customerWorkspaceId, string customerWorkspaceLocation, string publicNetworkAccess, ResourceIdentifier customerStorageAccountArmId, MigrationAssessmentProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Tags = tags;
            AssessmentSolutionId = assessmentSolutionId;
            ProjectStatus = projectStatus;
            CustomerWorkspaceId = customerWorkspaceId;
            CustomerWorkspaceLocation = customerWorkspaceLocation;
            PublicNetworkAccess = publicNetworkAccess;
            CustomerStorageAccountArmId = customerStorageAccountArmId;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects. </summary>
        public ResourceIdentifier AssessmentSolutionId { get; set; }
        /// <summary> Assessment project status. </summary>
        public AssessmentProjectStatus? ProjectStatus { get; set; }
        /// <summary> The ARM id of service map workspace created by customer. </summary>
        public ResourceIdentifier CustomerWorkspaceId { get; set; }
        /// <summary> Location of service map workspace created by customer. </summary>
        public string CustomerWorkspaceLocation { get; set; }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing
        /// customer resources and templates. If set to 'disabled', traffic over public
        /// interface is not allowed, and private endpoint connections would be the
        /// exclusive access method.
        /// </summary>
        public string PublicNetworkAccess { get; set; }
        /// <summary>
        /// The ARM id of the storage account used for interactions when public access is
        /// disabled.
        /// </summary>
        public ResourceIdentifier CustomerStorageAccountArmId { get; set; }
        /// <summary> The status of the last operation. </summary>
        public MigrationAssessmentProvisioningState? ProvisioningState { get; set; }
    }
}
