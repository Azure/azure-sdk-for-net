// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migration.Assessment.Models
{
    /// <summary> The MigrationAssessmentTargetType. </summary>
    public readonly partial struct MigrationAssessmentTargetType : IEquatable<MigrationAssessmentTargetType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MigrationAssessmentTargetType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MigrationAssessmentTargetType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string RecommendedValue = "Recommended";
        private const string AzureSqlDatabaseValue = "AzureSqlDatabase";
        private const string AzureSqlManagedInstanceValue = "AzureSqlManagedInstance";
        private const string AzureSqlVirtualMachineValue = "AzureSqlVirtualMachine";
        private const string AzureVirtualMachineValue = "AzureVirtualMachine";

        /// <summary> Unknown. </summary>
        public static MigrationAssessmentTargetType Unknown { get; } = new MigrationAssessmentTargetType(UnknownValue);
        /// <summary> Recommended. </summary>
        public static MigrationAssessmentTargetType Recommended { get; } = new MigrationAssessmentTargetType(RecommendedValue);
        /// <summary> AzureSqlDatabase. </summary>
        public static MigrationAssessmentTargetType AzureSqlDatabase { get; } = new MigrationAssessmentTargetType(AzureSqlDatabaseValue);
        /// <summary> AzureSqlManagedInstance. </summary>
        public static MigrationAssessmentTargetType AzureSqlManagedInstance { get; } = new MigrationAssessmentTargetType(AzureSqlManagedInstanceValue);
        /// <summary> AzureSqlVirtualMachine. </summary>
        public static MigrationAssessmentTargetType AzureSqlVirtualMachine { get; } = new MigrationAssessmentTargetType(AzureSqlVirtualMachineValue);
        /// <summary> AzureVirtualMachine. </summary>
        public static MigrationAssessmentTargetType AzureVirtualMachine { get; } = new MigrationAssessmentTargetType(AzureVirtualMachineValue);
        /// <summary> Determines if two <see cref="MigrationAssessmentTargetType"/> values are the same. </summary>
        public static bool operator ==(MigrationAssessmentTargetType left, MigrationAssessmentTargetType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MigrationAssessmentTargetType"/> values are not the same. </summary>
        public static bool operator !=(MigrationAssessmentTargetType left, MigrationAssessmentTargetType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MigrationAssessmentTargetType"/>. </summary>
        public static implicit operator MigrationAssessmentTargetType(string value) => new MigrationAssessmentTargetType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MigrationAssessmentTargetType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MigrationAssessmentTargetType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
