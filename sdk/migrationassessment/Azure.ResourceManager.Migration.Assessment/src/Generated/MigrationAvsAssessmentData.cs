// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Migration.Assessment.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Migration.Assessment
{
    /// <summary>
    /// A class representing the MigrationAvsAssessment data model.
    /// AVS assessment resource.
    /// </summary>
    public partial class MigrationAvsAssessmentData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MigrationAvsAssessmentData"/>. </summary>
        public MigrationAvsAssessmentData()
        {
            AssessmentErrorSummary = new ChangeTrackingDictionary<string, int>();
            SuitabilitySummary = new ChangeTrackingDictionary<string, int>();
        }

        /// <summary> Initializes a new instance of <see cref="MigrationAvsAssessmentData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="assessmentErrorSummary">
        /// Gets the assessment error summary.
        ///             This is the number of machines
        /// affected by each type of error in this assessment.
        /// </param>
        /// <param name="failuresToTolerateAndRaidLevel"> Failures to tolerate and RAID level in a common property. </param>
        /// <param name="vcpuOversubscription"> VCPU over subscription. </param>
        /// <param name="nodeType"> AVS node type. </param>
        /// <param name="reservedInstance"> Reserved instance. </param>
        /// <param name="totalMonthlyCost"> Total monthly cost. </param>
        /// <param name="suitability"> Gets or sets the Assessment cloud suitability. </param>
        /// <param name="suitabilityExplanation"> Gets or sets the Assessment suitability explanation. </param>
        /// <param name="numberOfNodes"> Recommended number of nodes. </param>
        /// <param name="cpuUtilization"> Predicted CPU utilization. </param>
        /// <param name="ramUtilization"> Predicted RAM utilization. </param>
        /// <param name="storageUtilization"> Predicted storage utilization. </param>
        /// <param name="totalCpuCores"> Predicted total CPU cores used. </param>
        /// <param name="totalRamInGB"> Predicted total RAM used in GB. </param>
        /// <param name="totalStorageInGB"> Predicted total Storage used in GB. </param>
        /// <param name="numberOfMachines"> Number of machines part of the assessment. </param>
        /// <param name="suitabilitySummary"> Cloud suitability summary for all the machines in the assessment. </param>
        /// <param name="memOvercommit"> Memory overcommit. </param>
        /// <param name="dedupeCompression"> De-duplication compression. </param>
        /// <param name="limitingFactor"> Limiting factor. </param>
        /// <param name="isStretchClusterEnabled"> Is Stretch Cluster Enabled. </param>
        /// <param name="groupType"> Gets the group type for the assessment. </param>
        /// <param name="assessmentType"> Assessment type of the assessment. </param>
        /// <param name="azureLocation"> Azure Location or Azure region where to which the machines will be migrated. </param>
        /// <param name="azureOfferCode"> Azure Offer code according to which cost estimation is done. </param>
        /// <param name="currency"> Currency in which prices should be reported. </param>
        /// <param name="scalingFactor">
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </param>
        /// <param name="percentile">
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </param>
        /// <param name="timeRange">
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </param>
        /// <param name="perfDataStartOn"> Gets or sets the start time to consider performance data for assessment. </param>
        /// <param name="perfDataEndOn"> Gets or sets the end time to consider performance data for assessment. </param>
        /// <param name="stage"> User configurable setting to display the Stage of Assessment. </param>
        /// <param name="discountPercentage"> Custom discount percentage. </param>
        /// <param name="sizingCriterion"> Assessment sizing criterion. </param>
        /// <param name="confidenceRatingInPercentage"> Confidence Rating in Percentage. </param>
        /// <param name="pricesQueriedOn">
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601
        /// format.
        /// </param>
        /// <param name="createdOn"> Date and Time when assessment was created. </param>
        /// <param name="updatedOn"> Date and Time when assessment was last updated. </param>
        /// <param name="status"> Whether assessment is in valid state and all machines have been assessed. </param>
        /// <param name="schemaVersion"> Schema version. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MigrationAvsAssessmentData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, MigrationAssessmentProvisioningState? provisioningState, IReadOnlyDictionary<string, int> assessmentErrorSummary, FttAndRaidLevel? failuresToTolerateAndRaidLevel, double? vcpuOversubscription, AssessmentAvsNodeType? nodeType, AssessmentReservedInstance? reservedInstance, double? totalMonthlyCost, MigrationAssessmentCloudSuitability? suitability, AvsSuitabilityExplanation? suitabilityExplanation, int? numberOfNodes, double? cpuUtilization, double? ramUtilization, double? storageUtilization, double? totalCpuCores, double? totalRamInGB, double? totalStorageInGB, int? numberOfMachines, IReadOnlyDictionary<string, int> suitabilitySummary, double? memOvercommit, double? dedupeCompression, string limitingFactor, bool? isStretchClusterEnabled, MigrationAssessmentGroupType? groupType, MigrationAssessmentType? assessmentType, AzureLocation? azureLocation, AssessmentOfferCode? azureOfferCode, AssessmentCurrency? currency, double? scalingFactor, PercentileOfUtilization? percentile, AssessmentTimeRange? timeRange, DateTimeOffset? perfDataStartOn, DateTimeOffset? perfDataEndOn, MigrationAssessmentStage? stage, double? discountPercentage, AssessmentSizingCriterion? sizingCriterion, double? confidenceRatingInPercentage, DateTimeOffset? pricesQueriedOn, DateTimeOffset? createdOn, DateTimeOffset? updatedOn, MigrationAssessmentStatus? status, string schemaVersion, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            AssessmentErrorSummary = assessmentErrorSummary;
            FailuresToTolerateAndRaidLevel = failuresToTolerateAndRaidLevel;
            VcpuOversubscription = vcpuOversubscription;
            NodeType = nodeType;
            ReservedInstance = reservedInstance;
            TotalMonthlyCost = totalMonthlyCost;
            Suitability = suitability;
            SuitabilityExplanation = suitabilityExplanation;
            NumberOfNodes = numberOfNodes;
            CpuUtilization = cpuUtilization;
            RamUtilization = ramUtilization;
            StorageUtilization = storageUtilization;
            TotalCpuCores = totalCpuCores;
            TotalRamInGB = totalRamInGB;
            TotalStorageInGB = totalStorageInGB;
            NumberOfMachines = numberOfMachines;
            SuitabilitySummary = suitabilitySummary;
            MemOvercommit = memOvercommit;
            DedupeCompression = dedupeCompression;
            LimitingFactor = limitingFactor;
            IsStretchClusterEnabled = isStretchClusterEnabled;
            GroupType = groupType;
            AssessmentType = assessmentType;
            AzureLocation = azureLocation;
            AzureOfferCode = azureOfferCode;
            Currency = currency;
            ScalingFactor = scalingFactor;
            Percentile = percentile;
            TimeRange = timeRange;
            PerfDataStartOn = perfDataStartOn;
            PerfDataEndOn = perfDataEndOn;
            Stage = stage;
            DiscountPercentage = discountPercentage;
            SizingCriterion = sizingCriterion;
            ConfidenceRatingInPercentage = confidenceRatingInPercentage;
            PricesQueriedOn = pricesQueriedOn;
            CreatedOn = createdOn;
            UpdatedOn = updatedOn;
            Status = status;
            SchemaVersion = schemaVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The status of the last operation. </summary>
        public MigrationAssessmentProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Gets the assessment error summary.
        ///             This is the number of machines
        /// affected by each type of error in this assessment.
        /// </summary>
        public IReadOnlyDictionary<string, int> AssessmentErrorSummary { get; }
        /// <summary> Failures to tolerate and RAID level in a common property. </summary>
        public FttAndRaidLevel? FailuresToTolerateAndRaidLevel { get; set; }
        /// <summary> VCPU over subscription. </summary>
        public double? VcpuOversubscription { get; set; }
        /// <summary> AVS node type. </summary>
        public AssessmentAvsNodeType? NodeType { get; set; }
        /// <summary> Reserved instance. </summary>
        public AssessmentReservedInstance? ReservedInstance { get; set; }
        /// <summary> Total monthly cost. </summary>
        public double? TotalMonthlyCost { get; }
        /// <summary> Gets or sets the Assessment cloud suitability. </summary>
        public MigrationAssessmentCloudSuitability? Suitability { get; }
        /// <summary> Gets or sets the Assessment suitability explanation. </summary>
        public AvsSuitabilityExplanation? SuitabilityExplanation { get; }
        /// <summary> Recommended number of nodes. </summary>
        public int? NumberOfNodes { get; }
        /// <summary> Predicted CPU utilization. </summary>
        public double? CpuUtilization { get; }
        /// <summary> Predicted RAM utilization. </summary>
        public double? RamUtilization { get; }
        /// <summary> Predicted storage utilization. </summary>
        public double? StorageUtilization { get; }
        /// <summary> Predicted total CPU cores used. </summary>
        public double? TotalCpuCores { get; }
        /// <summary> Predicted total RAM used in GB. </summary>
        public double? TotalRamInGB { get; }
        /// <summary> Predicted total Storage used in GB. </summary>
        public double? TotalStorageInGB { get; }
        /// <summary> Number of machines part of the assessment. </summary>
        public int? NumberOfMachines { get; }
        /// <summary> Cloud suitability summary for all the machines in the assessment. </summary>
        public IReadOnlyDictionary<string, int> SuitabilitySummary { get; }
        /// <summary> Memory overcommit. </summary>
        public double? MemOvercommit { get; set; }
        /// <summary> De-duplication compression. </summary>
        public double? DedupeCompression { get; set; }
        /// <summary> Limiting factor. </summary>
        public string LimitingFactor { get; }
        /// <summary> Is Stretch Cluster Enabled. </summary>
        public bool? IsStretchClusterEnabled { get; set; }
        /// <summary> Gets the group type for the assessment. </summary>
        public MigrationAssessmentGroupType? GroupType { get; }
        /// <summary> Assessment type of the assessment. </summary>
        public MigrationAssessmentType? AssessmentType { get; }
        /// <summary> Azure Location or Azure region where to which the machines will be migrated. </summary>
        public AzureLocation? AzureLocation { get; set; }
        /// <summary> Azure Offer code according to which cost estimation is done. </summary>
        public AssessmentOfferCode? AzureOfferCode { get; set; }
        /// <summary> Currency in which prices should be reported. </summary>
        public AssessmentCurrency? Currency { get; set; }
        /// <summary>
        /// Percentage of buffer that user wants on performance metrics when recommending
        /// Azure sizes.
        /// </summary>
        public double? ScalingFactor { get; set; }
        /// <summary>
        /// Percentile of the utilization data values to be considered while assessing
        /// machines.
        /// </summary>
        public PercentileOfUtilization? Percentile { get; set; }
        /// <summary>
        /// Time Range for which the historic utilization data should be considered for
        /// assessment.
        /// </summary>
        public AssessmentTimeRange? TimeRange { get; set; }
        /// <summary> Gets or sets the start time to consider performance data for assessment. </summary>
        public DateTimeOffset? PerfDataStartOn { get; set; }
        /// <summary> Gets or sets the end time to consider performance data for assessment. </summary>
        public DateTimeOffset? PerfDataEndOn { get; set; }
        /// <summary> User configurable setting to display the Stage of Assessment. </summary>
        public MigrationAssessmentStage? Stage { get; }
        /// <summary> Custom discount percentage. </summary>
        public double? DiscountPercentage { get; set; }
        /// <summary> Assessment sizing criterion. </summary>
        public AssessmentSizingCriterion? SizingCriterion { get; set; }
        /// <summary> Confidence Rating in Percentage. </summary>
        public double? ConfidenceRatingInPercentage { get; }
        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601
        /// format.
        /// </summary>
        public DateTimeOffset? PricesQueriedOn { get; }
        /// <summary> Date and Time when assessment was created. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Date and Time when assessment was last updated. </summary>
        public DateTimeOffset? UpdatedOn { get; }
        /// <summary> Whether assessment is in valid state and all machines have been assessed. </summary>
        public MigrationAssessmentStatus? Status { get; }
        /// <summary> Schema version. </summary>
        public string SchemaVersion { get; }
    }
}
