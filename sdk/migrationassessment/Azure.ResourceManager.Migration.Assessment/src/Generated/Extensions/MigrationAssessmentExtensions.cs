// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.ResourceManager.Migration.Assessment.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Migration.Assessment
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Migration.Assessment. </summary>
    public static partial class MigrationAssessmentExtensions
    {
        private static MockableMigrationAssessmentArmClient GetMockableMigrationAssessmentArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableMigrationAssessmentArmClient(client0));
        }

        private static MockableMigrationAssessmentResourceGroupResource GetMockableMigrationAssessmentResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableMigrationAssessmentResourceGroupResource(client, resource.Id));
        }

        private static MockableMigrationAssessmentSubscriptionResource GetMockableMigrationAssessmentSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableMigrationAssessmentSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentProjectResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentProjectResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentProjectResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentProjectResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentProjectResource"/> object. </returns>
        public static MigrationAssessmentProjectResource GetMigrationAssessmentProjectResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentProjectResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentOptionResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentOptionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentOptionResource"/> object. </returns>
        public static MigrationAssessmentOptionResource GetMigrationAssessmentOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentOptionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAvsAssessmentOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAvsAssessmentOptionResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAvsAssessmentOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAvsAssessmentOptionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAvsAssessmentOptionResource"/> object. </returns>
        public static MigrationAvsAssessmentOptionResource GetMigrationAvsAssessmentOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAvsAssessmentOptionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentGroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentGroupResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentGroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentGroupResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentGroupResource"/> object. </returns>
        public static MigrationAssessmentGroupResource GetMigrationAssessmentGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentGroupResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentResource"/> object. </returns>
        public static MigrationAssessmentResource GetMigrationAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessedMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessedMachineResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessedMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessedMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessedMachineResource"/> object. </returns>
        public static MigrationAssessedMachineResource GetMigrationAssessedMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessedMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAvsAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAvsAssessmentResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAvsAssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAvsAssessmentResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAvsAssessmentResource"/> object. </returns>
        public static MigrationAvsAssessmentResource GetMigrationAvsAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAvsAssessmentResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAvsAssessedMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAvsAssessedMachineResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAvsAssessedMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAvsAssessedMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAvsAssessedMachineResource"/> object. </returns>
        public static MigrationAvsAssessedMachineResource GetMigrationAvsAssessedMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAvsAssessedMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationSqlAssessmentV2Resource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationSqlAssessmentV2Resource.CreateResourceIdentifier" /> to create a <see cref="MigrationSqlAssessmentV2Resource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationSqlAssessmentV2Resource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationSqlAssessmentV2Resource"/> object. </returns>
        public static MigrationSqlAssessmentV2Resource GetMigrationSqlAssessmentV2Resource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationSqlAssessmentV2Resource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessedSqlDatabaseV2Resource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessedSqlDatabaseV2Resource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessedSqlDatabaseV2Resource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessedSqlDatabaseV2Resource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessedSqlDatabaseV2Resource"/> object. </returns>
        public static MigrationAssessedSqlDatabaseV2Resource GetMigrationAssessedSqlDatabaseV2Resource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessedSqlDatabaseV2Resource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessedSqlInstanceV2Resource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessedSqlInstanceV2Resource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessedSqlInstanceV2Resource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessedSqlInstanceV2Resource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessedSqlInstanceV2Resource"/> object. </returns>
        public static MigrationAssessedSqlInstanceV2Resource GetMigrationAssessedSqlInstanceV2Resource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessedSqlInstanceV2Resource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessedSqlMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessedSqlMachineResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessedSqlMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessedSqlMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessedSqlMachineResource"/> object. </returns>
        public static MigrationAssessedSqlMachineResource GetMigrationAssessedSqlMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessedSqlMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessedSqlRecommendedEntityResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessedSqlRecommendedEntityResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessedSqlRecommendedEntityResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessedSqlRecommendedEntityResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessedSqlRecommendedEntityResource"/> object. </returns>
        public static MigrationAssessedSqlRecommendedEntityResource GetMigrationAssessedSqlRecommendedEntityResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessedSqlRecommendedEntityResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationSqlAssessmentV2SummaryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationSqlAssessmentV2SummaryResource.CreateResourceIdentifier" /> to create a <see cref="MigrationSqlAssessmentV2SummaryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationSqlAssessmentV2SummaryResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationSqlAssessmentV2SummaryResource"/> object. </returns>
        public static MigrationSqlAssessmentV2SummaryResource GetMigrationSqlAssessmentV2SummaryResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationSqlAssessmentV2SummaryResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentHyperVCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentHyperVCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentHyperVCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentHyperVCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentHyperVCollectorResource"/> object. </returns>
        public static MigrationAssessmentHyperVCollectorResource GetMigrationAssessmentHyperVCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentHyperVCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentImportCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentImportCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentImportCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentImportCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentImportCollectorResource"/> object. </returns>
        public static MigrationAssessmentImportCollectorResource GetMigrationAssessmentImportCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentImportCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentMachineResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentMachineResource"/> object. </returns>
        public static MigrationAssessmentMachineResource GetMigrationAssessmentMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentPrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentPrivateEndpointConnectionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentPrivateEndpointConnectionResource"/> object. </returns>
        public static MigrationAssessmentPrivateEndpointConnectionResource GetMigrationAssessmentPrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentPrivateEndpointConnectionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentPrivateLinkResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentPrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentPrivateLinkResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentPrivateLinkResource"/> object. </returns>
        public static MigrationAssessmentPrivateLinkResource GetMigrationAssessmentPrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentPrivateLinkResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentProjectSummaryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentProjectSummaryResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentProjectSummaryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentProjectSummaryResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentProjectSummaryResource"/> object. </returns>
        public static MigrationAssessmentProjectSummaryResource GetMigrationAssessmentProjectSummaryResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentProjectSummaryResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentServerCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentServerCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentServerCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentServerCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentServerCollectorResource"/> object. </returns>
        public static MigrationAssessmentServerCollectorResource GetMigrationAssessmentServerCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentServerCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationSqlAssessmentOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationSqlAssessmentOptionResource.CreateResourceIdentifier" /> to create a <see cref="MigrationSqlAssessmentOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationSqlAssessmentOptionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationSqlAssessmentOptionResource"/> object. </returns>
        public static MigrationSqlAssessmentOptionResource GetMigrationSqlAssessmentOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationSqlAssessmentOptionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentSqlCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentSqlCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentSqlCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentSqlCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentSqlCollectorResource"/> object. </returns>
        public static MigrationAssessmentSqlCollectorResource GetMigrationAssessmentSqlCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentSqlCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrationAssessmentVMwareCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrationAssessmentVMwareCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrationAssessmentVMwareCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentArmClient.GetMigrationAssessmentVMwareCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrationAssessmentVMwareCollectorResource"/> object. </returns>
        public static MigrationAssessmentVMwareCollectorResource GetMigrationAssessmentVMwareCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableMigrationAssessmentArmClient(client).GetMigrationAssessmentVMwareCollectorResource(id);
        }

        /// <summary>
        /// Gets a collection of MigrationAssessmentProjectResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentResourceGroupResource.GetMigrationAssessmentProjects()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of MigrationAssessmentProjectResources and their operations over a MigrationAssessmentProjectResource. </returns>
        public static MigrationAssessmentProjectCollection GetMigrationAssessmentProjects(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableMigrationAssessmentResourceGroupResource(resourceGroupResource).GetMigrationAssessmentProjects();
        }

        /// <summary>
        /// Get a AssessmentProject
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrationAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentResourceGroupResource.GetMigrationAssessmentProjectAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="projectName"> Assessment Project Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="projectName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<MigrationAssessmentProjectResource>> GetMigrationAssessmentProjectAsync(this ResourceGroupResource resourceGroupResource, string projectName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableMigrationAssessmentResourceGroupResource(resourceGroupResource).GetMigrationAssessmentProjectAsync(projectName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a AssessmentProject
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrationAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentResourceGroupResource.GetMigrationAssessmentProject(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="projectName"> Assessment Project Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="projectName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<MigrationAssessmentProjectResource> GetMigrationAssessmentProject(this ResourceGroupResource resourceGroupResource, string projectName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableMigrationAssessmentResourceGroupResource(resourceGroupResource).GetMigrationAssessmentProject(projectName, cancellationToken);
        }

        /// <summary>
        /// List AssessmentProject resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrationAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentSubscriptionResource.GetMigrationAssessmentProjects(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="MigrationAssessmentProjectResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MigrationAssessmentProjectResource> GetMigrationAssessmentProjectsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableMigrationAssessmentSubscriptionResource(subscriptionResource).GetMigrationAssessmentProjectsAsync(cancellationToken);
        }

        /// <summary>
        /// List AssessmentProject resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrationAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrationAssessmentSubscriptionResource.GetMigrationAssessmentProjects(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="MigrationAssessmentProjectResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MigrationAssessmentProjectResource> GetMigrationAssessmentProjects(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableMigrationAssessmentSubscriptionResource(subscriptionResource).GetMigrationAssessmentProjects(cancellationToken);
        }
    }
}
