// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.HybridNetwork.Models
{
    /// <summary>
    /// The NFVI object.
    /// Please note <see cref="NFVIs"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="AzureArcK8SClusterNfviDetails"/>, <see cref="AzureCoreNfviDetails"/> and <see cref="AzureOperatorNexusClusterNfviDetails"/>.
    /// </summary>
    public abstract partial class NFVIs
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        protected internal IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NFVIs"/>. </summary>
        protected NFVIs()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NFVIs"/>. </summary>
        /// <param name="name"> Name of the nfvi. </param>
        /// <param name="nfviType"> The NFVI type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NFVIs(string name, NfviType nfviType, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            NfviType = nfviType;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Name of the nfvi. </summary>
        public string Name { get; set; }
        /// <summary> The NFVI type. </summary>
        internal NfviType NfviType { get; set; }
    }
}
