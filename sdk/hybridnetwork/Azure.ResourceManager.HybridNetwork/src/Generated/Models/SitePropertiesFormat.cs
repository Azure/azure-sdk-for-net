// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.HybridNetwork.Models
{
    /// <summary> Site properties. </summary>
    public partial class SitePropertiesFormat
    {
        /// <summary> Initializes a new instance of <see cref="SitePropertiesFormat"/>. </summary>
        public SitePropertiesFormat()
        {
            Nfvis = new ChangeTrackingList<NFVIs>();
            SiteNetworkServiceReferences = new ChangeTrackingList<WritableSubResource>();
        }

        /// <summary> Initializes a new instance of <see cref="SitePropertiesFormat"/>. </summary>
        /// <param name="provisioningState"> The provisioning state of the site resource. **TODO**: Confirm if this is needed. </param>
        /// <param name="nfvis">
        /// List of NFVIs
        /// Please note <see cref="NFVIs"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureArcK8SClusterNfviDetails"/>, <see cref="AzureCoreNfviDetails"/> and <see cref="AzureOperatorNexusClusterNfviDetails"/>.
        /// </param>
        /// <param name="siteNetworkServiceReferences"> The list of site network services on the site. </param>
        internal SitePropertiesFormat(ProvisioningState? provisioningState, IList<NFVIs> nfvis, IReadOnlyList<WritableSubResource> siteNetworkServiceReferences)
        {
            ProvisioningState = provisioningState;
            Nfvis = nfvis;
            SiteNetworkServiceReferences = siteNetworkServiceReferences;
        }

        /// <summary> The provisioning state of the site resource. **TODO**: Confirm if this is needed. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary>
        /// List of NFVIs
        /// Please note <see cref="NFVIs"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureArcK8SClusterNfviDetails"/>, <see cref="AzureCoreNfviDetails"/> and <see cref="AzureOperatorNexusClusterNfviDetails"/>.
        /// </summary>
        public IList<NFVIs> Nfvis { get; }
        /// <summary> The list of site network services on the site. </summary>
        public IReadOnlyList<WritableSubResource> SiteNetworkServiceReferences { get; }
    }
}
