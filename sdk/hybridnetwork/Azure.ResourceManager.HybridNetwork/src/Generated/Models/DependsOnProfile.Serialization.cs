// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridNetwork.Models
{
    public partial class DependsOnProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(InstallDependsOn))
            {
                writer.WritePropertyName("installDependsOn"u8);
                writer.WriteStartArray();
                foreach (var item in InstallDependsOn)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(UninstallDependsOn))
            {
                writer.WritePropertyName("uninstallDependsOn"u8);
                writer.WriteStartArray();
                foreach (var item in UninstallDependsOn)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(UpdateDependsOn))
            {
                writer.WritePropertyName("updateDependsOn"u8);
                writer.WriteStartArray();
                foreach (var item in UpdateDependsOn)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static DependsOnProfile DeserializeDependsOnProfile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<string>> installDependsOn = default;
            Optional<IList<string>> uninstallDependsOn = default;
            Optional<IList<string>> updateDependsOn = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("installDependsOn"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    installDependsOn = array;
                    continue;
                }
                if (property.NameEquals("uninstallDependsOn"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    uninstallDependsOn = array;
                    continue;
                }
                if (property.NameEquals("updateDependsOn"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    updateDependsOn = array;
                    continue;
                }
            }
            return new DependsOnProfile(Optional.ToList(installDependsOn), Optional.ToList(uninstallDependsOn), Optional.ToList(updateDependsOn));
        }
    }
}
