// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridNetwork.Models
{
    public partial class DeploymentStatusProperties
    {
        internal static DeploymentStatusProperties DeserializeDeploymentStatusProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ComponentStatus> status = default;
            Optional<ComponentKubernetesResources> resources = default;
            Optional<DateTimeOffset> nextExpectedUpdateAt = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    status = new ComponentStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resources"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resources = ComponentKubernetesResources.DeserializeComponentKubernetesResources(property.Value);
                    continue;
                }
                if (property.NameEquals("nextExpectedUpdateAt"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    nextExpectedUpdateAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new DeploymentStatusProperties(Optional.ToNullable(status), resources.Value, Optional.ToNullable(nextExpectedUpdateAt));
        }
    }
}
