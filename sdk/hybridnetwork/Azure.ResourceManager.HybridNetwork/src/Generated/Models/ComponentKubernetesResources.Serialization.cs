// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridNetwork.Models
{
    public partial class ComponentKubernetesResources
    {
        internal static ComponentKubernetesResources DeserializeComponentKubernetesResources(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<KubernetesDeployment>> deployments = default;
            Optional<IReadOnlyList<KubernetesPod>> pods = default;
            Optional<IReadOnlyList<KubernetesReplicaSet>> replicaSets = default;
            Optional<IReadOnlyList<KubernetesStatefulSet>> statefulSets = default;
            Optional<IReadOnlyList<KubernetesDaemonSet>> daemonSets = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deployments"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<KubernetesDeployment> array = new List<KubernetesDeployment>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(KubernetesDeployment.DeserializeKubernetesDeployment(item));
                    }
                    deployments = array;
                    continue;
                }
                if (property.NameEquals("pods"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<KubernetesPod> array = new List<KubernetesPod>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(KubernetesPod.DeserializeKubernetesPod(item));
                    }
                    pods = array;
                    continue;
                }
                if (property.NameEquals("replicaSets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<KubernetesReplicaSet> array = new List<KubernetesReplicaSet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(KubernetesReplicaSet.DeserializeKubernetesReplicaSet(item));
                    }
                    replicaSets = array;
                    continue;
                }
                if (property.NameEquals("statefulSets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<KubernetesStatefulSet> array = new List<KubernetesStatefulSet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(KubernetesStatefulSet.DeserializeKubernetesStatefulSet(item));
                    }
                    statefulSets = array;
                    continue;
                }
                if (property.NameEquals("daemonSets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<KubernetesDaemonSet> array = new List<KubernetesDaemonSet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(KubernetesDaemonSet.DeserializeKubernetesDaemonSet(item));
                    }
                    daemonSets = array;
                    continue;
                }
            }
            return new ComponentKubernetesResources(Optional.ToList(deployments), Optional.ToList(pods), Optional.ToList(replicaSets), Optional.ToList(statefulSets), Optional.ToList(daemonSets));
        }
    }
}
