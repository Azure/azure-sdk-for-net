// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridNetwork.Models
{
    public partial class HelmMappingRuleProfileConfig : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(InstallOptions))
            {
                writer.WritePropertyName("installOptions"u8);
                writer.WriteObjectValue(InstallOptions);
            }
            if (Optional.IsDefined(UpgradeOptions))
            {
                writer.WritePropertyName("upgradeOptions"u8);
                writer.WriteObjectValue(UpgradeOptions);
            }
            writer.WriteEndObject();
        }

        internal static HelmMappingRuleProfileConfig DeserializeHelmMappingRuleProfileConfig(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<HelmInstallConfig> installOptions = default;
            Optional<HelmUpgradeConfig> upgradeOptions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("installOptions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    installOptions = HelmInstallConfig.DeserializeHelmInstallConfig(property.Value);
                    continue;
                }
                if (property.NameEquals("upgradeOptions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    upgradeOptions = HelmUpgradeConfig.DeserializeHelmUpgradeConfig(property.Value);
                    continue;
                }
            }
            return new HelmMappingRuleProfileConfig(installOptions.Value, upgradeOptions.Value);
        }
    }
}
