// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ao5gc.Models
{
    /// <summary> Type of Network Function. </summary>
    public readonly partial struct NetworkFunctionType : IEquatable<NetworkFunctionType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="NetworkFunctionType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public NetworkFunctionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AMFValue = "AMF";
        private const string SMFValue = "SMF";
        private const string UPFValue = "UPF";
        private const string NRFValue = "NRF";
        private const string NssfValue = "NSSF";
        private const string MMEValue = "MME";
        private const string SaegwControlPlaneValue = "SaegwControlPlane";
        private const string SaegwUserPlaneValue = "SaegwUserPlane";
        private const string SaegwValue = "Saegw";
        private const string EPDGValue = "ePDG";
        private const string N3IWFValue = "N3IWF";
        private const string RemotePaaSValue = "RemotePaaS";
        private const string EMSValue = "EMS";
        private const string OperationsPolicyManagerValue = "OperationsPolicyManager";

        /// <summary> Access and Mobility Function. </summary>
        public static NetworkFunctionType AMF { get; } = new NetworkFunctionType(AMFValue);
        /// <summary> Session Management Function. </summary>
        public static NetworkFunctionType SMF { get; } = new NetworkFunctionType(SMFValue);
        /// <summary> User Plane Function. </summary>
        public static NetworkFunctionType UPF { get; } = new NetworkFunctionType(UPFValue);
        /// <summary> Network Repository Function. </summary>
        public static NetworkFunctionType NRF { get; } = new NetworkFunctionType(NRFValue);
        /// <summary> Network Slice Selection Function. </summary>
        public static NetworkFunctionType Nssf { get; } = new NetworkFunctionType(NssfValue);
        /// <summary> Mobility Management Entity. </summary>
        public static NetworkFunctionType MME { get; } = new NetworkFunctionType(MMEValue);
        /// <summary> System Architecture Evolution Gateway Control Plane, control and user plane separation (CUPS) architecture. </summary>
        public static NetworkFunctionType SaegwControlPlane { get; } = new NetworkFunctionType(SaegwControlPlaneValue);
        /// <summary> System Architecture Evolution Gateway User Plane, control and user plane separation (CUPS) architecture. </summary>
        public static NetworkFunctionType SaegwUserPlane { get; } = new NetworkFunctionType(SaegwUserPlaneValue);
        /// <summary> System Architecture Evolution Gateway.  This combines the Serving Gateway (SGW) and the Packet Data Network Gateway (PGW) functionality. </summary>
        public static NetworkFunctionType Saegw { get; } = new NetworkFunctionType(SaegwValue);
        /// <summary> Evolved Packet Data Gateway. </summary>
        public static NetworkFunctionType EPDG { get; } = new NetworkFunctionType(EPDGValue);
        /// <summary> Non-3GPP Interworking Function. </summary>
        public static NetworkFunctionType N3IWF { get; } = new NetworkFunctionType(N3IWFValue);
        /// <summary> Remote Platform As A Service Components. </summary>
        public static NetworkFunctionType RemotePaaS { get; } = new NetworkFunctionType(RemotePaaSValue);
        /// <summary> Element Management System. </summary>
        public static NetworkFunctionType EMS { get; } = new NetworkFunctionType(EMSValue);
        /// <summary> Operations and Policy Manager. </summary>
        public static NetworkFunctionType OperationsPolicyManager { get; } = new NetworkFunctionType(OperationsPolicyManagerValue);
        /// <summary> Determines if two <see cref="NetworkFunctionType"/> values are the same. </summary>
        public static bool operator ==(NetworkFunctionType left, NetworkFunctionType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="NetworkFunctionType"/> values are not the same. </summary>
        public static bool operator !=(NetworkFunctionType left, NetworkFunctionType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="NetworkFunctionType"/>. </summary>
        public static implicit operator NetworkFunctionType(string value) => new NetworkFunctionType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkFunctionType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkFunctionType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
