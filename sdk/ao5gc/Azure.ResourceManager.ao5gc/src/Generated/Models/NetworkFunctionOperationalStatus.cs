// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ao5gc.Models
{
    /// <summary> Network Function Operational Status enumerations. </summary>
    public readonly partial struct NetworkFunctionOperationalStatus : IEquatable<NetworkFunctionOperationalStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="NetworkFunctionOperationalStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public NetworkFunctionOperationalStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InactiveValue = "Inactive";
        private const string InstantiatedNotProvisionedValue = "InstantiatedNotProvisioned";
        private const string InstantiatedProvisionedValue = "InstantiatedProvisioned";
        private const string ActiveValue = "Active";

        /// <summary> Resource is inactive. </summary>
        public static NetworkFunctionOperationalStatus Inactive { get; } = new NetworkFunctionOperationalStatus(InactiveValue);
        /// <summary> Resource has been deployed, awaiting provisioning. </summary>
        public static NetworkFunctionOperationalStatus InstantiatedNotProvisioned { get; } = new NetworkFunctionOperationalStatus(InstantiatedNotProvisionedValue);
        /// <summary> Resource has been deployed and provisioned, awaiting testing. </summary>
        public static NetworkFunctionOperationalStatus InstantiatedProvisioned { get; } = new NetworkFunctionOperationalStatus(InstantiatedProvisionedValue);
        /// <summary> Resource is fully deployed and operational. </summary>
        public static NetworkFunctionOperationalStatus Active { get; } = new NetworkFunctionOperationalStatus(ActiveValue);
        /// <summary> Determines if two <see cref="NetworkFunctionOperationalStatus"/> values are the same. </summary>
        public static bool operator ==(NetworkFunctionOperationalStatus left, NetworkFunctionOperationalStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="NetworkFunctionOperationalStatus"/> values are not the same. </summary>
        public static bool operator !=(NetworkFunctionOperationalStatus left, NetworkFunctionOperationalStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="NetworkFunctionOperationalStatus"/>. </summary>
        public static implicit operator NetworkFunctionOperationalStatus(string value) => new NetworkFunctionOperationalStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkFunctionOperationalStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkFunctionOperationalStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
