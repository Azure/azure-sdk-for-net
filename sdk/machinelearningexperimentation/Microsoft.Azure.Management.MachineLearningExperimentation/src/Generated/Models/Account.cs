// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningExperimentation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An object that represents a machine learning team account.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Account : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Account class.
        /// </summary>
        public Account()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Account class.
        /// </summary>
        /// <param name="location">The location of the resource. This cannot be
        /// changed after the resource is created.</param>
        /// <param name="vsoAccountId">The fully qualified arm id of the vso
        /// account to be used for this team account.</param>
        /// <param name="keyVaultId">The fully qualified arm id of the user key
        /// vault.</param>
        /// <param name="storageAccount">The properties of the storage account
        /// for the machine learning team account.</param>
        /// <param name="id">The resource ID.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="tags">The tags of the resource.</param>
        /// <param name="accountId">The immutable id associated with this team
        /// account.</param>
        /// <param name="description">The description of this
        /// workspace.</param>
        /// <param name="friendlyName">The friendly name for this workspace.
        /// This will be the workspace name in the arm id when the workspace
        /// object gets created</param>
        /// <param name="seats">The no of users/seats who can access this team
        /// account. This property defines the charge on the team
        /// account.</param>
        /// <param name="discoveryUri">The uri for this machine learning team
        /// account.</param>
        /// <param name="creationDate">The creation date of the machine
        /// learning team account in ISO8601 format.</param>
        /// <param name="provisioningState">The current deployment state of
        /// team account resource. The provisioningState is to indicate states
        /// for resource provisioning. Possible values include: 'Creating',
        /// 'Succeeded', 'Updating', 'Deleting', 'Failed'</param>
        public Account(string location, string vsoAccountId, string keyVaultId, StorageAccountProperties storageAccount, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string accountId = default(string), string description = default(string), string friendlyName = default(string), string seats = default(string), string discoveryUri = default(string), System.DateTime? creationDate = default(System.DateTime?), ProvisioningState? provisioningState = default(ProvisioningState?))
            : base(location, id, name, type, tags)
        {
            VsoAccountId = vsoAccountId;
            AccountId = accountId;
            Description = description;
            FriendlyName = friendlyName;
            KeyVaultId = keyVaultId;
            Seats = seats;
            DiscoveryUri = discoveryUri;
            CreationDate = creationDate;
            StorageAccount = storageAccount;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the fully qualified arm id of the vso account to be
        /// used for this team account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vsoAccountId")]
        public string VsoAccountId { get; set; }

        /// <summary>
        /// Gets the immutable id associated with this team account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accountId")]
        public string AccountId { get; private set; }

        /// <summary>
        /// Gets or sets the description of this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the friendly name for this workspace. This will be the
        /// workspace name in the arm id when the workspace object gets created
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the fully qualified arm id of the user key vault.
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyVaultId")]
        public string KeyVaultId { get; set; }

        /// <summary>
        /// Gets or sets the no of users/seats who can access this team
        /// account. This property defines the charge on the team account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.seats")]
        public string Seats { get; set; }

        /// <summary>
        /// Gets the uri for this machine learning team account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.discoveryUri")]
        public string DiscoveryUri { get; private set; }

        /// <summary>
        /// Gets the creation date of the machine learning team account in
        /// ISO8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationDate")]
        public System.DateTime? CreationDate { get; private set; }

        /// <summary>
        /// Gets or sets the properties of the storage account for the machine
        /// learning team account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccount")]
        public StorageAccountProperties StorageAccount { get; set; }

        /// <summary>
        /// Gets the current deployment state of team account resource. The
        /// provisioningState is to indicate states for resource provisioning.
        /// Possible values include: 'Creating', 'Succeeded', 'Updating',
        /// 'Deleting', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public ProvisioningState? ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (VsoAccountId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VsoAccountId");
            }
            if (KeyVaultId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVaultId");
            }
            if (StorageAccount == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StorageAccount");
            }
            if (StorageAccount != null)
            {
                StorageAccount.Validate();
            }
        }
    }
}
