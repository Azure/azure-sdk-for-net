// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagedServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of the registration definition associated with the
    /// registration assignment.
    /// </summary>
    public partial class RegistrationAssignmentPropertiesRegistrationDefinitionProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RegistrationAssignmentPropertiesRegistrationDefinitionProperties
        /// class.
        /// </summary>
        public RegistrationAssignmentPropertiesRegistrationDefinitionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// RegistrationAssignmentPropertiesRegistrationDefinitionProperties
        /// class.
        /// </summary>
        /// <param name="description">The description of the registration
        /// definition.</param>
        /// <param name="authorizations">The collection of authorization
        /// objects describing the access Azure Active Directory principals in
        /// the managedBy tenant will receive on the delegated resource in the
        /// managed tenant.</param>
        /// <param name="eligibleAuthorizations">The collection of eligible
        /// authorization objects describing the just-in-time access Azure
        /// Active Directory principals in the managedBy tenant will receive on
        /// the delegated resource in the managed tenant.</param>
        /// <param name="registrationDefinitionName">The name of the
        /// registration definition.</param>
        /// <param name="provisioningState">The current provisioning state of
        /// the registration definition. Possible values include:
        /// 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
        /// 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Updating'</param>
        /// <param name="manageeTenantId">The identifier of the managed
        /// tenant.</param>
        /// <param name="manageeTenantName">The name of the managed
        /// tenant.</param>
        /// <param name="managedByTenantId">The identifier of the managedBy
        /// tenant.</param>
        /// <param name="managedByTenantName">The name of the managedBy
        /// tenant.</param>
        public RegistrationAssignmentPropertiesRegistrationDefinitionProperties(string description = default(string), IList<Authorization> authorizations = default(IList<Authorization>), IList<EligibleAuthorization> eligibleAuthorizations = default(IList<EligibleAuthorization>), string registrationDefinitionName = default(string), string provisioningState = default(string), string manageeTenantId = default(string), string manageeTenantName = default(string), string managedByTenantId = default(string), string managedByTenantName = default(string))
        {
            Description = description;
            Authorizations = authorizations;
            EligibleAuthorizations = eligibleAuthorizations;
            RegistrationDefinitionName = registrationDefinitionName;
            ProvisioningState = provisioningState;
            ManageeTenantId = manageeTenantId;
            ManageeTenantName = manageeTenantName;
            ManagedByTenantId = managedByTenantId;
            ManagedByTenantName = managedByTenantName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the description of the registration definition.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the collection of authorization objects describing the
        /// access Azure Active Directory principals in the managedBy tenant
        /// will receive on the delegated resource in the managed tenant.
        /// </summary>
        [JsonProperty(PropertyName = "authorizations")]
        public IList<Authorization> Authorizations { get; set; }

        /// <summary>
        /// Gets or sets the collection of eligible authorization objects
        /// describing the just-in-time access Azure Active Directory
        /// principals in the managedBy tenant will receive on the delegated
        /// resource in the managed tenant.
        /// </summary>
        [JsonProperty(PropertyName = "eligibleAuthorizations")]
        public IList<EligibleAuthorization> EligibleAuthorizations { get; set; }

        /// <summary>
        /// Gets or sets the name of the registration definition.
        /// </summary>
        [JsonProperty(PropertyName = "registrationDefinitionName")]
        public string RegistrationDefinitionName { get; set; }

        /// <summary>
        /// Gets or sets the current provisioning state of the registration
        /// definition. Possible values include: 'NotSpecified', 'Accepted',
        /// 'Running', 'Ready', 'Creating', 'Created', 'Deleting', 'Deleted',
        /// 'Canceled', 'Failed', 'Succeeded', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the managed tenant.
        /// </summary>
        [JsonProperty(PropertyName = "manageeTenantId")]
        public string ManageeTenantId { get; set; }

        /// <summary>
        /// Gets or sets the name of the managed tenant.
        /// </summary>
        [JsonProperty(PropertyName = "manageeTenantName")]
        public string ManageeTenantName { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the managedBy tenant.
        /// </summary>
        [JsonProperty(PropertyName = "managedByTenantId")]
        public string ManagedByTenantId { get; set; }

        /// <summary>
        /// Gets or sets the name of the managedBy tenant.
        /// </summary>
        [JsonProperty(PropertyName = "managedByTenantName")]
        public string ManagedByTenantName { get; set; }

    }
}
