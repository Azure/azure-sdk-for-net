// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagedServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of the marketplace registration definition.
    /// </summary>
    public partial class MarketplaceRegistrationDefinitionProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MarketplaceRegistrationDefinitionProperties class.
        /// </summary>
        public MarketplaceRegistrationDefinitionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MarketplaceRegistrationDefinitionProperties class.
        /// </summary>
        /// <param name="managedByTenantId">The identifier of the managedBy
        /// tenant.</param>
        /// <param name="authorizations">The collection of authorization
        /// objects describing the access Azure Active Directory principals in
        /// the managedBy tenant will receive on the delegated resource in the
        /// managed tenant.</param>
        /// <param name="eligibleAuthorizations">The collection of eligible
        /// authorization objects describing the just-in-time access Azure
        /// Active Directory principals in the managedBy tenant will receive on
        /// the delegated resource in the managed tenant.</param>
        /// <param name="offerDisplayName">The marketplace offer display
        /// name.</param>
        /// <param name="publisherDisplayName">The marketplace publisher
        /// display name.</param>
        /// <param name="planDisplayName">The marketplace plan display
        /// name.</param>
        public MarketplaceRegistrationDefinitionProperties(string managedByTenantId, IList<Authorization> authorizations, IList<EligibleAuthorization> eligibleAuthorizations = default(IList<EligibleAuthorization>), string offerDisplayName = default(string), string publisherDisplayName = default(string), string planDisplayName = default(string))
        {
            ManagedByTenantId = managedByTenantId;
            Authorizations = authorizations;
            EligibleAuthorizations = eligibleAuthorizations;
            OfferDisplayName = offerDisplayName;
            PublisherDisplayName = publisherDisplayName;
            PlanDisplayName = planDisplayName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier of the managedBy tenant.
        /// </summary>
        [JsonProperty(PropertyName = "managedByTenantId")]
        public string ManagedByTenantId { get; set; }

        /// <summary>
        /// Gets or sets the collection of authorization objects describing the
        /// access Azure Active Directory principals in the managedBy tenant
        /// will receive on the delegated resource in the managed tenant.
        /// </summary>
        [JsonProperty(PropertyName = "authorizations")]
        public IList<Authorization> Authorizations { get; set; }

        /// <summary>
        /// Gets or sets the collection of eligible authorization objects
        /// describing the just-in-time access Azure Active Directory
        /// principals in the managedBy tenant will receive on the delegated
        /// resource in the managed tenant.
        /// </summary>
        [JsonProperty(PropertyName = "eligibleAuthorizations")]
        public IList<EligibleAuthorization> EligibleAuthorizations { get; set; }

        /// <summary>
        /// Gets or sets the marketplace offer display name.
        /// </summary>
        [JsonProperty(PropertyName = "offerDisplayName")]
        public string OfferDisplayName { get; set; }

        /// <summary>
        /// Gets or sets the marketplace publisher display name.
        /// </summary>
        [JsonProperty(PropertyName = "publisherDisplayName")]
        public string PublisherDisplayName { get; set; }

        /// <summary>
        /// Gets or sets the marketplace plan display name.
        /// </summary>
        [JsonProperty(PropertyName = "planDisplayName")]
        public string PlanDisplayName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ManagedByTenantId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ManagedByTenantId");
            }
            if (Authorizations == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Authorizations");
            }
            if (Authorizations != null)
            {
                foreach (var element in Authorizations)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (EligibleAuthorizations != null)
            {
                foreach (var element1 in EligibleAuthorizations)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
