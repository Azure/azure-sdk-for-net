// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagedServices.Models;

namespace Azure.ResourceManager.ManagedServices
{
    public partial class Sample_RegistrationAssignmentResource
    {
        // Get Registration Assignment
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetRegistrationAssignment()
        {
            // Generated from example definition: specification/managedservices/resource-manager/Microsoft.ManagedServices/preview/2022-01-01-preview/examples/GetRegistrationAssignment.json
            // this example is just showing the usage of "RegistrationAssignments_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this RegistrationAssignmentResource created on azure
            // for more information of creating RegistrationAssignmentResource, please refer to the document of RegistrationAssignmentResource
            string scope = "subscription/0afefe50-734e-4610-8a82-a144ahf49dea";
            string registrationAssignmentId = "26c128c2-fefa-4340-9bb1-6e081c90ada2";
            ResourceIdentifier registrationAssignmentResourceId = RegistrationAssignmentResource.CreateResourceIdentifier(scope, registrationAssignmentId);
            RegistrationAssignmentResource registrationAssignment = client.GetRegistrationAssignmentResource(registrationAssignmentResourceId);

            // invoke the operation
            RegistrationAssignmentResource result = await registrationAssignment.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RegistrationAssignmentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete Registration Assignment
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteRegistrationAssignment()
        {
            // Generated from example definition: specification/managedservices/resource-manager/Microsoft.ManagedServices/preview/2022-01-01-preview/examples/DeleteRegistrationAssignment.json
            // this example is just showing the usage of "RegistrationAssignments_Delete" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this RegistrationAssignmentResource created on azure
            // for more information of creating RegistrationAssignmentResource, please refer to the document of RegistrationAssignmentResource
            string scope = "subscription/0afefe50-734e-4610-8a82-a144ahf49dea";
            string registrationAssignmentId = "26c128c2-fefa-4340-9bb1-6e081c90ada2";
            ResourceIdentifier registrationAssignmentResourceId = RegistrationAssignmentResource.CreateResourceIdentifier(scope, registrationAssignmentId);
            RegistrationAssignmentResource registrationAssignment = client.GetRegistrationAssignmentResource(registrationAssignmentResourceId);

            // invoke the operation
            await registrationAssignment.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Put Registration Assignment
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PutRegistrationAssignment()
        {
            // Generated from example definition: specification/managedservices/resource-manager/Microsoft.ManagedServices/preview/2022-01-01-preview/examples/PutRegistrationAssignment.json
            // this example is just showing the usage of "RegistrationAssignments_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this RegistrationAssignmentResource created on azure
            // for more information of creating RegistrationAssignmentResource, please refer to the document of RegistrationAssignmentResource
            string scope = "subscription/0afefe50-734e-4610-8a82-a144ahf49dea";
            string registrationAssignmentId = "26c128c2-fefa-4340-9bb1-6e081c90ada2";
            ResourceIdentifier registrationAssignmentResourceId = RegistrationAssignmentResource.CreateResourceIdentifier(scope, registrationAssignmentId);
            RegistrationAssignmentResource registrationAssignment = client.GetRegistrationAssignmentResource(registrationAssignmentResourceId);

            // invoke the operation
            RegistrationAssignmentData data = new RegistrationAssignmentData()
            {
                Properties = new RegistrationAssignmentProperties("/subscriptions/0afefe50-734e-4610-8a82-a144ahf49dea/providers/Microsoft.ManagedServices/registrationDefinitions/26c128c2-fefa-4340-9bb1-6e081c90ada2"),
            };
            ArmOperation<RegistrationAssignmentResource> lro = await registrationAssignment.UpdateAsync(WaitUntil.Completed, data);
            RegistrationAssignmentResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RegistrationAssignmentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
