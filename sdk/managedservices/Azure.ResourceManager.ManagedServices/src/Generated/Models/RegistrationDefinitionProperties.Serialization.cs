// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ManagedServices.Models
{
    public partial class RegistrationDefinitionProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WritePropertyName("authorizations");
            writer.WriteStartArray();
            foreach (var item in Authorizations)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsCollectionDefined(EligibleAuthorizations))
            {
                writer.WritePropertyName("eligibleAuthorizations");
                writer.WriteStartArray();
                foreach (var item in EligibleAuthorizations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(RegistrationDefinitionName))
            {
                writer.WritePropertyName("registrationDefinitionName");
                writer.WriteStringValue(RegistrationDefinitionName);
            }
            writer.WritePropertyName("managedByTenantId");
            writer.WriteStringValue(ManagedByTenantId);
            writer.WriteEndObject();
        }

        internal static RegistrationDefinitionProperties DeserializeRegistrationDefinitionProperties(JsonElement element)
        {
            Optional<string> description = default;
            IList<Authorization> authorizations = default;
            Optional<IList<EligibleAuthorization>> eligibleAuthorizations = default;
            Optional<string> registrationDefinitionName = default;
            string managedByTenantId = default;
            Optional<ProvisioningState> provisioningState = default;
            Optional<string> manageeTenantId = default;
            Optional<string> manageeTenantName = default;
            Optional<string> managedByTenantName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("authorizations"))
                {
                    List<Authorization> array = new List<Authorization>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Authorization.DeserializeAuthorization(item));
                    }
                    authorizations = array;
                    continue;
                }
                if (property.NameEquals("eligibleAuthorizations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<EligibleAuthorization> array = new List<EligibleAuthorization>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(EligibleAuthorization.DeserializeEligibleAuthorization(item));
                    }
                    eligibleAuthorizations = array;
                    continue;
                }
                if (property.NameEquals("registrationDefinitionName"))
                {
                    registrationDefinitionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("managedByTenantId"))
                {
                    managedByTenantId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("manageeTenantId"))
                {
                    manageeTenantId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("manageeTenantName"))
                {
                    manageeTenantName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("managedByTenantName"))
                {
                    managedByTenantName = property.Value.GetString();
                    continue;
                }
            }
            return new RegistrationDefinitionProperties(description.Value, authorizations, Optional.ToList(eligibleAuthorizations), registrationDefinitionName.Value, managedByTenantId, Optional.ToNullable(provisioningState), manageeTenantId.Value, manageeTenantName.Value, managedByTenantName.Value);
        }
    }
}
