// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ManagedServices.Models
{
    public partial class MarketplaceRegistrationDefinitionProperties
    {
        internal static MarketplaceRegistrationDefinitionProperties DeserializeMarketplaceRegistrationDefinitionProperties(JsonElement element)
        {
            string managedByTenantId = default;
            IReadOnlyList<Authorization> authorizations = default;
            Optional<IReadOnlyList<EligibleAuthorization>> eligibleAuthorizations = default;
            Optional<string> offerDisplayName = default;
            Optional<string> publisherDisplayName = default;
            Optional<string> planDisplayName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("managedByTenantId"))
                {
                    managedByTenantId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("authorizations"))
                {
                    List<Authorization> array = new List<Authorization>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Authorization.DeserializeAuthorization(item));
                    }
                    authorizations = array;
                    continue;
                }
                if (property.NameEquals("eligibleAuthorizations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<EligibleAuthorization> array = new List<EligibleAuthorization>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(EligibleAuthorization.DeserializeEligibleAuthorization(item));
                    }
                    eligibleAuthorizations = array;
                    continue;
                }
                if (property.NameEquals("offerDisplayName"))
                {
                    offerDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("publisherDisplayName"))
                {
                    publisherDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("planDisplayName"))
                {
                    planDisplayName = property.Value.GetString();
                    continue;
                }
            }
            return new MarketplaceRegistrationDefinitionProperties(managedByTenantId, authorizations, Optional.ToList(eligibleAuthorizations), offerDisplayName.Value, publisherDisplayName.Value, planDisplayName.Value);
        }
    }
}
