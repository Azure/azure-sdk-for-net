// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.ManagedServices
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ManagedServices. </summary>
    public static partial class ManagedServicesExtensions
    {
        private static ArmResourceExtensionClient GetExtensionClient(ArmClient client, ResourceIdentifier scope)
        {
            return client.GetResourceClient(() =>
            {
                return new ArmResourceExtensionClient(client, scope);
            }
            );
        }

        private static ArmResourceExtensionClient GetExtensionClient(ArmResource armResource)
        {
            return armResource.GetCachedClient((client) =>
            {
                return new ArmResourceExtensionClient(client, armResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of RegistrationDefinitionResources in the ArmResource. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> An object representing collection of RegistrationDefinitionResources and their operations over a RegistrationDefinitionResource. </returns>
        public static RegistrationDefinitionCollection GetRegistrationDefinitions(this ArmClient client, ResourceIdentifier scope)
        {
            return GetExtensionClient(client, scope).GetRegistrationDefinitions();
        }

        /// <summary>
        /// Gets the registration definition details.
        /// Request Path: /{scope}/providers/Microsoft.ManagedServices/registrationDefinitions/{registrationDefinitionId}
        /// Operation Id: RegistrationDefinitions_Get
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <param name="registrationDefinitionId"> The GUID of the registration definition. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="registrationDefinitionId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="registrationDefinitionId"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<RegistrationDefinitionResource>> GetRegistrationDefinitionAsync(this ArmClient client, ResourceIdentifier scope, string registrationDefinitionId, CancellationToken cancellationToken = default)
        {
            return await client.GetRegistrationDefinitions(scope).GetAsync(registrationDefinitionId, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the registration definition details.
        /// Request Path: /{scope}/providers/Microsoft.ManagedServices/registrationDefinitions/{registrationDefinitionId}
        /// Operation Id: RegistrationDefinitions_Get
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <param name="registrationDefinitionId"> The GUID of the registration definition. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="registrationDefinitionId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="registrationDefinitionId"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<RegistrationDefinitionResource> GetRegistrationDefinition(this ArmClient client, ResourceIdentifier scope, string registrationDefinitionId, CancellationToken cancellationToken = default)
        {
            return client.GetRegistrationDefinitions(scope).Get(registrationDefinitionId, cancellationToken);
        }

        /// <summary> Gets a collection of RegistrationAssignmentResources in the ArmResource. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> An object representing collection of RegistrationAssignmentResources and their operations over a RegistrationAssignmentResource. </returns>
        public static RegistrationAssignmentCollection GetRegistrationAssignments(this ArmClient client, ResourceIdentifier scope)
        {
            return GetExtensionClient(client, scope).GetRegistrationAssignments();
        }

        /// <summary>
        /// Gets the details of the specified registration assignment.
        /// Request Path: /{scope}/providers/Microsoft.ManagedServices/registrationAssignments/{registrationAssignmentId}
        /// Operation Id: RegistrationAssignments_Get
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <param name="registrationAssignmentId"> The GUID of the registration assignment. </param>
        /// <param name="expandRegistrationDefinition"> The flag indicating whether to return the registration definition details along with the registration assignment details. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="registrationAssignmentId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="registrationAssignmentId"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<RegistrationAssignmentResource>> GetRegistrationAssignmentAsync(this ArmClient client, ResourceIdentifier scope, string registrationAssignmentId, bool? expandRegistrationDefinition = null, CancellationToken cancellationToken = default)
        {
            return await client.GetRegistrationAssignments(scope).GetAsync(registrationAssignmentId, expandRegistrationDefinition, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the details of the specified registration assignment.
        /// Request Path: /{scope}/providers/Microsoft.ManagedServices/registrationAssignments/{registrationAssignmentId}
        /// Operation Id: RegistrationAssignments_Get
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <param name="registrationAssignmentId"> The GUID of the registration assignment. </param>
        /// <param name="expandRegistrationDefinition"> The flag indicating whether to return the registration definition details along with the registration assignment details. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="registrationAssignmentId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="registrationAssignmentId"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<RegistrationAssignmentResource> GetRegistrationAssignment(this ArmClient client, ResourceIdentifier scope, string registrationAssignmentId, bool? expandRegistrationDefinition = null, CancellationToken cancellationToken = default)
        {
            return client.GetRegistrationAssignments(scope).Get(registrationAssignmentId, expandRegistrationDefinition, cancellationToken);
        }

        /// <summary> Gets a collection of MarketplaceRegistrationDefinitionResources in the ArmResource. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> An object representing collection of MarketplaceRegistrationDefinitionResources and their operations over a MarketplaceRegistrationDefinitionResource. </returns>
        public static MarketplaceRegistrationDefinitionCollection GetMarketplaceRegistrationDefinitions(this ArmClient client, ResourceIdentifier scope)
        {
            return GetExtensionClient(client, scope).GetMarketplaceRegistrationDefinitions();
        }

        /// <summary>
        /// Get the marketplace registration definition for the marketplace identifier.
        /// Request Path: /{scope}/providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions/{marketplaceIdentifier}
        /// Operation Id: MarketplaceRegistrationDefinitions_Get
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <param name="marketplaceIdentifier"> The Azure Marketplace identifier. Expected formats: {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or {publisher}.{product[-preview]} or {publisher}). </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="marketplaceIdentifier"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="marketplaceIdentifier"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<MarketplaceRegistrationDefinitionResource>> GetMarketplaceRegistrationDefinitionAsync(this ArmClient client, ResourceIdentifier scope, string marketplaceIdentifier, CancellationToken cancellationToken = default)
        {
            return await client.GetMarketplaceRegistrationDefinitions(scope).GetAsync(marketplaceIdentifier, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get the marketplace registration definition for the marketplace identifier.
        /// Request Path: /{scope}/providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions/{marketplaceIdentifier}
        /// Operation Id: MarketplaceRegistrationDefinitions_Get
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <param name="marketplaceIdentifier"> The Azure Marketplace identifier. Expected formats: {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or {publisher}.{product[-preview]} or {publisher}). </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="marketplaceIdentifier"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="marketplaceIdentifier"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<MarketplaceRegistrationDefinitionResource> GetMarketplaceRegistrationDefinition(this ArmClient client, ResourceIdentifier scope, string marketplaceIdentifier, CancellationToken cancellationToken = default)
        {
            return client.GetMarketplaceRegistrationDefinitions(scope).Get(marketplaceIdentifier, cancellationToken);
        }

        #region RegistrationDefinitionResource
        /// <summary>
        /// Gets an object representing a <see cref="RegistrationDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RegistrationDefinitionResource.CreateResourceIdentifier" /> to create a <see cref="RegistrationDefinitionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RegistrationDefinitionResource" /> object. </returns>
        public static RegistrationDefinitionResource GetRegistrationDefinitionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RegistrationDefinitionResource.ValidateResourceId(id);
                return new RegistrationDefinitionResource(client, id);
            }
            );
        }
        #endregion

        #region RegistrationAssignmentResource
        /// <summary>
        /// Gets an object representing a <see cref="RegistrationAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RegistrationAssignmentResource.CreateResourceIdentifier" /> to create a <see cref="RegistrationAssignmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RegistrationAssignmentResource" /> object. </returns>
        public static RegistrationAssignmentResource GetRegistrationAssignmentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RegistrationAssignmentResource.ValidateResourceId(id);
                return new RegistrationAssignmentResource(client, id);
            }
            );
        }
        #endregion

        #region MarketplaceRegistrationDefinitionResource
        /// <summary>
        /// Gets an object representing a <see cref="MarketplaceRegistrationDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MarketplaceRegistrationDefinitionResource.CreateResourceIdentifier" /> to create a <see cref="MarketplaceRegistrationDefinitionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MarketplaceRegistrationDefinitionResource" /> object. </returns>
        public static MarketplaceRegistrationDefinitionResource GetMarketplaceRegistrationDefinitionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MarketplaceRegistrationDefinitionResource.ValidateResourceId(id);
                return new MarketplaceRegistrationDefinitionResource(client, id);
            }
            );
        }
        #endregion
    }
}
