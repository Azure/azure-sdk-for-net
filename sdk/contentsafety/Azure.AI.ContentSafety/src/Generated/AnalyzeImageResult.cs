// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.ContentSafety
{
    /// <summary> The analysis response of the image. </summary>
    public partial class AnalyzeImageResult
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AnalyzeImageResult"/>. </summary>
        internal AnalyzeImageResult()
        {
            _serializedAdditionalRawData = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeImageResult"/>. </summary>
        /// <param name="hateResult"> Analysis result for Hate category. </param>
        /// <param name="selfHarmResult"> Analysis result for SelfHarm category. </param>
        /// <param name="sexualResult"> Analysis result for Sexual category. </param>
        /// <param name="violenceResult"> Analysis result for Violence category. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AnalyzeImageResult(ImageAnalyzeSeverityResult hateResult, ImageAnalyzeSeverityResult selfHarmResult, ImageAnalyzeSeverityResult sexualResult, ImageAnalyzeSeverityResult violenceResult, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            HateResult = hateResult;
            SelfHarmResult = selfHarmResult;
            SexualResult = sexualResult;
            ViolenceResult = violenceResult;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Analysis result for Hate category. </summary>
        public ImageAnalyzeSeverityResult HateResult { get; }
        /// <summary> Analysis result for SelfHarm category. </summary>
        public ImageAnalyzeSeverityResult SelfHarmResult { get; }
        /// <summary> Analysis result for Sexual category. </summary>
        public ImageAnalyzeSeverityResult SexualResult { get; }
        /// <summary> Analysis result for Violence category. </summary>
        public ImageAnalyzeSeverityResult ViolenceResult { get; }
    }
}
