<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="AddOrUpdateBlocklistItemsAsync(string,AddOrUpdateTextBlocklistItemsOptions,CancellationToken)">
      <example>
This sample shows how to call AddOrUpdateBlocklistItemsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

AddOrUpdateTextBlocklistItemsOptions options = new AddOrUpdateTextBlocklistItemsOptions(new TextBlocklistItem[]
{
    new TextBlocklistItem("<text>")
});
Response<AddOrUpdateTextBlocklistItemsResult> response = await client.AddOrUpdateBlocklistItemsAsync("<Name>", options);
]]></code>
This sample shows how to call AddOrUpdateBlocklistItemsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

AddOrUpdateTextBlocklistItemsOptions options = new AddOrUpdateTextBlocklistItemsOptions(new TextBlocklistItem[]
{
    new TextBlocklistItem("<text>")
    {
        Description = "<description>",
    }
});
Response<AddOrUpdateTextBlocklistItemsResult> response = await client.AddOrUpdateBlocklistItemsAsync("<Name>", options);
]]></code></example>
    </member>
    <member name="AddOrUpdateBlocklistItems(string,AddOrUpdateTextBlocklistItemsOptions,CancellationToken)">
      <example>
This sample shows how to call AddOrUpdateBlocklistItems.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

AddOrUpdateTextBlocklistItemsOptions options = new AddOrUpdateTextBlocklistItemsOptions(new TextBlocklistItem[]
{
    new TextBlocklistItem("<text>")
});
Response<AddOrUpdateTextBlocklistItemsResult> response = client.AddOrUpdateBlocklistItems("<Name>", options);
]]></code>
This sample shows how to call AddOrUpdateBlocklistItems with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

AddOrUpdateTextBlocklistItemsOptions options = new AddOrUpdateTextBlocklistItemsOptions(new TextBlocklistItem[]
{
    new TextBlocklistItem("<text>")
    {
        Description = "<description>",
    }
});
Response<AddOrUpdateTextBlocklistItemsResult> response = client.AddOrUpdateBlocklistItems("<Name>", options);
]]></code></example>
    </member>
    <member name="AddOrUpdateBlocklistItemsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AddOrUpdateBlocklistItemsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItems = new object[]
    {
        new
        {
            text = "<text>",
        }
    },
});
Response response = await client.AddOrUpdateBlocklistItemsAsync("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("text").ToString());
]]></code>
This sample shows how to call AddOrUpdateBlocklistItemsAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItems = new object[]
    {
        new
        {
            description = "<description>",
            text = "<text>",
        }
    },
});
Response response = await client.AddOrUpdateBlocklistItemsAsync("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="AddOrUpdateBlocklistItems(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AddOrUpdateBlocklistItems and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItems = new object[]
    {
        new
        {
            text = "<text>",
        }
    },
});
Response response = client.AddOrUpdateBlocklistItems("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("text").ToString());
]]></code>
This sample shows how to call AddOrUpdateBlocklistItems with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItems = new object[]
    {
        new
        {
            description = "<description>",
            text = "<text>",
        }
    },
});
Response response = client.AddOrUpdateBlocklistItems("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("blocklistItems")[0].GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateTextBlocklistAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateTextBlocklistAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistName = "<blocklistName>",
});
Response response = await client.CreateOrUpdateTextBlocklistAsync("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
]]></code>
This sample shows how to call CreateOrUpdateTextBlocklistAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistName = "<blocklistName>",
    description = "<description>",
});
Response response = await client.CreateOrUpdateTextBlocklistAsync("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateTextBlocklist(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateTextBlocklist and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistName = "<blocklistName>",
});
Response response = client.CreateOrUpdateTextBlocklist("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
]]></code>
This sample shows how to call CreateOrUpdateTextBlocklist with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistName = "<blocklistName>",
    description = "<description>",
});
Response response = client.CreateOrUpdateTextBlocklist("<Name>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="DeleteTextBlocklistAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteTextBlocklistAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = await client.DeleteTextBlocklistAsync("<Name>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteTextBlocklistAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = await client.DeleteTextBlocklistAsync("<Name>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteTextBlocklist(string,RequestContext)">
      <example>
This sample shows how to call DeleteTextBlocklist.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = client.DeleteTextBlocklist("<Name>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteTextBlocklist with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = client.DeleteTextBlocklist("<Name>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTextBlocklistAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklistAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklist> response = await client.GetTextBlocklistAsync("<Name>");
]]></code>
This sample shows how to call GetTextBlocklistAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklist> response = await client.GetTextBlocklistAsync("<Name>");
]]></code></example>
    </member>
    <member name="GetTextBlocklist(string,CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklist.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklist> response = client.GetTextBlocklist("<Name>");
]]></code>
This sample shows how to call GetTextBlocklist with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklist> response = client.GetTextBlocklist("<Name>");
]]></code></example>
    </member>
    <member name="GetTextBlocklistAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTextBlocklistAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = await client.GetTextBlocklistAsync("<Name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
]]></code>
This sample shows how to call GetTextBlocklistAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = await client.GetTextBlocklistAsync("<Name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="GetTextBlocklist(string,RequestContext)">
      <example>
This sample shows how to call GetTextBlocklist and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = client.GetTextBlocklist("<Name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
]]></code>
This sample shows how to call GetTextBlocklist with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = client.GetTextBlocklist("<Name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code></example>
    </member>
    <member name="GetTextBlocklistItemAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklistItemAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklistItem> response = await client.GetTextBlocklistItemAsync("<Name>", "<blocklistItemId>");
]]></code>
This sample shows how to call GetTextBlocklistItemAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklistItem> response = await client.GetTextBlocklistItemAsync("<Name>", "<blocklistItemId>");
]]></code></example>
    </member>
    <member name="GetTextBlocklistItem(string,string,CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklistItem.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklistItem> response = client.GetTextBlocklistItem("<Name>", "<blocklistItemId>");
]]></code>
This sample shows how to call GetTextBlocklistItem with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response<TextBlocklistItem> response = client.GetTextBlocklistItem("<Name>", "<blocklistItemId>");
]]></code></example>
    </member>
    <member name="GetTextBlocklistItemAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetTextBlocklistItemAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = await client.GetTextBlocklistItemAsync("<Name>", "<blocklistItemId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("text").ToString());
]]></code>
This sample shows how to call GetTextBlocklistItemAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = await client.GetTextBlocklistItemAsync("<Name>", "<blocklistItemId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="GetTextBlocklistItem(string,string,RequestContext)">
      <example>
This sample shows how to call GetTextBlocklistItem and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = client.GetTextBlocklistItem("<Name>", "<blocklistItemId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("text").ToString());
]]></code>
This sample shows how to call GetTextBlocklistItem with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

Response response = client.GetTextBlocklistItem("<Name>", "<blocklistItemId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="RemoveBlocklistItemsAsync(string,RemoveTextBlocklistItemsOptions,CancellationToken)">
      <example>
This sample shows how to call RemoveBlocklistItemsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

RemoveTextBlocklistItemsOptions options = new RemoveTextBlocklistItemsOptions(new string[] { "<blocklistItemIds>" });
Response response = await client.RemoveBlocklistItemsAsync("<Name>", options);
]]></code>
This sample shows how to call RemoveBlocklistItemsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

RemoveTextBlocklistItemsOptions options = new RemoveTextBlocklistItemsOptions(new string[] { "<blocklistItemIds>" });
Response response = await client.RemoveBlocklistItemsAsync("<Name>", options);
]]></code></example>
    </member>
    <member name="RemoveBlocklistItems(string,RemoveTextBlocklistItemsOptions,CancellationToken)">
      <example>
This sample shows how to call RemoveBlocklistItems.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

RemoveTextBlocklistItemsOptions options = new RemoveTextBlocklistItemsOptions(new string[] { "<blocklistItemIds>" });
Response response = client.RemoveBlocklistItems("<Name>", options);
]]></code>
This sample shows how to call RemoveBlocklistItems with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

RemoveTextBlocklistItemsOptions options = new RemoveTextBlocklistItemsOptions(new string[] { "<blocklistItemIds>" });
Response response = client.RemoveBlocklistItems("<Name>", options);
]]></code></example>
    </member>
    <member name="RemoveBlocklistItemsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RemoveBlocklistItemsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItemIds = new object[]
    {
        "<blocklistItemIds>"
    },
});
Response response = await client.RemoveBlocklistItemsAsync("<Name>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RemoveBlocklistItemsAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItemIds = new object[]
    {
        "<blocklistItemIds>"
    },
});
Response response = await client.RemoveBlocklistItemsAsync("<Name>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RemoveBlocklistItems(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RemoveBlocklistItems.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItemIds = new object[]
    {
        "<blocklistItemIds>"
    },
});
Response response = client.RemoveBlocklistItems("<Name>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RemoveBlocklistItems with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    blocklistItemIds = new object[]
    {
        "<blocklistItemIds>"
    },
});
Response response = client.RemoveBlocklistItems("<Name>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTextBlocklistItemsAsync(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklistItemsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (TextBlocklistItem item in client.GetTextBlocklistItemsAsync("<Name>"))
{
}
]]></code>
This sample shows how to call GetTextBlocklistItemsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (TextBlocklistItem item in client.GetTextBlocklistItemsAsync("<Name>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTextBlocklistItems(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklistItems.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (TextBlocklistItem item in client.GetTextBlocklistItems("<Name>"))
{
}
]]></code>
This sample shows how to call GetTextBlocklistItems with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (TextBlocklistItem item in client.GetTextBlocklistItems("<Name>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTextBlocklistItemsAsync(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTextBlocklistItemsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<Name>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
    Console.WriteLine(result.GetProperty("text").ToString());
}
]]></code>
This sample shows how to call GetTextBlocklistItemsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<Name>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("text").ToString());
}
]]></code></example>
    </member>
    <member name="GetTextBlocklistItems(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTextBlocklistItems and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (BinaryData item in client.GetTextBlocklistItems("<Name>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
    Console.WriteLine(result.GetProperty("text").ToString());
}
]]></code>
This sample shows how to call GetTextBlocklistItems with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (BinaryData item in client.GetTextBlocklistItems("<Name>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistItemId").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("text").ToString());
}
]]></code></example>
    </member>
    <member name="GetTextBlocklistsAsync(CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklistsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (TextBlocklist item in client.GetTextBlocklistsAsync())
{
}
]]></code>
This sample shows how to call GetTextBlocklistsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (TextBlocklist item in client.GetTextBlocklistsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetTextBlocklists(CancellationToken)">
      <example>
This sample shows how to call GetTextBlocklists.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (TextBlocklist item in client.GetTextBlocklists())
{
}
]]></code>
This sample shows how to call GetTextBlocklists with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (TextBlocklist item in client.GetTextBlocklists())
{
}
]]></code></example>
    </member>
    <member name="GetTextBlocklistsAsync(RequestContext)">
      <example>
This sample shows how to call GetTextBlocklistsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (BinaryData item in client.GetTextBlocklistsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistName").ToString());
}
]]></code>
This sample shows how to call GetTextBlocklistsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

await foreach (BinaryData item in client.GetTextBlocklistsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
}
]]></code></example>
    </member>
    <member name="GetTextBlocklists(RequestContext)">
      <example>
This sample shows how to call GetTextBlocklists and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (BinaryData item in client.GetTextBlocklists(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistName").ToString());
}
]]></code>
This sample shows how to call GetTextBlocklists with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BlocklistClient client = new BlocklistClient(endpoint, credential);

foreach (BinaryData item in client.GetTextBlocklists(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("blocklistName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>