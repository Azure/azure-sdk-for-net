// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.ContentSafety
{
    /// <summary> The image can be either base64 encoded bytes or a blob URL. You can choose only one of these options. If both are provided, the request will be refused. The maximum image size is 2048 x 2048 pixels and should not exceed 4 MB, while the minimum image size is 50 x 50 pixels. </summary>
    public partial class ContentSafetyImageData
    {
        /// <summary> Initializes a new instance of ContentSafetyImageData. </summary>
        public ContentSafetyImageData()
        {
        }

        /// <summary> Initializes a new instance of ContentSafetyImageData. </summary>
        /// <param name="content"> The Base64 encoding of the image. </param>
        /// <param name="blobUri"> The blob url of the image. </param>
        internal ContentSafetyImageData(BinaryData content, Uri blobUri)
        {
            Content = content;
            BlobUri = blobUri;
        }

        /// <summary>
        /// The Base64 encoding of the image.
        /// <para>
        /// To assign a byte[] to this property use <see cref="BinaryData.FromBytes(byte[])"/>.
        /// The byte[] will be serialized to a Base64 encoded string.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
        /// <description>Creates a payload of "AQID".</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Content { get; set; }
        /// <summary> The blob url of the image. </summary>
        public Uri BlobUri { get; set; }
    }
}
