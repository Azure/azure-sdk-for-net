// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ContentSafety
{
    /// <summary> The analysis request of the text. </summary>
    public partial class TextDetectRequest
    {
        /// <summary> Initializes a new instance of TextDetectRequest. </summary>
        /// <param name="text"> The text needs to be scanned. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        public TextDetectRequest(string text)
        {
            Argument.AssertNotNull(text, nameof(text));

            Text = text;
            Categories = new ChangeTrackingList<TextCategory>();
            Languages = new ChangeTrackingList<string>();
            BlocklistIds = new ChangeTrackingList<string>();
        }

        /// <summary> The text needs to be scanned. </summary>
        public string Text { get; }
        /// <summary>
        /// The categories will be analyzed, if not assigned, a default set of categories'
        /// analysis results will be returned.
        /// </summary>
        public IList<TextCategory> Categories { get; }
        /// <summary>
        /// Language hints for text analysis.  Values can contain only the language code (ex.
        /// "en", "fr") of BCP 47. If no languages given, the service will detact languages.
        /// </summary>
        public IList<string> Languages { get; }
        /// <summary> The ids of blocklists. </summary>
        public IList<string> BlocklistIds { get; }
        /// <summary>
        /// When set to true, other analysis will be skipped once any of configured
        /// blocklists was hit. When set to false, all the analysis will be done even when
        /// blocklists were hit.
        /// </summary>
        public bool? BreakByBlocklists { get; set; }
    }
}
