// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.AI.ContentSafety
{
    public partial class ImageDetectResponse
    {
        internal static ImageDetectResponse DeserializeImageDetectResponse(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ImageDetectMultiSeverityResult> hateResult = default;
            Optional<ImageDetectMultiSeverityResult> selfHarmResult = default;
            Optional<ImageDetectMultiSeverityResult> sexualResult = default;
            Optional<ImageDetectMultiSeverityResult> violenceResult = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("hateResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hateResult = ImageDetectMultiSeverityResult.DeserializeImageDetectMultiSeverityResult(property.Value);
                    continue;
                }
                if (property.NameEquals("selfHarmResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    selfHarmResult = ImageDetectMultiSeverityResult.DeserializeImageDetectMultiSeverityResult(property.Value);
                    continue;
                }
                if (property.NameEquals("sexualResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sexualResult = ImageDetectMultiSeverityResult.DeserializeImageDetectMultiSeverityResult(property.Value);
                    continue;
                }
                if (property.NameEquals("violenceResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    violenceResult = ImageDetectMultiSeverityResult.DeserializeImageDetectMultiSeverityResult(property.Value);
                    continue;
                }
            }
            return new ImageDetectResponse(hateResult, selfHarmResult, sexualResult, violenceResult);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ImageDetectResponse FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeImageDetectResponse(document.RootElement);
        }
    }
}
