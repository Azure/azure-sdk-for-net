{
 "$id": "1",
 "Name": "ContentSafety",
 "ApiVersions": [
  "2023-10-01"
 ],
 "Enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "TextCategory",
   "crossLanguageDefinitionId": "ContentSafety.TextCategory",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "Hate",
     "value": "Hate",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "SelfHarm",
     "value": "SelfHarm",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "8",
     "kind": "enumvalue",
     "name": "Sexual",
     "value": "Sexual",
     "valueType": {
      "$id": "9",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "10",
     "kind": "enumvalue",
     "name": "Violence",
     "value": "Violence",
     "valueType": {
      "$id": "11",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    }
   ],
   "doc": "Text analyze category.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "12",
   "kind": "enum",
   "name": "AnalyzeTextOutputType",
   "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOutputType",
   "valueType": {
    "$id": "13",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "FourSeverityLevels",
     "value": "FourSeverityLevels",
     "valueType": {
      "$id": "15",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "12"
     },
     "doc": "Output severities in four levels, the value could be 0,2,4,6.",
     "decorators": []
    },
    {
     "$id": "16",
     "kind": "enumvalue",
     "name": "EightSeverityLevels",
     "value": "EightSeverityLevels",
     "valueType": {
      "$id": "17",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "12"
     },
     "doc": "Output severities in eight levels, the value could be 0,1,2,3,4,5,6,7.",
     "decorators": []
    }
   ],
   "doc": "The type of text analysis output.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "18",
   "kind": "enum",
   "name": "ImageCategory",
   "crossLanguageDefinitionId": "ContentSafety.ImageCategory",
   "valueType": {
    "$id": "19",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "20",
     "kind": "enumvalue",
     "name": "Hate",
     "value": "Hate",
     "valueType": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    },
    {
     "$id": "22",
     "kind": "enumvalue",
     "name": "SelfHarm",
     "value": "SelfHarm",
     "valueType": {
      "$id": "23",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    },
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "Sexual",
     "value": "Sexual",
     "valueType": {
      "$id": "25",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    },
    {
     "$id": "26",
     "kind": "enumvalue",
     "name": "Violence",
     "value": "Violence",
     "valueType": {
      "$id": "27",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    }
   ],
   "doc": "Image analyze category.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "28",
   "kind": "enum",
   "name": "AnalyzeImageOutputType",
   "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageOutputType",
   "valueType": {
    "$id": "29",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "30",
     "kind": "enumvalue",
     "name": "FourSeverityLevels",
     "value": "FourSeverityLevels",
     "valueType": {
      "$id": "31",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "28"
     },
     "doc": "Output severities in four levels, the value could be 0,2,4,6.",
     "decorators": []
    }
   ],
   "doc": "The type of image analysis output.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "32",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "ContentSafety.Versions",
   "valueType": {
    "$id": "33",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "34",
     "kind": "enumvalue",
     "name": "v2023_10_01",
     "value": "2023-10-01",
     "valueType": {
      "$id": "35",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "32"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  }
 ],
 "Models": [
  {
   "$id": "36",
   "kind": "model",
   "name": "AnalyzeTextOptions",
   "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOptions",
   "usage": "Input,Json",
   "doc": "The text analysis request.",
   "decorators": [],
   "properties": [
    {
     "$id": "37",
     "kind": "property",
     "name": "text",
     "serializedName": "text",
     "doc": "The text needs to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request.",
     "type": {
      "$id": "38",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOptions.text"
    },
    {
     "$id": "39",
     "kind": "property",
     "name": "categories",
     "serializedName": "categories",
     "doc": "The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned.",
     "type": {
      "$id": "40",
      "kind": "array",
      "name": "ArrayTextCategory",
      "valueType": {
       "$ref": "2"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOptions.categories"
    },
    {
     "$id": "41",
     "kind": "property",
     "name": "blocklistNames",
     "serializedName": "blocklistNames",
     "doc": "The names of blocklists.",
     "type": {
      "$id": "42",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "43",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOptions.blocklistNames"
    },
    {
     "$id": "44",
     "kind": "property",
     "name": "haltOnBlocklistHit",
     "serializedName": "haltOnBlocklistHit",
     "doc": "When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit.",
     "type": {
      "$id": "45",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOptions.haltOnBlocklistHit"
    },
    {
     "$id": "46",
     "kind": "property",
     "name": "outputType",
     "serializedName": "outputType",
     "doc": "This refers to the type of text analysis output. If no value is assigned, the default value will be \"FourSeverityLevels\".",
     "type": {
      "$ref": "12"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextOptions.outputType"
    }
   ]
  },
  {
   "$id": "47",
   "kind": "model",
   "name": "AnalyzeTextResult",
   "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextResult",
   "usage": "Output,Json",
   "doc": "The text analysis response.",
   "decorators": [],
   "properties": [
    {
     "$id": "48",
     "kind": "property",
     "name": "blocklistsMatch",
     "serializedName": "blocklistsMatch",
     "doc": "The blocklist match details.",
     "type": {
      "$id": "49",
      "kind": "array",
      "name": "ArrayTextBlocklistMatch",
      "valueType": {
       "$id": "50",
       "kind": "model",
       "name": "TextBlocklistMatch",
       "crossLanguageDefinitionId": "ContentSafety.TextBlocklistMatch",
       "usage": "Output,Json",
       "doc": "The result of blocklist match.",
       "decorators": [],
       "properties": [
        {
         "$id": "51",
         "kind": "property",
         "name": "blocklistName",
         "serializedName": "blocklistName",
         "doc": "The name of the matched blocklist.",
         "type": {
          "$id": "52",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextBlocklistMatch.blocklistName"
        },
        {
         "$id": "53",
         "kind": "property",
         "name": "blocklistItemId",
         "serializedName": "blocklistItemId",
         "doc": "The ID of the matched item.",
         "type": {
          "$id": "54",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextBlocklistMatch.blocklistItemId"
        },
        {
         "$id": "55",
         "kind": "property",
         "name": "blocklistItemText",
         "serializedName": "blocklistItemText",
         "doc": "The content of the matched item.",
         "type": {
          "$id": "56",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextBlocklistMatch.blocklistItemText"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextResult.blocklistsMatch"
    },
    {
     "$id": "57",
     "kind": "property",
     "name": "categoriesAnalysis",
     "serializedName": "categoriesAnalysis",
     "doc": "Analysis result for categories.",
     "type": {
      "$id": "58",
      "kind": "array",
      "name": "ArrayTextCategoriesAnalysis",
      "valueType": {
       "$id": "59",
       "kind": "model",
       "name": "TextCategoriesAnalysis",
       "crossLanguageDefinitionId": "ContentSafety.TextCategoriesAnalysis",
       "usage": "Output,Json",
       "doc": "Text analysis result.",
       "decorators": [],
       "properties": [
        {
         "$id": "60",
         "kind": "property",
         "name": "category",
         "serializedName": "category",
         "doc": "The text analysis category.",
         "type": {
          "$ref": "2"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextCategoriesAnalysis.category"
        },
        {
         "$id": "61",
         "kind": "property",
         "name": "severity",
         "serializedName": "severity",
         "doc": "The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7.",
         "type": {
          "$id": "62",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextCategoriesAnalysis.severity"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeTextResult.categoriesAnalysis"
    }
   ]
  },
  {
   "$ref": "50"
  },
  {
   "$ref": "59"
  },
  {
   "$id": "63",
   "kind": "model",
   "name": "AnalyzeImageOptions",
   "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageOptions",
   "usage": "Input,Json",
   "doc": "The image analysis request.",
   "decorators": [],
   "properties": [
    {
     "$id": "64",
     "kind": "property",
     "name": "image",
     "serializedName": "image",
     "doc": "The image needs to be analyzed.",
     "type": {
      "$id": "65",
      "kind": "model",
      "name": "ContentSafetyImageData",
      "crossLanguageDefinitionId": "ContentSafety.ImageData",
      "usage": "Input,Json",
      "doc": "The image can be either base64 encoded bytes or a blob URL. You can choose only one of these options. If both are provided, the request will be refused. The maximum image size is 2048 x 2048 pixels and should not exceed 4 MB, while the minimum image size is 50 x 50 pixels.",
      "decorators": [],
      "properties": [
       {
        "$id": "66",
        "kind": "property",
        "name": "content",
        "serializedName": "content",
        "doc": "The Base64 encoding of the image.",
        "type": {
         "$id": "67",
         "kind": "bytes",
         "name": "bytes",
         "encode": "base64",
         "crossLanguageDefinitionId": "TypeSpec.bytes",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "ContentSafety.ImageData.content"
       },
       {
        "$id": "68",
        "kind": "property",
        "name": "BlobUri",
        "serializedName": "blobUrl",
        "doc": "The blob url of the image.",
        "type": {
         "$id": "69",
         "kind": "url",
         "name": "url",
         "crossLanguageDefinitionId": "TypeSpec.url",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "ContentSafety.ImageData.blobUrl"
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageOptions.image"
    },
    {
     "$id": "70",
     "kind": "property",
     "name": "categories",
     "serializedName": "categories",
     "doc": "The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned.",
     "type": {
      "$id": "71",
      "kind": "array",
      "name": "ArrayImageCategory",
      "valueType": {
       "$ref": "18"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageOptions.categories"
    },
    {
     "$id": "72",
     "kind": "property",
     "name": "outputType",
     "serializedName": "outputType",
     "doc": "This refers to the type of image analysis output. If no value is assigned, the default value will be \"FourSeverityLevels\".",
     "type": {
      "$ref": "28"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageOptions.outputType"
    }
   ]
  },
  {
   "$ref": "65"
  },
  {
   "$id": "73",
   "kind": "model",
   "name": "AnalyzeImageResult",
   "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageResult",
   "usage": "Output,Json",
   "doc": "The image analysis response.",
   "decorators": [],
   "properties": [
    {
     "$id": "74",
     "kind": "property",
     "name": "categoriesAnalysis",
     "serializedName": "categoriesAnalysis",
     "doc": "Analysis result for categories.",
     "type": {
      "$id": "75",
      "kind": "array",
      "name": "ArrayImageCategoriesAnalysis",
      "valueType": {
       "$id": "76",
       "kind": "model",
       "name": "ImageCategoriesAnalysis",
       "crossLanguageDefinitionId": "ContentSafety.ImageCategoriesAnalysis",
       "usage": "Output,Json",
       "doc": "Image analysis result.",
       "decorators": [],
       "properties": [
        {
         "$id": "77",
         "kind": "property",
         "name": "category",
         "serializedName": "category",
         "doc": "The image analysis category.",
         "type": {
          "$ref": "18"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.ImageCategoriesAnalysis.category"
        },
        {
         "$id": "78",
         "kind": "property",
         "name": "severity",
         "serializedName": "severity",
         "doc": "The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’, and the output value can be 0, 2, 4, 6.",
         "type": {
          "$id": "79",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.ImageCategoriesAnalysis.severity"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AnalyzeImageResult.categoriesAnalysis"
    }
   ]
  },
  {
   "$ref": "76"
  },
  {
   "$id": "80",
   "kind": "model",
   "name": "AddOrUpdateTextBlocklistItemsOptions",
   "crossLanguageDefinitionId": "ContentSafety.AddOrUpdateTextBlocklistItemsOptions",
   "usage": "Input,Json",
   "doc": "The request to add blocklistItems to a text blocklist.",
   "decorators": [],
   "properties": [
    {
     "$id": "81",
     "kind": "property",
     "name": "blocklistItems",
     "serializedName": "blocklistItems",
     "doc": "Array of blocklistItems to add.",
     "type": {
      "$id": "82",
      "kind": "array",
      "name": "ArrayTextBlocklistItem",
      "valueType": {
       "$id": "83",
       "kind": "model",
       "name": "TextBlocklistItem",
       "crossLanguageDefinitionId": "ContentSafety.TextBlocklistItem",
       "usage": "Input,Output,Json",
       "doc": "Item in a TextBlocklist.",
       "decorators": [],
       "properties": [
        {
         "$id": "84",
         "kind": "property",
         "name": "blocklistItemId",
         "serializedName": "blocklistItemId",
         "doc": "The service will generate a BlocklistItemId, which will be a UUID.",
         "type": {
          "$id": "85",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextBlocklistItem.blocklistItemId"
        },
        {
         "$id": "86",
         "kind": "property",
         "name": "description",
         "serializedName": "description",
         "doc": "BlocklistItem description.",
         "type": {
          "$id": "87",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextBlocklistItem.description"
        },
        {
         "$id": "88",
         "kind": "property",
         "name": "text",
         "serializedName": "text",
         "doc": "BlocklistItem content.",
         "type": {
          "$id": "89",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "ContentSafety.TextBlocklistItem.text"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AddOrUpdateTextBlocklistItemsOptions.blocklistItems"
    }
   ]
  },
  {
   "$ref": "83"
  },
  {
   "$id": "90",
   "kind": "model",
   "name": "AddOrUpdateTextBlocklistItemsResult",
   "crossLanguageDefinitionId": "ContentSafety.AddOrUpdateTextBlocklistItemsResult",
   "usage": "Output,Json",
   "doc": "The response of adding blocklistItems to the text blocklist.",
   "decorators": [],
   "properties": [
    {
     "$id": "91",
     "kind": "property",
     "name": "blocklistItems",
     "serializedName": "blocklistItems",
     "doc": "Array of blocklistItems have been added.",
     "type": {
      "$id": "92",
      "kind": "array",
      "name": "ArrayTextBlocklistItem",
      "valueType": {
       "$ref": "83"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.AddOrUpdateTextBlocklistItemsResult.blocklistItems"
    }
   ]
  },
  {
   "$id": "93",
   "kind": "model",
   "name": "TextBlocklist",
   "crossLanguageDefinitionId": "ContentSafety.TextBlocklist",
   "usage": "Output,Json",
   "doc": "Text Blocklist.",
   "decorators": [],
   "properties": [
    {
     "$id": "94",
     "kind": "property",
     "name": "Name",
     "serializedName": "blocklistName",
     "doc": "Text blocklist name.",
     "type": {
      "$id": "95",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.TextBlocklist.blocklistName"
    },
    {
     "$id": "96",
     "kind": "property",
     "name": "description",
     "serializedName": "description",
     "doc": "Text blocklist description.",
     "type": {
      "$id": "97",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.TextBlocklist.description"
    }
   ]
  },
  {
   "$id": "98",
   "kind": "model",
   "name": "RemoveTextBlocklistItemsOptions",
   "crossLanguageDefinitionId": "ContentSafety.RemoveTextBlocklistItemsOptions",
   "usage": "Input,Json",
   "doc": "The request to remove blocklistItems from a text blocklist.",
   "decorators": [],
   "properties": [
    {
     "$id": "99",
     "kind": "property",
     "name": "blocklistItemIds",
     "serializedName": "blocklistItemIds",
     "doc": "Array of blocklistItemIds to remove.",
     "type": {
      "$id": "100",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "101",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ContentSafety.RemoveTextBlocklistItemsOptions.blocklistItemIds"
    }
   ]
  },
  {
   "$id": "102",
   "kind": "model",
   "name": "PagedTextBlocklistItem",
   "crossLanguageDefinitionId": "Azure.Core.Foundations.CustomPage",
   "usage": "Output,Json",
   "doc": "Paged collection of TextBlocklistItem items",
   "decorators": [],
   "properties": [
    {
     "$id": "103",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The TextBlocklistItem items on this page",
     "type": {
      "$id": "104",
      "kind": "array",
      "name": "ArrayTextBlocklistItem",
      "valueType": {
       "$ref": "83"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.Foundations.CustomPage.value"
    },
    {
     "$id": "105",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "106",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "107",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.Foundations.CustomPage.nextLink"
    }
   ]
  },
  {
   "$id": "108",
   "kind": "model",
   "name": "PagedTextBlocklist",
   "crossLanguageDefinitionId": "Azure.Core.Foundations.CustomPage",
   "usage": "Output,Json",
   "doc": "Paged collection of TextBlocklist items",
   "decorators": [],
   "properties": [
    {
     "$id": "109",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The TextBlocklist items on this page",
     "type": {
      "$id": "110",
      "kind": "array",
      "name": "ArrayTextBlocklist",
      "valueType": {
       "$ref": "93"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.Foundations.CustomPage.value"
    },
    {
     "$id": "111",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "112",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "113",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.Foundations.CustomPage.nextLink"
    }
   ]
  }
 ],
 "Clients": [
  {
   "$id": "114",
   "Name": "ContentSafetyClient",
   "Operations": [
    {
     "$id": "115",
     "Name": "analyzeText",
     "ResourceName": "ContentSafetyClient",
     "Summary": "Analyze Text",
     "Doc": "A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "116",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "117",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "118",
        "Type": {
         "$id": "119",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "120",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "121",
        "kind": "constant",
        "valueType": {
         "$id": "122",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "123",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "124",
        "kind": "constant",
        "valueType": {
         "$id": "125",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "126",
       "Name": "options",
       "NameInRequest": "options",
       "Doc": "The text analysis request.",
       "Type": {
        "$ref": "36"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "127",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "47"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text:analyze",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "128",
       "kind": "http",
       "name": "Analyze Text",
       "description": "Analyze Text",
       "filePath": "2023-10-01/AnalyzeText.json",
       "parameters": [
        {
         "$id": "129",
         "parameter": {
          "$ref": "116"
         },
         "value": {
          "$id": "130",
          "kind": "string",
          "type": {
           "$ref": "117"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "131",
         "parameter": {
          "$ref": "126"
         },
         "value": {
          "$id": "132",
          "kind": "model",
          "type": {
           "$ref": "36"
          },
          "value": {
           "$id": "133",
           "text": {
            "$id": "134",
            "kind": "string",
            "type": {
             "$ref": "38"
            },
            "value": "This is text example"
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "135",
         "response": {
          "$ref": "127"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "136",
          "kind": "model",
          "type": {
           "$ref": "47"
          },
          "value": {
           "$id": "137",
           "blocklistsMatch": {
            "$id": "138",
            "kind": "array",
            "type": {
             "$ref": "49"
            },
            "value": []
           },
           "categoriesAnalysis": {
            "$id": "139",
            "kind": "array",
            "type": {
             "$ref": "58"
            },
            "value": [
             {
              "$id": "140",
              "kind": "model",
              "type": {
               "$ref": "59"
              },
              "value": {
               "$id": "141",
               "category": {
                "$id": "142",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "Hate"
               },
               "severity": {
                "$id": "143",
                "kind": "number",
                "type": {
                 "$ref": "62"
                },
                "value": 0
               }
              }
             },
             {
              "$id": "144",
              "kind": "model",
              "type": {
               "$ref": "59"
              },
              "value": {
               "$id": "145",
               "category": {
                "$id": "146",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "SelfHarm"
               },
               "severity": {
                "$id": "147",
                "kind": "number",
                "type": {
                 "$ref": "62"
                },
                "value": 0
               }
              }
             },
             {
              "$id": "148",
              "kind": "model",
              "type": {
               "$ref": "59"
              },
              "value": {
               "$id": "149",
               "category": {
                "$id": "150",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "Sexual"
               },
               "severity": {
                "$id": "151",
                "kind": "number",
                "type": {
                 "$ref": "62"
                },
                "value": 0
               }
              }
             },
             {
              "$id": "152",
              "kind": "model",
              "type": {
               "$ref": "59"
              },
              "value": {
               "$id": "153",
               "category": {
                "$id": "154",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "Violence"
               },
               "severity": {
                "$id": "155",
                "kind": "number",
                "type": {
                 "$ref": "62"
                },
                "value": 0
               }
              }
             }
            ]
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "156",
     "Name": "analyzeImage",
     "ResourceName": "ContentSafetyClient",
     "Summary": "Analyze Image",
     "Doc": "A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "157",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "158",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "159",
        "Type": {
         "$id": "160",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "161",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "162",
        "kind": "constant",
        "valueType": {
         "$id": "163",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "164",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "165",
        "kind": "constant",
        "valueType": {
         "$id": "166",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "167",
       "Name": "options",
       "NameInRequest": "options",
       "Doc": "The image analysis request.",
       "Type": {
        "$ref": "63"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "168",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "73"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/image:analyze",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "169",
       "kind": "http",
       "name": "Analyze Image",
       "description": "Analyze Image",
       "filePath": "2023-10-01/AnalyzeImage.json",
       "parameters": [
        {
         "$id": "170",
         "parameter": {
          "$ref": "157"
         },
         "value": {
          "$id": "171",
          "kind": "string",
          "type": {
           "$ref": "158"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "172",
         "parameter": {
          "$ref": "167"
         },
         "value": {
          "$id": "173",
          "kind": "model",
          "type": {
           "$ref": "63"
          },
          "value": {
           "$id": "174",
           "image": {
            "$id": "175",
            "kind": "model",
            "type": {
             "$ref": "65"
            },
            "value": {
             "$id": "176",
             "content": {
              "$id": "177",
              "kind": "string",
              "type": {
               "$ref": "67"
              },
              "value": "Y29udGVudDE="
             }
            }
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "178",
         "response": {
          "$ref": "168"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "179",
          "kind": "model",
          "type": {
           "$ref": "73"
          },
          "value": {
           "$id": "180",
           "categoriesAnalysis": {
            "$id": "181",
            "kind": "array",
            "type": {
             "$ref": "75"
            },
            "value": [
             {
              "$id": "182",
              "kind": "model",
              "type": {
               "$ref": "76"
              },
              "value": {
               "$id": "183",
               "category": {
                "$id": "184",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Hate"
               },
               "severity": {
                "$id": "185",
                "kind": "number",
                "type": {
                 "$ref": "79"
                },
                "value": 0
               }
              }
             },
             {
              "$id": "186",
              "kind": "model",
              "type": {
               "$ref": "76"
              },
              "value": {
               "$id": "187",
               "category": {
                "$id": "188",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "SelfHarm"
               },
               "severity": {
                "$id": "189",
                "kind": "number",
                "type": {
                 "$ref": "79"
                },
                "value": 0
               }
              }
             },
             {
              "$id": "190",
              "kind": "model",
              "type": {
               "$ref": "76"
              },
              "value": {
               "$id": "191",
               "category": {
                "$id": "192",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Sexual"
               },
               "severity": {
                "$id": "193",
                "kind": "number",
                "type": {
                 "$ref": "79"
                },
                "value": 0
               }
              }
             },
             {
              "$id": "194",
              "kind": "model",
              "type": {
               "$ref": "76"
              },
              "value": {
               "$id": "195",
               "category": {
                "$id": "196",
                "kind": "string",
                "type": {
                 "$ref": "18"
                },
                "value": "Violence"
               },
               "severity": {
                "$id": "197",
                "kind": "number",
                "type": {
                 "$ref": "79"
                },
                "value": 2
               }
              }
             }
            ]
           }
          }
         }
        }
       ]
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "198"
   },
   "Parameters": [
    {
     "$id": "199",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://<resource-name>.cognitiveservices.azure.com).",
     "Type": {
      "$id": "200",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "201",
   "Name": "BlocklistClient",
   "Operations": [
    {
     "$id": "202",
     "Name": "addOrUpdateBlocklistItems",
     "ResourceName": "BlocklistClient",
     "Summary": "Add or update BlocklistItems To Text Blocklist",
     "Doc": "Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "203",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "204",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "205",
        "Type": {
         "$id": "206",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "207",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "208",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "209",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "210",
        "kind": "constant",
        "valueType": {
         "$id": "211",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "212",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "213",
        "kind": "constant",
        "valueType": {
         "$id": "214",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "215",
       "Name": "options",
       "NameInRequest": "options",
       "Doc": "Options for adding or updating blocklist items.",
       "Type": {
        "$ref": "80"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "216",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "90"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "217",
       "kind": "http",
       "name": "Add or Update BlocklistItems To Text Blocklist",
       "description": "Add or Update BlocklistItems To Text Blocklist",
       "filePath": "2023-10-01/AddOrUpdateBlocklistItems.json",
       "parameters": [
        {
         "$id": "218",
         "parameter": {
          "$ref": "203"
         },
         "value": {
          "$id": "219",
          "kind": "string",
          "type": {
           "$ref": "204"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "220",
         "parameter": {
          "$ref": "207"
         },
         "value": {
          "$id": "221",
          "kind": "string",
          "type": {
           "$ref": "208"
          },
          "value": "TestBlocklist"
         }
        },
        {
         "$id": "222",
         "parameter": {
          "$ref": "215"
         },
         "value": {
          "$id": "223",
          "kind": "model",
          "type": {
           "$ref": "80"
          },
          "value": {
           "$id": "224",
           "blocklistItems": {
            "$id": "225",
            "kind": "array",
            "type": {
             "$ref": "82"
            },
            "value": [
             {
              "$id": "226",
              "kind": "model",
              "type": {
               "$ref": "83"
              },
              "value": {
               "$id": "227",
               "description": {
                "$id": "228",
                "kind": "string",
                "type": {
                 "$ref": "87"
                },
                "value": "Hate word"
               },
               "text": {
                "$id": "229",
                "kind": "string",
                "type": {
                 "$ref": "89"
                },
                "value": "hate"
               }
              }
             }
            ]
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "230",
         "response": {
          "$ref": "216"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "231",
          "kind": "model",
          "type": {
           "$ref": "90"
          },
          "value": {
           "$id": "232",
           "blocklistItems": {
            "$id": "233",
            "kind": "array",
            "type": {
             "$ref": "92"
            },
            "value": [
             {
              "$id": "234",
              "kind": "model",
              "type": {
               "$ref": "83"
              },
              "value": {
               "$id": "235",
               "blocklistItemId": {
                "$id": "236",
                "kind": "string",
                "type": {
                 "$ref": "85"
                },
                "value": "9511969e-f1e3-4604-9127-05ee16c509ec"
               },
               "description": {
                "$id": "237",
                "kind": "string",
                "type": {
                 "$ref": "87"
                },
                "value": "Hate word"
               },
               "text": {
                "$id": "238",
                "kind": "string",
                "type": {
                 "$ref": "89"
                },
                "value": "hate"
               }
              }
             }
            ]
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "239",
     "Name": "createOrUpdateTextBlocklist",
     "ResourceName": "TextBlocklist",
     "Summary": "Create Or Update Text Blocklist",
     "Doc": "Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "240",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "241",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "242",
        "Type": {
         "$id": "243",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "244",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "245",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "246",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "This request has a JSON Merge Patch body.",
       "Type": {
        "$id": "247",
        "kind": "constant",
        "valueType": {
         "$id": "248",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/merge-patch+json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "249",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "250",
        "kind": "constant",
        "valueType": {
         "$id": "251",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "252",
       "Name": "options",
       "NameInRequest": "options",
       "Doc": "The resource instance.",
       "Type": {
        "$ref": "93"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "253",
       "StatusCodes": [
        201
       ],
       "BodyType": {
        "$ref": "93"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      },
      {
       "$id": "254",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "93"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "PATCH",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}",
     "RequestMediaTypes": [
      "application/merge-patch+json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "Decorators": [],
     "Examples": [
      {
       "$id": "255",
       "kind": "http",
       "name": "Create Or Update Text Blocklist",
       "description": "Create Or Update Text Blocklist",
       "filePath": "2023-10-01/CreateOrUpdateTextBlocklist.json",
       "parameters": [
        {
         "$id": "256",
         "parameter": {
          "$ref": "240"
         },
         "value": {
          "$id": "257",
          "kind": "string",
          "type": {
           "$ref": "241"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "258",
         "parameter": {
          "$ref": "244"
         },
         "value": {
          "$id": "259",
          "kind": "string",
          "type": {
           "$ref": "245"
          },
          "value": "TestBlocklist"
         }
        },
        {
         "$id": "260",
         "parameter": {
          "$ref": "252"
         },
         "value": {
          "$id": "261",
          "kind": "model",
          "type": {
           "$ref": "93"
          },
          "value": {
           "$id": "262",
           "description": {
            "$id": "263",
            "kind": "string",
            "type": {
             "$ref": "97"
            },
            "value": "Test Blocklist"
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "264",
         "response": {
          "$ref": "254"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "265",
          "kind": "model",
          "type": {
           "$ref": "93"
          },
          "value": {
           "$id": "266",
           "blocklistName": {
            "$id": "267",
            "kind": "string",
            "type": {
             "$ref": "95"
            },
            "value": "TestBlocklist"
           },
           "description": {
            "$id": "268",
            "kind": "string",
            "type": {
             "$ref": "97"
            },
            "value": "Test Blocklist"
           }
          }
         }
        },
        {
         "$id": "269",
         "response": {
          "$ref": "253"
         },
         "statusCode": 201,
         "bodyValue": {
          "$id": "270",
          "kind": "model",
          "type": {
           "$ref": "93"
          },
          "value": {
           "$id": "271",
           "blocklistName": {
            "$id": "272",
            "kind": "string",
            "type": {
             "$ref": "95"
            },
            "value": "TestBlocklist"
           },
           "description": {
            "$id": "273",
            "kind": "string",
            "type": {
             "$ref": "97"
            },
            "value": "Test Blocklist"
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "274",
     "Name": "deleteTextBlocklist",
     "ResourceName": "TextBlocklist",
     "Summary": "Delete Text Blocklist By blocklistName",
     "Doc": "Deletes a text blocklist.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "275",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "276",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "277",
        "Type": {
         "$id": "278",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "279",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "280",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "281",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "282",
        "kind": "constant",
        "valueType": {
         "$id": "283",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "284",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "285",
       "kind": "http",
       "name": "Delete Text Blocklist By blocklistName",
       "description": "Delete Text Blocklist By blocklistName",
       "filePath": "2023-10-01/DeleteTextBlocklist.json",
       "parameters": [
        {
         "$id": "286",
         "parameter": {
          "$ref": "275"
         },
         "value": {
          "$id": "287",
          "kind": "string",
          "type": {
           "$ref": "276"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "288",
         "parameter": {
          "$ref": "279"
         },
         "value": {
          "$id": "289",
          "kind": "string",
          "type": {
           "$ref": "280"
          },
          "value": "TestBlocklist"
         }
        }
       ],
       "responses": [
        {
         "$id": "290",
         "response": {
          "$ref": "284"
         },
         "statusCode": 204
        }
       ]
      }
     ]
    },
    {
     "$id": "291",
     "Name": "getTextBlocklist",
     "ResourceName": "TextBlocklist",
     "Summary": "Get Text Blocklist By blocklistName",
     "Doc": "Returns text blocklist details.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "292",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "293",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "294",
        "Type": {
         "$id": "295",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "296",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "297",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "298",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "299",
        "kind": "constant",
        "valueType": {
         "$id": "300",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "301",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "93"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "302",
       "kind": "http",
       "name": "Get Text Blocklist By blocklistName",
       "description": "Get Text Blocklist By blocklistName",
       "filePath": "2023-10-01/GetTextBlocklist.json",
       "parameters": [
        {
         "$id": "303",
         "parameter": {
          "$ref": "292"
         },
         "value": {
          "$id": "304",
          "kind": "string",
          "type": {
           "$ref": "293"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "305",
         "parameter": {
          "$ref": "296"
         },
         "value": {
          "$id": "306",
          "kind": "string",
          "type": {
           "$ref": "297"
          },
          "value": "TestBlocklist"
         }
        }
       ],
       "responses": [
        {
         "$id": "307",
         "response": {
          "$ref": "301"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "308",
          "kind": "model",
          "type": {
           "$ref": "93"
          },
          "value": {
           "$id": "309",
           "blocklistName": {
            "$id": "310",
            "kind": "string",
            "type": {
             "$ref": "95"
            },
            "value": "TestBlocklist"
           },
           "description": {
            "$id": "311",
            "kind": "string",
            "type": {
             "$ref": "97"
            },
            "value": "Test Blocklist"
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "312",
     "Name": "getTextBlocklistItem",
     "ResourceName": "TextBlocklistItem",
     "Summary": "Get BlocklistItem By blocklistName And blocklistItemId",
     "Doc": "Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "313",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "314",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "315",
        "Type": {
         "$id": "316",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "317",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "318",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "319",
       "Name": "blocklistItemId",
       "NameInRequest": "blocklistItemId",
       "Doc": "The service will generate a BlocklistItemId, which will be a UUID.",
       "Type": {
        "$id": "320",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "321",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "322",
        "kind": "constant",
        "valueType": {
         "$id": "323",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "324",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "83"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "325",
       "kind": "http",
       "name": "Get BlockItem By blocklistName And blocklistItemId",
       "description": "Get BlockItem By blocklistName And blocklistItemId",
       "filePath": "2023-10-01/GetTextBlocklistItem.json",
       "parameters": [
        {
         "$id": "326",
         "parameter": {
          "$ref": "313"
         },
         "value": {
          "$id": "327",
          "kind": "string",
          "type": {
           "$ref": "314"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "328",
         "parameter": {
          "$ref": "317"
         },
         "value": {
          "$id": "329",
          "kind": "string",
          "type": {
           "$ref": "318"
          },
          "value": "TestBlocklist"
         }
        },
        {
         "$id": "330",
         "parameter": {
          "$ref": "319"
         },
         "value": {
          "$id": "331",
          "kind": "string",
          "type": {
           "$ref": "320"
          },
          "value": "9511969e-f1e3-4604-9127-05ee16c509ec"
         }
        }
       ],
       "responses": [
        {
         "$id": "332",
         "response": {
          "$ref": "324"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "333",
          "kind": "model",
          "type": {
           "$ref": "83"
          },
          "value": {
           "$id": "334",
           "blocklistItemId": {
            "$id": "335",
            "kind": "string",
            "type": {
             "$ref": "85"
            },
            "value": "9511969e-f1e3-4604-9127-05ee16c509ec"
           },
           "description": {
            "$id": "336",
            "kind": "string",
            "type": {
             "$ref": "87"
            },
            "value": "Hate word"
           },
           "text": {
            "$id": "337",
            "kind": "string",
            "type": {
             "$ref": "89"
            },
            "value": "hate"
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "338",
     "Name": "listTextBlocklistItems",
     "ResourceName": "TextBlocklistItem",
     "Summary": "Get All BlocklistItems By blocklistName",
     "Doc": "Get all blocklistItems in a text blocklist.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "339",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "340",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "341",
        "Type": {
         "$id": "342",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "343",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "344",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "345",
       "Name": "top",
       "NameInRequest": "top",
       "Doc": "The number of result items to return.",
       "Type": {
        "$id": "346",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "347",
       "Name": "skip",
       "NameInRequest": "skip",
       "Doc": "The number of result items to skip.",
       "Type": {
        "$id": "348",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "349",
       "Name": "maxpagesize",
       "NameInRequest": "maxpagesize",
       "Doc": "The maximum number of result items per page.",
       "Type": {
        "$id": "350",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "351",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "352",
        "kind": "constant",
        "valueType": {
         "$id": "353",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "354",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "102"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}/blocklistItems",
     "BufferResponse": true,
     "Paging": {
      "$id": "355",
      "ItemName": "value",
      "NextLinkName": "nextLink"
     },
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "356",
       "kind": "http",
       "name": "Get All BlockItems By blocklistName",
       "description": "Get All BlockItems By blocklistName",
       "filePath": "2023-10-01/ListTextBlocklistItems.json",
       "parameters": [
        {
         "$id": "357",
         "parameter": {
          "$ref": "339"
         },
         "value": {
          "$id": "358",
          "kind": "string",
          "type": {
           "$ref": "340"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "359",
         "parameter": {
          "$ref": "343"
         },
         "value": {
          "$id": "360",
          "kind": "string",
          "type": {
           "$ref": "344"
          },
          "value": "TestBlocklist"
         }
        }
       ],
       "responses": [
        {
         "$id": "361",
         "response": {
          "$ref": "354"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "362",
          "kind": "model",
          "type": {
           "$ref": "102"
          },
          "value": {
           "$id": "363",
           "value": {
            "$id": "364",
            "kind": "array",
            "type": {
             "$ref": "104"
            },
            "value": [
             {
              "$id": "365",
              "kind": "model",
              "type": {
               "$ref": "83"
              },
              "value": {
               "$id": "366",
               "blocklistItemId": {
                "$id": "367",
                "kind": "string",
                "type": {
                 "$ref": "85"
                },
                "value": "9511969e-f1e3-4604-9127-05ee16c509ec"
               },
               "description": {
                "$id": "368",
                "kind": "string",
                "type": {
                 "$ref": "87"
                },
                "value": "Hate word"
               },
               "text": {
                "$id": "369",
                "kind": "string",
                "type": {
                 "$ref": "89"
                },
                "value": "hate"
               }
              }
             }
            ]
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "370",
     "Name": "listTextBlocklists",
     "ResourceName": "TextBlocklist",
     "Summary": "Get All Text Blocklists",
     "Doc": "Get all text blocklists details.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "371",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "372",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "373",
        "Type": {
         "$id": "374",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "375",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "376",
        "kind": "constant",
        "valueType": {
         "$id": "377",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "378",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "108"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists",
     "BufferResponse": true,
     "Paging": {
      "$id": "379",
      "ItemName": "value",
      "NextLinkName": "nextLink"
     },
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "380",
       "kind": "http",
       "name": "Get All Text Blocklists",
       "description": "Get All Text Blocklists",
       "filePath": "2023-10-01/ListTextBlocklists.json",
       "parameters": [
        {
         "$id": "381",
         "parameter": {
          "$ref": "371"
         },
         "value": {
          "$id": "382",
          "kind": "string",
          "type": {
           "$ref": "372"
          },
          "value": "2023-10-01"
         }
        }
       ],
       "responses": [
        {
         "$id": "383",
         "response": {
          "$ref": "378"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "384",
          "kind": "model",
          "type": {
           "$ref": "108"
          },
          "value": {
           "$id": "385",
           "value": {
            "$id": "386",
            "kind": "array",
            "type": {
             "$ref": "110"
            },
            "value": [
             {
              "$id": "387",
              "kind": "model",
              "type": {
               "$ref": "93"
              },
              "value": {
               "$id": "388",
               "blocklistName": {
                "$id": "389",
                "kind": "string",
                "type": {
                 "$ref": "95"
                },
                "value": "TestBlocklist"
               },
               "description": {
                "$id": "390",
                "kind": "string",
                "type": {
                 "$ref": "97"
                },
                "value": "Test Blocklist"
               }
              }
             }
            ]
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "391",
     "Name": "removeBlocklistItems",
     "ResourceName": "BlocklistClient",
     "Summary": "Remove BlocklistItems From Text Blocklist",
     "Doc": "Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "392",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "393",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "394",
        "Type": {
         "$id": "395",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2023-10-01"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "396",
       "Name": "Name",
       "NameInRequest": "blocklistName",
       "Doc": "Text blocklist name.",
       "Type": {
        "$id": "397",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "398",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "399",
        "kind": "constant",
        "valueType": {
         "$id": "400",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "401",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "402",
        "kind": "constant",
        "valueType": {
         "$id": "403",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "404",
       "Name": "options",
       "NameInRequest": "options",
       "Doc": "Options for removing blocklist items.",
       "Type": {
        "$ref": "98"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "405",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/contentsafety",
     "Path": "/text/blocklists/{blocklistName}:removeBlocklistItems",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "Decorators": [],
     "Examples": [
      {
       "$id": "406",
       "kind": "http",
       "name": "Remove BlockItems From Text Blocklist",
       "description": "Remove BlockItems From Text Blocklist",
       "filePath": "2023-10-01/RemoveBlocklistItems.json",
       "parameters": [
        {
         "$id": "407",
         "parameter": {
          "$ref": "392"
         },
         "value": {
          "$id": "408",
          "kind": "string",
          "type": {
           "$ref": "393"
          },
          "value": "2023-10-01"
         }
        },
        {
         "$id": "409",
         "parameter": {
          "$ref": "396"
         },
         "value": {
          "$id": "410",
          "kind": "string",
          "type": {
           "$ref": "397"
          },
          "value": "TestBlocklist"
         }
        },
        {
         "$id": "411",
         "parameter": {
          "$ref": "404"
         },
         "value": {
          "$id": "412",
          "kind": "model",
          "type": {
           "$ref": "98"
          },
          "value": {
           "$id": "413",
           "blocklistItemIds": {
            "$id": "414",
            "kind": "array",
            "type": {
             "$ref": "100"
            },
            "value": [
             {
              "$id": "415",
              "kind": "string",
              "type": {
               "$ref": "101"
              },
              "value": "9511969e-f1e3-4604-9127-05ee16c509ec"
             }
            ]
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "416",
         "response": {
          "$ref": "405"
         },
         "statusCode": 204
        }
       ]
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "417"
   },
   "Parameters": [
    {
     "$id": "418",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://<resource-name>.cognitiveservices.azure.com).",
     "Type": {
      "$id": "419",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  }
 ],
 "Auth": {
  "$id": "420",
  "ApiKey": {
   "$id": "421",
   "Name": "Ocp-Apim-Subscription-Key"
  },
  "OAuth2": {
   "$id": "422",
   "Scopes": [
    "https://cognitiveservices.azure.com/.default"
   ]
  }
 }
}
