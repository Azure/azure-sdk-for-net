// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// TensorFlow job settings.
    /// </summary>
    public partial class TensorFlowSettings
    {
        /// <summary>
        /// Initializes a new instance of the TensorFlowSettings class.
        /// </summary>
        public TensorFlowSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TensorFlowSettings class.
        /// </summary>
        /// <param name="pythonScriptFilePath">Python script file path.</param>
        /// <param name="pythonInterpreterPath">Python interpreter
        /// path.</param>
        /// <param name="masterCommandLineArgs">Master command line
        /// arguments.</param>
        /// <param name="workerCommandLineArgs">Worker command line
        /// arguments.</param>
        /// <param name="parameterServerCommandLineArgs">Parameter server
        /// command line arguments.</param>
        /// <param name="workerCount">Worker count.</param>
        /// <param name="parameterServerCount">Parameter server count.</param>
        public TensorFlowSettings(string pythonScriptFilePath, string pythonInterpreterPath = default(string), string masterCommandLineArgs = default(string), string workerCommandLineArgs = default(string), string parameterServerCommandLineArgs = default(string), int? workerCount = default(int?), int? parameterServerCount = default(int?))
        {
            PythonScriptFilePath = pythonScriptFilePath;
            PythonInterpreterPath = pythonInterpreterPath;
            MasterCommandLineArgs = masterCommandLineArgs;
            WorkerCommandLineArgs = workerCommandLineArgs;
            ParameterServerCommandLineArgs = parameterServerCommandLineArgs;
            WorkerCount = workerCount;
            ParameterServerCount = parameterServerCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets python script file path.
        /// </summary>
        /// <remarks>
        /// The python script to execute.
        /// </remarks>
        [JsonProperty(PropertyName = "pythonScriptFilePath")]
        public string PythonScriptFilePath { get; set; }

        /// <summary>
        /// Gets or sets python interpreter path.
        /// </summary>
        /// <remarks>
        /// The path to the Python interpreter.
        /// </remarks>
        [JsonProperty(PropertyName = "pythonInterpreterPath")]
        public string PythonInterpreterPath { get; set; }

        /// <summary>
        /// Gets or sets master command line arguments.
        /// </summary>
        /// <remarks>
        /// Command line arguments that need to be passed to the python script
        /// for the master task.
        /// </remarks>
        [JsonProperty(PropertyName = "masterCommandLineArgs")]
        public string MasterCommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets worker command line arguments.
        /// </summary>
        /// <remarks>
        /// Command line arguments that need to be passed to the python script
        /// for the worker task. Optional for single process jobs.
        /// </remarks>
        [JsonProperty(PropertyName = "workerCommandLineArgs")]
        public string WorkerCommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets parameter server command line arguments.
        /// </summary>
        /// <remarks>
        /// Command line arguments that need to be passed to the python script
        /// for the parameter server. Optional for single process jobs.
        /// </remarks>
        [JsonProperty(PropertyName = "parameterServerCommandLineArgs")]
        public string ParameterServerCommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets worker count.
        /// </summary>
        /// <remarks>
        /// The number of worker tasks. If specified, the value must be less
        /// than or equal to (nodeCount * numberOfGPUs per VM). If not
        /// specified, the default value is equal to nodeCount. This property
        /// can be specified only for distributed TensorFlow training.
        /// </remarks>
        [JsonProperty(PropertyName = "workerCount")]
        public int? WorkerCount { get; set; }

        /// <summary>
        /// Gets or sets parameter server count.
        /// </summary>
        /// <remarks>
        /// The number of parameter server tasks. If specified, the value must
        /// be less than or equal to nodeCount. If not specified, the default
        /// value is equal to 1 for distributed TensorFlow training. This
        /// property can be specified only for distributed TensorFlow training.
        /// </remarks>
        [JsonProperty(PropertyName = "parameterServerCount")]
        public int? ParameterServerCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PythonScriptFilePath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PythonScriptFilePath");
            }
        }
    }
}
