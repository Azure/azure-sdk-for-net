// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Login details to SSH to a compute node in cluster.
    /// </summary>
    public partial class RemoteLoginInformation
    {
        /// <summary>
        /// Initializes a new instance of the RemoteLoginInformation class.
        /// </summary>
        public RemoteLoginInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RemoteLoginInformation class.
        /// </summary>
        /// <param name="nodeId">Node ID.</param>
        /// <param name="ipAddress">IP address.</param>
        /// <param name="port">Port.</param>
        public RemoteLoginInformation(string nodeId = default(string), string ipAddress = default(string), double? port = default(double?))
        {
            NodeId = nodeId;
            IpAddress = ipAddress;
            Port = port;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets node ID.
        /// </summary>
        /// <remarks>
        /// ID of the compute node.
        /// </remarks>
        [JsonProperty(PropertyName = "nodeId")]
        public string NodeId { get; private set; }

        /// <summary>
        /// Gets IP address.
        /// </summary>
        /// <remarks>
        /// Public IP address of the compute node.
        /// </remarks>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; private set; }

        /// <summary>
        /// Gets port.
        /// </summary>
        /// <remarks>
        /// SSH port number of the node.
        /// </remarks>
        [JsonProperty(PropertyName = "port")]
        public double? Port { get; private set; }

    }
}
