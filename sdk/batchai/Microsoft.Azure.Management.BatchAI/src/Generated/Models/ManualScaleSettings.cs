// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Manual scale settings for the cluster.
    /// </summary>
    public partial class ManualScaleSettings
    {
        /// <summary>
        /// Initializes a new instance of the ManualScaleSettings class.
        /// </summary>
        public ManualScaleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManualScaleSettings class.
        /// </summary>
        /// <param name="targetNodeCount">Target node count.</param>
        /// <param name="nodeDeallocationOption">Node deallocation
        /// options.</param>
        public ManualScaleSettings(int targetNodeCount, string nodeDeallocationOption = default(string))
        {
            TargetNodeCount = targetNodeCount;
            NodeDeallocationOption = nodeDeallocationOption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets target node count.
        /// </summary>
        /// <remarks>
        /// The desired number of compute nodes in the Cluster. Default is 0.
        /// </remarks>
        [JsonProperty(PropertyName = "targetNodeCount")]
        public int TargetNodeCount { get; set; }

        /// <summary>
        /// Gets or sets node deallocation options.
        /// </summary>
        /// <remarks>
        /// An action to be performed when the cluster size is decreasing. The
        /// default value is requeue. Possible values include: 'requeue',
        /// 'terminate', 'waitforjobcompletion'
        /// </remarks>
        [JsonProperty(PropertyName = "nodeDeallocationOption")]
        public string NodeDeallocationOption { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
