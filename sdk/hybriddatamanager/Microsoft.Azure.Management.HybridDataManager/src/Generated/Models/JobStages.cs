// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridData.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Job stages.
    /// </summary>
    public partial class JobStages
    {
        /// <summary>
        /// Initializes a new instance of the JobStages class.
        /// </summary>
        public JobStages()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobStages class.
        /// </summary>
        /// <param name="stageStatus">Status of the job stage. Possible values
        /// include: 'None', 'InProgress', 'Succeeded', 'WaitingForAction',
        /// 'Failed', 'Cancelled', 'Cancelling', 'PartiallySucceeded'</param>
        /// <param name="stageName">Name of the job stage.</param>
        /// <param name="jobStageDetails">Job Stage Details</param>
        /// <param name="errorDetails">Error details for the stage. This is
        /// optional</param>
        public JobStages(JobStatus stageStatus, string stageName = default(string), object jobStageDetails = default(object), IList<ErrorDetails> errorDetails = default(IList<ErrorDetails>))
        {
            StageName = stageName;
            StageStatus = stageStatus;
            JobStageDetails = jobStageDetails;
            ErrorDetails = errorDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the job stage.
        /// </summary>
        [JsonProperty(PropertyName = "stageName")]
        public string StageName { get; set; }

        /// <summary>
        /// Gets or sets status of the job stage. Possible values include:
        /// 'None', 'InProgress', 'Succeeded', 'WaitingForAction', 'Failed',
        /// 'Cancelled', 'Cancelling', 'PartiallySucceeded'
        /// </summary>
        [JsonProperty(PropertyName = "stageStatus")]
        public JobStatus StageStatus { get; set; }

        /// <summary>
        /// Gets or sets job Stage Details
        /// </summary>
        [JsonProperty(PropertyName = "jobStageDetails")]
        public object JobStageDetails { get; set; }

        /// <summary>
        /// Gets or sets error details for the stage. This is optional
        /// </summary>
        [JsonProperty(PropertyName = "errorDetails")]
        public IList<ErrorDetails> ErrorDetails { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
