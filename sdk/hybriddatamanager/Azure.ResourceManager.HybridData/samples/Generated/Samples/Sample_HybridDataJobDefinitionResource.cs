// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.HybridData;
using Azure.ResourceManager.HybridData.Models;

namespace Azure.ResourceManager.HybridData.Samples
{
    public partial class Sample_HybridDataJobDefinitionResource
    {
        // JobDefinitions_GetGET81
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_JobDefinitionsGetGET81()
        {
            // Generated from example definition: specification/hybriddatamanager/resource-manager/Microsoft.HybridData/stable/2019-06-01/examples/JobDefinitions_Get-GET-example-81.json
            // this example is just showing the usage of "JobDefinitions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridDataJobDefinitionResource created on azure
            // for more information of creating HybridDataJobDefinitionResource, please refer to the document of HybridDataJobDefinitionResource
            string subscriptionId = "6e0219f5-327a-4365-904f-05eed4227ad7";
            string resourceGroupName = "ResourceGroupForSDKTest";
            string dataManagerName = "TestAzureSDKOperations";
            string dataServiceName = "DataTransformation";
            string jobDefinitionName = "jobdeffromtestcode1";
            ResourceIdentifier hybridDataJobDefinitionResourceId = HybridDataJobDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dataManagerName, dataServiceName, jobDefinitionName);
            HybridDataJobDefinitionResource hybridDataJobDefinition = client.GetHybridDataJobDefinitionResource(hybridDataJobDefinitionResourceId);

            // invoke the operation
            HybridDataJobDefinitionResource result = await hybridDataJobDefinition.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HybridDataJobDefinitionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // JobDefinitions_CreateOrUpdatePUT83
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_JobDefinitionsCreateOrUpdatePUT83()
        {
            // Generated from example definition: specification/hybriddatamanager/resource-manager/Microsoft.HybridData/stable/2019-06-01/examples/JobDefinitions_CreateOrUpdate-PUT-example-83.json
            // this example is just showing the usage of "JobDefinitions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridDataJobDefinitionResource created on azure
            // for more information of creating HybridDataJobDefinitionResource, please refer to the document of HybridDataJobDefinitionResource
            string subscriptionId = "6e0219f5-327a-4365-904f-05eed4227ad7";
            string resourceGroupName = "ResourceGroupForSDKTest";
            string dataManagerName = "TestAzureSDKOperations";
            string dataServiceName = "DataTransformation";
            string jobDefinitionName = "jobdeffromtestcode1";
            ResourceIdentifier hybridDataJobDefinitionResourceId = HybridDataJobDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dataManagerName, dataServiceName, jobDefinitionName);
            HybridDataJobDefinitionResource hybridDataJobDefinition = client.GetHybridDataJobDefinitionResource(hybridDataJobDefinitionResourceId);

            // invoke the operation
            HybridDataJobDefinitionData data = new HybridDataJobDefinitionData("/subscriptions/6e0219f5-327a-4365-904f-05eed4227ad7/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.HybridData/dataManagers/TestAzureSDKOperations/dataStores/TestStorSimpleSource1", "/subscriptions/6e0219f5-327a-4365-904f-05eed4227ad7/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.HybridData/dataManagers/TestAzureSDKOperations/dataStores/TestAzureStorage1", HybridDataState.Enabled)
            {
                RunLocation = HybridDataJobRunLocation.WestUS,
                UserConfirmation = UserConfirmationSetting.Required,
                DataServiceInput = BinaryData.FromObjectAsJson(new Dictionary<string, object>()
                {
                    ["AzureStorageType"] = "Blob",
                    ["BackupChoice"] = "UseExistingLatest",
                    ["ContainerName"] = "containerfromtest",
                    ["DeviceName"] = "8600-SHG0997877L71FC",
                    ["FileNameFilter"] = "*",
                    ["IsDirectoryMode"] = "false",
                    ["RootDirectories"] = new object[] { "\\" },
                    ["VolumeNames"] = new object[] { "TestAutomation" }
                }),
            };
            ArmOperation<HybridDataJobDefinitionResource> lro = await hybridDataJobDefinition.UpdateAsync(WaitUntil.Completed, data);
            HybridDataJobDefinitionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HybridDataJobDefinitionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // JobDefinitions_DeleteDELETE81
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_JobDefinitionsDeleteDELETE81()
        {
            // Generated from example definition: specification/hybriddatamanager/resource-manager/Microsoft.HybridData/stable/2019-06-01/examples/JobDefinitions_Delete-DELETE-example-81.json
            // this example is just showing the usage of "JobDefinitions_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridDataJobDefinitionResource created on azure
            // for more information of creating HybridDataJobDefinitionResource, please refer to the document of HybridDataJobDefinitionResource
            string subscriptionId = "6e0219f5-327a-4365-904f-05eed4227ad7";
            string resourceGroupName = "ResourceGroupForSDKTest";
            string dataManagerName = "TestAzureSDKOperations";
            string dataServiceName = "DataTransformation";
            string jobDefinitionName = "jobdeffromtestcode1";
            ResourceIdentifier hybridDataJobDefinitionResourceId = HybridDataJobDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dataManagerName, dataServiceName, jobDefinitionName);
            HybridDataJobDefinitionResource hybridDataJobDefinition = client.GetHybridDataJobDefinitionResource(hybridDataJobDefinitionResourceId);

            // invoke the operation
            await hybridDataJobDefinition.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // JobDefinitions_RunPOST132
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Run_JobDefinitionsRunPOST132()
        {
            // Generated from example definition: specification/hybriddatamanager/resource-manager/Microsoft.HybridData/stable/2019-06-01/examples/JobDefinitions_Run-POST-example-132.json
            // this example is just showing the usage of "JobDefinitions_Run" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridDataJobDefinitionResource created on azure
            // for more information of creating HybridDataJobDefinitionResource, please refer to the document of HybridDataJobDefinitionResource
            string subscriptionId = "6e0219f5-327a-4365-904f-05eed4227ad7";
            string resourceGroupName = "ResourceGroupForSDKTest";
            string dataManagerName = "TestAzureSDKOperations";
            string dataServiceName = "DataTransformation";
            string jobDefinitionName = "jobdeffromtestcode1";
            ResourceIdentifier hybridDataJobDefinitionResourceId = HybridDataJobDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dataManagerName, dataServiceName, jobDefinitionName);
            HybridDataJobDefinitionResource hybridDataJobDefinition = client.GetHybridDataJobDefinitionResource(hybridDataJobDefinitionResourceId);

            // invoke the operation
            HybridDataJobRunContent content = new HybridDataJobRunContent()
            {
                UserConfirmation = UserConfirmationSetting.NotRequired,
                DataServiceInput = BinaryData.FromObjectAsJson(new Dictionary<string, object>()
                {
                    ["AzureStorageType"] = "Blob",
                    ["BackupChoice"] = "UseExistingLatest",
                    ["ContainerName"] = "containerfromtest",
                    ["DeviceName"] = "8600-SHG0997877L71FC",
                    ["FileNameFilter"] = "*",
                    ["IsDirectoryMode"] = "false",
                    ["RootDirectories"] = new object[] { "\\" },
                    ["VolumeNames"] = new object[] { "TestAutomation" }
                }),
                CustomerSecrets =
{
},
            };
            await hybridDataJobDefinition.RunAsync(WaitUntil.Completed, content);

            Console.WriteLine($"Succeeded");
        }
    }
}
