// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.HybridData.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HybridData
{
    /// <summary>
    /// A class representing the HybridDataJob data model.
    /// Data service job.
    /// </summary>
    public partial class HybridDataJobData : ResourceData
    {
        /// <summary> Initializes a new instance of HybridDataJobData. </summary>
        /// <param name="status"> Status of the job. </param>
        /// <param name="startOn"> Time at which the job was started in UTC ISO 8601 format. </param>
        /// <param name="isCancellable"> Describes whether the job is cancellable. </param>
        public HybridDataJobData(HybridDataJobStatus status, DateTimeOffset startOn, JobCancellationSetting isCancellable)
        {
            Status = status;
            StartOn = startOn;
            IsCancellable = isCancellable;
        }

        /// <summary> Initializes a new instance of HybridDataJobData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="status"> Status of the job. </param>
        /// <param name="startOn"> Time at which the job was started in UTC ISO 8601 format. </param>
        /// <param name="endOn"> Time at which the job ended in UTC ISO 8601 format. </param>
        /// <param name="error"> Top level error for the job. </param>
        /// <param name="isCancellable"> Describes whether the job is cancellable. </param>
        /// <param name="bytesProcessed"> Number of bytes processed by the job as of now. </param>
        /// <param name="itemsProcessed"> Number of items processed by the job as of now. </param>
        /// <param name="totalBytesToProcess"> Number of bytes to be processed by the job in total. </param>
        /// <param name="totalItemsToProcess"> Number of items to be processed by the job in total. </param>
        /// <param name="details"> Details of a job run. This field will only be sent for expand details filter. </param>
        /// <param name="dataSourceName"> Name of the data source on which the job was triggered. </param>
        /// <param name="dataSinkName"> Name of the data sink on which the job was triggered. </param>
        internal HybridDataJobData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, HybridDataJobStatus status, DateTimeOffset startOn, DateTimeOffset? endOn, HybridDataJobTopLevelError error, JobCancellationSetting isCancellable, long? bytesProcessed, long? itemsProcessed, long? totalBytesToProcess, long? totalItemsToProcess, HybridDataJobDetails details, string dataSourceName, string dataSinkName) : base(id, name, resourceType, systemData)
        {
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            Error = error;
            IsCancellable = isCancellable;
            BytesProcessed = bytesProcessed;
            ItemsProcessed = itemsProcessed;
            TotalBytesToProcess = totalBytesToProcess;
            TotalItemsToProcess = totalItemsToProcess;
            Details = details;
            DataSourceName = dataSourceName;
            DataSinkName = dataSinkName;
        }

        /// <summary> Status of the job. </summary>
        public HybridDataJobStatus Status { get; set; }
        /// <summary> Time at which the job was started in UTC ISO 8601 format. </summary>
        public DateTimeOffset StartOn { get; set; }
        /// <summary> Time at which the job ended in UTC ISO 8601 format. </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary> Top level error for the job. </summary>
        public HybridDataJobTopLevelError Error { get; set; }
        /// <summary> Describes whether the job is cancellable. </summary>
        public JobCancellationSetting IsCancellable { get; set; }
        /// <summary> Number of bytes processed by the job as of now. </summary>
        public long? BytesProcessed { get; set; }
        /// <summary> Number of items processed by the job as of now. </summary>
        public long? ItemsProcessed { get; set; }
        /// <summary> Number of bytes to be processed by the job in total. </summary>
        public long? TotalBytesToProcess { get; set; }
        /// <summary> Number of items to be processed by the job in total. </summary>
        public long? TotalItemsToProcess { get; set; }
        /// <summary> Details of a job run. This field will only be sent for expand details filter. </summary>
        public HybridDataJobDetails Details { get; set; }
        /// <summary> Name of the data source on which the job was triggered. </summary>
        public string DataSourceName { get; set; }
        /// <summary> Name of the data sink on which the job was triggered. </summary>
        public string DataSinkName { get; set; }
    }
}
