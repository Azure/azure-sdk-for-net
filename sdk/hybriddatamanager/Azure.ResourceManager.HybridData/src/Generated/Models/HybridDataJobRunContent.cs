// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HybridData.Models
{
    /// <summary> Run parameters for a job. </summary>
    public partial class HybridDataJobRunContent
    {
        /// <summary> Initializes a new instance of HybridDataJobRunContent. </summary>
        public HybridDataJobRunContent()
        {
            CustomerSecrets = new ChangeTrackingList<HybridDataCustomerSecret>();
        }

        /// <summary> Enum to detect if user confirmation is required. If not passed will default to NotRequired. </summary>
        public UserConfirmationSetting? UserConfirmation { get; set; }
        /// <summary>
        /// A generic json used differently by each data service type.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData DataServiceInput { get; set; }
        /// <summary> List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys. </summary>
        public IList<HybridDataCustomerSecret> CustomerSecrets { get; }
    }
}
