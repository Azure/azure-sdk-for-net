// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.HybridData;

namespace Azure.ResourceManager.HybridData.Models
{
    public partial class HybridDataJobDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(JobStages))
            {
                writer.WritePropertyName("jobStages"u8);
                writer.WriteStartArray();
                foreach (var item in JobStages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(JobDefinition))
            {
                writer.WritePropertyName("jobDefinition"u8);
                writer.WriteObjectValue(JobDefinition);
            }
            if (Optional.IsCollectionDefined(ErrorDetails))
            {
                writer.WritePropertyName("errorDetails"u8);
                writer.WriteStartArray();
                foreach (var item in ErrorDetails)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ItemDetailsLink))
            {
                writer.WritePropertyName("itemDetailsLink"u8);
                writer.WriteStringValue(ItemDetailsLink);
            }
            writer.WriteEndObject();
        }

        internal static HybridDataJobDetails DeserializeHybridDataJobDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<HybridDataJobStage>> jobStages = default;
            Optional<HybridDataJobDefinitionData> jobDefinition = default;
            Optional<IList<HybridDataJobErrorDetails>> errorDetails = default;
            Optional<string> itemDetailsLink = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobStages"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<HybridDataJobStage> array = new List<HybridDataJobStage>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(HybridDataJobStage.DeserializeHybridDataJobStage(item));
                    }
                    jobStages = array;
                    continue;
                }
                if (property.NameEquals("jobDefinition"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    jobDefinition = HybridDataJobDefinitionData.DeserializeHybridDataJobDefinitionData(property.Value);
                    continue;
                }
                if (property.NameEquals("errorDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<HybridDataJobErrorDetails> array = new List<HybridDataJobErrorDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(HybridDataJobErrorDetails.DeserializeHybridDataJobErrorDetails(item));
                    }
                    errorDetails = array;
                    continue;
                }
                if (property.NameEquals("itemDetailsLink"u8))
                {
                    itemDetailsLink = property.Value.GetString();
                    continue;
                }
            }
            return new HybridDataJobDetails(Optional.ToList(jobStages), jobDefinition.Value, Optional.ToList(errorDetails), itemDetailsLink.Value);
        }
    }
}
