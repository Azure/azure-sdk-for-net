// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Role Assignments filter
    /// </summary>
    public partial class RoleAssignmentFilter
    {
        /// <summary>
        /// Initializes a new instance of the RoleAssignmentFilter class.
        /// </summary>
        public RoleAssignmentFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoleAssignmentFilter class.
        /// </summary>
        /// <param name="principalId">Returns role assignment of the specific
        /// principal.</param>
        /// <param name="canDelegate">The Delegation flag for the role
        /// assignment</param>
        public RoleAssignmentFilter(string principalId = default(string), bool? canDelegate = default(bool?))
        {
            PrincipalId = principalId;
            CanDelegate = canDelegate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets returns role assignment of the specific principal.
        /// </summary>
        [JsonProperty(PropertyName = "principalId")]
        public string PrincipalId { get; set; }

        /// <summary>
        /// Gets or sets the Delegation flag for the role assignment
        /// </summary>
        [JsonProperty(PropertyName = "canDelegate")]
        public bool? CanDelegate { get; set; }

    }
}
