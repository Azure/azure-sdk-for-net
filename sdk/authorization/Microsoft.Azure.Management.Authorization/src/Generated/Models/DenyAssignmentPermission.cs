// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Deny assignment permissions.
    /// </summary>
    public partial class DenyAssignmentPermission
    {
        /// <summary>
        /// Initializes a new instance of the DenyAssignmentPermission class.
        /// </summary>
        public DenyAssignmentPermission()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DenyAssignmentPermission class.
        /// </summary>
        /// <param name="actions">Actions to which the deny assignment does not
        /// grant access.</param>
        /// <param name="notActions">Actions to exclude from that the deny
        /// assignment does not grant access.</param>
        /// <param name="dataActions">Data actions to which the deny assignment
        /// does not grant access.</param>
        /// <param name="notDataActions">Data actions to exclude from that the
        /// deny assignment does not grant access.</param>
        /// <param name="condition">The conditions on the Deny assignment
        /// permission. This limits the resources it applies to.</param>
        /// <param name="conditionVersion">Version of the condition.</param>
        public DenyAssignmentPermission(IList<string> actions = default(IList<string>), IList<string> notActions = default(IList<string>), IList<string> dataActions = default(IList<string>), IList<string> notDataActions = default(IList<string>), string condition = default(string), string conditionVersion = default(string))
        {
            Actions = actions;
            NotActions = notActions;
            DataActions = dataActions;
            NotDataActions = notDataActions;
            Condition = condition;
            ConditionVersion = conditionVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets actions to which the deny assignment does not grant
        /// access.
        /// </summary>
        [JsonProperty(PropertyName = "actions")]
        public IList<string> Actions { get; set; }

        /// <summary>
        /// Gets or sets actions to exclude from that the deny assignment does
        /// not grant access.
        /// </summary>
        [JsonProperty(PropertyName = "notActions")]
        public IList<string> NotActions { get; set; }

        /// <summary>
        /// Gets or sets data actions to which the deny assignment does not
        /// grant access.
        /// </summary>
        [JsonProperty(PropertyName = "dataActions")]
        public IList<string> DataActions { get; set; }

        /// <summary>
        /// Gets or sets data actions to exclude from that the deny assignment
        /// does not grant access.
        /// </summary>
        [JsonProperty(PropertyName = "notDataActions")]
        public IList<string> NotDataActions { get; set; }

        /// <summary>
        /// Gets or sets the conditions on the Deny assignment permission. This
        /// limits the resources it applies to.
        /// </summary>
        [JsonProperty(PropertyName = "condition")]
        public string Condition { get; set; }

        /// <summary>
        /// Gets or sets version of the condition.
        /// </summary>
        [JsonProperty(PropertyName = "conditionVersion")]
        public string ConditionVersion { get; set; }

    }
}
