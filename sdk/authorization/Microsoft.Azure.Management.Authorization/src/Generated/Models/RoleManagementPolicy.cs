// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Role management policy
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class RoleManagementPolicy
    {
        /// <summary>
        /// Initializes a new instance of the RoleManagementPolicy class.
        /// </summary>
        public RoleManagementPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoleManagementPolicy class.
        /// </summary>
        /// <param name="id">The role management policy Id.</param>
        /// <param name="name">The role management policy name.</param>
        /// <param name="type">The role management policy type.</param>
        /// <param name="scope">The role management policy scope.</param>
        /// <param name="displayName">The role management policy display
        /// name.</param>
        /// <param name="description">The role management policy
        /// description.</param>
        /// <param name="isOrganizationDefault">The role management policy is
        /// default policy.</param>
        /// <param name="lastModifiedDateTime">The last modified date
        /// time.</param>
        /// <param name="rules">The rule applied to the policy.</param>
        /// <param name="effectiveRules">The readonly computed rule applied to
        /// the policy.</param>
        /// <param name="policyProperties">Additional properties of
        /// scope</param>
        public RoleManagementPolicy(string id = default(string), string name = default(string), string type = default(string), string scope = default(string), string displayName = default(string), string description = default(string), bool? isOrganizationDefault = default(bool?), Principal lastModifiedBy = default(Principal), System.DateTime? lastModifiedDateTime = default(System.DateTime?), IList<RoleManagementPolicyRule> rules = default(IList<RoleManagementPolicyRule>), IList<RoleManagementPolicyRule> effectiveRules = default(IList<RoleManagementPolicyRule>), PolicyProperties policyProperties = default(PolicyProperties))
        {
            Id = id;
            Name = name;
            Type = type;
            Scope = scope;
            DisplayName = displayName;
            Description = description;
            IsOrganizationDefault = isOrganizationDefault;
            LastModifiedBy = lastModifiedBy;
            LastModifiedDateTime = lastModifiedDateTime;
            Rules = rules;
            EffectiveRules = effectiveRules;
            PolicyProperties = policyProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the role management policy Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the role management policy name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the role management policy type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets the role management policy scope.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Gets or sets the role management policy display name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the role management policy description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the role management policy is default policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isOrganizationDefault")]
        public bool? IsOrganizationDefault { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedBy")]
        public Principal LastModifiedBy { get; set; }

        /// <summary>
        /// Gets the last modified date time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedDateTime")]
        public System.DateTime? LastModifiedDateTime { get; private set; }

        /// <summary>
        /// Gets or sets the rule applied to the policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.rules")]
        public IList<RoleManagementPolicyRule> Rules { get; set; }

        /// <summary>
        /// Gets the readonly computed rule applied to the policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.effectiveRules")]
        public IList<RoleManagementPolicyRule> EffectiveRules { get; private set; }

        /// <summary>
        /// Gets additional properties of scope
        /// </summary>
        [JsonProperty(PropertyName = "properties.policyProperties")]
        public PolicyProperties PolicyProperties { get; private set; }

    }
}
