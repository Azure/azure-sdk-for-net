// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Deny Assignment
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DenyAssignment
    {
        /// <summary>
        /// Initializes a new instance of the DenyAssignment class.
        /// </summary>
        public DenyAssignment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DenyAssignment class.
        /// </summary>
        /// <param name="id">The deny assignment ID.</param>
        /// <param name="name">The deny assignment name.</param>
        /// <param name="type">The deny assignment type.</param>
        /// <param name="denyAssignmentName">The display name of the deny
        /// assignment.</param>
        /// <param name="description">The description of the deny
        /// assignment.</param>
        /// <param name="permissions">An array of permissions that are denied
        /// by the deny assignment.</param>
        /// <param name="scope">The deny assignment scope.</param>
        /// <param name="doNotApplyToChildScopes">Determines if the deny
        /// assignment applies to child scopes. Default value is false.</param>
        /// <param name="principals">Array of principals to which the deny
        /// assignment applies.</param>
        /// <param name="excludePrincipals">Array of principals to which the
        /// deny assignment does not apply.</param>
        /// <param name="isSystemProtected">Specifies whether this deny
        /// assignment was created by Azure and cannot be edited or
        /// deleted.</param>
        public DenyAssignment(string id = default(string), string name = default(string), string type = default(string), string denyAssignmentName = default(string), string description = default(string), IList<DenyAssignmentPermission> permissions = default(IList<DenyAssignmentPermission>), string scope = default(string), bool? doNotApplyToChildScopes = default(bool?), IList<Principal> principals = default(IList<Principal>), IList<Principal> excludePrincipals = default(IList<Principal>), bool? isSystemProtected = default(bool?))
        {
            Id = id;
            Name = name;
            Type = type;
            DenyAssignmentName = denyAssignmentName;
            Description = description;
            Permissions = permissions;
            Scope = scope;
            DoNotApplyToChildScopes = doNotApplyToChildScopes;
            Principals = principals;
            ExcludePrincipals = excludePrincipals;
            IsSystemProtected = isSystemProtected;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the deny assignment ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the deny assignment name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the deny assignment type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets the display name of the deny assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.denyAssignmentName")]
        public string DenyAssignmentName { get; set; }

        /// <summary>
        /// Gets or sets the description of the deny assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets an array of permissions that are denied by the deny
        /// assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.permissions")]
        public IList<DenyAssignmentPermission> Permissions { get; set; }

        /// <summary>
        /// Gets or sets the deny assignment scope.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Gets or sets determines if the deny assignment applies to child
        /// scopes. Default value is false.
        /// </summary>
        [JsonProperty(PropertyName = "properties.doNotApplyToChildScopes")]
        public bool? DoNotApplyToChildScopes { get; set; }

        /// <summary>
        /// Gets or sets array of principals to which the deny assignment
        /// applies.
        /// </summary>
        [JsonProperty(PropertyName = "properties.principals")]
        public IList<Principal> Principals { get; set; }

        /// <summary>
        /// Gets or sets array of principals to which the deny assignment does
        /// not apply.
        /// </summary>
        [JsonProperty(PropertyName = "properties.excludePrincipals")]
        public IList<Principal> ExcludePrincipals { get; set; }

        /// <summary>
        /// Gets or sets specifies whether this deny assignment was created by
        /// Azure and cannot be edited or deleted.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isSystemProtected")]
        public bool? IsSystemProtected { get; set; }

    }
}
