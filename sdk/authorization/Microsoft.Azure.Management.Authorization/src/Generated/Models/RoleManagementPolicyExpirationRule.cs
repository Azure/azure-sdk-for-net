// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The role management policy expiration rule.
    /// </summary>
    public partial class RoleManagementPolicyExpirationRule : RoleManagementPolicyRule
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RoleManagementPolicyExpirationRule class.
        /// </summary>
        public RoleManagementPolicyExpirationRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// RoleManagementPolicyExpirationRule class.
        /// </summary>
        /// <param name="id">The id of the rule.</param>
        /// <param name="target">The target of the current rule.</param>
        /// <param name="isExpirationRequired">The value indicating whether
        /// expiration is required.</param>
        /// <param name="maximumDuration">The maximum duration of expiration in
        /// timespan.</param>
        public RoleManagementPolicyExpirationRule(string id = default(string), RoleManagementPolicyRuleTarget target = default(RoleManagementPolicyRuleTarget), bool? isExpirationRequired = default(bool?), string maximumDuration = default(string))
            : base(id, target)
        {
            IsExpirationRequired = isExpirationRequired;
            MaximumDuration = maximumDuration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the value indicating whether expiration is required.
        /// </summary>
        [JsonProperty(PropertyName = "isExpirationRequired")]
        public bool? IsExpirationRequired { get; set; }

        /// <summary>
        /// Gets or sets the maximum duration of expiration in timespan.
        /// </summary>
        [JsonProperty(PropertyName = "maximumDuration")]
        public string MaximumDuration { get; set; }

    }
}
