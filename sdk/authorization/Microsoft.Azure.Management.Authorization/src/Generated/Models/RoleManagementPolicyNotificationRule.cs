// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The role management policy notification rule.
    /// </summary>
    public partial class RoleManagementPolicyNotificationRule : RoleManagementPolicyRule
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RoleManagementPolicyNotificationRule class.
        /// </summary>
        public RoleManagementPolicyNotificationRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// RoleManagementPolicyNotificationRule class.
        /// </summary>
        /// <param name="id">The id of the rule.</param>
        /// <param name="target">The target of the current rule.</param>
        /// <param name="notificationType">The type of notification. Possible
        /// values include: 'Email'</param>
        /// <param name="notificationLevel">The notification level. Possible
        /// values include: 'None', 'Critical', 'All'</param>
        /// <param name="recipientType">The recipient type. Possible values
        /// include: 'Requestor', 'Approver', 'Admin'</param>
        /// <param name="notificationRecipients">The list of notification
        /// recipients.</param>
        /// <param name="isDefaultRecipientsEnabled">Determines if the
        /// notification will be sent to the recipient type specified in the
        /// policy rule.</param>
        public RoleManagementPolicyNotificationRule(string id = default(string), RoleManagementPolicyRuleTarget target = default(RoleManagementPolicyRuleTarget), string notificationType = default(string), string notificationLevel = default(string), string recipientType = default(string), IList<string> notificationRecipients = default(IList<string>), bool? isDefaultRecipientsEnabled = default(bool?))
            : base(id, target)
        {
            NotificationType = notificationType;
            NotificationLevel = notificationLevel;
            RecipientType = recipientType;
            NotificationRecipients = notificationRecipients;
            IsDefaultRecipientsEnabled = isDefaultRecipientsEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of notification. Possible values include:
        /// 'Email'
        /// </summary>
        [JsonProperty(PropertyName = "notificationType")]
        public string NotificationType { get; set; }

        /// <summary>
        /// Gets or sets the notification level. Possible values include:
        /// 'None', 'Critical', 'All'
        /// </summary>
        [JsonProperty(PropertyName = "notificationLevel")]
        public string NotificationLevel { get; set; }

        /// <summary>
        /// Gets or sets the recipient type. Possible values include:
        /// 'Requestor', 'Approver', 'Admin'
        /// </summary>
        [JsonProperty(PropertyName = "recipientType")]
        public string RecipientType { get; set; }

        /// <summary>
        /// Gets or sets the list of notification recipients.
        /// </summary>
        [JsonProperty(PropertyName = "notificationRecipients")]
        public IList<string> NotificationRecipients { get; set; }

        /// <summary>
        /// Gets or sets determines if the notification will be sent to the
        /// recipient type specified in the policy rule.
        /// </summary>
        [JsonProperty(PropertyName = "isDefaultRecipientsEnabled")]
        public bool? IsDefaultRecipientsEnabled { get; set; }

    }
}
