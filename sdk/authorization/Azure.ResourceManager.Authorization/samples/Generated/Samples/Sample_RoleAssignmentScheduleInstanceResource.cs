// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Authorization;

namespace Azure.ResourceManager.Authorization.Samples
{
    public partial class Sample_RoleAssignmentScheduleInstanceResource
    {
        // GetRoleAssignmentScheduleInstanceByName
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetRoleAssignmentScheduleInstanceByName()
        {
            // Generated from example definition: specification/authorization/resource-manager/Microsoft.Authorization/stable/2020-10-01/examples/GetRoleAssignmentScheduleInstanceByName.json
            // this example is just showing the usage of "RoleAssignmentScheduleInstances_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RoleAssignmentScheduleInstanceResource created on azure
            // for more information of creating RoleAssignmentScheduleInstanceResource, please refer to the document of RoleAssignmentScheduleInstanceResource
            string scope = "providers/Microsoft.Subscription/subscriptions/dfa2a084-766f-4003-8ae1-c4aeb893a99f";
            string roleAssignmentScheduleInstanceName = "ed9b8180-cef7-4c77-a63c-b8566ecfc412";
            ResourceIdentifier roleAssignmentScheduleInstanceResourceId = RoleAssignmentScheduleInstanceResource.CreateResourceIdentifier(scope, roleAssignmentScheduleInstanceName);
            RoleAssignmentScheduleInstanceResource roleAssignmentScheduleInstance = client.GetRoleAssignmentScheduleInstanceResource(roleAssignmentScheduleInstanceResourceId);

            // invoke the operation
            RoleAssignmentScheduleInstanceResource result = await roleAssignmentScheduleInstance.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RoleAssignmentScheduleInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
