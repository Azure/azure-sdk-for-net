// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Authorization.Models
{
    public partial class ApprovalStage : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ApprovalStageTimeOutInDays))
            {
                writer.WritePropertyName("approvalStageTimeOutInDays");
                writer.WriteNumberValue(ApprovalStageTimeOutInDays.Value);
            }
            if (Optional.IsDefined(IsApproverJustificationRequired))
            {
                writer.WritePropertyName("isApproverJustificationRequired");
                writer.WriteBooleanValue(IsApproverJustificationRequired.Value);
            }
            if (Optional.IsDefined(EscalationTimeInMinutes))
            {
                writer.WritePropertyName("escalationTimeInMinutes");
                writer.WriteNumberValue(EscalationTimeInMinutes.Value);
            }
            if (Optional.IsCollectionDefined(PrimaryApprovers))
            {
                writer.WritePropertyName("primaryApprovers");
                writer.WriteStartArray();
                foreach (var item in PrimaryApprovers)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(IsEscalationEnabled))
            {
                writer.WritePropertyName("isEscalationEnabled");
                writer.WriteBooleanValue(IsEscalationEnabled.Value);
            }
            if (Optional.IsCollectionDefined(EscalationApprovers))
            {
                writer.WritePropertyName("escalationApprovers");
                writer.WriteStartArray();
                foreach (var item in EscalationApprovers)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static ApprovalStage DeserializeApprovalStage(JsonElement element)
        {
            Optional<int> approvalStageTimeOutInDays = default;
            Optional<bool> isApproverJustificationRequired = default;
            Optional<int> escalationTimeInMinutes = default;
            Optional<IList<UserSet>> primaryApprovers = default;
            Optional<bool> isEscalationEnabled = default;
            Optional<IList<UserSet>> escalationApprovers = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("approvalStageTimeOutInDays"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    approvalStageTimeOutInDays = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("isApproverJustificationRequired"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isApproverJustificationRequired = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("escalationTimeInMinutes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    escalationTimeInMinutes = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("primaryApprovers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<UserSet> array = new List<UserSet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(UserSet.DeserializeUserSet(item));
                    }
                    primaryApprovers = array;
                    continue;
                }
                if (property.NameEquals("isEscalationEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isEscalationEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("escalationApprovers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<UserSet> array = new List<UserSet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(UserSet.DeserializeUserSet(item));
                    }
                    escalationApprovers = array;
                    continue;
                }
            }
            return new ApprovalStage(Optional.ToNullable(approvalStageTimeOutInDays), Optional.ToNullable(isApproverJustificationRequired), Optional.ToNullable(escalationTimeInMinutes), Optional.ToList(primaryApprovers), Optional.ToNullable(isEscalationEnabled), Optional.ToList(escalationApprovers));
        }
    }
}
