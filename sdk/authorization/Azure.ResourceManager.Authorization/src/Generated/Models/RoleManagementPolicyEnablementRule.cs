// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary>
    /// The role management policy enablement rule.
    /// Serialized Name: RoleManagementPolicyEnablementRule
    /// </summary>
    public partial class RoleManagementPolicyEnablementRule : RoleManagementPolicyRule
    {
        /// <summary> Initializes a new instance of RoleManagementPolicyEnablementRule. </summary>
        public RoleManagementPolicyEnablementRule()
        {
            EnabledRules = new ChangeTrackingList<EnablementRule>();
            RuleType = RoleManagementPolicyRuleType.RoleManagementPolicyEnablementRule;
        }

        /// <summary> Initializes a new instance of RoleManagementPolicyEnablementRule. </summary>
        /// <param name="id">
        /// The id of the rule.
        /// Serialized Name: RoleManagementPolicyRule.id
        /// </param>
        /// <param name="ruleType">
        /// The type of rule
        /// Serialized Name: RoleManagementPolicyRule.ruleType
        /// </param>
        /// <param name="target">
        /// The target of the current rule.
        /// Serialized Name: RoleManagementPolicyRule.target
        /// </param>
        /// <param name="enabledRules">
        /// The list of enabled rules.
        /// Serialized Name: RoleManagementPolicyEnablementRule.enabledRules
        /// </param>
        internal RoleManagementPolicyEnablementRule(ResourceIdentifier id, RoleManagementPolicyRuleType ruleType, RoleManagementPolicyRuleTarget target, IList<EnablementRule> enabledRules) : base(id, ruleType, target)
        {
            EnabledRules = enabledRules;
            RuleType = ruleType;
        }

        /// <summary>
        /// The list of enabled rules.
        /// Serialized Name: RoleManagementPolicyEnablementRule.enabledRules
        /// </summary>
        public IList<EnablementRule> EnabledRules { get; }
    }
}
