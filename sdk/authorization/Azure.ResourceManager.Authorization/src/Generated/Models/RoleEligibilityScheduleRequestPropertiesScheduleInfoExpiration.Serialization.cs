// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Authorization.Models
{
    public partial class RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RoleEligibilityExpirationType))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(RoleEligibilityExpirationType.Value.ToString());
            }
            if (Optional.IsDefined(EndOn))
            {
                writer.WritePropertyName("endDateTime");
                writer.WriteStringValue(EndOn.Value, "O");
            }
            if (Optional.IsDefined(Duration))
            {
                writer.WritePropertyName("duration");
                writer.WriteStringValue(Duration.Value, "P");
            }
            writer.WriteEndObject();
        }

        internal static RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration DeserializeRoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration(JsonElement element)
        {
            Optional<RoleEligibilityScheduleType> type = default;
            Optional<DateTimeOffset> endDateTime = default;
            Optional<TimeSpan> duration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    type = new RoleEligibilityScheduleType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("endDateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("duration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    duration = property.Value.GetTimeSpan("P");
                    continue;
                }
            }
            return new RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration(Optional.ToNullable(type), Optional.ToNullable(endDateTime), Optional.ToNullable(duration));
        }
    }
}
