// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary> Type of the role assignment schedule expiration. </summary>
    public readonly partial struct RoleAssignmentScheduleExpirationType : IEquatable<RoleAssignmentScheduleExpirationType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RoleAssignmentScheduleExpirationType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RoleAssignmentScheduleExpirationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AfterDurationValue = "AfterDuration";
        private const string AfterDateTimeValue = "AfterDateTime";
        private const string NoExpirationValue = "NoExpiration";

        /// <summary> AfterDuration. </summary>
        public static RoleAssignmentScheduleExpirationType AfterDuration { get; } = new RoleAssignmentScheduleExpirationType(AfterDurationValue);
        /// <summary> AfterDateTime. </summary>
        public static RoleAssignmentScheduleExpirationType AfterDateTime { get; } = new RoleAssignmentScheduleExpirationType(AfterDateTimeValue);
        /// <summary> NoExpiration. </summary>
        public static RoleAssignmentScheduleExpirationType NoExpiration { get; } = new RoleAssignmentScheduleExpirationType(NoExpirationValue);
        /// <summary> Determines if two <see cref="RoleAssignmentScheduleExpirationType"/> values are the same. </summary>
        public static bool operator ==(RoleAssignmentScheduleExpirationType left, RoleAssignmentScheduleExpirationType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RoleAssignmentScheduleExpirationType"/> values are not the same. </summary>
        public static bool operator !=(RoleAssignmentScheduleExpirationType left, RoleAssignmentScheduleExpirationType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RoleAssignmentScheduleExpirationType"/>. </summary>
        public static implicit operator RoleAssignmentScheduleExpirationType(string value) => new RoleAssignmentScheduleExpirationType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RoleAssignmentScheduleExpirationType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RoleAssignmentScheduleExpirationType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
