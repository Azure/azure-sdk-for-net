// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Authorization.Models
{
    public partial class ExpandedProperties
    {
        internal static ExpandedProperties DeserializeExpandedProperties(JsonElement element)
        {
            Optional<ExpandedPropertiesScope> scope = default;
            Optional<ExpandedPropertiesRoleDefinition> roleDefinition = default;
            Optional<ExpandedPropertiesPrincipal> principal = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("scope"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    scope = ExpandedPropertiesScope.DeserializeExpandedPropertiesScope(property.Value);
                    continue;
                }
                if (property.NameEquals("roleDefinition"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    roleDefinition = ExpandedPropertiesRoleDefinition.DeserializeExpandedPropertiesRoleDefinition(property.Value);
                    continue;
                }
                if (property.NameEquals("principal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    principal = ExpandedPropertiesPrincipal.DeserializeExpandedPropertiesPrincipal(property.Value);
                    continue;
                }
            }
            return new ExpandedProperties(scope.Value, roleDefinition.Value, principal.Value);
        }
    }
}
