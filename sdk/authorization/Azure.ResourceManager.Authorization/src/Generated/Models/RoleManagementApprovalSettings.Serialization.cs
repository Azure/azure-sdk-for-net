// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Authorization.Models
{
    public partial class RoleManagementApprovalSettings : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(IsApprovalRequired))
            {
                writer.WritePropertyName("isApprovalRequired"u8);
                writer.WriteBooleanValue(IsApprovalRequired.Value);
            }
            if (Core.Optional.IsDefined(IsApprovalRequiredForExtension))
            {
                writer.WritePropertyName("isApprovalRequiredForExtension"u8);
                writer.WriteBooleanValue(IsApprovalRequiredForExtension.Value);
            }
            if (Core.Optional.IsDefined(IsRequestorJustificationRequired))
            {
                writer.WritePropertyName("isRequestorJustificationRequired"u8);
                writer.WriteBooleanValue(IsRequestorJustificationRequired.Value);
            }
            if (Core.Optional.IsDefined(ApprovalMode))
            {
                writer.WritePropertyName("approvalMode"u8);
                writer.WriteStringValue(ApprovalMode.Value.ToString());
            }
            if (Core.Optional.IsCollectionDefined(ApprovalStages))
            {
                writer.WritePropertyName("approvalStages"u8);
                writer.WriteStartArray();
                foreach (var item in ApprovalStages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static RoleManagementApprovalSettings DeserializeRoleManagementApprovalSettings(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<bool> isApprovalRequired = default;
            Core.Optional<bool> isApprovalRequiredForExtension = default;
            Core.Optional<bool> isRequestorJustificationRequired = default;
            Core.Optional<RoleManagementApprovalMode> approvalMode = default;
            Core.Optional<IList<RoleManagementApprovalStage>> approvalStages = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isApprovalRequired"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isApprovalRequired = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isApprovalRequiredForExtension"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isApprovalRequiredForExtension = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isRequestorJustificationRequired"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isRequestorJustificationRequired = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("approvalMode"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    approvalMode = new RoleManagementApprovalMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("approvalStages"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<RoleManagementApprovalStage> array = new List<RoleManagementApprovalStage>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RoleManagementApprovalStage.DeserializeRoleManagementApprovalStage(item));
                    }
                    approvalStages = array;
                    continue;
                }
            }
            return new RoleManagementApprovalSettings(Core.Optional.ToNullable(isApprovalRequired), Core.Optional.ToNullable(isApprovalRequiredForExtension), Core.Optional.ToNullable(isRequestorJustificationRequired), Core.Optional.ToNullable(approvalMode), Core.Optional.ToList(approvalStages));
        }
    }
}
