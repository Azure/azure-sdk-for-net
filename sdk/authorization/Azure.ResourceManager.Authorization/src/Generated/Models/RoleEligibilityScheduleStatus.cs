// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary> The status of the role eligibility schedule. </summary>
    public readonly partial struct RoleEligibilityScheduleStatus : IEquatable<RoleEligibilityScheduleStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RoleEligibilityScheduleStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RoleEligibilityScheduleStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AcceptedValue = "Accepted";
        private const string PendingEvaluationValue = "PendingEvaluation";
        private const string GrantedValue = "Granted";
        private const string DeniedValue = "Denied";
        private const string PendingProvisioningValue = "PendingProvisioning";
        private const string ProvisionedValue = "Provisioned";
        private const string PendingRevocationValue = "PendingRevocation";
        private const string RevokedValue = "Revoked";
        private const string CanceledValue = "Canceled";
        private const string FailedValue = "Failed";
        private const string PendingApprovalProvisioningValue = "PendingApprovalProvisioning";
        private const string PendingApprovalValue = "PendingApproval";
        private const string FailedAsResourceIsLockedValue = "FailedAsResourceIsLocked";
        private const string PendingAdminDecisionValue = "PendingAdminDecision";
        private const string AdminApprovedValue = "AdminApproved";
        private const string AdminDeniedValue = "AdminDenied";
        private const string TimedOutValue = "TimedOut";
        private const string ProvisioningStartedValue = "ProvisioningStarted";
        private const string InvalidValue = "Invalid";
        private const string PendingScheduleCreationValue = "PendingScheduleCreation";
        private const string ScheduleCreatedValue = "ScheduleCreated";
        private const string PendingExternalProvisioningValue = "PendingExternalProvisioning";

        /// <summary> Accepted. </summary>
        public static RoleEligibilityScheduleStatus Accepted { get; } = new RoleEligibilityScheduleStatus(AcceptedValue);
        /// <summary> PendingEvaluation. </summary>
        public static RoleEligibilityScheduleStatus PendingEvaluation { get; } = new RoleEligibilityScheduleStatus(PendingEvaluationValue);
        /// <summary> Granted. </summary>
        public static RoleEligibilityScheduleStatus Granted { get; } = new RoleEligibilityScheduleStatus(GrantedValue);
        /// <summary> Denied. </summary>
        public static RoleEligibilityScheduleStatus Denied { get; } = new RoleEligibilityScheduleStatus(DeniedValue);
        /// <summary> PendingProvisioning. </summary>
        public static RoleEligibilityScheduleStatus PendingProvisioning { get; } = new RoleEligibilityScheduleStatus(PendingProvisioningValue);
        /// <summary> Provisioned. </summary>
        public static RoleEligibilityScheduleStatus Provisioned { get; } = new RoleEligibilityScheduleStatus(ProvisionedValue);
        /// <summary> PendingRevocation. </summary>
        public static RoleEligibilityScheduleStatus PendingRevocation { get; } = new RoleEligibilityScheduleStatus(PendingRevocationValue);
        /// <summary> Revoked. </summary>
        public static RoleEligibilityScheduleStatus Revoked { get; } = new RoleEligibilityScheduleStatus(RevokedValue);
        /// <summary> Canceled. </summary>
        public static RoleEligibilityScheduleStatus Canceled { get; } = new RoleEligibilityScheduleStatus(CanceledValue);
        /// <summary> Failed. </summary>
        public static RoleEligibilityScheduleStatus Failed { get; } = new RoleEligibilityScheduleStatus(FailedValue);
        /// <summary> PendingApprovalProvisioning. </summary>
        public static RoleEligibilityScheduleStatus PendingApprovalProvisioning { get; } = new RoleEligibilityScheduleStatus(PendingApprovalProvisioningValue);
        /// <summary> PendingApproval. </summary>
        public static RoleEligibilityScheduleStatus PendingApproval { get; } = new RoleEligibilityScheduleStatus(PendingApprovalValue);
        /// <summary> FailedAsResourceIsLocked. </summary>
        public static RoleEligibilityScheduleStatus FailedAsResourceIsLocked { get; } = new RoleEligibilityScheduleStatus(FailedAsResourceIsLockedValue);
        /// <summary> PendingAdminDecision. </summary>
        public static RoleEligibilityScheduleStatus PendingAdminDecision { get; } = new RoleEligibilityScheduleStatus(PendingAdminDecisionValue);
        /// <summary> AdminApproved. </summary>
        public static RoleEligibilityScheduleStatus AdminApproved { get; } = new RoleEligibilityScheduleStatus(AdminApprovedValue);
        /// <summary> AdminDenied. </summary>
        public static RoleEligibilityScheduleStatus AdminDenied { get; } = new RoleEligibilityScheduleStatus(AdminDeniedValue);
        /// <summary> TimedOut. </summary>
        public static RoleEligibilityScheduleStatus TimedOut { get; } = new RoleEligibilityScheduleStatus(TimedOutValue);
        /// <summary> ProvisioningStarted. </summary>
        public static RoleEligibilityScheduleStatus ProvisioningStarted { get; } = new RoleEligibilityScheduleStatus(ProvisioningStartedValue);
        /// <summary> Invalid. </summary>
        public static RoleEligibilityScheduleStatus Invalid { get; } = new RoleEligibilityScheduleStatus(InvalidValue);
        /// <summary> PendingScheduleCreation. </summary>
        public static RoleEligibilityScheduleStatus PendingScheduleCreation { get; } = new RoleEligibilityScheduleStatus(PendingScheduleCreationValue);
        /// <summary> ScheduleCreated. </summary>
        public static RoleEligibilityScheduleStatus ScheduleCreated { get; } = new RoleEligibilityScheduleStatus(ScheduleCreatedValue);
        /// <summary> PendingExternalProvisioning. </summary>
        public static RoleEligibilityScheduleStatus PendingExternalProvisioning { get; } = new RoleEligibilityScheduleStatus(PendingExternalProvisioningValue);
        /// <summary> Determines if two <see cref="RoleEligibilityScheduleStatus"/> values are the same. </summary>
        public static bool operator ==(RoleEligibilityScheduleStatus left, RoleEligibilityScheduleStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RoleEligibilityScheduleStatus"/> values are not the same. </summary>
        public static bool operator !=(RoleEligibilityScheduleStatus left, RoleEligibilityScheduleStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RoleEligibilityScheduleStatus"/>. </summary>
        public static implicit operator RoleEligibilityScheduleStatus(string value) => new RoleEligibilityScheduleStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RoleEligibilityScheduleStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RoleEligibilityScheduleStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
