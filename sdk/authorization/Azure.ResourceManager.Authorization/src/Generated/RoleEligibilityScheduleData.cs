// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Authorization.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Authorization
{
    /// <summary> A class representing the RoleEligibilitySchedule data model. </summary>
    public partial class RoleEligibilityScheduleData : ResourceData
    {
        /// <summary> Initializes a new instance of RoleEligibilityScheduleData. </summary>
        internal RoleEligibilityScheduleData()
        {
        }

        /// <summary> Initializes a new instance of RoleEligibilityScheduleData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="scope">
        /// The role eligibility schedule scope.
        /// Serialized Name: RoleEligibilitySchedule.properties.scope
        /// </param>
        /// <param name="roleDefinitionId">
        /// The role definition ID.
        /// Serialized Name: RoleEligibilitySchedule.properties.roleDefinitionId
        /// </param>
        /// <param name="principalId">
        /// The principal ID.
        /// Serialized Name: RoleEligibilitySchedule.properties.principalId
        /// </param>
        /// <param name="principalType">
        /// The principal type of the assigned principal ID.
        /// Serialized Name: RoleEligibilitySchedule.properties.principalType
        /// </param>
        /// <param name="roleEligibilityScheduleRequestId">
        /// The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule
        /// Serialized Name: RoleEligibilitySchedule.properties.roleEligibilityScheduleRequestId
        /// </param>
        /// <param name="memberType">
        /// Membership type of the role eligibility schedule
        /// Serialized Name: RoleEligibilitySchedule.properties.memberType
        /// </param>
        /// <param name="status">
        /// The status of the role eligibility schedule.
        /// Serialized Name: RoleEligibilitySchedule.properties.status
        /// </param>
        /// <param name="startOn">
        /// Start DateTime when role eligibility schedule
        /// Serialized Name: RoleEligibilitySchedule.properties.startDateTime
        /// </param>
        /// <param name="endOn">
        /// End DateTime when role eligibility schedule
        /// Serialized Name: RoleEligibilitySchedule.properties.endDateTime
        /// </param>
        /// <param name="condition">
        /// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase &apos;foo_storage_container&apos;
        /// Serialized Name: RoleEligibilitySchedule.properties.condition
        /// </param>
        /// <param name="conditionVersion">
        /// Version of the condition. Currently accepted value is &apos;2.0&apos;
        /// Serialized Name: RoleEligibilitySchedule.properties.conditionVersion
        /// </param>
        /// <param name="createdOn">
        /// DateTime when role eligibility schedule was created
        /// Serialized Name: RoleEligibilitySchedule.properties.createdOn
        /// </param>
        /// <param name="updatedOn">
        /// DateTime when role eligibility schedule was modified
        /// Serialized Name: RoleEligibilitySchedule.properties.updatedOn
        /// </param>
        /// <param name="expandedProperties">
        /// Additional properties of principal, scope and role definition
        /// Serialized Name: RoleEligibilitySchedule.properties.expandedProperties
        /// </param>
        internal RoleEligibilityScheduleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string scope, ResourceIdentifier roleDefinitionId, Guid? principalId, RoleEligibilitySchedulePrincipalType? principalType, ResourceIdentifier roleEligibilityScheduleRequestId, RoleEligibilityScheduleMemberType? memberType, RoleEligibilityScheduleStatus? status, DateTimeOffset? startOn, DateTimeOffset? endOn, string condition, string conditionVersion, DateTimeOffset? createdOn, DateTimeOffset? updatedOn, ExpandedProperties expandedProperties) : base(id, name, resourceType, systemData)
        {
            Scope = scope;
            RoleDefinitionId = roleDefinitionId;
            PrincipalId = principalId;
            PrincipalType = principalType;
            RoleEligibilityScheduleRequestId = roleEligibilityScheduleRequestId;
            MemberType = memberType;
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            Condition = condition;
            ConditionVersion = conditionVersion;
            CreatedOn = createdOn;
            UpdatedOn = updatedOn;
            ExpandedProperties = expandedProperties;
        }

        /// <summary>
        /// The role eligibility schedule scope.
        /// Serialized Name: RoleEligibilitySchedule.properties.scope
        /// </summary>
        public string Scope { get; }
        /// <summary>
        /// The role definition ID.
        /// Serialized Name: RoleEligibilitySchedule.properties.roleDefinitionId
        /// </summary>
        public ResourceIdentifier RoleDefinitionId { get; }
        /// <summary>
        /// The principal ID.
        /// Serialized Name: RoleEligibilitySchedule.properties.principalId
        /// </summary>
        public Guid? PrincipalId { get; }
        /// <summary>
        /// The principal type of the assigned principal ID.
        /// Serialized Name: RoleEligibilitySchedule.properties.principalType
        /// </summary>
        public RoleEligibilitySchedulePrincipalType? PrincipalType { get; }
        /// <summary>
        /// The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule
        /// Serialized Name: RoleEligibilitySchedule.properties.roleEligibilityScheduleRequestId
        /// </summary>
        public ResourceIdentifier RoleEligibilityScheduleRequestId { get; }
        /// <summary>
        /// Membership type of the role eligibility schedule
        /// Serialized Name: RoleEligibilitySchedule.properties.memberType
        /// </summary>
        public RoleEligibilityScheduleMemberType? MemberType { get; }
        /// <summary>
        /// The status of the role eligibility schedule.
        /// Serialized Name: RoleEligibilitySchedule.properties.status
        /// </summary>
        public RoleEligibilityScheduleStatus? Status { get; }
        /// <summary>
        /// Start DateTime when role eligibility schedule
        /// Serialized Name: RoleEligibilitySchedule.properties.startDateTime
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// End DateTime when role eligibility schedule
        /// Serialized Name: RoleEligibilitySchedule.properties.endDateTime
        /// </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary>
        /// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase &apos;foo_storage_container&apos;
        /// Serialized Name: RoleEligibilitySchedule.properties.condition
        /// </summary>
        public string Condition { get; }
        /// <summary>
        /// Version of the condition. Currently accepted value is &apos;2.0&apos;
        /// Serialized Name: RoleEligibilitySchedule.properties.conditionVersion
        /// </summary>
        public string ConditionVersion { get; }
        /// <summary>
        /// DateTime when role eligibility schedule was created
        /// Serialized Name: RoleEligibilitySchedule.properties.createdOn
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// DateTime when role eligibility schedule was modified
        /// Serialized Name: RoleEligibilitySchedule.properties.updatedOn
        /// </summary>
        public DateTimeOffset? UpdatedOn { get; }
        /// <summary>
        /// Additional properties of principal, scope and role definition
        /// Serialized Name: RoleEligibilitySchedule.properties.expandedProperties
        /// </summary>
        public ExpandedProperties ExpandedProperties { get; }
    }
}
