// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.InformaticaDataManagement.Models
{
    /// <summary> Model for the check dependencies API for an informatica serverless runtime resource. </summary>
    public partial class CheckDependenciesResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CheckDependenciesResult"/>. </summary>
        /// <param name="count"> Count of dependencies. </param>
        /// <param name="id"> id of resource. </param>
        /// <param name="references"> List of dependencies. </param>
        internal CheckDependenciesResult(int count, string id, IEnumerable<ServerlessRuntimeDependency> references)
        {
            Count = count;
            Id = id;
            References = references.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="CheckDependenciesResult"/>. </summary>
        /// <param name="count"> Count of dependencies. </param>
        /// <param name="id"> id of resource. </param>
        /// <param name="references"> List of dependencies. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CheckDependenciesResult(int count, string id, IList<ServerlessRuntimeDependency> references, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Count = count;
            Id = id;
            References = references;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Count of dependencies. </summary>
        public int Count { get; }

        /// <summary> id of resource. </summary>
        public string Id { get; }

        /// <summary> List of dependencies. </summary>
        public IList<ServerlessRuntimeDependency> References { get; }
    }
}
