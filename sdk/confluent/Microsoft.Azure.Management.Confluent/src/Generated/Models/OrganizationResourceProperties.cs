// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Confluent.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Organization resource property
    /// </summary>
    public partial class OrganizationResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the OrganizationResourceProperties
        /// class.
        /// </summary>
        public OrganizationResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrganizationResourceProperties
        /// class.
        /// </summary>
        /// <param name="createdTime">The creation time of the
        /// resource.</param>
        /// <param name="provisioningState">Provision states for confluent RP.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted',
        /// 'NotSpecified'</param>
        /// <param name="organizationId">Id of the Confluent
        /// organization.</param>
        /// <param name="ssoUrl">SSO url for the Confluent
        /// organization.</param>
        /// <param name="offerDetail">Confluent offer detail</param>
        /// <param name="userDetail">Subscriber detail</param>
        public OrganizationResourceProperties(System.DateTime? createdTime = default(System.DateTime?), string provisioningState = default(string), string organizationId = default(string), string ssoUrl = default(string), OrganizationResourcePropertiesOfferDetail offerDetail = default(OrganizationResourcePropertiesOfferDetail), OrganizationResourcePropertiesUserDetail userDetail = default(OrganizationResourcePropertiesUserDetail))
        {
            CreatedTime = createdTime;
            ProvisioningState = provisioningState;
            OrganizationId = organizationId;
            SsoUrl = ssoUrl;
            OfferDetail = offerDetail;
            UserDetail = userDetail;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the creation time of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; private set; }

        /// <summary>
        /// Gets or sets provision states for confluent RP. Possible values
        /// include: 'Accepted', 'Creating', 'Updating', 'Deleting',
        /// 'Succeeded', 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets id of the Confluent organization.
        /// </summary>
        [JsonProperty(PropertyName = "organizationId")]
        public string OrganizationId { get; private set; }

        /// <summary>
        /// Gets SSO url for the Confluent organization.
        /// </summary>
        [JsonProperty(PropertyName = "ssoUrl")]
        public string SsoUrl { get; private set; }

        /// <summary>
        /// Gets or sets confluent offer detail
        /// </summary>
        [JsonProperty(PropertyName = "offerDetail")]
        public OrganizationResourcePropertiesOfferDetail OfferDetail { get; set; }

        /// <summary>
        /// Gets or sets subscriber detail
        /// </summary>
        [JsonProperty(PropertyName = "userDetail")]
        public OrganizationResourcePropertiesUserDetail UserDetail { get; set; }

    }
}
