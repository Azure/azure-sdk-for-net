// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Confluent.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Confluent.Samples
{
    public partial class Sample_ConfluentOrganizationResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetClusterApiKey_OrganizationGetClusterAPIKeyMaximumSet()
        {
            // Generated from example definition: 2025-07-17-preview/examples/Organization_GetClusterAPIKey_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_GetClusterApiKey" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfluentOrganizationResource created on azure
            // for more information of creating ConfluentOrganizationResource, please refer to the document of ConfluentOrganizationResource
            string subscriptionId = "F1DD149D-DDBF-4A56-ACC5-35ADC1C6103D";
            string resourceGroupName = "rgconfluent";
            string organizationName = "obkrtvdosidk";
            ResourceIdentifier confluentOrganizationResourceId = ConfluentOrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            ConfluentOrganizationResource confluentOrganization = client.GetConfluentOrganizationResource(confluentOrganizationResourceId);

            // invoke the operation
            string apiKeyId = "ubxlwyxtaxkxdn";
            ConfluentApiKeyRecord result = await confluentOrganization.GetClusterApiKeyAsync(apiKeyId);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetClusterApiKey_OrganizationGetClusterAPIKeyMinimumSet()
        {
            // Generated from example definition: 2025-07-17-preview/examples/Organization_GetClusterAPIKey_MinimumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_GetClusterApiKey" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfluentOrganizationResource created on azure
            // for more information of creating ConfluentOrganizationResource, please refer to the document of ConfluentOrganizationResource
            string subscriptionId = "F1DD149D-DDBF-4A56-ACC5-35ADC1C6103D";
            string resourceGroupName = "rgconfluent";
            string organizationName = "dwlvoielafuqbrvjm";
            ResourceIdentifier confluentOrganizationResourceId = ConfluentOrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            ConfluentOrganizationResource confluentOrganization = client.GetConfluentOrganizationResource(confluentOrganizationResourceId);

            // invoke the operation
            string apiKeyId = "nizcjkvv";
            ConfluentApiKeyRecord result = await confluentOrganization.GetClusterApiKeyAsync(apiKeyId);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task DeleteClusterApiKey_OrganizationDeleteClusterAPIKeyMaximumSet()
        {
            // Generated from example definition: 2025-07-17-preview/examples/Organization_DeleteClusterAPIKey_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_DeleteClusterApiKey" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfluentOrganizationResource created on azure
            // for more information of creating ConfluentOrganizationResource, please refer to the document of ConfluentOrganizationResource
            string subscriptionId = "F1DD149D-DDBF-4A56-ACC5-35ADC1C6103D";
            string resourceGroupName = "rgconfluent";
            string organizationName = "i";
            ResourceIdentifier confluentOrganizationResourceId = ConfluentOrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            ConfluentOrganizationResource confluentOrganization = client.GetConfluentOrganizationResource(confluentOrganizationResourceId);

            // invoke the operation
            string apiKeyId = "qjrgzkeeewxy";
            await confluentOrganization.DeleteClusterApiKeyAsync(apiKeyId);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task DeleteClusterApiKey_OrganizationDeleteClusterAPIKeyMinimumSet()
        {
            // Generated from example definition: 2025-07-17-preview/examples/Organization_DeleteClusterAPIKey_MinimumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_DeleteClusterApiKey" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfluentOrganizationResource created on azure
            // for more information of creating ConfluentOrganizationResource, please refer to the document of ConfluentOrganizationResource
            string subscriptionId = "F1DD149D-DDBF-4A56-ACC5-35ADC1C6103D";
            string resourceGroupName = "rgconfluent";
            string organizationName = "dumuqboiqd";
            ResourceIdentifier confluentOrganizationResourceId = ConfluentOrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            ConfluentOrganizationResource confluentOrganization = client.GetConfluentOrganizationResource(confluentOrganizationResourceId);

            // invoke the operation
            string apiKeyId = "uwfyesskfavbitvsjzutiia";
            await confluentOrganization.DeleteClusterApiKeyAsync(apiKeyId);

            Console.WriteLine("Succeeded");
        }
    }
}
