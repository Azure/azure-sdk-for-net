// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Confluent.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Confluent
{
    /// <summary> A class representing the OrganizationResource data model. </summary>
    public partial class OrganizationResourceData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of OrganizationResourceData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="offerDetail"> Confluent offer detail. </param>
        /// <param name="userDetail"> Subscriber detail. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="offerDetail"/> or <paramref name="userDetail"/> is null. </exception>
        public OrganizationResourceData(AzureLocation location, OfferDetail offerDetail, UserDetail userDetail) : base(location)
        {
            if (offerDetail == null)
            {
                throw new ArgumentNullException(nameof(offerDetail));
            }
            if (userDetail == null)
            {
                throw new ArgumentNullException(nameof(userDetail));
            }

            OfferDetail = offerDetail;
            UserDetail = userDetail;
        }

        /// <summary> Initializes a new instance of OrganizationResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="createdOn"> The creation time of the resource. </param>
        /// <param name="provisioningState"> Provision states for confluent RP. </param>
        /// <param name="organizationId"> Id of the Confluent organization. </param>
        /// <param name="ssoUri"> SSO url for the Confluent organization. </param>
        /// <param name="offerDetail"> Confluent offer detail. </param>
        /// <param name="userDetail"> Subscriber detail. </param>
        internal OrganizationResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, DateTimeOffset? createdOn, ProvisionState? provisioningState, string organizationId, Uri ssoUri, OfferDetail offerDetail, UserDetail userDetail) : base(id, name, resourceType, systemData, tags, location)
        {
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
            OrganizationId = organizationId;
            SsoUri = ssoUri;
            OfferDetail = offerDetail;
            UserDetail = userDetail;
        }

        /// <summary> The creation time of the resource. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Provision states for confluent RP. </summary>
        public ProvisionState? ProvisioningState { get; }
        /// <summary> Id of the Confluent organization. </summary>
        public string OrganizationId { get; }
        /// <summary> SSO url for the Confluent organization. </summary>
        public Uri SsoUri { get; }
        /// <summary> Confluent offer detail. </summary>
        public OfferDetail OfferDetail { get; set; }
        /// <summary> Subscriber detail. </summary>
        public UserDetail UserDetail { get; set; }
    }
}
