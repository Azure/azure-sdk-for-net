// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Confluent.Models
{
    /// <summary> Partner Connector type. </summary>
    internal readonly partial struct PartnerConnectorType : IEquatable<PartnerConnectorType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PartnerConnectorType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PartnerConnectorType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string KafkaAzureBlobStorageSourceValue = "KafkaAzureBlobStorageSource";
        private const string KafkaAzureBlobStorageSinkValue = "KafkaAzureBlobStorageSink";
        private const string KafkaAzureCosmosDBSourceValue = "KafkaAzureCosmosDBSource";
        private const string KafkaAzureCosmosDBSinkValue = "KafkaAzureCosmosDBSink";
        private const string KafkaAzureSynapseAnalyticsSinkValue = "KafkaAzureSynapseAnalyticsSink";

        /// <summary> KafkaAzureBlobStorageSource. </summary>
        public static PartnerConnectorType KafkaAzureBlobStorageSource { get; } = new PartnerConnectorType(KafkaAzureBlobStorageSourceValue);
        /// <summary> KafkaAzureBlobStorageSink. </summary>
        public static PartnerConnectorType KafkaAzureBlobStorageSink { get; } = new PartnerConnectorType(KafkaAzureBlobStorageSinkValue);
        /// <summary> KafkaAzureCosmosDBSource. </summary>
        public static PartnerConnectorType KafkaAzureCosmosDBSource { get; } = new PartnerConnectorType(KafkaAzureCosmosDBSourceValue);
        /// <summary> KafkaAzureCosmosDBSink. </summary>
        public static PartnerConnectorType KafkaAzureCosmosDBSink { get; } = new PartnerConnectorType(KafkaAzureCosmosDBSinkValue);
        /// <summary> KafkaAzureSynapseAnalyticsSink. </summary>
        public static PartnerConnectorType KafkaAzureSynapseAnalyticsSink { get; } = new PartnerConnectorType(KafkaAzureSynapseAnalyticsSinkValue);
        /// <summary> Determines if two <see cref="PartnerConnectorType"/> values are the same. </summary>
        public static bool operator ==(PartnerConnectorType left, PartnerConnectorType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PartnerConnectorType"/> values are not the same. </summary>
        public static bool operator !=(PartnerConnectorType left, PartnerConnectorType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="PartnerConnectorType"/>. </summary>
        public static implicit operator PartnerConnectorType(string value) => new PartnerConnectorType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PartnerConnectorType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PartnerConnectorType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
