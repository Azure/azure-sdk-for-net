// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Confluent.Models
{
    /// <summary> The partner connector type is KafkaAzureCosmosDBSource. </summary>
    public partial class KafkaAzureCosmosDBSourceConnectorInfo : PartnerInfoBase
    {
        /// <summary> Initializes a new instance of <see cref="KafkaAzureCosmosDBSourceConnectorInfo"/>. </summary>
        public KafkaAzureCosmosDBSourceConnectorInfo()
        {
            PartnerConnectorType = PartnerConnectorType.KafkaAzureCosmosDBSource;
        }

        /// <summary> Initializes a new instance of <see cref="KafkaAzureCosmosDBSourceConnectorInfo"/>. </summary>
        /// <param name="partnerConnectorType"> The partner connector type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="authType"> Kafka Auth Type. </param>
        /// <param name="inputFormat"> Kafka Input Data Format Type. </param>
        /// <param name="outputFormat"> Kafka Output Data Format Type. </param>
        /// <param name="apiKey"> Kafka API Key. </param>
        /// <param name="apiSecret"> Kafka API Secret. </param>
        /// <param name="serviceAccountId"> Kafka Service Account Id. </param>
        /// <param name="topicRegex"> Kafka topics Regex pattern. </param>
        /// <param name="topicsDir"> Kafka topics directory. </param>
        /// <param name="maxTasks"> Maximum Tasks. </param>
        internal KafkaAzureCosmosDBSourceConnectorInfo(PartnerConnectorType partnerConnectorType, IDictionary<string, BinaryData> serializedAdditionalRawData, AuthType? authType, DataFormatType? inputFormat, DataFormatType? outputFormat, string apiKey, string apiSecret, string serviceAccountId, string topicRegex, string topicsDir, string maxTasks) : base(partnerConnectorType, serializedAdditionalRawData)
        {
            AuthType = authType;
            InputFormat = inputFormat;
            OutputFormat = outputFormat;
            ApiKey = apiKey;
            ApiSecret = apiSecret;
            ServiceAccountId = serviceAccountId;
            TopicRegex = topicRegex;
            TopicsDir = topicsDir;
            MaxTasks = maxTasks;
            PartnerConnectorType = partnerConnectorType;
        }

        /// <summary> Kafka Auth Type. </summary>
        public AuthType? AuthType { get; set; }
        /// <summary> Kafka Input Data Format Type. </summary>
        public DataFormatType? InputFormat { get; set; }
        /// <summary> Kafka Output Data Format Type. </summary>
        public DataFormatType? OutputFormat { get; set; }
        /// <summary> Kafka API Key. </summary>
        public string ApiKey { get; set; }
        /// <summary> Kafka API Secret. </summary>
        public string ApiSecret { get; set; }
        /// <summary> Kafka Service Account Id. </summary>
        public string ServiceAccountId { get; set; }
        /// <summary> Kafka topics Regex pattern. </summary>
        public string TopicRegex { get; set; }
        /// <summary> Kafka topics directory. </summary>
        public string TopicsDir { get; set; }
        /// <summary> Maximum Tasks. </summary>
        public string MaxTasks { get; set; }
    }
}
