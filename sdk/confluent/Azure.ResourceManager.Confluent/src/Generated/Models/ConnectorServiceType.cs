// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Confluent.Models
{
    /// <summary> The connector service type. </summary>
    internal readonly partial struct ConnectorServiceType : IEquatable<ConnectorServiceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ConnectorServiceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ConnectorServiceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AzureBlobStorageSinkConnectorValue = "AzureBlobStorageSinkConnector";
        private const string AzureBlobStorageSourceConnectorValue = "AzureBlobStorageSourceConnector";
        private const string AzureCosmosDBSinkConnectorValue = "AzureCosmosDBSinkConnector";
        private const string AzureCosmosDBSourceConnectorValue = "AzureCosmosDBSourceConnector";
        private const string AzureSynapseAnalyticsSinkConnectorValue = "AzureSynapseAnalyticsSinkConnector";

        /// <summary> AzureBlobStorageSinkConnector. </summary>
        public static ConnectorServiceType AzureBlobStorageSinkConnector { get; } = new ConnectorServiceType(AzureBlobStorageSinkConnectorValue);
        /// <summary> AzureBlobStorageSourceConnector. </summary>
        public static ConnectorServiceType AzureBlobStorageSourceConnector { get; } = new ConnectorServiceType(AzureBlobStorageSourceConnectorValue);
        /// <summary> AzureCosmosDBSinkConnector. </summary>
        public static ConnectorServiceType AzureCosmosDBSinkConnector { get; } = new ConnectorServiceType(AzureCosmosDBSinkConnectorValue);
        /// <summary> AzureCosmosDBSourceConnector. </summary>
        public static ConnectorServiceType AzureCosmosDBSourceConnector { get; } = new ConnectorServiceType(AzureCosmosDBSourceConnectorValue);
        /// <summary> AzureSynapseAnalyticsSinkConnector. </summary>
        public static ConnectorServiceType AzureSynapseAnalyticsSinkConnector { get; } = new ConnectorServiceType(AzureSynapseAnalyticsSinkConnectorValue);
        /// <summary> Determines if two <see cref="ConnectorServiceType"/> values are the same. </summary>
        public static bool operator ==(ConnectorServiceType left, ConnectorServiceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ConnectorServiceType"/> values are not the same. </summary>
        public static bool operator !=(ConnectorServiceType left, ConnectorServiceType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ConnectorServiceType"/>. </summary>
        public static implicit operator ConnectorServiceType(string value) => new ConnectorServiceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ConnectorServiceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ConnectorServiceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
