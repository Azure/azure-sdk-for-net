// <auto-generated/>

using Azure.ResourceManager.Confluent;
using Azure.ResourceManager.Confluent.Models;
using System.ClientModel.Primitives;

namespace Azure.ResourceManager.Confluent;

[ModelReaderWriterBuildable(typeof(ConfluentOrganizationData))]
[ModelReaderWriterBuildable(typeof(ConfluentOrganizationResource))]
[ModelReaderWriterBuildable(typeof(ConfluentOfferDetail))]
[ModelReaderWriterBuildable(typeof(AccessClusterListResult))]
[ModelReaderWriterBuildable(typeof(AccessClusterRecord))]
[ModelReaderWriterBuildable(typeof(AccessEnvironmentListResult))]
[ModelReaderWriterBuildable(typeof(AccessEnvironmentRecord))]
[ModelReaderWriterBuildable(typeof(AccessInvitationContent))]
[ModelReaderWriterBuildable(typeof(AccessInvitationListResult))]
[ModelReaderWriterBuildable(typeof(AccessInvitationRecord))]
[ModelReaderWriterBuildable(typeof(AccessInvitedUserDetails))]
[ModelReaderWriterBuildable(typeof(AccessListContent))]
[ModelReaderWriterBuildable(typeof(AccessRoleBindingCreateContent))]
[ModelReaderWriterBuildable(typeof(AccessRoleBindingListResult))]
[ModelReaderWriterBuildable(typeof(AccessRoleBindingNameListResult))]
[ModelReaderWriterBuildable(typeof(AccessRoleBindingRecord))]
[ModelReaderWriterBuildable(typeof(AccessServiceAccountListResult))]
[ModelReaderWriterBuildable(typeof(AccessServiceAccountRecord))]
[ModelReaderWriterBuildable(typeof(AccessUserListResult))]
[ModelReaderWriterBuildable(typeof(AccessUserRecord))]
[ModelReaderWriterBuildable(typeof(ApiKeyOwnerEntity))]
[ModelReaderWriterBuildable(typeof(ApiKeyResourceEntity))]
[ModelReaderWriterBuildable(typeof(ApiKeySpecEntity))]
[ModelReaderWriterBuildable(typeof(ClusterByokEntity))]
[ModelReaderWriterBuildable(typeof(ClusterConfigEntity))]
[ModelReaderWriterBuildable(typeof(ClusterEnvironmentEntity))]
[ModelReaderWriterBuildable(typeof(ClusterNetworkEntity))]
[ModelReaderWriterBuildable(typeof(ClusterSpecEntity))]
[ModelReaderWriterBuildable(typeof(ClusterStatusEntity))]
[ModelReaderWriterBuildable(typeof(ConfluentAgreement))]
[ModelReaderWriterBuildable(typeof(ConfluentAgreementListResult))]
[ModelReaderWriterBuildable(typeof(ConfluentApiKeyCreateContent))]
[ModelReaderWriterBuildable(typeof(ConfluentApiKeyRecord))]
[ModelReaderWriterBuildable(typeof(ConfluentListMetadata))]
[ModelReaderWriterBuildable(typeof(ConfluentOrganizationListResult))]
[ModelReaderWriterBuildable(typeof(ConfluentOrganizationPatch))]
[ModelReaderWriterBuildable(typeof(ConfluentOrganizationValidationResult))]
[ModelReaderWriterBuildable(typeof(ConfluentRegionListResult))]
[ModelReaderWriterBuildable(typeof(ConfluentRegionRecord))]
[ModelReaderWriterBuildable(typeof(ConfluentUserDetail))]
[ModelReaderWriterBuildable(typeof(GetEnvironmentsResponse))]
[ModelReaderWriterBuildable(typeof(LinkOrganization))]
[ModelReaderWriterBuildable(typeof(ListClustersSuccessResponse))]
[ModelReaderWriterBuildable(typeof(ListSchemaRegistryClustersResponse))]
[ModelReaderWriterBuildable(typeof(MetadataEntity))]
[ModelReaderWriterBuildable(typeof(RegionSpecEntity))]
[ModelReaderWriterBuildable(typeof(SCClusterByokEntity))]
[ModelReaderWriterBuildable(typeof(SCClusterNetworkEnvironmentEntity))]
[ModelReaderWriterBuildable(typeof(SCClusterRecord))]
[ModelReaderWriterBuildable(typeof(SCClusterSpecEntity))]
[ModelReaderWriterBuildable(typeof(SCEnvironmentRecord))]
[ModelReaderWriterBuildable(typeof(SchemaRegistryClusterEnvironmentRegionEntity))]
[ModelReaderWriterBuildable(typeof(SchemaRegistryClusterRecord))]
[ModelReaderWriterBuildable(typeof(SchemaRegistryClusterSpecEntity))]
[ModelReaderWriterBuildable(typeof(SchemaRegistryClusterStatusEntity))]
[ModelReaderWriterBuildable(typeof(SCMetadataEntity))]
public partial class AzureResourceManagerConfluentContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(ManagedServiceIdentity), () => ArmContext.GetTypeBuilder(typeof(ManagedServiceIdentity)));
    }
}
