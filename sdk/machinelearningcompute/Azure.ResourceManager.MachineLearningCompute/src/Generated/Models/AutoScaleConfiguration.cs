// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.MachineLearningCompute.Models
{
    /// <summary> AutoScale configuration properties. </summary>
    public partial class AutoScaleConfiguration
    {
        /// <summary> Initializes a new instance of <see cref="AutoScaleConfiguration"/>. </summary>
        public AutoScaleConfiguration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AutoScaleConfiguration"/>. </summary>
        /// <param name="status"> If auto-scale is enabled for all services. Each service can turn it off individually. </param>
        /// <param name="minReplicas"> The minimum number of replicas for each service. </param>
        /// <param name="maxReplicas"> The maximum number of replicas for each service. </param>
        /// <param name="targetUtilization"> The target utilization. </param>
        /// <param name="refreshPeriodInSeconds"> Refresh period in seconds. </param>
        internal AutoScaleConfiguration(Status? status, int? minReplicas, int? maxReplicas, float? targetUtilization, int? refreshPeriodInSeconds)
        {
            Status = status;
            MinReplicas = minReplicas;
            MaxReplicas = maxReplicas;
            TargetUtilization = targetUtilization;
            RefreshPeriodInSeconds = refreshPeriodInSeconds;
        }

        /// <summary> If auto-scale is enabled for all services. Each service can turn it off individually. </summary>
        public Status? Status { get; set; }
        /// <summary> The minimum number of replicas for each service. </summary>
        public int? MinReplicas { get; set; }
        /// <summary> The maximum number of replicas for each service. </summary>
        public int? MaxReplicas { get; set; }
        /// <summary> The target utilization. </summary>
        public float? TargetUtilization { get; set; }
        /// <summary> Refresh period in seconds. </summary>
        public int? RefreshPeriodInSeconds { get; set; }
    }
}
