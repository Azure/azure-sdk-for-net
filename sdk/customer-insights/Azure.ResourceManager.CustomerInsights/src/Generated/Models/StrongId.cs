// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.CustomerInsights.Models
{
    /// <summary> Property/Properties which represent a unique ID. </summary>
    public partial class StrongId
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="StrongId"/>. </summary>
        /// <param name="keyPropertyNames"> The properties which make up the unique ID. </param>
        /// <param name="strongIdName"> The Name identifying the strong ID. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyPropertyNames"/> or <paramref name="strongIdName"/> is null. </exception>
        public StrongId(IEnumerable<string> keyPropertyNames, string strongIdName)
        {
            Argument.AssertNotNull(keyPropertyNames, nameof(keyPropertyNames));
            Argument.AssertNotNull(strongIdName, nameof(strongIdName));

            KeyPropertyNames = keyPropertyNames.ToList();
            StrongIdName = strongIdName;
            DisplayName = new ChangeTrackingDictionary<string, string>();
            Description = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="StrongId"/>. </summary>
        /// <param name="keyPropertyNames"> The properties which make up the unique ID. </param>
        /// <param name="strongIdName"> The Name identifying the strong ID. </param>
        /// <param name="displayName"> Localized display name. </param>
        /// <param name="description"> Localized descriptions. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal StrongId(IList<string> keyPropertyNames, string strongIdName, IDictionary<string, string> displayName, IDictionary<string, string> description, Dictionary<string, BinaryData> rawData)
        {
            KeyPropertyNames = keyPropertyNames;
            StrongIdName = strongIdName;
            DisplayName = displayName;
            Description = description;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="StrongId"/> for deserialization. </summary>
        internal StrongId()
        {
        }

        /// <summary> The properties which make up the unique ID. </summary>
        public IList<string> KeyPropertyNames { get; }
        /// <summary> The Name identifying the strong ID. </summary>
        public string StrongIdName { get; set; }
        /// <summary> Localized display name. </summary>
        public IDictionary<string, string> DisplayName { get; }
        /// <summary> Localized descriptions. </summary>
        public IDictionary<string, string> Description { get; }
    }
}
