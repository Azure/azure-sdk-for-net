// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.CustomerInsights.Models
{
    internal static partial class KpiFunctionExtensions
    {
        public static string ToSerialString(this KpiFunction value) => value switch
        {
            KpiFunction.None => "None",
            KpiFunction.Sum => "Sum",
            KpiFunction.Avg => "Avg",
            KpiFunction.Min => "Min",
            KpiFunction.Max => "Max",
            KpiFunction.Last => "Last",
            KpiFunction.Count => "Count",
            KpiFunction.CountDistinct => "CountDistinct",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown KpiFunction value.")
        };

        public static KpiFunction ToKpiFunction(this string value)
        {
            if (string.Equals(value, "None", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.None;
            if (string.Equals(value, "Sum", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.Sum;
            if (string.Equals(value, "Avg", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.Avg;
            if (string.Equals(value, "Min", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.Min;
            if (string.Equals(value, "Max", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.Max;
            if (string.Equals(value, "Last", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.Last;
            if (string.Equals(value, "Count", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.Count;
            if (string.Equals(value, "CountDistinct", StringComparison.InvariantCultureIgnoreCase)) return KpiFunction.CountDistinct;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown KpiFunction value.");
        }
    }
}
