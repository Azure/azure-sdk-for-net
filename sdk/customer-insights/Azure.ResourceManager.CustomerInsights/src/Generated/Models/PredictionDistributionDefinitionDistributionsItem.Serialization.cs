// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CustomerInsights.Models
{
    public partial class PredictionDistributionDefinitionDistributionsItem
    {
        internal static PredictionDistributionDefinitionDistributionsItem DeserializePredictionDistributionDefinitionDistributionsItem(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> scoreThreshold = default;
            Core.Optional<long> positives = default;
            Core.Optional<long> negatives = default;
            Core.Optional<long> positivesAboveThreshold = default;
            Core.Optional<long> negativesAboveThreshold = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("scoreThreshold"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scoreThreshold = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("positives"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    positives = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("negatives"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    negatives = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("positivesAboveThreshold"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    positivesAboveThreshold = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("negativesAboveThreshold"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    negativesAboveThreshold = property.Value.GetInt64();
                    continue;
                }
            }
            return new PredictionDistributionDefinitionDistributionsItem(Core.Optional.ToNullable(scoreThreshold), Core.Optional.ToNullable(positives), Core.Optional.ToNullable(negatives), Core.Optional.ToNullable(positivesAboveThreshold), Core.Optional.ToNullable(negativesAboveThreshold));
        }
    }
}
