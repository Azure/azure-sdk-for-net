// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CustomerInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The definition of the prediction distribution.
    /// </summary>
    public partial class PredictionDistributionDefinition
    {
        /// <summary>
        /// Initializes a new instance of the PredictionDistributionDefinition
        /// class.
        /// </summary>
        public PredictionDistributionDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PredictionDistributionDefinition
        /// class.
        /// </summary>
        /// <param name="totalPositives">Total positive in the
        /// distribution.</param>
        /// <param name="totalNegatives">Total negatives in the
        /// distribution.</param>
        /// <param name="distributions">Distributions of the
        /// prediction.</param>
        public PredictionDistributionDefinition(long? totalPositives = default(long?), long? totalNegatives = default(long?), IList<PredictionDistributionDefinitionDistributionsItem> distributions = default(IList<PredictionDistributionDefinitionDistributionsItem>))
        {
            TotalPositives = totalPositives;
            TotalNegatives = totalNegatives;
            Distributions = distributions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets total positive in the distribution.
        /// </summary>
        [JsonProperty(PropertyName = "totalPositives")]
        public long? TotalPositives { get; set; }

        /// <summary>
        /// Gets or sets total negatives in the distribution.
        /// </summary>
        [JsonProperty(PropertyName = "totalNegatives")]
        public long? TotalNegatives { get; set; }

        /// <summary>
        /// Gets or sets distributions of the prediction.
        /// </summary>
        [JsonProperty(PropertyName = "distributions")]
        public IList<PredictionDistributionDefinitionDistributionsItem> Distributions { get; set; }

    }
}
