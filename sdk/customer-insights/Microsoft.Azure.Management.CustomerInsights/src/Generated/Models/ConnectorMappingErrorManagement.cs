// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.CustomerInsights.Models
{
    using Azure;
    using Management;
    using CustomerInsights;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The error mangement.
    /// </summary>
    public partial class ConnectorMappingErrorManagement
    {
        /// <summary>
        /// Initializes a new instance of the ConnectorMappingErrorManagement
        /// class.
        /// </summary>
        public ConnectorMappingErrorManagement() { }

        /// <summary>
        /// Initializes a new instance of the ConnectorMappingErrorManagement
        /// class.
        /// </summary>
        /// <param name="errorManagementType">The type of error management to
        /// use for the mapping. Possible values include: 'RejectAndContinue',
        /// 'StopImport', 'RejectUntilLimit'</param>
        /// <param name="errorLimit">The error limit allowed while importing
        /// data.</param>
        public ConnectorMappingErrorManagement(ErrorManagementTypes errorManagementType, int? errorLimit = default(int?))
        {
            ErrorManagementType = errorManagementType;
            ErrorLimit = errorLimit;
        }

        /// <summary>
        /// Gets or sets the type of error management to use for the mapping.
        /// Possible values include: 'RejectAndContinue', 'StopImport',
        /// 'RejectUntilLimit'
        /// </summary>
        [JsonProperty(PropertyName = "errorManagementType")]
        public ErrorManagementTypes ErrorManagementType { get; set; }

        /// <summary>
        /// Gets or sets the error limit allowed while importing data.
        /// </summary>
        [JsonProperty(PropertyName = "errorLimit")]
        public int? ErrorLimit { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}

