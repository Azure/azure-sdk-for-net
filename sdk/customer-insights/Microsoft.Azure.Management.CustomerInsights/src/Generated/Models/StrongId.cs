// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.CustomerInsights.Models
{
    using Azure;
    using Management;
    using CustomerInsights;
    using Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Property/Properties which represent a unique ID.
    /// </summary>
    public partial class StrongId
    {
        /// <summary>
        /// Initializes a new instance of the StrongId class.
        /// </summary>
        public StrongId() { }

        /// <summary>
        /// Initializes a new instance of the StrongId class.
        /// </summary>
        /// <param name="keyPropertyNames">The properties which make up the
        /// unique ID.</param>
        /// <param name="strongIdName">The Name identifying the strong
        /// ID.</param>
        /// <param name="displayName">Localized display name.</param>
        /// <param name="description">Localized descriptions.</param>
        public StrongId(IList<string> keyPropertyNames, string strongIdName, IDictionary<string, string> displayName = default(IDictionary<string, string>), IDictionary<string, string> description = default(IDictionary<string, string>))
        {
            KeyPropertyNames = keyPropertyNames;
            StrongIdName = strongIdName;
            DisplayName = displayName;
            Description = description;
        }

        /// <summary>
        /// Gets or sets the properties which make up the unique ID.
        /// </summary>
        [JsonProperty(PropertyName = "keyPropertyNames")]
        public IList<string> KeyPropertyNames { get; set; }

        /// <summary>
        /// Gets or sets the Name identifying the strong ID.
        /// </summary>
        [JsonProperty(PropertyName = "strongIdName")]
        public string StrongIdName { get; set; }

        /// <summary>
        /// Gets or sets localized display name.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public IDictionary<string, string> DisplayName { get; set; }

        /// <summary>
        /// Gets or sets localized descriptions.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public IDictionary<string, string> Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyPropertyNames == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyPropertyNames");
            }
            if (StrongIdName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StrongIdName");
            }
        }
    }
}

