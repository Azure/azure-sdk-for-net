// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.CustomerInsights.Models
{
    using Azure;
    using Management;
    using CustomerInsights;
    using Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The CRM connector properties.
    /// </summary>
    public partial class CrmConnectorProperties
    {
        /// <summary>
        /// Initializes a new instance of the CrmConnectorProperties class.
        /// </summary>
        public CrmConnectorProperties() { }

        /// <summary>
        /// Initializes a new instance of the CrmConnectorProperties class.
        /// </summary>
        /// <param name="organizationId">The organization ID.</param>
        /// <param name="organizationUrl">The organization URL.</param>
        /// <param name="entities">The entities like account, contact,
        /// opportunity.</param>
        /// <param name="connectionString">The connection string.</param>
        /// <param name="accessToken">The access token.</param>
        public CrmConnectorProperties(string organizationId, string organizationUrl, IList<CrmConnectorEntities> entities, string connectionString = default(string), string accessToken = default(string))
        {
            ConnectionString = connectionString;
            OrganizationId = organizationId;
            OrganizationUrl = organizationUrl;
            Entities = entities;
            AccessToken = accessToken;
        }

        /// <summary>
        /// Gets or sets the connection string.
        /// </summary>
        [JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString { get; set; }

        /// <summary>
        /// Gets or sets the organization ID.
        /// </summary>
        [JsonProperty(PropertyName = "organizationId")]
        public string OrganizationId { get; set; }

        /// <summary>
        /// Gets or sets the organization URL.
        /// </summary>
        [JsonProperty(PropertyName = "organizationUrl")]
        public string OrganizationUrl { get; set; }

        /// <summary>
        /// Gets or sets the entities like account, contact, opportunity.
        /// </summary>
        [JsonProperty(PropertyName = "entities")]
        public IList<CrmConnectorEntities> Entities { get; set; }

        /// <summary>
        /// Gets or sets the access token.
        /// </summary>
        [JsonProperty(PropertyName = "accessToken")]
        public string AccessToken { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OrganizationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OrganizationId");
            }
            if (OrganizationUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OrganizationUrl");
            }
            if (Entities == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Entities");
            }
            if (Entities != null)
            {
                foreach (var element in Entities)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

