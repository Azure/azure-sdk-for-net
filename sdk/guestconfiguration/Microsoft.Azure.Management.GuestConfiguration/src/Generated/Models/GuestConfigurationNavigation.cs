// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.GuestConfiguration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Guest configuration is an artifact that encapsulates DSC configuration
    /// and its dependencies. The artifact is a zip file containing DSC
    /// configuration (as MOF) and dependent resources and other dependencies
    /// like modules.
    /// </summary>
    public partial class GuestConfigurationNavigation
    {
        /// <summary>
        /// Initializes a new instance of the GuestConfigurationNavigation
        /// class.
        /// </summary>
        public GuestConfigurationNavigation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GuestConfigurationNavigation
        /// class.
        /// </summary>
        /// <param name="kind">Kind of the guest configuration. For
        /// example:DSC. Possible values include: 'DSC'</param>
        /// <param name="name">Name of the guest configuration.</param>
        /// <param name="version">Version of the guest configuration.</param>
        /// <param name="contentUri">Uri of the storage where guest
        /// configuration package is uploaded.</param>
        /// <param name="contentHash">Combined hash of the guest configuration
        /// package and configuration parameters.</param>
        /// <param name="configurationParameter">The configuration parameters
        /// for the guest configuration.</param>
        /// <param name="configurationSetting">The configuration setting for
        /// the guest configuration.</param>
        public GuestConfigurationNavigation(string kind = default(string), string name = default(string), string version = default(string), string contentUri = default(string), string contentHash = default(string), IList<ConfigurationParameter> configurationParameter = default(IList<ConfigurationParameter>), ConfigurationSetting configurationSetting = default(ConfigurationSetting))
        {
            Kind = kind;
            Name = name;
            Version = version;
            ContentUri = contentUri;
            ContentHash = contentHash;
            ConfigurationParameter = configurationParameter;
            ConfigurationSetting = configurationSetting;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets kind of the guest configuration. For example:DSC.
        /// Possible values include: 'DSC'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets name of the guest configuration.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets version of the guest configuration.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets uri of the storage where guest configuration package is
        /// uploaded.
        /// </summary>
        [JsonProperty(PropertyName = "contentUri")]
        public string ContentUri { get; private set; }

        /// <summary>
        /// Gets combined hash of the guest configuration package and
        /// configuration parameters.
        /// </summary>
        [JsonProperty(PropertyName = "contentHash")]
        public string ContentHash { get; private set; }

        /// <summary>
        /// Gets or sets the configuration parameters for the guest
        /// configuration.
        /// </summary>
        [JsonProperty(PropertyName = "configurationParameter")]
        public IList<ConfigurationParameter> ConfigurationParameter { get; set; }

        /// <summary>
        /// Gets or sets the configuration setting for the guest configuration.
        /// </summary>
        [JsonProperty(PropertyName = "configurationSetting")]
        public ConfigurationSetting ConfigurationSetting { get; set; }

    }
}
