// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Redis.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Asynchronous operation status
    /// </summary>
    public partial class OperationStatus : OperationStatusResult
    {
        /// <summary>
        /// Initializes a new instance of the OperationStatus class.
        /// </summary>
        public OperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationStatus class.
        /// </summary>
        /// <param name="status">Operation status.</param>
        /// <param name="id">Fully qualified ID for the async
        /// operation.</param>
        /// <param name="name">Name of the async operation.</param>
        /// <param name="percentComplete">Percent of the operation that is
        /// complete.</param>
        /// <param name="startTime">The start time of the operation.</param>
        /// <param name="endTime">The end time of the operation.</param>
        /// <param name="operations">The operations list.</param>
        /// <param name="error">If present, details of the operation
        /// error.</param>
        /// <param name="properties">Additional properties from RP, only when
        /// operation is successful</param>
        public OperationStatus(string status, string id = default(string), string name = default(string), double? percentComplete = default(double?), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), IList<OperationStatusResult> operations = default(IList<OperationStatusResult>), ErrorDetail error = default(ErrorDetail), IDictionary<string, object> properties = default(IDictionary<string, object>))
            : base(status, id, name, percentComplete, startTime, endTime, operations, error)
        {
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets additional properties from RP, only when operation is
        /// successful
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, object> Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
