// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Redis.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters required for creating a firewall rule on redis cache. (Note,
    /// you can just use the FirewallRule type instead now.)
    /// </summary>
    public partial class RedisFirewallRuleCreateParameters : RedisFirewallRule
    {
        /// <summary>
        /// Initializes a new instance of the RedisFirewallRuleCreateParameters
        /// class.
        /// </summary>
        public RedisFirewallRuleCreateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RedisFirewallRuleCreateParameters
        /// class.
        /// </summary>
        /// <param name="startIP">lowest IP address included in the
        /// range</param>
        /// <param name="endIP">highest IP address included in the
        /// range</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        public RedisFirewallRuleCreateParameters(string startIP, string endIP, string id = default(string), string name = default(string), string type = default(string))
            : base(startIP, endIP, id, name, type)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
