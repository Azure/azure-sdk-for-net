// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Redis.Models;

namespace Azure.ResourceManager.Redis
{
    /// <summary>
    /// A class representing the RedisPatchSchedule data model.
    /// Response to put/get patch schedules for Redis cache.
    /// </summary>
    public partial class RedisPatchScheduleData : ResourceData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="RedisPatchScheduleData"/>. </summary>
        /// <param name="scheduleEntries"> List of patch schedules for a Redis cache. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scheduleEntries"/> is null. </exception>
        public RedisPatchScheduleData(IEnumerable<RedisPatchScheduleSetting> scheduleEntries)
        {
            Argument.AssertNotNull(scheduleEntries, nameof(scheduleEntries));

            ScheduleEntries = scheduleEntries.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="RedisPatchScheduleData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="scheduleEntries"> List of patch schedules for a Redis cache. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal RedisPatchScheduleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AzureLocation? location, IList<RedisPatchScheduleSetting> scheduleEntries, Dictionary<string, BinaryData> rawData) : base(id, name, resourceType, systemData)
        {
            Location = location;
            ScheduleEntries = scheduleEntries;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="RedisPatchScheduleData"/> for deserialization. </summary>
        internal RedisPatchScheduleData()
        {
        }

        /// <summary> The geo-location where the resource lives. </summary>
        public AzureLocation? Location { get; }
        /// <summary> List of patch schedules for a Redis cache. </summary>
        public IList<RedisPatchScheduleSetting> ScheduleEntries { get; }
    }
}
