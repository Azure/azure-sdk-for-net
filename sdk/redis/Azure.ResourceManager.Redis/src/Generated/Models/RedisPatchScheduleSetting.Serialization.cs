// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Redis.Models
{
    public partial class RedisPatchScheduleSetting : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("dayOfWeek"u8);
            writer.WriteStringValue(DayOfWeek.ToSerialString());
            writer.WritePropertyName("startHourUtc"u8);
            writer.WriteNumberValue(StartHourUtc);
            if (Optional.IsDefined(MaintenanceWindow))
            {
                writer.WritePropertyName("maintenanceWindow"u8);
                writer.WriteStringValue(MaintenanceWindow.Value, "P");
            }
            writer.WriteEndObject();
        }

        internal static RedisPatchScheduleSetting DeserializeRedisPatchScheduleSetting(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            RedisDayOfWeek dayOfWeek = default;
            int startHourUtc = default;
            Optional<TimeSpan> maintenanceWindow = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dayOfWeek"u8))
                {
                    dayOfWeek = property.Value.GetString().ToRedisDayOfWeek();
                    continue;
                }
                if (property.NameEquals("startHourUtc"u8))
                {
                    startHourUtc = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maintenanceWindow"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maintenanceWindow = property.Value.GetTimeSpan("P");
                    continue;
                }
            }
            return new RedisPatchScheduleSetting(dayOfWeek, startHourUtc, Optional.ToNullable(maintenanceWindow));
        }
    }
}
