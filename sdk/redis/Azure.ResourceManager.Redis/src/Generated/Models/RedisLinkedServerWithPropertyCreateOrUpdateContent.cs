// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.Redis.Models
{
    /// <summary> Parameter required for creating a linked server to redis cache. </summary>
    public partial class RedisLinkedServerWithPropertyCreateOrUpdateContent
    {
        /// <summary> Initializes a new instance of RedisLinkedServerWithPropertyCreateOrUpdateContent. </summary>
        /// <param name="linkedRedisCacheId"> Fully qualified resourceId of the linked redis cache. </param>
        /// <param name="linkedRedisCacheLocation"> Location of the linked redis cache. </param>
        /// <param name="serverRole"> Role of the linked server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedRedisCacheId"/> is null. </exception>
        public RedisLinkedServerWithPropertyCreateOrUpdateContent(ResourceIdentifier linkedRedisCacheId, AzureLocation linkedRedisCacheLocation, RedisLinkedServerRole serverRole)
        {
            if (linkedRedisCacheId == null)
            {
                throw new ArgumentNullException(nameof(linkedRedisCacheId));
            }

            LinkedRedisCacheId = linkedRedisCacheId;
            LinkedRedisCacheLocation = linkedRedisCacheLocation;
            ServerRole = serverRole;
        }

        /// <summary> Fully qualified resourceId of the linked redis cache. </summary>
        public ResourceIdentifier LinkedRedisCacheId { get; }
        /// <summary> Location of the linked redis cache. </summary>
        public AzureLocation LinkedRedisCacheLocation { get; }
        /// <summary> Role of the linked server. </summary>
        public RedisLinkedServerRole ServerRole { get; }
    }
}
