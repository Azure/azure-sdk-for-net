// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Redis.Models
{
    internal static partial class RedisDayOfWeekExtensions
    {
        public static string ToSerialString(this RedisDayOfWeek value) => value switch
        {
            RedisDayOfWeek.Monday => "Monday",
            RedisDayOfWeek.Tuesday => "Tuesday",
            RedisDayOfWeek.Wednesday => "Wednesday",
            RedisDayOfWeek.Thursday => "Thursday",
            RedisDayOfWeek.Friday => "Friday",
            RedisDayOfWeek.Saturday => "Saturday",
            RedisDayOfWeek.Sunday => "Sunday",
            RedisDayOfWeek.Everyday => "Everyday",
            RedisDayOfWeek.Weekend => "Weekend",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown RedisDayOfWeek value.")
        };

        public static RedisDayOfWeek ToRedisDayOfWeek(this string value)
        {
            if (string.Equals(value, "Monday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Monday;
            if (string.Equals(value, "Tuesday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Tuesday;
            if (string.Equals(value, "Wednesday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Wednesday;
            if (string.Equals(value, "Thursday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Thursday;
            if (string.Equals(value, "Friday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Friday;
            if (string.Equals(value, "Saturday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Saturday;
            if (string.Equals(value, "Sunday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Sunday;
            if (string.Equals(value, "Everyday", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Everyday;
            if (string.Equals(value, "Weekend", StringComparison.InvariantCultureIgnoreCase)) return RedisDayOfWeek.Weekend;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown RedisDayOfWeek value.");
        }
    }
}
