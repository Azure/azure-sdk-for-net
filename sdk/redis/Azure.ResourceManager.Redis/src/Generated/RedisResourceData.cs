// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Redis.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Redis
{
    /// <summary>
    /// A class representing the RedisResource data model.
    /// A single Redis item in List or Get Operation.
    /// </summary>
    public partial class RedisResourceData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="RedisResourceData"/>. </summary>
        /// <param name="location"> The geo-location where the resource lives. </param>
        internal RedisResourceData(AzureLocation location)
        {
            LinkedServers = new ChangeTrackingList<SubResource>();
            Instances = new ChangeTrackingList<RedisInstanceDetails>();
            PrivateEndpointConnections = new ChangeTrackingList<RedisPrivateEndpointConnectionData>();
            Zones = new ChangeTrackingList<string>();
            Tags = new ChangeTrackingDictionary<string, string>();
            Location = location;
        }

        /// <summary> Initializes a new instance of <see cref="RedisResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Redis instance provisioning status. </param>
        /// <param name="hostName"> Redis host name. </param>
        /// <param name="port"> Redis non-SSL port. </param>
        /// <param name="sslPort"> Redis SSL port. </param>
        /// <param name="accessKeys"> The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache. </param>
        /// <param name="linkedServers"> List of the linked servers associated with the cache. </param>
        /// <param name="instances"> List of the Redis instances associated with the cache. </param>
        /// <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified redis cache. </param>
        /// <param name="zones"> The availability zones. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal RedisResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ProvisioningState? provisioningState, string hostName, int? port, int? sslPort, RedisAccessKeys accessKeys, IReadOnlyList<SubResource> linkedServers, IReadOnlyList<RedisInstanceDetails> instances, IReadOnlyList<RedisPrivateEndpointConnectionData> privateEndpointConnections, IReadOnlyList<string> zones, ManagedServiceIdentity identity, IReadOnlyDictionary<string, string> tags, AzureLocation location, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            HostName = hostName;
            Port = port;
            SslPort = sslPort;
            AccessKeys = accessKeys;
            LinkedServers = linkedServers;
            Instances = instances;
            PrivateEndpointConnections = privateEndpointConnections;
            Zones = zones;
            Identity = identity;
            Tags = tags;
            Location = location;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="RedisResourceData"/> for deserialization. </summary>
        internal RedisResourceData()
        {
        }

        /// <summary> Redis instance provisioning status. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Redis host name. </summary>
        public string HostName { get; }
        /// <summary> Redis non-SSL port. </summary>
        public int? Port { get; }
        /// <summary> Redis SSL port. </summary>
        public int? SslPort { get; }
        /// <summary> The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache. </summary>
        public RedisAccessKeys AccessKeys { get; }
        /// <summary> List of the linked servers associated with the cache. </summary>
        public IReadOnlyList<SubResource> LinkedServers { get; }
        /// <summary> List of the Redis instances associated with the cache. </summary>
        public IReadOnlyList<RedisInstanceDetails> Instances { get; }
        /// <summary> List of private endpoint connection associated with the specified redis cache. </summary>
        public IReadOnlyList<RedisPrivateEndpointConnectionData> PrivateEndpointConnections { get; }
        /// <summary> The availability zones. </summary>
        public IReadOnlyList<string> Zones { get; }
        /// <summary> The managed service identities assigned to this resource. </summary>
        public ManagedServiceIdentity Identity { get; }
        /// <summary> Resource tags. </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
        /// <summary> The geo-location where the resource lives. </summary>
        public AzureLocation Location { get; }
    }
}
