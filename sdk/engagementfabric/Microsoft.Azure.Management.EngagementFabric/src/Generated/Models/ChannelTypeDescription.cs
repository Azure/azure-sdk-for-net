// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EngagementFabric.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// EngagementFabric channel description
    /// </summary>
    public partial class ChannelTypeDescription
    {
        /// <summary>
        /// Initializes a new instance of the ChannelTypeDescription class.
        /// </summary>
        public ChannelTypeDescription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ChannelTypeDescription class.
        /// </summary>
        /// <param name="channelType">Channel type</param>
        /// <param name="channelDescription">Text description for the
        /// channel</param>
        /// <param name="channelFunctions">All the available functions for the
        /// channel</param>
        public ChannelTypeDescription(string channelType = default(string), string channelDescription = default(string), IList<string> channelFunctions = default(IList<string>))
        {
            ChannelType = channelType;
            ChannelDescription = channelDescription;
            ChannelFunctions = channelFunctions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets channel type
        /// </summary>
        [JsonProperty(PropertyName = "channelType")]
        public string ChannelType { get; set; }

        /// <summary>
        /// Gets or sets text description for the channel
        /// </summary>
        [JsonProperty(PropertyName = "channelDescription")]
        public string ChannelDescription { get; set; }

        /// <summary>
        /// Gets or sets all the available functions for the channel
        /// </summary>
        [JsonProperty(PropertyName = "channelFunctions")]
        public IList<string> ChannelFunctions { get; set; }

    }
}
