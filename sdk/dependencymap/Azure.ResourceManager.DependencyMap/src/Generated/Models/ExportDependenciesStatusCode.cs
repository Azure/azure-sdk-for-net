// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DependencyMap.Models
{
    /// <summary> Status codes for export dependencies operation. </summary>
    public readonly partial struct ExportDependenciesStatusCode : IEquatable<ExportDependenciesStatusCode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ExportDependenciesStatusCode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ExportDependenciesStatusCode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoMatchValue = "NoMatch";
        private const string CompleteMatchValue = "CompleteMatch";
        private const string PartialMatchValue = "PartialMatch";

        /// <summary> Operation completed but no data was found for the requested time range. </summary>
        public static ExportDependenciesStatusCode NoMatch { get; } = new ExportDependenciesStatusCode(NoMatchValue);
        /// <summary> Operation completed with data found for the entire requested time range. </summary>
        public static ExportDependenciesStatusCode CompleteMatch { get; } = new ExportDependenciesStatusCode(CompleteMatchValue);
        /// <summary> Operation completed with data found for a portion of the requested time range. </summary>
        public static ExportDependenciesStatusCode PartialMatch { get; } = new ExportDependenciesStatusCode(PartialMatchValue);
        /// <summary> Determines if two <see cref="ExportDependenciesStatusCode"/> values are the same. </summary>
        public static bool operator ==(ExportDependenciesStatusCode left, ExportDependenciesStatusCode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ExportDependenciesStatusCode"/> values are not the same. </summary>
        public static bool operator !=(ExportDependenciesStatusCode left, ExportDependenciesStatusCode right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ExportDependenciesStatusCode"/>. </summary>
        public static implicit operator ExportDependenciesStatusCode(string value) => new ExportDependenciesStatusCode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ExportDependenciesStatusCode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ExportDependenciesStatusCode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
