// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableRegulatedEnvironmentManagementSubscriptionResource : ArmResource
    {
        private ClientDiagnostics _lzAccountLandingZoneAccountOperationsClientDiagnostics;
        private LandingZoneAccountRestOperations _lzAccountLandingZoneAccountOperationsRestClient;
        private ClientDiagnostics _lzConfigurationLandingZoneConfigurationOperationsClientDiagnostics;
        private LandingZoneConfigurationRestOperations _lzConfigurationLandingZoneConfigurationOperationsRestClient;
        private ClientDiagnostics _lzRegistrationLandingZoneRegistrationOperationsClientDiagnostics;
        private LandingZoneRegistrationRestOperations _lzRegistrationLandingZoneRegistrationOperationsRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableRegulatedEnvironmentManagementSubscriptionResource"/> class for mocking. </summary>
        protected MockableRegulatedEnvironmentManagementSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableRegulatedEnvironmentManagementSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableRegulatedEnvironmentManagementSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics LZAccountLandingZoneAccountOperationsClientDiagnostics => _lzAccountLandingZoneAccountOperationsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.RegulatedEnvironmentManagement", LZAccountResource.ResourceType.Namespace, Diagnostics);
        private LandingZoneAccountRestOperations LZAccountLandingZoneAccountOperationsRestClient => _lzAccountLandingZoneAccountOperationsRestClient ??= new LandingZoneAccountRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(LZAccountResource.ResourceType));
        private ClientDiagnostics LZConfigurationLandingZoneConfigurationOperationsClientDiagnostics => _lzConfigurationLandingZoneConfigurationOperationsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.RegulatedEnvironmentManagement", LZConfigurationResource.ResourceType.Namespace, Diagnostics);
        private LandingZoneConfigurationRestOperations LZConfigurationLandingZoneConfigurationOperationsRestClient => _lzConfigurationLandingZoneConfigurationOperationsRestClient ??= new LandingZoneConfigurationRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(LZConfigurationResource.ResourceType));
        private ClientDiagnostics LZRegistrationLandingZoneRegistrationOperationsClientDiagnostics => _lzRegistrationLandingZoneRegistrationOperationsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.RegulatedEnvironmentManagement", LZRegistrationResource.ResourceType.Namespace, Diagnostics);
        private LandingZoneRegistrationRestOperations LZRegistrationLandingZoneRegistrationOperationsRestClient => _lzRegistrationLandingZoneRegistrationOperationsRestClient ??= new LandingZoneRegistrationRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(LZRegistrationResource.ResourceType));

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// List the landing zone accounts within a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Sovereign/landingZoneAccounts</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LandingZoneAccountResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-02-27-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LZAccountResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="LZAccountResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<LZAccountResource> GetLZAccountsAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => LZAccountLandingZoneAccountOperationsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => LZAccountLandingZoneAccountOperationsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new LZAccountResource(Client, LZAccountData.DeserializeLZAccountData(e)), LZAccountLandingZoneAccountOperationsClientDiagnostics, Pipeline, "MockableRegulatedEnvironmentManagementSubscriptionResource.GetLZAccounts", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List the landing zone accounts within a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Sovereign/landingZoneAccounts</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LandingZoneAccountResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-02-27-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LZAccountResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="LZAccountResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<LZAccountResource> GetLZAccounts(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => LZAccountLandingZoneAccountOperationsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => LZAccountLandingZoneAccountOperationsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new LZAccountResource(Client, LZAccountData.DeserializeLZAccountData(e)), LZAccountLandingZoneAccountOperationsClientDiagnostics, Pipeline, "MockableRegulatedEnvironmentManagementSubscriptionResource.GetLZAccounts", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List the landing zone configurations within a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Sovereign/landingZoneAccounts/{landingZoneAccountName}/landingZoneConfigurations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LandingZoneConfigurationResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-02-27-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LZConfigurationResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="landingZoneAccountName"> The landing zone account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="landingZoneAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="landingZoneAccountName"/> is null. </exception>
        /// <returns> An async collection of <see cref="LZConfigurationResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<LZConfigurationResource> GetLZConfigurationsAsync(string landingZoneAccountName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(landingZoneAccountName, nameof(landingZoneAccountName));

            HttpMessage FirstPageRequest(int? pageSizeHint) => LZConfigurationLandingZoneConfigurationOperationsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, landingZoneAccountName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => LZConfigurationLandingZoneConfigurationOperationsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, landingZoneAccountName);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new LZConfigurationResource(Client, LZConfigurationData.DeserializeLZConfigurationData(e)), LZConfigurationLandingZoneConfigurationOperationsClientDiagnostics, Pipeline, "MockableRegulatedEnvironmentManagementSubscriptionResource.GetLZConfigurations", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List the landing zone configurations within a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Sovereign/landingZoneAccounts/{landingZoneAccountName}/landingZoneConfigurations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LandingZoneConfigurationResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-02-27-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LZConfigurationResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="landingZoneAccountName"> The landing zone account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="landingZoneAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="landingZoneAccountName"/> is null. </exception>
        /// <returns> A collection of <see cref="LZConfigurationResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<LZConfigurationResource> GetLZConfigurations(string landingZoneAccountName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(landingZoneAccountName, nameof(landingZoneAccountName));

            HttpMessage FirstPageRequest(int? pageSizeHint) => LZConfigurationLandingZoneConfigurationOperationsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, landingZoneAccountName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => LZConfigurationLandingZoneConfigurationOperationsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, landingZoneAccountName);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new LZConfigurationResource(Client, LZConfigurationData.DeserializeLZConfigurationData(e)), LZConfigurationLandingZoneConfigurationOperationsClientDiagnostics, Pipeline, "MockableRegulatedEnvironmentManagementSubscriptionResource.GetLZConfigurations", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List the landing zone registrations within a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Sovereign/landingZoneAccounts/{landingZoneAccountName}/landingZoneRegistrations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LandingZoneRegistrationResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-02-27-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LZRegistrationResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="landingZoneAccountName"> The landing zone account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="landingZoneAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="landingZoneAccountName"/> is null. </exception>
        /// <returns> An async collection of <see cref="LZRegistrationResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<LZRegistrationResource> GetLZRegistrationsAsync(string landingZoneAccountName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(landingZoneAccountName, nameof(landingZoneAccountName));

            HttpMessage FirstPageRequest(int? pageSizeHint) => LZRegistrationLandingZoneRegistrationOperationsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, landingZoneAccountName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => LZRegistrationLandingZoneRegistrationOperationsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, landingZoneAccountName);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new LZRegistrationResource(Client, LZRegistrationData.DeserializeLZRegistrationData(e)), LZRegistrationLandingZoneRegistrationOperationsClientDiagnostics, Pipeline, "MockableRegulatedEnvironmentManagementSubscriptionResource.GetLZRegistrations", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List the landing zone registrations within a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Sovereign/landingZoneAccounts/{landingZoneAccountName}/landingZoneRegistrations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LandingZoneRegistrationResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-02-27-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LZRegistrationResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="landingZoneAccountName"> The landing zone account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="landingZoneAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="landingZoneAccountName"/> is null. </exception>
        /// <returns> A collection of <see cref="LZRegistrationResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<LZRegistrationResource> GetLZRegistrations(string landingZoneAccountName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(landingZoneAccountName, nameof(landingZoneAccountName));

            HttpMessage FirstPageRequest(int? pageSizeHint) => LZRegistrationLandingZoneRegistrationOperationsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, landingZoneAccountName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => LZRegistrationLandingZoneRegistrationOperationsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, landingZoneAccountName);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new LZRegistrationResource(Client, LZRegistrationData.DeserializeLZRegistrationData(e)), LZRegistrationLandingZoneRegistrationOperationsClientDiagnostics, Pipeline, "MockableRegulatedEnvironmentManagementSubscriptionResource.GetLZRegistrations", "value", "nextLink", cancellationToken);
        }
    }
}
