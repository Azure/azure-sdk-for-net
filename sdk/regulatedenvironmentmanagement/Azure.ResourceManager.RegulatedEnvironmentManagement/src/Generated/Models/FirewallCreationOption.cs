// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Models
{
    /// <summary> Parameter used for deploying or not a Firewall resource. </summary>
    public readonly partial struct FirewallCreationOption : IEquatable<FirewallCreationOption>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="FirewallCreationOption"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public FirewallCreationOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string StandardValue = "Standard";
        private const string PremiumValue = "Premium";

        /// <summary> Select 'None' value to skip Firewall deployment. </summary>
        public static FirewallCreationOption None { get; } = new FirewallCreationOption(NoneValue);
        /// <summary> Select 'Standard' value to deploy the Firewall Standard SKU. </summary>
        public static FirewallCreationOption Standard { get; } = new FirewallCreationOption(StandardValue);
        /// <summary> Select 'Premium' value to deploy the Firewall Premium SKU. </summary>
        public static FirewallCreationOption Premium { get; } = new FirewallCreationOption(PremiumValue);
        /// <summary> Determines if two <see cref="FirewallCreationOption"/> values are the same. </summary>
        public static bool operator ==(FirewallCreationOption left, FirewallCreationOption right) => left.Equals(right);
        /// <summary> Determines if two <see cref="FirewallCreationOption"/> values are not the same. </summary>
        public static bool operator !=(FirewallCreationOption left, FirewallCreationOption right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="FirewallCreationOption"/>. </summary>
        public static implicit operator FirewallCreationOption(string value) => new FirewallCreationOption(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is FirewallCreationOption other && Equals(other);
        /// <inheritdoc />
        public bool Equals(FirewallCreationOption other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
