// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Models
{
    /// <summary> The 'Decommissioned' management group properties. </summary>
    public partial class DecommissionedManagementGroupProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DecommissionedManagementGroupProperties"/>. </summary>
        /// <param name="policyInitiativesAssignmentProperties"> Array of policy initiatives applied to the management group. </param>
        /// <param name="create"> This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="policyInitiativesAssignmentProperties"/> is null. </exception>
        public DecommissionedManagementGroupProperties(IEnumerable<PolicyInitiativeAssignmentProperties> policyInitiativesAssignmentProperties, bool create)
        {
            Argument.AssertNotNull(policyInitiativesAssignmentProperties, nameof(policyInitiativesAssignmentProperties));

            PolicyInitiativesAssignmentProperties = policyInitiativesAssignmentProperties.ToList();
            Create = create;
        }

        /// <summary> Initializes a new instance of <see cref="DecommissionedManagementGroupProperties"/>. </summary>
        /// <param name="policyInitiativesAssignmentProperties"> Array of policy initiatives applied to the management group. </param>
        /// <param name="create"> This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DecommissionedManagementGroupProperties(IList<PolicyInitiativeAssignmentProperties> policyInitiativesAssignmentProperties, bool create, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            PolicyInitiativesAssignmentProperties = policyInitiativesAssignmentProperties;
            Create = create;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DecommissionedManagementGroupProperties"/> for deserialization. </summary>
        internal DecommissionedManagementGroupProperties()
        {
        }

        /// <summary> Array of policy initiatives applied to the management group. </summary>
        public IList<PolicyInitiativeAssignmentProperties> PolicyInitiativesAssignmentProperties { get; }
        /// <summary> This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. </summary>
        public bool Create { get; set; }
    }
}
