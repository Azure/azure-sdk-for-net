// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Models
{
    /// <summary> The response payload for generating infrastructure-as-code for the landing zone. </summary>
    public partial class GenerateLandingZoneResult
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="GenerateLandingZoneResult"/>. </summary>
        /// <param name="topLevelMgDisplayName"> The parent management group name of the landing zone deployment. </param>
        /// <param name="landingZoneConfigurationName"> The name of the Landing zone configuration resource. </param>
        /// <param name="generatedCodeUri"> The url to access the generated code. </param>
        /// <param name="storageAccountName"> The storage account name to access the generated code. </param>
        /// <param name="containerName"> The storage account container to access the generated code. </param>
        /// <param name="blobName"> The storage account blob name to access the generated code. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="topLevelMgDisplayName"/>, <paramref name="landingZoneConfigurationName"/>, <paramref name="generatedCodeUri"/>, <paramref name="storageAccountName"/>, <paramref name="containerName"/> or <paramref name="blobName"/> is null. </exception>
        internal GenerateLandingZoneResult(string topLevelMgDisplayName, string landingZoneConfigurationName, Uri generatedCodeUri, string storageAccountName, string containerName, string blobName)
        {
            Argument.AssertNotNull(topLevelMgDisplayName, nameof(topLevelMgDisplayName));
            Argument.AssertNotNull(landingZoneConfigurationName, nameof(landingZoneConfigurationName));
            Argument.AssertNotNull(generatedCodeUri, nameof(generatedCodeUri));
            Argument.AssertNotNull(storageAccountName, nameof(storageAccountName));
            Argument.AssertNotNull(containerName, nameof(containerName));
            Argument.AssertNotNull(blobName, nameof(blobName));

            TopLevelMgDisplayName = topLevelMgDisplayName;
            LandingZoneConfigurationName = landingZoneConfigurationName;
            GeneratedCodeUri = generatedCodeUri;
            StorageAccountName = storageAccountName;
            ContainerName = containerName;
            BlobName = blobName;
        }

        /// <summary> Initializes a new instance of <see cref="GenerateLandingZoneResult"/>. </summary>
        /// <param name="topLevelMgDisplayName"> The parent management group name of the landing zone deployment. </param>
        /// <param name="landingZoneConfigurationName"> The name of the Landing zone configuration resource. </param>
        /// <param name="generatedCodeUri"> The url to access the generated code. </param>
        /// <param name="storageAccountName"> The storage account name to access the generated code. </param>
        /// <param name="containerName"> The storage account container to access the generated code. </param>
        /// <param name="blobName"> The storage account blob name to access the generated code. </param>
        /// <param name="generatedArmTemplate"> The generated code content in JSON string format. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal GenerateLandingZoneResult(string topLevelMgDisplayName, string landingZoneConfigurationName, Uri generatedCodeUri, string storageAccountName, string containerName, string blobName, string generatedArmTemplate, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TopLevelMgDisplayName = topLevelMgDisplayName;
            LandingZoneConfigurationName = landingZoneConfigurationName;
            GeneratedCodeUri = generatedCodeUri;
            StorageAccountName = storageAccountName;
            ContainerName = containerName;
            BlobName = blobName;
            GeneratedArmTemplate = generatedArmTemplate;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="GenerateLandingZoneResult"/> for deserialization. </summary>
        internal GenerateLandingZoneResult()
        {
        }

        /// <summary> The parent management group name of the landing zone deployment. </summary>
        public string TopLevelMgDisplayName { get; }
        /// <summary> The name of the Landing zone configuration resource. </summary>
        public string LandingZoneConfigurationName { get; }
        /// <summary> The url to access the generated code. </summary>
        public Uri GeneratedCodeUri { get; }
        /// <summary> The storage account name to access the generated code. </summary>
        public string StorageAccountName { get; }
        /// <summary> The storage account container to access the generated code. </summary>
        public string ContainerName { get; }
        /// <summary> The storage account blob name to access the generated code. </summary>
        public string BlobName { get; }
        /// <summary> The generated code content in JSON string format. </summary>
        public string GeneratedArmTemplate { get; }
    }
}
