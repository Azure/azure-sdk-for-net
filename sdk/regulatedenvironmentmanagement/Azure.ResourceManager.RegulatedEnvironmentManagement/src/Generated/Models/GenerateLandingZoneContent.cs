// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Models
{
    /// <summary> The request to generate Infrastructure as Code (IaC) for a landing zone. </summary>
    public partial class GenerateLandingZoneContent
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="GenerateLandingZoneContent"/>. </summary>
        /// <param name="infrastructureAsCodeOutputOptions"> The export options available for code generation. </param>
        /// <param name="deploymentPrefix"> The prefix that will be added to all resources created by this deployment. Use between 2 and 5 characters, consisting only of letters, digits, '-', '.', or '_'. No other special characters are supported. </param>
        /// <param name="topLevelMgDisplayName"> The display name assigned to the top management group of the landing zone deployment hierarchy. It is recommended to use unique names for each landing zone deployment. </param>
        /// <param name="deploymentLocation"> The Azure region where the landing zone will be deployed. All Azure regions are supported. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="deploymentPrefix"/>, <paramref name="topLevelMgDisplayName"/> or <paramref name="deploymentLocation"/> is null. </exception>
        public GenerateLandingZoneContent(InfrastructureAsCodeOutputOption infrastructureAsCodeOutputOptions, string deploymentPrefix, string topLevelMgDisplayName, string deploymentLocation)
        {
            Argument.AssertNotNull(deploymentPrefix, nameof(deploymentPrefix));
            Argument.AssertNotNull(topLevelMgDisplayName, nameof(topLevelMgDisplayName));
            Argument.AssertNotNull(deploymentLocation, nameof(deploymentLocation));

            InfrastructureAsCodeOutputOptions = infrastructureAsCodeOutputOptions;
            DeploymentPrefix = deploymentPrefix;
            TopLevelMgDisplayName = topLevelMgDisplayName;
            DeploymentLocation = deploymentLocation;
        }

        /// <summary> Initializes a new instance of <see cref="GenerateLandingZoneContent"/>. </summary>
        /// <param name="infrastructureAsCodeOutputOptions"> The export options available for code generation. </param>
        /// <param name="existingManagementSubscriptionId"> Existing 'Management' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. </param>
        /// <param name="existingIdentitySubscriptionId"> Existing 'Identity' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. </param>
        /// <param name="existingConnectivitySubscriptionId"> Existing 'Connectivity' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. </param>
        /// <param name="subscriptionBillingScope"> The complete resource ID of the billing scope linked to the EA, MCA, or MPA account where you want to create the subscription. </param>
        /// <param name="existingTopLevelMgParentId"> Optional parent for the management group hierarchy, serving as an intermediate root management group parent if specified. If left empty, the default will be to deploy under the tenant root management group. </param>
        /// <param name="deploymentPrefix"> The prefix that will be added to all resources created by this deployment. Use between 2 and 5 characters, consisting only of letters, digits, '-', '.', or '_'. No other special characters are supported. </param>
        /// <param name="deploymentSuffix"> The optional suffix that will be appended to all resources created by this deployment, maximum 5 characters. </param>
        /// <param name="topLevelMgDisplayName"> The display name assigned to the top management group of the landing zone deployment hierarchy. It is recommended to use unique names for each landing zone deployment. </param>
        /// <param name="deploymentLocation"> The Azure region where the landing zone will be deployed. All Azure regions are supported. </param>
        /// <param name="organization"> The name of the organization or agency for which the landing zone is being deployed. This is optional. </param>
        /// <param name="environment"> The environment where the landing zone is being deployed, such as ppe, prod, test, etc. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal GenerateLandingZoneContent(InfrastructureAsCodeOutputOption infrastructureAsCodeOutputOptions, ResourceIdentifier existingManagementSubscriptionId, ResourceIdentifier existingIdentitySubscriptionId, ResourceIdentifier existingConnectivitySubscriptionId, string subscriptionBillingScope, ResourceIdentifier existingTopLevelMgParentId, string deploymentPrefix, string deploymentSuffix, string topLevelMgDisplayName, string deploymentLocation, string organization, string environment, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            InfrastructureAsCodeOutputOptions = infrastructureAsCodeOutputOptions;
            ExistingManagementSubscriptionId = existingManagementSubscriptionId;
            ExistingIdentitySubscriptionId = existingIdentitySubscriptionId;
            ExistingConnectivitySubscriptionId = existingConnectivitySubscriptionId;
            SubscriptionBillingScope = subscriptionBillingScope;
            ExistingTopLevelMgParentId = existingTopLevelMgParentId;
            DeploymentPrefix = deploymentPrefix;
            DeploymentSuffix = deploymentSuffix;
            TopLevelMgDisplayName = topLevelMgDisplayName;
            DeploymentLocation = deploymentLocation;
            Organization = organization;
            Environment = environment;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="GenerateLandingZoneContent"/> for deserialization. </summary>
        internal GenerateLandingZoneContent()
        {
        }

        /// <summary> The export options available for code generation. </summary>
        public InfrastructureAsCodeOutputOption InfrastructureAsCodeOutputOptions { get; }
        /// <summary> Existing 'Management' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. </summary>
        public ResourceIdentifier ExistingManagementSubscriptionId { get; set; }
        /// <summary> Existing 'Identity' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. </summary>
        public ResourceIdentifier ExistingIdentitySubscriptionId { get; set; }
        /// <summary> Existing 'Connectivity' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. </summary>
        public ResourceIdentifier ExistingConnectivitySubscriptionId { get; set; }
        /// <summary> The complete resource ID of the billing scope linked to the EA, MCA, or MPA account where you want to create the subscription. </summary>
        public string SubscriptionBillingScope { get; set; }
        /// <summary> Optional parent for the management group hierarchy, serving as an intermediate root management group parent if specified. If left empty, the default will be to deploy under the tenant root management group. </summary>
        public ResourceIdentifier ExistingTopLevelMgParentId { get; set; }
        /// <summary> The prefix that will be added to all resources created by this deployment. Use between 2 and 5 characters, consisting only of letters, digits, '-', '.', or '_'. No other special characters are supported. </summary>
        public string DeploymentPrefix { get; }
        /// <summary> The optional suffix that will be appended to all resources created by this deployment, maximum 5 characters. </summary>
        public string DeploymentSuffix { get; set; }
        /// <summary> The display name assigned to the top management group of the landing zone deployment hierarchy. It is recommended to use unique names for each landing zone deployment. </summary>
        public string TopLevelMgDisplayName { get; }
        /// <summary> The Azure region where the landing zone will be deployed. All Azure regions are supported. </summary>
        public string DeploymentLocation { get; }
        /// <summary> The name of the organization or agency for which the landing zone is being deployed. This is optional. </summary>
        public string Organization { get; set; }
        /// <summary> The environment where the landing zone is being deployed, such as ppe, prod, test, etc. </summary>
        public string Environment { get; set; }
    }
}
