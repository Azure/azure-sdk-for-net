// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.RegulatedEnvironmentManagement.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Samples
{
    public partial class Sample_LZConfigurationResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_LandingZoneConfigurationOperationsGet()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneConfigurationOperations_Get.json
            // this example is just showing the usage of "LandingZoneConfigurationResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZConfigurationResource created on azure
            // for more information of creating LZConfigurationResource, please refer to the document of LZConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "rgsovereign";
            string landingZoneAccountName = "SampleLZA";
            string landingZoneConfigurationName = "SampleLZC";
            ResourceIdentifier lzConfigurationResourceId = LZConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName, landingZoneConfigurationName);
            LZConfigurationResource lzConfiguration = client.GetLZConfigurationResource(lzConfigurationResourceId);

            // invoke the operation
            LZConfigurationResource result = await lzConfiguration.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LZConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_LandingZoneConfigurationOperationsDelete()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneConfigurationOperations_Delete.json
            // this example is just showing the usage of "LandingZoneConfigurationResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZConfigurationResource created on azure
            // for more information of creating LZConfigurationResource, please refer to the document of LZConfigurationResource
            string subscriptionId = "9B52DE5E-FE73-4C8B-8968-1E8F0097DDB8";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "SampleLZA";
            string landingZoneConfigurationName = "ExampleLZC";
            ResourceIdentifier lzConfigurationResourceId = LZConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName, landingZoneConfigurationName);
            LZConfigurationResource lzConfiguration = client.GetLZConfigurationResource(lzConfigurationResourceId);

            // invoke the operation
            await lzConfiguration.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_LandingZoneConfigurationOperationsUpdate()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneConfigurationOperations_Update.json
            // this example is just showing the usage of "LandingZoneConfigurationResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZConfigurationResource created on azure
            // for more information of creating LZConfigurationResource, please refer to the document of LZConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            string landingZoneConfigurationName = "ExampleLZC";
            ResourceIdentifier lzConfigurationResourceId = LZConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName, landingZoneConfigurationName);
            LZConfigurationResource lzConfiguration = client.GetLZConfigurationResource(lzConfigurationResourceId);

            // invoke the operation
            LZConfigurationData data = new LZConfigurationData
            {
                Properties = new LZConfigurationProperties(
                ResourceCreationOption.Yes,
                ResourceCreationOption.No,
                FirewallCreationOption.Standard,
                "10.20.255.0/24",
                540L,
                "10.20.255.0/24",
                ResourceCreationOption.Yes,
                new ManagedIdentityProperties(ManagedIdentityResourceType.SystemAssigned))
                {
                    Tags = {new Tags("tag1")
{
Value = "do",
}, new Tags("tag2")
{
Value = "do",
}},
                    FirewallSubnetCidrBlock = "10.20.255.0/24",
                    AzureBastionSubnetCidrBlock = "10.20.255.0/24",
                    LandingZonesMgChildren = { new LZManagementGroupProperties(Array.Empty<PolicyInitiativeAssignmentProperties>(), "Corp") },
                    TopLevelMgMetadataPolicyInitiativesAssignmentProperties = {new PolicyInitiativeAssignmentProperties("/providers/Microsoft.Authorization/policySetDefinitions/0a2ebd47-3fb9-4735-a006-b7f31ddadd9f", new Dictionary<string, BinaryData>
{
["Effect"] = BinaryData.FromObjectAsJson("Audit")
})},
                    LandingZonesMgMetadataPolicyInitiativesAssignmentProperties = { },
                    PlatformMgMetadataPolicyInitiativesAssignmentProperties = { },
                    PlatformManagementMgMetadataPolicyInitiativesAssignmentProperties = { },
                    PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperties = { },
                    PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperties = { },
                    DecommissionedMgMetadata = new DecommissionedManagementGroupProperties(Array.Empty<PolicyInitiativeAssignmentProperties>(), false),
                    SandboxMgMetadata = new SandboxManagementGroupProperties(Array.Empty<PolicyInitiativeAssignmentProperties>(), true),
                    PlatformMgChildren = { new PlatformManagementGroupProperties(Array.Empty<PolicyInitiativeAssignmentProperties>(), "childmg1"), new PlatformManagementGroupProperties(Array.Empty<PolicyInitiativeAssignmentProperties>(), "childmg2") },
                    NamingConventionFormula = "{ResourceTypeAbbreviation}",
                    CustomNamingConvention = { new CustomNamingConvention(Models.ResourceType.AzureFirewalls, "{DeploymentSuffix}") },
                },
            };
            ArmOperation<LZConfigurationResource> lro = await lzConfiguration.UpdateAsync(WaitUntil.Completed, data);
            LZConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LZConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GenerateLandingZone_LandingZoneConfigurationOperationsGenerateLandingZone()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneConfigurationOperations_GenerateLandingZone.json
            // this example is just showing the usage of "LandingZoneConfigurationOperations_GenerateLandingZone" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZConfigurationResource created on azure
            // for more information of creating LZConfigurationResource, please refer to the document of LZConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "SampleLZA";
            string landingZoneConfigurationName = "ExampleLZC";
            ResourceIdentifier lzConfigurationResourceId = LZConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName, landingZoneConfigurationName);
            LZConfigurationResource lzConfiguration = client.GetLZConfigurationResource(lzConfigurationResourceId);

            // invoke the operation
            GenerateLandingZoneContent content = new GenerateLandingZoneContent(InfrastructureAsCodeOutputOption.Bicep, "mcfs", "TestMG", "eastus")
            {
                ExistingManagementSubscriptionId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000001"),
                ExistingIdentitySubscriptionId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000002"),
                ExistingConnectivitySubscriptionId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000003"),
                DeploymentSuffix = "test",
                Organization = "test",
                Environment = "QA",
            };
            ArmOperation<GenerateLandingZoneResult> lro = await lzConfiguration.GenerateLandingZoneAsync(WaitUntil.Completed, content);
            GenerateLandingZoneResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task UpdateAuthoringStatus_LandingZoneConfigurationOperationsUpdateAuthoringStatus()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneConfigurationOperations_UpdateAuthoringStatus.json
            // this example is just showing the usage of "LandingZoneConfigurationOperations_UpdateAuthoringStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZConfigurationResource created on azure
            // for more information of creating LZConfigurationResource, please refer to the document of LZConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            string landingZoneConfigurationName = "ExampleLZC";
            ResourceIdentifier lzConfigurationResourceId = LZConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName, landingZoneConfigurationName);
            LZConfigurationResource lzConfiguration = client.GetLZConfigurationResource(lzConfigurationResourceId);

            // invoke the operation
            UpdateAuthoringStatusContent content = new UpdateAuthoringStatusContent(AuthoringStatus.Authoring);
            ArmOperation<UpdateAuthoringStatusResult> lro = await lzConfiguration.UpdateAuthoringStatusAsync(WaitUntil.Completed, content);
            UpdateAuthoringStatusResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateCopy_LandingZoneConfigurationOperationsCreateCopy()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneConfigurationOperations_CreateCopy.json
            // this example is just showing the usage of "LandingZoneConfigurationOperations_CreateCopy" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZConfigurationResource created on azure
            // for more information of creating LZConfigurationResource, please refer to the document of LZConfigurationResource
            string subscriptionId = "9B52DE5E-FE73-4C8B-8968-1E8F0097DDB8";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "SampleLZA";
            string landingZoneConfigurationName = "ExampleLZC";
            ResourceIdentifier lzConfigurationResourceId = LZConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName, landingZoneConfigurationName);
            LZConfigurationResource lzConfiguration = client.GetLZConfigurationResource(lzConfigurationResourceId);

            // invoke the operation
            CreateLZConfigurationCopyContent content = new CreateLZConfigurationCopyContent("LandingZoneConfiguration");
            ArmOperation<CreateLZConfigurationCopyResult> lro = await lzConfiguration.CreateCopyAsync(WaitUntil.Completed, content);
            CreateLZConfigurationCopyResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
