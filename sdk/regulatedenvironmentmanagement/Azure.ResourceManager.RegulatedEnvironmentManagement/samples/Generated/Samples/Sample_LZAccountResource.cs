// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.RegulatedEnvironmentManagement.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Samples
{
    public partial class Sample_LZAccountResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_LandingZoneAccountOperationsGet()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneAccountOperations_Get.json
            // this example is just showing the usage of "LandingZoneAccountResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "SampleResourceGroup";
            string landingZoneAccountName = "SampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // invoke the operation
            LZAccountResource result = await lzAccount.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LZAccountData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_LandingZoneAccountOperationsDelete()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneAccountOperations_Delete.json
            // this example is just showing the usage of "LandingZoneAccountResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "SampleResourceGroup";
            string landingZoneAccountName = "SampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // invoke the operation
            await lzAccount.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_LandingZoneAccountOperationsUpdate()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneAccountOperations_Update.json
            // this example is just showing the usage of "LandingZoneAccountResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // invoke the operation
            LZAccountData data = new LZAccountData(default)
            {
                Properties = new LZAccountProperties(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/TestStorageAccount/providers/Microsoft.Storage/storageAccounts/teststcontainer")),
                Identity = new ManagedServiceIdentity("SystemAssigned"),
            };
            ArmOperation<LZAccountResource> lro = await lzAccount.UpdateAsync(WaitUntil.Completed, data);
            LZAccountResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LZAccountData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
