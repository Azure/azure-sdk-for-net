// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.RegulatedEnvironmentManagement.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.RegulatedEnvironmentManagement.Samples
{
    public partial class Sample_LZRegistrationCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_LandingZoneRegistrationOperationsCreate()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneRegistrationOperations_Create.json
            // this example is just showing the usage of "LandingZoneRegistrationResource_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // get the collection of this LZRegistrationResource
            LZRegistrationCollection collection = lzAccount.GetLZRegistrations();

            // invoke the operation
            string landingZoneRegistrationName = "ExampleLZR";
            LZRegistrationData data = new LZRegistrationData
            {
                Properties = new LZRegistrationProperties(new ResourceIdentifier("/providers/Microsoft.Management/managementGroups/mg-example"), new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/rg-examplegroup/providers/Microsoft.Sovereign/landingZoneAccounts/ExampleLZA/landingZoneConfigurations/ExampleLZC"))
                {
                    ManagedIdentity = new ManagedIdentityProperties(ManagedIdentityResourceType.UserAssigned)
                    {
                        UserAssignedIdentityResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/rg-examplegroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-example"),
                    },
                },
            };
            ArmOperation<LZRegistrationResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, landingZoneRegistrationName, data);
            LZRegistrationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LZRegistrationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_LandingZoneRegistrationOperationsGet()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneRegistrationOperations_Get.json
            // this example is just showing the usage of "LandingZoneRegistrationResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // get the collection of this LZRegistrationResource
            LZRegistrationCollection collection = lzAccount.GetLZRegistrations();

            // invoke the operation
            string landingZoneRegistrationName = "ExampleLZR";
            LZRegistrationResource result = await collection.GetAsync(landingZoneRegistrationName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LZRegistrationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_LandingZoneRegistrationOperationsListByResourceGroup()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneRegistrationOperations_ListByResourceGroup.json
            // this example is just showing the usage of "LandingZoneRegistrationResource_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // get the collection of this LZRegistrationResource
            LZRegistrationCollection collection = lzAccount.GetLZRegistrations();

            // invoke the operation and iterate over the result
            await foreach (LZRegistrationResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                LZRegistrationData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_LandingZoneRegistrationOperationsGet()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneRegistrationOperations_Get.json
            // this example is just showing the usage of "LandingZoneRegistrationResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // get the collection of this LZRegistrationResource
            LZRegistrationCollection collection = lzAccount.GetLZRegistrations();

            // invoke the operation
            string landingZoneRegistrationName = "ExampleLZR";
            bool result = await collection.ExistsAsync(landingZoneRegistrationName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_LandingZoneRegistrationOperationsGet()
        {
            // Generated from example definition: 2025-02-27-preview/LandingZoneRegistrationOperations_Get.json
            // this example is just showing the usage of "LandingZoneRegistrationResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LZAccountResource created on azure
            // for more information of creating LZAccountResource, please refer to the document of LZAccountResource
            string subscriptionId = "00000000-0000-0000-0000-000000000001";
            string resourceGroupName = "ExampleResourceGroup";
            string landingZoneAccountName = "ExampleLZA";
            ResourceIdentifier lzAccountResourceId = LZAccountResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, landingZoneAccountName);
            LZAccountResource lzAccount = client.GetLZAccountResource(lzAccountResourceId);

            // get the collection of this LZRegistrationResource
            LZRegistrationCollection collection = lzAccount.GetLZRegistrations();

            // invoke the operation
            string landingZoneRegistrationName = "ExampleLZR";
            NullableResponse<LZRegistrationResource> response = await collection.GetIfExistsAsync(landingZoneRegistrationName);
            LZRegistrationResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                LZRegistrationData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
