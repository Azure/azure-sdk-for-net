// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApplicationInsights.Management.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Static definitions of the ProactiveDetection configuration rule (same
    /// values for all components).
    /// </summary>
    public partial class ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions
        /// class.
        /// </summary>
        public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions
        /// class.
        /// </summary>
        /// <param name="name">The rule name</param>
        /// <param name="displayName">The rule name as it is displayed in
        /// UI</param>
        /// <param name="description">The rule description</param>
        /// <param name="helpUrl">URL which displays additional info about the
        /// proactive detection rule</param>
        /// <param name="isHidden">A flag indicating whether the rule is hidden
        /// (from the UI)</param>
        /// <param name="isEnabledByDefault">A flag indicating whether the rule
        /// is enabled by default</param>
        /// <param name="isInPreview">A flag indicating whether the rule is in
        /// preview</param>
        /// <param name="supportsEmailNotifications">A flag indicating whether
        /// email notifications are supported for detections for this
        /// rule</param>
        public ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions(string name = default(string), string displayName = default(string), string description = default(string), string helpUrl = default(string), bool? isHidden = default(bool?), bool? isEnabledByDefault = default(bool?), bool? isInPreview = default(bool?), bool? supportsEmailNotifications = default(bool?))
        {
            Name = name;
            DisplayName = displayName;
            Description = description;
            HelpUrl = helpUrl;
            IsHidden = isHidden;
            IsEnabledByDefault = isEnabledByDefault;
            IsInPreview = isInPreview;
            SupportsEmailNotifications = supportsEmailNotifications;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the rule name
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the rule name as it is displayed in UI
        /// </summary>
        [JsonProperty(PropertyName = "DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the rule description
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets URL which displays additional info about the proactive
        /// detection rule
        /// </summary>
        [JsonProperty(PropertyName = "HelpUrl")]
        public string HelpUrl { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating whether the rule is hidden (from the
        /// UI)
        /// </summary>
        [JsonProperty(PropertyName = "IsHidden")]
        public bool? IsHidden { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating whether the rule is enabled by
        /// default
        /// </summary>
        [JsonProperty(PropertyName = "IsEnabledByDefault")]
        public bool? IsEnabledByDefault { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating whether the rule is in preview
        /// </summary>
        [JsonProperty(PropertyName = "IsInPreview")]
        public bool? IsInPreview { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating whether email notifications are
        /// supported for detections for this rule
        /// </summary>
        [JsonProperty(PropertyName = "SupportsEmailNotifications")]
        public bool? SupportsEmailNotifications { get; set; }

    }
}
