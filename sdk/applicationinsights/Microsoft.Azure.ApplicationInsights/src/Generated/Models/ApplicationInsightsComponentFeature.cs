// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApplicationInsights.Management.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Application Insights component daily data volume cap status
    /// </summary>
    public partial class ApplicationInsightsComponentFeature
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationInsightsComponentFeature class.
        /// </summary>
        public ApplicationInsightsComponentFeature()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationInsightsComponentFeature class.
        /// </summary>
        /// <param name="featureName">The pricing feature name.</param>
        /// <param name="meterId">The meter id used for the feature.</param>
        /// <param name="meterRateFrequency">The meter rate for the feature's
        /// meter.</param>
        /// <param name="resouceId">Reserved, not used now.</param>
        /// <param name="isHidden">Reserved, not used now.</param>
        /// <param name="capabilities">A list of Application Insights component
        /// feature capability.</param>
        /// <param name="title">Display name of the feature.</param>
        /// <param name="isMainFeature">Whether can apply addon feature on to
        /// it.</param>
        /// <param name="supportedAddonFeatures">The add on features on main
        /// feature.</param>
        public ApplicationInsightsComponentFeature(string featureName = default(string), string meterId = default(string), string meterRateFrequency = default(string), string resouceId = default(string), bool? isHidden = default(bool?), IList<ApplicationInsightsComponentFeatureCapability> capabilities = default(IList<ApplicationInsightsComponentFeatureCapability>), string title = default(string), bool? isMainFeature = default(bool?), string supportedAddonFeatures = default(string))
        {
            FeatureName = featureName;
            MeterId = meterId;
            MeterRateFrequency = meterRateFrequency;
            ResouceId = resouceId;
            IsHidden = isHidden;
            Capabilities = capabilities;
            Title = title;
            IsMainFeature = isMainFeature;
            SupportedAddonFeatures = supportedAddonFeatures;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the pricing feature name.
        /// </summary>
        [JsonProperty(PropertyName = "FeatureName")]
        public string FeatureName { get; private set; }

        /// <summary>
        /// Gets the meter id used for the feature.
        /// </summary>
        [JsonProperty(PropertyName = "MeterId")]
        public string MeterId { get; private set; }

        /// <summary>
        /// Gets the meter rate for the feature's meter.
        /// </summary>
        [JsonProperty(PropertyName = "MeterRateFrequency")]
        public string MeterRateFrequency { get; private set; }

        /// <summary>
        /// Gets reserved, not used now.
        /// </summary>
        [JsonProperty(PropertyName = "ResouceId")]
        public string ResouceId { get; private set; }

        /// <summary>
        /// Gets reserved, not used now.
        /// </summary>
        [JsonProperty(PropertyName = "IsHidden")]
        public bool? IsHidden { get; private set; }

        /// <summary>
        /// Gets a list of Application Insights component feature capability.
        /// </summary>
        [JsonProperty(PropertyName = "Capabilities")]
        public IList<ApplicationInsightsComponentFeatureCapability> Capabilities { get; private set; }

        /// <summary>
        /// Gets display name of the feature.
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; private set; }

        /// <summary>
        /// Gets whether can apply addon feature on to it.
        /// </summary>
        [JsonProperty(PropertyName = "IsMainFeature")]
        public bool? IsMainFeature { get; private set; }

        /// <summary>
        /// Gets the add on features on main feature.
        /// </summary>
        [JsonProperty(PropertyName = "SupportedAddonFeatures")]
        public string SupportedAddonFeatures { get; private set; }

    }
}
