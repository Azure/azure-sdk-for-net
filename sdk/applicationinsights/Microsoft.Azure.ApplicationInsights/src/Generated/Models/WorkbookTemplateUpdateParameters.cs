// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApplicationInsights.Management.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The parameters that can be provided when updating workbook template.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkbookTemplateUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the WorkbookTemplateUpdateParameters
        /// class.
        /// </summary>
        public WorkbookTemplateUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkbookTemplateUpdateParameters
        /// class.
        /// </summary>
        /// <param name="templateData">Valid JSON object containing workbook
        /// template payload.</param>
        /// <param name="galleries">Workbook galleries supported by the
        /// template.</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="priority">Priority of the template. Determines which
        /// template to open when a workbook gallery is opened in viewer
        /// mode.</param>
        /// <param name="author">Information about the author of the workbook
        /// template.</param>
        /// <param name="localized">Key value pair of localized gallery. Each
        /// key is the locale code of languages supported by the Azure
        /// portal.</param>
        public WorkbookTemplateUpdateParameters(object templateData, IList<WorkbookTemplateGallery> galleries, IDictionary<string, string> tags = default(IDictionary<string, string>), int? priority = default(int?), string author = default(string), IDictionary<string, IList<WorkbookTemplateLocalizedGallery>> localized = default(IDictionary<string, IList<WorkbookTemplateLocalizedGallery>>))
        {
            Tags = tags;
            Priority = priority;
            Author = author;
            TemplateData = templateData;
            Galleries = galleries;
            Localized = localized;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets priority of the template. Determines which template to
        /// open when a workbook gallery is opened in viewer mode.
        /// </summary>
        [JsonProperty(PropertyName = "properties.priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// Gets or sets information about the author of the workbook template.
        /// </summary>
        [JsonProperty(PropertyName = "properties.author")]
        public string Author { get; set; }

        /// <summary>
        /// Gets or sets valid JSON object containing workbook template
        /// payload.
        /// </summary>
        [JsonProperty(PropertyName = "properties.templateData")]
        public object TemplateData { get; set; }

        /// <summary>
        /// Gets or sets workbook galleries supported by the template.
        /// </summary>
        [JsonProperty(PropertyName = "properties.galleries")]
        public IList<WorkbookTemplateGallery> Galleries { get; set; }

        /// <summary>
        /// Gets or sets key value pair of localized gallery. Each key is the
        /// locale code of languages supported by the Azure portal.
        /// </summary>
        [JsonProperty(PropertyName = "properties.localized")]
        public IDictionary<string, IList<WorkbookTemplateLocalizedGallery>> Localized { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TemplateData == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TemplateData");
            }
            if (Galleries == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Galleries");
            }
        }
    }
}
