// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ApplicationInsights.Query.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The dependency info
    /// </summary>
    public partial class EventsDependencyInfo
    {
        /// <summary>
        /// Initializes a new instance of the EventsDependencyInfo class.
        /// </summary>
        public EventsDependencyInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventsDependencyInfo class.
        /// </summary>
        /// <param name="target">The target of the dependency</param>
        /// <param name="data">The data of the dependency</param>
        /// <param name="success">Indicates if the dependency was
        /// successful</param>
        /// <param name="duration">The duration of the dependency</param>
        /// <param name="performanceBucket">The performance bucket of the
        /// dependency</param>
        /// <param name="resultCode">The result code of the dependency</param>
        /// <param name="type">The type of the dependency</param>
        /// <param name="name">The name of the dependency</param>
        /// <param name="id">The ID of the dependency</param>
        public EventsDependencyInfo(string target = default(string), string data = default(string), string success = default(string), long? duration = default(long?), string performanceBucket = default(string), string resultCode = default(string), string type = default(string), string name = default(string), string id = default(string))
        {
            Target = target;
            Data = data;
            Success = success;
            Duration = duration;
            PerformanceBucket = performanceBucket;
            ResultCode = resultCode;
            Type = type;
            Name = name;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the target of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

        /// <summary>
        /// Gets or sets the data of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public string Data { get; set; }

        /// <summary>
        /// Gets or sets indicates if the dependency was successful
        /// </summary>
        [JsonProperty(PropertyName = "success")]
        public string Success { get; set; }

        /// <summary>
        /// Gets or sets the duration of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "duration")]
        public long? Duration { get; set; }

        /// <summary>
        /// Gets or sets the performance bucket of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "performanceBucket")]
        public string PerformanceBucket { get; set; }

        /// <summary>
        /// Gets or sets the result code of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "resultCode")]
        public string ResultCode { get; set; }

        /// <summary>
        /// Gets or sets the type of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the name of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the ID of the dependency
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

    }
}
