// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Threading;
using System.Threading.Tasks;
using Azure.ResourceManager.ApplicationInsights.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ApplicationInsights
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ApplicationInsights. </summary>
    public static partial class ApplicationInsightsExtensions
    {
        /// <summary> Gets a collection of ComponentLinkedStorageAccountResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of ComponentLinkedStorageAccountResources and their operations over a ComponentLinkedStorageAccountResource. </returns>
        [Obsolete("This method is obsolete and will be removed in a future release", false)]
        [EditorBrowsable(EditorBrowsableState.Never)]
        public static ComponentLinkedStorageAccountCollection GetComponentLinkedStorageAccounts(this ResourceGroupResource resourceGroupResource)
        {
            const string FAKE_RESOURCE_NAME_FOR_BACKWARD_COMPATIBILITY = "fakeApplicationInsightComponentResourceName";
            var id = ApplicationInsightsComponentResource.CreateResourceIdentifier(resourceGroupResource.Id.SubscriptionId, resourceGroupResource.Id.ResourceGroupName, FAKE_RESOURCE_NAME_FOR_BACKWARD_COMPATIBILITY);
            return new ComponentLinkedStorageAccountCollection(resourceGroupResource.GetApplicationInsightsComponents().ArmClient, id);
        }

        /// <summary>
        /// Returns the current linked storage settings for an Application Insights component.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComponentLinkedStorageAccounts_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="resourceName"> The name of the Application Insights component resource. </param>
        /// <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="resourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceName"/> is null. </exception>
        [Obsolete("This method is obsolete and will be removed in a future release", false)]
        [EditorBrowsable(EditorBrowsableState.Never)]
        public static async Task<Response<ComponentLinkedStorageAccountResource>> GetComponentLinkedStorageAccountAsync(this ResourceGroupResource resourceGroupResource, string resourceName, StorageType storageType, CancellationToken cancellationToken = default)
        {
            var component = await resourceGroupResource.GetApplicationInsightsComponentAsync(resourceName, cancellationToken).ConfigureAwait(false);
            return await component.Value.GetComponentLinkedStorageAccountAsync(storageType, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Returns the current linked storage settings for an Application Insights component.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComponentLinkedStorageAccounts_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="resourceName"> The name of the Application Insights component resource. </param>
        /// <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="resourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceName"/> is null. </exception>
        [Obsolete("This method is obsolete and will be removed in a future release", false)]
        [EditorBrowsable(EditorBrowsableState.Never)]
        public static Response<ComponentLinkedStorageAccountResource> GetComponentLinkedStorageAccount(this ResourceGroupResource resourceGroupResource, string resourceName, StorageType storageType, CancellationToken cancellationToken = default)
        {
            return GetComponentLinkedStorageAccountAsync(resourceGroupResource, resourceName, storageType, cancellationToken).Result;
        }


    }
}
