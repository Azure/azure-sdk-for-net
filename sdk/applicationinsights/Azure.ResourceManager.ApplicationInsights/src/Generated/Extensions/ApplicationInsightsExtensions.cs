// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.ApplicationInsights.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ApplicationInsights
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ApplicationInsights. </summary>
    public static partial class ApplicationInsightsExtensions
    {
        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of ComponentLinkedStorageAccountResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of ComponentLinkedStorageAccountResources and their operations over a ComponentLinkedStorageAccountResource. </returns>
        public static ComponentLinkedStorageAccountCollection GetComponentLinkedStorageAccounts(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetComponentLinkedStorageAccounts();
        }

        /// <summary>
        /// Returns the current linked storage settings for an Application Insights component.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComponentLinkedStorageAccounts_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="resourceName"> The name of the Application Insights component resource. </param>
        /// <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="resourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<ComponentLinkedStorageAccountResource>> GetComponentLinkedStorageAccountAsync(this ResourceGroupResource resourceGroupResource, string resourceName, StorageType storageType, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetComponentLinkedStorageAccounts().GetAsync(resourceName, storageType, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Returns the current linked storage settings for an Application Insights component.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComponentLinkedStorageAccounts_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="resourceName"> The name of the Application Insights component resource. </param>
        /// <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="resourceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<ComponentLinkedStorageAccountResource> GetComponentLinkedStorageAccount(this ResourceGroupResource resourceGroupResource, string resourceName, StorageType storageType, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetComponentLinkedStorageAccounts().Get(resourceName, storageType, cancellationToken);
        }

        #region ComponentLinkedStorageAccountResource
        /// <summary>
        /// Gets an object representing a <see cref="ComponentLinkedStorageAccountResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ComponentLinkedStorageAccountResource.CreateResourceIdentifier" /> to create a <see cref="ComponentLinkedStorageAccountResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentLinkedStorageAccountResource" /> object. </returns>
        public static ComponentLinkedStorageAccountResource GetComponentLinkedStorageAccountResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ComponentLinkedStorageAccountResource.ValidateResourceId(id);
                return new ComponentLinkedStorageAccountResource(client, id);
            }
            );
        }
        #endregion
    }
}
