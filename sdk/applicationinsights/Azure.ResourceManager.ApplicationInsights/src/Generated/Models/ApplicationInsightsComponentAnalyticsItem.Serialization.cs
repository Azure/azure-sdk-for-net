// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApplicationInsights.Models
{
    public partial class ApplicationInsightsComponentAnalyticsItem : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Id))
            {
                writer.WritePropertyName("Id"u8);
                writer.WriteStringValue(Id);
            }
            if (Core.Optional.IsDefined(Name))
            {
                writer.WritePropertyName("Name"u8);
                writer.WriteStringValue(Name);
            }
            if (Core.Optional.IsDefined(Content))
            {
                writer.WritePropertyName("Content"u8);
                writer.WriteStringValue(Content);
            }
            if (Core.Optional.IsDefined(Scope))
            {
                writer.WritePropertyName("Scope"u8);
                writer.WriteStringValue(Scope.Value.ToString());
            }
            if (Core.Optional.IsDefined(ItemType))
            {
                writer.WritePropertyName("Type"u8);
                writer.WriteStringValue(ItemType.Value.ToString());
            }
            if (Core.Optional.IsDefined(Properties))
            {
                writer.WritePropertyName("Properties"u8);
                writer.WriteObjectValue(Properties);
            }
            writer.WriteEndObject();
        }

        internal static ApplicationInsightsComponentAnalyticsItem DeserializeApplicationInsightsComponentAnalyticsItem(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> id = default;
            Core.Optional<string> name = default;
            Core.Optional<string> content = default;
            Core.Optional<string> version = default;
            Core.Optional<ItemScope> scope = default;
            Core.Optional<ItemType> type = default;
            Core.Optional<string> timeCreated = default;
            Core.Optional<string> timeModified = default;
            Core.Optional<ApplicationInsightsComponentAnalyticsItemProperties> properties = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Content"u8))
                {
                    content = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Version"u8))
                {
                    version = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Scope"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scope = new ItemScope(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("Type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new ItemType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("TimeCreated"u8))
                {
                    timeCreated = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("TimeModified"u8))
                {
                    timeModified = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    properties = ApplicationInsightsComponentAnalyticsItemProperties.DeserializeApplicationInsightsComponentAnalyticsItemProperties(property.Value);
                    continue;
                }
            }
            return new ApplicationInsightsComponentAnalyticsItem(id.Value, name.Value, content.Value, version.Value, Core.Optional.ToNullable(scope), Core.Optional.ToNullable(type), timeCreated.Value, timeModified.Value, properties.Value);
        }
    }
}
