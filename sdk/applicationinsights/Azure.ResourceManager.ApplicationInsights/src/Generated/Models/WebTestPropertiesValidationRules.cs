// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ApplicationInsights.Models
{
    /// <summary>
    /// The collection of validation rule properties
    /// Serialized Name: WebTestPropertiesValidationRules
    /// </summary>
    public partial class WebTestPropertiesValidationRules
    {
        /// <summary> Initializes a new instance of WebTestPropertiesValidationRules. </summary>
        public WebTestPropertiesValidationRules()
        {
        }

        /// <summary> Initializes a new instance of WebTestPropertiesValidationRules. </summary>
        /// <param name="contentValidation">
        /// The collection of content validation properties
        /// Serialized Name: WebTestPropertiesValidationRules.ContentValidation
        /// </param>
        /// <param name="checkSsl">
        /// Checks to see if the SSL cert is still valid.
        /// Serialized Name: WebTestPropertiesValidationRules.SSLCheck
        /// </param>
        /// <param name="sslCertRemainingLifetimeCheck">
        /// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
        /// Serialized Name: WebTestPropertiesValidationRules.SSLCertRemainingLifetimeCheck
        /// </param>
        /// <param name="expectedHttpStatusCode">
        /// Validate that the WebTest returns the http status code provided.
        /// Serialized Name: WebTestPropertiesValidationRules.ExpectedHttpStatusCode
        /// </param>
        /// <param name="ignoreHttpStatusCode">
        /// When set, validation will ignore the status code.
        /// Serialized Name: WebTestPropertiesValidationRules.IgnoreHttpStatusCode
        /// </param>
        internal WebTestPropertiesValidationRules(WebTestPropertiesValidationRulesContentValidation contentValidation, bool? checkSsl, int? sslCertRemainingLifetimeCheck, int? expectedHttpStatusCode, bool? ignoreHttpStatusCode)
        {
            ContentValidation = contentValidation;
            CheckSsl = checkSsl;
            SSLCertRemainingLifetimeCheck = sslCertRemainingLifetimeCheck;
            ExpectedHttpStatusCode = expectedHttpStatusCode;
            IgnoreHttpStatusCode = ignoreHttpStatusCode;
        }

        /// <summary>
        /// The collection of content validation properties
        /// Serialized Name: WebTestPropertiesValidationRules.ContentValidation
        /// </summary>
        public WebTestPropertiesValidationRulesContentValidation ContentValidation { get; set; }
        /// <summary>
        /// Checks to see if the SSL cert is still valid.
        /// Serialized Name: WebTestPropertiesValidationRules.SSLCheck
        /// </summary>
        public bool? CheckSsl { get; set; }
        /// <summary>
        /// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
        /// Serialized Name: WebTestPropertiesValidationRules.SSLCertRemainingLifetimeCheck
        /// </summary>
        public int? SSLCertRemainingLifetimeCheck { get; set; }
        /// <summary>
        /// Validate that the WebTest returns the http status code provided.
        /// Serialized Name: WebTestPropertiesValidationRules.ExpectedHttpStatusCode
        /// </summary>
        public int? ExpectedHttpStatusCode { get; set; }
        /// <summary>
        /// When set, validation will ignore the status code.
        /// Serialized Name: WebTestPropertiesValidationRules.IgnoreHttpStatusCode
        /// </summary>
        public bool? IgnoreHttpStatusCode { get; set; }
    }
}
