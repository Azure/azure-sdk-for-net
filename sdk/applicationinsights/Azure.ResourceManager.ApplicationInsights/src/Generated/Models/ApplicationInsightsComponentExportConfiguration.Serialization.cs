// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApplicationInsights.Models
{
    public partial class ApplicationInsightsComponentExportConfiguration
    {
        internal static ApplicationInsightsComponentExportConfiguration DeserializeApplicationInsightsComponentExportConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> exportId = default;
            Optional<string> instrumentationKey = default;
            Optional<string> recordTypes = default;
            Optional<string> applicationName = default;
            Optional<string> subscriptionId = default;
            Optional<string> resourceGroup = default;
            Optional<string> destinationStorageSubscriptionId = default;
            Optional<string> destinationStorageLocationId = default;
            Optional<string> destinationAccountId = default;
            Optional<string> destinationType = default;
            Optional<string> isUserEnabled = default;
            Optional<string> lastUserUpdate = default;
            Optional<string> notificationQueueEnabled = default;
            Optional<string> exportStatus = default;
            Optional<string> lastSuccessTime = default;
            Optional<string> lastGapTime = default;
            Optional<string> permanentErrorReason = default;
            Optional<string> storageName = default;
            Optional<string> containerName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ExportId"u8))
                {
                    exportId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("InstrumentationKey"u8))
                {
                    instrumentationKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("RecordTypes"u8))
                {
                    recordTypes = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ApplicationName"u8))
                {
                    applicationName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("SubscriptionId"u8))
                {
                    subscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ResourceGroup"u8))
                {
                    resourceGroup = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DestinationStorageSubscriptionId"u8))
                {
                    destinationStorageSubscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DestinationStorageLocationId"u8))
                {
                    destinationStorageLocationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DestinationAccountId"u8))
                {
                    destinationAccountId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DestinationType"u8))
                {
                    destinationType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("IsUserEnabled"u8))
                {
                    isUserEnabled = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("LastUserUpdate"u8))
                {
                    lastUserUpdate = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("NotificationQueueEnabled"u8))
                {
                    notificationQueueEnabled = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ExportStatus"u8))
                {
                    exportStatus = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("LastSuccessTime"u8))
                {
                    lastSuccessTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("LastGapTime"u8))
                {
                    lastGapTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("PermanentErrorReason"u8))
                {
                    permanentErrorReason = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("StorageName"u8))
                {
                    storageName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ContainerName"u8))
                {
                    containerName = property.Value.GetString();
                    continue;
                }
            }
            return new ApplicationInsightsComponentExportConfiguration(exportId.Value, instrumentationKey.Value, recordTypes.Value, applicationName.Value, subscriptionId.Value, resourceGroup.Value, destinationStorageSubscriptionId.Value, destinationStorageLocationId.Value, destinationAccountId.Value, destinationType.Value, isUserEnabled.Value, lastUserUpdate.Value, notificationQueueEnabled.Value, exportStatus.Value, lastSuccessTime.Value, lastGapTime.Value, permanentErrorReason.Value, storageName.Value, containerName.Value);
        }
    }
}
