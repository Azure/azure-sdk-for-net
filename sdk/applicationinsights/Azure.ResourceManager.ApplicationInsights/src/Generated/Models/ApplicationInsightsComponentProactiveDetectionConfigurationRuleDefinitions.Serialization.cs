// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApplicationInsights.Models
{
    public partial class ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("Name"u8);
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(DisplayName))
            {
                writer.WritePropertyName("DisplayName"u8);
                writer.WriteStringValue(DisplayName);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("Description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(HelpUri))
            {
                writer.WritePropertyName("HelpUrl"u8);
                writer.WriteStringValue(HelpUri.AbsoluteUri);
            }
            if (Optional.IsDefined(IsHidden))
            {
                writer.WritePropertyName("IsHidden"u8);
                writer.WriteBooleanValue(IsHidden.Value);
            }
            if (Optional.IsDefined(IsEnabledByDefault))
            {
                writer.WritePropertyName("IsEnabledByDefault"u8);
                writer.WriteBooleanValue(IsEnabledByDefault.Value);
            }
            if (Optional.IsDefined(IsInPreview))
            {
                writer.WritePropertyName("IsInPreview"u8);
                writer.WriteBooleanValue(IsInPreview.Value);
            }
            if (Optional.IsDefined(SupportsEmailNotifications))
            {
                writer.WritePropertyName("SupportsEmailNotifications"u8);
                writer.WriteBooleanValue(SupportsEmailNotifications.Value);
            }
            writer.WriteEndObject();
        }

        internal static ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions DeserializeApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> name = default;
            Optional<string> displayName = default;
            Optional<string> description = default;
            Optional<Uri> helpUrl = default;
            Optional<bool> isHidden = default;
            Optional<bool> isEnabledByDefault = default;
            Optional<bool> isInPreview = default;
            Optional<bool> supportsEmailNotifications = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DisplayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("HelpUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    helpUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("IsHidden"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isHidden = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("IsEnabledByDefault"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isEnabledByDefault = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("IsInPreview"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isInPreview = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("SupportsEmailNotifications"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    supportsEmailNotifications = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions(name.Value, displayName.Value, description.Value, helpUrl.Value, Optional.ToNullable(isHidden), Optional.ToNullable(isEnabledByDefault), Optional.ToNullable(isInPreview), Optional.ToNullable(supportsEmailNotifications));
        }
    }
}
