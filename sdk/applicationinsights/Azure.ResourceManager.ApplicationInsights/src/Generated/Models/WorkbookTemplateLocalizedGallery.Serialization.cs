// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApplicationInsights.Models
{
    public partial class WorkbookTemplateLocalizedGallery : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(TemplateData))
            {
                writer.WritePropertyName("templateData"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(TemplateData);
#else
                using (JsonDocument document = JsonDocument.Parse(TemplateData))
                {
                    JsonSerializer.Serialize(writer, document.RootElement);
                }
#endif
            }
            if (Optional.IsCollectionDefined(Galleries))
            {
                writer.WritePropertyName("galleries"u8);
                writer.WriteStartArray();
                foreach (var item in Galleries)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static WorkbookTemplateLocalizedGallery DeserializeWorkbookTemplateLocalizedGallery(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<BinaryData> templateData = default;
            Optional<IList<WorkbookTemplateGallery>> galleries = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("templateData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    templateData = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("galleries"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<WorkbookTemplateGallery> array = new List<WorkbookTemplateGallery>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(WorkbookTemplateGallery.DeserializeWorkbookTemplateGallery(item));
                    }
                    galleries = array;
                    continue;
                }
            }
            return new WorkbookTemplateLocalizedGallery(templateData.Value, Optional.ToList(galleries));
        }
    }
}
