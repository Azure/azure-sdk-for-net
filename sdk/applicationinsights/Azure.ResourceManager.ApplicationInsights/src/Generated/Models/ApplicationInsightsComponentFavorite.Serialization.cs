// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApplicationInsights.Models
{
    public partial class ApplicationInsightsComponentFavorite : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Name))
            {
                writer.WritePropertyName("Name"u8);
                writer.WriteStringValue(Name);
            }
            if (Core.Optional.IsDefined(Config))
            {
                writer.WritePropertyName("Config"u8);
                writer.WriteStringValue(Config);
            }
            if (Core.Optional.IsDefined(Version))
            {
                writer.WritePropertyName("Version"u8);
                writer.WriteStringValue(Version);
            }
            if (Core.Optional.IsDefined(FavoriteType))
            {
                writer.WritePropertyName("FavoriteType"u8);
                writer.WriteStringValue(FavoriteType.Value.ToSerialString());
            }
            if (Core.Optional.IsDefined(SourceType))
            {
                writer.WritePropertyName("SourceType"u8);
                writer.WriteStringValue(SourceType);
            }
            if (Core.Optional.IsCollectionDefined(Tags))
            {
                writer.WritePropertyName("Tags"u8);
                writer.WriteStartArray();
                foreach (var item in Tags)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsDefined(Category))
            {
                writer.WritePropertyName("Category"u8);
                writer.WriteStringValue(Category);
            }
            if (Core.Optional.IsDefined(IsGeneratedFromTemplate))
            {
                writer.WritePropertyName("IsGeneratedFromTemplate"u8);
                writer.WriteBooleanValue(IsGeneratedFromTemplate.Value);
            }
            writer.WriteEndObject();
        }

        internal static ApplicationInsightsComponentFavorite DeserializeApplicationInsightsComponentFavorite(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> name = default;
            Core.Optional<string> config = default;
            Core.Optional<string> version = default;
            Core.Optional<string> favoriteId = default;
            Core.Optional<FavoriteType> favoriteType = default;
            Core.Optional<string> sourceType = default;
            Core.Optional<string> timeModified = default;
            Core.Optional<IList<string>> tags = default;
            Core.Optional<string> category = default;
            Core.Optional<bool> isGeneratedFromTemplate = default;
            Core.Optional<string> userId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Config"u8))
                {
                    config = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Version"u8))
                {
                    version = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("FavoriteId"u8))
                {
                    favoriteId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("FavoriteType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    favoriteType = property.Value.GetString().ToFavoriteType();
                    continue;
                }
                if (property.NameEquals("SourceType"u8))
                {
                    sourceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("TimeModified"u8))
                {
                    timeModified = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Tags"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    tags = array;
                    continue;
                }
                if (property.NameEquals("Category"u8))
                {
                    category = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("IsGeneratedFromTemplate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isGeneratedFromTemplate = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("UserId"u8))
                {
                    userId = property.Value.GetString();
                    continue;
                }
            }
            return new ApplicationInsightsComponentFavorite(name.Value, config.Value, version.Value, favoriteId.Value, Core.Optional.ToNullable(favoriteType), sourceType.Value, timeModified.Value, Core.Optional.ToList(tags), category.Value, Core.Optional.ToNullable(isGeneratedFromTemplate), userId.Value);
        }
    }
}
