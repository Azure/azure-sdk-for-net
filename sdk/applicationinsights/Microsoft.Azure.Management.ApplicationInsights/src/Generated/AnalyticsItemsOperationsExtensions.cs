// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApplicationInsights.Management
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AnalyticsItemsOperations.
    /// </summary>
    public static partial class AnalyticsItemsOperationsExtensions
    {
            /// <summary>
            /// Gets a list of Analytics Items defined within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='scope'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'shared', 'user'
            /// </param>
            /// <param name='type'>
            /// Enum indicating the type of the Analytics item. Possible values include:
            /// 'none', 'query', 'function', 'folder', 'recent'
            /// </param>
            /// <param name='includeContent'>
            /// Flag indicating whether or not to return the content of each applicable
            /// item. If false, only return the item information.
            /// </param>
            public static IList<ApplicationInsightsComponentAnalyticsItem> List(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, string scope = default(string), string type = default(string), bool? includeContent = default(bool?))
            {
                return operations.ListAsync(resourceGroupName, resourceName, scopePath, scope, type, includeContent).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of Analytics Items defined within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='scope'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'shared', 'user'
            /// </param>
            /// <param name='type'>
            /// Enum indicating the type of the Analytics item. Possible values include:
            /// 'none', 'query', 'function', 'folder', 'recent'
            /// </param>
            /// <param name='includeContent'>
            /// Flag indicating whether or not to return the content of each applicable
            /// item. If false, only return the item information.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<ApplicationInsightsComponentAnalyticsItem>> ListAsync(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, string scope = default(string), string type = default(string), bool? includeContent = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, resourceName, scopePath, scope, type, includeContent, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a specific Analytics Items defined within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='id'>
            /// The Id of a specific item defined in the Application Insights component
            /// </param>
            /// <param name='name'>
            /// The name of a specific item defined in the Application Insights component
            /// </param>
            public static ApplicationInsightsComponentAnalyticsItem Get(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, string id = default(string), string name = default(string))
            {
                return operations.GetAsync(resourceGroupName, resourceName, scopePath, id, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a specific Analytics Items defined within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='id'>
            /// The Id of a specific item defined in the Application Insights component
            /// </param>
            /// <param name='name'>
            /// The name of a specific item defined in the Application Insights component
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApplicationInsightsComponentAnalyticsItem> GetAsync(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, string id = default(string), string name = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, scopePath, id, name, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Adds or Updates a specific Analytics Item within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='itemProperties'>
            /// Properties that need to be specified to create a new item and add it to an
            /// Application Insights component.
            /// </param>
            /// <param name='overrideItem'>
            /// Flag indicating whether or not to force save an item. This allows
            /// overriding an item if it already exists.
            /// </param>
            public static ApplicationInsightsComponentAnalyticsItem Put(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, ApplicationInsightsComponentAnalyticsItem itemProperties, bool? overrideItem = default(bool?))
            {
                return operations.PutAsync(resourceGroupName, resourceName, scopePath, itemProperties, overrideItem).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds or Updates a specific Analytics Item within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='itemProperties'>
            /// Properties that need to be specified to create a new item and add it to an
            /// Application Insights component.
            /// </param>
            /// <param name='overrideItem'>
            /// Flag indicating whether or not to force save an item. This allows
            /// overriding an item if it already exists.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApplicationInsightsComponentAnalyticsItem> PutAsync(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, ApplicationInsightsComponentAnalyticsItem itemProperties, bool? overrideItem = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutWithHttpMessagesAsync(resourceGroupName, resourceName, scopePath, itemProperties, overrideItem, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a specific Analytics Items defined within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='id'>
            /// The Id of a specific item defined in the Application Insights component
            /// </param>
            /// <param name='name'>
            /// The name of a specific item defined in the Application Insights component
            /// </param>
            public static void Delete(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, string id = default(string), string name = default(string))
            {
                operations.DeleteAsync(resourceGroupName, resourceName, scopePath, id, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a specific Analytics Items defined within an Application Insights
            /// component.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the Application Insights component resource.
            /// </param>
            /// <param name='scopePath'>
            /// Enum indicating if this item definition is owned by a specific user or is
            /// shared between all users with access to the Application Insights component.
            /// Possible values include: 'analyticsItems', 'myanalyticsItems'
            /// </param>
            /// <param name='id'>
            /// The Id of a specific item defined in the Application Insights component
            /// </param>
            /// <param name='name'>
            /// The name of a specific item defined in the Application Insights component
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IAnalyticsItemsOperations operations, string resourceGroupName, string resourceName, string scopePath, string id = default(string), string name = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, resourceName, scopePath, id, name, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
