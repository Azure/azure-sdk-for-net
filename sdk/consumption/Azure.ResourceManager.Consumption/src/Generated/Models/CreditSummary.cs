// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary> A credit summary resource. </summary>
    public partial class CreditSummary : ResourceData
    {
        /// <summary> Initializes a new instance of CreditSummary. </summary>
        public CreditSummary()
        {
        }

        /// <summary> Initializes a new instance of CreditSummary. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="balanceSummary"> Summary of balances associated with this credit summary. </param>
        /// <param name="pendingCreditAdjustments"> Pending credit adjustments. </param>
        /// <param name="expiredCredit"> Expired credit. </param>
        /// <param name="pendingEligibleCharges"> Pending eligible charges. </param>
        /// <param name="creditCurrency"> The credit currency. </param>
        /// <param name="billingCurrency"> The billing currency. </param>
        /// <param name="reseller"> Credit&apos;s reseller. </param>
        /// <param name="eTagPropertiesETag"> The eTag for the resource. </param>
        /// <param name="etag"> eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not. </param>
        internal CreditSummary(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, CreditBalanceSummary balanceSummary, Amount pendingCreditAdjustments, Amount expiredCredit, Amount pendingEligibleCharges, string creditCurrency, string billingCurrency, Reseller reseller, string eTagPropertiesETag, ETag? etag) : base(id, name, resourceType, systemData)
        {
            BalanceSummary = balanceSummary;
            PendingCreditAdjustments = pendingCreditAdjustments;
            ExpiredCredit = expiredCredit;
            PendingEligibleCharges = pendingEligibleCharges;
            CreditCurrency = creditCurrency;
            BillingCurrency = billingCurrency;
            Reseller = reseller;
            ETagPropertiesETag = eTagPropertiesETag;
            ETag = etag;
        }

        /// <summary> Summary of balances associated with this credit summary. </summary>
        public CreditBalanceSummary BalanceSummary { get; }
        /// <summary> Pending credit adjustments. </summary>
        public Amount PendingCreditAdjustments { get; }
        /// <summary> Expired credit. </summary>
        public Amount ExpiredCredit { get; }
        /// <summary> Pending eligible charges. </summary>
        public Amount PendingEligibleCharges { get; }
        /// <summary> The credit currency. </summary>
        public string CreditCurrency { get; }
        /// <summary> The billing currency. </summary>
        public string BillingCurrency { get; }
        /// <summary> Credit&apos;s reseller. </summary>
        public Reseller Reseller { get; }
        /// <summary> The eTag for the resource. </summary>
        public string ETagPropertiesETag { get; }
        /// <summary> eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not. </summary>
        public ETag? ETag { get; set; }
    }
}
