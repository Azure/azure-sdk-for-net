// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Consumption.Models
{
    public partial class ConsumptionUsageProperties
    {
        internal static ConsumptionUsageProperties DeserializeConsumptionUsageProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> firstConsumptionDate = default;
            Optional<string> lastConsumptionDate = default;
            Optional<string> lookBackUnitType = default;
            Optional<IReadOnlyList<float>> usageData = default;
            Optional<string> usageGrain = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("firstConsumptionDate"u8))
                {
                    firstConsumptionDate = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastConsumptionDate"u8))
                {
                    lastConsumptionDate = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lookBackUnitType"u8))
                {
                    lookBackUnitType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("usageData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<float> array = new List<float>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetSingle());
                    }
                    usageData = array;
                    continue;
                }
                if (property.NameEquals("usageGrain"u8))
                {
                    usageGrain = property.Value.GetString();
                    continue;
                }
            }
            return new ConsumptionUsageProperties(firstConsumptionDate.Value, lastConsumptionDate.Value, lookBackUnitType.Value, Optional.ToList(usageData), usageGrain.Value);
        }
    }
}
