// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Consumption.Models
{
    public partial class ConsumptionModernUsageDetail
    {
        internal static ConsumptionModernUsageDetail DeserializeConsumptionModernUsageDetail(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            UsageDetailsKind kind = default;
            Core.Optional<ETag> etag = default;
            Core.Optional<IReadOnlyDictionary<string, string>> tags = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Core.Optional<SystemData> systemData = default;
            Core.Optional<string> billingAccountId = default;
            Core.Optional<decimal> effectivePrice = default;
            Core.Optional<ConsumptionPricingModelType> pricingModel = default;
            Core.Optional<string> billingAccountName = default;
            Core.Optional<DateTimeOffset> billingPeriodStartDate = default;
            Core.Optional<DateTimeOffset> billingPeriodEndDate = default;
            Core.Optional<string> billingProfileId = default;
            Core.Optional<string> billingProfileName = default;
            Core.Optional<string> subscriptionGuid = default;
            Core.Optional<string> subscriptionName = default;
            Core.Optional<DateTimeOffset> date = default;
            Core.Optional<string> product = default;
            Core.Optional<Guid> meterId = default;
            Core.Optional<string> meterName = default;
            Core.Optional<string> meterRegion = default;
            Core.Optional<string> meterCategory = default;
            Core.Optional<string> meterSubCategory = default;
            Core.Optional<string> serviceFamily = default;
            Core.Optional<decimal> quantity = default;
            Core.Optional<string> unitOfMeasure = default;
            Core.Optional<string> instanceName = default;
            Core.Optional<decimal> costInUSD = default;
            Core.Optional<decimal> unitPrice = default;
            Core.Optional<string> billingCurrencyCode = default;
            Core.Optional<string> resourceLocation = default;
            Core.Optional<string> consumedService = default;
            Core.Optional<string> serviceInfo1 = default;
            Core.Optional<string> serviceInfo2 = default;
            Core.Optional<string> additionalInfo = default;
            Core.Optional<string> invoiceSectionId = default;
            Core.Optional<string> invoiceSectionName = default;
            Core.Optional<string> costCenter = default;
            Core.Optional<string> resourceGroup = default;
            Core.Optional<string> reservationId = default;
            Core.Optional<string> reservationName = default;
            Core.Optional<string> productOrderId = default;
            Core.Optional<string> productOrderName = default;
            Core.Optional<bool> isAzureCreditEligible = default;
            Core.Optional<string> term = default;
            Core.Optional<string> publisherName = default;
            Core.Optional<string> publisherType = default;
            Core.Optional<string> chargeType = default;
            Core.Optional<string> frequency = default;
            Core.Optional<decimal> costInBillingCurrency = default;
            Core.Optional<decimal> costInPricingCurrency = default;
            Core.Optional<string> exchangeRate = default;
            Core.Optional<DateTimeOffset> exchangeRateDate = default;
            Core.Optional<string> invoiceId = default;
            Core.Optional<string> previousInvoiceId = default;
            Core.Optional<string> pricingCurrencyCode = default;
            Core.Optional<string> productIdentifier = default;
            Core.Optional<string> resourceLocationNormalized = default;
            Core.Optional<DateTimeOffset> servicePeriodStartDate = default;
            Core.Optional<DateTimeOffset> servicePeriodEndDate = default;
            Core.Optional<string> customerTenantId = default;
            Core.Optional<string> customerName = default;
            Core.Optional<string> partnerTenantId = default;
            Core.Optional<string> partnerName = default;
            Core.Optional<string> resellerMpnId = default;
            Core.Optional<string> resellerName = default;
            Core.Optional<string> publisherId = default;
            Core.Optional<decimal> marketPrice = default;
            Core.Optional<decimal> exchangeRatePricingToBilling = default;
            Core.Optional<decimal> paygCostInBillingCurrency = default;
            Core.Optional<decimal> paygCostInUSD = default;
            Core.Optional<decimal> partnerEarnedCreditRate = default;
            Core.Optional<string> partnerEarnedCreditApplied = default;
            Core.Optional<decimal> payGPrice = default;
            Core.Optional<string> benefitId = default;
            Core.Optional<string> benefitName = default;
            Core.Optional<string> provider = default;
            Core.Optional<string> costAllocationRuleName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"u8))
                {
                    kind = new UsageDetailsKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("etag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    etag = new ETag(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("tags"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    tags = dictionary;
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("billingAccountId"u8))
                        {
                            billingAccountId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("effectivePrice"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            effectivePrice = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("pricingModel"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            pricingModel = new ConsumptionPricingModelType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("billingAccountName"u8))
                        {
                            billingAccountName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingPeriodStartDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            billingPeriodStartDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("billingPeriodEndDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            billingPeriodEndDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("billingProfileId"u8))
                        {
                            billingProfileId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileName"u8))
                        {
                            billingProfileName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("subscriptionGuid"u8))
                        {
                            subscriptionGuid = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("subscriptionName"u8))
                        {
                            subscriptionName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("date"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            date = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("product"u8))
                        {
                            product = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("meterId"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            meterId = property0.Value.GetGuid();
                            continue;
                        }
                        if (property0.NameEquals("meterName"u8))
                        {
                            meterName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("meterRegion"u8))
                        {
                            meterRegion = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("meterCategory"u8))
                        {
                            meterCategory = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("meterSubCategory"u8))
                        {
                            meterSubCategory = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serviceFamily"u8))
                        {
                            serviceFamily = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("quantity"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            quantity = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("unitOfMeasure"u8))
                        {
                            unitOfMeasure = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("instanceName"u8))
                        {
                            instanceName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("costInUSD"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            costInUSD = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("unitPrice"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            unitPrice = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("billingCurrencyCode"u8))
                        {
                            billingCurrencyCode = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("resourceLocation"u8))
                        {
                            resourceLocation = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("consumedService"u8))
                        {
                            consumedService = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serviceInfo1"u8))
                        {
                            serviceInfo1 = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serviceInfo2"u8))
                        {
                            serviceInfo2 = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("additionalInfo"u8))
                        {
                            additionalInfo = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionId"u8))
                        {
                            invoiceSectionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionName"u8))
                        {
                            invoiceSectionName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("costCenter"u8))
                        {
                            costCenter = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("resourceGroup"u8))
                        {
                            resourceGroup = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("reservationId"u8))
                        {
                            reservationId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("reservationName"u8))
                        {
                            reservationName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productOrderId"u8))
                        {
                            productOrderId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productOrderName"u8))
                        {
                            productOrderName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("isAzureCreditEligible"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isAzureCreditEligible = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("term"u8))
                        {
                            term = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("publisherName"u8))
                        {
                            publisherName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("publisherType"u8))
                        {
                            publisherType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("chargeType"u8))
                        {
                            chargeType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("frequency"u8))
                        {
                            frequency = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("costInBillingCurrency"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            costInBillingCurrency = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("costInPricingCurrency"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            costInPricingCurrency = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("exchangeRate"u8))
                        {
                            exchangeRate = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("exchangeRateDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            exchangeRateDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("invoiceId"u8))
                        {
                            invoiceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("previousInvoiceId"u8))
                        {
                            previousInvoiceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("pricingCurrencyCode"u8))
                        {
                            pricingCurrencyCode = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productIdentifier"u8))
                        {
                            productIdentifier = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("resourceLocationNormalized"u8))
                        {
                            resourceLocationNormalized = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("servicePeriodStartDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            servicePeriodStartDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("servicePeriodEndDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null || property0.Value.ValueKind == JsonValueKind.String && property0.Value.GetString().Length == 0)
                            {
                                continue;
                            }
                            servicePeriodEndDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("customerTenantId"u8))
                        {
                            customerTenantId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerName"u8))
                        {
                            customerName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("partnerTenantId"u8))
                        {
                            partnerTenantId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("partnerName"u8))
                        {
                            partnerName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("resellerMpnId"u8))
                        {
                            resellerMpnId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("resellerName"u8))
                        {
                            resellerName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("publisherId"u8))
                        {
                            publisherId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("marketPrice"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            marketPrice = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("exchangeRatePricingToBilling"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            exchangeRatePricingToBilling = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("paygCostInBillingCurrency"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            paygCostInBillingCurrency = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("paygCostInUSD"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            paygCostInUSD = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("partnerEarnedCreditRate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            partnerEarnedCreditRate = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("partnerEarnedCreditApplied"u8))
                        {
                            partnerEarnedCreditApplied = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("payGPrice"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            payGPrice = property0.Value.GetDecimal();
                            continue;
                        }
                        if (property0.NameEquals("benefitId"u8))
                        {
                            benefitId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("benefitName"u8))
                        {
                            benefitName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("provider"u8))
                        {
                            provider = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("costAllocationRuleName"u8))
                        {
                            costAllocationRuleName = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ConsumptionModernUsageDetail(id, name, type, systemData.Value, kind, Core.Optional.ToNullable(etag), Core.Optional.ToDictionary(tags), billingAccountId.Value, Core.Optional.ToNullable(effectivePrice), Core.Optional.ToNullable(pricingModel), billingAccountName.Value, Core.Optional.ToNullable(billingPeriodStartDate), Core.Optional.ToNullable(billingPeriodEndDate), billingProfileId.Value, billingProfileName.Value, subscriptionGuid.Value, subscriptionName.Value, Core.Optional.ToNullable(date), product.Value, Core.Optional.ToNullable(meterId), meterName.Value, meterRegion.Value, meterCategory.Value, meterSubCategory.Value, serviceFamily.Value, Core.Optional.ToNullable(quantity), unitOfMeasure.Value, instanceName.Value, Core.Optional.ToNullable(costInUSD), Core.Optional.ToNullable(unitPrice), billingCurrencyCode.Value, resourceLocation.Value, consumedService.Value, serviceInfo1.Value, serviceInfo2.Value, additionalInfo.Value, invoiceSectionId.Value, invoiceSectionName.Value, costCenter.Value, resourceGroup.Value, reservationId.Value, reservationName.Value, productOrderId.Value, productOrderName.Value, Core.Optional.ToNullable(isAzureCreditEligible), term.Value, publisherName.Value, publisherType.Value, chargeType.Value, frequency.Value, Core.Optional.ToNullable(costInBillingCurrency), Core.Optional.ToNullable(costInPricingCurrency), exchangeRate.Value, Core.Optional.ToNullable(exchangeRateDate), invoiceId.Value, previousInvoiceId.Value, pricingCurrencyCode.Value, productIdentifier.Value, resourceLocationNormalized.Value, Core.Optional.ToNullable(servicePeriodStartDate), Core.Optional.ToNullable(servicePeriodEndDate), customerTenantId.Value, customerName.Value, partnerTenantId.Value, partnerName.Value, resellerMpnId.Value, resellerName.Value, publisherId.Value, Core.Optional.ToNullable(marketPrice), Core.Optional.ToNullable(exchangeRatePricingToBilling), Core.Optional.ToNullable(paygCostInBillingCurrency), Core.Optional.ToNullable(paygCostInUSD), Core.Optional.ToNullable(partnerEarnedCreditRate), partnerEarnedCreditApplied.Value, Core.Optional.ToNullable(payGPrice), benefitId.Value, benefitName.Value, provider.Value, costAllocationRuleName.Value);
        }
    }
}
