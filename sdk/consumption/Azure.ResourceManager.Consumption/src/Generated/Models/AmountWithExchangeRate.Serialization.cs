// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Consumption.Models
{
    public partial class AmountWithExchangeRate
    {
        internal static AmountWithExchangeRate DeserializeAmountWithExchangeRate(JsonElement element)
        {
            Optional<decimal> exchangeRate = default;
            Optional<int> exchangeRateMonth = default;
            Optional<string> currency = default;
            Optional<decimal> value = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("exchangeRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    exchangeRate = property.Value.GetDecimal();
                    continue;
                }
                if (property.NameEquals("exchangeRateMonth"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    exchangeRateMonth = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("currency"))
                {
                    currency = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    value = property.Value.GetDecimal();
                    continue;
                }
            }
            return new AmountWithExchangeRate(currency.Value, Optional.ToNullable(value), Optional.ToNullable(exchangeRate), Optional.ToNullable(exchangeRateMonth));
        }
    }
}
