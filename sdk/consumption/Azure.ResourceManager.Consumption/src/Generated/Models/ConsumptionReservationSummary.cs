// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary>
    /// reservation summary resource.
    /// Serialized Name: ReservationSummary
    /// </summary>
    public partial class ConsumptionReservationSummary : ResourceData
    {
        /// <summary> Initializes a new instance of ConsumptionReservationSummary. </summary>
        internal ConsumptionReservationSummary()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ConsumptionReservationSummary. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="reservationOrderId">
        /// The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.
        /// Serialized Name: ReservationSummary.properties.reservationOrderId
        /// </param>
        /// <param name="reservationId">
        /// The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.
        /// Serialized Name: ReservationSummary.properties.reservationId
        /// </param>
        /// <param name="skuName">
        /// This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
        /// Serialized Name: ReservationSummary.properties.skuName
        /// </param>
        /// <param name="reservedHours">
        /// This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days
        /// Serialized Name: ReservationSummary.properties.reservedHours
        /// </param>
        /// <param name="useOn">
        /// Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.
        /// Serialized Name: ReservationSummary.properties.usageDate
        /// </param>
        /// <param name="usedHours">
        /// Total used hours by the reservation
        /// Serialized Name: ReservationSummary.properties.usedHours
        /// </param>
        /// <param name="minUtilizationPercentage">
        /// This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day
        /// Serialized Name: ReservationSummary.properties.minUtilizationPercentage
        /// </param>
        /// <param name="avgUtilizationPercentage">
        /// This is average utilization for the entire time range. (day or month depending on the grain)
        /// Serialized Name: ReservationSummary.properties.avgUtilizationPercentage
        /// </param>
        /// <param name="maxUtilizationPercentage">
        /// This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.
        /// Serialized Name: ReservationSummary.properties.maxUtilizationPercentage
        /// </param>
        /// <param name="kind">
        /// The reservation kind.
        /// Serialized Name: ReservationSummary.properties.kind
        /// </param>
        /// <param name="purchasedQuantity">
        /// This is the purchased quantity for the reservationId.
        /// Serialized Name: ReservationSummary.properties.purchasedQuantity
        /// </param>
        /// <param name="remainingQuantity">
        /// This is the remaining quantity for the reservationId.
        /// Serialized Name: ReservationSummary.properties.remainingQuantity
        /// </param>
        /// <param name="totalReservedQuantity">
        /// This is the total count of instances that are reserved for the reservationId.
        /// Serialized Name: ReservationSummary.properties.totalReservedQuantity
        /// </param>
        /// <param name="usedQuantity">
        /// This is the used quantity for the reservationId.
        /// Serialized Name: ReservationSummary.properties.usedQuantity
        /// </param>
        /// <param name="utilizedPercentage">
        /// This is the utilized percentage for the reservation Id.
        /// Serialized Name: ReservationSummary.properties.utilizedPercentage
        /// </param>
        /// <param name="etag">
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </param>
        /// <param name="tags">
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </param>
        internal ConsumptionReservationSummary(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string reservationOrderId, string reservationId, string skuName, decimal? reservedHours, DateTimeOffset? useOn, decimal? usedHours, decimal? minUtilizationPercentage, decimal? avgUtilizationPercentage, decimal? maxUtilizationPercentage, string kind, decimal? purchasedQuantity, decimal? remainingQuantity, decimal? totalReservedQuantity, decimal? usedQuantity, decimal? utilizedPercentage, ETag? etag, IReadOnlyDictionary<string, string> tags) : base(id, name, resourceType, systemData)
        {
            ReservationOrderId = reservationOrderId;
            ReservationId = reservationId;
            SkuName = skuName;
            ReservedHours = reservedHours;
            UseOn = useOn;
            UsedHours = usedHours;
            MinUtilizationPercentage = minUtilizationPercentage;
            AvgUtilizationPercentage = avgUtilizationPercentage;
            MaxUtilizationPercentage = maxUtilizationPercentage;
            Kind = kind;
            PurchasedQuantity = purchasedQuantity;
            RemainingQuantity = remainingQuantity;
            TotalReservedQuantity = totalReservedQuantity;
            UsedQuantity = usedQuantity;
            UtilizedPercentage = utilizedPercentage;
            ETag = etag;
            Tags = tags;
        }

        /// <summary>
        /// The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.
        /// Serialized Name: ReservationSummary.properties.reservationOrderId
        /// </summary>
        public string ReservationOrderId { get; }
        /// <summary>
        /// The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.
        /// Serialized Name: ReservationSummary.properties.reservationId
        /// </summary>
        public string ReservationId { get; }
        /// <summary>
        /// This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
        /// Serialized Name: ReservationSummary.properties.skuName
        /// </summary>
        public string SkuName { get; }
        /// <summary>
        /// This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days
        /// Serialized Name: ReservationSummary.properties.reservedHours
        /// </summary>
        public decimal? ReservedHours { get; }
        /// <summary>
        /// Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.
        /// Serialized Name: ReservationSummary.properties.usageDate
        /// </summary>
        public DateTimeOffset? UseOn { get; }
        /// <summary>
        /// Total used hours by the reservation
        /// Serialized Name: ReservationSummary.properties.usedHours
        /// </summary>
        public decimal? UsedHours { get; }
        /// <summary>
        /// This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day
        /// Serialized Name: ReservationSummary.properties.minUtilizationPercentage
        /// </summary>
        public decimal? MinUtilizationPercentage { get; }
        /// <summary>
        /// This is average utilization for the entire time range. (day or month depending on the grain)
        /// Serialized Name: ReservationSummary.properties.avgUtilizationPercentage
        /// </summary>
        public decimal? AvgUtilizationPercentage { get; }
        /// <summary>
        /// This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.
        /// Serialized Name: ReservationSummary.properties.maxUtilizationPercentage
        /// </summary>
        public decimal? MaxUtilizationPercentage { get; }
        /// <summary>
        /// The reservation kind.
        /// Serialized Name: ReservationSummary.properties.kind
        /// </summary>
        public string Kind { get; }
        /// <summary>
        /// This is the purchased quantity for the reservationId.
        /// Serialized Name: ReservationSummary.properties.purchasedQuantity
        /// </summary>
        public decimal? PurchasedQuantity { get; }
        /// <summary>
        /// This is the remaining quantity for the reservationId.
        /// Serialized Name: ReservationSummary.properties.remainingQuantity
        /// </summary>
        public decimal? RemainingQuantity { get; }
        /// <summary>
        /// This is the total count of instances that are reserved for the reservationId.
        /// Serialized Name: ReservationSummary.properties.totalReservedQuantity
        /// </summary>
        public decimal? TotalReservedQuantity { get; }
        /// <summary>
        /// This is the used quantity for the reservationId.
        /// Serialized Name: ReservationSummary.properties.usedQuantity
        /// </summary>
        public decimal? UsedQuantity { get; }
        /// <summary>
        /// This is the utilized percentage for the reservation Id.
        /// Serialized Name: ReservationSummary.properties.utilizedPercentage
        /// </summary>
        public decimal? UtilizedPercentage { get; }
        /// <summary>
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </summary>
        public ETag? ETag { get; }
        /// <summary>
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
