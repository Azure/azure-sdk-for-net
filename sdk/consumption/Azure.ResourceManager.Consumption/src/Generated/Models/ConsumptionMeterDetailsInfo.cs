// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary>
    /// The properties of the meter detail.
    /// Serialized Name: MeterDetailsResponse
    /// </summary>
    public partial class ConsumptionMeterDetailsInfo
    {
        /// <summary> Initializes a new instance of ConsumptionMeterDetailsInfo. </summary>
        internal ConsumptionMeterDetailsInfo()
        {
        }

        /// <summary> Initializes a new instance of ConsumptionMeterDetailsInfo. </summary>
        /// <param name="meterName">
        /// The name of the meter, within the given meter category
        /// Serialized Name: MeterDetailsResponse.meterName
        /// </param>
        /// <param name="meterCategory">
        /// The category of the meter, for example, &apos;Cloud services&apos;, &apos;Networking&apos;, etc..
        /// Serialized Name: MeterDetailsResponse.meterCategory
        /// </param>
        /// <param name="meterSubCategory">
        /// The subcategory of the meter, for example, &apos;A6 Cloud services&apos;, &apos;ExpressRoute (IXP)&apos;, etc..
        /// Serialized Name: MeterDetailsResponse.meterSubCategory
        /// </param>
        /// <param name="unitOfMeasure">
        /// The unit in which the meter consumption is charged, for example, &apos;Hours&apos;, &apos;GB&apos;, etc.
        /// Serialized Name: MeterDetailsResponse.unitOfMeasure
        /// </param>
        /// <param name="serviceFamily">
        /// The service family.
        /// Serialized Name: MeterDetailsResponse.serviceFamily
        /// </param>
        internal ConsumptionMeterDetailsInfo(string meterName, string meterCategory, string meterSubCategory, string unitOfMeasure, string serviceFamily)
        {
            MeterName = meterName;
            MeterCategory = meterCategory;
            MeterSubCategory = meterSubCategory;
            UnitOfMeasure = unitOfMeasure;
            ServiceFamily = serviceFamily;
        }

        /// <summary>
        /// The name of the meter, within the given meter category
        /// Serialized Name: MeterDetailsResponse.meterName
        /// </summary>
        public string MeterName { get; }
        /// <summary>
        /// The category of the meter, for example, &apos;Cloud services&apos;, &apos;Networking&apos;, etc..
        /// Serialized Name: MeterDetailsResponse.meterCategory
        /// </summary>
        public string MeterCategory { get; }
        /// <summary>
        /// The subcategory of the meter, for example, &apos;A6 Cloud services&apos;, &apos;ExpressRoute (IXP)&apos;, etc..
        /// Serialized Name: MeterDetailsResponse.meterSubCategory
        /// </summary>
        public string MeterSubCategory { get; }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, &apos;Hours&apos;, &apos;GB&apos;, etc.
        /// Serialized Name: MeterDetailsResponse.unitOfMeasure
        /// </summary>
        public string UnitOfMeasure { get; }
        /// <summary>
        /// The service family.
        /// Serialized Name: MeterDetailsResponse.serviceFamily
        /// </summary>
        public string ServiceFamily { get; }
    }
}
