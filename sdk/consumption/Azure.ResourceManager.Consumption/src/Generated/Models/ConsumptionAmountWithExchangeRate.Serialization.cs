// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Consumption.Models
{
    public partial class ConsumptionAmountWithExchangeRate
    {
        internal static ConsumptionAmountWithExchangeRate DeserializeConsumptionAmountWithExchangeRate(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<decimal> exchangeRate = default;
            Core.Optional<int> exchangeRateMonth = default;
            Core.Optional<string> currency = default;
            Core.Optional<decimal> value = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("exchangeRate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    exchangeRate = property.Value.GetDecimal();
                    continue;
                }
                if (property.NameEquals("exchangeRateMonth"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    exchangeRateMonth = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("currency"u8))
                {
                    currency = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    value = property.Value.GetDecimal();
                    continue;
                }
            }
            return new ConsumptionAmountWithExchangeRate(currency.Value, Core.Optional.ToNullable(value), Core.Optional.ToNullable(exchangeRate), Core.Optional.ToNullable(exchangeRateMonth));
        }
    }
}
