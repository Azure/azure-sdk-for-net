// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary>
    /// A marketplace resource.
    /// Serialized Name: Marketplace
    /// </summary>
    public partial class ConsumptionMarketplace : ResourceData
    {
        /// <summary> Initializes a new instance of ConsumptionMarketplace. </summary>
        internal ConsumptionMarketplace()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ConsumptionMarketplace. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="billingPeriodId">
        /// The id of the billing period resource that the usage belongs to.
        /// Serialized Name: Marketplace.properties.billingPeriodId
        /// </param>
        /// <param name="usageStartOn">
        /// The start of the date time range covered by the usage detail.
        /// Serialized Name: Marketplace.properties.usageStart
        /// </param>
        /// <param name="usageEndOn">
        /// The end of the date time range covered by the usage detail.
        /// Serialized Name: Marketplace.properties.usageEnd
        /// </param>
        /// <param name="resourceRate">
        /// The marketplace resource rate.
        /// Serialized Name: Marketplace.properties.resourceRate
        /// </param>
        /// <param name="offerName">
        /// The type of offer.
        /// Serialized Name: Marketplace.properties.offerName
        /// </param>
        /// <param name="resourceGroup">
        /// The name of resource group.
        /// Serialized Name: Marketplace.properties.resourceGroup
        /// </param>
        /// <param name="additionalInfo">
        /// Additional information.
        /// Serialized Name: Marketplace.properties.additionalInfo
        /// </param>
        /// <param name="orderNumber">
        /// The order number.
        /// Serialized Name: Marketplace.properties.orderNumber
        /// </param>
        /// <param name="instanceName">
        /// The name of the resource instance that the usage is about.
        /// Serialized Name: Marketplace.properties.instanceName
        /// </param>
        /// <param name="instanceId">
        /// The uri of the resource instance that the usage is about.
        /// Serialized Name: Marketplace.properties.instanceId
        /// </param>
        /// <param name="currency">
        /// The ISO currency in which the meter is charged, for example, USD.
        /// Serialized Name: Marketplace.properties.currency
        /// </param>
        /// <param name="consumedQuantity">
        /// The quantity of usage.
        /// Serialized Name: Marketplace.properties.consumedQuantity
        /// </param>
        /// <param name="unitOfMeasure">
        /// The unit of measure.
        /// Serialized Name: Marketplace.properties.unitOfMeasure
        /// </param>
        /// <param name="pretaxCost">
        /// The amount of cost before tax.
        /// Serialized Name: Marketplace.properties.pretaxCost
        /// </param>
        /// <param name="isEstimated">
        /// The estimated usage is subject to change.
        /// Serialized Name: Marketplace.properties.isEstimated
        /// </param>
        /// <param name="meterId">
        /// The meter id (GUID).
        /// Serialized Name: Marketplace.properties.meterId
        /// </param>
        /// <param name="subscriptionGuid">
        /// Subscription guid.
        /// Serialized Name: Marketplace.properties.subscriptionGuid
        /// </param>
        /// <param name="subscriptionName">
        /// Subscription name.
        /// Serialized Name: Marketplace.properties.subscriptionName
        /// </param>
        /// <param name="accountName">
        /// Account name.
        /// Serialized Name: Marketplace.properties.accountName
        /// </param>
        /// <param name="departmentName">
        /// Department name.
        /// Serialized Name: Marketplace.properties.departmentName
        /// </param>
        /// <param name="consumedService">
        /// Consumed service name.
        /// Serialized Name: Marketplace.properties.consumedService
        /// </param>
        /// <param name="costCenter">
        /// The cost center of this department if it is a department and a costcenter exists
        /// Serialized Name: Marketplace.properties.costCenter
        /// </param>
        /// <param name="additionalProperties">
        /// Additional details of this usage item. By default this is not populated, unless it&apos;s specified in $expand.
        /// Serialized Name: Marketplace.properties.additionalProperties
        /// </param>
        /// <param name="publisherName">
        /// The name of publisher.
        /// Serialized Name: Marketplace.properties.publisherName
        /// </param>
        /// <param name="planName">
        /// The name of plan.
        /// Serialized Name: Marketplace.properties.planName
        /// </param>
        /// <param name="isRecurringCharge">
        /// Flag indicating whether this is a recurring charge or not.
        /// Serialized Name: Marketplace.properties.isRecurringCharge
        /// </param>
        /// <param name="etag">
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </param>
        /// <param name="tags">
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </param>
        internal ConsumptionMarketplace(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string billingPeriodId, DateTimeOffset? usageStartOn, DateTimeOffset? usageEndOn, decimal? resourceRate, string offerName, string resourceGroup, string additionalInfo, string orderNumber, string instanceName, string instanceId, string currency, decimal? consumedQuantity, string unitOfMeasure, decimal? pretaxCost, bool? isEstimated, Guid? meterId, Guid? subscriptionGuid, string subscriptionName, string accountName, string departmentName, string consumedService, string costCenter, string additionalProperties, string publisherName, string planName, bool? isRecurringCharge, ETag? etag, IReadOnlyDictionary<string, string> tags) : base(id, name, resourceType, systemData)
        {
            BillingPeriodId = billingPeriodId;
            UsageStartOn = usageStartOn;
            UsageEndOn = usageEndOn;
            ResourceRate = resourceRate;
            OfferName = offerName;
            ResourceGroup = resourceGroup;
            AdditionalInfo = additionalInfo;
            OrderNumber = orderNumber;
            InstanceName = instanceName;
            InstanceId = instanceId;
            Currency = currency;
            ConsumedQuantity = consumedQuantity;
            UnitOfMeasure = unitOfMeasure;
            PretaxCost = pretaxCost;
            IsEstimated = isEstimated;
            MeterId = meterId;
            SubscriptionGuid = subscriptionGuid;
            SubscriptionName = subscriptionName;
            AccountName = accountName;
            DepartmentName = departmentName;
            ConsumedService = consumedService;
            CostCenter = costCenter;
            AdditionalProperties = additionalProperties;
            PublisherName = publisherName;
            PlanName = planName;
            IsRecurringCharge = isRecurringCharge;
            ETag = etag;
            Tags = tags;
        }

        /// <summary>
        /// The id of the billing period resource that the usage belongs to.
        /// Serialized Name: Marketplace.properties.billingPeriodId
        /// </summary>
        public string BillingPeriodId { get; }
        /// <summary>
        /// The start of the date time range covered by the usage detail.
        /// Serialized Name: Marketplace.properties.usageStart
        /// </summary>
        public DateTimeOffset? UsageStartOn { get; }
        /// <summary>
        /// The end of the date time range covered by the usage detail.
        /// Serialized Name: Marketplace.properties.usageEnd
        /// </summary>
        public DateTimeOffset? UsageEndOn { get; }
        /// <summary>
        /// The marketplace resource rate.
        /// Serialized Name: Marketplace.properties.resourceRate
        /// </summary>
        public decimal? ResourceRate { get; }
        /// <summary>
        /// The type of offer.
        /// Serialized Name: Marketplace.properties.offerName
        /// </summary>
        public string OfferName { get; }
        /// <summary>
        /// The name of resource group.
        /// Serialized Name: Marketplace.properties.resourceGroup
        /// </summary>
        public string ResourceGroup { get; }
        /// <summary>
        /// Additional information.
        /// Serialized Name: Marketplace.properties.additionalInfo
        /// </summary>
        public string AdditionalInfo { get; }
        /// <summary>
        /// The order number.
        /// Serialized Name: Marketplace.properties.orderNumber
        /// </summary>
        public string OrderNumber { get; }
        /// <summary>
        /// The name of the resource instance that the usage is about.
        /// Serialized Name: Marketplace.properties.instanceName
        /// </summary>
        public string InstanceName { get; }
        /// <summary>
        /// The uri of the resource instance that the usage is about.
        /// Serialized Name: Marketplace.properties.instanceId
        /// </summary>
        public string InstanceId { get; }
        /// <summary>
        /// The ISO currency in which the meter is charged, for example, USD.
        /// Serialized Name: Marketplace.properties.currency
        /// </summary>
        public string Currency { get; }
        /// <summary>
        /// The quantity of usage.
        /// Serialized Name: Marketplace.properties.consumedQuantity
        /// </summary>
        public decimal? ConsumedQuantity { get; }
        /// <summary>
        /// The unit of measure.
        /// Serialized Name: Marketplace.properties.unitOfMeasure
        /// </summary>
        public string UnitOfMeasure { get; }
        /// <summary>
        /// The amount of cost before tax.
        /// Serialized Name: Marketplace.properties.pretaxCost
        /// </summary>
        public decimal? PretaxCost { get; }
        /// <summary>
        /// The estimated usage is subject to change.
        /// Serialized Name: Marketplace.properties.isEstimated
        /// </summary>
        public bool? IsEstimated { get; }
        /// <summary>
        /// The meter id (GUID).
        /// Serialized Name: Marketplace.properties.meterId
        /// </summary>
        public Guid? MeterId { get; }
        /// <summary>
        /// Subscription guid.
        /// Serialized Name: Marketplace.properties.subscriptionGuid
        /// </summary>
        public Guid? SubscriptionGuid { get; }
        /// <summary>
        /// Subscription name.
        /// Serialized Name: Marketplace.properties.subscriptionName
        /// </summary>
        public string SubscriptionName { get; }
        /// <summary>
        /// Account name.
        /// Serialized Name: Marketplace.properties.accountName
        /// </summary>
        public string AccountName { get; }
        /// <summary>
        /// Department name.
        /// Serialized Name: Marketplace.properties.departmentName
        /// </summary>
        public string DepartmentName { get; }
        /// <summary>
        /// Consumed service name.
        /// Serialized Name: Marketplace.properties.consumedService
        /// </summary>
        public string ConsumedService { get; }
        /// <summary>
        /// The cost center of this department if it is a department and a costcenter exists
        /// Serialized Name: Marketplace.properties.costCenter
        /// </summary>
        public string CostCenter { get; }
        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it&apos;s specified in $expand.
        /// Serialized Name: Marketplace.properties.additionalProperties
        /// </summary>
        public string AdditionalProperties { get; }
        /// <summary>
        /// The name of publisher.
        /// Serialized Name: Marketplace.properties.publisherName
        /// </summary>
        public string PublisherName { get; }
        /// <summary>
        /// The name of plan.
        /// Serialized Name: Marketplace.properties.planName
        /// </summary>
        public string PlanName { get; }
        /// <summary>
        /// Flag indicating whether this is a recurring charge or not.
        /// Serialized Name: Marketplace.properties.isRecurringCharge
        /// </summary>
        public bool? IsRecurringCharge { get; }
        /// <summary>
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </summary>
        public ETag? ETag { get; }
        /// <summary>
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
