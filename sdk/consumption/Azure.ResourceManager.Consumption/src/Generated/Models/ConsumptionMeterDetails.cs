// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary>
    /// The properties of the meter detail.
    /// Serialized Name: MeterDetails
    /// </summary>
    public partial class ConsumptionMeterDetails
    {
        /// <summary> Initializes a new instance of ConsumptionMeterDetails. </summary>
        internal ConsumptionMeterDetails()
        {
        }

        /// <summary> Initializes a new instance of ConsumptionMeterDetails. </summary>
        /// <param name="meterName">
        /// The name of the meter, within the given meter category
        /// Serialized Name: MeterDetails.meterName
        /// </param>
        /// <param name="meterCategory">
        /// The category of the meter, for example, &apos;Cloud services&apos;, &apos;Networking&apos;, etc..
        /// Serialized Name: MeterDetails.meterCategory
        /// </param>
        /// <param name="meterSubCategory">
        /// The subcategory of the meter, for example, &apos;A6 Cloud services&apos;, &apos;ExpressRoute (IXP)&apos;, etc..
        /// Serialized Name: MeterDetails.meterSubCategory
        /// </param>
        /// <param name="unit">
        /// The unit in which the meter consumption is charged, for example, &apos;Hours&apos;, &apos;GB&apos;, etc.
        /// Serialized Name: MeterDetails.unit
        /// </param>
        /// <param name="meterLocation">
        /// The location in which the Azure service is available.
        /// Serialized Name: MeterDetails.meterLocation
        /// </param>
        /// <param name="totalIncludedQuantity">
        /// The total included quantity associated with the offer.
        /// Serialized Name: MeterDetails.totalIncludedQuantity
        /// </param>
        /// <param name="pretaxStandardRate">
        /// The pretax listing price.
        /// Serialized Name: MeterDetails.pretaxStandardRate
        /// </param>
        /// <param name="serviceName">
        /// The name of the service.
        /// Serialized Name: MeterDetails.serviceName
        /// </param>
        /// <param name="serviceTier">
        /// The service tier.
        /// Serialized Name: MeterDetails.serviceTier
        /// </param>
        internal ConsumptionMeterDetails(string meterName, string meterCategory, string meterSubCategory, string unit, string meterLocation, decimal? totalIncludedQuantity, decimal? pretaxStandardRate, string serviceName, string serviceTier)
        {
            MeterName = meterName;
            MeterCategory = meterCategory;
            MeterSubCategory = meterSubCategory;
            Unit = unit;
            MeterLocation = meterLocation;
            TotalIncludedQuantity = totalIncludedQuantity;
            PretaxStandardRate = pretaxStandardRate;
            ServiceName = serviceName;
            ServiceTier = serviceTier;
        }

        /// <summary>
        /// The name of the meter, within the given meter category
        /// Serialized Name: MeterDetails.meterName
        /// </summary>
        public string MeterName { get; }
        /// <summary>
        /// The category of the meter, for example, &apos;Cloud services&apos;, &apos;Networking&apos;, etc..
        /// Serialized Name: MeterDetails.meterCategory
        /// </summary>
        public string MeterCategory { get; }
        /// <summary>
        /// The subcategory of the meter, for example, &apos;A6 Cloud services&apos;, &apos;ExpressRoute (IXP)&apos;, etc..
        /// Serialized Name: MeterDetails.meterSubCategory
        /// </summary>
        public string MeterSubCategory { get; }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, &apos;Hours&apos;, &apos;GB&apos;, etc.
        /// Serialized Name: MeterDetails.unit
        /// </summary>
        public string Unit { get; }
        /// <summary>
        /// The location in which the Azure service is available.
        /// Serialized Name: MeterDetails.meterLocation
        /// </summary>
        public string MeterLocation { get; }
        /// <summary>
        /// The total included quantity associated with the offer.
        /// Serialized Name: MeterDetails.totalIncludedQuantity
        /// </summary>
        public decimal? TotalIncludedQuantity { get; }
        /// <summary>
        /// The pretax listing price.
        /// Serialized Name: MeterDetails.pretaxStandardRate
        /// </summary>
        public decimal? PretaxStandardRate { get; }
        /// <summary>
        /// The name of the service.
        /// Serialized Name: MeterDetails.serviceName
        /// </summary>
        public string ServiceName { get; }
        /// <summary>
        /// The service tier.
        /// Serialized Name: MeterDetails.serviceTier
        /// </summary>
        public string ServiceTier { get; }
    }
}
