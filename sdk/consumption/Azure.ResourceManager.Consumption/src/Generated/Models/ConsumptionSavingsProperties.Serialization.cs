// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Consumption.Models
{
    public partial class ConsumptionSavingsProperties
    {
        internal static ConsumptionSavingsProperties DeserializeConsumptionSavingsProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<ConsumptionCalculatedSavingsProperties>> calculatedSavings = default;
            Optional<int> lookBackPeriod = default;
            Optional<float> recommendedQuantity = default;
            Optional<string> reservationOrderTerm = default;
            Optional<string> savingsType = default;
            Optional<string> unitOfMeasure = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("calculatedSavings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ConsumptionCalculatedSavingsProperties> array = new List<ConsumptionCalculatedSavingsProperties>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ConsumptionCalculatedSavingsProperties.DeserializeConsumptionCalculatedSavingsProperties(item));
                    }
                    calculatedSavings = array;
                    continue;
                }
                if (property.NameEquals("lookBackPeriod"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lookBackPeriod = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("recommendedQuantity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    recommendedQuantity = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("reservationOrderTerm"u8))
                {
                    reservationOrderTerm = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("savingsType"u8))
                {
                    savingsType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("unitOfMeasure"u8))
                {
                    unitOfMeasure = property.Value.GetString();
                    continue;
                }
            }
            return new ConsumptionSavingsProperties(Optional.ToList(calculatedSavings), Optional.ToNullable(lookBackPeriod), Optional.ToNullable(recommendedQuantity), reservationOrderTerm.Value, savingsType.Value, unitOfMeasure.Value);
        }
    }
}
