// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary>
    /// A management group aggregated cost resource.
    /// Serialized Name: ManagementGroupAggregatedCostResult
    /// </summary>
    public partial class ConsumptionAggregatedCostResult : ResourceData
    {
        /// <summary> Initializes a new instance of ConsumptionAggregatedCostResult. </summary>
        internal ConsumptionAggregatedCostResult()
        {
            Children = new ChangeTrackingList<ConsumptionAggregatedCostResult>();
            IncludedSubscriptions = new ChangeTrackingList<string>();
            ExcludedSubscriptions = new ChangeTrackingList<string>();
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ConsumptionAggregatedCostResult. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="billingPeriodId">
        /// The id of the billing period resource that the aggregated cost belongs to.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.billingPeriodId
        /// </param>
        /// <param name="usageStartOn">
        /// The start of the date time range covered by aggregated cost.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.usageStart
        /// </param>
        /// <param name="usageEndOn">
        /// The end of the date time range covered by the aggregated cost.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.usageEnd
        /// </param>
        /// <param name="azureCharges">
        /// Azure Charges.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.azureCharges
        /// </param>
        /// <param name="marketplaceCharges">
        /// Marketplace Charges.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.marketplaceCharges
        /// </param>
        /// <param name="chargesBilledSeparately">
        /// Charges Billed Separately.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.chargesBilledSeparately
        /// </param>
        /// <param name="currency">
        /// The ISO currency in which the meter is charged, for example, USD.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.currency
        /// </param>
        /// <param name="children">
        /// Children of a management group
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.children
        /// </param>
        /// <param name="includedSubscriptions">
        /// List of subscription Guids included in the calculation of aggregated cost
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.includedSubscriptions
        /// </param>
        /// <param name="excludedSubscriptions">
        /// List of subscription Guids excluded from the calculation of aggregated cost
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.excludedSubscriptions
        /// </param>
        /// <param name="etag">
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </param>
        /// <param name="tags">
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </param>
        internal ConsumptionAggregatedCostResult(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string billingPeriodId, DateTimeOffset? usageStartOn, DateTimeOffset? usageEndOn, decimal? azureCharges, decimal? marketplaceCharges, decimal? chargesBilledSeparately, string currency, IReadOnlyList<ConsumptionAggregatedCostResult> children, IReadOnlyList<string> includedSubscriptions, IReadOnlyList<string> excludedSubscriptions, ETag? etag, IReadOnlyDictionary<string, string> tags) : base(id, name, resourceType, systemData)
        {
            BillingPeriodId = billingPeriodId;
            UsageStartOn = usageStartOn;
            UsageEndOn = usageEndOn;
            AzureCharges = azureCharges;
            MarketplaceCharges = marketplaceCharges;
            ChargesBilledSeparately = chargesBilledSeparately;
            Currency = currency;
            Children = children;
            IncludedSubscriptions = includedSubscriptions;
            ExcludedSubscriptions = excludedSubscriptions;
            ETag = etag;
            Tags = tags;
        }

        /// <summary>
        /// The id of the billing period resource that the aggregated cost belongs to.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.billingPeriodId
        /// </summary>
        public string BillingPeriodId { get; }
        /// <summary>
        /// The start of the date time range covered by aggregated cost.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.usageStart
        /// </summary>
        public DateTimeOffset? UsageStartOn { get; }
        /// <summary>
        /// The end of the date time range covered by the aggregated cost.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.usageEnd
        /// </summary>
        public DateTimeOffset? UsageEndOn { get; }
        /// <summary>
        /// Azure Charges.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.azureCharges
        /// </summary>
        public decimal? AzureCharges { get; }
        /// <summary>
        /// Marketplace Charges.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.marketplaceCharges
        /// </summary>
        public decimal? MarketplaceCharges { get; }
        /// <summary>
        /// Charges Billed Separately.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.chargesBilledSeparately
        /// </summary>
        public decimal? ChargesBilledSeparately { get; }
        /// <summary>
        /// The ISO currency in which the meter is charged, for example, USD.
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.currency
        /// </summary>
        public string Currency { get; }
        /// <summary>
        /// Children of a management group
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.children
        /// </summary>
        public IReadOnlyList<ConsumptionAggregatedCostResult> Children { get; }
        /// <summary>
        /// List of subscription Guids included in the calculation of aggregated cost
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.includedSubscriptions
        /// </summary>
        public IReadOnlyList<string> IncludedSubscriptions { get; }
        /// <summary>
        /// List of subscription Guids excluded from the calculation of aggregated cost
        /// Serialized Name: ManagementGroupAggregatedCostResult.properties.excludedSubscriptions
        /// </summary>
        public IReadOnlyList<string> ExcludedSubscriptions { get; }
        /// <summary>
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </summary>
        public ETag? ETag { get; }
        /// <summary>
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
