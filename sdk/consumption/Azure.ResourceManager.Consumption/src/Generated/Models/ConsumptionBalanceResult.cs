// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary>
    /// A balance resource.
    /// Serialized Name: Balance
    /// </summary>
    public partial class ConsumptionBalanceResult : ResourceData
    {
        /// <summary> Initializes a new instance of ConsumptionBalanceResult. </summary>
        internal ConsumptionBalanceResult()
        {
            NewPurchasesDetails = new ChangeTrackingList<ConsumptionBalanceNewPurchasesDetail>();
            AdjustmentDetails = new ChangeTrackingList<ConsumptionBalanceAdjustmentDetail>();
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ConsumptionBalanceResult. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="currency">
        /// The ISO currency in which the meter is charged, for example, USD.
        /// Serialized Name: Balance.properties.currency
        /// </param>
        /// <param name="beginningBalance">
        /// The beginning balance for the billing period.
        /// Serialized Name: Balance.properties.beginningBalance
        /// </param>
        /// <param name="endingBalance">
        /// The ending balance for the billing period (for open periods this will be updated daily).
        /// Serialized Name: Balance.properties.endingBalance
        /// </param>
        /// <param name="newPurchases">
        /// Total new purchase amount.
        /// Serialized Name: Balance.properties.newPurchases
        /// </param>
        /// <param name="adjustments">
        /// Total adjustment amount.
        /// Serialized Name: Balance.properties.adjustments
        /// </param>
        /// <param name="utilized">
        /// Total Commitment usage.
        /// Serialized Name: Balance.properties.utilized
        /// </param>
        /// <param name="serviceOverage">
        /// Overage for Azure services.
        /// Serialized Name: Balance.properties.serviceOverage
        /// </param>
        /// <param name="chargesBilledSeparately">
        /// Charges Billed separately.
        /// Serialized Name: Balance.properties.chargesBilledSeparately
        /// </param>
        /// <param name="totalOverage">
        /// serviceOverage + chargesBilledSeparately.
        /// Serialized Name: Balance.properties.totalOverage
        /// </param>
        /// <param name="totalUsage">
        /// Azure service commitment + total Overage.
        /// Serialized Name: Balance.properties.totalUsage
        /// </param>
        /// <param name="azureMarketplaceServiceCharges">
        /// Total charges for Azure Marketplace.
        /// Serialized Name: Balance.properties.azureMarketplaceServiceCharges
        /// </param>
        /// <param name="billingFrequency">
        /// The billing frequency.
        /// Serialized Name: Balance.properties.billingFrequency
        /// </param>
        /// <param name="isPriceHidden">
        /// Price is hidden or not.
        /// Serialized Name: Balance.properties.priceHidden
        /// </param>
        /// <param name="newPurchasesDetails">
        /// List of new purchases.
        /// Serialized Name: Balance.properties.newPurchasesDetails
        /// </param>
        /// <param name="adjustmentDetails">
        /// List of Adjustments (Promo credit, SIE credit etc.).
        /// Serialized Name: Balance.properties.adjustmentDetails
        /// </param>
        /// <param name="etag">
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </param>
        /// <param name="tags">
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </param>
        internal ConsumptionBalanceResult(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string currency, decimal? beginningBalance, decimal? endingBalance, decimal? newPurchases, decimal? adjustments, decimal? utilized, decimal? serviceOverage, decimal? chargesBilledSeparately, decimal? totalOverage, decimal? totalUsage, decimal? azureMarketplaceServiceCharges, ConsumptionBillingFrequency? billingFrequency, bool? isPriceHidden, IReadOnlyList<ConsumptionBalanceNewPurchasesDetail> newPurchasesDetails, IReadOnlyList<ConsumptionBalanceAdjustmentDetail> adjustmentDetails, ETag? etag, IReadOnlyDictionary<string, string> tags) : base(id, name, resourceType, systemData)
        {
            Currency = currency;
            BeginningBalance = beginningBalance;
            EndingBalance = endingBalance;
            NewPurchases = newPurchases;
            Adjustments = adjustments;
            Utilized = utilized;
            ServiceOverage = serviceOverage;
            ChargesBilledSeparately = chargesBilledSeparately;
            TotalOverage = totalOverage;
            TotalUsage = totalUsage;
            AzureMarketplaceServiceCharges = azureMarketplaceServiceCharges;
            BillingFrequency = billingFrequency;
            IsPriceHidden = isPriceHidden;
            NewPurchasesDetails = newPurchasesDetails;
            AdjustmentDetails = adjustmentDetails;
            ETag = etag;
            Tags = tags;
        }

        /// <summary>
        /// The ISO currency in which the meter is charged, for example, USD.
        /// Serialized Name: Balance.properties.currency
        /// </summary>
        public string Currency { get; }
        /// <summary>
        /// The beginning balance for the billing period.
        /// Serialized Name: Balance.properties.beginningBalance
        /// </summary>
        public decimal? BeginningBalance { get; }
        /// <summary>
        /// The ending balance for the billing period (for open periods this will be updated daily).
        /// Serialized Name: Balance.properties.endingBalance
        /// </summary>
        public decimal? EndingBalance { get; }
        /// <summary>
        /// Total new purchase amount.
        /// Serialized Name: Balance.properties.newPurchases
        /// </summary>
        public decimal? NewPurchases { get; }
        /// <summary>
        /// Total adjustment amount.
        /// Serialized Name: Balance.properties.adjustments
        /// </summary>
        public decimal? Adjustments { get; }
        /// <summary>
        /// Total Commitment usage.
        /// Serialized Name: Balance.properties.utilized
        /// </summary>
        public decimal? Utilized { get; }
        /// <summary>
        /// Overage for Azure services.
        /// Serialized Name: Balance.properties.serviceOverage
        /// </summary>
        public decimal? ServiceOverage { get; }
        /// <summary>
        /// Charges Billed separately.
        /// Serialized Name: Balance.properties.chargesBilledSeparately
        /// </summary>
        public decimal? ChargesBilledSeparately { get; }
        /// <summary>
        /// serviceOverage + chargesBilledSeparately.
        /// Serialized Name: Balance.properties.totalOverage
        /// </summary>
        public decimal? TotalOverage { get; }
        /// <summary>
        /// Azure service commitment + total Overage.
        /// Serialized Name: Balance.properties.totalUsage
        /// </summary>
        public decimal? TotalUsage { get; }
        /// <summary>
        /// Total charges for Azure Marketplace.
        /// Serialized Name: Balance.properties.azureMarketplaceServiceCharges
        /// </summary>
        public decimal? AzureMarketplaceServiceCharges { get; }
        /// <summary>
        /// The billing frequency.
        /// Serialized Name: Balance.properties.billingFrequency
        /// </summary>
        public ConsumptionBillingFrequency? BillingFrequency { get; }
        /// <summary>
        /// Price is hidden or not.
        /// Serialized Name: Balance.properties.priceHidden
        /// </summary>
        public bool? IsPriceHidden { get; }
        /// <summary>
        /// List of new purchases.
        /// Serialized Name: Balance.properties.newPurchasesDetails
        /// </summary>
        public IReadOnlyList<ConsumptionBalanceNewPurchasesDetail> NewPurchasesDetails { get; }
        /// <summary>
        /// List of Adjustments (Promo credit, SIE credit etc.).
        /// Serialized Name: Balance.properties.adjustmentDetails
        /// </summary>
        public IReadOnlyList<ConsumptionBalanceAdjustmentDetail> AdjustmentDetails { get; }
        /// <summary>
        /// The etag for the resource.
        /// Serialized Name: Resource.etag
        /// </summary>
        public ETag? ETag { get; }
        /// <summary>
        /// Resource tags.
        /// Serialized Name: Resource.tags
        /// </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
