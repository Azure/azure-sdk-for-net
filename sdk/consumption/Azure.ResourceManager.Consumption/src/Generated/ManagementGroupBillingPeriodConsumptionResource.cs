// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Globalization;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;
using Azure.ResourceManager.Consumption.Models;

namespace Azure.ResourceManager.Consumption
{
    /// <summary>
    /// A class extending from the ManagementGroupBillingPeriodResource in Azure.ResourceManager.Consumption along with the instance operations that can be performed on it.
    /// You can only construct a <see cref="ManagementGroupBillingPeriodConsumptionResource" /> from a <see cref="ResourceIdentifier" /> with a resource type of Microsoft.Billing/billingPeriods.
    /// </summary>
    public partial class ManagementGroupBillingPeriodConsumptionResource : ArmResource
    {

        /// <summary>
        /// Provides the aggregate cost of a management group and all child management groups by specified billing period
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/aggregatedCost</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AggregatedCost_GetForBillingPeriodByManagementGroup</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<ConsumptionAggregatedCostResult>> GetAggregatedCostWithBillingPeriodAsync(CancellationToken cancellationToken = default)
        {
            using var scope = _aggregatedCostClientDiagnostics.CreateScope("ManagementGroupBillingPeriodConsumptionResource.GetAggregatedCostWithBillingPeriod");
            scope.Start();
            try
            {
                var response = await _aggregatedCostRestClient.GetForBillingPeriodByManagementGroupAsync(Id.Parent.Name, Id.Name, cancellationToken).ConfigureAwait(false);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Provides the aggregate cost of a management group and all child management groups by specified billing period
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/aggregatedCost</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AggregatedCost_GetForBillingPeriodByManagementGroup</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<ConsumptionAggregatedCostResult> GetAggregatedCostWithBillingPeriod(CancellationToken cancellationToken = default)
        {
            using var scope = _aggregatedCostClientDiagnostics.CreateScope("ManagementGroupBillingPeriodConsumptionResource.GetAggregatedCostWithBillingPeriod");
            scope.Start();
            try
            {
                var response = _aggregatedCostRestClient.GetForBillingPeriodByManagementGroup(Id.Parent.Name, Id.Name, cancellationToken);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
