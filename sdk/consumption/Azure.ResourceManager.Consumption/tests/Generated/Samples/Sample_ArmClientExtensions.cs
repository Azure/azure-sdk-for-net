// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Consumption.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Consumption.Samples
{
    public partial class Sample_ArmClientExtensions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetBudgets_BudgetsList()
        {
            // Generated from example definition: specification/consumption/resource-manager/Microsoft.Consumption/stable/2024-08-01/examples/BudgetsList.json
            // this example is just showing the usage of "Budgets_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // invoke the operation and iterate over the result
            ResourceIdentifier scope = new ResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000");
            await foreach (ConsumptionBudget item in client.GetBudgetsAsync(scope))
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetBudget_Budget()
        {
            // Generated from example definition: specification/consumption/resource-manager/Microsoft.Consumption/stable/2024-08-01/examples/Budget.json
            // this example is just showing the usage of "Budgets_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // invoke the operation
            ResourceIdentifier scope = new ResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000");
            string budgetName = "TestBudget";
            ConsumptionBudget result = await client.GetBudgetAsync(scope, budgetName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task DeleteBudget_DeleteBudget()
        {
            // Generated from example definition: specification/consumption/resource-manager/Microsoft.Consumption/stable/2024-08-01/examples/DeleteBudget.json
            // this example is just showing the usage of "Budgets_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // invoke the operation
            ResourceIdentifier scope = new ResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000");
            string budgetName = "TestBudget";
            await client.DeleteBudgetAsync(scope, budgetName);

            Console.WriteLine("Succeeded");
        }
    }
}
