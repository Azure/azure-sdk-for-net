// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The start and end date for a budget.
    /// </summary>
    public partial class BudgetTimePeriod
    {
        /// <summary>
        /// Initializes a new instance of the BudgetTimePeriod class.
        /// </summary>
        public BudgetTimePeriod()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BudgetTimePeriod class.
        /// </summary>
        /// <param name="startDate">The start date for the budget.</param>
        /// <param name="endDate">The end date for the budget. If not provided,
        /// we default this to 10 years from the start date.</param>
        public BudgetTimePeriod(System.DateTime startDate, System.DateTime? endDate = default(System.DateTime?))
        {
            StartDate = startDate;
            EndDate = endDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the start date for the budget.
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public System.DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets the end date for the budget. If not provided, we
        /// default this to 10 years from the start date.
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
