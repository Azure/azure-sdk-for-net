// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of the meter detail.
    /// </summary>
    public partial class MeterDetailsResponse
    {
        /// <summary>
        /// Initializes a new instance of the MeterDetailsResponse class.
        /// </summary>
        public MeterDetailsResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MeterDetailsResponse class.
        /// </summary>
        /// <param name="meterName">The name of the meter, within the given
        /// meter category</param>
        /// <param name="meterCategory">The category of the meter, for example,
        /// 'Cloud services', 'Networking', etc..</param>
        /// <param name="meterSubCategory">The subcategory of the meter, for
        /// example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..</param>
        /// <param name="unitOfMeasure">The unit in which the meter consumption
        /// is charged, for example, 'Hours', 'GB', etc.</param>
        /// <param name="serviceFamily">The service family.</param>
        public MeterDetailsResponse(string meterName = default(string), string meterCategory = default(string), string meterSubCategory = default(string), string unitOfMeasure = default(string), string serviceFamily = default(string))
        {
            MeterName = meterName;
            MeterCategory = meterCategory;
            MeterSubCategory = meterSubCategory;
            UnitOfMeasure = unitOfMeasure;
            ServiceFamily = serviceFamily;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the meter, within the given meter category
        /// </summary>
        [JsonProperty(PropertyName = "meterName")]
        public string MeterName { get; private set; }

        /// <summary>
        /// Gets the category of the meter, for example, 'Cloud services',
        /// 'Networking', etc..
        /// </summary>
        [JsonProperty(PropertyName = "meterCategory")]
        public string MeterCategory { get; private set; }

        /// <summary>
        /// Gets the subcategory of the meter, for example, 'A6 Cloud
        /// services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [JsonProperty(PropertyName = "meterSubCategory")]
        public string MeterSubCategory { get; private set; }

        /// <summary>
        /// Gets the unit in which the meter consumption is charged, for
        /// example, 'Hours', 'GB', etc.
        /// </summary>
        [JsonProperty(PropertyName = "unitOfMeasure")]
        public string UnitOfMeasure { get; private set; }

        /// <summary>
        /// Gets the service family.
        /// </summary>
        [JsonProperty(PropertyName = "serviceFamily")]
        public string ServiceFamily { get; private set; }

    }
}
