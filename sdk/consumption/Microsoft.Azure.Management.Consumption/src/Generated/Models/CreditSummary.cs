// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A credit summary resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CreditSummary : Resource
    {
        /// <summary>
        /// Initializes a new instance of the CreditSummary class.
        /// </summary>
        public CreditSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreditSummary class.
        /// </summary>
        /// <param name="id">The full qualified ARM ID of an event.</param>
        /// <param name="name">The ID that uniquely identifies an event.
        /// </param>
        /// <param name="type">Resource type.</param>
        /// <param name="etag">The etag for the resource.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="balanceSummary">Summary of balances associated with
        /// this credit summary.</param>
        /// <param name="pendingCreditAdjustments">Pending credit
        /// adjustments.</param>
        /// <param name="expiredCredit">Expired credit.</param>
        /// <param name="pendingEligibleCharges">Pending eligible
        /// charges.</param>
        /// <param name="creditCurrency">The credit currency.</param>
        /// <param name="billingCurrency">The billing currency.</param>
        /// <param name="reseller">Credit's reseller.</param>
        public CreditSummary(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), CreditBalanceSummary balanceSummary = default(CreditBalanceSummary), Amount pendingCreditAdjustments = default(Amount), Amount expiredCredit = default(Amount), Amount pendingEligibleCharges = default(Amount), string creditCurrency = default(string), string billingCurrency = default(string), Reseller reseller = default(Reseller))
            : base(id, name, type, etag, tags)
        {
            BalanceSummary = balanceSummary;
            PendingCreditAdjustments = pendingCreditAdjustments;
            ExpiredCredit = expiredCredit;
            PendingEligibleCharges = pendingEligibleCharges;
            CreditCurrency = creditCurrency;
            BillingCurrency = billingCurrency;
            Reseller = reseller;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets summary of balances associated with this credit summary.
        /// </summary>
        [JsonProperty(PropertyName = "properties.balanceSummary")]
        public CreditBalanceSummary BalanceSummary { get; private set; }

        /// <summary>
        /// Gets pending credit adjustments.
        /// </summary>
        [JsonProperty(PropertyName = "properties.pendingCreditAdjustments")]
        public Amount PendingCreditAdjustments { get; private set; }

        /// <summary>
        /// Gets expired credit.
        /// </summary>
        [JsonProperty(PropertyName = "properties.expiredCredit")]
        public Amount ExpiredCredit { get; private set; }

        /// <summary>
        /// Gets pending eligible charges.
        /// </summary>
        [JsonProperty(PropertyName = "properties.pendingEligibleCharges")]
        public Amount PendingEligibleCharges { get; private set; }

        /// <summary>
        /// Gets the credit currency.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creditCurrency")]
        public string CreditCurrency { get; private set; }

        /// <summary>
        /// Gets the billing currency.
        /// </summary>
        [JsonProperty(PropertyName = "properties.billingCurrency")]
        public string BillingCurrency { get; private set; }

        /// <summary>
        /// Gets credit's reseller.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reseller")]
        public Reseller Reseller { get; private set; }

    }
}
