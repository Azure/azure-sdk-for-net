// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A resource listing all tags.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TagsResult : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the TagsResult class.
        /// </summary>
        public TagsResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagsResult class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="eTag">eTag of the resource. To handle concurrent
        /// update scenario, this field will be used to determine whether the
        /// user is updating the latest version or not.</param>
        /// <param name="tags">A list of Tag.</param>
        public TagsResult(string id = default(string), string name = default(string), string type = default(string), string eTag = default(string), IList<Tag> tags = default(IList<Tag>))
            : base(id, name, type, eTag)
        {
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a list of Tag.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tags")]
        public IList<Tag> Tags { get; set; }

    }
}
