// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A lot summary resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class LotSummary : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the LotSummary class.
        /// </summary>
        public LotSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LotSummary class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="eTag">eTag of the resource. To handle concurrent
        /// update scenario, this field will be used to determine whether the
        /// user is updating the latest version or not.</param>
        /// <param name="originalAmount">The original amount of a lot.</param>
        /// <param name="closedBalance">The balance as of the last
        /// invoice.</param>
        /// <param name="source">The source of the lot. Possible values
        /// include: 'PurchasedCredit', 'PromotionalCredit',
        /// 'ConsumptionCommitment'</param>
        /// <param name="startDate">The date when the lot became
        /// effective.</param>
        /// <param name="expirationDate">The expiration date of a lot.</param>
        /// <param name="poNumber">The po number of the invoice on which the
        /// lot was added. This property is not available for
        /// ConsumptionCommitment lots.</param>
        /// <param name="purchasedDate">The date when the lot was
        /// added.</param>
        /// <param name="status">The status of the lot. Possible values
        /// include: 'None', 'Active', 'Inactive', 'Expired', 'Complete',
        /// 'Canceled'</param>
        /// <param name="creditCurrency">The currency of the lot.</param>
        /// <param name="billingCurrency">The billing currency of the
        /// lot.</param>
        /// <param name="originalAmountInBillingCurrency">The original amount
        /// of a lot in billing currency.</param>
        /// <param name="closedBalanceInBillingCurrency">The balance as of the
        /// last invoice in billing currency.</param>
        /// <param name="reseller">The reseller of the lot.</param>
        /// <param name="lotSummaryETag">The eTag for the resource.</param>
        public LotSummary(string id = default(string), string name = default(string), string type = default(string), string eTag = default(string), Amount originalAmount = default(Amount), Amount closedBalance = default(Amount), string source = default(string), System.DateTime? startDate = default(System.DateTime?), System.DateTime? expirationDate = default(System.DateTime?), string poNumber = default(string), System.DateTime? purchasedDate = default(System.DateTime?), string status = default(string), string creditCurrency = default(string), string billingCurrency = default(string), AmountWithExchangeRate originalAmountInBillingCurrency = default(AmountWithExchangeRate), AmountWithExchangeRate closedBalanceInBillingCurrency = default(AmountWithExchangeRate), Reseller reseller = default(Reseller), string lotSummaryETag = default(string))
            : base(id, name, type, eTag)
        {
            OriginalAmount = originalAmount;
            ClosedBalance = closedBalance;
            Source = source;
            StartDate = startDate;
            ExpirationDate = expirationDate;
            PoNumber = poNumber;
            PurchasedDate = purchasedDate;
            Status = status;
            CreditCurrency = creditCurrency;
            BillingCurrency = billingCurrency;
            OriginalAmountInBillingCurrency = originalAmountInBillingCurrency;
            ClosedBalanceInBillingCurrency = closedBalanceInBillingCurrency;
            Reseller = reseller;
            LotSummaryETag = lotSummaryETag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the original amount of a lot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.originalAmount")]
        public Amount OriginalAmount { get; private set; }

        /// <summary>
        /// Gets the balance as of the last invoice.
        /// </summary>
        [JsonProperty(PropertyName = "properties.closedBalance")]
        public Amount ClosedBalance { get; private set; }

        /// <summary>
        /// Gets the source of the lot. Possible values include:
        /// 'PurchasedCredit', 'PromotionalCredit', 'ConsumptionCommitment'
        /// </summary>
        [JsonProperty(PropertyName = "properties.source")]
        public string Source { get; private set; }

        /// <summary>
        /// Gets the date when the lot became effective.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startDate")]
        public System.DateTime? StartDate { get; private set; }

        /// <summary>
        /// Gets the expiration date of a lot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.expirationDate")]
        public System.DateTime? ExpirationDate { get; private set; }

        /// <summary>
        /// Gets the po number of the invoice on which the lot was added. This
        /// property is not available for ConsumptionCommitment lots.
        /// </summary>
        [JsonProperty(PropertyName = "properties.poNumber")]
        public string PoNumber { get; private set; }

        /// <summary>
        /// Gets the date when the lot was added.
        /// </summary>
        [JsonProperty(PropertyName = "properties.purchasedDate")]
        public System.DateTime? PurchasedDate { get; private set; }

        /// <summary>
        /// Gets the status of the lot. Possible values include: 'None',
        /// 'Active', 'Inactive', 'Expired', 'Complete', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the currency of the lot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creditCurrency")]
        public string CreditCurrency { get; private set; }

        /// <summary>
        /// Gets the billing currency of the lot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.billingCurrency")]
        public string BillingCurrency { get; private set; }

        /// <summary>
        /// Gets the original amount of a lot in billing currency.
        /// </summary>
        [JsonProperty(PropertyName = "properties.originalAmountInBillingCurrency")]
        public AmountWithExchangeRate OriginalAmountInBillingCurrency { get; private set; }

        /// <summary>
        /// Gets the balance as of the last invoice in billing currency.
        /// </summary>
        [JsonProperty(PropertyName = "properties.closedBalanceInBillingCurrency")]
        public AmountWithExchangeRate ClosedBalanceInBillingCurrency { get; private set; }

        /// <summary>
        /// Gets the reseller of the lot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reseller")]
        public Reseller Reseller { get; private set; }

        /// <summary>
        /// Gets the eTag for the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.eTag")]
        public string LotSummaryETag { get; private set; }

    }
}
