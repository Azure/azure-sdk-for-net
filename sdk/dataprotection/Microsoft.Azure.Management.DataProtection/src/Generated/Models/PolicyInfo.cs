// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// PolicyInfo
    /// </summary>
    /// <remarks>
    /// Policy Info in backupInstance
    /// </remarks>
    public partial class PolicyInfo
    {
        /// <summary>
        /// Initializes a new instance of the PolicyInfo class.
        /// </summary>
        public PolicyInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyInfo class.
        /// </summary>
        /// <param name="policyParameters">Policy parameters for the backup
        /// instance</param>
        public PolicyInfo(string policyId, string policyVersion = default(string), PolicyParameters policyParameters = default(PolicyParameters))
        {
            PolicyId = policyId;
            PolicyVersion = policyVersion;
            PolicyParameters = policyParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "policyId")]
        public string PolicyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "policyVersion")]
        public string PolicyVersion { get; private set; }

        /// <summary>
        /// Gets or sets policy parameters for the backup instance
        /// </summary>
        [JsonProperty(PropertyName = "policyParameters")]
        public PolicyParameters PolicyParameters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PolicyId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PolicyId");
            }
        }
    }
}
