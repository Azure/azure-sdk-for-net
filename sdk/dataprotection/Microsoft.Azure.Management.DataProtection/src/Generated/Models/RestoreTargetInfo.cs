// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Class encapsulating restore target parameters
    /// </summary>
    public partial class RestoreTargetInfo : RestoreTargetInfoBase
    {
        /// <summary>
        /// Initializes a new instance of the RestoreTargetInfo class.
        /// </summary>
        public RestoreTargetInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestoreTargetInfo class.
        /// </summary>
        /// <param name="datasourceInfo">Information of target DS</param>
        /// <param name="restoreLocation">Target Restore region</param>
        /// <param name="datasourceSetInfo">Information of target DS
        /// Set</param>
        /// <param name="datasourceAuthCredentials">Credentials to use to
        /// authenticate with data source provider.</param>
        public RestoreTargetInfo(Datasource datasourceInfo, string restoreLocation = default(string), DatasourceSet datasourceSetInfo = default(DatasourceSet), AuthCredentials datasourceAuthCredentials = default(AuthCredentials))
            : base(restoreLocation)
        {
            DatasourceInfo = datasourceInfo;
            DatasourceSetInfo = datasourceSetInfo;
            DatasourceAuthCredentials = datasourceAuthCredentials;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information of target DS
        /// </summary>
        [JsonProperty(PropertyName = "datasourceInfo")]
        public Datasource DatasourceInfo { get; set; }

        /// <summary>
        /// Gets or sets information of target DS Set
        /// </summary>
        [JsonProperty(PropertyName = "datasourceSetInfo")]
        public DatasourceSet DatasourceSetInfo { get; set; }

        /// <summary>
        /// Gets or sets credentials to use to authenticate with data source
        /// provider.
        /// </summary>
        [JsonProperty(PropertyName = "datasourceAuthCredentials")]
        public AuthCredentials DatasourceAuthCredentials { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DatasourceInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DatasourceInfo");
            }
            if (DatasourceInfo != null)
            {
                DatasourceInfo.Validate();
            }
            if (DatasourceSetInfo != null)
            {
                DatasourceSetInfo.Validate();
            }
        }
    }
}
