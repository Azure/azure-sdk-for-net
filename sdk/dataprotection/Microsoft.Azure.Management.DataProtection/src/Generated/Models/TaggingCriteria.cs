// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// TaggingCriteria
    /// </summary>
    /// <remarks>
    /// Tagging criteria
    /// </remarks>
    public partial class TaggingCriteria
    {
        /// <summary>
        /// Initializes a new instance of the TaggingCriteria class.
        /// </summary>
        public TaggingCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaggingCriteria class.
        /// </summary>
        /// <param name="isDefault">Specifies if tag is default.</param>
        /// <param name="taggingPriority">Retention Tag priority.</param>
        /// <param name="tagInfo">Retention tag information</param>
        /// <param name="criteria">Criteria which decides whether the tag can
        /// be applied to a triggered backup.</param>
        public TaggingCriteria(bool isDefault, long taggingPriority, RetentionTag tagInfo, IList<BackupCriteria> criteria = default(IList<BackupCriteria>))
        {
            Criteria = criteria;
            IsDefault = isDefault;
            TaggingPriority = taggingPriority;
            TagInfo = tagInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets criteria which decides whether the tag can be applied
        /// to a triggered backup.
        /// </summary>
        [JsonProperty(PropertyName = "criteria")]
        public IList<BackupCriteria> Criteria { get; set; }

        /// <summary>
        /// Gets or sets specifies if tag is default.
        /// </summary>
        [JsonProperty(PropertyName = "isDefault")]
        public bool IsDefault { get; set; }

        /// <summary>
        /// Gets or sets retention Tag priority.
        /// </summary>
        [JsonProperty(PropertyName = "taggingPriority")]
        public long TaggingPriority { get; set; }

        /// <summary>
        /// Gets or sets retention tag information
        /// </summary>
        [JsonProperty(PropertyName = "tagInfo")]
        public RetentionTag TagInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TagInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TagInfo");
            }
            if (TagInfo != null)
            {
                TagInfo.Validate();
            }
        }
    }
}
