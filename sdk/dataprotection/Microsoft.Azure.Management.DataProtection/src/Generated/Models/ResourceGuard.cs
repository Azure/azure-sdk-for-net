// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResourceGuard
    {
        /// <summary>
        /// Initializes a new instance of the ResourceGuard class.
        /// </summary>
        public ResourceGuard()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceGuard class.
        /// </summary>
        /// <param name="provisioningState">Provisioning state of the
        /// BackupVault resource. Possible values include: 'Failed',
        /// 'Provisioning', 'Succeeded', 'Unknown', 'Updating'</param>
        /// <param name="allowAutoApprovals">This flag indicates whether auto
        /// approval is allowed or not.</param>
        /// <param name="resourceGuardOperations">{readonly} List of operation
        /// details those are protected by the ResourceGuard resource</param>
        /// <param name="vaultCriticalOperationExclusionList">List of critical
        /// operations which are not protected by this resourceGuard</param>
        /// <param name="description">Description about the pre-req steps to
        /// perform all the critical operations.</param>
        public ResourceGuard(string provisioningState = default(string), bool? allowAutoApprovals = default(bool?), IList<ResourceGuardOperation> resourceGuardOperations = default(IList<ResourceGuardOperation>), IList<string> vaultCriticalOperationExclusionList = default(IList<string>), string description = default(string))
        {
            ProvisioningState = provisioningState;
            AllowAutoApprovals = allowAutoApprovals;
            ResourceGuardOperations = resourceGuardOperations;
            VaultCriticalOperationExclusionList = vaultCriticalOperationExclusionList;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state of the BackupVault resource. Possible
        /// values include: 'Failed', 'Provisioning', 'Succeeded', 'Unknown',
        /// 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets this flag indicates whether auto approval is allowed or not.
        /// </summary>
        [JsonProperty(PropertyName = "allowAutoApprovals")]
        public bool? AllowAutoApprovals { get; private set; }

        /// <summary>
        /// Gets {readonly} List of operation details those are protected by
        /// the ResourceGuard resource
        /// </summary>
        [JsonProperty(PropertyName = "resourceGuardOperations")]
        public IList<ResourceGuardOperation> ResourceGuardOperations { get; private set; }

        /// <summary>
        /// Gets or sets list of critical operations which are not protected by
        /// this resourceGuard
        /// </summary>
        [JsonProperty(PropertyName = "vaultCriticalOperationExclusionList")]
        public IList<string> VaultCriticalOperationExclusionList { get; set; }

        /// <summary>
        /// Gets description about the pre-req steps to perform all the
        /// critical operations.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; private set; }

    }
}
