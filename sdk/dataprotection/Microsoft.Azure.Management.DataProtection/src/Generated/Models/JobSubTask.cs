// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Details of Job's Sub Task
    /// </summary>
    public partial class JobSubTask
    {
        /// <summary>
        /// Initializes a new instance of the JobSubTask class.
        /// </summary>
        public JobSubTask()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobSubTask class.
        /// </summary>
        /// <param name="taskId">Task Id of the Sub Task</param>
        /// <param name="taskName">Name of the Sub Task</param>
        /// <param name="taskStatus">Status of the Sub Task</param>
        /// <param name="additionalDetails">Additional details of Sub
        /// Tasks</param>
        /// <param name="taskProgress">Progress of the Sub Task</param>
        public JobSubTask(int taskId, string taskName, string taskStatus, IDictionary<string, string> additionalDetails = default(IDictionary<string, string>), string taskProgress = default(string))
        {
            AdditionalDetails = additionalDetails;
            TaskId = taskId;
            TaskName = taskName;
            TaskProgress = taskProgress;
            TaskStatus = taskStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets additional details of Sub Tasks
        /// </summary>
        [JsonProperty(PropertyName = "additionalDetails")]
        public IDictionary<string, string> AdditionalDetails { get; set; }

        /// <summary>
        /// Gets or sets task Id of the Sub Task
        /// </summary>
        [JsonProperty(PropertyName = "taskId")]
        public int TaskId { get; set; }

        /// <summary>
        /// Gets or sets name of the Sub Task
        /// </summary>
        [JsonProperty(PropertyName = "taskName")]
        public string TaskName { get; set; }

        /// <summary>
        /// Gets progress of the Sub Task
        /// </summary>
        [JsonProperty(PropertyName = "taskProgress")]
        public string TaskProgress { get; private set; }

        /// <summary>
        /// Gets or sets status of the Sub Task
        /// </summary>
        [JsonProperty(PropertyName = "taskStatus")]
        public string TaskStatus { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TaskName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TaskName");
            }
            if (TaskStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TaskStatus");
            }
        }
    }
}
