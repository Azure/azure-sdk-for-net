// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// OperationResource
    /// </summary>
    /// <remarks>
    /// Operation Resource
    /// </remarks>
    public partial class OperationResource
    {
        /// <summary>
        /// Initializes a new instance of the OperationResource class.
        /// </summary>
        public OperationResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationResource class.
        /// </summary>
        /// <param name="endTime">End time of the operation</param>
        /// <param name="error">Required if status == failed or status ==
        /// canceled. This is the OData v4 error format, used by the RPC and
        /// will go into the v2.2 Azure REST API guidelines.
        /// The full set of optional properties (e.g. inner errors / details)
        /// can be found in the "Error Response" section.</param>
        /// <param name="id">It should match what is used to GET the operation
        /// result</param>
        /// <param name="name">It must match the last segment of the "id"
        /// field, and will typically be a GUID / system generated
        /// value</param>
        /// <param name="properties">End time of the operation</param>
        /// <param name="startTime">Start time of the operation</param>
        public OperationResource(System.DateTime? endTime = default(System.DateTime?), Error error = default(Error), string id = default(string), string name = default(string), OperationExtendedInfo properties = default(OperationExtendedInfo), System.DateTime? startTime = default(System.DateTime?), string status = default(string))
        {
            EndTime = endTime;
            Error = error;
            Id = id;
            Name = name;
            Properties = properties;
            StartTime = startTime;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets end time of the operation
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets required if status == failed or status == canceled.
        /// This is the OData v4 error format, used by the RPC and will go into
        /// the v2.2 Azure REST API guidelines.
        /// The full set of optional properties (e.g. inner errors / details)
        /// can be found in the "Error Response" section.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public Error Error { get; set; }

        /// <summary>
        /// Gets or sets it should match what is used to GET the operation
        /// result
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets it must match the last segment of the "id" field, and
        /// will typically be a GUID / system generated value
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets end time of the operation
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public OperationExtendedInfo Properties { get; set; }

        /// <summary>
        /// Gets or sets start time of the operation
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

    }
}
