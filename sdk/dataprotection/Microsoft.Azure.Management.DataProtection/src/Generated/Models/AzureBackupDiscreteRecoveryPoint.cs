// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AzureBackupDiscreteRecoveryPoint
    /// </summary>
    /// <remarks>
    /// Azure backup discrete RecoveryPoint
    /// </remarks>
    [Newtonsoft.Json.JsonObject("AzureBackupDiscreteRecoveryPoint")]
    public partial class AzureBackupDiscreteRecoveryPoint : AzureBackupRecoveryPoint
    {
        /// <summary>
        /// Initializes a new instance of the AzureBackupDiscreteRecoveryPoint
        /// class.
        /// </summary>
        public AzureBackupDiscreteRecoveryPoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureBackupDiscreteRecoveryPoint
        /// class.
        /// </summary>
        public AzureBackupDiscreteRecoveryPoint(System.DateTime recoveryPointTime, string friendlyName = default(string), IList<RecoveryPointDataStoreDetails> recoveryPointDataStoresDetails = default(IList<RecoveryPointDataStoreDetails>), string policyName = default(string), string policyVersion = default(string), string recoveryPointId = default(string), string recoveryPointType = default(string), string retentionTagName = default(string), string retentionTagVersion = default(string))
        {
            FriendlyName = friendlyName;
            RecoveryPointDataStoresDetails = recoveryPointDataStoresDetails;
            RecoveryPointTime = recoveryPointTime;
            PolicyName = policyName;
            PolicyVersion = policyVersion;
            RecoveryPointId = recoveryPointId;
            RecoveryPointType = recoveryPointType;
            RetentionTagName = retentionTagName;
            RetentionTagVersion = retentionTagVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointDataStoresDetails")]
        public IList<RecoveryPointDataStoreDetails> RecoveryPointDataStoresDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointTime")]
        public System.DateTime RecoveryPointTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "policyName")]
        public string PolicyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "policyVersion")]
        public string PolicyVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointId")]
        public string RecoveryPointId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointType")]
        public string RecoveryPointType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "retentionTagName")]
        public string RetentionTagName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "retentionTagVersion")]
        public string RetentionTagVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
