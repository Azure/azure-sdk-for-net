// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Error object used by layers that have access to localized content, and
    /// propagate that to user
    /// </summary>
    public partial class UserFacingError
    {
        /// <summary>
        /// Initializes a new instance of the UserFacingError class.
        /// </summary>
        public UserFacingError()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserFacingError class.
        /// </summary>
        /// <param name="code">Unique code for this error</param>
        /// <param name="details">Additional related Errors</param>
        /// <param name="innerError">Inner Error</param>
        /// <param name="isRetryable">Whether the operation will be retryable
        /// or not</param>
        /// <param name="isUserError">Whether the operation is due to a user
        /// error or service error</param>
        /// <param name="properties">Any key value pairs that can be injected
        /// inside error object</param>
        /// <param name="recommendedAction">RecommendedAction �
        /// localized.</param>
        /// <param name="target">Target of the error.</param>
        public UserFacingError(string code = default(string), IList<UserFacingError> details = default(IList<UserFacingError>), InnerError innerError = default(InnerError), bool? isRetryable = default(bool?), bool? isUserError = default(bool?), IDictionary<string, string> properties = default(IDictionary<string, string>), string message = default(string), IList<string> recommendedAction = default(IList<string>), string target = default(string))
        {
            Code = code;
            Details = details;
            InnerError = innerError;
            IsRetryable = isRetryable;
            IsUserError = isUserError;
            Properties = properties;
            Message = message;
            RecommendedAction = recommendedAction;
            Target = target;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique code for this error
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets additional related Errors
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public IList<UserFacingError> Details { get; set; }

        /// <summary>
        /// Gets or sets inner Error
        /// </summary>
        [JsonProperty(PropertyName = "innerError")]
        public InnerError InnerError { get; set; }

        /// <summary>
        /// Gets or sets whether the operation will be retryable or not
        /// </summary>
        [JsonProperty(PropertyName = "isRetryable")]
        public bool? IsRetryable { get; set; }

        /// <summary>
        /// Gets or sets whether the operation is due to a user error or
        /// service error
        /// </summary>
        [JsonProperty(PropertyName = "isUserError")]
        public bool? IsUserError { get; set; }

        /// <summary>
        /// Gets or sets any key value pairs that can be injected inside error
        /// object
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets recommendedAction � localized.
        /// </summary>
        [JsonProperty(PropertyName = "recommendedAction")]
        public IList<string> RecommendedAction { get; set; }

        /// <summary>
        /// Gets or sets target of the error.
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

    }
}
