// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ResourceGuardsOperations.
    /// </summary>
    public static partial class ResourceGuardsOperationsExtensions
    {
            /// <summary>
            /// Returns ResourceGuards collection belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<ResourceGuardResource> GetResourcesInSubscription(this IResourceGuardsOperations operations)
            {
                return operations.GetResourcesInSubscriptionAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ResourceGuardResource>> GetResourcesInSubscriptionAsync(this IResourceGuardsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetResourcesInSubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a ResourceGroup.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            public static IPage<ResourceGuardResource> GetResourcesInResourceGroup(this IResourceGuardsOperations operations, string resourceGroupName)
            {
                return operations.GetResourcesInResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a ResourceGroup.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ResourceGuardResource>> GetResourcesInResourceGroupAsync(this IResourceGuardsOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetResourcesInResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a ResourceGuard resource belonging to a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            /// <param name='parameters'>
            /// Request body for operation
            /// </param>
            public static ResourceGuardResource Put(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, ResourceGuardResource parameters)
            {
                return operations.PutAsync(resourceGroupName, resourceGuardsName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a ResourceGuard resource belonging to a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            /// <param name='parameters'>
            /// Request body for operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResourceGuardResource> PutAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, ResourceGuardResource parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns a ResourceGuard belonging to a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            public static ResourceGuardResource Get(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a ResourceGuard belonging to a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResourceGuardResource> GetAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a ResourceGuard resource from the resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            public static void Delete(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                operations.DeleteAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a ResourceGuard resource from the resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates a ResourceGuard resource belonging to a resource group. For
            /// example, updating tags for a resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            /// <param name='parameters'>
            /// Request body for operation
            /// </param>
            public static ResourceGuardResource Patch(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, PatchResourceRequestInput parameters)
            {
                return operations.PatchAsync(resourceGroupName, resourceGuardsName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a ResourceGuard resource belonging to a resource group. For
            /// example, updating tags for a resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// The name of ResourceGuard
            /// </param>
            /// <param name='parameters'>
            /// Request body for operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResourceGuardResource> PatchAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, PatchResourceRequestInput parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PatchWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            public static IPage<DppBaseResource> GetDisableSoftDeleteRequestsObjects(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetDisableSoftDeleteRequestsObjectsAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetDisableSoftDeleteRequestsObjectsAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDisableSoftDeleteRequestsObjectsWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            public static IPage<DppBaseResource> GetDeleteResourceGuardProxyRequestsObjects(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetDeleteResourceGuardProxyRequestsObjectsAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetDeleteResourceGuardProxyRequestsObjectsAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDeleteResourceGuardProxyRequestsObjectsWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            public static IPage<DppBaseResource> GetBackupSecurityPINRequestsObjects(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetBackupSecurityPINRequestsObjectsAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetBackupSecurityPINRequestsObjectsAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBackupSecurityPINRequestsObjectsWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            public static IPage<DppBaseResource> GetDeleteProtectedItemRequestsObjects(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetDeleteProtectedItemRequestsObjectsAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetDeleteProtectedItemRequestsObjectsAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDeleteProtectedItemRequestsObjectsWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            public static IPage<DppBaseResource> GetUpdateProtectionPolicyRequestsObjects(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetUpdateProtectionPolicyRequestsObjectsAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetUpdateProtectionPolicyRequestsObjectsAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUpdateProtectionPolicyRequestsObjectsWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            public static IPage<DppBaseResource> GetUpdateProtectedItemRequestsObjects(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName)
            {
                return operations.GetUpdateProtectedItemRequestsObjectsAsync(resourceGroupName, resourceGuardsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetUpdateProtectedItemRequestsObjectsAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUpdateProtectedItemRequestsObjectsWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            public static DppBaseResource GetDefaultDisableSoftDeleteRequestsObject(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName)
            {
                return operations.GetDefaultDisableSoftDeleteRequestsObjectAsync(resourceGroupName, resourceGuardsName, requestName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DppBaseResource> GetDefaultDisableSoftDeleteRequestsObjectAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDefaultDisableSoftDeleteRequestsObjectWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, requestName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            public static DppBaseResource GetDefaultDeleteResourceGuardProxyRequestsObject(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName)
            {
                return operations.GetDefaultDeleteResourceGuardProxyRequestsObjectAsync(resourceGroupName, resourceGuardsName, requestName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DppBaseResource> GetDefaultDeleteResourceGuardProxyRequestsObjectAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDefaultDeleteResourceGuardProxyRequestsObjectWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, requestName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            public static DppBaseResource GetDefaultBackupSecurityPINRequestsObject(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName)
            {
                return operations.GetDefaultBackupSecurityPINRequestsObjectAsync(resourceGroupName, resourceGuardsName, requestName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DppBaseResource> GetDefaultBackupSecurityPINRequestsObjectAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDefaultBackupSecurityPINRequestsObjectWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, requestName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            public static DppBaseResource GetDefaultDeleteProtectedItemRequestsObject(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName)
            {
                return operations.GetDefaultDeleteProtectedItemRequestsObjectAsync(resourceGroupName, resourceGuardsName, requestName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DppBaseResource> GetDefaultDeleteProtectedItemRequestsObjectAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDefaultDeleteProtectedItemRequestsObjectWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, requestName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            public static DppBaseResource GetDefaultUpdateProtectionPolicyRequestsObject(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName)
            {
                return operations.GetDefaultUpdateProtectionPolicyRequestsObjectAsync(resourceGroupName, resourceGuardsName, requestName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DppBaseResource> GetDefaultUpdateProtectionPolicyRequestsObjectAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDefaultUpdateProtectionPolicyRequestsObjectWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, requestName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            public static DppBaseResource GetDefaultUpdateProtectedItemRequestsObject(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName)
            {
                return operations.GetDefaultUpdateProtectedItemRequestsObjectAsync(resourceGroupName, resourceGuardsName, requestName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='resourceGuardsName'>
            /// </param>
            /// <param name='requestName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DppBaseResource> GetDefaultUpdateProtectedItemRequestsObjectAsync(this IResourceGuardsOperations operations, string resourceGroupName, string resourceGuardsName, string requestName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDefaultUpdateProtectedItemRequestsObjectWithHttpMessagesAsync(resourceGroupName, resourceGuardsName, requestName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ResourceGuardResource> GetResourcesInSubscriptionNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetResourcesInSubscriptionNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ResourceGuardResource>> GetResourcesInSubscriptionNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetResourcesInSubscriptionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a ResourceGroup.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ResourceGuardResource> GetResourcesInResourceGroupNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetResourcesInResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns ResourceGuards collection belonging to a ResourceGroup.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ResourceGuardResource>> GetResourcesInResourceGroupNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetResourcesInResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DppBaseResource> GetDisableSoftDeleteRequestsObjectsNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetDisableSoftDeleteRequestsObjectsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetDisableSoftDeleteRequestsObjectsNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDisableSoftDeleteRequestsObjectsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DppBaseResource> GetDeleteResourceGuardProxyRequestsObjectsNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetDeleteResourceGuardProxyRequestsObjectsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetDeleteResourceGuardProxyRequestsObjectsNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDeleteResourceGuardProxyRequestsObjectsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DppBaseResource> GetBackupSecurityPINRequestsObjectsNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetBackupSecurityPINRequestsObjectsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetBackupSecurityPINRequestsObjectsNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBackupSecurityPINRequestsObjectsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DppBaseResource> GetDeleteProtectedItemRequestsObjectsNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetDeleteProtectedItemRequestsObjectsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetDeleteProtectedItemRequestsObjectsNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDeleteProtectedItemRequestsObjectsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DppBaseResource> GetUpdateProtectionPolicyRequestsObjectsNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetUpdateProtectionPolicyRequestsObjectsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetUpdateProtectionPolicyRequestsObjectsNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUpdateProtectionPolicyRequestsObjectsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DppBaseResource> GetUpdateProtectedItemRequestsObjectsNext(this IResourceGuardsOperations operations, string nextPageLink)
            {
                return operations.GetUpdateProtectedItemRequestsObjectsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns collection of operation request objects for a critical operation
            /// protected by the given ResourceGuard resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DppBaseResource>> GetUpdateProtectedItemRequestsObjectsNextAsync(this IResourceGuardsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUpdateProtectedItemRequestsObjectsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
