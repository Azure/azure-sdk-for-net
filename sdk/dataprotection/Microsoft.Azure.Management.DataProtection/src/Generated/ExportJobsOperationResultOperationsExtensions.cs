// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataProtection
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ExportJobsOperationResultOperations.
    /// </summary>
    public static partial class ExportJobsOperationResultOperationsExtensions
    {
            /// <summary>
            /// Gets the operation result of operation triggered by Export Jobs API. If the
            /// operation is successful, then it also contains URL of a Blob and a SAS key
            /// to access the same. The blob contains exported jobs in JSON serialized
            /// format.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the backup vault.
            /// </param>
            /// <param name='operationId'>
            /// OperationID which represents the export job.
            /// </param>
            public static ExportJobsResult Get(this IExportJobsOperationResultOperations operations, string resourceGroupName, string vaultName, string operationId)
            {
                return operations.GetAsync(resourceGroupName, vaultName, operationId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the operation result of operation triggered by Export Jobs API. If the
            /// operation is successful, then it also contains URL of a Blob and a SAS key
            /// to access the same. The blob contains exported jobs in JSON serialized
            /// format.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the backup vault is present.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the backup vault.
            /// </param>
            /// <param name='operationId'>
            /// OperationID which represents the export job.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExportJobsResult> GetAsync(this IExportJobsOperationResultOperations operations, string resourceGroupName, string vaultName, string operationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, vaultName, operationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
