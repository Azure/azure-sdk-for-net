// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DataProtectionBackup.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DataProtectionBackup.Samples
{
    public partial class Sample_BackupVaultBackupInstanceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Find_FindRestorableTimeRanges()
        {
            // Generated from example definition: 2025-07-01/BackupInstanceOperations/FindRestorableTimeRanges.json
            // this example is just showing the usage of "BackupInstanceResources_Find" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BackupVaultBackupInstanceResource created on azure
            // for more information of creating BackupVaultBackupInstanceResource, please refer to the document of BackupVaultBackupInstanceResource
            string subscriptionId = "04cf684a-d41f-4550-9f70-7708a3a2283b";
            string resourceGroupName = "Blob-Backup";
            string vaultName = "ZBlobBackupVaultBVTD3";
            string backupInstanceName = "zblobbackuptestsa58";
            ResourceIdentifier backupVaultBackupInstanceResourceId = BackupVaultBackupInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, backupInstanceName);
            BackupVaultBackupInstanceResource backupVaultBackupInstance = client.GetBackupVaultBackupInstanceResource(backupVaultBackupInstanceResourceId);

            // invoke the operation
            BackupFindRestorableTimeRangeContent content = new BackupFindRestorableTimeRangeContent(RestoreSourceDataStoreType.OperationalStore)
            {
                StartOn = DateTimeOffset.Parse("2020-10-17T23:28:17.6829685Z"),
                EndOn = DateTimeOffset.Parse("2021-02-24T00:35:17.6829685Z"),
            };
            BackupFindRestorableTimeRangeResult result = await backupVaultBackupInstance.FindAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
