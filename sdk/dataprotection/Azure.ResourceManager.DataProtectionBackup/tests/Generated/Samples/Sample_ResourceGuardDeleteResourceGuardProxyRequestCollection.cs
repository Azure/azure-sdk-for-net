// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.DataProtectionBackup.Samples
{
    public partial class Sample_ResourceGuardDeleteResourceGuardProxyRequestCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetDefaultOperationsRequestObject()
        {
            // Generated from example definition: 2025-07-01/ResourceGuardCRUD/GetDefaultDeleteResourceGuardProxyRequests.json
            // this example is just showing the usage of "DppBaseResource_GetDefaultDeleteResourceGuardProxyRequestsObject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGuardResource created on azure
            // for more information of creating ResourceGuardResource, please refer to the document of ResourceGuardResource
            string subscriptionId = "0b352192-dcac-4cc7-992e-a96190ccc68c";
            string resourceGroupName = "SampleResourceGroup";
            string resourceGuardsName = "swaggerExample";
            ResourceIdentifier resourceGuardResourceId = ResourceGuardResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceGuardsName);
            ResourceGuardResource resourceGuard = client.GetResourceGuardResource(resourceGuardResourceId);

            // get the collection of this ResourceGuardDeleteResourceGuardProxyRequestResource
            ResourceGuardDeleteResourceGuardProxyRequestCollection collection = resourceGuard.GetResourceGuardDeleteResourceGuardProxyRequests();

            // invoke the operation
            string requestName = "default";
            ResourceGuardDeleteResourceGuardProxyRequestResource result = await collection.GetAsync(requestName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DppBaseResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ListOperationsRequestObject()
        {
            // Generated from example definition: 2025-07-01/ResourceGuardCRUD/ListDeleteResourceGuardProxyRequests.json
            // this example is just showing the usage of "DppBaseResource_GetDeleteResourceGuardProxyRequestsObjects" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGuardResource created on azure
            // for more information of creating ResourceGuardResource, please refer to the document of ResourceGuardResource
            string subscriptionId = "0b352192-dcac-4cc7-992e-a96190ccc68c";
            string resourceGroupName = "SampleResourceGroup";
            string resourceGuardsName = "swaggerExample";
            ResourceIdentifier resourceGuardResourceId = ResourceGuardResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceGuardsName);
            ResourceGuardResource resourceGuard = client.GetResourceGuardResource(resourceGuardResourceId);

            // get the collection of this ResourceGuardDeleteResourceGuardProxyRequestResource
            ResourceGuardDeleteResourceGuardProxyRequestCollection collection = resourceGuard.GetResourceGuardDeleteResourceGuardProxyRequests();

            // invoke the operation and iterate over the result
            await foreach (ResourceGuardDeleteResourceGuardProxyRequestResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DppBaseResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetDefaultOperationsRequestObject()
        {
            // Generated from example definition: 2025-07-01/ResourceGuardCRUD/GetDefaultDeleteResourceGuardProxyRequests.json
            // this example is just showing the usage of "DppBaseResource_GetDefaultDeleteResourceGuardProxyRequestsObject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGuardResource created on azure
            // for more information of creating ResourceGuardResource, please refer to the document of ResourceGuardResource
            string subscriptionId = "0b352192-dcac-4cc7-992e-a96190ccc68c";
            string resourceGroupName = "SampleResourceGroup";
            string resourceGuardsName = "swaggerExample";
            ResourceIdentifier resourceGuardResourceId = ResourceGuardResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceGuardsName);
            ResourceGuardResource resourceGuard = client.GetResourceGuardResource(resourceGuardResourceId);

            // get the collection of this ResourceGuardDeleteResourceGuardProxyRequestResource
            ResourceGuardDeleteResourceGuardProxyRequestCollection collection = resourceGuard.GetResourceGuardDeleteResourceGuardProxyRequests();

            // invoke the operation
            string requestName = "default";
            bool result = await collection.ExistsAsync(requestName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetDefaultOperationsRequestObject()
        {
            // Generated from example definition: 2025-07-01/ResourceGuardCRUD/GetDefaultDeleteResourceGuardProxyRequests.json
            // this example is just showing the usage of "DppBaseResource_GetDefaultDeleteResourceGuardProxyRequestsObject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGuardResource created on azure
            // for more information of creating ResourceGuardResource, please refer to the document of ResourceGuardResource
            string subscriptionId = "0b352192-dcac-4cc7-992e-a96190ccc68c";
            string resourceGroupName = "SampleResourceGroup";
            string resourceGuardsName = "swaggerExample";
            ResourceIdentifier resourceGuardResourceId = ResourceGuardResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceGuardsName);
            ResourceGuardResource resourceGuard = client.GetResourceGuardResource(resourceGuardResourceId);

            // get the collection of this ResourceGuardDeleteResourceGuardProxyRequestResource
            ResourceGuardDeleteResourceGuardProxyRequestCollection collection = resourceGuard.GetResourceGuardDeleteResourceGuardProxyRequests();

            // invoke the operation
            string requestName = "default";
            NullableResponse<ResourceGuardDeleteResourceGuardProxyRequestResource> response = await collection.GetIfExistsAsync(requestName);
            ResourceGuardDeleteResourceGuardProxyRequestResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DppBaseResourceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
