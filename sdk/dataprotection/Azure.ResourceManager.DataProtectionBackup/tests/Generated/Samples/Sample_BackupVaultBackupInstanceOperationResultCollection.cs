// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.DataProtectionBackup.Samples
{
    public partial class Sample_BackupVaultBackupInstanceOperationResultCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetBackupInstanceOperationResult()
        {
            // Generated from example definition: 2025-07-01/BackupInstanceOperations/GetBackupInstanceOperationResult.json
            // this example is just showing the usage of "BackupInstanceResource_GetBackupInstanceOperationResult" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BackupVaultBackupInstanceResource created on azure
            // for more information of creating BackupVaultBackupInstanceResource, please refer to the document of BackupVaultBackupInstanceResource
            string subscriptionId = "04cf684a-d41f-4550-9f70-7708a3a2283b";
            string resourceGroupName = "SampleResourceGroup";
            string vaultName = "swaggerExample";
            string backupInstanceName = "testInstance1";
            ResourceIdentifier backupVaultBackupInstanceResourceId = BackupVaultBackupInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, backupInstanceName);
            BackupVaultBackupInstanceResource backupVaultBackupInstance = client.GetBackupVaultBackupInstanceResource(backupVaultBackupInstanceResourceId);

            // get the collection of this BackupVaultBackupInstanceOperationResultResource
            BackupVaultBackupInstanceOperationResultCollection collection = backupVaultBackupInstance.GetBackupVaultBackupInstanceOperationResults();

            // invoke the operation
            string operationId = "YWUzNDFkMzQtZmM5OS00MmUyLWEzNDMtZGJkMDIxZjlmZjgzOzdmYzBiMzhmLTc2NmItNDM5NS05OWQ1LTVmOGEzNzg4MWQzNA==";
            BackupVaultBackupInstanceOperationResultResource result = await collection.GetAsync(operationId);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DataProtectionBackupInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetBackupInstanceOperationResult()
        {
            // Generated from example definition: 2025-07-01/BackupInstanceOperations/GetBackupInstanceOperationResult.json
            // this example is just showing the usage of "BackupInstanceResource_GetBackupInstanceOperationResult" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BackupVaultBackupInstanceResource created on azure
            // for more information of creating BackupVaultBackupInstanceResource, please refer to the document of BackupVaultBackupInstanceResource
            string subscriptionId = "04cf684a-d41f-4550-9f70-7708a3a2283b";
            string resourceGroupName = "SampleResourceGroup";
            string vaultName = "swaggerExample";
            string backupInstanceName = "testInstance1";
            ResourceIdentifier backupVaultBackupInstanceResourceId = BackupVaultBackupInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, backupInstanceName);
            BackupVaultBackupInstanceResource backupVaultBackupInstance = client.GetBackupVaultBackupInstanceResource(backupVaultBackupInstanceResourceId);

            // get the collection of this BackupVaultBackupInstanceOperationResultResource
            BackupVaultBackupInstanceOperationResultCollection collection = backupVaultBackupInstance.GetBackupVaultBackupInstanceOperationResults();

            // invoke the operation
            string operationId = "YWUzNDFkMzQtZmM5OS00MmUyLWEzNDMtZGJkMDIxZjlmZjgzOzdmYzBiMzhmLTc2NmItNDM5NS05OWQ1LTVmOGEzNzg4MWQzNA==";
            bool result = await collection.ExistsAsync(operationId);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetBackupInstanceOperationResult()
        {
            // Generated from example definition: 2025-07-01/BackupInstanceOperations/GetBackupInstanceOperationResult.json
            // this example is just showing the usage of "BackupInstanceResource_GetBackupInstanceOperationResult" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BackupVaultBackupInstanceResource created on azure
            // for more information of creating BackupVaultBackupInstanceResource, please refer to the document of BackupVaultBackupInstanceResource
            string subscriptionId = "04cf684a-d41f-4550-9f70-7708a3a2283b";
            string resourceGroupName = "SampleResourceGroup";
            string vaultName = "swaggerExample";
            string backupInstanceName = "testInstance1";
            ResourceIdentifier backupVaultBackupInstanceResourceId = BackupVaultBackupInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, backupInstanceName);
            BackupVaultBackupInstanceResource backupVaultBackupInstance = client.GetBackupVaultBackupInstanceResource(backupVaultBackupInstanceResourceId);

            // get the collection of this BackupVaultBackupInstanceOperationResultResource
            BackupVaultBackupInstanceOperationResultCollection collection = backupVaultBackupInstance.GetBackupVaultBackupInstanceOperationResults();

            // invoke the operation
            string operationId = "YWUzNDFkMzQtZmM5OS00MmUyLWEzNDMtZGJkMDIxZjlmZjgzOzdmYzBiMzhmLTc2NmItNDM5NS05OWQ1LTVmOGEzNzg4MWQzNA==";
            NullableResponse<BackupVaultBackupInstanceOperationResultResource> response = await collection.GetIfExistsAsync(operationId);
            BackupVaultBackupInstanceOperationResultResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DataProtectionBackupInstanceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
