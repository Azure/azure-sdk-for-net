// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    /// <summary> Trigger backup request. </summary>
    public partial class AdhocBackupTriggerContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="AdhocBackupTriggerContent"/>. </summary>
        /// <param name="backupRules"> Name for the Rule of the Policy which needs to be applied for this backup. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="backupRules"/> is null. </exception>
        public AdhocBackupTriggerContent(AdhocBackupRules backupRules)
        {
            Argument.AssertNotNull(backupRules, nameof(backupRules));

            BackupRules = backupRules;
        }

        /// <summary> Initializes a new instance of <see cref="AdhocBackupTriggerContent"/>. </summary>
        /// <param name="backupRules"> Name for the Rule of the Policy which needs to be applied for this backup. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal AdhocBackupTriggerContent(AdhocBackupRules backupRules, Dictionary<string, BinaryData> rawData)
        {
            BackupRules = backupRules;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="AdhocBackupTriggerContent"/> for deserialization. </summary>
        internal AdhocBackupTriggerContent()
        {
        }

        /// <summary> Name for the Rule of the Policy which needs to be applied for this backup. </summary>
        public AdhocBackupRules BackupRules { get; }
    }
}
