// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class DataProtectionBackupTaggingCriteria : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Criteria))
            {
                writer.WritePropertyName("criteria");
                writer.WriteStartArray();
                foreach (var item in Criteria)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("isDefault");
            writer.WriteBooleanValue(IsDefault);
            writer.WritePropertyName("taggingPriority");
            writer.WriteNumberValue(TaggingPriority);
            writer.WritePropertyName("tagInfo");
            writer.WriteObjectValue(TagInfo);
            writer.WriteEndObject();
        }

        internal static DataProtectionBackupTaggingCriteria DeserializeDataProtectionBackupTaggingCriteria(JsonElement element)
        {
            Optional<IList<DataProtectionBackupCriteria>> criteria = default;
            bool isDefault = default;
            long taggingPriority = default;
            DataProtectionBackupRetentionTag tagInfo = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("criteria"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<DataProtectionBackupCriteria> array = new List<DataProtectionBackupCriteria>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataProtectionBackupCriteria.DeserializeDataProtectionBackupCriteria(item));
                    }
                    criteria = array;
                    continue;
                }
                if (property.NameEquals("isDefault"))
                {
                    isDefault = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("taggingPriority"))
                {
                    taggingPriority = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("tagInfo"))
                {
                    tagInfo = DataProtectionBackupRetentionTag.DeserializeDataProtectionBackupRetentionTag(property.Value);
                    continue;
                }
            }
            return new DataProtectionBackupTaggingCriteria(Optional.ToList(criteria), isDefault, taggingPriority, tagInfo);
        }
    }
}
