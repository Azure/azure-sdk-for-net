// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class ResourceGuard : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(VaultCriticalOperationExclusionList))
            {
                writer.WritePropertyName("vaultCriticalOperationExclusionList");
                writer.WriteStartArray();
                foreach (var item in VaultCriticalOperationExclusionList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static ResourceGuard DeserializeResourceGuard(JsonElement element)
        {
            Optional<ResourceGuardProvisioningState> provisioningState = default;
            Optional<bool> allowAutoApprovals = default;
            Optional<IReadOnlyList<ResourceGuardOperation>> resourceGuardOperations = default;
            Optional<IList<string>> vaultCriticalOperationExclusionList = default;
            Optional<string> description = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ResourceGuardProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("allowAutoApprovals"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    allowAutoApprovals = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("resourceGuardOperations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResourceGuardOperation> array = new List<ResourceGuardOperation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResourceGuardOperation.DeserializeResourceGuardOperation(item));
                    }
                    resourceGuardOperations = array;
                    continue;
                }
                if (property.NameEquals("vaultCriticalOperationExclusionList"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    vaultCriticalOperationExclusionList = array;
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
            }
            return new ResourceGuard(Optional.ToNullable(provisioningState), Optional.ToNullable(allowAutoApprovals), Optional.ToList(resourceGuardOperations), Optional.ToList(vaultCriticalOperationExclusionList), description.Value);
        }
    }
}
