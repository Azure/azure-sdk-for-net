// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    /// <summary> Policy Info in backupInstance. </summary>
    public partial class PolicyInfo
    {
        /// <summary> Initializes a new instance of PolicyInfo. </summary>
        /// <param name="policyId"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="policyId"/> is null. </exception>
        public PolicyInfo(string policyId)
        {
            if (policyId == null)
            {
                throw new ArgumentNullException(nameof(policyId));
            }

            PolicyId = policyId;
        }

        /// <summary> Initializes a new instance of PolicyInfo. </summary>
        /// <param name="policyId"></param>
        /// <param name="policyVersion"></param>
        /// <param name="policyParameters"> Policy parameters for the backup instance. </param>
        internal PolicyInfo(string policyId, string policyVersion, PolicyParameters policyParameters)
        {
            PolicyId = policyId;
            PolicyVersion = policyVersion;
            PolicyParameters = policyParameters;
        }

        /// <summary> Gets or sets the policy id. </summary>
        public string PolicyId { get; set; }
        /// <summary> Gets the policy version. </summary>
        public string PolicyVersion { get; }
        /// <summary> Policy parameters for the backup instance. </summary>
        internal PolicyParameters PolicyParameters { get; set; }
        /// <summary>
        /// Gets or sets the DataStore Parameters
        /// Please note <see cref="DataStoreParameters"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureOperationalStoreParameters"/>.
        /// </summary>
        public IList<DataStoreParameters> DataStoreParametersList
        {
            get
            {
                if (PolicyParameters is null)
                    PolicyParameters = new PolicyParameters();
                return PolicyParameters.DataStoreParametersList;
            }
        }
    }
}
