// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    /// <summary>
    /// BackupPolicy base
    /// Please note <see cref="DataProtectionBackupPolicyPropertiesBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="RuleBasedBackupPolicy"/>.
    /// </summary>
    [AbstractTypeDeserializer(typeof(UnknownBaseBackupPolicy))]
    public abstract partial class DataProtectionBackupPolicyPropertiesBase
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        protected internal Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="DataProtectionBackupPolicyPropertiesBase"/>. </summary>
        /// <param name="dataSourceTypes"> Type of datasource for the backup management. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dataSourceTypes"/> is null. </exception>
        protected DataProtectionBackupPolicyPropertiesBase(IEnumerable<string> dataSourceTypes)
        {
            Argument.AssertNotNull(dataSourceTypes, nameof(dataSourceTypes));

            DataSourceTypes = dataSourceTypes.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="DataProtectionBackupPolicyPropertiesBase"/>. </summary>
        /// <param name="dataSourceTypes"> Type of datasource for the backup management. </param>
        /// <param name="objectType"></param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal DataProtectionBackupPolicyPropertiesBase(IList<string> dataSourceTypes, string objectType, Dictionary<string, BinaryData> rawData)
        {
            DataSourceTypes = dataSourceTypes;
            ObjectType = objectType;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="DataProtectionBackupPolicyPropertiesBase"/> for deserialization. </summary>
        internal DataProtectionBackupPolicyPropertiesBase()
        {
        }

        /// <summary> Type of datasource for the backup management. </summary>
        public IList<string> DataSourceTypes { get; }
        /// <summary> Gets or sets the object type. </summary>
        internal string ObjectType { get; set; }
    }
}
