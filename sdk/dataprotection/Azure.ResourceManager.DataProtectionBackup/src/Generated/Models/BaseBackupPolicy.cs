// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    /// <summary>
    /// BackupPolicy base
    /// Please note <see cref="BaseBackupPolicy"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="BackupPolicy"/>.
    /// </summary>
    public abstract partial class BaseBackupPolicy
    {
        /// <summary> Initializes a new instance of BaseBackupPolicy. </summary>
        /// <param name="datasourceTypes"> Type of datasource for the backup management. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="datasourceTypes"/> is null. </exception>
        protected BaseBackupPolicy(IEnumerable<string> datasourceTypes)
        {
            if (datasourceTypes == null)
            {
                throw new ArgumentNullException(nameof(datasourceTypes));
            }

            DatasourceTypes = datasourceTypes.ToList();
        }

        /// <summary> Initializes a new instance of BaseBackupPolicy. </summary>
        /// <param name="datasourceTypes"> Type of datasource for the backup management. </param>
        /// <param name="objectType"></param>
        internal BaseBackupPolicy(IList<string> datasourceTypes, string objectType)
        {
            DatasourceTypes = datasourceTypes;
            ObjectType = objectType;
        }

        /// <summary> Type of datasource for the backup management. </summary>
        public IList<string> DatasourceTypes { get; }
        /// <summary> Gets or sets the object type. </summary>
        internal string ObjectType { get; set; }
    }
}
