// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class ScheduleBasedBackupTriggerContext : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("schedule");
            writer.WriteObjectValue(Schedule);
            writer.WritePropertyName("taggingCriteria");
            writer.WriteStartArray();
            foreach (var item in TaggingCriteriaList)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("objectType");
            writer.WriteStringValue(ObjectType);
            writer.WriteEndObject();
        }

        internal static ScheduleBasedBackupTriggerContext DeserializeScheduleBasedBackupTriggerContext(JsonElement element)
        {
            DataProtectionBackupSchedule schedule = default;
            IList<DataProtectionBackupTaggingCriteria> taggingCriteria = default;
            string objectType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("schedule"))
                {
                    schedule = DataProtectionBackupSchedule.DeserializeDataProtectionBackupSchedule(property.Value);
                    continue;
                }
                if (property.NameEquals("taggingCriteria"))
                {
                    List<DataProtectionBackupTaggingCriteria> array = new List<DataProtectionBackupTaggingCriteria>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataProtectionBackupTaggingCriteria.DeserializeDataProtectionBackupTaggingCriteria(item));
                    }
                    taggingCriteria = array;
                    continue;
                }
                if (property.NameEquals("objectType"))
                {
                    objectType = property.Value.GetString();
                    continue;
                }
            }
            return new ScheduleBasedBackupTriggerContext(objectType, schedule, taggingCriteria);
        }
    }
}
