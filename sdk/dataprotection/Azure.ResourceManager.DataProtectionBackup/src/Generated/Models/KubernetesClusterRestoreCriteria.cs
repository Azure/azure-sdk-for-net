// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// kubernetes Cluster Backup target info for restore operation
    /// </summary>
    public partial class KubernetesClusterRestoreCriteria : ItemLevelRestoreCriteria
    {
        /// <summary>
        /// Initializes a new instance of the KubernetesClusterRestoreCriteria
        /// class.
        /// </summary>
        public KubernetesClusterRestoreCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KubernetesClusterRestoreCriteria
        /// class.
        /// </summary>
        /// <param name="includeClusterScopeResources">Gets or sets the include
        /// cluster resources property. This property if enabled will include
        /// cluster scope resources during restore.</param>
        /// <param name="includedNamespaces">Gets or sets the include
        /// namespaces property. This property sets the namespaces to be
        /// included during restore.</param>
        /// <param name="excludedNamespaces">Gets or sets the exclude
        /// namespaces property. This property sets the namespaces to be
        /// excluded during restore.</param>
        /// <param name="includedResourceTypes">Gets or sets the include
        /// resource types property. This property sets the resource types to
        /// be included during restore.</param>
        /// <param name="excludedResourceTypes">Gets or sets the exclude
        /// resource types property. This property sets the resource types to
        /// be excluded during restore.</param>
        /// <param name="labelSelectors">Gets or sets the LabelSelectors
        /// property. This property sets the resource with such label selectors
        /// to be included during restore.</param>
        /// <param name="persistentVolumeRestoreMode">Gets or sets the PV
        /// Restore Mode property. This property sets whether volumes needs to
        /// be restored. Possible values include: 'RestoreWithVolumeData',
        /// 'RestoreWithoutVolumeData'</param>
        /// <param name="conflictPolicy">Gets or sets the Conflict Policy
        /// property. This property sets policy during conflict of resources
        /// during restore. Possible values include: 'Skip', 'Patch'</param>
        /// <param name="namespaceMappings">Gets or sets the Namespace Mappings
        /// property. This property sets if namespace needs to be change during
        /// restore.</param>
        public KubernetesClusterRestoreCriteria(bool includeClusterScopeResources, IList<string> includedNamespaces = default(IList<string>), IList<string> excludedNamespaces = default(IList<string>), IList<string> includedResourceTypes = default(IList<string>), IList<string> excludedResourceTypes = default(IList<string>), IList<string> labelSelectors = default(IList<string>), string persistentVolumeRestoreMode = default(string), string conflictPolicy = default(string), IDictionary<string, string> namespaceMappings = default(IDictionary<string, string>))
        {
            IncludeClusterScopeResources = includeClusterScopeResources;
            IncludedNamespaces = includedNamespaces;
            ExcludedNamespaces = excludedNamespaces;
            IncludedResourceTypes = includedResourceTypes;
            ExcludedResourceTypes = excludedResourceTypes;
            LabelSelectors = labelSelectors;
            PersistentVolumeRestoreMode = persistentVolumeRestoreMode;
            ConflictPolicy = conflictPolicy;
            NamespaceMappings = namespaceMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the include cluster resources property. This property
        /// if enabled will include cluster scope resources during restore.
        /// </summary>
        [JsonProperty(PropertyName = "includeClusterScopeResources")]
        public bool IncludeClusterScopeResources { get; set; }

        /// <summary>
        /// Gets or sets the include namespaces property. This property sets
        /// the namespaces to be included during restore.
        /// </summary>
        [JsonProperty(PropertyName = "includedNamespaces")]
        public IList<string> IncludedNamespaces { get; set; }

        /// <summary>
        /// Gets or sets the exclude namespaces property. This property sets
        /// the namespaces to be excluded during restore.
        /// </summary>
        [JsonProperty(PropertyName = "excludedNamespaces")]
        public IList<string> ExcludedNamespaces { get; set; }

        /// <summary>
        /// Gets or sets the include resource types property. This property
        /// sets the resource types to be included during restore.
        /// </summary>
        [JsonProperty(PropertyName = "includedResourceTypes")]
        public IList<string> IncludedResourceTypes { get; set; }

        /// <summary>
        /// Gets or sets the exclude resource types property. This property
        /// sets the resource types to be excluded during restore.
        /// </summary>
        [JsonProperty(PropertyName = "excludedResourceTypes")]
        public IList<string> ExcludedResourceTypes { get; set; }

        /// <summary>
        /// Gets or sets the LabelSelectors property. This property sets the
        /// resource with such label selectors to be included during restore.
        /// </summary>
        [JsonProperty(PropertyName = "labelSelectors")]
        public IList<string> LabelSelectors { get; set; }

        /// <summary>
        /// Gets or sets the PV Restore Mode property. This property sets
        /// whether volumes needs to be restored. Possible values include:
        /// 'RestoreWithVolumeData', 'RestoreWithoutVolumeData'
        /// </summary>
        [JsonProperty(PropertyName = "persistentVolumeRestoreMode")]
        public string PersistentVolumeRestoreMode { get; set; }

        /// <summary>
        /// Gets or sets the Conflict Policy property. This property sets
        /// policy during conflict of resources during restore. Possible values
        /// include: 'Skip', 'Patch'
        /// </summary>
        [JsonProperty(PropertyName = "conflictPolicy")]
        public string ConflictPolicy { get; set; }

        /// <summary>
        /// Gets or sets the Namespace Mappings property. This property sets if
        /// namespace needs to be change during restore.
        /// </summary>
        [JsonProperty(PropertyName = "namespaceMappings")]
        public IDictionary<string, string> NamespaceMappings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
