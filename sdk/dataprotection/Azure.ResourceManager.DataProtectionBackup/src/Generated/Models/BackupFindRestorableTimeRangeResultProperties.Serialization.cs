// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class BackupFindRestorableTimeRangeResultProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(RestorableTimeRanges))
            {
                writer.WritePropertyName("restorableTimeRanges"u8);
                writer.WriteStartArray();
                foreach (var item in RestorableTimeRanges)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ObjectType))
            {
                writer.WritePropertyName("objectType"u8);
                writer.WriteStringValue(ObjectType);
            }
            writer.WriteEndObject();
        }

        internal static BackupFindRestorableTimeRangeResultProperties DeserializeBackupFindRestorableTimeRangeResultProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<RestorableTimeRange>> restorableTimeRanges = default;
            Optional<string> objectType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("restorableTimeRanges"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<RestorableTimeRange> array = new List<RestorableTimeRange>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RestorableTimeRange.DeserializeRestorableTimeRange(item));
                    }
                    restorableTimeRanges = array;
                    continue;
                }
                if (property.NameEquals("objectType"u8))
                {
                    objectType = property.Value.GetString();
                    continue;
                }
            }
            return new BackupFindRestorableTimeRangeResultProperties(Optional.ToList(restorableTimeRanges), objectType.Value);
        }
    }
}
