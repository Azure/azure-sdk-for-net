// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    /// <summary> Parameters to be used during configuration of backup of azure data lake storage account blobs. </summary>
    public partial class AdlsBlobBackupDataSourceSettings : BlobBackupDataSourceSettings
    {
        /// <summary> Initializes a new instance of <see cref="AdlsBlobBackupDataSourceSettings"/>. </summary>
        /// <param name="containersList"> List of containers to be backed up during configuration of backup of blobs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="containersList"/> is null. </exception>
        public AdlsBlobBackupDataSourceSettings(IEnumerable<string> containersList) : base(containersList)
        {
            Argument.AssertNotNull(containersList, nameof(containersList));

            ObjectType = "AdlsBlobBackupDatasourceParameters";
        }

        /// <summary> Initializes a new instance of <see cref="AdlsBlobBackupDataSourceSettings"/>. </summary>
        /// <param name="objectType"> Type of the specific object - used for deserializing. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="containersList"> List of containers to be backed up during configuration of backup of blobs. </param>
        internal AdlsBlobBackupDataSourceSettings(string objectType, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<string> containersList) : base(objectType, serializedAdditionalRawData, containersList)
        {
            ObjectType = objectType ?? "AdlsBlobBackupDatasourceParameters";
        }

        /// <summary> Initializes a new instance of <see cref="AdlsBlobBackupDataSourceSettings"/> for deserialization. </summary>
        internal AdlsBlobBackupDataSourceSettings()
        {
        }
    }
}
