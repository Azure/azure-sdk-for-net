// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class BackupFeatureValidationResult
    {
        internal static BackupFeatureValidationResult DeserializeBackupFeatureValidationResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<BackupSupportedFeatureType> featureType = default;
            Optional<IReadOnlyList<BackupSupportedFeature>> features = default;
            string objectType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("featureType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    featureType = new BackupSupportedFeatureType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("features"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<BackupSupportedFeature> array = new List<BackupSupportedFeature>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BackupSupportedFeature.DeserializeBackupSupportedFeature(item));
                    }
                    features = array;
                    continue;
                }
                if (property.NameEquals("objectType"u8))
                {
                    objectType = property.Value.GetString();
                    continue;
                }
            }
            return new BackupFeatureValidationResult(objectType, Optional.ToNullable(featureType), Optional.ToList(features));
        }
    }
}
