// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class DataProtectionBackupDiscreteRecoveryPointProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(FriendlyName))
            {
                writer.WritePropertyName("friendlyName"u8);
                writer.WriteStringValue(FriendlyName);
            }
            if (Core.Optional.IsCollectionDefined(RecoveryPointDataStoresDetails))
            {
                writer.WritePropertyName("recoveryPointDataStoresDetails"u8);
                writer.WriteStartArray();
                foreach (var item in RecoveryPointDataStoresDetails)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("recoveryPointTime"u8);
            writer.WriteStringValue(RecoverOn, "O");
            if (Core.Optional.IsDefined(PolicyName))
            {
                writer.WritePropertyName("policyName"u8);
                writer.WriteStringValue(PolicyName);
            }
            if (Core.Optional.IsDefined(PolicyVersion))
            {
                writer.WritePropertyName("policyVersion"u8);
                writer.WriteStringValue(PolicyVersion);
            }
            if (Core.Optional.IsDefined(RecoveryPointId))
            {
                writer.WritePropertyName("recoveryPointId"u8);
                writer.WriteStringValue(RecoveryPointId);
            }
            if (Core.Optional.IsDefined(RecoveryPointType))
            {
                writer.WritePropertyName("recoveryPointType"u8);
                writer.WriteStringValue(RecoveryPointType);
            }
            if (Core.Optional.IsDefined(RetentionTagName))
            {
                writer.WritePropertyName("retentionTagName"u8);
                writer.WriteStringValue(RetentionTagName);
            }
            if (Core.Optional.IsDefined(RetentionTagVersion))
            {
                writer.WritePropertyName("retentionTagVersion"u8);
                writer.WriteStringValue(RetentionTagVersion);
            }
            writer.WritePropertyName("objectType"u8);
            writer.WriteStringValue(ObjectType);
            writer.WriteEndObject();
        }

        internal static DataProtectionBackupDiscreteRecoveryPointProperties DeserializeDataProtectionBackupDiscreteRecoveryPointProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> friendlyName = default;
            Core.Optional<IList<RecoveryPointDataStoreDetail>> recoveryPointDataStoresDetails = default;
            DateTimeOffset recoveryPointTime = default;
            Core.Optional<string> policyName = default;
            Core.Optional<string> policyVersion = default;
            Core.Optional<string> recoveryPointId = default;
            Core.Optional<string> recoveryPointType = default;
            Core.Optional<string> retentionTagName = default;
            Core.Optional<string> retentionTagVersion = default;
            Core.Optional<DateTimeOffset> expiryTime = default;
            string objectType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("friendlyName"u8))
                {
                    friendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryPointDataStoresDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<RecoveryPointDataStoreDetail> array = new List<RecoveryPointDataStoreDetail>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RecoveryPointDataStoreDetail.DeserializeRecoveryPointDataStoreDetail(item));
                    }
                    recoveryPointDataStoresDetails = array;
                    continue;
                }
                if (property.NameEquals("recoveryPointTime"u8))
                {
                    recoveryPointTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("policyName"u8))
                {
                    policyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("policyVersion"u8))
                {
                    policyVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryPointId"u8))
                {
                    recoveryPointId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryPointType"u8))
                {
                    recoveryPointType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("retentionTagName"u8))
                {
                    retentionTagName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("retentionTagVersion"u8))
                {
                    retentionTagVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expiryTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    expiryTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("objectType"u8))
                {
                    objectType = property.Value.GetString();
                    continue;
                }
            }
            return new DataProtectionBackupDiscreteRecoveryPointProperties(objectType, friendlyName.Value, Core.Optional.ToList(recoveryPointDataStoresDetails), recoveryPointTime, policyName.Value, policyVersion.Value, recoveryPointId.Value, recoveryPointType.Value, retentionTagName.Value, retentionTagVersion.Value, Core.Optional.ToNullable(expiryTime));
        }
    }
}
