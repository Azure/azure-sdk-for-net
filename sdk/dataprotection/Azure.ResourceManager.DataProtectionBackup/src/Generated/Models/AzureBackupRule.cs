// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    /// <summary> Azure backup rule. </summary>
    public partial class AzureBackupRule : BasePolicyRule
    {
        /// <summary> Initializes a new instance of AzureBackupRule. </summary>
        /// <param name="name"></param>
        /// <param name="dataStore"> DataStoreInfo base. </param>
        /// <param name="trigger">
        /// Trigger context
        /// Please note <see cref="TriggerContext"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AdhocBasedTriggerContext"/> and <see cref="ScheduleBasedTriggerContext"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="dataStore"/> or <paramref name="trigger"/> is null. </exception>
        public AzureBackupRule(string name, DataStoreInfoBase dataStore, TriggerContext trigger) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (dataStore == null)
            {
                throw new ArgumentNullException(nameof(dataStore));
            }
            if (trigger == null)
            {
                throw new ArgumentNullException(nameof(trigger));
            }

            DataStore = dataStore;
            Trigger = trigger;
            ObjectType = "AzureBackupRule";
        }

        /// <summary> Initializes a new instance of AzureBackupRule. </summary>
        /// <param name="name"></param>
        /// <param name="objectType"></param>
        /// <param name="backupParameters">
        /// BackupParameters base
        /// Please note <see cref="BackupParameters"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBackupParams"/>.
        /// </param>
        /// <param name="dataStore"> DataStoreInfo base. </param>
        /// <param name="trigger">
        /// Trigger context
        /// Please note <see cref="TriggerContext"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AdhocBasedTriggerContext"/> and <see cref="ScheduleBasedTriggerContext"/>.
        /// </param>
        internal AzureBackupRule(string name, string objectType, BackupParameters backupParameters, DataStoreInfoBase dataStore, TriggerContext trigger) : base(name, objectType)
        {
            BackupParameters = backupParameters;
            DataStore = dataStore;
            Trigger = trigger;
            ObjectType = objectType ?? "AzureBackupRule";
        }

        /// <summary>
        /// BackupParameters base
        /// Please note <see cref="BackupParameters"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureBackupParams"/>.
        /// </summary>
        public BackupParameters BackupParameters { get; set; }
        /// <summary> DataStoreInfo base. </summary>
        public DataStoreInfoBase DataStore { get; set; }
        /// <summary>
        /// Trigger context
        /// Please note <see cref="TriggerContext"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AdhocBasedTriggerContext"/> and <see cref="ScheduleBasedTriggerContext"/>.
        /// </summary>
        public TriggerContext Trigger { get; set; }
    }
}
