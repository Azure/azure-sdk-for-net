// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class BackupVault : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MonitoringSettings))
            {
                writer.WritePropertyName("monitoringSettings");
                writer.WriteObjectValue(MonitoringSettings);
            }
            if (Optional.IsDefined(SecuritySettings))
            {
                writer.WritePropertyName("securitySettings");
                writer.WriteObjectValue(SecuritySettings);
            }
            writer.WritePropertyName("storageSettings");
            writer.WriteStartArray();
            foreach (var item in StorageSettings)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsDefined(IsVaultProtectedByResourceGuard))
            {
                writer.WritePropertyName("isVaultProtectedByResourceGuard");
                writer.WriteBooleanValue(IsVaultProtectedByResourceGuard.Value);
            }
            writer.WriteEndObject();
        }

        internal static BackupVault DeserializeBackupVault(JsonElement element)
        {
            Optional<MonitoringSettings> monitoringSettings = default;
            Optional<ProvisioningState> provisioningState = default;
            Optional<ResourceMoveState> resourceMoveState = default;
            Optional<ResourceMoveDetails> resourceMoveDetails = default;
            Optional<SecuritySettings> securitySettings = default;
            IList<StorageSetting> storageSettings = default;
            Optional<bool> isVaultProtectedByResourceGuard = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("monitoringSettings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    monitoringSettings = MonitoringSettings.DeserializeMonitoringSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceMoveState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceMoveState = new ResourceMoveState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceMoveDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceMoveDetails = ResourceMoveDetails.DeserializeResourceMoveDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("securitySettings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    securitySettings = SecuritySettings.DeserializeSecuritySettings(property.Value);
                    continue;
                }
                if (property.NameEquals("storageSettings"))
                {
                    List<StorageSetting> array = new List<StorageSetting>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(StorageSetting.DeserializeStorageSetting(item));
                    }
                    storageSettings = array;
                    continue;
                }
                if (property.NameEquals("isVaultProtectedByResourceGuard"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isVaultProtectedByResourceGuard = property.Value.GetBoolean();
                    continue;
                }
            }
            return new BackupVault(monitoringSettings.Value, Optional.ToNullable(provisioningState), Optional.ToNullable(resourceMoveState), resourceMoveDetails.Value, securitySettings.Value, storageSettings, Optional.ToNullable(isVaultProtectedByResourceGuard));
        }
    }
}
