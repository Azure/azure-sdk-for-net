// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    public partial class RecoveryPointDataStoreDetail : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(CreatedOn))
            {
                writer.WritePropertyName("creationTime"u8);
                writer.WriteStringValue(CreatedOn.Value, "O");
            }
            if (Core.Optional.IsDefined(ExpireOn))
            {
                writer.WritePropertyName("expiryTime"u8);
                writer.WriteStringValue(ExpireOn.Value, "O");
            }
            if (Core.Optional.IsDefined(RecoveryPointDataStoreId))
            {
                writer.WritePropertyName("id"u8);
                writer.WriteStringValue(RecoveryPointDataStoreId.Value);
            }
            if (Core.Optional.IsDefined(Metadata))
            {
                writer.WritePropertyName("metaData"u8);
                writer.WriteStringValue(Metadata);
            }
            if (Core.Optional.IsDefined(State))
            {
                writer.WritePropertyName("state"u8);
                writer.WriteStringValue(State);
            }
            if (Core.Optional.IsDefined(RecoveryPointDataStoreType))
            {
                writer.WritePropertyName("type"u8);
                writer.WriteStringValue(RecoveryPointDataStoreType);
            }
            if (Core.Optional.IsDefined(IsVisible))
            {
                writer.WritePropertyName("visible"u8);
                writer.WriteBooleanValue(IsVisible.Value);
            }
            writer.WriteEndObject();
        }

        internal static RecoveryPointDataStoreDetail DeserializeRecoveryPointDataStoreDetail(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<DateTimeOffset> creationTime = default;
            Core.Optional<DateTimeOffset> expiryTime = default;
            Core.Optional<Guid> id = default;
            Core.Optional<string> metaData = default;
            Core.Optional<string> state = default;
            Core.Optional<string> type = default;
            Core.Optional<bool> visible = default;
            Core.Optional<DateTimeOffset> rehydrationExpiryTime = default;
            Core.Optional<RecoveryPointDataStoreRehydrationStatus> rehydrationStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("creationTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    creationTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("expiryTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    expiryTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("metaData"u8))
                {
                    metaData = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"u8))
                {
                    state = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("visible"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    visible = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("rehydrationExpiryTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    rehydrationExpiryTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("rehydrationStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    rehydrationStatus = new RecoveryPointDataStoreRehydrationStatus(property.Value.GetString());
                    continue;
                }
            }
            return new RecoveryPointDataStoreDetail(Core.Optional.ToNullable(creationTime), Core.Optional.ToNullable(expiryTime), Core.Optional.ToNullable(id), metaData.Value, state.Value, type.Value, Core.Optional.ToNullable(visible), Core.Optional.ToNullable(rehydrationExpiryTime), Core.Optional.ToNullable(rehydrationStatus));
        }
    }
}
