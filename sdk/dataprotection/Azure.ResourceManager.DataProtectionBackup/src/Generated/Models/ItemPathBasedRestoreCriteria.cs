// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.ResourceManager.DataProtectionBackup.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Prefix criteria to be used to during restore
    /// </summary>
    public partial class ItemPathBasedRestoreCriteria : ItemLevelRestoreCriteria
    {
        /// <summary>
        /// Initializes a new instance of the ItemPathBasedRestoreCriteria
        /// class.
        /// </summary>
        public ItemPathBasedRestoreCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ItemPathBasedRestoreCriteria
        /// class.
        /// </summary>
        /// <param name="itemPath">The path of the item to be restored. It
        /// could be the full path of the item or the path relative to the
        /// backup item</param>
        /// <param name="isPathRelativeToBackupItem">Flag to specify if the
        /// path is relative to backup item or full path</param>
        /// <param name="subItemPathPrefix">The list of prefix strings to be
        /// used as filter criteria during restore. These are relative to the
        /// item path specified.</param>
        public ItemPathBasedRestoreCriteria(string itemPath, bool isPathRelativeToBackupItem, IList<string> subItemPathPrefix = default(IList<string>))
        {
            ItemPath = itemPath;
            IsPathRelativeToBackupItem = isPathRelativeToBackupItem;
            SubItemPathPrefix = subItemPathPrefix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path of the item to be restored. It could be the
        /// full path of the item or the path relative to the backup item
        /// </summary>
        [JsonProperty(PropertyName = "itemPath")]
        public string ItemPath { get; set; }

        /// <summary>
        /// Gets or sets flag to specify if the path is relative to backup item
        /// or full path
        /// </summary>
        [JsonProperty(PropertyName = "isPathRelativeToBackupItem")]
        public bool IsPathRelativeToBackupItem { get; set; }

        /// <summary>
        /// Gets or sets the list of prefix strings to be used as filter
        /// criteria during restore. These are relative to the item path
        /// specified.
        /// </summary>
        [JsonProperty(PropertyName = "subItemPathPrefix")]
        public IList<string> SubItemPathPrefix { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ItemPath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ItemPath");
            }
        }
    }
}
