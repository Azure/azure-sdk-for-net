// <auto-generated/>

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.ResourceManager.HealthBot;
using Azure.ResourceManager.HealthBot.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HealthBot;

[ModelReaderWriterBuildable(typeof(HealthBotData))]
[ModelReaderWriterBuildable(typeof(HealthBotResource))]
[ModelReaderWriterBuildable(typeof(BotResponseList))]
[ModelReaderWriterBuildable(typeof(HealthBotKeyVaultProperties))]
[ModelReaderWriterBuildable(typeof(HealthBotPatch))]
[ModelReaderWriterBuildable(typeof(HealthBotProperties))]
[ModelReaderWriterBuildable(typeof(HealthBotSku))]
public partial class AzureResourceManagerHealthBotContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
