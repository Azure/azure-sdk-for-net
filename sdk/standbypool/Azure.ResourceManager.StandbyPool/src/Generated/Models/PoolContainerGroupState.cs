// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.StandbyPool.Models
{
    /// <summary> The state of the pooled container groups. </summary>
    public readonly partial struct PoolContainerGroupState : IEquatable<PoolContainerGroupState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PoolContainerGroupState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PoolContainerGroupState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string RunningValue = "Running";
        private const string CreatingValue = "Creating";
        private const string DeletingValue = "Deleting";

        /// <summary> The container group is up and running. </summary>
        public static PoolContainerGroupState Running { get; } = new PoolContainerGroupState(RunningValue);
        /// <summary> The container group is creating. </summary>
        public static PoolContainerGroupState Creating { get; } = new PoolContainerGroupState(CreatingValue);
        /// <summary> The container group is deleting. </summary>
        public static PoolContainerGroupState Deleting { get; } = new PoolContainerGroupState(DeletingValue);
        /// <summary> Determines if two <see cref="PoolContainerGroupState"/> values are the same. </summary>
        public static bool operator ==(PoolContainerGroupState left, PoolContainerGroupState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PoolContainerGroupState"/> values are not the same. </summary>
        public static bool operator !=(PoolContainerGroupState left, PoolContainerGroupState right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="PoolContainerGroupState"/>. </summary>
        public static implicit operator PoolContainerGroupState(string value) => new PoolContainerGroupState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PoolContainerGroupState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PoolContainerGroupState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
