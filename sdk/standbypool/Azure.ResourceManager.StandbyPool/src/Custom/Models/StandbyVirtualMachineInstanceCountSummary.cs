// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;

namespace Azure.ResourceManager.StandbyPool.Models
{
    /// <summary>
    /// Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider.
    /// Note: any updates to pool resources outside of StandbyPoolRP (i.e deleting a VM through portal) are not reflected here.
    /// Note: any resources in the Running state may still be installing extensions / not fully provisioned.
    /// </summary>
    public partial class StandbyVirtualMachineInstanceCountSummary
    {
        /// <summary> Initializes a new instance of <see cref="StandbyVirtualMachineInstanceCountSummary"/>. </summary>
        /// <param name="zone"> The zone that the provided counts are in. This is null if zones are not enabled on the attached VMSS. </param>
        /// <param name="instanceCountsByState"> The count of pooled resources in each state for the given zone. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        [EditorBrowsable(EditorBrowsableState.Never)]
        internal StandbyVirtualMachineInstanceCountSummary(long? zone, IReadOnlyList<PoolResourceStateCount> instanceCountsByState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Zone = zone;
            InstanceCountsByState = instanceCountsByState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }
        /// <summary> The count of pooled virtual machines in each state for the given zone. </summary>
        [EditorBrowsable(EditorBrowsableState.Never)]
        public IReadOnlyList<PoolResourceStateCount> InstanceCountsByState { get; }
    }
}
