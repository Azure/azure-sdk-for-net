// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CostManagement.Models
{
    /// <summary> The definition of a forecast. </summary>
    public partial class ForecastDefinition
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ForecastDefinition"/>. </summary>
        /// <param name="forecastType"> The type of the forecast. </param>
        /// <param name="timeframe"> The time frame for pulling data for the forecast. If custom, then a specific time period must be provided. </param>
        /// <param name="dataset"> Has definition for data in this forecast. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dataset"/> is null. </exception>
        public ForecastDefinition(ForecastType forecastType, ForecastTimeframe timeframe, ForecastDataset dataset)
        {
            Argument.AssertNotNull(dataset, nameof(dataset));

            ForecastType = forecastType;
            Timeframe = timeframe;
            Dataset = dataset;
        }

        /// <summary> Initializes a new instance of <see cref="ForecastDefinition"/>. </summary>
        /// <param name="forecastType"> The type of the forecast. </param>
        /// <param name="timeframe"> The time frame for pulling data for the forecast. If custom, then a specific time period must be provided. </param>
        /// <param name="timePeriod"> Has time period for pulling data for the forecast. </param>
        /// <param name="dataset"> Has definition for data in this forecast. </param>
        /// <param name="includeActualCost"> A boolean determining if actualCost will be included. </param>
        /// <param name="includeFreshPartialCost"> A boolean determining if FreshPartialCost will be included. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ForecastDefinition(ForecastType forecastType, ForecastTimeframe timeframe, ForecastTimePeriod timePeriod, ForecastDataset dataset, bool? includeActualCost, bool? includeFreshPartialCost, Dictionary<string, BinaryData> rawData)
        {
            ForecastType = forecastType;
            Timeframe = timeframe;
            TimePeriod = timePeriod;
            Dataset = dataset;
            IncludeActualCost = includeActualCost;
            IncludeFreshPartialCost = includeFreshPartialCost;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ForecastDefinition"/> for deserialization. </summary>
        internal ForecastDefinition()
        {
        }

        /// <summary> The type of the forecast. </summary>
        public ForecastType ForecastType { get; }
        /// <summary> The time frame for pulling data for the forecast. If custom, then a specific time period must be provided. </summary>
        public ForecastTimeframe Timeframe { get; }
        /// <summary> Has time period for pulling data for the forecast. </summary>
        public ForecastTimePeriod TimePeriod { get; set; }
        /// <summary> Has definition for data in this forecast. </summary>
        public ForecastDataset Dataset { get; }
        /// <summary> A boolean determining if actualCost will be included. </summary>
        public bool? IncludeActualCost { get; set; }
        /// <summary> A boolean determining if FreshPartialCost will be included. </summary>
        public bool? IncludeFreshPartialCost { get; set; }
    }
}
