// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CostManagement.Models
{
    public partial class AsyncOperationStatusProperties
    {
        internal static AsyncOperationStatusProperties DeserializeAsyncOperationStatusProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<BenefitUtilizationSummaryReportSchema> reportUrl = default;
            Optional<BenefitUtilizationSummaryReportSchema> secondaryReportUrl = default;
            Optional<DateTimeOffset> validUntil = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("reportUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    reportUrl = new BenefitUtilizationSummaryReportSchema(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("secondaryReportUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    secondaryReportUrl = new BenefitUtilizationSummaryReportSchema(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("validUntil"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    validUntil = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new AsyncOperationStatusProperties(Optional.ToNullable(reportUrl), Optional.ToNullable(secondaryReportUrl), Optional.ToNullable(validUntil));
        }
    }
}
