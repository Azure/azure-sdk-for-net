// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ElasticSan.Models
{
    public partial class ElasticSanSkuInformation
    {
        internal static ElasticSanSkuInformation DeserializeElasticSanSkuInformation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            ElasticSanSkuName name = default;
            Core.Optional<ElasticSanSkuTier> tier = default;
            Core.Optional<string> resourceType = default;
            Core.Optional<IReadOnlyList<string>> locations = default;
            Core.Optional<IReadOnlyList<ElasticSanSkuLocationInfo>> locationInfo = default;
            Core.Optional<IReadOnlyList<ElasticSanSkuCapability>> capabilities = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = new ElasticSanSkuName(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("tier"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tier = new ElasticSanSkuTier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceType"u8))
                {
                    resourceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("locations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    locations = array;
                    continue;
                }
                if (property.NameEquals("locationInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ElasticSanSkuLocationInfo> array = new List<ElasticSanSkuLocationInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ElasticSanSkuLocationInfo.DeserializeElasticSanSkuLocationInfo(item));
                    }
                    locationInfo = array;
                    continue;
                }
                if (property.NameEquals("capabilities"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ElasticSanSkuCapability> array = new List<ElasticSanSkuCapability>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ElasticSanSkuCapability.DeserializeElasticSanSkuCapability(item));
                    }
                    capabilities = array;
                    continue;
                }
            }
            return new ElasticSanSkuInformation(name, Core.Optional.ToNullable(tier), resourceType.Value, Core.Optional.ToList(locations), Core.Optional.ToList(locationInfo), Core.Optional.ToList(capabilities));
        }
    }
}
