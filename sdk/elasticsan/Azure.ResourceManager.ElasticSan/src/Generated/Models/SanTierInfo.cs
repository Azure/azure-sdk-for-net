// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ElasticSan.Models
{
    /// <summary> San scalability target. </summary>
    public partial class SanTierInfo
    {
        /// <summary> Initializes a new instance of SanTierInfo. </summary>
        internal SanTierInfo()
        {
        }

        /// <summary> Initializes a new instance of SanTierInfo. </summary>
        /// <param name="maxSizeTiB"> Maximum San account capacity in TiB. </param>
        /// <param name="minSizeTiB"> Minimum San account capacity in TiB. </param>
        /// <param name="minIncrementSizeTiB"> Increment the San capacity in TiB. </param>
        /// <param name="iopsPerBaseTiB"> Maximum IOPS per BaseTiB. </param>
        /// <param name="mbpsPerBaseTiB"> Maximum MBps per BaseTiB. </param>
        /// <param name="maxMbps"> Maximum MBps. </param>
        /// <param name="maxElasticSanVolumeGroupCount"> Maximum number of volume groups per San account. </param>
        internal SanTierInfo(long? maxSizeTiB, long? minSizeTiB, long? minIncrementSizeTiB, long? iopsPerBaseTiB, long? mbpsPerBaseTiB, long? maxMbps, long? maxElasticSanVolumeGroupCount)
        {
            MaxSizeTiB = maxSizeTiB;
            MinSizeTiB = minSizeTiB;
            MinIncrementSizeTiB = minIncrementSizeTiB;
            IopsPerBaseTiB = iopsPerBaseTiB;
            MbpsPerBaseTiB = mbpsPerBaseTiB;
            MaxMbps = maxMbps;
            MaxElasticSanVolumeGroupCount = maxElasticSanVolumeGroupCount;
        }

        /// <summary> Maximum San account capacity in TiB. </summary>
        public long? MaxSizeTiB { get; }
        /// <summary> Minimum San account capacity in TiB. </summary>
        public long? MinSizeTiB { get; }
        /// <summary> Increment the San capacity in TiB. </summary>
        public long? MinIncrementSizeTiB { get; }
        /// <summary> Maximum IOPS per BaseTiB. </summary>
        public long? IopsPerBaseTiB { get; }
        /// <summary> Maximum MBps per BaseTiB. </summary>
        public long? MbpsPerBaseTiB { get; }
        /// <summary> Maximum MBps. </summary>
        public long? MaxMbps { get; }
        /// <summary> Maximum number of volume groups per San account. </summary>
        public long? MaxElasticSanVolumeGroupCount { get; }
    }
}
