// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ElasticSan.Models
{
    public partial class ResourceTypeSku
    {
        internal static ResourceTypeSku DeserializeResourceTypeSku(JsonElement element)
        {
            Optional<ElasticSanSku> sku = default;
            Optional<IReadOnlyList<SkuLocationInfo>> locationInfo = default;
            Optional<SanTierInfo> san = default;
            Optional<ElasticSanVolumeGroupTierInfo> elasticSanVolumeGroup = default;
            Optional<ElasticSanVolumeTierInfo> elasticSanVolume = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sku"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sku = ElasticSanSku.DeserializeElasticSanSku(property.Value);
                    continue;
                }
                if (property.NameEquals("locationInfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SkuLocationInfo> array = new List<SkuLocationInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SkuLocationInfo.DeserializeSkuLocationInfo(item));
                    }
                    locationInfo = array;
                    continue;
                }
                if (property.NameEquals("san"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    san = SanTierInfo.DeserializeSanTierInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("volumeGroup"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    elasticSanVolumeGroup = ElasticSanVolumeGroupTierInfo.DeserializeElasticSanVolumeGroupTierInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("volume"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    elasticSanVolume = ElasticSanVolumeTierInfo.DeserializeElasticSanVolumeTierInfo(property.Value);
                    continue;
                }
            }
            return new ResourceTypeSku(sku.Value, Optional.ToList(locationInfo), san.Value, elasticSanVolumeGroup.Value, elasticSanVolume.Value);
        }
    }
}
