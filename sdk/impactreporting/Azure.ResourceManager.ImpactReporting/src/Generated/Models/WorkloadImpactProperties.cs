// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ImpactReporting.Models
{
    /// <summary> Workload impact properties. </summary>
    public partial class WorkloadImpactProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="WorkloadImpactProperties"/>. </summary>
        /// <param name="startOn"> Time at which impact was observed. </param>
        /// <param name="impactedResourceId"> Azure resource id of the impacted resource. </param>
        /// <param name="impactCategory"> Category of the impact,  details can found from /impactCategories API. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="impactedResourceId"/> or <paramref name="impactCategory"/> is null. </exception>
        public WorkloadImpactProperties(DateTimeOffset startOn, string impactedResourceId, string impactCategory)
        {
            Argument.AssertNotNull(impactedResourceId, nameof(impactedResourceId));
            Argument.AssertNotNull(impactCategory, nameof(impactCategory));

            StartOn = startOn;
            ImpactedResourceId = impactedResourceId;
            ImpactCategory = impactCategory;
            ArmCorrelationIds = new ChangeTrackingList<string>();
            Performance = new ChangeTrackingList<Performance>();
        }

        /// <summary> Initializes a new instance of <see cref="WorkloadImpactProperties"/>. </summary>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="startOn"> Time at which impact was observed. </param>
        /// <param name="endOn"> Time at which impact has ended. </param>
        /// <param name="impactedResourceId"> Azure resource id of the impacted resource. </param>
        /// <param name="impactUniqueId"> Unique ID of the impact (UUID). </param>
        /// <param name="reportedTimeUtc"> Time at which impact is reported. </param>
        /// <param name="impactCategory"> Category of the impact,  details can found from /impactCategories API. </param>
        /// <param name="impactDescription"> A detailed description of the impact. </param>
        /// <param name="armCorrelationIds"> The ARM correlation ids, this is important field for control plane related impacts. </param>
        /// <param name="performance"> Details about performance issue. Applicable for performance impacts. </param>
        /// <param name="connectivity"> Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue. </param>
        /// <param name="additionalProperties"> Additional fields related to impact, applicable fields per resource type are list under /impactCategories API. </param>
        /// <param name="errorDetails"> ARM error code and error message associated with the impact. </param>
        /// <param name="workload"> Information about the impacted workload. </param>
        /// <param name="impactGroupId"> Use this field to group impacts. </param>
        /// <param name="confidenceLevel"> Degree of confidence on the impact being a platform issue. </param>
        /// <param name="clientIncidentDetails"> Client incident details ex: incidentId , incident source. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal WorkloadImpactProperties(ProvisioningState? provisioningState, DateTimeOffset startOn, DateTimeOffset? endOn, string impactedResourceId, string impactUniqueId, DateTimeOffset? reportedTimeUtc, string impactCategory, string impactDescription, IList<string> armCorrelationIds, IList<Performance> performance, Connectivity connectivity, WorkloadImpactPropertiesAdditionalProperties additionalProperties, ErrorDetailProperties errorDetails, Workload workload, string impactGroupId, ConfidenceLevel? confidenceLevel, ClientIncidentDetails clientIncidentDetails, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            StartOn = startOn;
            EndOn = endOn;
            ImpactedResourceId = impactedResourceId;
            ImpactUniqueId = impactUniqueId;
            ReportedTimeUtc = reportedTimeUtc;
            ImpactCategory = impactCategory;
            ImpactDescription = impactDescription;
            ArmCorrelationIds = armCorrelationIds;
            Performance = performance;
            Connectivity = connectivity;
            AdditionalProperties = additionalProperties;
            ErrorDetails = errorDetails;
            Workload = workload;
            ImpactGroupId = impactGroupId;
            ConfidenceLevel = confidenceLevel;
            ClientIncidentDetails = clientIncidentDetails;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="WorkloadImpactProperties"/> for deserialization. </summary>
        internal WorkloadImpactProperties()
        {
        }

        /// <summary> Resource provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Time at which impact was observed. </summary>
        public DateTimeOffset StartOn { get; set; }
        /// <summary> Time at which impact has ended. </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary> Azure resource id of the impacted resource. </summary>
        public string ImpactedResourceId { get; set; }
        /// <summary> Unique ID of the impact (UUID). </summary>
        public string ImpactUniqueId { get; }
        /// <summary> Time at which impact is reported. </summary>
        public DateTimeOffset? ReportedTimeUtc { get; }
        /// <summary> Category of the impact,  details can found from /impactCategories API. </summary>
        public string ImpactCategory { get; set; }
        /// <summary> A detailed description of the impact. </summary>
        public string ImpactDescription { get; set; }
        /// <summary> The ARM correlation ids, this is important field for control plane related impacts. </summary>
        public IList<string> ArmCorrelationIds { get; }
        /// <summary> Details about performance issue. Applicable for performance impacts. </summary>
        public IList<Performance> Performance { get; }
        /// <summary> Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue. </summary>
        public Connectivity Connectivity { get; set; }
        /// <summary> Additional fields related to impact, applicable fields per resource type are list under /impactCategories API. </summary>
        public WorkloadImpactPropertiesAdditionalProperties AdditionalProperties { get; set; }
        /// <summary> ARM error code and error message associated with the impact. </summary>
        public ErrorDetailProperties ErrorDetails { get; set; }
        /// <summary> Information about the impacted workload. </summary>
        public Workload Workload { get; set; }
        /// <summary> Use this field to group impacts. </summary>
        public string ImpactGroupId { get; set; }
        /// <summary> Degree of confidence on the impact being a platform issue. </summary>
        public ConfidenceLevel? ConfidenceLevel { get; set; }
        /// <summary> Client incident details ex: incidentId , incident source. </summary>
        public ClientIncidentDetails ClientIncidentDetails { get; set; }
    }
}
