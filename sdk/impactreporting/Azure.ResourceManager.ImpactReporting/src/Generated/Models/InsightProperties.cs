// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ImpactReporting.Models
{
    /// <summary> Impact category properties. </summary>
    public partial class InsightProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="InsightProperties"/>. </summary>
        /// <param name="category"> category of the insight. </param>
        /// <param name="content"> Contains title &amp; description for the insight. </param>
        /// <param name="insightUniqueId"> unique id of the insight. </param>
        /// <param name="impact"> details of of the impact for which insight has been generated. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="category"/>, <paramref name="content"/>, <paramref name="insightUniqueId"/> or <paramref name="impact"/> is null. </exception>
        public InsightProperties(string category, Content content, string insightUniqueId, ImpactDetails impact)
        {
            Argument.AssertNotNull(category, nameof(category));
            Argument.AssertNotNull(content, nameof(content));
            Argument.AssertNotNull(insightUniqueId, nameof(insightUniqueId));
            Argument.AssertNotNull(impact, nameof(impact));

            Category = category;
            Content = content;
            InsightUniqueId = insightUniqueId;
            Impact = impact;
        }

        /// <summary> Initializes a new instance of <see cref="InsightProperties"/>. </summary>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="category"> category of the insight. </param>
        /// <param name="status"> status of the insight. example resolved, repaired, other. </param>
        /// <param name="eventId"> Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event. </param>
        /// <param name="groupId"> Identifier that can be used to group similar insights. </param>
        /// <param name="content"> Contains title &amp; description for the insight. </param>
        /// <param name="eventOn"> Time of the event, which has been correlated the impact. </param>
        /// <param name="insightUniqueId"> unique id of the insight. </param>
        /// <param name="impact"> details of of the impact for which insight has been generated. </param>
        /// <param name="additionalDetails"> additional details of the insight. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InsightProperties(ProvisioningState? provisioningState, string category, string status, string eventId, string groupId, Content content, DateTimeOffset? eventOn, string insightUniqueId, ImpactDetails impact, InsightPropertiesAdditionalDetails additionalDetails, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            Category = category;
            Status = status;
            EventId = eventId;
            GroupId = groupId;
            Content = content;
            EventOn = eventOn;
            InsightUniqueId = insightUniqueId;
            Impact = impact;
            AdditionalDetails = additionalDetails;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="InsightProperties"/> for deserialization. </summary>
        internal InsightProperties()
        {
        }

        /// <summary> Resource provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> category of the insight. </summary>
        public string Category { get; set; }
        /// <summary> status of the insight. example resolved, repaired, other. </summary>
        public string Status { get; set; }
        /// <summary> Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event. </summary>
        public string EventId { get; set; }
        /// <summary> Identifier that can be used to group similar insights. </summary>
        public string GroupId { get; set; }
        /// <summary> Contains title &amp; description for the insight. </summary>
        public Content Content { get; set; }
        /// <summary> Time of the event, which has been correlated the impact. </summary>
        public DateTimeOffset? EventOn { get; set; }
        /// <summary> unique id of the insight. </summary>
        public string InsightUniqueId { get; set; }
        /// <summary> details of of the impact for which insight has been generated. </summary>
        public ImpactDetails Impact { get; set; }
        /// <summary> additional details of the insight. </summary>
        public InsightPropertiesAdditionalDetails AdditionalDetails { get; set; }
    }
}
