// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The list of versions for supported orchestrators.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OrchestratorVersionProfileListResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// OrchestratorVersionProfileListResult class.
        /// </summary>
        public OrchestratorVersionProfileListResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// OrchestratorVersionProfileListResult class.
        /// </summary>
        /// <param name="orchestrators">List of orchestrator version
        /// profiles.</param>
        /// <param name="id">Id of the orchestrator version profile list
        /// result.</param>
        /// <param name="name">Name of the orchestrator version profile list
        /// result.</param>
        /// <param name="type">Type of the orchestrator version profile list
        /// result.</param>
        public OrchestratorVersionProfileListResult(IList<OrchestratorVersionProfile> orchestrators, string id = default(string), string name = default(string), string type = default(string))
        {
            Id = id;
            Name = name;
            Type = type;
            Orchestrators = orchestrators;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets id of the orchestrator version profile list result.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets name of the orchestrator version profile list result.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets type of the orchestrator version profile list result.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets list of orchestrator version profiles.
        /// </summary>
        [JsonProperty(PropertyName = "properties.orchestrators")]
        public IList<OrchestratorVersionProfile> Orchestrators { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Orchestrators == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Orchestrators");
            }
            if (Orchestrators != null)
            {
                foreach (var element in Orchestrators)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
