// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{

    /// <summary>
    /// Defines values for Expander.
    /// </summary>
    public static class Expander
    {
        /// <summary>
        /// Selects the node group that will have the least idle CPU (if tied,
        /// unused memory) after scale-up. This is useful when you have
        /// different classes of nodes, for example, high CPU or high memory
        /// nodes, and only want to expand those when there are pending pods
        /// that need a lot of those resources.
        /// </summary>
        public const string LeastWaste = "least-waste";
        /// <summary>
        /// Selects the node group that would be able to schedule the most pods
        /// when scaling up. This is useful when you are using nodeSelector to
        /// make sure certain pods land on certain nodes. Note that this won't
        /// cause the autoscaler to select bigger nodes vs. smaller, as it can
        /// add multiple smaller nodes at once.
        /// </summary>
        public const string MostPods = "most-pods";
        /// <summary>
        /// Selects the node group that has the highest priority assigned by
        /// the user. It's configuration is described in more details
        /// [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md).
        /// </summary>
        public const string Priority = "priority";
        /// <summary>
        /// Used when you don't have a particular need for the node groups to
        /// scale differently.
        /// </summary>
        public const string Random = "random";
    }
}
