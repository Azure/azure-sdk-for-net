// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Identity for the managed cluster.
    /// </summary>
    public partial class ManagedClusterIdentity
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterIdentity class.
        /// </summary>
        public ManagedClusterIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterIdentity class.
        /// </summary>
        /// <param name="principalId">The principal id of the system assigned
        /// identity which is used by master components.</param>
        /// <param name="tenantId">The tenant id of the system assigned
        /// identity which is used by master components.</param>
        /// <param name="type">The type of identity used for the managed
        /// cluster. Type 'SystemAssigned' will use an implicitly created
        /// identity in master components and an auto-created user assigned
        /// identity in MC_ resource group in agent nodes. Type 'None' will not
        /// use MSI for the managed cluster, service principal will be used
        /// instead. Possible values include: 'SystemAssigned', 'UserAssigned',
        /// 'None'</param>
        /// <param name="userAssignedIdentities">The user identity associated
        /// with the managed cluster. This identity will be used in control
        /// plane and only one user assigned identity is allowed. The user
        /// identity dictionary key references will be ARM resource ids in the
        /// form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.</param>
        public ManagedClusterIdentity(string principalId = default(string), string tenantId = default(string), ResourceIdentityType? type = default(ResourceIdentityType?), IDictionary<string, ManagedClusterIdentityUserAssignedIdentitiesValue> userAssignedIdentities = default(IDictionary<string, ManagedClusterIdentityUserAssignedIdentitiesValue>))
        {
            PrincipalId = principalId;
            TenantId = tenantId;
            Type = type;
            UserAssignedIdentities = userAssignedIdentities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the principal id of the system assigned identity which is used
        /// by master components.
        /// </summary>
        [JsonProperty(PropertyName = "principalId")]
        public string PrincipalId { get; private set; }

        /// <summary>
        /// Gets the tenant id of the system assigned identity which is used by
        /// master components.
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; private set; }

        /// <summary>
        /// Gets or sets the type of identity used for the managed cluster.
        /// Type 'SystemAssigned' will use an implicitly created identity in
        /// master components and an auto-created user assigned identity in MC_
        /// resource group in agent nodes. Type 'None' will not use MSI for the
        /// managed cluster, service principal will be used instead. Possible
        /// values include: 'SystemAssigned', 'UserAssigned', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public ResourceIdentityType? Type { get; set; }

        /// <summary>
        /// Gets or sets the user identity associated with the managed cluster.
        /// This identity will be used in control plane and only one user
        /// assigned identity is allowed. The user identity dictionary key
        /// references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [JsonProperty(PropertyName = "userAssignedIdentities")]
        public IDictionary<string, ManagedClusterIdentityUserAssignedIdentitiesValue> UserAssignedIdentities { get; set; }

    }
}
