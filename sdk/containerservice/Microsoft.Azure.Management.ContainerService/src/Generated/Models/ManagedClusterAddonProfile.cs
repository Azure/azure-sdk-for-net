// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Kubernetes add-on profile for a managed cluster.
    /// </summary>
    public partial class ManagedClusterAddonProfile
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterAddonProfile class.
        /// </summary>
        public ManagedClusterAddonProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterAddonProfile class.
        /// </summary>
        /// <param name="enabled">Whether the add-on is enabled or not.</param>
        /// <param name="config">Key-value pairs for configuring an
        /// add-on.</param>
        /// <param name="identity">Information of user assigned identity used
        /// by this add-on.</param>
        public ManagedClusterAddonProfile(bool enabled, IDictionary<string, string> config = default(IDictionary<string, string>), ManagedClusterAddonProfileIdentity identity = default(ManagedClusterAddonProfileIdentity))
        {
            Enabled = enabled;
            Config = config;
            Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether the add-on is enabled or not.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or sets key-value pairs for configuring an add-on.
        /// </summary>
        [JsonProperty(PropertyName = "config")]
        public IDictionary<string, string> Config { get; set; }

        /// <summary>
        /// Gets information of user assigned identity used by this add-on.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ManagedClusterAddonProfileIdentity Identity { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
