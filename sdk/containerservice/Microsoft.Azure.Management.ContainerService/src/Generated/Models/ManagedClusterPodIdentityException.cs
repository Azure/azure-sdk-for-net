// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ManagedClusterPodIdentityException
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ManagedClusterPodIdentityException class.
        /// </summary>
        public ManagedClusterPodIdentityException()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ManagedClusterPodIdentityException class.
        /// </summary>
        /// <param name="name">Name of the pod identity exception.</param>
        /// <param name="namespaceProperty">Namespace of the pod identity
        /// exception.</param>
        /// <param name="podLabels">Pod labels to match.</param>
        public ManagedClusterPodIdentityException(string name, string namespaceProperty, IDictionary<string, string> podLabels)
        {
            Name = name;
            NamespaceProperty = namespaceProperty;
            PodLabels = podLabels;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the pod identity exception.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets namespace of the pod identity exception.
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets pod labels to match.
        /// </summary>
        [JsonProperty(PropertyName = "podLabels")]
        public IDictionary<string, string> PodLabels { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (NamespaceProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NamespaceProperty");
            }
            if (PodLabels == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PodLabels");
            }
        }
    }
}
