// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ContainerService.Models;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.ContainerService
{
    /// <summary> A class representing the ManagedCluster data model. </summary>
    public partial class ManagedClusterData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of ManagedClusterData. </summary>
        /// <param name="location"> The location. </param>
        public ManagedClusterData(AzureLocation location) : base(location)
        {
            AgentPoolProfiles = new ChangeTrackingList<ManagedClusterAgentPoolProfile>();
            AddonProfiles = new ChangeTrackingDictionary<string, ManagedClusterAddonProfile>();
            IdentityProfile = new ChangeTrackingDictionary<string, Models.UserAssignedIdentity>();
            PrivateLinkResources = new ChangeTrackingList<ContainerServicePrivateLinkResource>();
        }

        /// <summary> Initializes a new instance of ManagedClusterData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> The managed cluster SKU. </param>
        /// <param name="extendedLocation"> The extended location of the Virtual Machine. </param>
        /// <param name="identity"> The identity of the managed cluster, if configured. </param>
        /// <param name="provisioningState"> The current provisioning state. </param>
        /// <param name="powerState"> The Power State of the cluster. </param>
        /// <param name="maxAgentPools"> The max number of agent pools for the managed cluster. </param>
        /// <param name="kubernetesVersion"> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -&gt; 1.15.x or 1.15.x -&gt; 1.16.x are allowed, however 1.14.x -&gt; 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details. </param>
        /// <param name="currentKubernetesVersion"> If kubernetesVersion was a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If kubernetesVersion was &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </param>
        /// <param name="dnsPrefix"> This cannot be updated once the Managed Cluster has been created. </param>
        /// <param name="fqdnSubdomain"> This cannot be updated once the Managed Cluster has been created. </param>
        /// <param name="fqdn"> The FQDN of the master pool. </param>
        /// <param name="privateFqdn"> The FQDN of private cluster. </param>
        /// <param name="azurePortalFqdn"> The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn&apos;t handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly. </param>
        /// <param name="agentPoolProfiles"> The agent pool properties. </param>
        /// <param name="linuxProfile"> The profile for Linux VMs in the Managed Cluster. </param>
        /// <param name="windowsProfile"> The profile for Windows VMs in the Managed Cluster. </param>
        /// <param name="servicePrincipalProfile"> Information about a service principal identity for the cluster to use for manipulating Azure APIs. </param>
        /// <param name="addonProfiles"> The profile of managed cluster add-on. </param>
        /// <param name="podIdentityProfile"> See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration. </param>
        /// <param name="nodeResourceGroup"> The name of the resource group containing agent pool nodes. </param>
        /// <param name="enableRbac"> Whether to enable Kubernetes Role-Based Access Control. </param>
        /// <param name="enablePodSecurityPolicy"> (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy. </param>
        /// <param name="networkProfile"> The network configuration profile. </param>
        /// <param name="aadProfile"> The Azure Active Directory configuration. </param>
        /// <param name="autoUpgradeProfile"> The auto upgrade configuration. </param>
        /// <param name="autoScalerProfile"> Parameters to be applied to the cluster-autoscaler when enabled. </param>
        /// <param name="apiServerAccessProfile"> The access profile for managed cluster API server. </param>
        /// <param name="diskEncryptionSetId"> This is of the form: &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}&apos;. </param>
        /// <param name="identityProfile"> Identities associated with the cluster. </param>
        /// <param name="privateLinkResources"> Private link resources associated with the cluster. </param>
        /// <param name="disableLocalAccounts"> If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview). </param>
        /// <param name="httpProxyConfig"> Configurations for provisioning the cluster with HTTP proxy servers. </param>
        /// <param name="securityProfile"> Security profile for the managed cluster. </param>
        /// <param name="storageProfile"> Storage profile for the managed cluster. </param>
        /// <param name="publicNetworkAccess"> Allow or deny public network access for AKS. </param>
        internal ManagedClusterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ManagedClusterSKU sku, ExtendedLocation extendedLocation, ManagedClusterIdentity identity, string provisioningState, PowerState powerState, int? maxAgentPools, string kubernetesVersion, string currentKubernetesVersion, string dnsPrefix, string fqdnSubdomain, string fqdn, string privateFqdn, string azurePortalFqdn, IList<ManagedClusterAgentPoolProfile> agentPoolProfiles, ContainerServiceLinuxProfile linuxProfile, ManagedClusterWindowsProfile windowsProfile, ManagedClusterServicePrincipalProfile servicePrincipalProfile, IDictionary<string, ManagedClusterAddonProfile> addonProfiles, ManagedClusterPodIdentityProfile podIdentityProfile, string nodeResourceGroup, bool? enableRbac, bool? enablePodSecurityPolicy, ContainerServiceNetworkProfile networkProfile, ManagedClusterAADProfile aadProfile, ManagedClusterAutoUpgradeProfile autoUpgradeProfile, ManagedClusterPropertiesAutoScalerProfile autoScalerProfile, ManagedClusterAPIServerAccessProfile apiServerAccessProfile, string diskEncryptionSetId, IDictionary<string, Models.UserAssignedIdentity> identityProfile, IList<ContainerServicePrivateLinkResource> privateLinkResources, bool? disableLocalAccounts, ManagedClusterHttpProxyConfig httpProxyConfig, ManagedClusterSecurityProfile securityProfile, ManagedClusterStorageProfile storageProfile, PublicNetworkAccess? publicNetworkAccess) : base(id, name, resourceType, systemData, tags, location)
        {
            Sku = sku;
            ExtendedLocation = extendedLocation;
            Identity = identity;
            ProvisioningState = provisioningState;
            PowerState = powerState;
            MaxAgentPools = maxAgentPools;
            KubernetesVersion = kubernetesVersion;
            CurrentKubernetesVersion = currentKubernetesVersion;
            DnsPrefix = dnsPrefix;
            FqdnSubdomain = fqdnSubdomain;
            Fqdn = fqdn;
            PrivateFqdn = privateFqdn;
            AzurePortalFqdn = azurePortalFqdn;
            AgentPoolProfiles = agentPoolProfiles;
            LinuxProfile = linuxProfile;
            WindowsProfile = windowsProfile;
            ServicePrincipalProfile = servicePrincipalProfile;
            AddonProfiles = addonProfiles;
            PodIdentityProfile = podIdentityProfile;
            NodeResourceGroup = nodeResourceGroup;
            EnableRbac = enableRbac;
            EnablePodSecurityPolicy = enablePodSecurityPolicy;
            NetworkProfile = networkProfile;
            AadProfile = aadProfile;
            AutoUpgradeProfile = autoUpgradeProfile;
            AutoScalerProfile = autoScalerProfile;
            ApiServerAccessProfile = apiServerAccessProfile;
            DiskEncryptionSetId = diskEncryptionSetId;
            IdentityProfile = identityProfile;
            PrivateLinkResources = privateLinkResources;
            DisableLocalAccounts = disableLocalAccounts;
            HttpProxyConfig = httpProxyConfig;
            SecurityProfile = securityProfile;
            StorageProfile = storageProfile;
            PublicNetworkAccess = publicNetworkAccess;
        }

        /// <summary> The managed cluster SKU. </summary>
        public ManagedClusterSKU Sku { get; set; }
        /// <summary> The extended location of the Virtual Machine. </summary>
        public ExtendedLocation ExtendedLocation { get; set; }
        /// <summary> The identity of the managed cluster, if configured. </summary>
        public ManagedClusterIdentity Identity { get; set; }
        /// <summary> The current provisioning state. </summary>
        public string ProvisioningState { get; }
        /// <summary> The Power State of the cluster. </summary>
        internal PowerState PowerState { get; }
        /// <summary> Tells whether the cluster is Running or Stopped. </summary>
        public Code? PowerStateCode
        {
            get => PowerState?.Code;
        }

        /// <summary> The max number of agent pools for the managed cluster. </summary>
        public int? MaxAgentPools { get; }
        /// <summary> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -&gt; 1.15.x or 1.15.x -&gt; 1.16.x are allowed, however 1.14.x -&gt; 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details. </summary>
        public string KubernetesVersion { get; set; }
        /// <summary> If kubernetesVersion was a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If kubernetesVersion was &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </summary>
        public string CurrentKubernetesVersion { get; }
        /// <summary> This cannot be updated once the Managed Cluster has been created. </summary>
        public string DnsPrefix { get; set; }
        /// <summary> This cannot be updated once the Managed Cluster has been created. </summary>
        public string FqdnSubdomain { get; set; }
        /// <summary> The FQDN of the master pool. </summary>
        public string Fqdn { get; }
        /// <summary> The FQDN of private cluster. </summary>
        public string PrivateFqdn { get; }
        /// <summary> The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn&apos;t handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly. </summary>
        public string AzurePortalFqdn { get; }
        /// <summary> The agent pool properties. </summary>
        public IList<ManagedClusterAgentPoolProfile> AgentPoolProfiles { get; }
        /// <summary> The profile for Linux VMs in the Managed Cluster. </summary>
        public ContainerServiceLinuxProfile LinuxProfile { get; set; }
        /// <summary> The profile for Windows VMs in the Managed Cluster. </summary>
        public ManagedClusterWindowsProfile WindowsProfile { get; set; }
        /// <summary> Information about a service principal identity for the cluster to use for manipulating Azure APIs. </summary>
        public ManagedClusterServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary> The profile of managed cluster add-on. </summary>
        public IDictionary<string, ManagedClusterAddonProfile> AddonProfiles { get; }
        /// <summary> See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration. </summary>
        public ManagedClusterPodIdentityProfile PodIdentityProfile { get; set; }
        /// <summary> The name of the resource group containing agent pool nodes. </summary>
        public string NodeResourceGroup { get; set; }
        /// <summary> Whether to enable Kubernetes Role-Based Access Control. </summary>
        public bool? EnableRbac { get; set; }
        /// <summary> (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy. </summary>
        public bool? EnablePodSecurityPolicy { get; set; }
        /// <summary> The network configuration profile. </summary>
        public ContainerServiceNetworkProfile NetworkProfile { get; set; }
        /// <summary> The Azure Active Directory configuration. </summary>
        public ManagedClusterAADProfile AadProfile { get; set; }
        /// <summary> The auto upgrade configuration. </summary>
        internal ManagedClusterAutoUpgradeProfile AutoUpgradeProfile { get; set; }
        /// <summary> For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel). </summary>
        public UpgradeChannel? UpgradeChannel
        {
            get => AutoUpgradeProfile is null ? default : AutoUpgradeProfile.UpgradeChannel;
            set
            {
                if (AutoUpgradeProfile is null)
                    AutoUpgradeProfile = new ManagedClusterAutoUpgradeProfile();
                AutoUpgradeProfile.UpgradeChannel = value;
            }
        }

        /// <summary> Parameters to be applied to the cluster-autoscaler when enabled. </summary>
        public ManagedClusterPropertiesAutoScalerProfile AutoScalerProfile { get; set; }
        /// <summary> The access profile for managed cluster API server. </summary>
        public ManagedClusterAPIServerAccessProfile ApiServerAccessProfile { get; set; }
        /// <summary> This is of the form: &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}&apos;. </summary>
        public string DiskEncryptionSetId { get; set; }
        /// <summary> Identities associated with the cluster. </summary>
        public IDictionary<string, Models.UserAssignedIdentity> IdentityProfile { get; }
        /// <summary> Private link resources associated with the cluster. </summary>
        public IList<ContainerServicePrivateLinkResource> PrivateLinkResources { get; }
        /// <summary> If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview). </summary>
        public bool? DisableLocalAccounts { get; set; }
        /// <summary> Configurations for provisioning the cluster with HTTP proxy servers. </summary>
        public ManagedClusterHttpProxyConfig HttpProxyConfig { get; set; }
        /// <summary> Security profile for the managed cluster. </summary>
        internal ManagedClusterSecurityProfile SecurityProfile { get; set; }
        /// <summary> Azure Defender settings for the security profile. </summary>
        public ManagedClusterSecurityProfileAzureDefender SecurityAzureDefender
        {
            get => SecurityProfile is null ? default : SecurityProfile.AzureDefender;
            set
            {
                if (SecurityProfile is null)
                    SecurityProfile = new ManagedClusterSecurityProfile();
                SecurityProfile.AzureDefender = value;
            }
        }

        /// <summary> Storage profile for the managed cluster. </summary>
        public ManagedClusterStorageProfile StorageProfile { get; set; }
        /// <summary> Allow or deny public network access for AKS. </summary>
        public PublicNetworkAccess? PublicNetworkAccess { get; set; }
    }
}
