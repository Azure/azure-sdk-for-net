// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ContainerService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ContainerService
{
    /// <summary>
    /// A class representing the AgentPoolUpgradeProfile data model.
    /// The list of available upgrades for an agent pool.
    /// </summary>
    public partial class AgentPoolUpgradeProfileData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="AgentPoolUpgradeProfileData"/>. </summary>
        /// <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        /// <param name="osType"> The operating system type. The default is Linux. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="kubernetesVersion"/> is null. </exception>
        internal AgentPoolUpgradeProfileData(string kubernetesVersion, ContainerServiceOSType osType)
        {
            Argument.AssertNotNull(kubernetesVersion, nameof(kubernetesVersion));

            KubernetesVersion = kubernetesVersion;
            OSType = osType;
            Upgrades = new ChangeTrackingList<AgentPoolUpgradeProfilePropertiesUpgradesItem>();
        }

        /// <summary> Initializes a new instance of <see cref="AgentPoolUpgradeProfileData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        /// <param name="osType"> The operating system type. The default is Linux. </param>
        /// <param name="upgrades"> List of orchestrator types and versions available for upgrade. </param>
        /// <param name="latestNodeImageVersion"> The latest AKS supported node image version. </param>
        internal AgentPoolUpgradeProfileData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string kubernetesVersion, ContainerServiceOSType osType, IReadOnlyList<AgentPoolUpgradeProfilePropertiesUpgradesItem> upgrades, string latestNodeImageVersion) : base(id, name, resourceType, systemData)
        {
            KubernetesVersion = kubernetesVersion;
            OSType = osType;
            Upgrades = upgrades;
            LatestNodeImageVersion = latestNodeImageVersion;
        }

        /// <summary> The Kubernetes version (major.minor.patch). </summary>
        public string KubernetesVersion { get; }
        /// <summary> The operating system type. The default is Linux. </summary>
        public ContainerServiceOSType OSType { get; }
        /// <summary> List of orchestrator types and versions available for upgrade. </summary>
        public IReadOnlyList<AgentPoolUpgradeProfilePropertiesUpgradesItem> Upgrades { get; }
        /// <summary> The latest AKS supported node image version. </summary>
        public string LatestNodeImageVersion { get; }
    }
}
