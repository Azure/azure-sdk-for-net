// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Specifications on auto-scaling. </summary>
    public partial class AutoScaleProfile
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AutoScaleProfile"/>. </summary>
        public AutoScaleProfile()
        {
            Sizes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AutoScaleProfile"/>. </summary>
        /// <param name="sizes"> The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size. </param>
        /// <param name="minCount"> The minimum number of nodes of the specified sizes. </param>
        /// <param name="maxCount"> The maximum number of nodes of the specified sizes. </param>
        /// <param name="osDiskSizeGB"> OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </param>
        /// <param name="osDiskType"> The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AutoScaleProfile(IList<string> sizes, int? minCount, int? maxCount, int? osDiskSizeGB, ContainerServiceOSDiskType? osDiskType, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Sizes = sizes;
            MinCount = minCount;
            MaxCount = maxCount;
            OSDiskSizeGB = osDiskSizeGB;
            OSDiskType = osDiskType;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size. </summary>
        [WirePath("sizes")]
        public IList<string> Sizes { get; }
        /// <summary> The minimum number of nodes of the specified sizes. </summary>
        [WirePath("minCount")]
        public int? MinCount { get; set; }
        /// <summary> The maximum number of nodes of the specified sizes. </summary>
        [WirePath("maxCount")]
        public int? MaxCount { get; set; }
        /// <summary> OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </summary>
        [WirePath("osDiskSizeGB")]
        public int? OSDiskSizeGB { get; set; }
        /// <summary> The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). </summary>
        [WirePath("osDiskType")]
        public ContainerServiceOSDiskType? OSDiskType { get; set; }
    }
}
