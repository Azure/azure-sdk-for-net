// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Holds configuration customizations for IPVS. May only be specified if 'mode' is set to 'IPVS'. </summary>
    public partial class ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig"/>. </summary>
        public ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig"/>. </summary>
        /// <param name="scheduler"> IPVS scheduler, for more information please see http://www.linuxvirtualserver.org/docs/scheduling.html. </param>
        /// <param name="tcpTimeoutSeconds"> The timeout value used for idle IPVS TCP sessions in seconds. Must be a positive integer value. </param>
        /// <param name="tcpFinTimeoutSeconds"> The timeout value used for IPVS TCP sessions after receiving a FIN in seconds. Must be a positive integer value. </param>
        /// <param name="udpTimeoutSeconds"> The timeout value used for IPVS UDP packets in seconds. Must be a positive integer value. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig(IPVSScheduler? scheduler, int? tcpTimeoutSeconds, int? tcpFinTimeoutSeconds, int? udpTimeoutSeconds, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Scheduler = scheduler;
            TcpTimeoutSeconds = tcpTimeoutSeconds;
            TcpFinTimeoutSeconds = tcpFinTimeoutSeconds;
            UdpTimeoutSeconds = udpTimeoutSeconds;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> IPVS scheduler, for more information please see http://www.linuxvirtualserver.org/docs/scheduling.html. </summary>
        [WirePath("scheduler")]
        public IPVSScheduler? Scheduler { get; set; }
        /// <summary> The timeout value used for idle IPVS TCP sessions in seconds. Must be a positive integer value. </summary>
        [WirePath("tcpTimeoutSeconds")]
        public int? TcpTimeoutSeconds { get; set; }
        /// <summary> The timeout value used for IPVS TCP sessions after receiving a FIN in seconds. Must be a positive integer value. </summary>
        [WirePath("tcpFinTimeoutSeconds")]
        public int? TcpFinTimeoutSeconds { get; set; }
        /// <summary> The timeout value used for IPVS UDP packets in seconds. Must be a positive integer value. </summary>
        [WirePath("udpTimeoutSeconds")]
        public int? UdpTimeoutSeconds { get; set; }
    }
}
