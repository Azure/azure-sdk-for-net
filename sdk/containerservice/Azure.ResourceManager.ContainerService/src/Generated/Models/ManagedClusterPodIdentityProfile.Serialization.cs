// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    public partial class ManagedClusterPodIdentityProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Enabled))
            {
                writer.WritePropertyName("enabled");
                writer.WriteBooleanValue(Enabled.Value);
            }
            if (Optional.IsDefined(AllowNetworkPluginKubenet))
            {
                writer.WritePropertyName("allowNetworkPluginKubenet");
                writer.WriteBooleanValue(AllowNetworkPluginKubenet.Value);
            }
            if (Optional.IsCollectionDefined(UserAssignedIdentities))
            {
                writer.WritePropertyName("userAssignedIdentities");
                writer.WriteStartArray();
                foreach (var item in UserAssignedIdentities)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(UserAssignedIdentityExceptions))
            {
                writer.WritePropertyName("userAssignedIdentityExceptions");
                writer.WriteStartArray();
                foreach (var item in UserAssignedIdentityExceptions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static ManagedClusterPodIdentityProfile DeserializeManagedClusterPodIdentityProfile(JsonElement element)
        {
            Optional<bool> enabled = default;
            Optional<bool> allowNetworkPluginKubenet = default;
            Optional<IList<ManagedClusterPodIdentity>> userAssignedIdentities = default;
            Optional<IList<ManagedClusterPodIdentityException>> userAssignedIdentityExceptions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("enabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    enabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("allowNetworkPluginKubenet"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    allowNetworkPluginKubenet = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("userAssignedIdentities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ManagedClusterPodIdentity> array = new List<ManagedClusterPodIdentity>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ManagedClusterPodIdentity.DeserializeManagedClusterPodIdentity(item));
                    }
                    userAssignedIdentities = array;
                    continue;
                }
                if (property.NameEquals("userAssignedIdentityExceptions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ManagedClusterPodIdentityException> array = new List<ManagedClusterPodIdentityException>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ManagedClusterPodIdentityException.DeserializeManagedClusterPodIdentityException(item));
                    }
                    userAssignedIdentityExceptions = array;
                    continue;
                }
            }
            return new ManagedClusterPodIdentityProfile(Optional.ToNullable(enabled), Optional.ToNullable(allowNetworkPluginKubenet), Optional.ToList(userAssignedIdentities), Optional.ToList(userAssignedIdentityExceptions));
        }
    }
}
