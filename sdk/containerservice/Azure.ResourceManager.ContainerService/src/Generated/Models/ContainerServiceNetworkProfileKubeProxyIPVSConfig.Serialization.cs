// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    public partial class ContainerServiceNetworkProfileKubeProxyIPVSConfig : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Scheduler))
            {
                writer.WritePropertyName("scheduler"u8);
                writer.WriteStringValue(Scheduler.Value.ToString());
            }
            if (Optional.IsDefined(TcpTimeoutSeconds))
            {
                writer.WritePropertyName("tcpTimeoutSeconds"u8);
                writer.WriteNumberValue(TcpTimeoutSeconds.Value);
            }
            if (Optional.IsDefined(TcpFinTimeoutSeconds))
            {
                writer.WritePropertyName("tcpFinTimeoutSeconds"u8);
                writer.WriteNumberValue(TcpFinTimeoutSeconds.Value);
            }
            if (Optional.IsDefined(UdpTimeoutSeconds))
            {
                writer.WritePropertyName("udpTimeoutSeconds"u8);
                writer.WriteNumberValue(UdpTimeoutSeconds.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerServiceNetworkProfileKubeProxyIPVSConfig DeserializeContainerServiceNetworkProfileKubeProxyIPVSConfig(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ContainerServiceNetworkProfileKubeProxyIPVSScheduler> scheduler = default;
            Optional<int> tcpTimeoutSeconds = default;
            Optional<int> tcpFinTimeoutSeconds = default;
            Optional<int> udpTimeoutSeconds = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("scheduler"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scheduler = new ContainerServiceNetworkProfileKubeProxyIPVSScheduler(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("tcpTimeoutSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tcpTimeoutSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("tcpFinTimeoutSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tcpFinTimeoutSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("udpTimeoutSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    udpTimeoutSeconds = property.Value.GetInt32();
                    continue;
                }
            }
            return new ContainerServiceNetworkProfileKubeProxyIPVSConfig(Optional.ToNullable(scheduler), Optional.ToNullable(tcpTimeoutSeconds), Optional.ToNullable(tcpFinTimeoutSeconds), Optional.ToNullable(udpTimeoutSeconds));
        }
    }
}
