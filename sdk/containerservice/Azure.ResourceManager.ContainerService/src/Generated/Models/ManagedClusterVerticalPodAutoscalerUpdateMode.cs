// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Each update mode level is a superset of the lower levels. Off&lt;Initial&lt;Recreate&lt;=Auto. For example: if UpdateMode is Initial, it means VPA sets the recommended resources in the VerticalPodAutoscaler Custom Resource (from UpdateMode Off) and also assigns resources on pod creation (from Initial). The default value is Off. </summary>
    public readonly partial struct ManagedClusterVerticalPodAutoscalerUpdateMode : IEquatable<ManagedClusterVerticalPodAutoscalerUpdateMode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ManagedClusterVerticalPodAutoscalerUpdateMode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ManagedClusterVerticalPodAutoscalerUpdateMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string OffValue = "Off";
        private const string InitialValue = "Initial";
        private const string RecreateValue = "Recreate";
        private const string AutoValue = "Auto";

        /// <summary> Autoscaler never changes pod resources but provides recommendations. </summary>
        public static ManagedClusterVerticalPodAutoscalerUpdateMode Off { get; } = new ManagedClusterVerticalPodAutoscalerUpdateMode(OffValue);
        /// <summary> Autoscaler only assigns resources on pod creation and doesn't change them during the lifetime of the pod. </summary>
        public static ManagedClusterVerticalPodAutoscalerUpdateMode Initial { get; } = new ManagedClusterVerticalPodAutoscalerUpdateMode(InitialValue);
        /// <summary> Autoscaler assigns resources on pod creation and updates pods that need further scaling during their lifetime by deleting and recreating. </summary>
        public static ManagedClusterVerticalPodAutoscalerUpdateMode Recreate { get; } = new ManagedClusterVerticalPodAutoscalerUpdateMode(RecreateValue);
        /// <summary> Autoscaler chooses the update mode. Autoscaler currently does the same as Recreate. In the future, it may take advantage of restart-free mechanisms once they are available. </summary>
        public static ManagedClusterVerticalPodAutoscalerUpdateMode Auto { get; } = new ManagedClusterVerticalPodAutoscalerUpdateMode(AutoValue);
        /// <summary> Determines if two <see cref="ManagedClusterVerticalPodAutoscalerUpdateMode"/> values are the same. </summary>
        public static bool operator ==(ManagedClusterVerticalPodAutoscalerUpdateMode left, ManagedClusterVerticalPodAutoscalerUpdateMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ManagedClusterVerticalPodAutoscalerUpdateMode"/> values are not the same. </summary>
        public static bool operator !=(ManagedClusterVerticalPodAutoscalerUpdateMode left, ManagedClusterVerticalPodAutoscalerUpdateMode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ManagedClusterVerticalPodAutoscalerUpdateMode"/>. </summary>
        public static implicit operator ManagedClusterVerticalPodAutoscalerUpdateMode(string value) => new ManagedClusterVerticalPodAutoscalerUpdateMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ManagedClusterVerticalPodAutoscalerUpdateMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ManagedClusterVerticalPodAutoscalerUpdateMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
