// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Defines access to special link local addresses (Azure Instance Metadata Service, aka IMDS) for pods with hostNetwork=false. If not specified, the default is 'IMDS'. </summary>
    public readonly partial struct PodLinkLocalAccess : IEquatable<PodLinkLocalAccess>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PodLinkLocalAccess"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PodLinkLocalAccess(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ImdsValue = "IMDS";
        private const string NoneValue = "None";

        /// <summary> Pods with hostNetwork=false can access Azure Instance Metadata Service (IMDS) without restriction. </summary>
        public static PodLinkLocalAccess Imds { get; } = new PodLinkLocalAccess(ImdsValue);
        /// <summary> Pods with hostNetwork=false cannot access Azure Instance Metadata Service (IMDS). </summary>
        public static PodLinkLocalAccess None { get; } = new PodLinkLocalAccess(NoneValue);
        /// <summary> Determines if two <see cref="PodLinkLocalAccess"/> values are the same. </summary>
        public static bool operator ==(PodLinkLocalAccess left, PodLinkLocalAccess right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PodLinkLocalAccess"/> values are not the same. </summary>
        public static bool operator !=(PodLinkLocalAccess left, PodLinkLocalAccess right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="PodLinkLocalAccess"/>. </summary>
        public static implicit operator PodLinkLocalAccess(string value) => new PodLinkLocalAccess(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PodLinkLocalAccess other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PodLinkLocalAccess other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
