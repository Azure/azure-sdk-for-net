// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> The restriction level applied to the cluster's node resource group. </summary>
    public readonly partial struct ManagedClusterNodeResourceGroupRestrictionLevel : IEquatable<ManagedClusterNodeResourceGroupRestrictionLevel>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ManagedClusterNodeResourceGroupRestrictionLevel"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ManagedClusterNodeResourceGroupRestrictionLevel(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnrestrictedValue = "Unrestricted";
        private const string ReadOnlyValue = "ReadOnly";

        /// <summary> All RBAC permissions are allowed on the managed node resource group. </summary>
        public static ManagedClusterNodeResourceGroupRestrictionLevel Unrestricted { get; } = new ManagedClusterNodeResourceGroupRestrictionLevel(UnrestrictedValue);
        /// <summary> Only */read RBAC permissions allowed on the managed node resource group. </summary>
        public static ManagedClusterNodeResourceGroupRestrictionLevel ReadOnly { get; } = new ManagedClusterNodeResourceGroupRestrictionLevel(ReadOnlyValue);
        /// <summary> Determines if two <see cref="ManagedClusterNodeResourceGroupRestrictionLevel"/> values are the same. </summary>
        public static bool operator ==(ManagedClusterNodeResourceGroupRestrictionLevel left, ManagedClusterNodeResourceGroupRestrictionLevel right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ManagedClusterNodeResourceGroupRestrictionLevel"/> values are not the same. </summary>
        public static bool operator !=(ManagedClusterNodeResourceGroupRestrictionLevel left, ManagedClusterNodeResourceGroupRestrictionLevel right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ManagedClusterNodeResourceGroupRestrictionLevel"/>. </summary>
        public static implicit operator ManagedClusterNodeResourceGroupRestrictionLevel(string value) => new ManagedClusterNodeResourceGroupRestrictionLevel(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ManagedClusterNodeResourceGroupRestrictionLevel other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ManagedClusterNodeResourceGroupRestrictionLevel other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
