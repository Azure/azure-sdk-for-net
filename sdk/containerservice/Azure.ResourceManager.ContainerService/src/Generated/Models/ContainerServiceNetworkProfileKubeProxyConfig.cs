// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Holds configuration customizations for kube-proxy. Any values not defined will use the kube-proxy defaulting behavior. See https://v&lt;version&gt;.docs.kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/ where &lt;version&gt; is represented by a &lt;major version&gt;-&lt;minor version&gt; string. Kubernetes version 1.23 would be '1-23'. </summary>
    public partial class ContainerServiceNetworkProfileKubeProxyConfig
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContainerServiceNetworkProfileKubeProxyConfig"/>. </summary>
        public ContainerServiceNetworkProfileKubeProxyConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ContainerServiceNetworkProfileKubeProxyConfig"/>. </summary>
        /// <param name="enabled"> Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists, kube-proxy is enabled in AKS by default without these customizations). </param>
        /// <param name="mode"> Specify which proxy mode to use ('IPTABLES' or 'IPVS'). </param>
        /// <param name="ipvsConfig"> Holds configuration customizations for IPVS. May only be specified if 'mode' is set to 'IPVS'. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerServiceNetworkProfileKubeProxyConfig(bool? enabled, Mode? mode, ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig ipvsConfig, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Enabled = enabled;
            Mode = mode;
            IPVSConfig = ipvsConfig;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists, kube-proxy is enabled in AKS by default without these customizations). </summary>
        [WirePath("enabled")]
        public bool? Enabled { get; set; }
        /// <summary> Specify which proxy mode to use ('IPTABLES' or 'IPVS'). </summary>
        [WirePath("mode")]
        public Mode? Mode { get; set; }
        /// <summary> Holds configuration customizations for IPVS. May only be specified if 'mode' is set to 'IPVS'. </summary>
        [WirePath("ipvsConfig")]
        public ContainerServiceNetworkProfileKubeProxyConfigIPVSConfig IPVSConfig { get; set; }
    }
}
