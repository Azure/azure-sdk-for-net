// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. </summary>
    public readonly partial struct GPUInstanceProfile : IEquatable<GPUInstanceProfile>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="GPUInstanceProfile"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public GPUInstanceProfile(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MIG1GValue = "MIG1g";
        private const string MIG2GValue = "MIG2g";
        private const string MIG3GValue = "MIG3g";
        private const string MIG4GValue = "MIG4g";
        private const string MIG7GValue = "MIG7g";

        /// <summary> MIG1g. </summary>
        public static GPUInstanceProfile MIG1G { get; } = new GPUInstanceProfile(MIG1GValue);
        /// <summary> MIG2g. </summary>
        public static GPUInstanceProfile MIG2G { get; } = new GPUInstanceProfile(MIG2GValue);
        /// <summary> MIG3g. </summary>
        public static GPUInstanceProfile MIG3G { get; } = new GPUInstanceProfile(MIG3GValue);
        /// <summary> MIG4g. </summary>
        public static GPUInstanceProfile MIG4G { get; } = new GPUInstanceProfile(MIG4GValue);
        /// <summary> MIG7g. </summary>
        public static GPUInstanceProfile MIG7G { get; } = new GPUInstanceProfile(MIG7GValue);
        /// <summary> Determines if two <see cref="GPUInstanceProfile"/> values are the same. </summary>
        public static bool operator ==(GPUInstanceProfile left, GPUInstanceProfile right) => left.Equals(right);
        /// <summary> Determines if two <see cref="GPUInstanceProfile"/> values are not the same. </summary>
        public static bool operator !=(GPUInstanceProfile left, GPUInstanceProfile right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="GPUInstanceProfile"/>. </summary>
        public static implicit operator GPUInstanceProfile(string value) => new GPUInstanceProfile(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is GPUInstanceProfile other && Equals(other);
        /// <inheritdoc />
        public bool Equals(GPUInstanceProfile other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
