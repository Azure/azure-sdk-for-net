// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout &amp; stderr logs etc. See aka.ms/AzureMonitorContainerInsights for an overview. </summary>
    public partial class ManagedClusterAzureMonitorProfileContainerInsights
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ManagedClusterAzureMonitorProfileContainerInsights"/>. </summary>
        public ManagedClusterAzureMonitorProfileContainerInsights()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ManagedClusterAzureMonitorProfileContainerInsights"/>. </summary>
        /// <param name="enabled"> Indicates if Azure Monitor Container Insights Logs Addon is enabled or not. </param>
        /// <param name="logAnalyticsWorkspaceResourceId"> Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs. </param>
        /// <param name="syslogPort"> The syslog host port. If not specified, the default port is 28330. </param>
        /// <param name="disableCustomMetrics"> Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom metrics will be emitted if this field is false but the container insights enabled field is false. </param>
        /// <param name="disablePrometheusMetricsScraping"> Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the container insights enabled field is false. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ManagedClusterAzureMonitorProfileContainerInsights(bool? enabled, ResourceIdentifier logAnalyticsWorkspaceResourceId, long? syslogPort, bool? disableCustomMetrics, bool? disablePrometheusMetricsScraping, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Enabled = enabled;
            LogAnalyticsWorkspaceResourceId = logAnalyticsWorkspaceResourceId;
            SyslogPort = syslogPort;
            DisableCustomMetrics = disableCustomMetrics;
            DisablePrometheusMetricsScraping = disablePrometheusMetricsScraping;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Indicates if Azure Monitor Container Insights Logs Addon is enabled or not. </summary>
        [WirePath("enabled")]
        public bool? Enabled { get; set; }
        /// <summary> Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs. </summary>
        [WirePath("logAnalyticsWorkspaceResourceId")]
        public ResourceIdentifier LogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary> The syslog host port. If not specified, the default port is 28330. </summary>
        [WirePath("syslogPort")]
        public long? SyslogPort { get; set; }
        /// <summary> Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom metrics will be emitted if this field is false but the container insights enabled field is false. </summary>
        [WirePath("disableCustomMetrics")]
        public bool? DisableCustomMetrics { get; set; }
        /// <summary> Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the container insights enabled field is false. </summary>
        [WirePath("disablePrometheusMetricsScraping")]
        public bool? DisablePrometheusMetricsScraping { get; set; }
    }
}
