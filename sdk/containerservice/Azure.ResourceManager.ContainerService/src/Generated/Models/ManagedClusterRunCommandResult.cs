// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> run command result. </summary>
    public partial class ManagedClusterRunCommandResult
    {
        /// <summary> Initializes a new instance of <see cref="ManagedClusterRunCommandResult"/>. </summary>
        internal ManagedClusterRunCommandResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ManagedClusterRunCommandResult"/>. </summary>
        /// <param name="id"> The command id. </param>
        /// <param name="provisioningState"> provisioning State. </param>
        /// <param name="exitCode"> The exit code of the command. </param>
        /// <param name="startedOn"> The time when the command started. </param>
        /// <param name="finishedOn"> The time when the command finished. </param>
        /// <param name="logs"> The command output. </param>
        /// <param name="reason"> An explanation of why provisioningState is set to failed (if so). </param>
        internal ManagedClusterRunCommandResult(string id, string provisioningState, int? exitCode, DateTimeOffset? startedOn, DateTimeOffset? finishedOn, string logs, string reason)
        {
            Id = id;
            ProvisioningState = provisioningState;
            ExitCode = exitCode;
            StartedOn = startedOn;
            FinishedOn = finishedOn;
            Logs = logs;
            Reason = reason;
        }

        /// <summary> The command id. </summary>
        public string Id { get; }
        /// <summary> provisioning State. </summary>
        public string ProvisioningState { get; }
        /// <summary> The exit code of the command. </summary>
        public int? ExitCode { get; }
        /// <summary> The time when the command started. </summary>
        public DateTimeOffset? StartedOn { get; }
        /// <summary> The time when the command finished. </summary>
        public DateTimeOffset? FinishedOn { get; }
        /// <summary> The command output. </summary>
        public string Logs { get; }
        /// <summary> An explanation of why provisioningState is set to failed (if so). </summary>
        public string Reason { get; }
    }
}
