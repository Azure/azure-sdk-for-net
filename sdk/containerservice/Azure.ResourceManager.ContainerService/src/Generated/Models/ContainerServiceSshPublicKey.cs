// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Contains information about SSH certificate public key data. </summary>
    public partial class ContainerServiceSshPublicKey
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ContainerServiceSshPublicKey"/>. </summary>
        /// <param name="keyData"> Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyData"/> is null. </exception>
        public ContainerServiceSshPublicKey(string keyData)
        {
            Argument.AssertNotNull(keyData, nameof(keyData));

            KeyData = keyData;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerServiceSshPublicKey"/>. </summary>
        /// <param name="keyData"> Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerServiceSshPublicKey(string keyData, Dictionary<string, BinaryData> rawData)
        {
            KeyData = keyData;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerServiceSshPublicKey"/> for deserialization. </summary>
        internal ContainerServiceSshPublicKey()
        {
        }

        /// <summary> Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. </summary>
        public string KeyData { get; set; }
    }
}
