// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Whether the version is preview or stable. </summary>
    public readonly partial struct GuardrailsSupport : IEquatable<GuardrailsSupport>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="GuardrailsSupport"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public GuardrailsSupport(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PreviewValue = "Preview";
        private const string StableValue = "Stable";

        /// <summary> The version is preview. It is not recommended to use preview versions on critical production clusters. The preview version may not support all use-cases. </summary>
        public static GuardrailsSupport Preview { get; } = new GuardrailsSupport(PreviewValue);
        /// <summary> The version is stable and can be used on critical production clusters. </summary>
        public static GuardrailsSupport Stable { get; } = new GuardrailsSupport(StableValue);
        /// <summary> Determines if two <see cref="GuardrailsSupport"/> values are the same. </summary>
        public static bool operator ==(GuardrailsSupport left, GuardrailsSupport right) => left.Equals(right);
        /// <summary> Determines if two <see cref="GuardrailsSupport"/> values are not the same. </summary>
        public static bool operator !=(GuardrailsSupport left, GuardrailsSupport right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="GuardrailsSupport"/>. </summary>
        public static implicit operator GuardrailsSupport(string value) => new GuardrailsSupport(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is GuardrailsSupport other && Equals(other);
        /// <inheritdoc />
        public bool Equals(GuardrailsSupport other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
