// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    public partial class ContainerServiceMaintenanceSchedule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Daily))
            {
                writer.WritePropertyName("daily"u8);
                writer.WriteObjectValue(Daily);
            }
            if (Optional.IsDefined(Weekly))
            {
                writer.WritePropertyName("weekly"u8);
                writer.WriteObjectValue(Weekly);
            }
            if (Optional.IsDefined(AbsoluteMonthly))
            {
                writer.WritePropertyName("absoluteMonthly"u8);
                writer.WriteObjectValue(AbsoluteMonthly);
            }
            if (Optional.IsDefined(RelativeMonthly))
            {
                writer.WritePropertyName("relativeMonthly"u8);
                writer.WriteObjectValue(RelativeMonthly);
            }
            writer.WriteEndObject();
        }

        internal static ContainerServiceMaintenanceSchedule DeserializeContainerServiceMaintenanceSchedule(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DailySchedule> daily = default;
            Optional<ContainerServiceMaintenanceWeeklySchedule> weekly = default;
            Optional<ContainerServiceMaintenanceAbsoluteMonthlySchedule> absoluteMonthly = default;
            Optional<ContainerServiceMaintenanceRelativeMonthlySchedule> relativeMonthly = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("daily"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    daily = DailySchedule.DeserializeDailySchedule(property.Value);
                    continue;
                }
                if (property.NameEquals("weekly"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    weekly = ContainerServiceMaintenanceWeeklySchedule.DeserializeContainerServiceMaintenanceWeeklySchedule(property.Value);
                    continue;
                }
                if (property.NameEquals("absoluteMonthly"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    absoluteMonthly = ContainerServiceMaintenanceAbsoluteMonthlySchedule.DeserializeContainerServiceMaintenanceAbsoluteMonthlySchedule(property.Value);
                    continue;
                }
                if (property.NameEquals("relativeMonthly"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    relativeMonthly = ContainerServiceMaintenanceRelativeMonthlySchedule.DeserializeContainerServiceMaintenanceRelativeMonthlySchedule(property.Value);
                    continue;
                }
            }
            return new ContainerServiceMaintenanceSchedule(daily.Value, weekly.Value, absoluteMonthly.Value, relativeMonthly.Value);
        }
    }
}
