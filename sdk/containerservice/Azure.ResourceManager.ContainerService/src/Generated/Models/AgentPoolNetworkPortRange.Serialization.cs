// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    public partial class AgentPoolNetworkPortRange : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(PortStart))
            {
                writer.WritePropertyName("portStart"u8);
                writer.WriteNumberValue(PortStart.Value);
            }
            if (Core.Optional.IsDefined(PortEnd))
            {
                writer.WritePropertyName("portEnd"u8);
                writer.WriteNumberValue(PortEnd.Value);
            }
            if (Core.Optional.IsDefined(Protocol))
            {
                writer.WritePropertyName("protocol"u8);
                writer.WriteStringValue(Protocol.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static AgentPoolNetworkPortRange DeserializeAgentPoolNetworkPortRange(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> portStart = default;
            Core.Optional<int> portEnd = default;
            Core.Optional<AgentPoolNetworkPortProtocol> protocol = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("portStart"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    portStart = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("portEnd"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    portEnd = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("protocol"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    protocol = new AgentPoolNetworkPortProtocol(property.Value.GetString());
                    continue;
                }
            }
            return new AgentPoolNetworkPortRange(Core.Optional.ToNullable(portStart), Core.Optional.ToNullable(portEnd), Core.Optional.ToNullable(protocol));
        }
    }
}
