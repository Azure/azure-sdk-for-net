// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.SignalR.Models
{
    /// <summary> Serverless settings. </summary>
    internal partial class ServerlessSettings
    {
        /// <summary> Initializes a new instance of ServerlessSettings. </summary>
        public ServerlessSettings()
        {
        }

        /// <summary> Initializes a new instance of ServerlessSettings. </summary>
        /// <param name="connectionTimeoutInSeconds">
        /// Gets or sets Client Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last message is sent.
        /// You can set the timeout to a longer period if messages are expected to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this session.
        /// The service considers the client disconnected if it hasn&apos;t received a message (including keep-alive) in this interval.
        /// </param>
        internal ServerlessSettings(int? connectionTimeoutInSeconds)
        {
            ConnectionTimeoutInSeconds = connectionTimeoutInSeconds;
        }

        /// <summary>
        /// Gets or sets Client Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last message is sent.
        /// You can set the timeout to a longer period if messages are expected to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this session.
        /// The service considers the client disconnected if it hasn&apos;t received a message (including keep-alive) in this interval.
        /// </summary>
        public int? ConnectionTimeoutInSeconds { get; set; }
    }
}
