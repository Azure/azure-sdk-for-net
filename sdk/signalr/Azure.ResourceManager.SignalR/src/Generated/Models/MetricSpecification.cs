// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SignalR.Models
{
    /// <summary> Specifications of the Metrics for Azure Monitoring. </summary>
    public partial class MetricSpecification
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MetricSpecification"/>. </summary>
        internal MetricSpecification()
        {
            Dimensions = new ChangeTrackingList<Dimension>();
        }

        /// <summary> Initializes a new instance of <see cref="MetricSpecification"/>. </summary>
        /// <param name="name"> Name of the metric. </param>
        /// <param name="displayName"> Localized friendly display name of the metric. </param>
        /// <param name="displayDescription"> Localized friendly description of the metric. </param>
        /// <param name="unit"> The unit that makes sense for the metric. </param>
        /// <param name="aggregationType"> Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count. </param>
        /// <param name="fillGapWithZero">
        /// Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.
        /// Ex. a metric that returns the number of times a particular error code was emitted. The error code may not appear
        /// often, instead of the RP publishing 0, Shoebox can auto fill in 0s for time periods where nothing was emitted.
        /// </param>
        /// <param name="category"> The name of the metric category that the metric belongs to. A metric can only belong to a single category. </param>
        /// <param name="dimensions"> The dimensions of the metrics. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MetricSpecification(string name, string displayName, string displayDescription, string unit, string aggregationType, string fillGapWithZero, string category, IReadOnlyList<Dimension> dimensions, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            DisplayName = displayName;
            DisplayDescription = displayDescription;
            Unit = unit;
            AggregationType = aggregationType;
            FillGapWithZero = fillGapWithZero;
            Category = category;
            Dimensions = dimensions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Name of the metric. </summary>
        [WirePath("name")]
        public string Name { get; }
        /// <summary> Localized friendly display name of the metric. </summary>
        [WirePath("displayName")]
        public string DisplayName { get; }
        /// <summary> Localized friendly description of the metric. </summary>
        [WirePath("displayDescription")]
        public string DisplayDescription { get; }
        /// <summary> The unit that makes sense for the metric. </summary>
        [WirePath("unit")]
        public string Unit { get; }
        /// <summary> Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count. </summary>
        [WirePath("aggregationType")]
        public string AggregationType { get; }
        /// <summary>
        /// Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.
        /// Ex. a metric that returns the number of times a particular error code was emitted. The error code may not appear
        /// often, instead of the RP publishing 0, Shoebox can auto fill in 0s for time periods where nothing was emitted.
        /// </summary>
        [WirePath("fillGapWithZero")]
        public string FillGapWithZero { get; }
        /// <summary> The name of the metric category that the metric belongs to. A metric can only belong to a single category. </summary>
        [WirePath("category")]
        public string Category { get; }
        /// <summary> The dimensions of the metrics. </summary>
        [WirePath("dimensions")]
        public IReadOnlyList<Dimension> Dimensions { get; }
    }
}
