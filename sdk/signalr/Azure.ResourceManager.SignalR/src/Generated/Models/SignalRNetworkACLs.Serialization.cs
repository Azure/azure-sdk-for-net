// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SignalR.Models
{
    public partial class SignalRNetworkACLs : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DefaultAction))
            {
                writer.WritePropertyName("defaultAction");
                writer.WriteStringValue(DefaultAction.Value.ToString());
            }
            if (Optional.IsDefined(PublicNetwork))
            {
                writer.WritePropertyName("publicNetwork");
                writer.WriteObjectValue(PublicNetwork);
            }
            if (Optional.IsCollectionDefined(PrivateEndpoints))
            {
                writer.WritePropertyName("privateEndpoints");
                writer.WriteStartArray();
                foreach (var item in PrivateEndpoints)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static SignalRNetworkACLs DeserializeSignalRNetworkACLs(JsonElement element)
        {
            Optional<ACLAction> defaultAction = default;
            Optional<NetworkACL> publicNetwork = default;
            Optional<IList<PrivateEndpointACL>> privateEndpoints = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("defaultAction"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    defaultAction = new ACLAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("publicNetwork"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    publicNetwork = NetworkACL.DeserializeNetworkACL(property.Value);
                    continue;
                }
                if (property.NameEquals("privateEndpoints"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<PrivateEndpointACL> array = new List<PrivateEndpointACL>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PrivateEndpointACL.DeserializePrivateEndpointACL(item));
                    }
                    privateEndpoints = array;
                    continue;
                }
            }
            return new SignalRNetworkACLs(Optional.ToNullable(defaultAction), publicNetwork.Value, Optional.ToList(privateEndpoints));
        }
    }
}
