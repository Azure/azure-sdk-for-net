// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SignalR.Models
{
    public partial class UpstreamTemplate : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(HubPattern))
            {
                writer.WritePropertyName("hubPattern");
                writer.WriteStringValue(HubPattern);
            }
            if (Optional.IsDefined(EventPattern))
            {
                writer.WritePropertyName("eventPattern");
                writer.WriteStringValue(EventPattern);
            }
            if (Optional.IsDefined(CategoryPattern))
            {
                writer.WritePropertyName("categoryPattern");
                writer.WriteStringValue(CategoryPattern);
            }
            writer.WritePropertyName("urlTemplate");
            writer.WriteStringValue(UrlTemplate);
            if (Optional.IsDefined(Auth))
            {
                writer.WritePropertyName("auth");
                writer.WriteObjectValue(Auth);
            }
            writer.WriteEndObject();
        }

        internal static UpstreamTemplate DeserializeUpstreamTemplate(JsonElement element)
        {
            Optional<string> hubPattern = default;
            Optional<string> eventPattern = default;
            Optional<string> categoryPattern = default;
            string urlTemplate = default;
            Optional<UpstreamAuthSettings> auth = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("hubPattern"))
                {
                    hubPattern = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eventPattern"))
                {
                    eventPattern = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("categoryPattern"))
                {
                    categoryPattern = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("urlTemplate"))
                {
                    urlTemplate = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("auth"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    auth = UpstreamAuthSettings.DeserializeUpstreamAuthSettings(property.Value);
                    continue;
                }
            }
            return new UpstreamTemplate(hubPattern.Value, eventPattern.Value, categoryPattern.Value, urlTemplate, auth.Value);
        }
    }
}
