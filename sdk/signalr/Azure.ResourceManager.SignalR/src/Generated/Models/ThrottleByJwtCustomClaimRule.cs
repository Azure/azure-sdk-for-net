// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SignalR.Models
{
    /// <summary> Throttle the client connection by a custom JWT claim. </summary>
    public partial class ThrottleByJwtCustomClaimRule : ClientConnectionCountRule
    {
        /// <summary> Initializes a new instance of <see cref="ThrottleByJwtCustomClaimRule"/>. </summary>
        /// <param name="claimName"> The name of the claim in the JWT token. The client connection with the same claim value will be aggregated. If the claim is not found in the token, the connection will be allowed. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="claimName"/> is null. </exception>
        public ThrottleByJwtCustomClaimRule(string claimName)
        {
            Argument.AssertNotNull(claimName, nameof(claimName));

            ClaimName = claimName;
            Type = ClientConnectionCountRuleDiscriminator.ThrottleByJwtCustomClaimRule;
        }

        /// <summary> Initializes a new instance of <see cref="ThrottleByJwtCustomClaimRule"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="claimName"> The name of the claim in the JWT token. The client connection with the same claim value will be aggregated. If the claim is not found in the token, the connection will be allowed. </param>
        /// <param name="maxCount"> Maximum connection count allowed for the same Jwt claim value. Clients with the same Jwt claim will get rejected if the connection count exceeds this value. Default value is 20. </param>
        internal ThrottleByJwtCustomClaimRule(ClientConnectionCountRuleDiscriminator type, IDictionary<string, BinaryData> serializedAdditionalRawData, string claimName, int? maxCount) : base(type, serializedAdditionalRawData)
        {
            ClaimName = claimName;
            MaxCount = maxCount;
            Type = type;
        }

        /// <summary> Initializes a new instance of <see cref="ThrottleByJwtCustomClaimRule"/> for deserialization. </summary>
        internal ThrottleByJwtCustomClaimRule()
        {
        }

        /// <summary> The name of the claim in the JWT token. The client connection with the same claim value will be aggregated. If the claim is not found in the token, the connection will be allowed. </summary>
        [WirePath("claimName")]
        public string ClaimName { get; set; }
        /// <summary> Maximum connection count allowed for the same Jwt claim value. Clients with the same Jwt claim will get rejected if the connection count exceeds this value. Default value is 20. </summary>
        [WirePath("maxCount")]
        public int? MaxCount { get; set; }
    }
}
