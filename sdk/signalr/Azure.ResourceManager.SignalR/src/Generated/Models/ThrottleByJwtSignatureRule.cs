// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SignalR.Models
{
    /// <summary> Throttle the client connection by the JWT signature. </summary>
    public partial class ThrottleByJwtSignatureRule : ClientConnectionCountRule
    {
        /// <summary> Initializes a new instance of <see cref="ThrottleByJwtSignatureRule"/>. </summary>
        public ThrottleByJwtSignatureRule()
        {
            Type = ClientConnectionCountRuleDiscriminator.ThrottleByJwtSignatureRule;
        }

        /// <summary> Initializes a new instance of <see cref="ThrottleByJwtSignatureRule"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="maxCount"> Maximum connection count allowed for the same JWT signature. Clients with the same JWT signature will get rejected if the connection count exceeds this value. Default value is 20. </param>
        internal ThrottleByJwtSignatureRule(ClientConnectionCountRuleDiscriminator type, IDictionary<string, BinaryData> serializedAdditionalRawData, int? maxCount) : base(type, serializedAdditionalRawData)
        {
            MaxCount = maxCount;
            Type = type;
        }

        /// <summary> Maximum connection count allowed for the same JWT signature. Clients with the same JWT signature will get rejected if the connection count exceeds this value. Default value is 20. </summary>
        [WirePath("maxCount")]
        public int? MaxCount { get; set; }
    }
}
