// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SignalR.Models;

namespace Azure.ResourceManager.SignalR
{
    /// <summary>
    /// A class representing the SignalRCustomCertificate data model.
    /// A custom certificate.
    /// </summary>
    public partial class SignalRCustomCertificateData : ResourceData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SignalRCustomCertificateData"/>. </summary>
        /// <param name="keyVaultBaseUri"> Base uri of the KeyVault that stores certificate. </param>
        /// <param name="keyVaultSecretName"> Certificate secret name. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyVaultBaseUri"/> or <paramref name="keyVaultSecretName"/> is null. </exception>
        public SignalRCustomCertificateData(Uri keyVaultBaseUri, string keyVaultSecretName)
        {
            Argument.AssertNotNull(keyVaultBaseUri, nameof(keyVaultBaseUri));
            Argument.AssertNotNull(keyVaultSecretName, nameof(keyVaultSecretName));

            KeyVaultBaseUri = keyVaultBaseUri;
            KeyVaultSecretName = keyVaultSecretName;
        }

        /// <summary> Initializes a new instance of <see cref="SignalRCustomCertificateData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="keyVaultBaseUri"> Base uri of the KeyVault that stores certificate. </param>
        /// <param name="keyVaultSecretName"> Certificate secret name. </param>
        /// <param name="keyVaultSecretVersion"> Certificate secret version. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SignalRCustomCertificateData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, SignalRProvisioningState? provisioningState, Uri keyVaultBaseUri, string keyVaultSecretName, string keyVaultSecretVersion, Dictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            KeyVaultBaseUri = keyVaultBaseUri;
            KeyVaultSecretName = keyVaultSecretName;
            KeyVaultSecretVersion = keyVaultSecretVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SignalRCustomCertificateData"/> for deserialization. </summary>
        internal SignalRCustomCertificateData()
        {
        }

        /// <summary> Provisioning state of the resource. </summary>
        public SignalRProvisioningState? ProvisioningState { get; }
        /// <summary> Base uri of the KeyVault that stores certificate. </summary>
        public Uri KeyVaultBaseUri { get; set; }
        /// <summary> Certificate secret name. </summary>
        public string KeyVaultSecretName { get; set; }
        /// <summary> Certificate secret version. </summary>
        public string KeyVaultSecretVersion { get; set; }
    }
}
