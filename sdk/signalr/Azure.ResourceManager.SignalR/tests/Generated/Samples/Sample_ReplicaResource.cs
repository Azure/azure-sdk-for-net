// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SignalR.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.SignalR.Samples
{
    public partial class Sample_ReplicaResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_SignalRReplicasDelete()
        {
            // Generated from example definition: 2025-01-01-preview/SignalRReplicas_Delete.json
            // this example is just showing the usage of "Replica_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReplicaResource created on azure
            // for more information of creating ReplicaResource, please refer to the document of ReplicaResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string resourceName = "mySignalRService";
            string replicaName = "mySignalRService-eastus";
            ResourceIdentifier replicaResourceId = ReplicaResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, replicaName);
            ReplicaResource replica = client.GetReplicaResource(replicaResourceId);

            // invoke the operation
            await replica.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RestartSignalRReplica_SignalRReplicasRestart()
        {
            // Generated from example definition: 2025-01-01-preview/SignalRReplicas_Restart.json
            // this example is just showing the usage of "Replicas_Restart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReplicaResource created on azure
            // for more information of creating ReplicaResource, please refer to the document of ReplicaResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string resourceName = "mySignalRService";
            string replicaName = "mySignalRService-eastus";
            ResourceIdentifier replicaResourceId = ReplicaResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, replicaName);
            ReplicaResource replica = client.GetReplicaResource(replicaResourceId);

            // invoke the operation
            await replica.RestartSignalRReplicaAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetReplicaSkusSignalRs_SignalRListReplicaSkus()
        {
            // Generated from example definition: 2025-01-01-preview/SignalR_ListReplicaSkus.json
            // this example is just showing the usage of "Replicas_ListReplicaSkus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReplicaResource created on azure
            // for more information of creating ReplicaResource, please refer to the document of ReplicaResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string resourceName = "mySignalRService";
            string replicaName = "mySignalRService-eastus";
            ResourceIdentifier replicaResourceId = ReplicaResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, replicaName);
            ReplicaResource replica = client.GetReplicaResource(replicaResourceId);

            // invoke the operation and iterate over the result
            await foreach (SignalRSku item in replica.GetReplicaSkusSignalRsAsync())
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine("Succeeded");
        }
    }
}
