// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SignalR.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Serverless settings.
    /// </summary>
    public partial class ServerlessSettings
    {
        /// <summary>
        /// Initializes a new instance of the ServerlessSettings class.
        /// </summary>
        public ServerlessSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerlessSettings class.
        /// </summary>
        /// <param name="connectionTimeoutInSeconds">Gets or sets Client
        /// Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are
        /// expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last
        /// message is sent.
        /// You can set the timeout to a longer period if messages are expected
        /// to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this
        /// session.
        /// The service considers the client disconnected if it hasn't received
        /// a message (including keep-alive) in this interval.</param>
        public ServerlessSettings(int? connectionTimeoutInSeconds = default(int?))
        {
            ConnectionTimeoutInSeconds = connectionTimeoutInSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Client Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are
        /// expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last
        /// message is sent.
        /// You can set the timeout to a longer period if messages are expected
        /// to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this
        /// session.
        /// The service considers the client disconnected if it hasn't received
        /// a message (including keep-alive) in this interval.
        /// </summary>
        [JsonProperty(PropertyName = "connectionTimeoutInSeconds")]
        public int? ConnectionTimeoutInSeconds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ConnectionTimeoutInSeconds > 120)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "ConnectionTimeoutInSeconds", 120);
            }
            if (ConnectionTimeoutInSeconds < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "ConnectionTimeoutInSeconds", 1);
            }
        }
    }
}
