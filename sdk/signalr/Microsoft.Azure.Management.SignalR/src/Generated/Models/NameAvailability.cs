// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SignalR.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Result of the request to check name availability. It contains a flag
    /// and possible reason of failure.
    /// </summary>
    public partial class NameAvailability
    {
        /// <summary>
        /// Initializes a new instance of the NameAvailability class.
        /// </summary>
        public NameAvailability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NameAvailability class.
        /// </summary>
        /// <param name="nameAvailable">Indicates whether the name is available
        /// or not.</param>
        /// <param name="reason">The reason of the availability. Required if
        /// name is not available.</param>
        /// <param name="message">The message of the operation.</param>
        public NameAvailability(bool? nameAvailable = default(bool?), string reason = default(string), string message = default(string))
        {
            NameAvailable = nameAvailable;
            Reason = reason;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether the name is available or not.
        /// </summary>
        [JsonProperty(PropertyName = "nameAvailable")]
        public bool? NameAvailable { get; set; }

        /// <summary>
        /// Gets or sets the reason of the availability. Required if name is
        /// not available.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or sets the message of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

    }
}
