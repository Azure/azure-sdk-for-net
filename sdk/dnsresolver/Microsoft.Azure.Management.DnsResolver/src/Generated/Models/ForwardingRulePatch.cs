// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DnsResolver.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes a forwarding rule for PATCH operation.
    /// </summary>
    [JsonTransformation]
    public partial class ForwardingRulePatch
    {
        /// <summary>
        /// Initializes a new instance of the ForwardingRulePatch class.
        /// </summary>
        public ForwardingRulePatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ForwardingRulePatch class.
        /// </summary>
        /// <param name="targetDnsServers">DNS servers to forward the DNS query
        /// to.</param>
        /// <param name="metadata">Metadata attached to the forwarding
        /// rule.</param>
        /// <param name="forwardingRuleState">The state of forwarding rule.
        /// Possible values include: 'Enabled', 'Disabled'</param>
        public ForwardingRulePatch(IList<TargetDnsServer> targetDnsServers = default(IList<TargetDnsServer>), IDictionary<string, string> metadata = default(IDictionary<string, string>), string forwardingRuleState = default(string))
        {
            TargetDnsServers = targetDnsServers;
            Metadata = metadata;
            ForwardingRuleState = forwardingRuleState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets DNS servers to forward the DNS query to.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetDnsServers")]
        public IList<TargetDnsServer> TargetDnsServers { get; set; }

        /// <summary>
        /// Gets or sets metadata attached to the forwarding rule.
        /// </summary>
        [JsonProperty(PropertyName = "properties.metadata")]
        public IDictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// Gets or sets the state of forwarding rule. Possible values include:
        /// 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.forwardingRuleState")]
        public string ForwardingRuleState { get; set; }

    }
}
