// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DnsResolver.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes a DNS resolver.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DnsResolverModel : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the DnsResolverModel class.
        /// </summary>
        public DnsResolverModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DnsResolverModel class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="etag">ETag of the DNS resolver.</param>
        /// <param name="virtualNetwork">The reference to the virtual network.
        /// This cannot be changed after creation.</param>
        /// <param name="dnsResolverState">The current status of the DNS
        /// resolver. This is a read-only property and any attempt to set this
        /// value will be ignored. Possible values include: 'Connected',
        /// 'Disconnected'</param>
        /// <param name="provisioningState">The current provisioning state of
        /// the DNS resolver. This is a read-only property and any attempt to
        /// set this value will be ignored. Possible values include:
        /// 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled'</param>
        /// <param name="resourceGuid">The resourceGuid property of the DNS
        /// resolver resource.</param>
        public DnsResolverModel(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string etag = default(string), SubResource virtualNetwork = default(SubResource), string dnsResolverState = default(string), string provisioningState = default(string), string resourceGuid = default(string))
            : base(location, id, name, type, tags)
        {
            Etag = etag;
            VirtualNetwork = virtualNetwork;
            DnsResolverState = dnsResolverState;
            ProvisioningState = provisioningState;
            ResourceGuid = resourceGuid;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets eTag of the DNS resolver.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

        /// <summary>
        /// Gets or sets the reference to the virtual network. This cannot be
        /// changed after creation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetwork")]
        public SubResource VirtualNetwork { get; set; }

        /// <summary>
        /// Gets the current status of the DNS resolver. This is a read-only
        /// property and any attempt to set this value will be ignored.
        /// Possible values include: 'Connected', 'Disconnected'
        /// </summary>
        [JsonProperty(PropertyName = "properties.dnsResolverState")]
        public string DnsResolverState { get; private set; }

        /// <summary>
        /// Gets the current provisioning state of the DNS resolver. This is a
        /// read-only property and any attempt to set this value will be
        /// ignored. Possible values include: 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets the resourceGuid property of the DNS resolver resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
