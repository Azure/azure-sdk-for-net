// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.DnsResolver.Models;

namespace Azure.ResourceManager.DnsResolver
{
    public partial class Sample_DnsResolverInboundEndpointResource
    {
        // Update inbound endpoint for DNS resolver
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateInboundEndpointForDNSResolver()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/InboundEndpoint_Patch.json
            // this example is just showing the usage of "InboundEndpoints_Update" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsResolverInboundEndpointResource created on azure
            // for more information of creating DnsResolverInboundEndpointResource, please refer to the document of DnsResolverInboundEndpointResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverName = "sampleDnsResolver";
            string inboundEndpointName = "sampleInboundEndpoint";
            ResourceIdentifier dnsResolverInboundEndpointResourceId = DnsResolverInboundEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverName, inboundEndpointName);
            DnsResolverInboundEndpointResource dnsResolverInboundEndpoint = client.GetDnsResolverInboundEndpointResource(dnsResolverInboundEndpointResourceId);

            // invoke the operation
            DnsResolverInboundEndpointPatch patch = new DnsResolverInboundEndpointPatch()
            {
                Tags =
{
["key1"] = "value1",
},
            };
            ArmOperation<DnsResolverInboundEndpointResource> lro = await dnsResolverInboundEndpoint.UpdateAsync(WaitUntil.Completed, patch);
            DnsResolverInboundEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsResolverInboundEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete inbound endpoint for DNS resolver
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteInboundEndpointForDNSResolver()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/InboundEndpoint_Delete.json
            // this example is just showing the usage of "InboundEndpoints_Delete" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsResolverInboundEndpointResource created on azure
            // for more information of creating DnsResolverInboundEndpointResource, please refer to the document of DnsResolverInboundEndpointResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverName = "sampleDnsResolver";
            string inboundEndpointName = "sampleInboundEndpoint";
            ResourceIdentifier dnsResolverInboundEndpointResourceId = DnsResolverInboundEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverName, inboundEndpointName);
            DnsResolverInboundEndpointResource dnsResolverInboundEndpoint = client.GetDnsResolverInboundEndpointResource(dnsResolverInboundEndpointResourceId);

            // invoke the operation
            await dnsResolverInboundEndpoint.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Retrieve inbound endpoint for DNS resolver
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_RetrieveInboundEndpointForDNSResolver()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/InboundEndpoint_Get.json
            // this example is just showing the usage of "InboundEndpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsResolverInboundEndpointResource created on azure
            // for more information of creating DnsResolverInboundEndpointResource, please refer to the document of DnsResolverInboundEndpointResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverName = "sampleDnsResolver";
            string inboundEndpointName = "sampleInboundEndpoint";
            ResourceIdentifier dnsResolverInboundEndpointResourceId = DnsResolverInboundEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverName, inboundEndpointName);
            DnsResolverInboundEndpointResource dnsResolverInboundEndpoint = client.GetDnsResolverInboundEndpointResource(dnsResolverInboundEndpointResourceId);

            // invoke the operation
            DnsResolverInboundEndpointResource result = await dnsResolverInboundEndpoint.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsResolverInboundEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
