// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.DnsResolver.Models;

namespace Azure.ResourceManager.DnsResolver
{
    public partial class Sample_DnsForwardingRuleCollection
    {
        // Upsert forwarding rule in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_UpsertForwardingRuleInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_Put.json
            // this example is just showing the usage of "ForwardingRules_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // get the collection of this DnsForwardingRuleResource
            DnsForwardingRuleCollection collection = dnsForwardingRuleset.GetDnsForwardingRules();

            // invoke the operation
            string forwardingRuleName = "sampleForwardingRule";
            DnsForwardingRuleData data = new DnsForwardingRuleData("contoso.com.", new TargetDnsServer[]
            {
new TargetDnsServer("10.0.0.1")
{
Port = 53,
},new TargetDnsServer("10.0.0.2")
{
Port = 53,
}
            })
            {
                Metadata =
{
["additionalProp1"] = "value1",
},
                DnsForwardingRuleState = DnsForwardingRuleState.Enabled,
            };
            ArmOperation<DnsForwardingRuleResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, forwardingRuleName, data);
            DnsForwardingRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Retrieve forwarding rule in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_RetrieveForwardingRuleInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_Get.json
            // this example is just showing the usage of "ForwardingRules_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // get the collection of this DnsForwardingRuleResource
            DnsForwardingRuleCollection collection = dnsForwardingRuleset.GetDnsForwardingRules();

            // invoke the operation
            string forwardingRuleName = "sampleForwardingRule";
            DnsForwardingRuleResource result = await collection.GetAsync(forwardingRuleName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Retrieve forwarding rule in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_RetrieveForwardingRuleInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_Get.json
            // this example is just showing the usage of "ForwardingRules_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // get the collection of this DnsForwardingRuleResource
            DnsForwardingRuleCollection collection = dnsForwardingRuleset.GetDnsForwardingRules();

            // invoke the operation
            string forwardingRuleName = "sampleForwardingRule";
            bool result = await collection.ExistsAsync(forwardingRuleName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // List forwarding rules in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListForwardingRulesInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_List.json
            // this example is just showing the usage of "ForwardingRules_List" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // get the collection of this DnsForwardingRuleResource
            DnsForwardingRuleCollection collection = dnsForwardingRuleset.GetDnsForwardingRules();

            // invoke the operation and iterate over the result
            await foreach (DnsForwardingRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DnsForwardingRuleData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
