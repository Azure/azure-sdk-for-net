// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.DnsResolver.Models;

namespace Azure.ResourceManager.DnsResolver
{
    public partial class Sample_DnsForwardingRuleResource
    {
        // Update forwarding rule in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateForwardingRuleInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_Patch.json
            // this example is just showing the usage of "ForwardingRules_Update" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRuleResource created on azure
            // for more information of creating DnsForwardingRuleResource, please refer to the document of DnsForwardingRuleResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            string forwardingRuleName = "sampleForwardingRule";
            ResourceIdentifier dnsForwardingRuleResourceId = DnsForwardingRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName, forwardingRuleName);
            DnsForwardingRuleResource dnsForwardingRule = client.GetDnsForwardingRuleResource(dnsForwardingRuleResourceId);

            // invoke the operation
            DnsForwardingRulePatch patch = new DnsForwardingRulePatch()
            {
                Metadata =
{
["additionalProp2"] = "value2",
},
                DnsForwardingRuleState = DnsForwardingRuleState.Disabled,
            };
            DnsForwardingRuleResource result = await dnsForwardingRule.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete forwarding rule in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteForwardingRuleInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_Delete.json
            // this example is just showing the usage of "ForwardingRules_Delete" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRuleResource created on azure
            // for more information of creating DnsForwardingRuleResource, please refer to the document of DnsForwardingRuleResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            string forwardingRuleName = "sampleForwardingRule";
            ResourceIdentifier dnsForwardingRuleResourceId = DnsForwardingRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName, forwardingRuleName);
            DnsForwardingRuleResource dnsForwardingRule = client.GetDnsForwardingRuleResource(dnsForwardingRuleResourceId);

            // invoke the operation
            await dnsForwardingRule.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Retrieve forwarding rule in a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_RetrieveForwardingRuleInADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/ForwardingRule_Get.json
            // this example is just showing the usage of "ForwardingRules_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DnsForwardingRuleResource created on azure
            // for more information of creating DnsForwardingRuleResource, please refer to the document of DnsForwardingRuleResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            string forwardingRuleName = "sampleForwardingRule";
            ResourceIdentifier dnsForwardingRuleResourceId = DnsForwardingRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName, forwardingRuleName);
            DnsForwardingRuleResource dnsForwardingRule = client.GetDnsForwardingRuleResource(dnsForwardingRuleResourceId);

            // invoke the operation
            DnsForwardingRuleResource result = await dnsForwardingRule.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
