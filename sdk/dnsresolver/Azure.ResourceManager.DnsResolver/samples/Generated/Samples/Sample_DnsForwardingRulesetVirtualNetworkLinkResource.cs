// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.DnsResolver;
using Azure.ResourceManager.DnsResolver.Models;

namespace Azure.ResourceManager.DnsResolver.Samples
{
    public partial class Sample_DnsForwardingRulesetVirtualNetworkLinkResource
    {
        // Update virtual network link to a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateVirtualNetworkLinkToADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/VirtualNetworkLink_Patch.json
            // this example is just showing the usage of "VirtualNetworkLinks_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsForwardingRulesetVirtualNetworkLinkResource created on azure
            // for more information of creating DnsForwardingRulesetVirtualNetworkLinkResource, please refer to the document of DnsForwardingRulesetVirtualNetworkLinkResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            string virtualNetworkLinkName = "sampleVirtualNetworkLink";
            ResourceIdentifier dnsForwardingRulesetVirtualNetworkLinkResourceId = DnsForwardingRulesetVirtualNetworkLinkResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName, virtualNetworkLinkName);
            DnsForwardingRulesetVirtualNetworkLinkResource dnsForwardingRulesetVirtualNetworkLink = client.GetDnsForwardingRulesetVirtualNetworkLinkResource(dnsForwardingRulesetVirtualNetworkLinkResourceId);

            // invoke the operation
            DnsForwardingRulesetVirtualNetworkLinkPatch patch = new DnsForwardingRulesetVirtualNetworkLinkPatch()
            {
                Metadata =
{
["additionalProp1"] = "value1",
},
            };
            ArmOperation<DnsForwardingRulesetVirtualNetworkLinkResource> lro = await dnsForwardingRulesetVirtualNetworkLink.UpdateAsync(WaitUntil.Completed, patch);
            DnsForwardingRulesetVirtualNetworkLinkResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRulesetVirtualNetworkLinkData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete virtual network link to a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteVirtualNetworkLinkToADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/VirtualNetworkLink_Delete.json
            // this example is just showing the usage of "VirtualNetworkLinks_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsForwardingRulesetVirtualNetworkLinkResource created on azure
            // for more information of creating DnsForwardingRulesetVirtualNetworkLinkResource, please refer to the document of DnsForwardingRulesetVirtualNetworkLinkResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            string virtualNetworkLinkName = "sampleVirtualNetworkLink";
            ResourceIdentifier dnsForwardingRulesetVirtualNetworkLinkResourceId = DnsForwardingRulesetVirtualNetworkLinkResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName, virtualNetworkLinkName);
            DnsForwardingRulesetVirtualNetworkLinkResource dnsForwardingRulesetVirtualNetworkLink = client.GetDnsForwardingRulesetVirtualNetworkLinkResource(dnsForwardingRulesetVirtualNetworkLinkResourceId);

            // invoke the operation
            await dnsForwardingRulesetVirtualNetworkLink.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Retrieve virtual network link to a DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_RetrieveVirtualNetworkLinkToADNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/VirtualNetworkLink_Get.json
            // this example is just showing the usage of "VirtualNetworkLinks_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsForwardingRulesetVirtualNetworkLinkResource created on azure
            // for more information of creating DnsForwardingRulesetVirtualNetworkLinkResource, please refer to the document of DnsForwardingRulesetVirtualNetworkLinkResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            string virtualNetworkLinkName = "sampleVirtualNetworkLink";
            ResourceIdentifier dnsForwardingRulesetVirtualNetworkLinkResourceId = DnsForwardingRulesetVirtualNetworkLinkResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName, virtualNetworkLinkName);
            DnsForwardingRulesetVirtualNetworkLinkResource dnsForwardingRulesetVirtualNetworkLink = client.GetDnsForwardingRulesetVirtualNetworkLinkResource(dnsForwardingRulesetVirtualNetworkLinkResourceId);

            // invoke the operation
            DnsForwardingRulesetVirtualNetworkLinkResource result = await dnsForwardingRulesetVirtualNetworkLink.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRulesetVirtualNetworkLinkData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
