// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.DnsResolver;
using Azure.ResourceManager.DnsResolver.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.DnsResolver.Samples
{
    public partial class Sample_DnsForwardingRulesetResource
    {
        // Update DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateDNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/DnsForwardingRuleset_Patch.json
            // this example is just showing the usage of "DnsForwardingRulesets_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // invoke the operation
            DnsForwardingRulesetPatch patch = new DnsForwardingRulesetPatch()
            {
                Tags =
{
["key1"] = "value1",
},
            };
            ArmOperation<DnsForwardingRulesetResource> lro = await dnsForwardingRuleset.UpdateAsync(WaitUntil.Completed, patch);
            DnsForwardingRulesetResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRulesetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteDNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/DnsForwardingRuleset_Delete.json
            // this example is just showing the usage of "DnsForwardingRulesets_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "samplednsForwardingRulesetName";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // invoke the operation
            await dnsForwardingRuleset.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Retrieve DNS forwarding ruleset
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_RetrieveDNSForwardingRuleset()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/DnsForwardingRuleset_Get.json
            // this example is just showing the usage of "DnsForwardingRulesets_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsForwardingRulesetResource created on azure
            // for more information of creating DnsForwardingRulesetResource, please refer to the document of DnsForwardingRulesetResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string rulesetName = "sampleDnsForwardingRuleset";
            ResourceIdentifier dnsForwardingRulesetResourceId = DnsForwardingRulesetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rulesetName);
            DnsForwardingRulesetResource dnsForwardingRuleset = client.GetDnsForwardingRulesetResource(dnsForwardingRulesetResourceId);

            // invoke the operation
            DnsForwardingRulesetResource result = await dnsForwardingRuleset.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsForwardingRulesetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // List DNS forwarding rulesets by subscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetDnsForwardingRulesets_ListDNSForwardingRulesetsBySubscription()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2022-07-01/examples/DnsForwardingRuleset_ListBySubscription.json
            // this example is just showing the usage of "DnsForwardingRulesets_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (DnsForwardingRulesetResource item in subscriptionResource.GetDnsForwardingRulesetsAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DnsForwardingRulesetData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
