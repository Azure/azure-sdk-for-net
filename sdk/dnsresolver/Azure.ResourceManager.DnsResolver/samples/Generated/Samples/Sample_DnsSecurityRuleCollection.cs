// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DnsResolver.Models;
using Azure.ResourceManager.Resources.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DnsResolver.Samples
{
    public partial class Sample_DnsSecurityRuleCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_UpsertDNSSecurityRule()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsSecurityRule_Put.json
            // this example is just showing the usage of "DnsSecurityRules_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // get the collection of this DnsSecurityRuleResource
            DnsSecurityRuleCollection collection = dnsResolverPolicy.GetDnsSecurityRules();

            // invoke the operation
            string dnsSecurityRuleName = "sampleDnsSecurityRule";
            DnsSecurityRuleData data = new DnsSecurityRuleData(new AzureLocation("westus2"), 100, new DnsSecurityRuleAction
            {
                ActionType = DnsSecurityRuleActionType.Block,
                BlockResponseCode = BlockResponseCode.Servfail,
            }, new WritableSubResource[]
            {
new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/abdd4249-9f34-4cc6-8e42-c2e32110603e/resourceGroups/sampleResourceGroup/providers/Microsoft.Network/dnsResolverDomainLists/sampleDnsResolverDomainList"),
}
            })
            {
                DnsSecurityRuleState = DnsSecurityRuleState.Enabled,
                Tags =
{
["key1"] = "value1"
},
            };
            ArmOperation<DnsSecurityRuleResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, dnsSecurityRuleName, data);
            DnsSecurityRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsSecurityRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_RetrieveDNSSecurityRuleForDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsSecurityRule_Get.json
            // this example is just showing the usage of "DnsSecurityRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // get the collection of this DnsSecurityRuleResource
            DnsSecurityRuleCollection collection = dnsResolverPolicy.GetDnsSecurityRules();

            // invoke the operation
            string dnsSecurityRuleName = "sampleDnsSecurityRule";
            DnsSecurityRuleResource result = await collection.GetAsync(dnsSecurityRuleName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsSecurityRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ListDNSSecurityRulesByDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsSecurityRule_List.json
            // this example is just showing the usage of "DnsSecurityRules_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // get the collection of this DnsSecurityRuleResource
            DnsSecurityRuleCollection collection = dnsResolverPolicy.GetDnsSecurityRules();

            // invoke the operation and iterate over the result
            await foreach (DnsSecurityRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DnsSecurityRuleData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_RetrieveDNSSecurityRuleForDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsSecurityRule_Get.json
            // this example is just showing the usage of "DnsSecurityRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // get the collection of this DnsSecurityRuleResource
            DnsSecurityRuleCollection collection = dnsResolverPolicy.GetDnsSecurityRules();

            // invoke the operation
            string dnsSecurityRuleName = "sampleDnsSecurityRule";
            bool result = await collection.ExistsAsync(dnsSecurityRuleName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_RetrieveDNSSecurityRuleForDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsSecurityRule_Get.json
            // this example is just showing the usage of "DnsSecurityRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // get the collection of this DnsSecurityRuleResource
            DnsSecurityRuleCollection collection = dnsResolverPolicy.GetDnsSecurityRules();

            // invoke the operation
            string dnsSecurityRuleName = "sampleDnsSecurityRule";
            NullableResponse<DnsSecurityRuleResource> response = await collection.GetIfExistsAsync(dnsSecurityRuleName);
            DnsSecurityRuleResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DnsSecurityRuleData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
