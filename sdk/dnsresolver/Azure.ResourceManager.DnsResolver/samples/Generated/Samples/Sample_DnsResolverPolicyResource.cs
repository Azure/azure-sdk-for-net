// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DnsResolver.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DnsResolver.Samples
{
    public partial class Sample_DnsResolverPolicyResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_RetrieveDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsResolverPolicy_Get.json
            // this example is just showing the usage of "DnsResolverPolicies_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // invoke the operation
            DnsResolverPolicyResource result = await dnsResolverPolicy.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsResolverPolicyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsResolverPolicy_Delete.json
            // this example is just showing the usage of "DnsResolverPolicies_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // invoke the operation
            await dnsResolverPolicy.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateDNSResolverPolicy()
        {
            // Generated from example definition: specification/dnsresolver/resource-manager/Microsoft.Network/stable/2025-05-01/examples/DnsResolverPolicy_Patch.json
            // this example is just showing the usage of "DnsResolverPolicies_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DnsResolverPolicyResource created on azure
            // for more information of creating DnsResolverPolicyResource, please refer to the document of DnsResolverPolicyResource
            string subscriptionId = "abdd4249-9f34-4cc6-8e42-c2e32110603e";
            string resourceGroupName = "sampleResourceGroup";
            string dnsResolverPolicyName = "sampleDnsResolverPolicy";
            ResourceIdentifier dnsResolverPolicyResourceId = DnsResolverPolicyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dnsResolverPolicyName);
            DnsResolverPolicyResource dnsResolverPolicy = client.GetDnsResolverPolicyResource(dnsResolverPolicyResourceId);

            // invoke the operation
            DnsResolverPolicyPatch patch = new DnsResolverPolicyPatch
            {
                Tags =
{
["key1"] = "value1"
},
            };
            ArmOperation<DnsResolverPolicyResource> lro = await dnsResolverPolicy.UpdateAsync(WaitUntil.Completed, patch);
            DnsResolverPolicyResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DnsResolverPolicyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
