// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    public partial class GeoJsonCircleFeatureProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SubType))
            {
                writer.WritePropertyName("subType");
                writer.WriteStringValue(SubType.Value.ToString());
            }
            if (Optional.IsDefined(Radius))
            {
                writer.WritePropertyName("radius");
                writer.WriteNumberValue(Radius.Value);
            }
            writer.WriteEndObject();
        }

        internal static GeoJsonCircleFeatureProperties DeserializeGeoJsonCircleFeatureProperties(JsonElement element)
        {
            Optional<SubType> subType = default;
            Optional<float> radius = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("subType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    subType = new SubType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("radius"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    radius = property.Value.GetSingle();
                    continue;
                }
            }
            return new GeoJsonCircleFeatureProperties(Optional.ToNullable(subType), Optional.ToNullable(radius));
        }
    }
}
