// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    public partial class SearchResultAddress
    {
        internal static SearchResultAddress DeserializeSearchResultAddress(JsonElement element)
        {
            Optional<string> buildingNumber = default;
            Optional<string> street = default;
            Optional<string> crossStreet = default;
            Optional<string> streetNumber = default;
            Optional<IReadOnlyList<int>> routeNumbers = default;
            Optional<string> streetName = default;
            Optional<string> streetNameAndNumber = default;
            Optional<string> municipality = default;
            Optional<string> municipalitySubdivision = default;
            Optional<string> countryTertiarySubdivision = default;
            Optional<string> countrySecondarySubdivision = default;
            Optional<string> countrySubdivision = default;
            Optional<string> postalCode = default;
            Optional<string> extendedPostalCode = default;
            Optional<string> countryCode = default;
            Optional<string> country = default;
            Optional<string> countryCodeISO3 = default;
            Optional<string> freeformAddress = default;
            Optional<string> countrySubdivisionName = default;
            Optional<string> localName = default;
            Optional<object> boundingBox = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("buildingNumber"))
                {
                    buildingNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("street"))
                {
                    street = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("crossStreet"))
                {
                    crossStreet = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("streetNumber"))
                {
                    streetNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("routeNumbers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<int> array = new List<int>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetInt32());
                    }
                    routeNumbers = array;
                    continue;
                }
                if (property.NameEquals("streetName"))
                {
                    streetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("streetNameAndNumber"))
                {
                    streetNameAndNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("municipality"))
                {
                    municipality = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("municipalitySubdivision"))
                {
                    municipalitySubdivision = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countryTertiarySubdivision"))
                {
                    countryTertiarySubdivision = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countrySecondarySubdivision"))
                {
                    countrySecondarySubdivision = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countrySubdivision"))
                {
                    countrySubdivision = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"))
                {
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("extendedPostalCode"))
                {
                    extendedPostalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countryCode"))
                {
                    countryCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countryCodeISO3"))
                {
                    countryCodeISO3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("freeformAddress"))
                {
                    freeformAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countrySubdivisionName"))
                {
                    countrySubdivisionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("localName"))
                {
                    localName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("boundingBox"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    boundingBox = property.Value.GetObject();
                    continue;
                }
            }
            return new SearchResultAddress(buildingNumber.Value, street.Value, crossStreet.Value, streetNumber.Value, Optional.ToList(routeNumbers), streetName.Value, streetNameAndNumber.Value, municipality.Value, municipalitySubdivision.Value, countryTertiarySubdivision.Value, countrySecondarySubdivision.Value, countrySubdivision.Value, postalCode.Value, extendedPostalCode.Value, countryCode.Value, country.Value, countryCodeISO3.Value, freeformAddress.Value, countrySubdivisionName.Value, localName.Value, boundingBox.Value);
        }
    }
}
