// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    public partial class SearchCommonResult
    {
        internal static SearchCommonResult DeserializeSearchCommonResult(JsonElement element)
        {
            Optional<string> type = default;
            Optional<string> id = default;
            Optional<float> score = default;
            Optional<float> dist = default;
            Optional<string> info = default;
            Optional<EntityType> entityType = default;
            Optional<SearchResultPoi> poi = default;
            Optional<SearchResultAddress> address = default;
            Optional<CoordinatesPairAbbreviated> position = default;
            Optional<SearchResultViewport> viewport = default;
            Optional<IReadOnlyList<SearchResultEntryPoint>> entryPoints = default;
            Optional<SearchResultAddressRanges> addressRanges = default;
            Optional<DataSources> dataSources = default;
            Optional<string> matchType = default;
            Optional<float> detourTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("score"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    score = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("dist"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dist = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("info"))
                {
                    info = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("entityType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    entityType = new EntityType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("poi"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    poi = SearchResultPoi.DeserializeSearchResultPoi(property.Value);
                    continue;
                }
                if (property.NameEquals("address"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    address = SearchResultAddress.DeserializeSearchResultAddress(property.Value);
                    continue;
                }
                if (property.NameEquals("position"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    position = CoordinatesPairAbbreviated.DeserializeCoordinatesPairAbbreviated(property.Value);
                    continue;
                }
                if (property.NameEquals("viewport"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    viewport = SearchResultViewport.DeserializeSearchResultViewport(property.Value);
                    continue;
                }
                if (property.NameEquals("entryPoints"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchResultEntryPoint> array = new List<SearchResultEntryPoint>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchResultEntryPoint.DeserializeSearchResultEntryPoint(item));
                    }
                    entryPoints = array;
                    continue;
                }
                if (property.NameEquals("addressRanges"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    addressRanges = SearchResultAddressRanges.DeserializeSearchResultAddressRanges(property.Value);
                    continue;
                }
                if (property.NameEquals("dataSources"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dataSources = DataSources.DeserializeDataSources(property.Value);
                    continue;
                }
                if (property.NameEquals("matchType"))
                {
                    matchType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("detourTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    detourTime = property.Value.GetSingle();
                    continue;
                }
            }
            return new SearchCommonResult(type.Value, id.Value, Optional.ToNullable(score), Optional.ToNullable(dist), info.Value, Optional.ToNullable(entityType), poi.Value, address.Value, position.Value, viewport.Value, Optional.ToList(entryPoints), addressRanges.Value, dataSources.Value, matchType.Value, Optional.ToNullable(detourTime));
        }
    }
}
