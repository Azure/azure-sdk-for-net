// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    public partial class SearchCommonSummary
    {
        internal static SearchCommonSummary DeserializeSearchCommonSummary(JsonElement element)
        {
            Optional<string> query = default;
            Optional<string> queryType = default;
            Optional<int> queryTime = default;
            Optional<int> numResults = default;
            Optional<int> limit = default;
            Optional<int> offset = default;
            Optional<int> totalResults = default;
            Optional<int> fuzzyLevel = default;
            Optional<SearchCommonSummaryGeoBias> geoBias = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("query"))
                {
                    query = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queryType"))
                {
                    queryType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queryTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    queryTime = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("numResults"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    numResults = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("limit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    limit = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("offset"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    offset = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalResults"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalResults = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("fuzzyLevel"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    fuzzyLevel = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("geoBias"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    geoBias = SearchCommonSummaryGeoBias.DeserializeSearchCommonSummaryGeoBias(property.Value);
                    continue;
                }
            }
            return new SearchCommonSummary(query.Value, queryType.Value, Optional.ToNullable(queryTime), Optional.ToNullable(numResults), Optional.ToNullable(limit), Optional.ToNullable(offset), Optional.ToNullable(totalResults), Optional.ToNullable(fuzzyLevel), geoBias.Value);
        }
    }
}
