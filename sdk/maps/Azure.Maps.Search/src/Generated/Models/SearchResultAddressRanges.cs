// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Maps.Search.Models
{
    /// <summary> Describes the address range on both sides of the street for a search result. Coordinates for the start and end locations of the address range are included. </summary>
    public partial class SearchResultAddressRanges
    {
        /// <summary> Initializes a new instance of SearchResultAddressRanges. </summary>
        internal SearchResultAddressRanges()
        {
        }

        /// <summary> Initializes a new instance of SearchResultAddressRanges. </summary>
        /// <param name="rangeLeft"> Address range on the left side of the street. </param>
        /// <param name="rangeRight"> Address range on the right side of the street. </param>
        /// <param name="from"> A location represented as a latitude and longitude using short names &apos;lat&apos; &amp; &apos;lon&apos;. </param>
        /// <param name="to"> A location represented as a latitude and longitude using short names &apos;lat&apos; &amp; &apos;lon&apos;. </param>
        internal SearchResultAddressRanges(string rangeLeft, string rangeRight, CoordinatesPairAbbreviated @from, CoordinatesPairAbbreviated to)
        {
            RangeLeft = rangeLeft;
            RangeRight = rangeRight;
            From = @from;
            To = to;
        }

        /// <summary> Address range on the left side of the street. </summary>
        public string RangeLeft { get; }
        /// <summary> Address range on the right side of the street. </summary>
        public string RangeRight { get; }
        /// <summary> A location represented as a latitude and longitude using short names &apos;lat&apos; &amp; &apos;lon&apos;. </summary>
        public CoordinatesPairAbbreviated From { get; }
        /// <summary> A location represented as a latitude and longitude using short names &apos;lat&apos; &amp; &apos;lon&apos;. </summary>
        public CoordinatesPairAbbreviated To { get; }
    }
}
