// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the address range on both sides of the street for a search
    /// result. Coordinates for the start and end locations of the address
    /// range are included.
    /// </summary>
    public partial class SearchResultAddressRanges
    {
        /// <summary>
        /// Initializes a new instance of the SearchResultAddressRanges class.
        /// </summary>
        public SearchResultAddressRanges()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchResultAddressRanges class.
        /// </summary>
        /// <param name="rangeLeft">Address range on the left side of the
        /// street.</param>
        /// <param name="rangeRight">Address range on the right side of the
        /// street.</param>
        public SearchResultAddressRanges(string rangeLeft = default(string), string rangeRight = default(string), CoordinatesPairAbbreviated fromProperty = default(CoordinatesPairAbbreviated), CoordinatesPairAbbreviated to = default(CoordinatesPairAbbreviated))
        {
            RangeLeft = rangeLeft;
            RangeRight = rangeRight;
            FromProperty = fromProperty;
            To = to;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets address range on the left side of the street.
        /// </summary>
        [JsonProperty(PropertyName = "rangeLeft")]
        public string RangeLeft { get; set; }

        /// <summary>
        /// Gets or sets address range on the right side of the street.
        /// </summary>
        [JsonProperty(PropertyName = "rangeRight")]
        public string RangeRight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public CoordinatesPairAbbreviated FromProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "to")]
        public CoordinatesPairAbbreviated To { get; set; }

    }
}
