// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Summary object for a Search API response.
    /// </summary>
    public partial class SearchCommonSummary
    {
        /// <summary>
        /// Initializes a new instance of the SearchCommonSummary class.
        /// </summary>
        public SearchCommonSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchCommonSummary class.
        /// </summary>
        /// <param name="query">Query property</param>
        /// <param name="queryType">QueryType property</param>
        /// <param name="queryTime">QueryTime property</param>
        /// <param name="numResults">NumResults property</param>
        /// <param name="limit">Maximum number of responses that will be
        /// returned</param>
        /// <param name="offset">Offset property</param>
        /// <param name="totalResults">TotalResults property</param>
        /// <param name="fuzzyLevel">FuzzyLevel property</param>
        /// <param name="geoBias">Indication when the internal search engine
        /// has applied a geospatial bias to improve the ranking of results.
        /// In  some methods, this can be affected by setting the lat and lon
        /// parameters where available.  In other cases it is  purely
        /// internal.</param>
        public SearchCommonSummary(string query = default(string), string queryType = default(string), int? queryTime = default(int?), int? numResults = default(int?), int? limit = default(int?), int? offset = default(int?), int? totalResults = default(int?), int? fuzzyLevel = default(int?), SearchCommonSummaryGeoBias geoBias = default(SearchCommonSummaryGeoBias))
        {
            Query = query;
            QueryType = queryType;
            QueryTime = queryTime;
            NumResults = numResults;
            Limit = limit;
            Offset = offset;
            TotalResults = totalResults;
            FuzzyLevel = fuzzyLevel;
            GeoBias = geoBias;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets query property
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public string Query { get; private set; }

        /// <summary>
        /// Gets queryType property
        /// </summary>
        [JsonProperty(PropertyName = "queryType")]
        public string QueryType { get; private set; }

        /// <summary>
        /// Gets queryTime property
        /// </summary>
        [JsonProperty(PropertyName = "queryTime")]
        public int? QueryTime { get; private set; }

        /// <summary>
        /// Gets numResults property
        /// </summary>
        [JsonProperty(PropertyName = "numResults")]
        public int? NumResults { get; private set; }

        /// <summary>
        /// Gets maximum number of responses that will be returned
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public int? Limit { get; private set; }

        /// <summary>
        /// Gets offset property
        /// </summary>
        [JsonProperty(PropertyName = "offset")]
        public int? Offset { get; private set; }

        /// <summary>
        /// Gets totalResults property
        /// </summary>
        [JsonProperty(PropertyName = "totalResults")]
        public int? TotalResults { get; private set; }

        /// <summary>
        /// Gets fuzzyLevel property
        /// </summary>
        [JsonProperty(PropertyName = "fuzzyLevel")]
        public int? FuzzyLevel { get; private set; }

        /// <summary>
        /// Gets indication when the internal search engine has applied a
        /// geospatial bias to improve the ranking of results.  In  some
        /// methods, this can be affected by setting the lat and lon parameters
        /// where available.  In other cases it is  purely internal.
        /// </summary>
        [JsonProperty(PropertyName = "geoBias")]
        public SearchCommonSummaryGeoBias GeoBias { get; private set; }

    }
}
