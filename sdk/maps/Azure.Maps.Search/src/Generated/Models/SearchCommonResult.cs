// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    /// <summary> Result object for a Search API response. </summary>
    public partial class SearchCommonResult
    {
        /// <summary> Initializes a new instance of SearchCommonResult. </summary>
        internal SearchCommonResult()
        {
            EntryPoints = new ChangeTrackingList<SearchResultEntryPoint>();
        }

        /// <summary> Initializes a new instance of SearchCommonResult. </summary>
        /// <param name="type">
        /// One of:
        /// * POI
        /// * Street
        /// * Geography
        /// * Point Address
        /// * Address Range
        /// * Cross Street.
        /// </param>
        /// <param name="id"> Id property. </param>
        /// <param name="score"> The value within a result set to indicate the relative matching score between results.  You can use this to  determine that result x is twice as likely to be as relevant as result y if the value of x is 2x the value of y.   The values vary between queries and is only meant as a relative value for one result set. </param>
        /// <param name="dist"> Straight line distance between the result and geobias location in meters. </param>
        /// <param name="info"> Info property. </param>
        /// <param name="entityType"> Geography entity type. Present only when entityType was requested and is available. </param>
        /// <param name="poi"> Details of the returned POI including information such as the name, phone, url address, and classifications. </param>
        /// <param name="address"> The address of the result. </param>
        /// <param name="position"> A location represented as a latitude and longitude using short names &apos;lat&apos; &amp; &apos;lon&apos;. </param>
        /// <param name="viewport"> The viewport that covers the result represented by the top-left and bottom-right coordinates of the  viewport. </param>
        /// <param name="entryPoints"> Entry Points array. </param>
        /// <param name="addressRanges"> Describes the address range on both sides of the street for a search result. Coordinates for the start and end locations of the address range are included. </param>
        /// <param name="dataSources"> Optional section. Reference ids for use with the [Get Search Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon) API. </param>
        /// <param name="matchType">
        /// Information on the type of match.
        /// 
        /// One of:
        ///   * AddressPoint
        ///   * HouseNumberRange
        ///   * Street.
        /// </param>
        /// <param name="detourTime"> Detour time in seconds. </param>
        internal SearchCommonResult(string type, string id, float? score, float? dist, string info, EntityType? entityType, SearchResultPoi poi, SearchResultAddress address, CoordinatesPairAbbreviated position, SearchResultViewport viewport, IReadOnlyList<SearchResultEntryPoint> entryPoints, SearchResultAddressRanges addressRanges, DataSources dataSources, string matchType, float? detourTime)
        {
            Type = type;
            Id = id;
            Score = score;
            Dist = dist;
            Info = info;
            EntityType = entityType;
            Poi = poi;
            Address = address;
            Position = position;
            Viewport = viewport;
            EntryPoints = entryPoints;
            AddressRanges = addressRanges;
            DataSources = dataSources;
            MatchType = matchType;
            DetourTime = detourTime;
        }

        /// <summary>
        /// One of:
        /// * POI
        /// * Street
        /// * Geography
        /// * Point Address
        /// * Address Range
        /// * Cross Street.
        /// </summary>
        public string Type { get; }
        /// <summary> Id property. </summary>
        public string Id { get; }
        /// <summary> The value within a result set to indicate the relative matching score between results.  You can use this to  determine that result x is twice as likely to be as relevant as result y if the value of x is 2x the value of y.   The values vary between queries and is only meant as a relative value for one result set. </summary>
        public float? Score { get; }
        /// <summary> Straight line distance between the result and geobias location in meters. </summary>
        public float? Dist { get; }
        /// <summary> Info property. </summary>
        public string Info { get; }
        /// <summary> Geography entity type. Present only when entityType was requested and is available. </summary>
        public EntityType? EntityType { get; }
        /// <summary> Details of the returned POI including information such as the name, phone, url address, and classifications. </summary>
        public SearchResultPoi Poi { get; }
        /// <summary> The address of the result. </summary>
        public SearchResultAddress Address { get; }
        /// <summary> A location represented as a latitude and longitude using short names &apos;lat&apos; &amp; &apos;lon&apos;. </summary>
        public CoordinatesPairAbbreviated Position { get; }
        /// <summary> The viewport that covers the result represented by the top-left and bottom-right coordinates of the  viewport. </summary>
        public SearchResultViewport Viewport { get; }
        /// <summary> Entry Points array. </summary>
        public IReadOnlyList<SearchResultEntryPoint> EntryPoints { get; }
        /// <summary> Describes the address range on both sides of the street for a search result. Coordinates for the start and end locations of the address range are included. </summary>
        public SearchResultAddressRanges AddressRanges { get; }
        /// <summary> Optional section. Reference ids for use with the [Get Search Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon) API. </summary>
        public DataSources DataSources { get; }
        /// <summary>
        /// Information on the type of match.
        /// 
        /// One of:
        ///   * AddressPoint
        ///   * HouseNumberRange
        ///   * Street.
        /// </summary>
        public string MatchType { get; }
        /// <summary> Detour time in seconds. </summary>
        public float? DetourTime { get; }
    }
}
