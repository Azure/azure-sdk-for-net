// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    public partial class SearchResultPoi
    {
        internal static SearchResultPoi DeserializeSearchResultPoi(JsonElement element)
        {
            Optional<string> name = default;
            Optional<string> phone = default;
            Optional<string> url = default;
            Optional<IReadOnlyList<SearchResultPoiCategorySet>> categorySet = default;
            Optional<IReadOnlyList<string>> categories = default;
            Optional<IReadOnlyList<SearchResultPoiClassification>> classifications = default;
            Optional<IReadOnlyList<SearchResultPoiBrand>> brands = default;
            Optional<SearchResultPoiOpeningHours> openingHours = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("phone"))
                {
                    phone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("url"))
                {
                    url = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("categorySet"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchResultPoiCategorySet> array = new List<SearchResultPoiCategorySet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchResultPoiCategorySet.DeserializeSearchResultPoiCategorySet(item));
                    }
                    categorySet = array;
                    continue;
                }
                if (property.NameEquals("categories"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    categories = array;
                    continue;
                }
                if (property.NameEquals("classifications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchResultPoiClassification> array = new List<SearchResultPoiClassification>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchResultPoiClassification.DeserializeSearchResultPoiClassification(item));
                    }
                    classifications = array;
                    continue;
                }
                if (property.NameEquals("brands"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchResultPoiBrand> array = new List<SearchResultPoiBrand>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchResultPoiBrand.DeserializeSearchResultPoiBrand(item));
                    }
                    brands = array;
                    continue;
                }
                if (property.NameEquals("openingHours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    openingHours = SearchResultPoiOpeningHours.DeserializeSearchResultPoiOpeningHours(property.Value);
                    continue;
                }
            }
            return new SearchResultPoi(name.Value, phone.Value, url.Value, Optional.ToList(categorySet), Optional.ToList(categories), Optional.ToList(classifications), Optional.ToList(brands), openingHours.Value);
        }
    }
}
