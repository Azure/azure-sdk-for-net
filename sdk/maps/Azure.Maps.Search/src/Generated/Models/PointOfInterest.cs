// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    /// <summary> Details of the returned POI including information such as the name, phone, url address, and classifications. </summary>
    public partial class PointOfInterest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PointOfInterest"/>. </summary>
        internal PointOfInterest()
        {
            CategorySets = new ChangeTrackingList<PointOfInterestCategorySet>();
            Categories = new ChangeTrackingList<string>();
            Classifications = new ChangeTrackingList<PointOfInterestClassification>();
            Brands = new ChangeTrackingList<BrandName>();
        }

        /// <summary> Initializes a new instance of <see cref="PointOfInterest"/>. </summary>
        /// <param name="name"> Name of the POI property. </param>
        /// <param name="phone"> Telephone number property. </param>
        /// <param name="urlInternal"> Website URL property. </param>
        /// <param name="categorySets"> The list of the most specific POI categories. </param>
        /// <param name="categories"> Categories array. </param>
        /// <param name="classifications"> Classification array. </param>
        /// <param name="brands"> Brands array. The name of the brand for the POI being returned. </param>
        /// <param name="operatingHours"> Opening hours for a POI (Points of Interest). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PointOfInterest(string name, string phone, string urlInternal, IReadOnlyList<PointOfInterestCategorySet> categorySets, IReadOnlyList<string> categories, IReadOnlyList<PointOfInterestClassification> classifications, IReadOnlyList<BrandName> brands, OperatingHours operatingHours, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Phone = phone;
            UrlInternal = urlInternal;
            CategorySets = categorySets;
            Categories = categories;
            Classifications = classifications;
            Brands = brands;
            OperatingHours = operatingHours;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Name of the POI property. </summary>
        public string Name { get; }
        /// <summary> Telephone number property. </summary>
        public string Phone { get; }
        /// <summary> Categories array. </summary>
        public IReadOnlyList<string> Categories { get; }
        /// <summary> Classification array. </summary>
        public IReadOnlyList<PointOfInterestClassification> Classifications { get; }
        /// <summary> Brands array. The name of the brand for the POI being returned. </summary>
        public IReadOnlyList<BrandName> Brands { get; }
        /// <summary> Opening hours for a POI (Points of Interest). </summary>
        public OperatingHours OperatingHours { get; }
    }
}
