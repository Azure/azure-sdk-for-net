// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SearchPolygonResult
    {
        /// <summary>
        /// Initializes a new instance of the SearchPolygonResult class.
        /// </summary>
        public SearchPolygonResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchPolygonResult class.
        /// </summary>
        /// <param name="providerID">ID of the returned entity</param>
        /// <param name="error">Reason for the failure to obtain data for this
        /// provider.</param>
        /// <param name="geometryData">Geometry data in GeoJSON format. Please
        /// refer to [RFC 7946](https://tools.ietf.org/html/rfc7946) for
        /// details. Present only if "error" is not present.</param>
        public SearchPolygonResult(string providerID = default(string), string error = default(string), GeoJsonObject geometryData = default(GeoJsonObject))
        {
            ProviderID = providerID;
            Error = error;
            GeometryData = geometryData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets ID of the returned entity
        /// </summary>
        [JsonProperty(PropertyName = "providerID")]
        public string ProviderID { get; private set; }

        /// <summary>
        /// Gets reason for the failure to obtain data for this provider.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public string Error { get; private set; }

        /// <summary>
        /// Gets or sets geometry data in GeoJSON format. Please refer to [RFC
        /// 7946](https://tools.ietf.org/html/rfc7946) for details. Present
        /// only if "error" is not present.
        /// </summary>
        [JsonProperty(PropertyName = "geometryData")]
        public GeoJsonObject GeometryData { get; set; }

    }
}
