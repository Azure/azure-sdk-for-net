// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Search.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The address of the result
    /// </summary>
    public partial class SearchResultAddress
    {
        /// <summary>
        /// Initializes a new instance of the SearchResultAddress class.
        /// </summary>
        public SearchResultAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchResultAddress class.
        /// </summary>
        /// <param name="buildingNumber">Building Number property</param>
        /// <param name="street">Street property</param>
        /// <param name="crossStreet">Cross Street property</param>
        /// <param name="streetNumber">Street Number property</param>
        /// <param name="routeNumbers">number of routes</param>
        /// <param name="streetName">Street Name property</param>
        /// <param name="streetNameAndNumber">Street Name and Number
        /// property</param>
        /// <param name="municipality">Municipality property</param>
        /// <param name="municipalitySubdivision">Municipality Subdivision
        /// property</param>
        /// <param name="countryTertiarySubdivision">Country Tertiary
        /// Subdivision property</param>
        /// <param name="countrySecondarySubdivision">Country Secondary
        /// Subdivision property</param>
        /// <param name="countrySubdivision">Country Subdivision
        /// property</param>
        /// <param name="postalCode">Postal Code property</param>
        /// <param name="extendedPostalCode">Extended Postal Code
        /// property</param>
        /// <param name="countryCode">Country Code property</param>
        /// <param name="country">Country property</param>
        /// <param name="countryCodeISO3">Country Code ISO3 property</param>
        /// <param name="freeformAddress">Free form Address property</param>
        /// <param name="countrySubdivisionName">Country Subdivision Name
        /// property</param>
        /// <param name="localName">An address component which represents the
        /// name of a geographic area or locality that groups a number of
        /// addressable objects for addressing purposes, without being an
        /// administrative unit. This field is used to build the
        /// `freeformAddress` property.</param>
        /// <param name="boundingBox">Bounding box coordinates.</param>
        public SearchResultAddress(string buildingNumber = default(string), string street = default(string), string crossStreet = default(string), string streetNumber = default(string), IList<int?> routeNumbers = default(IList<int?>), string streetName = default(string), string streetNameAndNumber = default(string), string municipality = default(string), string municipalitySubdivision = default(string), string countryTertiarySubdivision = default(string), string countrySecondarySubdivision = default(string), string countrySubdivision = default(string), string postalCode = default(string), string extendedPostalCode = default(string), string countryCode = default(string), string country = default(string), string countryCodeISO3 = default(string), string freeformAddress = default(string), string countrySubdivisionName = default(string), string localName = default(string), object boundingBox = default(object))
        {
            BuildingNumber = buildingNumber;
            Street = street;
            CrossStreet = crossStreet;
            StreetNumber = streetNumber;
            RouteNumbers = routeNumbers;
            StreetName = streetName;
            StreetNameAndNumber = streetNameAndNumber;
            Municipality = municipality;
            MunicipalitySubdivision = municipalitySubdivision;
            CountryTertiarySubdivision = countryTertiarySubdivision;
            CountrySecondarySubdivision = countrySecondarySubdivision;
            CountrySubdivision = countrySubdivision;
            PostalCode = postalCode;
            ExtendedPostalCode = extendedPostalCode;
            CountryCode = countryCode;
            Country = country;
            CountryCodeISO3 = countryCodeISO3;
            FreeformAddress = freeformAddress;
            CountrySubdivisionName = countrySubdivisionName;
            LocalName = localName;
            BoundingBox = boundingBox;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets building Number property
        /// </summary>
        [JsonProperty(PropertyName = "buildingNumber")]
        public string BuildingNumber { get; private set; }

        /// <summary>
        /// Gets street property
        /// </summary>
        [JsonProperty(PropertyName = "street")]
        public string Street { get; private set; }

        /// <summary>
        /// Gets cross Street property
        /// </summary>
        [JsonProperty(PropertyName = "crossStreet")]
        public string CrossStreet { get; private set; }

        /// <summary>
        /// Gets street Number property
        /// </summary>
        [JsonProperty(PropertyName = "streetNumber")]
        public string StreetNumber { get; private set; }

        /// <summary>
        /// Gets number of routes
        /// </summary>
        [JsonProperty(PropertyName = "routeNumbers")]
        public IList<int?> RouteNumbers { get; private set; }

        /// <summary>
        /// Gets street Name property
        /// </summary>
        [JsonProperty(PropertyName = "streetName")]
        public string StreetName { get; private set; }

        /// <summary>
        /// Gets street Name and Number property
        /// </summary>
        [JsonProperty(PropertyName = "streetNameAndNumber")]
        public string StreetNameAndNumber { get; private set; }

        /// <summary>
        /// Gets municipality property
        /// </summary>
        [JsonProperty(PropertyName = "municipality")]
        public string Municipality { get; private set; }

        /// <summary>
        /// Gets municipality Subdivision property
        /// </summary>
        [JsonProperty(PropertyName = "municipalitySubdivision")]
        public string MunicipalitySubdivision { get; private set; }

        /// <summary>
        /// Gets country Tertiary Subdivision property
        /// </summary>
        [JsonProperty(PropertyName = "countryTertiarySubdivision")]
        public string CountryTertiarySubdivision { get; private set; }

        /// <summary>
        /// Gets country Secondary Subdivision property
        /// </summary>
        [JsonProperty(PropertyName = "countrySecondarySubdivision")]
        public string CountrySecondarySubdivision { get; private set; }

        /// <summary>
        /// Gets country Subdivision property
        /// </summary>
        [JsonProperty(PropertyName = "countrySubdivision")]
        public string CountrySubdivision { get; private set; }

        /// <summary>
        /// Gets postal Code property
        /// </summary>
        [JsonProperty(PropertyName = "postalCode")]
        public string PostalCode { get; private set; }

        /// <summary>
        /// Gets extended Postal Code property
        /// </summary>
        [JsonProperty(PropertyName = "extendedPostalCode")]
        public string ExtendedPostalCode { get; private set; }

        /// <summary>
        /// Gets country Code property
        /// </summary>
        [JsonProperty(PropertyName = "countryCode")]
        public string CountryCode { get; private set; }

        /// <summary>
        /// Gets country property
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; private set; }

        /// <summary>
        /// Gets country Code ISO3 property
        /// </summary>
        [JsonProperty(PropertyName = "countryCodeISO3")]
        public string CountryCodeISO3 { get; private set; }

        /// <summary>
        /// Gets free form Address property
        /// </summary>
        [JsonProperty(PropertyName = "freeformAddress")]
        public string FreeformAddress { get; private set; }

        /// <summary>
        /// Gets country Subdivision Name property
        /// </summary>
        [JsonProperty(PropertyName = "countrySubdivisionName")]
        public string CountrySubdivisionName { get; private set; }

        /// <summary>
        /// Gets an address component which represents the name of a geographic
        /// area or locality that groups a number of addressable objects for
        /// addressing purposes, without being an administrative unit. This
        /// field is used to build the `freeformAddress` property.
        /// </summary>
        [JsonProperty(PropertyName = "localName")]
        public string LocalName { get; private set; }

        /// <summary>
        /// Gets bounding box coordinates.
        /// </summary>
        [JsonProperty(PropertyName = "boundingBox")]
        public object BoundingBox { get; private set; }

    }
}
