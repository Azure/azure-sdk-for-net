// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Weather.Models
{
    public partial class SevereWeatherAlert
    {
        internal static SevereWeatherAlert DeserializeSevereWeatherAlert(JsonElement element)
        {
            Optional<string> countryCode = default;
            Optional<int> alertId = default;
            Optional<SevereWeatherAlertDescription> description = default;
            Optional<string> category = default;
            Optional<int> priority = default;
            Optional<string> @class = default;
            Optional<string> level = default;
            Optional<string> source = default;
            Optional<int> sourceId = default;
            Optional<string> disclaimer = default;
            Optional<IReadOnlyList<AlertArea>> alertAreas = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("countryCode"))
                {
                    countryCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("alertId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    alertId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    description = SevereWeatherAlertDescription.DeserializeSevereWeatherAlertDescription(property.Value);
                    continue;
                }
                if (property.NameEquals("category"))
                {
                    category = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("priority"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    priority = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("class"))
                {
                    @class = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("level"))
                {
                    level = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    source = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sourceId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("disclaimer"))
                {
                    disclaimer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("alertAreas"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AlertArea> array = new List<AlertArea>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AlertArea.DeserializeAlertArea(item));
                    }
                    alertAreas = array;
                    continue;
                }
            }
            return new SevereWeatherAlert(countryCode.Value, Optional.ToNullable(alertId), description.Value, category.Value, Optional.ToNullable(priority), @class.Value, level.Value, source.Value, Optional.ToNullable(sourceId), disclaimer.Value, Optional.ToList(alertAreas));
        }
    }
}
