// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Weather.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Phrase summaries for the entire forecast period.
    /// </summary>
    public partial class MinuteForecastSummary
    {
        /// <summary>
        /// Initializes a new instance of the MinuteForecastSummary class.
        /// </summary>
        public MinuteForecastSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MinuteForecastSummary class.
        /// </summary>
        /// <param name="briefPhrase60">Summary phrase for the next 60 minutes.
        /// Phrase length is approximately 60 characters.</param>
        /// <param name="shortPhrase">Short summary phrase for the next 120
        /// minutes. Phrase length is approximately 25 characters.</param>
        /// <param name="briefPhrase">Summary phrase for the next 120 minutes.
        /// Phrase length is approximately 60 characters.</param>
        /// <param name="longPhrase">Long summary phrase for the next 120
        /// minutes. Phrase length is 60+ characters.</param>
        /// <param name="iconCode">Numeric value representing an image that
        /// displays the `iconPhrase`. Please refer to [Weather Service
        /// Concepts](https://aka.ms/AzureMapsWeatherConcepts) for
        /// details.</param>
        public MinuteForecastSummary(string briefPhrase60 = default(string), string shortPhrase = default(string), string briefPhrase = default(string), string longPhrase = default(string), int? iconCode = default(int?))
        {
            BriefPhrase60 = briefPhrase60;
            ShortPhrase = shortPhrase;
            BriefPhrase = briefPhrase;
            LongPhrase = longPhrase;
            IconCode = iconCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets summary phrase for the next 60 minutes. Phrase length
        /// is approximately 60 characters.
        /// </summary>
        [JsonProperty(PropertyName = "briefPhrase60")]
        public string BriefPhrase60 { get; set; }

        /// <summary>
        /// Gets or sets short summary phrase for the next 120 minutes. Phrase
        /// length is approximately 25 characters.
        /// </summary>
        [JsonProperty(PropertyName = "shortPhrase")]
        public string ShortPhrase { get; set; }

        /// <summary>
        /// Gets or sets summary phrase for the next 120 minutes. Phrase length
        /// is approximately 60 characters.
        /// </summary>
        [JsonProperty(PropertyName = "briefPhrase")]
        public string BriefPhrase { get; set; }

        /// <summary>
        /// Gets or sets long summary phrase for the next 120 minutes. Phrase
        /// length is 60+ characters.
        /// </summary>
        [JsonProperty(PropertyName = "longPhrase")]
        public string LongPhrase { get; set; }

        /// <summary>
        /// Gets or sets numeric value representing an image that displays the
        /// `iconPhrase`. Please refer to [Weather Service
        /// Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
        /// </summary>
        [JsonProperty(PropertyName = "iconCode")]
        public int? IconCode { get; set; }

    }
}
