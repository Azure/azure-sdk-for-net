// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Weather.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class WeatherNotification
    {
        /// <summary>
        /// Initializes a new instance of the WeatherNotification class.
        /// </summary>
        public WeatherNotification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WeatherNotification class.
        /// </summary>
        /// <param name="type">A type of notification generated to warn drivers
        /// of the onset of a hazard, or increase in intensity of a
        /// hazard.</param>
        /// <param name="hazardCode">A unique identifier (non-displayable) for
        /// each type of hazard: LightRain, ModerateRain, HeavyRain, LightMix,
        /// ModerateMix, HeavyMix, LightSnow, ModerateSnow, HeavySnow,
        /// LightIce, ModerateIce, HeavyIce, Hail, LargeHail, SunGlare,
        /// SunGlareHigh, Lightning, SevereLightning, WindModerate, WindHigh,
        /// WindExtreme, FloodWarning, FlashFloodWarning, TornadoWarning,
        /// TsunamiWarning, SevereThunderstormWarning.</param>
        /// <param name="shortPhrase">A displayable short phrase describing the
        /// forecasted conditions and precipitation intensity/type.</param>
        public WeatherNotification(string type = default(string), int? hazardIndex = default(int?), string hazardCode = default(string), string shortPhrase = default(string))
        {
            Type = type;
            HazardIndex = hazardIndex;
            HazardCode = hazardCode;
            ShortPhrase = shortPhrase;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a type of notification generated to warn drivers of
        /// the onset of a hazard, or increase in intensity of a hazard.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hazardIndex")]
        public int? HazardIndex { get; set; }

        /// <summary>
        /// Gets or sets a unique identifier (non-displayable) for each type of
        /// hazard: LightRain, ModerateRain, HeavyRain, LightMix, ModerateMix,
        /// HeavyMix, LightSnow, ModerateSnow, HeavySnow, LightIce,
        /// ModerateIce, HeavyIce, Hail, LargeHail, SunGlare, SunGlareHigh,
        /// Lightning, SevereLightning, WindModerate, WindHigh, WindExtreme,
        /// FloodWarning, FlashFloodWarning, TornadoWarning, TsunamiWarning,
        /// SevereThunderstormWarning.
        /// </summary>
        [JsonProperty(PropertyName = "hazardCode")]
        public string HazardCode { get; set; }

        /// <summary>
        /// Gets or sets a displayable short phrase describing the forecasted
        /// conditions and precipitation intensity/type.
        /// </summary>
        [JsonProperty(PropertyName = "shortPhrase")]
        public string ShortPhrase { get; set; }

    }
}
