// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Weather.Models
{
    public partial class DayOrNight
    {
        internal static DayOrNight DeserializeDayOrNight(JsonElement element)
        {
            Optional<int> iconCode = default;
            Optional<string> iconPhrase = default;
            Optional<LocalSource> localSource = default;
            Optional<bool> hasPrecipitation = default;
            Optional<string> precipitationType = default;
            Optional<string> precipitationIntensity = default;
            Optional<string> shortPhrase = default;
            Optional<string> longPhrase = default;
            Optional<int> precipitationProbability = default;
            Optional<int> thunderstormProbability = default;
            Optional<int> rainProbability = default;
            Optional<int> snowProbability = default;
            Optional<int> iceProbability = default;
            Optional<WindDetails> wind = default;
            Optional<WindDetails> windGust = default;
            Optional<WeatherUnit> totalLiquid = default;
            Optional<WeatherUnit> rain = default;
            Optional<WeatherUnit> snow = default;
            Optional<WeatherUnit> ice = default;
            Optional<float> hoursOfPrecipitation = default;
            Optional<float> hoursOfRain = default;
            Optional<float> hoursOfSnow = default;
            Optional<float> hoursOfIce = default;
            Optional<int> cloudCover = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("iconCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    iconCode = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("iconPhrase"))
                {
                    iconPhrase = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("localSource"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    localSource = LocalSource.DeserializeLocalSource(property.Value);
                    continue;
                }
                if (property.NameEquals("hasPrecipitation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hasPrecipitation = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("precipitationType"))
                {
                    precipitationType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("precipitationIntensity"))
                {
                    precipitationIntensity = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("shortPhrase"))
                {
                    shortPhrase = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("longPhrase"))
                {
                    longPhrase = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("precipitationProbability"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    precipitationProbability = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("thunderstormProbability"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    thunderstormProbability = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("rainProbability"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rainProbability = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("snowProbability"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    snowProbability = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("iceProbability"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    iceProbability = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("wind"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    wind = WindDetails.DeserializeWindDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("windGust"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    windGust = WindDetails.DeserializeWindDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("totalLiquid"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalLiquid = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("rain"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rain = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("snow"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    snow = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("ice"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ice = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("hoursOfPrecipitation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hoursOfPrecipitation = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("hoursOfRain"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hoursOfRain = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("hoursOfSnow"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hoursOfSnow = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("hoursOfIce"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hoursOfIce = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("cloudCover"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cloudCover = property.Value.GetInt32();
                    continue;
                }
            }
            return new DayOrNight(Optional.ToNullable(iconCode), iconPhrase.Value, localSource.Value, Optional.ToNullable(hasPrecipitation), precipitationType.Value, precipitationIntensity.Value, shortPhrase.Value, longPhrase.Value, Optional.ToNullable(precipitationProbability), Optional.ToNullable(thunderstormProbability), Optional.ToNullable(rainProbability), Optional.ToNullable(snowProbability), Optional.ToNullable(iceProbability), wind.Value, windGust.Value, totalLiquid.Value, rain.Value, snow.Value, ice.Value, Optional.ToNullable(hoursOfPrecipitation), Optional.ToNullable(hoursOfRain), Optional.ToNullable(hoursOfSnow), Optional.ToNullable(hoursOfIce), Optional.ToNullable(cloudCover));
        }
    }
}
