// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Weather.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Local weather data provider information.
    /// </summary>
    public partial class LocalSource
    {
        /// <summary>
        /// Initializes a new instance of the LocalSource class.
        /// </summary>
        public LocalSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LocalSource class.
        /// </summary>
        /// <param name="id">Numeric identifier, unique to the local data
        /// provider.</param>
        /// <param name="name">Name of the local data provider. Name is
        /// displayed in the language specified by language code in URL, if
        /// available. Otherwise, Name is displayed in English or the language
        /// in which the name was provided.</param>
        /// <param name="weatherCode">Weather code provided by the local data
        /// provider. This weather code allows the forecast to be matched to
        /// icons provided by the local data provider instead of Azure Maps
        /// icons.</param>
        public LocalSource(int? id = default(int?), string name = default(string), string weatherCode = default(string))
        {
            Id = id;
            Name = name;
            WeatherCode = weatherCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets numeric identifier, unique to the local data provider.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or sets name of the local data provider. Name is displayed in
        /// the language specified by language code in URL, if available.
        /// Otherwise, Name is displayed in English or the language in which
        /// the name was provided.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets weather code provided by the local data provider. This
        /// weather code allows the forecast to be matched to icons provided by
        /// the local data provider instead of Azure Maps icons.
        /// </summary>
        [JsonProperty(PropertyName = "weatherCode")]
        public string WeatherCode { get; set; }

    }
}
