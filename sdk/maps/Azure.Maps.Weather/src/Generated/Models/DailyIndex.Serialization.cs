// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Weather.Models
{
    public partial class DailyIndex
    {
        internal static DailyIndex DeserializeDailyIndex(JsonElement element)
        {
            Optional<string> indexName = default;
            Optional<int> indexId = default;
            Optional<string> dateTime = default;
            Optional<float> value = default;
            Optional<string> category = default;
            Optional<int> categoryValue = default;
            Optional<bool> @ascending = default;
            Optional<string> description = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("indexName"))
                {
                    indexName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("indexId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    indexId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("dateTime"))
                {
                    dateTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    value = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("category"))
                {
                    category = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("categoryValue"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    categoryValue = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("ascending"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    @ascending = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
            }
            return new DailyIndex(indexName.Value, Optional.ToNullable(indexId), dateTime.Value, Optional.ToNullable(value), category.Value, Optional.ToNullable(categoryValue), Optional.ToNullable(@ascending), description.Value);
        }
    }
}
