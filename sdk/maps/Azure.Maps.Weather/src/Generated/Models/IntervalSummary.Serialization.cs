// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Weather.Models
{
    public partial class IntervalSummary
    {
        internal static IntervalSummary DeserializeIntervalSummary(JsonElement element)
        {
            Optional<int> startMinute = default;
            Optional<int> endMinute = default;
            Optional<int> totalMinutes = default;
            Optional<string> shortPhrase = default;
            Optional<string> briefPhrase = default;
            Optional<string> longPhrase = default;
            Optional<int> iconCode = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("startMinute"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startMinute = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("endMinute"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endMinute = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalMinutes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalMinutes = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("shortPhrase"))
                {
                    shortPhrase = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("briefPhrase"))
                {
                    briefPhrase = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("longPhrase"))
                {
                    longPhrase = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("iconCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    iconCode = property.Value.GetInt32();
                    continue;
                }
            }
            return new IntervalSummary(Optional.ToNullable(startMinute), Optional.ToNullable(endMinute), Optional.ToNullable(totalMinutes), shortPhrase.Value, briefPhrase.Value, longPhrase.Value, Optional.ToNullable(iconCode));
        }
    }
}
