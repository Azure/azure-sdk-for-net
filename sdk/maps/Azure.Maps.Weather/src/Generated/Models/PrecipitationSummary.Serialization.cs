// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Weather.Models
{
    public partial class PrecipitationSummary
    {
        internal static PrecipitationSummary DeserializePrecipitationSummary(JsonElement element)
        {
            Optional<WeatherUnit> pastHour = default;
            Optional<WeatherUnit> past3Hours = default;
            Optional<WeatherUnit> past6Hours = default;
            Optional<WeatherUnit> past9Hours = default;
            Optional<WeatherUnit> past12Hours = default;
            Optional<WeatherUnit> past18Hours = default;
            Optional<WeatherUnit> past24Hours = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("pastHour"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    pastHour = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("past3Hours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    past3Hours = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("past6Hours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    past6Hours = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("past9Hours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    past9Hours = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("past12Hours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    past12Hours = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("past18Hours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    past18Hours = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
                if (property.NameEquals("past24Hours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    past24Hours = WeatherUnit.DeserializeWeatherUnit(property.Value);
                    continue;
                }
            }
            return new PrecipitationSummary(pastHour.Value, past3Hours.Value, past6Hours.Value, past9Hours.Value, past12Hours.Value, past18Hours.Value, past24Hours.Value);
        }
    }
}
