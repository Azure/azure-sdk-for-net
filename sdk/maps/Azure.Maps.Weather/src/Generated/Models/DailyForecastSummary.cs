// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Weather.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Summary for the main conditions for the requested time period. Notice
    /// that summary can cover only part of the time period.
    /// </summary>
    public partial class DailyForecastSummary
    {
        /// <summary>
        /// Initializes a new instance of the DailyForecastSummary class.
        /// </summary>
        public DailyForecastSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DailyForecastSummary class.
        /// </summary>
        /// <param name="startDate">Date and time that the summary is in
        /// effect, displayed in ISO 8601 format, for example,
        /// 2019-10-27T19:39:57-08:00.</param>
        /// <param name="endDate">Date and time that the summary period ends,
        /// displayed in ISO 8601 format, for example,
        /// 2019-10-27T19:39:57-08:00.</param>
        /// <param name="severity">severity</param>
        /// <param name="phrase">Summary phrase of the daily forecast.
        /// Displayed in specified language.</param>
        /// <param name="category">one or 2 word(s) to summarize the
        /// phrase.</param>
        public DailyForecastSummary(string startDate = default(string), string endDate = default(string), int? severity = default(int?), string phrase = default(string), string category = default(string))
        {
            StartDate = startDate;
            EndDate = endDate;
            Severity = severity;
            Phrase = phrase;
            Category = category;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets date and time that the summary is in effect, displayed
        /// in ISO 8601 format, for example, 2019-10-27T19:39:57-08:00.
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or sets date and time that the summary period ends, displayed
        /// in ISO 8601 format, for example, 2019-10-27T19:39:57-08:00.
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public string EndDate { get; set; }

        /// <summary>
        /// Gets or sets severity
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public int? Severity { get; set; }

        /// <summary>
        /// Gets or sets summary phrase of the daily forecast.  Displayed in
        /// specified language.
        /// </summary>
        [JsonProperty(PropertyName = "phrase")]
        public string Phrase { get; set; }

        /// <summary>
        /// Gets or sets one or 2 word(s) to summarize the phrase.
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

    }
}
