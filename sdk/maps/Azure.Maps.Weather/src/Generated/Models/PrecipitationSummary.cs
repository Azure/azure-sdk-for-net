// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Weather.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PrecipitationSummary
    {
        /// <summary>
        /// Initializes a new instance of the PrecipitationSummary class.
        /// </summary>
        public PrecipitationSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrecipitationSummary class.
        /// </summary>
        /// <param name="pastHour">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past hour.</param>
        /// <param name="past3Hours">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past three hours.</param>
        /// <param name="past6Hours">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past six hours. Contains Metric
        /// and Imperial Values.</param>
        /// <param name="past9Hours">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past nine hours.</param>
        /// <param name="past12Hours">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past 12 hours.</param>
        /// <param name="past18Hours">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past 18 hours.</param>
        /// <param name="past24Hours">The amount of precipitation (liquid
        /// equivalent) that has fallen in the past 24 hours.</param>
        public PrecipitationSummary(WeatherUnit pastHour = default(WeatherUnit), WeatherUnit past3Hours = default(WeatherUnit), WeatherUnit past6Hours = default(WeatherUnit), WeatherUnit past9Hours = default(WeatherUnit), WeatherUnit past12Hours = default(WeatherUnit), WeatherUnit past18Hours = default(WeatherUnit), WeatherUnit past24Hours = default(WeatherUnit))
        {
            PastHour = pastHour;
            Past3Hours = past3Hours;
            Past6Hours = past6Hours;
            Past9Hours = past9Hours;
            Past12Hours = past12Hours;
            Past18Hours = past18Hours;
            Past24Hours = past24Hours;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past hour.
        /// </summary>
        [JsonProperty(PropertyName = "pastHour")]
        public WeatherUnit PastHour { get; set; }

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past three hours.
        /// </summary>
        [JsonProperty(PropertyName = "past3Hours")]
        public WeatherUnit Past3Hours { get; set; }

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past six hours. Contains Metric and Imperial
        /// Values.
        /// </summary>
        [JsonProperty(PropertyName = "past6Hours")]
        public WeatherUnit Past6Hours { get; set; }

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past nine hours.
        /// </summary>
        [JsonProperty(PropertyName = "past9Hours")]
        public WeatherUnit Past9Hours { get; set; }

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past 12 hours.
        /// </summary>
        [JsonProperty(PropertyName = "past12Hours")]
        public WeatherUnit Past12Hours { get; set; }

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past 18 hours.
        /// </summary>
        [JsonProperty(PropertyName = "past18Hours")]
        public WeatherUnit Past18Hours { get; set; }

        /// <summary>
        /// Gets or sets the amount of precipitation (liquid equivalent) that
        /// has fallen in the past 24 hours.
        /// </summary>
        [JsonProperty(PropertyName = "past24Hours")]
        public WeatherUnit Past24Hours { get; set; }

    }
}
