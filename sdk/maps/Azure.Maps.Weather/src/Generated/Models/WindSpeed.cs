// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Weather.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Speed of wind in specified unit.
    /// </summary>
    public partial class WindSpeed
    {
        /// <summary>
        /// Initializes a new instance of the WindSpeed class.
        /// </summary>
        public WindSpeed()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WindSpeed class.
        /// </summary>
        /// <param name="value">Rounded value of the speed.</param>
        /// <param name="unit">Type of unit for the speed value.</param>
        /// <param name="unitType">Numeric ID value associated with the type of
        /// unit being displayed. Can be used for unit translation. Please
        /// refer to [Weather Service
        /// Concepts](https://aka.ms/AzureMapsWeatherConcepts) for
        /// details.</param>
        public WindSpeed(double? value = default(double?), string unit = default(string), int? unitType = default(int?))
        {
            Value = value;
            Unit = unit;
            UnitType = unitType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets rounded value of the speed.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public double? Value { get; set; }

        /// <summary>
        /// Gets or sets type of unit for the speed value.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets numeric ID value associated with the type of unit
        /// being displayed. Can be used for unit translation. Please refer to
        /// [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts)
        /// for details.
        /// </summary>
        [JsonProperty(PropertyName = "unitType")]
        public int? UnitType { get; set; }

    }
}
