// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Render
{
    using Models;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for RenderV2.
    /// </summary>
    public static partial class RenderV2Extensions
    {
            /// <summary>
            /// **Applies to**: S0 and S1 pricing tiers.
            ///
            /// The Get Map Tiles API allows users to request map tiles in vector or raster
            /// formats typically to be integrated  into a map control or SDK. Some example
            /// tiles that can be requested are Azure Maps road tiles, real-time  Weather
            /// Radar tiles or the map tiles created using [Azure Maps
            /// Creator](https://aka.ms/amcreator). By default,  Azure Maps uses vector
            /// tiles for its web map control (Web SDK) and Android SDK.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='tilesetId'>
            /// A tileset is a collection of raster or vector data broken up into a uniform
            /// grid of square tiles at preset  zoom levels. Every tileset has a
            /// **tilesetId** to use when making requests. The **tilesetId** for tilesets
            /// created using [Azure Maps Creator](https://aka.ms/amcreator) are generated
            /// through the  [Tileset Create
            /// API](https://docs.microsoft.com/en-us/rest/api/maps/tileset). The
            /// ready-to-use tilesets supplied  by Azure Maps are listed below. For
            /// example, microsoft.base. Possible values include: 'microsoft.base',
            /// 'microsoft.base.labels', 'microsoft.base.hybrid', 'microsoft.terra.main',
            /// 'microsoft.base.road', 'microsoft.base.darkgrey',
            /// 'microsoft.base.labels.road', 'microsoft.base.hybrid.road',
            /// 'microsoft.imagery', 'microsoft.weather.radar.main',
            /// 'microsoft.weather.infrared.main', 'microsoft.dem'
            /// </param>
            /// <param name='zoom'>
            /// Zoom level for the desired tile. Please find TilesetID list below for more
            /// details on supported zoom level for each tilesetId.&lt;br&gt;
            ///
            /// Please see [Zoom Levels and Tile
            /// Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid)
            /// for details.
            /// </param>
            /// <param name='xTileIndex'>
            /// X coordinate of the tile on zoom grid. Value must be in the range [0,
            /// 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
            ///
            /// Please see [Zoom Levels and Tile
            /// Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid)
            /// for details.
            /// </param>
            /// <param name='yTileIndex'>
            /// Y coordinate of the tile on zoom grid. Value must be in the range [0,
            /// 2&lt;sup&gt;`zoom`&lt;/sup&gt; -1].
            ///
            /// Please see [Zoom Levels and Tile
            /// Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid)
            /// for details.
            /// </param>
            /// <param name='timeStamp'>
            /// The desired date and time of the requested tile. This parameter must be
            /// specified in the standard date-time format (e.g.
            /// 2019-11-14T16:03:00-08:00), as defined by [ISO
            /// 8601](https://en.wikipedia.org/wiki/ISO_8601). This parameter is only
            /// supported when tilesetId parameter is set to one of the values below.
            ///
            /// * microsoft.weather.infrared.main: We provide tiles up to 3 hours in the
            /// past. Tiles are available in 10-minute intervals. We round the timeStamp
            /// value to the nearest 10-minute time frame.
            /// * microsoft.weather.radar.main: We provide tiles up to 1.5 hours in the
            /// past and up to 2 hours in the future. Tiles are available in 5-minute
            /// intervals. We round the timeStamp value to the nearest 5-minute time frame.
            /// </param>
            /// <param name='tileSize'>
            /// The size of the returned map tile in pixels. Possible values include:
            /// '256', '512'
            /// </param>
            /// <param name='language'>
            /// Language in which search results should be returned. Should be one of
            /// supported IETF language tags, case insensitive. When data in specified
            /// language is not available for a specific field, default language is used.
            ///
            /// Please refer to [Supported
            /// Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages)
            /// for details.
            /// </param>
            /// <param name='view'>
            /// The View parameter specifies which set of geopolitically disputed content
            /// is returned via Azure Maps services, including  borders and labels
            /// displayed on the map. The View parameter (also referred to as “user region
            /// parameter”) will show the  correct maps for that country/region. By
            /// default, the View parameter is set to “Unified” even if you haven’t defined
            /// it in  the request. It is your responsibility to determine the location of
            /// your users, and then set the View parameter correctly  for that location.
            /// Alternatively, you have the option to set ‘View=Auto’, which will return
            /// the map data based on the IP  address of the request. The View parameter in
            /// Azure Maps must be used in compliance with applicable laws, including those
            /// regarding mapping, of the country where maps, images and other data and
            /// third party content that you are authorized to  access via Azure Maps is
            /// made available. Example: view=IN.
            ///
            /// Please refer to [Supported
            /// Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see
            /// the available Views.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Stream> GetMapTilePreviewAsync(this IRenderV2 operations, string tilesetId, int zoom, int xTileIndex, int yTileIndex, string timeStamp = default(string), string tileSize = default(string), string language = default(string), string view = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                var _result = await operations.GetMapTilePreviewWithHttpMessagesAsync(tilesetId, zoom, xTileIndex, yTileIndex, timeStamp, tileSize, language, view, null, cancellationToken).ConfigureAwait(false);
                _result.Request.Dispose();
                return _result.Body;
            }

    }
}
