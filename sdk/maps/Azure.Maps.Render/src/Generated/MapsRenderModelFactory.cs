// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace Azure.Maps.Render
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class MapsRenderModelFactory
    {
        /// <summary> Initializes a new instance of CopyrightCaption. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="copyrightsCaption"> Copyrights Caption property. </param>
        /// <returns> A new <see cref="Render.CopyrightCaption"/> instance for mocking. </returns>
        public static CopyrightCaption CopyrightCaption(string formatVersion = null, string copyrightsCaption = null)
        {
            return new CopyrightCaption(formatVersion, copyrightsCaption);
        }

        /// <summary> Initializes a new instance of RenderCopyrights. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="generalCopyrights"> General Copyrights array. </param>
        /// <param name="regions"> Regions array. </param>
        /// <returns> A new <see cref="Render.RenderCopyrights"/> instance for mocking. </returns>
        public static RenderCopyrights RenderCopyrights(string formatVersion = null, IEnumerable<string> generalCopyrights = null, IEnumerable<RegionCopyrights> regions = null)
        {
            generalCopyrights ??= new List<string>();
            regions ??= new List<RegionCopyrights>();

            return new RenderCopyrights(formatVersion, generalCopyrights?.ToList(), regions?.ToList());
        }

        /// <summary> Initializes a new instance of RegionCopyrights. </summary>
        /// <param name="copyrights"> Copyrights array. </param>
        /// <param name="country"> Country property. </param>
        /// <returns> A new <see cref="Render.RegionCopyrights"/> instance for mocking. </returns>
        public static RegionCopyrights RegionCopyrights(IEnumerable<string> copyrights = null, RegionCopyrightsCountry country = null)
        {
            copyrights ??= new List<string>();

            return new RegionCopyrights(copyrights?.ToList(), country);
        }

        /// <summary> Initializes a new instance of RegionCopyrightsCountry. </summary>
        /// <param name="iso3"> ISO3 property. </param>
        /// <param name="label"> Label property. </param>
        /// <returns> A new <see cref="Render.RegionCopyrightsCountry"/> instance for mocking. </returns>
        public static RegionCopyrightsCountry RegionCopyrightsCountry(string iso3 = null, string label = null)
        {
            return new RegionCopyrightsCountry(iso3, label);
        }
    }
}
