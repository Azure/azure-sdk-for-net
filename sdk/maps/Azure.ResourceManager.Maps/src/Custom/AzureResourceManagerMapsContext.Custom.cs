// <auto-generated/>

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.ResourceManager.Maps;
using Azure.ResourceManager.Maps.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Maps;

[ModelReaderWriterBuildable(typeof(MapsAccountData))]
[ModelReaderWriterBuildable(typeof(MapsAccountResource))]
[ModelReaderWriterBuildable(typeof(MapsCreatorData))]
[ModelReaderWriterBuildable(typeof(MapsCreatorResource))]
[ModelReaderWriterBuildable(typeof(CorsRules))]
[ModelReaderWriterBuildable(typeof(CustomerManagedKeyEncryption))]
[ModelReaderWriterBuildable(typeof(CustomerManagedKeyEncryptionKeyIdentity))]
[ModelReaderWriterBuildable(typeof(MapsAccountKeys))]
[ModelReaderWriterBuildable(typeof(MapsAccountPatch))]
[ModelReaderWriterBuildable(typeof(MapsAccountProperties))]
[ModelReaderWriterBuildable(typeof(MapsAccounts))]
[ModelReaderWriterBuildable(typeof(MapsAccountSasContent))]
[ModelReaderWriterBuildable(typeof(MapsAccountSasToken))]
[ModelReaderWriterBuildable(typeof(MapsCorsRule))]
[ModelReaderWriterBuildable(typeof(MapsCreatorListResult))]
[ModelReaderWriterBuildable(typeof(MapsCreatorPatch))]
[ModelReaderWriterBuildable(typeof(MapsCreatorProperties))]
[ModelReaderWriterBuildable(typeof(MapsEncryption))]
[ModelReaderWriterBuildable(typeof(MapsKeySpecification))]
[ModelReaderWriterBuildable(typeof(MapsLinkedResource))]
[ModelReaderWriterBuildable(typeof(MapsSku))]
public partial class AzureResourceManagerMapsContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
