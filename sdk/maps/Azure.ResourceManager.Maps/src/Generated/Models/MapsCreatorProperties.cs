// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Maps.Models
{
    /// <summary> Creator resource properties. </summary>
    public partial class MapsCreatorProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MapsCreatorProperties"/>. </summary>
        /// <param name="storageUnits"> The storage units to be allocated. Integer values from 1 to 100, inclusive. </param>
        public MapsCreatorProperties(int storageUnits)
        {
            StorageUnits = storageUnits;
        }

        /// <summary> Initializes a new instance of <see cref="MapsCreatorProperties"/>. </summary>
        /// <param name="provisioningState"> The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled. </param>
        /// <param name="storageUnits"> The storage units to be allocated. Integer values from 1 to 100, inclusive. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MapsCreatorProperties(string provisioningState, int storageUnits, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            StorageUnits = storageUnits;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="MapsCreatorProperties"/> for deserialization. </summary>
        internal MapsCreatorProperties()
        {
        }

        /// <summary> The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled. </summary>
        public string ProvisioningState { get; }
        /// <summary> The storage units to be allocated. Integer values from 1 to 100, inclusive. </summary>
        public int StorageUnits { get; set; }
    }
}
