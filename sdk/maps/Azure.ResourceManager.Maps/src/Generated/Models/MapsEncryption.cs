// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Maps.Models
{
    /// <summary> (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled. </summary>
    public partial class MapsEncryption
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MapsEncryption"/>. </summary>
        public MapsEncryption()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MapsEncryption"/>. </summary>
        /// <param name="infrastructureEncryption"> Values are enabled and disabled. </param>
        /// <param name="customerManagedKeyEncryption"> All Customer-managed key encryption properties for the resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MapsEncryption(MapsInfrastructureEncryption? infrastructureEncryption, CustomerManagedKeyEncryption customerManagedKeyEncryption, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            InfrastructureEncryption = infrastructureEncryption;
            CustomerManagedKeyEncryption = customerManagedKeyEncryption;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Values are enabled and disabled. </summary>
        public MapsInfrastructureEncryption? InfrastructureEncryption { get; set; }
        /// <summary> All Customer-managed key encryption properties for the resource. </summary>
        public CustomerManagedKeyEncryption CustomerManagedKeyEncryption { get; set; }
    }
}
