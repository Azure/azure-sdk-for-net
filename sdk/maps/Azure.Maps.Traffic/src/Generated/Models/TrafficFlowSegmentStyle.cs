// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Maps.Traffic.Models
{
    /// <summary> The TrafficFlowSegmentStyle. </summary>
    public readonly partial struct TrafficFlowSegmentStyle : IEquatable<TrafficFlowSegmentStyle>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="TrafficFlowSegmentStyle"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TrafficFlowSegmentStyle(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AbsoluteValue = "absolute";
        private const string RelativeValue = "relative";
        private const string RelativeDelayValue = "relative-delay";

        /// <summary> absolute. </summary>
        public static TrafficFlowSegmentStyle Absolute { get; } = new TrafficFlowSegmentStyle(AbsoluteValue);
        /// <summary> relative. </summary>
        public static TrafficFlowSegmentStyle Relative { get; } = new TrafficFlowSegmentStyle(RelativeValue);
        /// <summary> relative-delay. </summary>
        public static TrafficFlowSegmentStyle RelativeDelay { get; } = new TrafficFlowSegmentStyle(RelativeDelayValue);
        /// <summary> Determines if two <see cref="TrafficFlowSegmentStyle"/> values are the same. </summary>
        public static bool operator ==(TrafficFlowSegmentStyle left, TrafficFlowSegmentStyle right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TrafficFlowSegmentStyle"/> values are not the same. </summary>
        public static bool operator !=(TrafficFlowSegmentStyle left, TrafficFlowSegmentStyle right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="TrafficFlowSegmentStyle"/>. </summary>
        public static implicit operator TrafficFlowSegmentStyle(string value) => new TrafficFlowSegmentStyle(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TrafficFlowSegmentStyle other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TrafficFlowSegmentStyle other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
