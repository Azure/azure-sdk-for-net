// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Maps.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Azure resource which represents access to a suite of Maps REST APIs.
    /// </summary>
    public partial class MapsAccount : IResource
    {
        /// <summary>
        /// Initializes a new instance of the MapsAccount class.
        /// </summary>
        public MapsAccount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MapsAccount class.
        /// </summary>
        /// <param name="sku">The SKU of this account.</param>
        /// <param name="kind">Get or Set Kind property. Possible values
        /// include: 'Gen1', 'Gen2'</param>
        /// <param name="systemData">The system meta data relating to this
        /// resource.</param>
        /// <param name="identity">Sets the identity property for maps
        /// account.</param>
        /// <param name="properties">The map account properties.</param>
        public MapsAccount(Sku sku, string kind = default(string), SystemData systemData = default(SystemData), ManagedServiceIdentity identity = default(ManagedServiceIdentity), MapsAccountProperties properties = default(MapsAccountProperties))
        {
            Sku = sku;
            Kind = kind;
            SystemData = systemData;
            Identity = identity;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SKU of this account.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Gets or sets get or Set Kind property. Possible values include:
        /// 'Gen1', 'Gen2'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets the system meta data relating to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Gets or sets sets the identity property for maps account.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ManagedServiceIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets the map account properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public MapsAccountProperties Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sku");
            }
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
