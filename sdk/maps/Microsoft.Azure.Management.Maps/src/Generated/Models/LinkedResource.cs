// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Maps.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Linked resource is reference to a resource deployed in an Azure
    /// subscription, add the linked resource `uniqueName` value as an optional
    /// parameter for operations on Azure Maps Geospatial REST APIs.
    /// </summary>
    public partial class LinkedResource
    {
        /// <summary>
        /// Initializes a new instance of the LinkedResource class.
        /// </summary>
        public LinkedResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkedResource class.
        /// </summary>
        /// <param name="uniqueName">A provided name which uniquely identifies
        /// the linked resource.</param>
        /// <param name="id">ARM resource id in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.</param>
        public LinkedResource(string uniqueName, string id)
        {
            UniqueName = uniqueName;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a provided name which uniquely identifies the linked
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "uniqueName")]
        public string UniqueName { get; set; }

        /// <summary>
        /// Gets or sets ARM resource id in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UniqueName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UniqueName");
            }
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
