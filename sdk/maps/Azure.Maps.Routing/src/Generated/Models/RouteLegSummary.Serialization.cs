// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Routing.Models
{
    public partial class RouteLegSummary
    {
        internal static RouteLegSummary DeserializeRouteLegSummary(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<int> lengthInMeters = default;
            Optional<int> travelTimeInSeconds = default;
            Optional<int> trafficDelayInSeconds = default;
            Optional<DateTimeOffset> departureTime = default;
            Optional<DateTimeOffset> arrivalTime = default;
            Optional<int> noTrafficTravelTimeInSeconds = default;
            Optional<int> historicTrafficTravelTimeInSeconds = default;
            Optional<int> liveTrafficIncidentsTravelTimeInSeconds = default;
            Optional<double> fuelConsumptionInLiters = default;
            Optional<double> batteryConsumptionInkWh = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lengthInMeters"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lengthInMeters = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("travelTimeInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    travelTimeInSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("trafficDelayInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    trafficDelayInSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("departureTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    departureTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("arrivalTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    arrivalTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("noTrafficTravelTimeInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    noTrafficTravelTimeInSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("historicTrafficTravelTimeInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    historicTrafficTravelTimeInSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("liveTrafficIncidentsTravelTimeInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    liveTrafficIncidentsTravelTimeInSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("fuelConsumptionInLiters"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    fuelConsumptionInLiters = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("batteryConsumptionInkWh"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    batteryConsumptionInkWh = property.Value.GetDouble();
                    continue;
                }
            }
            return new RouteLegSummary(Optional.ToNullable(lengthInMeters), Optional.ToNullable(travelTimeInSeconds), Optional.ToNullable(trafficDelayInSeconds), Optional.ToNullable(departureTime), Optional.ToNullable(arrivalTime), Optional.ToNullable(noTrafficTravelTimeInSeconds), Optional.ToNullable(historicTrafficTravelTimeInSeconds), Optional.ToNullable(liveTrafficIncidentsTravelTimeInSeconds), Optional.ToNullable(fuelConsumptionInLiters), Optional.ToNullable(batteryConsumptionInkWh));
        }
    }
}
