// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Maps.Routing.Models
{
    /// <summary> The GeoJsonPolygonData. </summary>
    internal partial class GeoJsonPolygonData
    {
        protected internal Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="GeoJsonPolygonData"/>. </summary>
        /// <param name="coordinates"> Coordinates for the `GeoJson Polygon` geometry type. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="coordinates"/> is null. </exception>
        public GeoJsonPolygonData(IEnumerable<IList<IList<double>>> coordinates)
        {
            Argument.AssertNotNull(coordinates, nameof(coordinates));

            Coordinates = coordinates.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="GeoJsonPolygonData"/>. </summary>
        /// <param name="coordinates"> Coordinates for the `GeoJson Polygon` geometry type. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal GeoJsonPolygonData(IList<IList<IList<double>>> coordinates, Dictionary<string, BinaryData> rawData)
        {
            Coordinates = coordinates;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="GeoJsonPolygonData"/> for deserialization. </summary>
        internal GeoJsonPolygonData()
        {
        }

        /// <summary> Coordinates for the `GeoJson Polygon` geometry type. </summary>
        public IList<IList<IList<double>>> Coordinates { get; }
    }
}
