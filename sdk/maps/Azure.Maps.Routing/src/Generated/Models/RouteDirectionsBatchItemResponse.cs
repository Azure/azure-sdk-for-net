// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Maps.Routing.Models
{
    /// <summary> The result of the query. RouteDirections if the query completed successfully, ErrorResponse otherwise. </summary>
    public partial class RouteDirectionsBatchItemResponse : RouteDirections
    {
        /// <summary> Initializes a new instance of <see cref="RouteDirectionsBatchItemResponse"/>. </summary>
        internal RouteDirectionsBatchItemResponse()
        {
        }

        /// <summary> Initializes a new instance of <see cref="RouteDirectionsBatchItemResponse"/>. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="routes"> Routes array. </param>
        /// <param name="optimizedWaypoints">
        /// Optimized sequence of waypoints. It shows the index from the user provided waypoint sequence for the original and optimized list. For instance, a response:
        ///
        /// ```
        /// &lt;optimizedWaypoints&gt;
        /// &lt;waypoint providedIndex="0" optimizedIndex="1"/&gt;
        /// &lt;waypoint providedIndex="1" optimizedIndex="2"/&gt;
        /// &lt;waypoint providedIndex="2" optimizedIndex="0"/&gt;
        /// &lt;/optimizedWaypoints&gt;
        /// ```
        ///
        /// means that the original sequence is [0, 1, 2] and optimized sequence is [1, 2, 0]. Since the index starts by 0 the original is "first, second, third" while the optimized is "second, third, first".
        /// </param>
        /// <param name="report"> Reports the effective settings used in the current call. </param>
        /// <param name="errorDetail"> The error object. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal RouteDirectionsBatchItemResponse(string formatVersion, IReadOnlyList<RouteData> routes, IReadOnlyList<RouteOptimizedWaypoint> optimizedWaypoints, RouteReport report, ErrorDetail errorDetail, Dictionary<string, BinaryData> rawData) : base(formatVersion, routes, optimizedWaypoints, report, rawData)
        {
            ErrorDetail = errorDetail;
        }
    }
}
