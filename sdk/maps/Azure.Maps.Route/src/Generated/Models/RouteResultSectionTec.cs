// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Route.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Details of the traffic event, using definitions in the
    /// [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard. Can
    /// contain effectCode and causes elements.
    /// </summary>
    public partial class RouteResultSectionTec
    {
        /// <summary>
        /// Initializes a new instance of the RouteResultSectionTec class.
        /// </summary>
        public RouteResultSectionTec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RouteResultSectionTec class.
        /// </summary>
        /// <param name="effectCode">The effect on the traffic flow. Contains a
        /// value in the tec001:EffectCode table, as defined in the
        /// [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard. Can
        /// be used to color-code traffic events according to severity.</param>
        /// <param name="causes">Causes array</param>
        public RouteResultSectionTec(int? effectCode = default(int?), IList<RouteResultSectionTecCause> causes = default(IList<RouteResultSectionTecCause>))
        {
            EffectCode = effectCode;
            Causes = causes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the effect on the traffic flow. Contains a value in the
        /// tec001:EffectCode table, as defined in the
        /// [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard. Can
        /// be used to color-code traffic events according to severity.
        /// </summary>
        [JsonProperty(PropertyName = "effectCode")]
        public int? EffectCode { get; private set; }

        /// <summary>
        /// Gets or sets causes array
        /// </summary>
        [JsonProperty(PropertyName = "causes")]
        public IList<RouteResultSectionTecCause> Causes { get; set; }

    }
}
