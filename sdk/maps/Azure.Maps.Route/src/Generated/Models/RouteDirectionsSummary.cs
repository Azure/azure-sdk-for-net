// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Maps.Route.Models
{
    /// <summary> Summary object. </summary>
    public partial class RouteDirectionsSummary
    {
        /// <summary> Initializes a new instance of RouteDirectionsSummary. </summary>
        internal RouteDirectionsSummary()
        {
        }

        /// <summary> Initializes a new instance of RouteDirectionsSummary. </summary>
        /// <param name="lengthInMeters"> Length In Meters property. </param>
        /// <param name="travelTimeInSeconds"> Estimated travel time in seconds property that includes the delay due to real-time traffic. Note that even when traffic=false travelTimeInSeconds still includes the delay due to traffic. If DepartAt is in the future, travel time is calculated using time-dependent historic traffic data. </param>
        /// <param name="trafficDelayInSeconds"> Estimated delay in seconds caused by the real-time incident(s) according to traffic information. For routes planned with departure time in the future, delays is always 0. To return additional travel times using different types of traffic information, parameter computeTravelTimeFor=all needs to be added. </param>
        /// <param name="departureTime"> Departure Time property. </param>
        /// <param name="arrivalTime"> Arrival Time property. </param>
        internal RouteDirectionsSummary(int? lengthInMeters, int? travelTimeInSeconds, int? trafficDelayInSeconds, string departureTime, string arrivalTime)
        {
            LengthInMeters = lengthInMeters;
            TravelTimeInSeconds = travelTimeInSeconds;
            TrafficDelayInSeconds = trafficDelayInSeconds;
            DepartureTime = departureTime;
            ArrivalTime = arrivalTime;
        }

        /// <summary> Length In Meters property. </summary>
        public int? LengthInMeters { get; }
        /// <summary> Estimated travel time in seconds property that includes the delay due to real-time traffic. Note that even when traffic=false travelTimeInSeconds still includes the delay due to traffic. If DepartAt is in the future, travel time is calculated using time-dependent historic traffic data. </summary>
        public int? TravelTimeInSeconds { get; }
        /// <summary> Estimated delay in seconds caused by the real-time incident(s) according to traffic information. For routes planned with departure time in the future, delays is always 0. To return additional travel times using different types of traffic information, parameter computeTravelTimeFor=all needs to be added. </summary>
        public int? TrafficDelayInSeconds { get; }
        /// <summary> Departure Time property. </summary>
        public string DepartureTime { get; }
        /// <summary> Arrival Time property. </summary>
        public string ArrivalTime { get; }
    }
}
