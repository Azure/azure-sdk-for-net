// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Route.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// This object is returned from a successful Route Matrix call. For ex, if
    /// 2 origins and 3 destinations are provided, there are going to 2 arrays
    /// with 3 elements in each. Each element's content depends on the options
    /// provided in the query.
    /// </summary>
    public partial class RouteMatrixResponse
    {
        /// <summary>
        /// Initializes a new instance of the RouteMatrixResponse class.
        /// </summary>
        public RouteMatrixResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RouteMatrixResponse class.
        /// </summary>
        /// <param name="formatVersion">Format Version property</param>
        /// <param name="matrix">Results as a 2 dimensional array of route
        /// summaries.</param>
        public RouteMatrixResponse(string formatVersion = default(string), IList<IList<RouteMatrixResult>> matrix = default(IList<IList<RouteMatrixResult>>), RouteMatrixSummary summary = default(RouteMatrixSummary))
        {
            FormatVersion = formatVersion;
            Matrix = matrix;
            Summary = summary;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets format Version property
        /// </summary>
        [JsonProperty(PropertyName = "formatVersion")]
        public string FormatVersion { get; private set; }

        /// <summary>
        /// Gets results as a 2 dimensional array of route summaries.
        /// </summary>
        [JsonProperty(PropertyName = "matrix")]
        public IList<IList<RouteMatrixResult>> Matrix { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "summary")]
        public RouteMatrixSummary Summary { get; set; }

    }
}
