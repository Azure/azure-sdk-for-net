// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Route.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Contains guidance related elements. This field is present only when
    /// guidance was requested and is available.
    /// </summary>
    public partial class RouteResultGuidance
    {
        /// <summary>
        /// Initializes a new instance of the RouteResultGuidance class.
        /// </summary>
        public RouteResultGuidance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RouteResultGuidance class.
        /// </summary>
        /// <param name="instructions">A list of instructions describing
        /// maneuvers.</param>
        /// <param name="instructionGroups">Groups a sequence of instruction
        /// elements which are related to each other.</param>
        public RouteResultGuidance(IList<RouteResultInstruction> instructions = default(IList<RouteResultInstruction>), IList<RouteResultInstructionGroup> instructionGroups = default(IList<RouteResultInstructionGroup>))
        {
            Instructions = instructions;
            InstructionGroups = instructionGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a list of instructions describing maneuvers.
        /// </summary>
        [JsonProperty(PropertyName = "instructions")]
        public IList<RouteResultInstruction> Instructions { get; private set; }

        /// <summary>
        /// Gets groups a sequence of instruction elements which are related to
        /// each other.
        /// </summary>
        [JsonProperty(PropertyName = "instructionGroups")]
        public IList<RouteResultInstructionGroup> InstructionGroups { get; private set; }

    }
}
