// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;

    /// <summary>
    /// </summary>
    public partial interface ICreatorClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// This parameter specifies where the Azure Maps Creator resource is
        /// located.  Valid values are us and eu. Possible values include:
        /// 'us', 'eu'
        /// </summary>
        string Geography { get; set; }

        /// <summary>
        /// Specifies which account is intended for usage in conjunction with
        /// the Azure AD security model.  It represents a unique ID for the
        /// Azure Maps account and can be retrieved from the Azure Maps
        /// management  plane Account API. To use Azure AD security in Azure
        /// Maps see the following [articles](https://aka.ms/amauthdetails) for
        /// guidance.
        /// </summary>
        string XMsClientId { get; set; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Gets the IAlias.
        /// </summary>
        IAlias Alias { get; }

        /// <summary>
        /// Gets the IData.
        /// </summary>
        IData Data { get; }

        /// <summary>
        /// Gets the IDataset.
        /// </summary>
        IDataset Dataset { get; }

        /// <summary>
        /// Gets the IConversion.
        /// </summary>
        IConversion Conversion { get; }

        /// <summary>
        /// Gets the IFeatureState.
        /// </summary>
        IFeatureState FeatureState { get; }

        /// <summary>
        /// Gets the ISpatial.
        /// </summary>
        ISpatial Spatial { get; }

        /// <summary>
        /// Gets the ITileset.
        /// </summary>
        ITileset Tileset { get; }

        /// <summary>
        /// Gets the IWFS.
        /// </summary>
        IWFS WFS { get; }

    }
}
