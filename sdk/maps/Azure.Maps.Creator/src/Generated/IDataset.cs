// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Dataset operations.
    /// </summary>
    public partial interface IDataset
    {
        /// <summary>
        /// **Applies to:** see pricing
        /// [tiers](https://aka.ms/AzureMapsPricingTier).
        ///
        /// Creator makes it possible to develop applications based on your
        /// private indoor map data using Azure Maps API and SDK.
        /// [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps)
        /// article introduces concepts and tools that apply to Azure Maps
        /// Creator.
        ///
        /// This API allows the caller to create a dataset from data that was
        /// uploaded to the Azure Maps Data Service and converted using the
        /// Azure Maps Conversion Service.
        ///
        /// You can use this API in a scenario like uploading a DWG zip package
        /// for a building, converting the zip package using the Azure Maps
        /// Conversion Service, and creating a dataset from the converted zip
        /// package. The created dataset can be used to create tilesets using
        /// the Azure Maps Tileset Service and can be queried via the Azure
        /// Maps WFS Service.
        ///
        /// ### Submit Create Request
        ///
        /// To create your dataset, you will use a `POST` request where the
        /// `conversionId` query parameter is an ID that represents the
        /// converted DWG zip package, the `datasetId` parameter will be the ID
        /// of a previously created dataset to append with the current dataset
        /// and, optionally, the `description` query parameter will contain a
        /// description (if description is not provided a default description
        /// will be given).
        ///
        /// The Create API is a [long-running
        /// request](https://aka.ms/am-creator-lrt-v2).
        /// </summary>
        /// <param name='conversionId'>
        /// The unique ID used to create the dataset. The `conversionId` must
        /// have been obtained from a successful call to the Conversion Service
        /// Convert API and may be provided with multiple query parameters with
        /// same name (if more than one is provided).
        /// </param>
        /// <param name='datasetId'>
        /// The ID for the dataset to append with. The dataset must originate
        /// from a previous dataset creation call that matches the datasetId
        /// </param>
        /// <param name='descriptionDataset'>
        /// The description to be given to the dataset.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<LongRunningOperationResult,DatasetCreateHeaders>> CreateWithHttpMessagesAsync(string conversionId, string datasetId = default(string), string descriptionDataset = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// **Applies to:** see pricing
        /// [tiers](https://aka.ms/AzureMapsPricingTier).
        ///
        /// Creator makes it possible to develop applications based on your
        /// private indoor map data using Azure Maps API and SDK.
        /// [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps)
        /// article introduces concepts and tools that apply to Azure Maps
        /// Creator.
        ///
        /// This API allows the caller to fetch a list of all previously
        /// successfully created datasets.
        ///
        /// ### Submit List Request
        ///
        /// To list all your datasets, you will issue a `GET` request with no
        /// additional parameters.
        ///
        ///
        /// ### List Data Response
        ///
        /// The List API returns the complete list of all datasets in `json`
        /// format. The response contains the following fields (if they are not
        /// null or empty):
        /// &gt; created - The timestamp the dataset was created.
        /// &gt; datasetId - The id for the dataset.
        /// &gt; description - The description for the dataset.
        /// &gt; datasetSources - The source data that was used when the create
        /// request was issued.
        /// &gt; ontology - The source
        /// [ontology](https://docs.microsoft.com/en-us/azure/azure-maps/creator-facility-ontology)
        /// that was used in the conversion service for the input
        /// data.&lt;br/&gt;
        ///
        /// The `datasetSources` describes the source data that was used when
        /// the create request was issued and contains the following elements
        /// (if they are not null or empty):
        ///
        /// &gt; conversionIds - The list of `conversionId` (null if none were
        /// provided).
        /// &gt; appendDatasetId - The `datasetId` that was used for an append
        /// operation (null if none was used).
        /// &gt;featureCounts - The counts for each feature type in the
        /// dataset.&lt;br/&gt;
        ///
        /// Here's a sample response returning the `timestamp`, `datasetId`,
        /// `description`, `datasetSources`, and `ontology` of 3 dataset
        /// resources:
        ///
        ///
        /// ```json
        /// {
        /// "datasets": [
        /// {
        /// "timestamp": "2020-01-01T22:50:48.123Z",
        /// "datasetId": "f6495f62-94f8-0ec2-c252-45626f82fcb2",
        /// "description": "Some description or comment for the dataset.",
        /// "datasetSources": {
        /// "conversionIds": [
        /// "15d21452-c9bb-27b6-5e79-743ca5c3205d"
        /// ],      },
        /// "ontology": "facility-2.0",
        /// "featureCounts": {
        /// "directoryInfo": 2,
        /// "category": 10,
        /// "facility": 1,
        /// "level": 3,
        /// "unit": 183,
        /// "zone": 3,
        /// "verticalPenetration": 6,
        /// "opening": 48,
        /// "areaElement": 108
        /// }
        /// },
        /// {
        /// "timestamp": "2020-01-01T22:57:53.123Z",
        /// "datasetId": "8b1288fa-1958-4a2b-b68e-13a7i5af7d7c",
        /// "description": "Create from upload
        /// '0c1288fa-2058-4a1b-b68d-13a5f5af7d7c'.",
        /// "datasetSources": {
        /// "conversionIds": [
        /// "0c1288fa-2058-4a1b-b68d-13a5f5af7d7c"
        /// ],
        /// "appendDatasetId": "46d1edb6-d29e-4786-9589-dbd4efd7a977"
        /// },
        /// "ontology": "facility-2.0",
        /// "featureCounts": {
        /// "directoryInfo": 2,
        /// "category": 10,
        /// "facility": 1,
        /// "level": 3,
        /// "unit": 183,
        /// "zone": 3,
        /// "verticalPenetration": 6,
        /// "opening": 48,
        /// "areaElement": 108
        /// }
        /// }
        /// ]
        /// }
        /// ```
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DatasetListResponse>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// **Applies to:** see pricing
        /// [tiers](https://aka.ms/AzureMapsPricingTier).
        ///
        /// Creator makes it possible to develop applications based on your
        /// private indoor map data using Azure Maps API and SDK.
        /// [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps)
        /// article introduces concepts and tools that apply to Azure Maps
        /// Creator.
        ///
        /// This API allows the caller to fetch a previously successfully
        /// created dataset.
        ///
        /// ### Submit Get Details Request
        ///
        /// To get the details for a previously created dataset, you will issue
        /// a `GET` request with the `datasetId` in the path.
        ///
        /// ### Get Details Response
        ///
        /// The Get Details API returns the details for a dataset in `json`
        /// format. The response contains the following fields (if they are not
        /// null or empty):
        /// &gt; created - The timestamp the dataset was created.
        /// &gt; datasetId - The id for the dataset.
        /// &gt; description - The description for the dataset.
        /// &gt; datasetSources - The source data that was used when the create
        /// request was issued.
        /// &gt; ontology - The source
        /// [ontology](https://docs.microsoft.com/en-us/azure/azure-maps/creator-facility-ontology)
        /// that was used in the conversion service for the input
        /// data.&lt;br/&gt;
        ///
        /// The `datasetSources` describes the source data that was used when
        /// the create request was issued and contains the following elements
        /// (if they are not null or empty):
        /// &gt; conversionIds - The list of `conversionId` (null if none were
        /// provided).
        /// &gt; appendDatasetId - The `datasetId` that was used for an append
        /// operation (null if none was used).
        /// &gt;featureCounts - The counts for each feature type in the
        /// dataset.&lt;br/&gt;
        ///
        /// Here's a sample response returning the `timestamp`, `datasetId`,
        /// `description`, `datasetSources`, and `ontology` of a dataset
        /// resource:
        ///
        /// ```json
        /// {
        /// "timestamp": "2020-01-01T22:50:48.123Z",
        /// "datasetId": "f6495f62-94f8-0ec2-c252-45626f82fcb2",
        /// "description": "Some description or comment for the dataset.",
        /// "datasetSources": {
        /// "conversionIds": [
        /// "15d21452-c9bb-27b6-5e79-743ca5c3205d"
        /// ],
        /// },
        /// "ontology": "facility-2.0",
        /// "featureCounts": {
        /// "directoryInfo": 2,
        /// "category": 10,
        /// "facility": 1,
        /// "level": 3,
        /// "unit": 183,
        /// "zone": 3,
        /// "verticalPenetration": 6,
        /// "opening": 48,
        /// "areaElement": 108
        /// }
        /// }
        /// ```
        /// </summary>
        /// <param name='datasetId'>
        /// The identifier for the dataset to query from.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DatasetDetailInfo>> GetWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// **Applies to:** see pricing
        /// [tiers](https://aka.ms/AzureMapsPricingTier).
        ///
        /// Creator makes it possible to develop applications based on your
        /// private indoor map data using Azure Maps API and SDK.
        /// [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps)
        /// article introduces concepts and tools that apply to Azure Maps
        /// Creator.
        ///
        /// You can also use this API to delete old/unused datasets to create
        /// space for new Creator content.
        ///
        /// ### Submit Delete Request
        ///
        /// To delete your content you will issue a `DELETE` request where the
        /// path will contain the `datasetId` of the dataset to delete.
        /// </summary>
        /// <param name='datasetId'>
        /// The identifier for the dataset to query from.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// This API allows the caller to view the current progress of a
        /// dataset operation and the path is obtained from a call to the
        /// Create API.
        ///
        /// ### Submit Operations Request
        ///
        /// To view the current progress of a dataset operation, you will use a
        /// `GET` request where the `operationId` given the path is the ID that
        /// represents the operation.
        ///
        /// ### Operation Response
        ///
        /// While in progress, a `200-OK` http status code will be returned
        /// with no extra headers. If the operation succeeds, a `200-OK` http
        /// status code with Resource-Location header will be returned.
        /// </summary>
        /// <param name='operationId'>
        /// The ID to query the status for the dataset create/import request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<LongRunningOperationResult,DatasetGetOperationHeaders>> GetOperationWithHttpMessagesAsync(string operationId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
