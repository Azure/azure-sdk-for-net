// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.Maps.Creator.Models;

namespace Azure.Maps.Creator
{
    /// <summary> The Alias service client. </summary>
    public partial class AliasClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal AliasRestClient RestClient { get; }

        /// <summary> Initializes a new instance of AliasClient for mocking. </summary>
        protected AliasClient()
        {
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(TokenCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            string[] scopes = { "https://atlas.microsoft.com/.default" };
            _pipeline = HttpPipelineBuilder.Build(options, new BearerTokenAuthenticationPolicy(credential, scopes));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public AliasClient(AzureKeyCredential credential, Geography? geography = default, CreatorClientOptions options = null)
        {
            if (credential == null)
            {
                throw new ArgumentNullException(nameof(credential));
            }
            geography ??= Geography.Us;

            options ??= new CreatorClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = HttpPipelineBuilder.Build(options, new AzureKeyCredentialPolicy(credential, "subscription-key"));
            RestClient = new AliasRestClient(_clientDiagnostics, _pipeline, geography);
        }

        /// <summary> Initializes a new instance of AliasClient. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="geography"> This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. </param>
        internal AliasClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Geography? geography = default)
        {
            RestClient = new AliasRestClient(clientDiagnostics, pipeline, geography);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to create an alias. You can also assign the alias during the create request. An alias can reference an ID generated by a creator service, but cannot reference another alias ID.
        /// 
        /// ### Submit Create Request
        /// 
        /// To create your alias, you will use a `POST` request. If you would like to assign the alias during the creation, you will pass the `resourceId` query parameter.
        /// 
        /// ### Create Alias Response
        /// 
        /// The Create API returns a HTTP `201 Created` response with the alias resource in the body.
        /// 
        /// A sample response from creating an alias:
        /// 
        /// ```json
        /// {
        ///   &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///   &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///   &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///   &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        /// }
        /// ```.
        /// </summary>
        /// <param name="creatorDataItemId"> The unique id that references a creator data item to be aliased. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<AliasesCreateResponse>> CreateAsync(string creatorDataItemId = null, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.Create");
            scope.Start();
            try
            {
                return await RestClient.CreateAsync(creatorDataItemId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to create an alias. You can also assign the alias during the create request. An alias can reference an ID generated by a creator service, but cannot reference another alias ID.
        /// 
        /// ### Submit Create Request
        /// 
        /// To create your alias, you will use a `POST` request. If you would like to assign the alias during the creation, you will pass the `resourceId` query parameter.
        /// 
        /// ### Create Alias Response
        /// 
        /// The Create API returns a HTTP `201 Created` response with the alias resource in the body.
        /// 
        /// A sample response from creating an alias:
        /// 
        /// ```json
        /// {
        ///   &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///   &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///   &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///   &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        /// }
        /// ```.
        /// </summary>
        /// <param name="creatorDataItemId"> The unique id that references a creator data item to be aliased. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<AliasesCreateResponse> Create(string creatorDataItemId = null, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.Create");
            scope.Start();
            try
            {
                return RestClient.Create(creatorDataItemId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to assign an alias to reference a resource.
        /// 
        /// ### Submit Assign Request
        /// 
        /// To assign your alias to a resource, you will use a `PUT` request with the `aliasId` in the path and the `creatorDataItemId` passed as a query parameter.
        /// 
        /// ### Assign Alias Response
        /// 
        /// The Assign API returns a HTTP `200 OK` response with the updated alias resource in the body, if the alias was assigned successfully. A sample of the assign response is
        /// 
        /// ```json
        /// {
        ///   &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///   &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///   &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///   &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        /// }
        /// ```.
        /// </summary>
        /// <param name="aliasId"> The unique id that references an existing alias. </param>
        /// <param name="creatorDataItemId"> The unique id that references a creator data item to be aliased. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<AliasListItem>> AssignAsync(string aliasId, string creatorDataItemId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.Assign");
            scope.Start();
            try
            {
                return await RestClient.AssignAsync(aliasId, creatorDataItemId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to assign an alias to reference a resource.
        /// 
        /// ### Submit Assign Request
        /// 
        /// To assign your alias to a resource, you will use a `PUT` request with the `aliasId` in the path and the `creatorDataItemId` passed as a query parameter.
        /// 
        /// ### Assign Alias Response
        /// 
        /// The Assign API returns a HTTP `200 OK` response with the updated alias resource in the body, if the alias was assigned successfully. A sample of the assign response is
        /// 
        /// ```json
        /// {
        ///   &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///   &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///   &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///   &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        /// }
        /// ```.
        /// </summary>
        /// <param name="aliasId"> The unique id that references an existing alias. </param>
        /// <param name="creatorDataItemId"> The unique id that references a creator data item to be aliased. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<AliasListItem> Assign(string aliasId, string creatorDataItemId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.Assign");
            scope.Start();
            try
            {
                return RestClient.Assign(aliasId, creatorDataItemId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to delete a previously created alias. You can also use this API to delete old/unused aliases to create space for new content.This API does not delete the references resource, only the alias referencing the resource.
        /// 
        /// ### Submit Delete Request
        /// 
        /// To delete your alias you will issue a `DELETE` request where the path will contain the `aliasId` of the alias to delete.
        /// 
        /// ### Delete Alias Response
        /// 
        /// The Delete API returns a HTTP `204 No Content` response with an empty body, if the alias was deleted successfully.
        /// </summary>
        /// <param name="aliasId"> The unique id that references an existing alias. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response> DeleteAsync(string aliasId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.Delete");
            scope.Start();
            try
            {
                return await RestClient.DeleteAsync(aliasId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to delete a previously created alias. You can also use this API to delete old/unused aliases to create space for new content.This API does not delete the references resource, only the alias referencing the resource.
        /// 
        /// ### Submit Delete Request
        /// 
        /// To delete your alias you will issue a `DELETE` request where the path will contain the `aliasId` of the alias to delete.
        /// 
        /// ### Delete Alias Response
        /// 
        /// The Delete API returns a HTTP `204 No Content` response with an empty body, if the alias was deleted successfully.
        /// </summary>
        /// <param name="aliasId"> The unique id that references an existing alias. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response Delete(string aliasId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.Delete");
            scope.Start();
            try
            {
                return RestClient.Delete(aliasId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to fetch the details of a previously created alias.
        /// 
        /// ### Submit Get Details Request
        /// 
        /// To get the details of your alias, you will issue a `GET` request with the `aliasId` in the path.
        /// 
        /// ### Get Details Response
        /// 
        /// The Get Details API returns the previously created alias in `json` format. The response contains the following details for the alias resource:
        ///   &gt; createdTimestamp - The timestamp that the alias was created.
        ///   &gt; aliasId - The id for the alias.
        ///   &gt; creatorDataItemId - The id for the creator data item that this alias references (could be null if the alias has not been assigned).
        ///   &gt; lastUpdatedTimestamp - The last time the alias was assigned to a resource.
        /// 
        /// Here&apos;s a sample response:
        /// ```json
        /// {
        ///   &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///   &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///   &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///   &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        /// }
        /// ```.
        /// </summary>
        /// <param name="aliasId"> The unique id that references an existing alias. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<AliasListItem>> GetDetailsAsync(string aliasId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.GetDetails");
            scope.Start();
            try
            {
                return await RestClient.GetDetailsAsync(aliasId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to fetch the details of a previously created alias.
        /// 
        /// ### Submit Get Details Request
        /// 
        /// To get the details of your alias, you will issue a `GET` request with the `aliasId` in the path.
        /// 
        /// ### Get Details Response
        /// 
        /// The Get Details API returns the previously created alias in `json` format. The response contains the following details for the alias resource:
        ///   &gt; createdTimestamp - The timestamp that the alias was created.
        ///   &gt; aliasId - The id for the alias.
        ///   &gt; creatorDataItemId - The id for the creator data item that this alias references (could be null if the alias has not been assigned).
        ///   &gt; lastUpdatedTimestamp - The last time the alias was assigned to a resource.
        /// 
        /// Here&apos;s a sample response:
        /// ```json
        /// {
        ///   &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///   &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///   &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///   &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        /// }
        /// ```.
        /// </summary>
        /// <param name="aliasId"> The unique id that references an existing alias. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<AliasListItem> GetDetails(string aliasId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AliasClient.GetDetails");
            scope.Start();
            try
            {
                return RestClient.GetDetails(aliasId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to fetch a list of all previously successfully created aliases.
        /// 
        /// ### Submit List Request
        /// 
        /// To list all your aliases, you will issue a `GET` request with no additional parameters.
        /// 
        /// ### List Data Response
        /// 
        /// The List API returns the complete list of all aliases in `json` format. The response contains the following details for each alias resource:
        ///   &gt; createdTimestamp - The timestamp that the alias was created. Format yyyy-MM-ddTHH:mm:ss.sssZ
        ///   &gt; aliasId - The id for the alias.
        ///   &gt; creatorDataItemId - The id for the creator data item that this alias references (could be null if the alias has not been assigned).
        ///   &gt; lastUpdatedTimestamp - The last time the alias was assigned to a resource. Format yyyy-MM-ddTHH:mm:ss.sssZ
        /// 
        /// A sample response returning 2 alias resources:
        /// 
        /// ```json
        /// {
        ///   &quot;aliases&quot;: [
        ///     {
        ///       &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///       &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///       &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///       &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        ///     },
        ///     {
        ///       &quot;createdTimestamp&quot;: &quot;2020-02-18T19:53:33.123Z&quot;,
        ///       &quot;aliasId&quot;: &quot;1856dbfc-7a66-ee5a-bf8d-51dbfe1906f6&quot;,
        ///       &quot;creatorDataItemId&quot;: null,
        ///       &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-18T19:53:33.123Z&quot;
        ///     }
        ///   ]
        /// }
        /// ```.
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual AsyncPageable<AliasListItem> ListAsync(CancellationToken cancellationToken = default)
        {
            async Task<Page<AliasListItem>> FirstPageFunc(int? pageSizeHint)
            {
                using var scope = _clientDiagnostics.CreateScope("AliasClient.List");
                scope.Start();
                try
                {
                    var response = await RestClient.ListAsync(cancellationToken).ConfigureAwait(false);
                    return Page.FromValues(response.Value.Aliases, response.Value.NextLink, response.GetRawResponse());
                }
                catch (Exception e)
                {
                    scope.Failed(e);
                    throw;
                }
            }
            async Task<Page<AliasListItem>> NextPageFunc(string nextLink, int? pageSizeHint)
            {
                using var scope = _clientDiagnostics.CreateScope("AliasClient.List");
                scope.Start();
                try
                {
                    var response = await RestClient.ListNextPageAsync(nextLink, cancellationToken).ConfigureAwait(false);
                    return Page.FromValues(response.Value.Aliases, response.Value.NextLink, response.GetRawResponse());
                }
                catch (Exception e)
                {
                    scope.Failed(e);
                    throw;
                }
            }
            return PageableHelpers.CreateAsyncEnumerable(FirstPageFunc, NextPageFunc);
        }

        /// <summary>
        /// **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).
        /// 
        /// Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.
        /// 
        /// This API allows the caller to fetch a list of all previously successfully created aliases.
        /// 
        /// ### Submit List Request
        /// 
        /// To list all your aliases, you will issue a `GET` request with no additional parameters.
        /// 
        /// ### List Data Response
        /// 
        /// The List API returns the complete list of all aliases in `json` format. The response contains the following details for each alias resource:
        ///   &gt; createdTimestamp - The timestamp that the alias was created. Format yyyy-MM-ddTHH:mm:ss.sssZ
        ///   &gt; aliasId - The id for the alias.
        ///   &gt; creatorDataItemId - The id for the creator data item that this alias references (could be null if the alias has not been assigned).
        ///   &gt; lastUpdatedTimestamp - The last time the alias was assigned to a resource. Format yyyy-MM-ddTHH:mm:ss.sssZ
        /// 
        /// A sample response returning 2 alias resources:
        /// 
        /// ```json
        /// {
        ///   &quot;aliases&quot;: [
        ///     {
        ///       &quot;createdTimestamp&quot;: &quot;2020-02-13T21:19:11.123Z&quot;,
        ///       &quot;aliasId&quot;: &quot;a8a4b8bb-ecf4-fb27-a618-f41721552766&quot;,
        ///       &quot;creatorDataItemId&quot;: &quot;e89aebb9-70a3-8fe1-32bb-1fbd0c725f14&quot;,
        ///       &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-13T21:19:22.123Z&quot;
        ///     },
        ///     {
        ///       &quot;createdTimestamp&quot;: &quot;2020-02-18T19:53:33.123Z&quot;,
        ///       &quot;aliasId&quot;: &quot;1856dbfc-7a66-ee5a-bf8d-51dbfe1906f6&quot;,
        ///       &quot;creatorDataItemId&quot;: null,
        ///       &quot;lastUpdatedTimestamp&quot;: &quot;2020-02-18T19:53:33.123Z&quot;
        ///     }
        ///   ]
        /// }
        /// ```.
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Pageable<AliasListItem> List(CancellationToken cancellationToken = default)
        {
            Page<AliasListItem> FirstPageFunc(int? pageSizeHint)
            {
                using var scope = _clientDiagnostics.CreateScope("AliasClient.List");
                scope.Start();
                try
                {
                    var response = RestClient.List(cancellationToken);
                    return Page.FromValues(response.Value.Aliases, response.Value.NextLink, response.GetRawResponse());
                }
                catch (Exception e)
                {
                    scope.Failed(e);
                    throw;
                }
            }
            Page<AliasListItem> NextPageFunc(string nextLink, int? pageSizeHint)
            {
                using var scope = _clientDiagnostics.CreateScope("AliasClient.List");
                scope.Start();
                try
                {
                    var response = RestClient.ListNextPage(nextLink, cancellationToken);
                    return Page.FromValues(response.Value.Aliases, response.Value.NextLink, response.GetRawResponse());
                }
                catch (Exception e)
                {
                    scope.Failed(e);
                    throw;
                }
            }
            return PageableHelpers.CreateEnumerable(FirstPageFunc, NextPageFunc);
        }
    }
}
