// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The boolean rule. The color is selected based on the logic value of the
    /// key.
    /// </summary>
    public partial class BooleanRuleObject
    {
        /// <summary>
        /// Initializes a new instance of the BooleanRuleObject class.
        /// </summary>
        public BooleanRuleObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BooleanRuleObject class.
        /// </summary>
        /// <param name="trueProperty">The color when value is true. Color is a
        /// JSON string in a variety of permitted formats, HTML-style hex
        /// values, RGB ("#ff0", "#ffff00", "rgb(255, 255, 0)"), RGBA
        /// ("rgba(255, 255, 0, 1)"), HSL("hsl(100, 50%, 50%)"), and
        /// HSLA("hsla(100, 50%, 50%, 1)"). Predefined HTML colors names, like
        /// yellow and blue, are also permitted.</param>
        /// <param name="falseProperty">The color when value is false. Color is
        /// a JSON string in a variety of permitted formats, HTML-style hex
        /// values, RGB ("#ff0", "#ffff00", "rgb(255, 255, 0)"), RGBA
        /// ("rgba(255, 255, 0, 1)"), HSL("hsl(100, 50%, 50%)"), and
        /// HSLA("hsla(100, 50%, 50%, 1)"). Predefined HTML colors names, like
        /// yellow and blue, are also permitted.</param>
        public BooleanRuleObject(string trueProperty = default(string), string falseProperty = default(string))
        {
            TrueProperty = trueProperty;
            FalseProperty = falseProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the color when value is true. Color is a JSON string
        /// in a variety of permitted formats, HTML-style hex values, RGB
        /// ("#ff0", "#ffff00", "rgb(255, 255, 0)"), RGBA ("rgba(255, 255, 0,
        /// 1)"), HSL("hsl(100, 50%, 50%)"), and HSLA("hsla(100, 50%, 50%,
        /// 1)"). Predefined HTML colors names, like yellow and blue, are also
        /// permitted.
        /// </summary>
        [JsonProperty(PropertyName = "true")]
        public string TrueProperty { get; set; }

        /// <summary>
        /// Gets or sets the color when value is false. Color is a JSON string
        /// in a variety of permitted formats, HTML-style hex values, RGB
        /// ("#ff0", "#ffff00", "rgb(255, 255, 0)"), RGBA ("rgba(255, 255, 0,
        /// 1)"), HSL("hsl(100, 50%, 50%)"), and HSLA("hsla(100, 50%, 50%,
        /// 1)"). Predefined HTML colors names, like yellow and blue, are also
        /// permitted.
        /// </summary>
        [JsonProperty(PropertyName = "false")]
        public string FalseProperty { get; set; }

    }
}
