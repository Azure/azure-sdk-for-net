// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Creator.Models
{
    public partial class StyleObject : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("keyName");
            writer.WriteStringValue(KeyName);
            writer.WritePropertyName("type");
            writer.WriteStringValue(Type.ToString());
            writer.WriteEndObject();
        }

        internal static StyleObject DeserializeStyleObject(JsonElement element)
        {
            if (element.TryGetProperty("type", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "boolean": return BooleanTypeStyleRule.DeserializeBooleanTypeStyleRule(element);
                    case "number": return NumberTypeStyleRule.DeserializeNumberTypeStyleRule(element);
                    case "string": return StringTypeStyleRule.DeserializeStringTypeStyleRule(element);
                }
            }
            string keyName = default;
            StyleObjectType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("keyName"))
                {
                    keyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new StyleObjectType(property.Value.GetString());
                    continue;
                }
            }
            return new StyleObject(keyName, type);
        }
    }
}
