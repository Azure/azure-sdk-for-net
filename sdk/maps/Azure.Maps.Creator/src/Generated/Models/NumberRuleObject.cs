// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The numeric rule. The color is selected from the first range it falls
    /// into.
    /// </summary>
    public partial class NumberRuleObject
    {
        /// <summary>
        /// Initializes a new instance of the NumberRuleObject class.
        /// </summary>
        public NumberRuleObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NumberRuleObject class.
        /// </summary>
        /// <param name="color">The color when value is within the range. Color
        /// is a JSON string in a variety of permitted formats, HTML-style hex
        /// values, RGB ("#ff0", "#ffff00", "rgb(255, 255, 0)"), RGBA
        /// ("rgba(255, 255, 0, 1)"), HSL("hsl(100, 50%, 50%)"), and
        /// HSLA("hsla(100, 50%, 50%, 1)"). Predefined HTML colors names, like
        /// yellow and blue, are also permitted.</param>
        public NumberRuleObject(RangeObject range = default(RangeObject), string color = default(string))
        {
            Range = range;
            Color = color;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "range")]
        public RangeObject Range { get; set; }

        /// <summary>
        /// Gets or sets the color when value is within the range. Color is a
        /// JSON string in a variety of permitted formats, HTML-style hex
        /// values, RGB ("#ff0", "#ffff00", "rgb(255, 255, 0)"), RGBA
        /// ("rgba(255, 255, 0, 1)"), HSL("hsl(100, 50%, 50%)"), and
        /// HSLA("hsla(100, 50%, 50%, 1)"). Predefined HTML colors names, like
        /// yellow and blue, are also permitted.
        /// </summary>
        [JsonProperty(PropertyName = "color")]
        public string Color { get; set; }

    }
}
