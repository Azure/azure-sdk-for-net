// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Single feature state model.
    /// </summary>
    public partial class FeatureStateObject
    {
        /// <summary>
        /// Initializes a new instance of the FeatureStateObject class.
        /// </summary>
        public FeatureStateObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FeatureStateObject class.
        /// </summary>
        /// <param name="keyName">Feature state Keyname. Maximum length allowed
        /// is 1000.</param>
        /// <param name="value">Value for the feature state. Type should comply
        /// with the style definition attached to the featurestate. Maximum
        /// length allowed for string type is 1024.</param>
        /// <param name="eventTimestamp">Valid Timestamp when the feature state
        /// was captured.</param>
        public FeatureStateObject(string keyName = default(string), string value = default(string), string eventTimestamp = default(string))
        {
            KeyName = keyName;
            Value = value;
            EventTimestamp = eventTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets feature state Keyname. Maximum length allowed is 1000.
        /// </summary>
        [JsonProperty(PropertyName = "keyName")]
        public string KeyName { get; set; }

        /// <summary>
        /// Gets or sets value for the feature state. Type should comply with
        /// the style definition attached to the featurestate. Maximum length
        /// allowed for string type is 1024.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets valid Timestamp when the feature state was captured.
        /// </summary>
        [JsonProperty(PropertyName = "eventTimestamp")]
        public string EventTimestamp { get; set; }

    }
}
