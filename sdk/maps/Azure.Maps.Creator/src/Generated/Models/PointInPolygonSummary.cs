// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Point In Polygon Summary object
    /// </summary>
    public partial class PointInPolygonSummary
    {
        /// <summary>
        /// Initializes a new instance of the PointInPolygonSummary class.
        /// </summary>
        public PointInPolygonSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PointInPolygonSummary class.
        /// </summary>
        /// <param name="udid">A unique data id (udid) for the uploaded
        /// content. Udid is not applicable for POST spatial operations(set to
        /// null)</param>
        /// <param name="information">Processing information</param>
        public PointInPolygonSummary(SpatialCoordinate sourcePoint = default(SpatialCoordinate), string udid = default(string), string information = default(string))
        {
            SourcePoint = sourcePoint;
            Udid = udid;
            Information = information;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourcePoint")]
        public SpatialCoordinate SourcePoint { get; set; }

        /// <summary>
        /// Gets a unique data id (udid) for the uploaded content. Udid is not
        /// applicable for POST spatial operations(set to null)
        /// </summary>
        [JsonProperty(PropertyName = "udid")]
        public string Udid { get; private set; }

        /// <summary>
        /// Gets processing information
        /// </summary>
        [JsonProperty(PropertyName = "information")]
        public string Information { get; private set; }

    }
}
