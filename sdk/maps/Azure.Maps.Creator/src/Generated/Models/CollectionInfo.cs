// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CollectionInfo
    {
        /// <summary>
        /// Initializes a new instance of the CollectionInfo class.
        /// </summary>
        public CollectionInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CollectionInfo class.
        /// </summary>
        /// <param name="name">identifier of the collection used, for example,
        /// in URIs</param>
        /// <param name="links">Links to other WFS endpoints.</param>
        /// <param name="title">human readable title of the collection</param>
        /// <param name="description">a description of the features in the
        /// collection</param>
        public CollectionInfo(string name, IList<WfsEndpointLink> links, string title = default(string), string ontology = default(string), string description = default(string))
        {
            Name = name;
            Title = title;
            Ontology = ontology;
            Description = description;
            Links = links;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identifier of the collection used, for example, in
        /// URIs
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets human readable title of the collection
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ontology")]
        public string Ontology { get; set; }

        /// <summary>
        /// Gets or sets a description of the features in the collection
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets links to other WFS endpoints.
        /// </summary>
        [JsonProperty(PropertyName = "links")]
        public IList<WfsEndpointLink> Links { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Links == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Links");
            }
            if (Links != null)
            {
                foreach (var element in Links)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
