// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Creator.Models
{
    public partial class DatasetDetailInfo
    {
        internal static DatasetDetailInfo DeserializeDatasetDetailInfo(JsonElement element)
        {
            Optional<string> created = default;
            Optional<string> datasetId = default;
            Optional<string> ontology = default;
            Optional<string> description = default;
            Optional<DatasetSources> datasetSources = default;
            Optional<object> featureCounts = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("created"))
                {
                    created = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("datasetId"))
                {
                    datasetId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ontology"))
                {
                    ontology = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("datasetSources"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    datasetSources = DatasetSources.DeserializeDatasetSources(property.Value);
                    continue;
                }
                if (property.NameEquals("featureCounts"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    featureCounts = property.Value.GetObject();
                    continue;
                }
            }
            return new DatasetDetailInfo(created.Value, datasetId.Value, ontology.Value, description.Value, datasetSources.Value, featureCounts.Value);
        }
    }
}
