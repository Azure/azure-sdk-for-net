// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Creator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Closest Point Result Entry Object
    /// </summary>
    public partial class ClosestPointResultEntry
    {
        /// <summary>
        /// Initializes a new instance of the ClosestPointResultEntry class.
        /// </summary>
        public ClosestPointResultEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClosestPointResultEntry class.
        /// </summary>
        /// <param name="distanceInMeters">The distance in meters from the
        /// source point to the closest point</param>
        /// <param name="geometryId">The unique id identifies a
        /// geometry</param>
        public ClosestPointResultEntry(double? distanceInMeters = default(double?), SpatialCoordinate position = default(SpatialCoordinate), string geometryId = default(string))
        {
            DistanceInMeters = distanceInMeters;
            Position = position;
            GeometryId = geometryId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the distance in meters from the source point to the closest
        /// point
        /// </summary>
        [JsonProperty(PropertyName = "distanceInMeters")]
        public double? DistanceInMeters { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "position")]
        public SpatialCoordinate Position { get; set; }

        /// <summary>
        /// Gets the unique id identifies a geometry
        /// </summary>
        [JsonProperty(PropertyName = "geometryId")]
        public string GeometryId { get; private set; }

    }
}
