// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Creator.Models
{
    public partial class RangeObject : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Minimum))
            {
                writer.WritePropertyName("minimum");
                writer.WriteNumberValue(Minimum.Value);
            }
            if (Optional.IsDefined(Maximum))
            {
                writer.WritePropertyName("maximum");
                writer.WriteNumberValue(Maximum.Value);
            }
            if (Optional.IsDefined(ExclusiveMinimum))
            {
                writer.WritePropertyName("exclusiveMinimum");
                writer.WriteNumberValue(ExclusiveMinimum.Value);
            }
            if (Optional.IsDefined(ExclusiveMaximum))
            {
                writer.WritePropertyName("exclusiveMaximum");
                writer.WriteNumberValue(ExclusiveMaximum.Value);
            }
            writer.WriteEndObject();
        }

        internal static RangeObject DeserializeRangeObject(JsonElement element)
        {
            Optional<double> minimum = default;
            Optional<double> maximum = default;
            Optional<double> exclusiveMinimum = default;
            Optional<double> exclusiveMaximum = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("minimum"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    minimum = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("maximum"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maximum = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("exclusiveMinimum"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    exclusiveMinimum = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("exclusiveMaximum"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    exclusiveMaximum = property.Value.GetDouble();
                    continue;
                }
            }
            return new RangeObject(Optional.ToNullable(minimum), Optional.ToNullable(maximum), Optional.ToNullable(exclusiveMinimum), Optional.ToNullable(exclusiveMaximum));
        }
    }
}
