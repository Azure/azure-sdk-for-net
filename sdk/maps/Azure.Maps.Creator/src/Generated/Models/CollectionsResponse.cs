// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Maps.Creator.Models
{
    /// <summary> The CollectionsResponse. </summary>
    public partial class CollectionsResponse
    {
        /// <summary> Initializes a new instance of CollectionsResponse. </summary>
        /// <param name="links"> Links to other WFS endpoints. </param>
        /// <param name="collections"> All the collections in a given dataset. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="links"/> or <paramref name="collections"/> is null. </exception>
        internal CollectionsResponse(IEnumerable<WfsEndpointLink> links, IEnumerable<CollectionInfo> collections)
        {
            if (links == null)
            {
                throw new ArgumentNullException(nameof(links));
            }
            if (collections == null)
            {
                throw new ArgumentNullException(nameof(collections));
            }

            Links = links.ToList();
            Collections = collections.ToList();
        }

        /// <summary> Initializes a new instance of CollectionsResponse. </summary>
        /// <param name="ontology"> The ontology version of this dataset. </param>
        /// <param name="links"> Links to other WFS endpoints. </param>
        /// <param name="collections"> All the collections in a given dataset. </param>
        internal CollectionsResponse(string ontology, IReadOnlyList<WfsEndpointLink> links, IReadOnlyList<CollectionInfo> collections)
        {
            Ontology = ontology;
            Links = links;
            Collections = collections;
        }

        /// <summary> The ontology version of this dataset. </summary>
        public string Ontology { get; }
        /// <summary> Links to other WFS endpoints. </summary>
        public IReadOnlyList<WfsEndpointLink> Links { get; }
        /// <summary> All the collections in a given dataset. </summary>
        public IReadOnlyList<CollectionInfo> Collections { get; }
    }
}
