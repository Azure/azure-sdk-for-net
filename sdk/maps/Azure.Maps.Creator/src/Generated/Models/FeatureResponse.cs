// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Maps.Creator.Models
{
    /// <summary> The FeatureResponse. </summary>
    public partial class FeatureResponse
    {
        /// <summary> Initializes a new instance of FeatureResponse. </summary>
        /// <param name="feature"> A valid `GeoJSON Feature` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.2) for details. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="feature"/> is null. </exception>
        internal FeatureResponse(GeoJsonFeature feature)
        {
            if (feature == null)
            {
                throw new ArgumentNullException(nameof(feature));
            }

            Feature = feature;
            Links = new ChangeTrackingList<WfsEndpointLink>();
        }

        /// <summary> Initializes a new instance of FeatureResponse. </summary>
        /// <param name="ontology"> The ontology version of this dataset. </param>
        /// <param name="feature"> A valid `GeoJSON Feature` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.2) for details. </param>
        /// <param name="links"> Links to other WFS endpoints. </param>
        internal FeatureResponse(string ontology, GeoJsonFeature feature, IReadOnlyList<WfsEndpointLink> links)
        {
            Ontology = ontology;
            Feature = feature;
            Links = links;
        }

        /// <summary> The ontology version of this dataset. </summary>
        public string Ontology { get; }
        /// <summary> A valid `GeoJSON Feature` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.2) for details. </summary>
        public GeoJsonFeature Feature { get; }
        /// <summary> Links to other WFS endpoints. </summary>
        public IReadOnlyList<WfsEndpointLink> Links { get; }
    }
}
