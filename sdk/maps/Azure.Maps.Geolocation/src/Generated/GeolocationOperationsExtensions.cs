// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Geolocation
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GeolocationOperations.
    /// </summary>
    public static partial class GeolocationOperationsExtensions
    {
            /// <summary>
            ///
            /// **Applies to**: S0 and S1 pricing tiers.
            ///
            ///
            /// This service will return the ISO country code for the provided IP address.
            /// Developers can use this information  to block or alter certain content
            /// based on geographical locations where the application is being viewed from.
            ///
            ///
            /// __Note:__ This service returns results from IANA and does not necessarily
            /// reflect the views of Microsoft  Corporation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ip'>
            /// The IP address. Both IPv4 and IPv6 are allowed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IpAddressToLocationResult> GetIPToLocationPreviewAsync(this IGeolocationOperations operations, string ip, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetIPToLocationPreviewWithHttpMessagesAsync(ip, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
