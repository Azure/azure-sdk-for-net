// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Timezone.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IanaId
    {
        /// <summary>
        /// Initializes a new instance of the IanaId class.
        /// </summary>
        public IanaId()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IanaId class.
        /// </summary>
        /// <param name="id">Id property</param>
        /// <param name="isAlias">IsAlias property</param>
        /// <param name="aliasOf">AliasOf property</param>
        /// <param name="hasZone1970Location">HasZone1970Location
        /// property</param>
        public IanaId(string id = default(string), bool? isAlias = default(bool?), string aliasOf = default(string), bool? hasZone1970Location = default(bool?))
        {
            Id = id;
            IsAlias = isAlias;
            AliasOf = aliasOf;
            HasZone1970Location = hasZone1970Location;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets id property
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets isAlias property
        /// </summary>
        [JsonProperty(PropertyName = "isAlias")]
        public bool? IsAlias { get; private set; }

        /// <summary>
        /// Gets aliasOf property
        /// </summary>
        [JsonProperty(PropertyName = "aliasOf")]
        public string AliasOf { get; private set; }

        /// <summary>
        /// Gets hasZone1970Location property
        /// </summary>
        [JsonProperty(PropertyName = "hasZone1970Location")]
        public bool? HasZone1970Location { get; private set; }

    }
}
