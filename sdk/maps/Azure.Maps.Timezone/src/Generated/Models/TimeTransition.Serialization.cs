// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Timezone.Models
{
    public partial class TimeTransition
    {
        internal static TimeTransition DeserializeTimeTransition(JsonElement element)
        {
            Optional<string> tag = default;
            Optional<string> standardOffset = default;
            Optional<string> daylightSavings = default;
            Optional<DateTimeOffset> utcStart = default;
            Optional<DateTimeOffset> utcEnd = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Tag"))
                {
                    tag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("StandardOffset"))
                {
                    standardOffset = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DaylightSavings"))
                {
                    daylightSavings = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("UtcStart"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    utcStart = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("UtcEnd"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    utcEnd = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new TimeTransition(tag.Value, standardOffset.Value, daylightSavings.Value, Optional.ToNullable(utcStart), Optional.ToNullable(utcEnd));
        }
    }
}
