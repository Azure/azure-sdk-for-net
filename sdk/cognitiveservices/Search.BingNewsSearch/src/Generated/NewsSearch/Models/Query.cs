// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines a search query.
    /// </summary>
    public partial class Query
    {
        /// <summary>
        /// Initializes a new instance of the Query class.
        /// </summary>
        public Query()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Query class.
        /// </summary>
        /// <param name="text">The query string. Use this string as the query
        /// term in a new search request.</param>
        /// <param name="displayText">The display version of the query term.
        /// This version of the query term may contain special characters that
        /// highlight the search term found in the query string. The string
        /// contains the highlighting characters only if the query enabled hit
        /// highlighting</param>
        /// <param name="webSearchUrl">The URL that takes the user to the Bing
        /// search results page for the query.Only related search results
        /// include this field.</param>
        /// <param name="searchLink">The URL that you use to get the results of
        /// the related search. Before using the URL, you must append query
        /// parameters as appropriate and include the Ocp-Apim-Subscription-Key
        /// header. Use this URL if you're displaying the results in your own
        /// user interface. Otherwise, use the webSearchUrl URL.</param>
        /// <param name="thumbnail">The URL to a thumbnail of a related
        /// image.</param>
        public Query(string text, string displayText = default(string), string webSearchUrl = default(string), string searchLink = default(string), ImageObject thumbnail = default(ImageObject))
        {
            Text = text;
            DisplayText = displayText;
            WebSearchUrl = webSearchUrl;
            SearchLink = searchLink;
            Thumbnail = thumbnail;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the query string. Use this string as the query term in
        /// a new search request.
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// Gets the display version of the query term. This version of the
        /// query term may contain special characters that highlight the search
        /// term found in the query string. The string contains the
        /// highlighting characters only if the query enabled hit highlighting
        /// </summary>
        [JsonProperty(PropertyName = "displayText")]
        public string DisplayText { get; private set; }

        /// <summary>
        /// Gets the URL that takes the user to the Bing search results page
        /// for the query.Only related search results include this field.
        /// </summary>
        [JsonProperty(PropertyName = "webSearchUrl")]
        public string WebSearchUrl { get; private set; }

        /// <summary>
        /// Gets the URL that you use to get the results of the related search.
        /// Before using the URL, you must append query parameters as
        /// appropriate and include the Ocp-Apim-Subscription-Key header. Use
        /// this URL if you're displaying the results in your own user
        /// interface. Otherwise, use the webSearchUrl URL.
        /// </summary>
        [JsonProperty(PropertyName = "searchLink")]
        public string SearchLink { get; private set; }

        /// <summary>
        /// Gets the URL to a thumbnail of a related image.
        /// </summary>
        [JsonProperty(PropertyName = "thumbnail")]
        public ImageObject Thumbnail { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Text == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Text");
            }
        }
    }
}
