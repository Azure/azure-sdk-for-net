// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("News/Topic")]
    public partial class NewsTopic : Thing
    {
        /// <summary>
        /// Initializes a new instance of the NewsTopic class.
        /// </summary>
        public NewsTopic()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NewsTopic class.
        /// </summary>
        /// <param name="id">A String identifier.</param>
        /// <param name="webSearchUrl">The URL To Bing's search result for this
        /// item.</param>
        /// <param name="name">The name of the thing represented by this
        /// object.</param>
        /// <param name="url">The URL to get more information about the thing
        /// represented by this object.</param>
        /// <param name="image">An image of the item.</param>
        /// <param name="description">A short description of the item.</param>
        /// <param name="alternateName">An alias for the item</param>
        /// <param name="bingId">An ID that uniquely identifies this
        /// item.</param>
        /// <param name="isBreakingNews">A Boolean value that indicates whether
        /// the topic is considered breaking news. If the topic is considered
        /// breaking news, the value is true.</param>
        /// <param name="query">A search query term that returns this trending
        /// topic.</param>
        /// <param name="newsSearchUrl">The URL to the Bing News search results
        /// for the search query term</param>
        public NewsTopic(string id = default(string), string webSearchUrl = default(string), string name = default(string), string url = default(string), ImageObject image = default(ImageObject), string description = default(string), string alternateName = default(string), string bingId = default(string), bool? isBreakingNews = default(bool?), Query query = default(Query), string newsSearchUrl = default(string))
            : base(id, webSearchUrl, name, url, image, description, alternateName, bingId)
        {
            IsBreakingNews = isBreakingNews;
            Query = query;
            NewsSearchUrl = newsSearchUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a Boolean value that indicates whether the topic is considered
        /// breaking news. If the topic is considered breaking news, the value
        /// is true.
        /// </summary>
        [JsonProperty(PropertyName = "isBreakingNews")]
        public bool? IsBreakingNews { get; private set; }

        /// <summary>
        /// Gets a search query term that returns this trending topic.
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public Query Query { get; private set; }

        /// <summary>
        /// Gets the URL to the Bing News search results for the search query
        /// term
        /// </summary>
        [JsonProperty(PropertyName = "newsSearchUrl")]
        public string NewsSearchUrl { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Query != null)
            {
                Query.Validate();
            }
        }
    }
}
