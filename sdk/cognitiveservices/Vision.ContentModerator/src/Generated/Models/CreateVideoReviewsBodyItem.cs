// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.ContentModerator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Schema items of the body.
    /// </summary>
    public partial class CreateVideoReviewsBodyItem
    {
        /// <summary>
        /// Initializes a new instance of the CreateVideoReviewsBodyItem class.
        /// </summary>
        public CreateVideoReviewsBodyItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateVideoReviewsBodyItem class.
        /// </summary>
        /// <param name="content">Video content url to review.</param>
        /// <param name="contentId">Content Identifier.</param>
        /// <param name="status">Status of the
        /// video(Complete,Unpublished,Pending). Possible values include:
        /// 'Complete', 'Unpublished', 'Pending'</param>
        /// <param name="videoFrames">Optional metadata details.</param>
        /// <param name="metadata">Optional metadata details.</param>
        /// <param name="timescale">Timescale of the video.</param>
        /// <param name="callbackEndpoint">Optional CallbackEndpoint.</param>
        public CreateVideoReviewsBodyItem(string content, string contentId, string status, IList<CreateVideoReviewsBodyItemVideoFramesItem> videoFrames = default(IList<CreateVideoReviewsBodyItemVideoFramesItem>), IList<CreateVideoReviewsBodyItemMetadataItem> metadata = default(IList<CreateVideoReviewsBodyItemMetadataItem>), int? timescale = default(int?), string callbackEndpoint = default(string))
        {
            VideoFrames = videoFrames;
            Metadata = metadata;
            Content = content;
            ContentId = contentId;
            Status = status;
            Timescale = timescale;
            CallbackEndpoint = callbackEndpoint;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for CreateVideoReviewsBodyItem class.
        /// </summary>
        static CreateVideoReviewsBodyItem()
        {
            Type = "Video";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets optional metadata details.
        /// </summary>
        [JsonProperty(PropertyName = "VideoFrames")]
        public IList<CreateVideoReviewsBodyItemVideoFramesItem> VideoFrames { get; set; }

        /// <summary>
        /// Gets or sets optional metadata details.
        /// </summary>
        [JsonProperty(PropertyName = "Metadata")]
        public IList<CreateVideoReviewsBodyItemMetadataItem> Metadata { get; set; }

        /// <summary>
        /// Gets or sets video content url to review.
        /// </summary>
        [JsonProperty(PropertyName = "Content")]
        public string Content { get; set; }

        /// <summary>
        /// Gets or sets content Identifier.
        /// </summary>
        [JsonProperty(PropertyName = "ContentId")]
        public string ContentId { get; set; }

        /// <summary>
        /// Gets or sets status of the video(Complete,Unpublished,Pending).
        /// Possible values include: 'Complete', 'Unpublished', 'Pending'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets timescale of the video.
        /// </summary>
        [JsonProperty(PropertyName = "Timescale")]
        public int? Timescale { get; set; }

        /// <summary>
        /// Gets or sets optional CallbackEndpoint.
        /// </summary>
        [JsonProperty(PropertyName = "CallbackEndpoint")]
        public string CallbackEndpoint { get; set; }

        /// <summary>
        /// Type of the content.
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public static string Type { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Content == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Content");
            }
            if (ContentId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContentId");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (VideoFrames != null)
            {
                foreach (var element in VideoFrames)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Metadata != null)
            {
                foreach (var element1 in Metadata)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
