// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.TextAnalytics.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LanguageBatchResult
    {
        /// <summary>
        /// Initializes a new instance of the LanguageBatchResult class.
        /// </summary>
        public LanguageBatchResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LanguageBatchResult class.
        /// </summary>
        /// <param name="documents">Response by document</param>
        /// <param name="errors">Errors and Warnings by document</param>
        /// <param name="statistics">(Optional) if showStats=true was specified
        /// in the request this field will contain information about the
        /// request payload.</param>
        public LanguageBatchResult(IList<LanguageBatchResultItem> documents = default(IList<LanguageBatchResultItem>), IList<ErrorRecord> errors = default(IList<ErrorRecord>), RequestStatistics statistics = default(RequestStatistics))
        {
            Documents = documents;
            Errors = errors;
            Statistics = statistics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets response by document
        /// </summary>
        [JsonProperty(PropertyName = "documents")]
        public IList<LanguageBatchResultItem> Documents { get; private set; }

        /// <summary>
        /// Gets errors and Warnings by document
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<ErrorRecord> Errors { get; private set; }

        /// <summary>
        /// Gets (Optional) if showStats=true was specified in the request this
        /// field will contain information about the request payload.
        /// </summary>
        [JsonProperty(PropertyName = "statistics")]
        public RequestStatistics Statistics { get; private set; }

    }
}
