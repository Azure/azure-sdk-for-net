// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents an intent prediction.
    /// </summary>
    public partial class Intent
    {
        /// <summary>
        /// Initializes a new instance of the Intent class.
        /// </summary>
        public Intent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Intent class.
        /// </summary>
        /// <param name="score">The score of the fired intent.</param>
        /// <param name="childApp">The prediction of the dispatched
        /// application.</param>
        public Intent(double? score = default(double?), Prediction childApp = default(Prediction))
        {
            Score = score;
            ChildApp = childApp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the score of the fired intent.
        /// </summary>
        [JsonProperty(PropertyName = "score")]
        public double? Score { get; set; }

        /// <summary>
        /// Gets or sets the prediction of the dispatched application.
        /// </summary>
        [JsonProperty(PropertyName = "childApp")]
        public Prediction ChildApp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ChildApp != null)
            {
                ChildApp.Validate();
            }
        }
    }
}
