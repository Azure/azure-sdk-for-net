// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.Face.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A collection of 27-point face landmarks pointing to the important
    /// positions of face components.
    /// </summary>
    public partial class FaceLandmarks
    {
        /// <summary>
        /// Initializes a new instance of the FaceLandmarks class.
        /// </summary>
        public FaceLandmarks()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FaceLandmarks class.
        /// </summary>
        public FaceLandmarks(Coordinate pupilLeft = default(Coordinate), Coordinate pupilRight = default(Coordinate), Coordinate noseTip = default(Coordinate), Coordinate mouthLeft = default(Coordinate), Coordinate mouthRight = default(Coordinate), Coordinate eyebrowLeftOuter = default(Coordinate), Coordinate eyebrowLeftInner = default(Coordinate), Coordinate eyeLeftOuter = default(Coordinate), Coordinate eyeLeftTop = default(Coordinate), Coordinate eyeLeftBottom = default(Coordinate), Coordinate eyeLeftInner = default(Coordinate), Coordinate eyebrowRightInner = default(Coordinate), Coordinate eyebrowRightOuter = default(Coordinate), Coordinate eyeRightInner = default(Coordinate), Coordinate eyeRightTop = default(Coordinate), Coordinate eyeRightBottom = default(Coordinate), Coordinate eyeRightOuter = default(Coordinate), Coordinate noseRootLeft = default(Coordinate), Coordinate noseRootRight = default(Coordinate), Coordinate noseLeftAlarTop = default(Coordinate), Coordinate noseRightAlarTop = default(Coordinate), Coordinate noseLeftAlarOutTip = default(Coordinate), Coordinate noseRightAlarOutTip = default(Coordinate), Coordinate upperLipTop = default(Coordinate), Coordinate upperLipBottom = default(Coordinate), Coordinate underLipTop = default(Coordinate), Coordinate underLipBottom = default(Coordinate))
        {
            PupilLeft = pupilLeft;
            PupilRight = pupilRight;
            NoseTip = noseTip;
            MouthLeft = mouthLeft;
            MouthRight = mouthRight;
            EyebrowLeftOuter = eyebrowLeftOuter;
            EyebrowLeftInner = eyebrowLeftInner;
            EyeLeftOuter = eyeLeftOuter;
            EyeLeftTop = eyeLeftTop;
            EyeLeftBottom = eyeLeftBottom;
            EyeLeftInner = eyeLeftInner;
            EyebrowRightInner = eyebrowRightInner;
            EyebrowRightOuter = eyebrowRightOuter;
            EyeRightInner = eyeRightInner;
            EyeRightTop = eyeRightTop;
            EyeRightBottom = eyeRightBottom;
            EyeRightOuter = eyeRightOuter;
            NoseRootLeft = noseRootLeft;
            NoseRootRight = noseRootRight;
            NoseLeftAlarTop = noseLeftAlarTop;
            NoseRightAlarTop = noseRightAlarTop;
            NoseLeftAlarOutTip = noseLeftAlarOutTip;
            NoseRightAlarOutTip = noseRightAlarOutTip;
            UpperLipTop = upperLipTop;
            UpperLipBottom = upperLipBottom;
            UnderLipTop = underLipTop;
            UnderLipBottom = underLipBottom;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pupilLeft")]
        public Coordinate PupilLeft { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pupilRight")]
        public Coordinate PupilRight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseTip")]
        public Coordinate NoseTip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mouthLeft")]
        public Coordinate MouthLeft { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mouthRight")]
        public Coordinate MouthRight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyebrowLeftOuter")]
        public Coordinate EyebrowLeftOuter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyebrowLeftInner")]
        public Coordinate EyebrowLeftInner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeLeftOuter")]
        public Coordinate EyeLeftOuter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeLeftTop")]
        public Coordinate EyeLeftTop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeLeftBottom")]
        public Coordinate EyeLeftBottom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeLeftInner")]
        public Coordinate EyeLeftInner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyebrowRightInner")]
        public Coordinate EyebrowRightInner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyebrowRightOuter")]
        public Coordinate EyebrowRightOuter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeRightInner")]
        public Coordinate EyeRightInner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeRightTop")]
        public Coordinate EyeRightTop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeRightBottom")]
        public Coordinate EyeRightBottom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eyeRightOuter")]
        public Coordinate EyeRightOuter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseRootLeft")]
        public Coordinate NoseRootLeft { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseRootRight")]
        public Coordinate NoseRootRight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseLeftAlarTop")]
        public Coordinate NoseLeftAlarTop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseRightAlarTop")]
        public Coordinate NoseRightAlarTop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseLeftAlarOutTip")]
        public Coordinate NoseLeftAlarOutTip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noseRightAlarOutTip")]
        public Coordinate NoseRightAlarOutTip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "upperLipTop")]
        public Coordinate UpperLipTop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "upperLipBottom")]
        public Coordinate UpperLipBottom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "underLipTop")]
        public Coordinate UnderLipTop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "underLipBottom")]
        public Coordinate UnderLipBottom { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PupilLeft != null)
            {
                PupilLeft.Validate();
            }
            if (PupilRight != null)
            {
                PupilRight.Validate();
            }
            if (NoseTip != null)
            {
                NoseTip.Validate();
            }
            if (MouthLeft != null)
            {
                MouthLeft.Validate();
            }
            if (MouthRight != null)
            {
                MouthRight.Validate();
            }
            if (EyebrowLeftOuter != null)
            {
                EyebrowLeftOuter.Validate();
            }
            if (EyebrowLeftInner != null)
            {
                EyebrowLeftInner.Validate();
            }
            if (EyeLeftOuter != null)
            {
                EyeLeftOuter.Validate();
            }
            if (EyeLeftTop != null)
            {
                EyeLeftTop.Validate();
            }
            if (EyeLeftBottom != null)
            {
                EyeLeftBottom.Validate();
            }
            if (EyeLeftInner != null)
            {
                EyeLeftInner.Validate();
            }
            if (EyebrowRightInner != null)
            {
                EyebrowRightInner.Validate();
            }
            if (EyebrowRightOuter != null)
            {
                EyebrowRightOuter.Validate();
            }
            if (EyeRightInner != null)
            {
                EyeRightInner.Validate();
            }
            if (EyeRightTop != null)
            {
                EyeRightTop.Validate();
            }
            if (EyeRightBottom != null)
            {
                EyeRightBottom.Validate();
            }
            if (EyeRightOuter != null)
            {
                EyeRightOuter.Validate();
            }
            if (NoseRootLeft != null)
            {
                NoseRootLeft.Validate();
            }
            if (NoseRootRight != null)
            {
                NoseRootRight.Validate();
            }
            if (NoseLeftAlarTop != null)
            {
                NoseLeftAlarTop.Validate();
            }
            if (NoseRightAlarTop != null)
            {
                NoseRightAlarTop.Validate();
            }
            if (NoseLeftAlarOutTip != null)
            {
                NoseLeftAlarOutTip.Validate();
            }
            if (NoseRightAlarOutTip != null)
            {
                NoseRightAlarOutTip.Validate();
            }
            if (UpperLipTop != null)
            {
                UpperLipTop.Validate();
            }
            if (UpperLipBottom != null)
            {
                UpperLipBottom.Validate();
            }
            if (UnderLipTop != null)
            {
                UnderLipTop.Validate();
            }
            if (UnderLipBottom != null)
            {
                UnderLipBottom.Validate();
            }
        }
    }
}
