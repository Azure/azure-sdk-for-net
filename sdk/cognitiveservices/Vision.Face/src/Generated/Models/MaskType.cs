// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.Face.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for MaskType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MaskType
    {
        [EnumMember(Value = "noMask")]
        NoMask,
        [EnumMember(Value = "faceMask")]
        FaceMask,
        [EnumMember(Value = "otherMaskOrOcclusion")]
        OtherMaskOrOcclusion,
        [EnumMember(Value = "uncertain")]
        Uncertain
    }
    internal static class MaskTypeEnumExtension
    {
        internal static string ToSerializedValue(this MaskType? value)
        {
            return value == null ? null : ((MaskType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this MaskType value)
        {
            switch( value )
            {
                case MaskType.NoMask:
                    return "noMask";
                case MaskType.FaceMask:
                    return "faceMask";
                case MaskType.OtherMaskOrOcclusion:
                    return "otherMaskOrOcclusion";
                case MaskType.Uncertain:
                    return "uncertain";
            }
            return null;
        }

        internal static MaskType? ParseMaskType(this string value)
        {
            switch( value )
            {
                case "noMask":
                    return MaskType.NoMask;
                case "faceMask":
                    return MaskType.FaceMask;
                case "otherMaskOrOcclusion":
                    return MaskType.OtherMaskOrOcclusion;
                case "uncertain":
                    return MaskType.Uncertain;
            }
            return null;
        }
    }
}
