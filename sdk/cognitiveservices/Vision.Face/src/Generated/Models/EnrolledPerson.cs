// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.Face.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EnrolledPerson
    {
        /// <summary>
        /// Initializes a new instance of the EnrolledPerson class.
        /// </summary>
        public EnrolledPerson()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnrolledPerson class.
        /// </summary>
        /// <param name="personId">Person id.</param>
        /// <param name="name">User defined name, maximum length is
        /// 128.</param>
        /// <param name="userData">User specified data. Length should not
        /// exceed 16KB.</param>
        public EnrolledPerson(System.Guid personId = default(System.Guid), string name = default(string), string userData = default(string))
        {
            PersonId = personId;
            Name = name;
            UserData = userData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets person id.
        /// </summary>
        [JsonProperty(PropertyName = "personId")]
        public System.Guid PersonId { get; set; }

        /// <summary>
        /// Gets or sets user defined name, maximum length is 128.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets user specified data. Length should not exceed 16KB.
        /// </summary>
        [JsonProperty(PropertyName = "userData")]
        public string UserData { get; set; }

    }
}
