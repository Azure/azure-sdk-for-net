// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CognitiveServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of Cognitive Services account.
    /// </summary>
    public partial class AccountProperties
    {
        /// <summary>
        /// Initializes a new instance of the AccountProperties class.
        /// </summary>
        public AccountProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountProperties class.
        /// </summary>
        /// <param name="provisioningState">Gets the status of the cognitive
        /// services account at the time the operation was called. Possible
        /// values include: 'Accepted', 'Creating', 'Deleting', 'Moving',
        /// 'Failed', 'Succeeded', 'ResolvingDNS'</param>
        /// <param name="endpoint">Endpoint of the created account.</param>
        /// <param name="internalId">The internal identifier (deprecated, do
        /// not use this property).</param>
        /// <param name="capabilities">Gets the capabilities of the cognitive
        /// services account. Each item indicates the capability of a specific
        /// feature. The values are read-only and for reference only.</param>
        /// <param name="isMigrated">If the resource is migrated from an
        /// existing key.</param>
        /// <param name="migrationToken">Resource migration token.</param>
        /// <param name="skuChangeInfo">Sku change info of account.</param>
        /// <param name="customSubDomainName">Optional subdomain name used for
        /// token-based authentication.</param>
        /// <param name="networkAcls">A collection of rules governing the
        /// accessibility from specific network locations.</param>
        /// <param name="encryption">The encryption properties for this
        /// resource.</param>
        /// <param name="userOwnedStorage">The storage accounts for this
        /// resource.</param>
        /// <param name="privateEndpointConnections">The private endpoint
        /// connection associated with the Cognitive Services account.</param>
        /// <param name="publicNetworkAccess">Whether or not public endpoint
        /// access is allowed for this account. Value is optional but if passed
        /// in, must be 'Enabled' or 'Disabled'. Possible values include:
        /// 'Enabled', 'Disabled'</param>
        /// <param name="apiProperties">The api properties for special
        /// APIs.</param>
        /// <param name="dateCreated">Gets the date of cognitive services
        /// account creation.</param>
        public AccountProperties(string provisioningState = default(string), string endpoint = default(string), string internalId = default(string), IList<SkuCapability> capabilities = default(IList<SkuCapability>), bool? isMigrated = default(bool?), string migrationToken = default(string), SkuChangeInfo skuChangeInfo = default(SkuChangeInfo), string customSubDomainName = default(string), NetworkRuleSet networkAcls = default(NetworkRuleSet), Encryption encryption = default(Encryption), IList<UserOwnedStorage> userOwnedStorage = default(IList<UserOwnedStorage>), IList<PrivateEndpointConnection> privateEndpointConnections = default(IList<PrivateEndpointConnection>), string publicNetworkAccess = default(string), ApiProperties apiProperties = default(ApiProperties), string dateCreated = default(string), CallRateLimit callRateLimit = default(CallRateLimit), QuotaLimit quotaLimit = default(QuotaLimit), bool? restrictOutboundNetworkAccess = default(bool?), IList<string> allowedFqdnList = default(IList<string>), bool? disableLocalAuth = default(bool?), IDictionary<string, string> endpoints = default(IDictionary<string, string>), bool? restore = default(bool?))
        {
            ProvisioningState = provisioningState;
            Endpoint = endpoint;
            InternalId = internalId;
            Capabilities = capabilities;
            IsMigrated = isMigrated;
            MigrationToken = migrationToken;
            SkuChangeInfo = skuChangeInfo;
            CustomSubDomainName = customSubDomainName;
            NetworkAcls = networkAcls;
            Encryption = encryption;
            UserOwnedStorage = userOwnedStorage;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            ApiProperties = apiProperties;
            DateCreated = dateCreated;
            CallRateLimit = callRateLimit;
            QuotaLimit = quotaLimit;
            RestrictOutboundNetworkAccess = restrictOutboundNetworkAccess;
            AllowedFqdnList = allowedFqdnList;
            DisableLocalAuth = disableLocalAuth;
            Endpoints = endpoints;
            Restore = restore;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the status of the cognitive services account at the time the
        /// operation was called. Possible values include: 'Accepted',
        /// 'Creating', 'Deleting', 'Moving', 'Failed', 'Succeeded',
        /// 'ResolvingDNS'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets endpoint of the created account.
        /// </summary>
        [JsonProperty(PropertyName = "endpoint")]
        public string Endpoint { get; private set; }

        /// <summary>
        /// Gets the internal identifier (deprecated, do not use this
        /// property).
        /// </summary>
        [JsonProperty(PropertyName = "internalId")]
        public string InternalId { get; private set; }

        /// <summary>
        /// Gets the capabilities of the cognitive services account. Each item
        /// indicates the capability of a specific feature. The values are
        /// read-only and for reference only.
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IList<SkuCapability> Capabilities { get; private set; }

        /// <summary>
        /// Gets if the resource is migrated from an existing key.
        /// </summary>
        [JsonProperty(PropertyName = "isMigrated")]
        public bool? IsMigrated { get; private set; }

        /// <summary>
        /// Gets or sets resource migration token.
        /// </summary>
        [JsonProperty(PropertyName = "migrationToken")]
        public string MigrationToken { get; set; }

        /// <summary>
        /// Gets sku change info of account.
        /// </summary>
        [JsonProperty(PropertyName = "skuChangeInfo")]
        public SkuChangeInfo SkuChangeInfo { get; private set; }

        /// <summary>
        /// Gets or sets optional subdomain name used for token-based
        /// authentication.
        /// </summary>
        [JsonProperty(PropertyName = "customSubDomainName")]
        public string CustomSubDomainName { get; set; }

        /// <summary>
        /// Gets or sets a collection of rules governing the accessibility from
        /// specific network locations.
        /// </summary>
        [JsonProperty(PropertyName = "networkAcls")]
        public NetworkRuleSet NetworkAcls { get; set; }

        /// <summary>
        /// Gets or sets the encryption properties for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "encryption")]
        public Encryption Encryption { get; set; }

        /// <summary>
        /// Gets or sets the storage accounts for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "userOwnedStorage")]
        public IList<UserOwnedStorage> UserOwnedStorage { get; set; }

        /// <summary>
        /// Gets the private endpoint connection associated with the Cognitive
        /// Services account.
        /// </summary>
        [JsonProperty(PropertyName = "privateEndpointConnections")]
        public IList<PrivateEndpointConnection> PrivateEndpointConnections { get; private set; }

        /// <summary>
        /// Gets or sets whether or not public endpoint access is allowed for
        /// this account. Value is optional but if passed in, must be 'Enabled'
        /// or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

        /// <summary>
        /// Gets or sets the api properties for special APIs.
        /// </summary>
        [JsonProperty(PropertyName = "apiProperties")]
        public ApiProperties ApiProperties { get; set; }

        /// <summary>
        /// Gets the date of cognitive services account creation.
        /// </summary>
        [JsonProperty(PropertyName = "dateCreated")]
        public string DateCreated { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "callRateLimit")]
        public CallRateLimit CallRateLimit { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quotaLimit")]
        public QuotaLimit QuotaLimit { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "restrictOutboundNetworkAccess")]
        public bool? RestrictOutboundNetworkAccess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowedFqdnList")]
        public IList<string> AllowedFqdnList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disableLocalAuth")]
        public bool? DisableLocalAuth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endpoints")]
        public IDictionary<string, string> Endpoints { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "restore")]
        public bool? Restore { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PrivateEndpointConnections != null)
            {
                foreach (var element in PrivateEndpointConnections)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (ApiProperties != null)
            {
                ApiProperties.Validate();
            }
        }
    }
}
