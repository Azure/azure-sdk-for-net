// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CognitiveServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Sku change info of account.
    /// </summary>
    public partial class SkuChangeInfo
    {
        /// <summary>
        /// Initializes a new instance of the SkuChangeInfo class.
        /// </summary>
        public SkuChangeInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkuChangeInfo class.
        /// </summary>
        /// <param name="countOfDowngrades">Gets the count of
        /// downgrades.</param>
        /// <param name="countOfUpgradesAfterDowngrades">Gets the count of
        /// upgrades after downgrades.</param>
        /// <param name="lastChangeDate">Gets the last change date.</param>
        public SkuChangeInfo(double? countOfDowngrades = default(double?), double? countOfUpgradesAfterDowngrades = default(double?), string lastChangeDate = default(string))
        {
            CountOfDowngrades = countOfDowngrades;
            CountOfUpgradesAfterDowngrades = countOfUpgradesAfterDowngrades;
            LastChangeDate = lastChangeDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the count of downgrades.
        /// </summary>
        [JsonProperty(PropertyName = "countOfDowngrades")]
        public double? CountOfDowngrades { get; set; }

        /// <summary>
        /// Gets the count of upgrades after downgrades.
        /// </summary>
        [JsonProperty(PropertyName = "countOfUpgradesAfterDowngrades")]
        public double? CountOfUpgradesAfterDowngrades { get; set; }

        /// <summary>
        /// Gets the last change date.
        /// </summary>
        [JsonProperty(PropertyName = "lastChangeDate")]
        public string LastChangeDate { get; set; }

    }
}
