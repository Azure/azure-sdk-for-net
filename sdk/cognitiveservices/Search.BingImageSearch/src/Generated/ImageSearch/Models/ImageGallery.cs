// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines a link to a webpage that contains a collection of related
    /// images.
    /// </summary>
    public partial class ImageGallery : CollectionPage
    {
        /// <summary>
        /// Initializes a new instance of the ImageGallery class.
        /// </summary>
        public ImageGallery()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageGallery class.
        /// </summary>
        /// <param name="id">A String identifier.</param>
        /// <param name="readLink">The URL that returns this resource.</param>
        /// <param name="webSearchUrl">The URL To Bing's search result for this
        /// item.</param>
        /// <param name="name">The name of the thing represented by this
        /// object.</param>
        /// <param name="url">The URL to get more information about the thing
        /// represented by this object.</param>
        /// <param name="image">An image of the item.</param>
        /// <param name="description">A short description of the item.</param>
        /// <param name="alternateName">An alias for the item</param>
        /// <param name="bingId">An ID that uniquely identifies this
        /// item.</param>
        /// <param name="thumbnailUrl">The URL to a thumbnail of the
        /// item.</param>
        /// <param name="provider">The source of the creative work.</param>
        /// <param name="datePublished">The date on which the CreativeWork was
        /// published.</param>
        /// <param name="text">Text content of this creative work</param>
        /// <param name="source">The publisher or social network where the
        /// images were found. You must attribute the publisher as the source
        /// where the collection was found.</param>
        /// <param name="imagesCount">The number of related images found in the
        /// collection.</param>
        /// <param name="followersCount">The number of users on the social
        /// network that follow the creator.</param>
        public ImageGallery(string id = default(string), string readLink = default(string), string webSearchUrl = default(string), string name = default(string), string url = default(string), ImageObject image = default(ImageObject), string description = default(string), string alternateName = default(string), string bingId = default(string), string thumbnailUrl = default(string), IList<Thing> provider = default(IList<Thing>), string datePublished = default(string), string text = default(string), string source = default(string), long? imagesCount = default(long?), long? followersCount = default(long?))
            : base(id, readLink, webSearchUrl, name, url, image, description, alternateName, bingId, thumbnailUrl, provider, datePublished, text)
        {
            Source = source;
            ImagesCount = imagesCount;
            FollowersCount = followersCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the publisher or social network where the images were found.
        /// You must attribute the publisher as the source where the collection
        /// was found.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; private set; }

        /// <summary>
        /// Gets the number of related images found in the collection.
        /// </summary>
        [JsonProperty(PropertyName = "imagesCount")]
        public long? ImagesCount { get; private set; }

        /// <summary>
        /// Gets the number of users on the social network that follow the
        /// creator.
        /// </summary>
        [JsonProperty(PropertyName = "followersCount")]
        public long? FollowersCount { get; private set; }

    }
}
