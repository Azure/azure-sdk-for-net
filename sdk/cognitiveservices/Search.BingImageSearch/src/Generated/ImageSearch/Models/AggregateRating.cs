// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the metrics that indicate how well an item was rated by others.
    /// </summary>
    public partial class AggregateRating : Rating
    {
        /// <summary>
        /// Initializes a new instance of the AggregateRating class.
        /// </summary>
        public AggregateRating()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AggregateRating class.
        /// </summary>
        /// <param name="ratingValue">The mean (average) rating. The possible
        /// values are 1.0 through 5.0.</param>
        /// <param name="text">Text representation of an item.</param>
        /// <param name="bestRating">The highest rated review. The possible
        /// values are 1.0 through 5.0.</param>
        /// <param name="reviewCount">The number of times the recipe has been
        /// rated or reviewed.</param>
        public AggregateRating(double ratingValue, string text = default(string), double? bestRating = default(double?), int? reviewCount = default(int?))
            : base(ratingValue, text, bestRating)
        {
            ReviewCount = reviewCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the number of times the recipe has been rated or reviewed.
        /// </summary>
        [JsonProperty(PropertyName = "reviewCount")]
        public int? ReviewCount { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
