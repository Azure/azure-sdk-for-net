// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Domain
    {
        /// <summary>
        /// Initializes a new instance of the Domain class.
        /// </summary>
        public Domain()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Domain class.
        /// </summary>
        /// <param name="type">Possible values include: 'Classification',
        /// 'ObjectDetection'</param>
        public Domain(System.Guid id = default(System.Guid), string name = default(string), string type = default(string), bool exportable = default(bool), bool enabled = default(bool))
        {
            Id = id;
            Name = name;
            Type = type;
            Exportable = exportable;
            Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Classification', 'ObjectDetection'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exportable")]
        public bool Exportable { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; private set; }

    }
}
