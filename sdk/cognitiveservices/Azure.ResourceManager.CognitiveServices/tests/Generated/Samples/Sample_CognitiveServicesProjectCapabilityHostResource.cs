// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.CognitiveServices.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.CognitiveServices.Samples
{
    public partial class Sample_CognitiveServicesProjectCapabilityHostResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetProjectCapabilityHost()
        {
            // Generated from example definition: specification/cognitiveservices/resource-manager/Microsoft.CognitiveServices/preview/2025-04-01-preview/examples/ProjectCapabilityHost/get.json
            // this example is just showing the usage of "ProjectCapabilityHosts_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CognitiveServicesProjectCapabilityHostResource created on azure
            // for more information of creating CognitiveServicesProjectCapabilityHostResource, please refer to the document of CognitiveServicesProjectCapabilityHostResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string accountName = "account-1";
            string projectName = "project-1";
            string capabilityHostName = "capabilityHostName";
            ResourceIdentifier cognitiveServicesProjectCapabilityHostResourceId = CognitiveServicesProjectCapabilityHostResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, projectName, capabilityHostName);
            CognitiveServicesProjectCapabilityHostResource cognitiveServicesProjectCapabilityHost = client.GetCognitiveServicesProjectCapabilityHostResource(cognitiveServicesProjectCapabilityHostResourceId);

            // invoke the operation
            CognitiveServicesProjectCapabilityHostResource result = await cognitiveServicesProjectCapabilityHost.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CognitiveServicesCapabilityHostData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteProjectCapabilityHost()
        {
            // Generated from example definition: specification/cognitiveservices/resource-manager/Microsoft.CognitiveServices/preview/2025-04-01-preview/examples/ProjectCapabilityHost/delete.json
            // this example is just showing the usage of "ProjectCapabilityHosts_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CognitiveServicesProjectCapabilityHostResource created on azure
            // for more information of creating CognitiveServicesProjectCapabilityHostResource, please refer to the document of CognitiveServicesProjectCapabilityHostResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string accountName = "account-1";
            string projectName = "project-1";
            string capabilityHostName = "capabilityHostName";
            ResourceIdentifier cognitiveServicesProjectCapabilityHostResourceId = CognitiveServicesProjectCapabilityHostResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, projectName, capabilityHostName);
            CognitiveServicesProjectCapabilityHostResource cognitiveServicesProjectCapabilityHost = client.GetCognitiveServicesProjectCapabilityHostResource(cognitiveServicesProjectCapabilityHostResourceId);

            // invoke the operation
            await cognitiveServicesProjectCapabilityHost.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_CreateOrUpdateProjectCapabilityHost()
        {
            // Generated from example definition: specification/cognitiveservices/resource-manager/Microsoft.CognitiveServices/preview/2025-04-01-preview/examples/ProjectCapabilityHost/createOrUpdate.json
            // this example is just showing the usage of "ProjectCapabilityHosts_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CognitiveServicesProjectCapabilityHostResource created on azure
            // for more information of creating CognitiveServicesProjectCapabilityHostResource, please refer to the document of CognitiveServicesProjectCapabilityHostResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string accountName = "account-1";
            string projectName = "project-1";
            string capabilityHostName = "capabilityHostName";
            ResourceIdentifier cognitiveServicesProjectCapabilityHostResourceId = CognitiveServicesProjectCapabilityHostResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accountName, projectName, capabilityHostName);
            CognitiveServicesProjectCapabilityHostResource cognitiveServicesProjectCapabilityHost = client.GetCognitiveServicesProjectCapabilityHostResource(cognitiveServicesProjectCapabilityHostResourceId);

            // invoke the operation
            CognitiveServicesCapabilityHostData data = new CognitiveServicesCapabilityHostData(new CognitiveServicesCapabilityHostProperties
            {
                CustomerSubnet = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myResourceGroups/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet",
            });
            ArmOperation<CognitiveServicesProjectCapabilityHostResource> lro = await cognitiveServicesProjectCapabilityHost.UpdateAsync(WaitUntil.Completed, data);
            CognitiveServicesProjectCapabilityHostResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CognitiveServicesCapabilityHostData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
