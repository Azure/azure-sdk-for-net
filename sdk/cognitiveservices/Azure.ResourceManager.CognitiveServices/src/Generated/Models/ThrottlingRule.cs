// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    /// <summary> The ThrottlingRule. </summary>
    public partial class ThrottlingRule
    {
        /// <summary> Initializes a new instance of ThrottlingRule. </summary>
        internal ThrottlingRule()
        {
            MatchPatterns = new ChangeTrackingList<RequestMatchPattern>();
        }

        /// <summary> Initializes a new instance of ThrottlingRule. </summary>
        /// <param name="key"></param>
        /// <param name="renewalPeriod"></param>
        /// <param name="count"></param>
        /// <param name="minCount"></param>
        /// <param name="dynamicThrottlingEnabled"></param>
        /// <param name="matchPatterns"></param>
        internal ThrottlingRule(string key, float? renewalPeriod, float? count, float? minCount, bool? dynamicThrottlingEnabled, IReadOnlyList<RequestMatchPattern> matchPatterns)
        {
            Key = key;
            RenewalPeriod = renewalPeriod;
            Count = count;
            MinCount = minCount;
            DynamicThrottlingEnabled = dynamicThrottlingEnabled;
            MatchPatterns = matchPatterns;
        }

        /// <summary> Gets the key. </summary>
        public string Key { get; }
        /// <summary> Gets the renewal period. </summary>
        public float? RenewalPeriod { get; }
        /// <summary> Gets the count. </summary>
        public float? Count { get; }
        /// <summary> Gets the min count. </summary>
        public float? MinCount { get; }
        /// <summary> Gets the dynamic throttling enabled. </summary>
        public bool? DynamicThrottlingEnabled { get; }
        /// <summary> Gets the match patterns. </summary>
        public IReadOnlyList<RequestMatchPattern> MatchPatterns { get; }
    }
}
