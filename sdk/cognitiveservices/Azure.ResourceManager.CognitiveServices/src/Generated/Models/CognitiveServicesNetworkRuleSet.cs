// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    /// <summary> A set of rules governing the network accessibility. </summary>
    public partial class CognitiveServicesNetworkRuleSet
    {
        /// <summary> Initializes a new instance of <see cref="CognitiveServicesNetworkRuleSet"/>. </summary>
        public CognitiveServicesNetworkRuleSet()
        {
            IPRules = new ChangeTrackingList<CognitiveServicesIPRule>();
            VirtualNetworkRules = new ChangeTrackingList<CognitiveServicesVirtualNetworkRule>();
        }

        /// <summary> Initializes a new instance of <see cref="CognitiveServicesNetworkRuleSet"/>. </summary>
        /// <param name="defaultAction"> The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated. </param>
        /// <param name="ipRules"> The list of IP address rules. </param>
        /// <param name="virtualNetworkRules"> The list of virtual network rules. </param>
        internal CognitiveServicesNetworkRuleSet(CognitiveServicesNetworkRuleAction? defaultAction, IList<CognitiveServicesIPRule> ipRules, IList<CognitiveServicesVirtualNetworkRule> virtualNetworkRules)
        {
            DefaultAction = defaultAction;
            IPRules = ipRules;
            VirtualNetworkRules = virtualNetworkRules;
        }

        /// <summary> The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated. </summary>
        public CognitiveServicesNetworkRuleAction? DefaultAction { get; set; }
        /// <summary> The list of IP address rules. </summary>
        public IList<CognitiveServicesIPRule> IPRules { get; }
        /// <summary> The list of virtual network rules. </summary>
        public IList<CognitiveServicesVirtualNetworkRule> VirtualNetworkRules { get; }
    }
}
