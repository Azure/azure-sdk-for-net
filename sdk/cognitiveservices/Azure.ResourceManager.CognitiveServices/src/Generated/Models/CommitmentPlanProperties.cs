// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    /// <summary> Properties of Cognitive Services account commitment plan. </summary>
    public partial class CommitmentPlanProperties
    {
        /// <summary> Initializes a new instance of <see cref="CommitmentPlanProperties"/>. </summary>
        public CommitmentPlanProperties()
        {
            ProvisioningIssues = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="CommitmentPlanProperties"/>. </summary>
        /// <param name="provisioningState"> Gets the status of the resource at the time the operation was called. </param>
        /// <param name="commitmentPlanGuid"> Commitment plan guid. </param>
        /// <param name="hostingModel"> Account hosting model. </param>
        /// <param name="planType"> Commitment plan type. </param>
        /// <param name="current"> Cognitive Services account commitment period. </param>
        /// <param name="autoRenew"> AutoRenew commitment plan. </param>
        /// <param name="next"> Cognitive Services account commitment period. </param>
        /// <param name="last"> Cognitive Services account commitment period. </param>
        /// <param name="provisioningIssues"> The list of ProvisioningIssue. </param>
        internal CommitmentPlanProperties(CommitmentPlanProvisioningState? provisioningState, Guid? commitmentPlanGuid, ServiceAccountHostingModel? hostingModel, string planType, CommitmentPeriod current, bool? autoRenew, CommitmentPeriod next, CommitmentPeriod last, IReadOnlyList<string> provisioningIssues)
        {
            ProvisioningState = provisioningState;
            CommitmentPlanGuid = commitmentPlanGuid;
            HostingModel = hostingModel;
            PlanType = planType;
            Current = current;
            AutoRenew = autoRenew;
            Next = next;
            Last = last;
            ProvisioningIssues = provisioningIssues;
        }

        /// <summary> Gets the status of the resource at the time the operation was called. </summary>
        public CommitmentPlanProvisioningState? ProvisioningState { get; }
        /// <summary> Commitment plan guid. </summary>
        public Guid? CommitmentPlanGuid { get; set; }
        /// <summary> Account hosting model. </summary>
        public ServiceAccountHostingModel? HostingModel { get; set; }
        /// <summary> Commitment plan type. </summary>
        public string PlanType { get; set; }
        /// <summary> Cognitive Services account commitment period. </summary>
        public CommitmentPeriod Current { get; set; }
        /// <summary> AutoRenew commitment plan. </summary>
        public bool? AutoRenew { get; set; }
        /// <summary> Cognitive Services account commitment period. </summary>
        public CommitmentPeriod Next { get; set; }
        /// <summary> Cognitive Services account commitment period. </summary>
        public CommitmentPeriod Last { get; }
        /// <summary> The list of ProvisioningIssue. </summary>
        public IReadOnlyList<string> ProvisioningIssues { get; }
    }
}
