// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    /// <summary> The properties of an NSP Configuration. </summary>
    public partial class NetworkSecurityPerimeterConfigurationProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NetworkSecurityPerimeterConfigurationProperties"/>. </summary>
        public NetworkSecurityPerimeterConfigurationProperties()
        {
            ProvisioningIssues = new ChangeTrackingList<ProvisioningIssue>();
        }

        /// <summary> Initializes a new instance of <see cref="NetworkSecurityPerimeterConfigurationProperties"/>. </summary>
        /// <param name="provisioningState"> Provisioning state of NetworkSecurityPerimeter configuration. </param>
        /// <param name="provisioningIssues"> List of Provisioning Issues. </param>
        /// <param name="networkSecurityPerimeter"> Information about a linked Network Security Perimeter. </param>
        /// <param name="resourceAssociation"> Network Security Perimeter Configuration Association Information. </param>
        /// <param name="profile"> Network Security Perimeter Profile Information. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NetworkSecurityPerimeterConfigurationProperties(string provisioningState, IList<ProvisioningIssue> provisioningIssues, NetworkSecurityPerimeter networkSecurityPerimeter, NetworkSecurityPerimeterConfigurationAssociationInfo resourceAssociation, NetworkSecurityPerimeterProfileInfo profile, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            ProvisioningIssues = provisioningIssues;
            NetworkSecurityPerimeter = networkSecurityPerimeter;
            ResourceAssociation = resourceAssociation;
            Profile = profile;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Provisioning state of NetworkSecurityPerimeter configuration. </summary>
        [WirePath("provisioningState")]
        public string ProvisioningState { get; }
        /// <summary> List of Provisioning Issues. </summary>
        [WirePath("provisioningIssues")]
        public IList<ProvisioningIssue> ProvisioningIssues { get; }
        /// <summary> Information about a linked Network Security Perimeter. </summary>
        [WirePath("networkSecurityPerimeter")]
        public NetworkSecurityPerimeter NetworkSecurityPerimeter { get; set; }
        /// <summary> Network Security Perimeter Configuration Association Information. </summary>
        [WirePath("resourceAssociation")]
        public NetworkSecurityPerimeterConfigurationAssociationInfo ResourceAssociation { get; set; }
        /// <summary> Network Security Perimeter Profile Information. </summary>
        [WirePath("profile")]
        public NetworkSecurityPerimeterProfileInfo Profile { get; set; }
    }
}
