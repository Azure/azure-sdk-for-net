// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.CognitiveServices;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    /// <summary> Properties of Cognitive Services account. </summary>
    public partial class AccountProperties
    {
        /// <summary> Initializes a new instance of AccountProperties. </summary>
        public AccountProperties()
        {
            Capabilities = new ChangeTrackingList<SkuCapability>();
            UserOwnedStorage = new ChangeTrackingList<UserOwnedStorage>();
            PrivateEndpointConnections = new ChangeTrackingList<CognitiveServicesPrivateEndpointConnectionData>();
            AllowedFqdnList = new ChangeTrackingList<string>();
            Endpoints = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of AccountProperties. </summary>
        /// <param name="provisioningState"> Gets the status of the cognitive services account at the time the operation was called. </param>
        /// <param name="endpoint"> Endpoint of the created account. </param>
        /// <param name="internalId"> The internal identifier (deprecated, do not use this property). </param>
        /// <param name="capabilities"> Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only. </param>
        /// <param name="isMigrated"> If the resource is migrated from an existing key. </param>
        /// <param name="migrationToken"> Resource migration token. </param>
        /// <param name="skuChangeInfo"> Sku change info of account. </param>
        /// <param name="customSubDomainName"> Optional subdomain name used for token-based authentication. </param>
        /// <param name="networkAcls"> A collection of rules governing the accessibility from specific network locations. </param>
        /// <param name="encryption"> The encryption properties for this resource. </param>
        /// <param name="userOwnedStorage"> The storage accounts for this resource. </param>
        /// <param name="privateEndpointConnections"> The private endpoint connection associated with the Cognitive Services account. </param>
        /// <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this account. </param>
        /// <param name="apiProperties"> The api properties for special APIs. </param>
        /// <param name="dateCreated"> Gets the date of cognitive services account creation. </param>
        /// <param name="callRateLimit"> The call rate limit Cognitive Services account. </param>
        /// <param name="dynamicThrottlingEnabled"> The flag to enable dynamic throttling. </param>
        /// <param name="quotaLimit"></param>
        /// <param name="restrictOutboundNetworkAccess"></param>
        /// <param name="allowedFqdnList"></param>
        /// <param name="disableLocalAuth"></param>
        /// <param name="endpoints"> Dictionary of &lt;string&gt;. </param>
        /// <param name="restore"></param>
        /// <param name="deletionDate"> The deletion date, only available for deleted account. </param>
        /// <param name="scheduledPurgeDate"> The scheduled purge date, only available for deleted account. </param>
        internal AccountProperties(ProvisioningState? provisioningState, string endpoint, string internalId, IReadOnlyList<SkuCapability> capabilities, bool? isMigrated, string migrationToken, SkuChangeInfo skuChangeInfo, string customSubDomainName, NetworkRuleSet networkAcls, Encryption encryption, IList<UserOwnedStorage> userOwnedStorage, IReadOnlyList<CognitiveServicesPrivateEndpointConnectionData> privateEndpointConnections, PublicNetworkAccess? publicNetworkAccess, ApiProperties apiProperties, string dateCreated, CallRateLimit callRateLimit, bool? dynamicThrottlingEnabled, QuotaLimit quotaLimit, bool? restrictOutboundNetworkAccess, IList<string> allowedFqdnList, bool? disableLocalAuth, IReadOnlyDictionary<string, string> endpoints, bool? restore, string deletionDate, string scheduledPurgeDate)
        {
            ProvisioningState = provisioningState;
            Endpoint = endpoint;
            InternalId = internalId;
            Capabilities = capabilities;
            IsMigrated = isMigrated;
            MigrationToken = migrationToken;
            SkuChangeInfo = skuChangeInfo;
            CustomSubDomainName = customSubDomainName;
            NetworkAcls = networkAcls;
            Encryption = encryption;
            UserOwnedStorage = userOwnedStorage;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            ApiProperties = apiProperties;
            DateCreated = dateCreated;
            CallRateLimit = callRateLimit;
            DynamicThrottlingEnabled = dynamicThrottlingEnabled;
            QuotaLimit = quotaLimit;
            RestrictOutboundNetworkAccess = restrictOutboundNetworkAccess;
            AllowedFqdnList = allowedFqdnList;
            DisableLocalAuth = disableLocalAuth;
            Endpoints = endpoints;
            Restore = restore;
            DeletionDate = deletionDate;
            ScheduledPurgeDate = scheduledPurgeDate;
        }

        /// <summary> Gets the status of the cognitive services account at the time the operation was called. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Endpoint of the created account. </summary>
        public string Endpoint { get; }
        /// <summary> The internal identifier (deprecated, do not use this property). </summary>
        public string InternalId { get; }
        /// <summary> Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only. </summary>
        public IReadOnlyList<SkuCapability> Capabilities { get; }
        /// <summary> If the resource is migrated from an existing key. </summary>
        public bool? IsMigrated { get; }
        /// <summary> Resource migration token. </summary>
        public string MigrationToken { get; set; }
        /// <summary> Sku change info of account. </summary>
        public SkuChangeInfo SkuChangeInfo { get; }
        /// <summary> Optional subdomain name used for token-based authentication. </summary>
        public string CustomSubDomainName { get; set; }
        /// <summary> A collection of rules governing the accessibility from specific network locations. </summary>
        public NetworkRuleSet NetworkAcls { get; set; }
        /// <summary> The encryption properties for this resource. </summary>
        public Encryption Encryption { get; set; }
        /// <summary> The storage accounts for this resource. </summary>
        public IList<UserOwnedStorage> UserOwnedStorage { get; }
        /// <summary> The private endpoint connection associated with the Cognitive Services account. </summary>
        public IReadOnlyList<CognitiveServicesPrivateEndpointConnectionData> PrivateEndpointConnections { get; }
        /// <summary> Whether or not public endpoint access is allowed for this account. </summary>
        public PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary> The api properties for special APIs. </summary>
        public ApiProperties ApiProperties { get; set; }
        /// <summary> Gets the date of cognitive services account creation. </summary>
        public string DateCreated { get; }
        /// <summary> The call rate limit Cognitive Services account. </summary>
        public CallRateLimit CallRateLimit { get; }
        /// <summary> The flag to enable dynamic throttling. </summary>
        public bool? DynamicThrottlingEnabled { get; set; }
        /// <summary> Gets the quota limit. </summary>
        public QuotaLimit QuotaLimit { get; }
        /// <summary> Gets or sets the restrict outbound network access. </summary>
        public bool? RestrictOutboundNetworkAccess { get; set; }
        /// <summary> Gets the allowed fqdn list. </summary>
        public IList<string> AllowedFqdnList { get; }
        /// <summary> Gets or sets the disable local auth. </summary>
        public bool? DisableLocalAuth { get; set; }
        /// <summary> Dictionary of &lt;string&gt;. </summary>
        public IReadOnlyDictionary<string, string> Endpoints { get; }
        /// <summary> Gets or sets the restore. </summary>
        public bool? Restore { get; set; }
        /// <summary> The deletion date, only available for deleted account. </summary>
        public string DeletionDate { get; }
        /// <summary> The scheduled purge date, only available for deleted account. </summary>
        public string ScheduledPurgeDate { get; }
    }
}
