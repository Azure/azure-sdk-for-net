// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    /// <summary> Gets or sets the source to which filter applies. </summary>
    public partial class CustomBlocklistConfig : RaiBlocklistConfig
    {
        /// <summary> Initializes a new instance of <see cref="CustomBlocklistConfig"/>. </summary>
        public CustomBlocklistConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CustomBlocklistConfig"/>. </summary>
        /// <param name="blocklistName"> Name of ContentFilter. </param>
        /// <param name="blocking"> If blocking would occur. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="source"> Content source to apply the Content Filters. </param>
        internal CustomBlocklistConfig(string blocklistName, bool? blocking, IDictionary<string, BinaryData> serializedAdditionalRawData, RaiPolicyContentSource? source) : base(blocklistName, blocking, serializedAdditionalRawData)
        {
            Source = source;
        }

        /// <summary> Content source to apply the Content Filters. </summary>
        [WirePath("source")]
        public RaiPolicyContentSource? Source { get; set; }
    }
}
