// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    public partial class CognitiveServicesSkuChangeInfo
    {
        internal static CognitiveServicesSkuChangeInfo DeserializeCognitiveServicesSkuChangeInfo(JsonElement element)
        {
            Optional<float> countOfDowngrades = default;
            Optional<float> countOfUpgradesAfterDowngrades = default;
            Optional<DateTimeOffset> lastChangeDate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("countOfDowngrades"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    countOfDowngrades = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("countOfUpgradesAfterDowngrades"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    countOfUpgradesAfterDowngrades = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("lastChangeDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastChangeDate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new CognitiveServicesSkuChangeInfo(Optional.ToNullable(countOfDowngrades), Optional.ToNullable(countOfUpgradesAfterDowngrades), Optional.ToNullable(lastChangeDate));
        }
    }
}
