<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="TranscribeAsync(TranscribeRequest,CancellationToken)">
      <example>
This sample shows how to call TranscribeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

TranscribeRequest body = new TranscribeRequest();
Response<TranscriptionResult> response = await client.TranscribeAsync(body);
]]></code>
This sample shows how to call TranscribeAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

TranscribeRequest body = new TranscribeRequest
{
    Definition = "<definition>",
    Audio = null,
};
Response<TranscriptionResult> response = await client.TranscribeAsync(body);
]]></code></example>
    </member>
    <member name="Transcribe(TranscribeRequest,CancellationToken)">
      <example>
This sample shows how to call Transcribe.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

TranscribeRequest body = new TranscribeRequest();
Response<TranscriptionResult> response = client.Transcribe(body);
]]></code>
This sample shows how to call Transcribe with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

TranscribeRequest body = new TranscribeRequest
{
    Definition = "<definition>",
    Audio = null,
};
Response<TranscriptionResult> response = client.Transcribe(body);
]]></code></example>
    </member>
    <member name="TranscribeAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call TranscribeAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.TranscribeAsync(content, "multipart/form-data");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("combinedPhrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("offsetMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("confidence").ToString());
]]></code>
This sample shows how to call TranscribeAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    definition = "<definition>",
    audio = File.OpenRead("<filePath>"),
});
Response response = await client.TranscribeAsync(content, "multipart/form-data");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("combinedPhrases")[0].GetProperty("channel").ToString());
Console.WriteLine(result.GetProperty("combinedPhrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("channel").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("speaker").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("offsetMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("words")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("words")[0].GetProperty("offsetMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("words")[0].GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("locale").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("confidence").ToString());
]]></code></example>
    </member>
    <member name="Transcribe(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call Transcribe and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.Transcribe(content, "multipart/form-data");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("combinedPhrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("offsetMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("confidence").ToString());
]]></code>
This sample shows how to call Transcribe with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    definition = "<definition>",
    audio = File.OpenRead("<filePath>"),
});
Response response = client.Transcribe(content, "multipart/form-data");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("combinedPhrases")[0].GetProperty("channel").ToString());
Console.WriteLine(result.GetProperty("combinedPhrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("channel").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("speaker").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("offsetMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("words")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("words")[0].GetProperty("offsetMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("words")[0].GetProperty("durationMilliseconds").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("locale").ToString());
Console.WriteLine(result.GetProperty("phrases")[0].GetProperty("confidence").ToString());
]]></code></example>
    </member>
    <member name="GetTranscriptionOptionsSchemaAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTranscriptionOptionsSchemaAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response<TranscriptionOptions> response = await client.GetTranscriptionOptionsSchemaAsync();
]]></code>
This sample shows how to call GetTranscriptionOptionsSchemaAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response<TranscriptionOptions> response = await client.GetTranscriptionOptionsSchemaAsync(definition: "<definition>");
]]></code></example>
    </member>
    <member name="GetTranscriptionOptionsSchema(string,CancellationToken)">
      <example>
This sample shows how to call GetTranscriptionOptionsSchema.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response<TranscriptionOptions> response = client.GetTranscriptionOptionsSchema();
]]></code>
This sample shows how to call GetTranscriptionOptionsSchema with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response<TranscriptionOptions> response = client.GetTranscriptionOptionsSchema(definition: "<definition>");
]]></code></example>
    </member>
    <member name="GetTranscriptionOptionsSchemaAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTranscriptionOptionsSchemaAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response response = await client.GetTranscriptionOptionsSchemaAsync(null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetTranscriptionOptionsSchemaAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response response = await client.GetTranscriptionOptionsSchemaAsync("<definition>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("audioUrl").ToString());
Console.WriteLine(result.GetProperty("locales")[0].ToString());
Console.WriteLine(result.GetProperty("models").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("profanityFilterMode").ToString());
Console.WriteLine(result.GetProperty("diarization").GetProperty("enabled").ToString());
Console.WriteLine(result.GetProperty("diarization").GetProperty("maxSpeakers").ToString());
Console.WriteLine(result.GetProperty("channels")[0].ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("enabled").ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("task").ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("targetLanguage").ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("prompt")[0].ToString());
Console.WriteLine(result.GetProperty("phraseList").GetProperty("phrases")[0].ToString());
Console.WriteLine(result.GetProperty("phraseList").GetProperty("biasingWeight").ToString());
]]></code></example>
    </member>
    <member name="GetTranscriptionOptionsSchema(string,RequestContext)">
      <example>
This sample shows how to call GetTranscriptionOptionsSchema and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response response = client.GetTranscriptionOptionsSchema(null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetTranscriptionOptionsSchema with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TranscriptionClient client = new TranscriptionClient(endpoint, credential);

Response response = client.GetTranscriptionOptionsSchema("<definition>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("audioUrl").ToString());
Console.WriteLine(result.GetProperty("locales")[0].ToString());
Console.WriteLine(result.GetProperty("models").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("profanityFilterMode").ToString());
Console.WriteLine(result.GetProperty("diarization").GetProperty("enabled").ToString());
Console.WriteLine(result.GetProperty("diarization").GetProperty("maxSpeakers").ToString());
Console.WriteLine(result.GetProperty("channels")[0].ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("enabled").ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("task").ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("targetLanguage").ToString());
Console.WriteLine(result.GetProperty("enhancedMode").GetProperty("prompt")[0].ToString());
Console.WriteLine(result.GetProperty("phraseList").GetProperty("phrases")[0].ToString());
Console.WriteLine(result.GetProperty("phraseList").GetProperty("biasingWeight").ToString());
]]></code></example>
    </member>
  </members>
</doc>