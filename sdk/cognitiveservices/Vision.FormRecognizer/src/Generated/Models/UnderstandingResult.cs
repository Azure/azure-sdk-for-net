// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.FormRecognizer.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A set of extracted fields corresponding to a semantic object, such as a
    /// receipt, in the input document.
    /// </summary>
    public partial class UnderstandingResult
    {
        /// <summary>
        /// Initializes a new instance of the UnderstandingResult class.
        /// </summary>
        public UnderstandingResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UnderstandingResult class.
        /// </summary>
        /// <param name="pages">List of pages where the document is
        /// found.</param>
        /// <param name="fields">Dictionary of recognized field values.</param>
        public UnderstandingResult(IList<int> pages = default(IList<int>), IDictionary<string, FieldValue> fields = default(IDictionary<string, FieldValue>))
        {
            Pages = pages;
            Fields = fields;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of pages where the document is found.
        /// </summary>
        [JsonProperty(PropertyName = "pages")]
        public IList<int> Pages { get; set; }

        /// <summary>
        /// Gets or sets dictionary of recognized field values.
        /// </summary>
        [JsonProperty(PropertyName = "fields")]
        public IDictionary<string, FieldValue> Fields { get; set; }

    }
}
