// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.FormRecognizer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Filters to be applied when traversing a data source.
    /// </summary>
    public partial class TrainSourceFilter
    {
        /// <summary>
        /// Initializes a new instance of the TrainSourceFilter class.
        /// </summary>
        public TrainSourceFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrainSourceFilter class.
        /// </summary>
        /// <param name="prefix">A case-sensitive prefix string to filter
        /// content
        /// under the source location. For e.g., when using a Azure Blob
        /// Uri use the prefix to restrict subfolders for content.</param>
        /// <param name="includeSubFolders">A flag to indicate if sub folders
        /// within the set of
        /// prefix folders will also need to be included when searching
        /// for content to be preprocessed.</param>
        public TrainSourceFilter(string prefix = default(string), bool? includeSubFolders = default(bool?))
        {
            Prefix = prefix;
            IncludeSubFolders = includeSubFolders;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a case-sensitive prefix string to filter content
        /// under the source location. For e.g., when using a Azure Blob
        /// Uri use the prefix to restrict subfolders for content.
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// Gets or sets a flag to indicate if sub folders within the set of
        /// prefix folders will also need to be included when searching
        /// for content to be preprocessed.
        /// </summary>
        [JsonProperty(PropertyName = "includeSubFolders")]
        public bool? IncludeSubFolders { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Prefix != null)
            {
                if (Prefix.Length > 128)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Prefix", 128);
                }
                if (Prefix.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Prefix", 0);
                }
            }
        }
    }
}
