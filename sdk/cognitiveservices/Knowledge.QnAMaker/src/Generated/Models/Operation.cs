// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Knowledge.QnAMaker.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Record to track long running operation.
    /// </summary>
    public partial class Operation
    {
        /// <summary>
        /// Initializes a new instance of the Operation class.
        /// </summary>
        public Operation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Operation class.
        /// </summary>
        /// <param name="operationState">Operation state. Possible values
        /// include: 'Failed', 'NotStarted', 'Running', 'Succeeded'</param>
        /// <param name="createdTimestamp">Timestamp when the operation was
        /// created.</param>
        /// <param name="lastActionTimestamp">Timestamp when the current state
        /// was entered.</param>
        /// <param name="resourceLocation">Relative URI to the target resource
        /// location for completed resources.</param>
        /// <param name="userId">User Id</param>
        /// <param name="operationId">Operation Id.</param>
        /// <param name="errorResponse">Error details in case of
        /// failures.</param>
        public Operation(string operationState = default(string), string createdTimestamp = default(string), string lastActionTimestamp = default(string), string resourceLocation = default(string), string userId = default(string), string operationId = default(string), ErrorResponse errorResponse = default(ErrorResponse))
        {
            OperationState = operationState;
            CreatedTimestamp = createdTimestamp;
            LastActionTimestamp = lastActionTimestamp;
            ResourceLocation = resourceLocation;
            UserId = userId;
            OperationId = operationId;
            ErrorResponse = errorResponse;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets operation state. Possible values include: 'Failed',
        /// 'NotStarted', 'Running', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "operationState")]
        public string OperationState { get; set; }

        /// <summary>
        /// Gets or sets timestamp when the operation was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdTimestamp")]
        public string CreatedTimestamp { get; set; }

        /// <summary>
        /// Gets or sets timestamp when the current state was entered.
        /// </summary>
        [JsonProperty(PropertyName = "lastActionTimestamp")]
        public string LastActionTimestamp { get; set; }

        /// <summary>
        /// Gets or sets relative URI to the target resource location for
        /// completed resources.
        /// </summary>
        [JsonProperty(PropertyName = "resourceLocation")]
        public string ResourceLocation { get; set; }

        /// <summary>
        /// Gets or sets user Id
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }

        /// <summary>
        /// Gets or sets operation Id.
        /// </summary>
        [JsonProperty(PropertyName = "operationId")]
        public string OperationId { get; set; }

        /// <summary>
        /// Gets or sets error details in case of failures.
        /// </summary>
        [JsonProperty(PropertyName = "errorResponse")]
        public ErrorResponse ErrorResponse { get; set; }

    }
}
