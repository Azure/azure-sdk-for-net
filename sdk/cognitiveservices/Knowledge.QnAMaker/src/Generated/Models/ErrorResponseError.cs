// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Knowledge.QnAMaker.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The error object.
    /// </summary>
    public partial class ErrorResponseError : Error
    {
        /// <summary>
        /// Initializes a new instance of the ErrorResponseError class.
        /// </summary>
        public ErrorResponseError()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ErrorResponseError class.
        /// </summary>
        /// <param name="code">One of a server-defined set of error codes.
        /// Possible values include: 'BadArgument', 'Forbidden', 'NotFound',
        /// 'KbNotFound', 'Unauthorized', 'Unspecified', 'EndpointKeysError',
        /// 'QuotaExceeded', 'QnaRuntimeError', 'SKULimitExceeded',
        /// 'OperationNotFound', 'ServiceError', 'ValidationFailure',
        /// 'ExtractionFailure'</param>
        /// <param name="message">A human-readable representation of the
        /// error.</param>
        /// <param name="target">The target of the error.</param>
        /// <param name="details">An array of details about specific errors
        /// that led to this reported error.</param>
        /// <param name="innerError">An object containing more specific
        /// information than the current object about the error.</param>
        public ErrorResponseError(string code, string message = default(string), string target = default(string), IList<Error> details = default(IList<Error>), InnerErrorModel innerError = default(InnerErrorModel))
            : base(code, message, target, details, innerError)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
