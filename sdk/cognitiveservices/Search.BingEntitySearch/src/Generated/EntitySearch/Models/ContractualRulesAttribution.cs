// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("ContractualRules/Attribution")]
    public partial class ContractualRulesAttribution : ContractualRulesContractualRule
    {
        /// <summary>
        /// Initializes a new instance of the ContractualRulesAttribution
        /// class.
        /// </summary>
        public ContractualRulesAttribution()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContractualRulesAttribution
        /// class.
        /// </summary>
        /// <param name="targetPropertyName">The name of the field that the
        /// rule applies to.</param>
        /// <param name="mustBeCloseToContent">A Boolean value that determines
        /// whether the contents of the rule must be placed in close proximity
        /// to the field that the rule applies to. If true, the contents must
        /// be placed in close proximity. If false, or this field does not
        /// exist, the contents may be placed at the caller's
        /// discretion.</param>
        public ContractualRulesAttribution(string targetPropertyName = default(string), bool? mustBeCloseToContent = default(bool?))
            : base(targetPropertyName)
        {
            MustBeCloseToContent = mustBeCloseToContent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a Boolean value that determines whether the contents of the
        /// rule must be placed in close proximity to the field that the rule
        /// applies to. If true, the contents must be placed in close
        /// proximity. If false, or this field does not exist, the contents may
        /// be placed at the caller's discretion.
        /// </summary>
        [JsonProperty(PropertyName = "mustBeCloseToContent")]
        public bool? MustBeCloseToContent { get; private set; }

    }
}
