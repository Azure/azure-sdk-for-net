// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The application publish settings.
    /// </summary>
    public partial class PublishSettings
    {
        /// <summary>
        /// Initializes a new instance of the PublishSettings class.
        /// </summary>
        public PublishSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PublishSettings class.
        /// </summary>
        /// <param name="id">The application ID.</param>
        /// <param name="isSentimentAnalysisEnabled">Setting sentiment analysis
        /// as true returns the sentiment of the input utterance along with the
        /// response</param>
        /// <param name="isSpeechEnabled">Enables speech priming in your
        /// app</param>
        /// <param name="isSpellCheckerEnabled">Enables spell checking of the
        /// utterance.</param>
        public PublishSettings(System.Guid id, bool isSentimentAnalysisEnabled, bool isSpeechEnabled, bool isSpellCheckerEnabled)
        {
            Id = id;
            IsSentimentAnalysisEnabled = isSentimentAnalysisEnabled;
            IsSpeechEnabled = isSpeechEnabled;
            IsSpellCheckerEnabled = isSpellCheckerEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the application ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets setting sentiment analysis as true returns the
        /// sentiment of the input utterance along with the response
        /// </summary>
        [JsonProperty(PropertyName = "sentimentAnalysis")]
        public bool IsSentimentAnalysisEnabled { get; set; }

        /// <summary>
        /// Gets or sets enables speech priming in your app
        /// </summary>
        [JsonProperty(PropertyName = "speech")]
        public bool IsSpeechEnabled { get; set; }

        /// <summary>
        /// Gets or sets enables spell checking of the utterance.
        /// </summary>
        [JsonProperty(PropertyName = "spellChecker")]
        public bool IsSpellCheckerEnabled { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
