// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Communication.EmailDeliveryReportReceived event. </summary>
    public partial class AcsEmailDeliveryReportReceivedEventData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AcsEmailDeliveryReportReceivedEventData"/>. </summary>
        /// <param name="sender"> The Sender Email Address. </param>
        /// <param name="recipient"> The recipient Email Address. </param>
        /// <param name="internetMessageId"> The Internet Message Id of the email that has been sent. </param>
        /// <param name="deliveryStatusDetails"> Detailed information about the status if any. </param>
        internal AcsEmailDeliveryReportReceivedEventData(string sender, string recipient, string internetMessageId, AcsEmailDeliveryReportStatusDetails deliveryStatusDetails)
        {
            Sender = sender;
            Recipient = recipient;
            InternetMessageId = internetMessageId;
            DeliveryStatusDetails = deliveryStatusDetails;
        }

        /// <summary> Initializes a new instance of <see cref="AcsEmailDeliveryReportReceivedEventData"/>. </summary>
        /// <param name="sender"> The Sender Email Address. </param>
        /// <param name="recipient"> The recipient Email Address. </param>
        /// <param name="internetMessageId"> The Internet Message Id of the email that has been sent. </param>
        /// <param name="messageId"> The Id of the email that has been sent. </param>
        /// <param name="status"> The status of the email. Any value other than Delivered is considered failed. </param>
        /// <param name="deliveryStatusDetails"> Detailed information about the status if any. </param>
        /// <param name="deliveryAttemptTimestamp"> The time at which the email delivery report received timestamp. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AcsEmailDeliveryReportReceivedEventData(string sender, string recipient, string internetMessageId, string messageId, AcsEmailDeliveryReportStatus? status, AcsEmailDeliveryReportStatusDetails deliveryStatusDetails, DateTimeOffset? deliveryAttemptTimestamp, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Sender = sender;
            Recipient = recipient;
            InternetMessageId = internetMessageId;
            MessageId = messageId;
            Status = status;
            DeliveryStatusDetails = deliveryStatusDetails;
            DeliveryAttemptTimestamp = deliveryAttemptTimestamp;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The Sender Email Address. </summary>
        public string Sender { get; }

        /// <summary> The recipient Email Address. </summary>
        public string Recipient { get; }

        /// <summary> The Internet Message Id of the email that has been sent. </summary>
        public string InternetMessageId { get; }

        /// <summary> The Id of the email that has been sent. </summary>
        public string MessageId { get; }

        /// <summary> The status of the email. Any value other than Delivered is considered failed. </summary>
        public AcsEmailDeliveryReportStatus? Status { get; }

        /// <summary> Detailed information about the status if any. </summary>
        public AcsEmailDeliveryReportStatusDetails DeliveryStatusDetails { get; }

        /// <summary> The time at which the email delivery report received timestamp. </summary>
        public DateTimeOffset? DeliveryAttemptTimestamp { get; }
    }
}
