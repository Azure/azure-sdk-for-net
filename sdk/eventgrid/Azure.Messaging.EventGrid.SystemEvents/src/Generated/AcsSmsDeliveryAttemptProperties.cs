// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema for details of a delivery attempt. </summary>
    public partial class AcsSmsDeliveryAttemptProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AcsSmsDeliveryAttemptProperties"/>. </summary>
        internal AcsSmsDeliveryAttemptProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AcsSmsDeliveryAttemptProperties"/>. </summary>
        /// <param name="timestamp"> TimeStamp when delivery was attempted. </param>
        /// <param name="segmentsSucceeded"> Number of segments that were successfully delivered. </param>
        /// <param name="segmentsFailed"> Number of segments whose delivery failed. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AcsSmsDeliveryAttemptProperties(DateTimeOffset? timestamp, int? segmentsSucceeded, int? segmentsFailed, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Timestamp = timestamp;
            SegmentsSucceeded = segmentsSucceeded;
            SegmentsFailed = segmentsFailed;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> TimeStamp when delivery was attempted. </summary>
        public DateTimeOffset? Timestamp { get; }

        /// <summary> Number of segments that were successfully delivered. </summary>
        public int? SegmentsSucceeded { get; }

        /// <summary> Number of segments whose delivery failed. </summary>
        public int? SegmentsFailed { get; }
    }
}
