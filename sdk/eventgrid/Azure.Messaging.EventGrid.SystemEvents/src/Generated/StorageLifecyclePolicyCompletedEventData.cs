// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Storage.LifecyclePolicyCompleted event. </summary>
    public partial class StorageLifecyclePolicyCompletedEventData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StorageLifecyclePolicyCompletedEventData"/>. </summary>
        /// <param name="policyRunSummary"> Policy execution summary which shows the completion status of a LCM run". </param>
        /// <param name="deleteSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="tierToCoolSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="tierToArchiveSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="tierToColdSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        internal StorageLifecyclePolicyCompletedEventData(StorageLifecyclePolicyRunSummary policyRunSummary, StorageLifecyclePolicyActionSummaryDetail deleteSummary, StorageLifecyclePolicyActionSummaryDetail tierToCoolSummary, StorageLifecyclePolicyActionSummaryDetail tierToArchiveSummary, StorageLifecyclePolicyActionSummaryDetail tierToColdSummary)
        {
            PolicyRunSummary = policyRunSummary;
            DeleteSummary = deleteSummary;
            TierToCoolSummary = tierToCoolSummary;
            TierToArchiveSummary = tierToArchiveSummary;
            TierToColdSummary = tierToColdSummary;
        }

        /// <summary> Initializes a new instance of <see cref="StorageLifecyclePolicyCompletedEventData"/>. </summary>
        /// <param name="scheduleTime"> The time the policy task was scheduled. </param>
        /// <param name="policyRunSummary"> Policy execution summary which shows the completion status of a LCM run". </param>
        /// <param name="deleteSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="tierToCoolSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="tierToArchiveSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="tierToColdSummary"> Execution statistics of a specific policy action in a Blob Management cycle. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StorageLifecyclePolicyCompletedEventData(string scheduleTime, StorageLifecyclePolicyRunSummary policyRunSummary, StorageLifecyclePolicyActionSummaryDetail deleteSummary, StorageLifecyclePolicyActionSummaryDetail tierToCoolSummary, StorageLifecyclePolicyActionSummaryDetail tierToArchiveSummary, StorageLifecyclePolicyActionSummaryDetail tierToColdSummary, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ScheduleTime = scheduleTime;
            PolicyRunSummary = policyRunSummary;
            DeleteSummary = deleteSummary;
            TierToCoolSummary = tierToCoolSummary;
            TierToArchiveSummary = tierToArchiveSummary;
            TierToColdSummary = tierToColdSummary;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The time the policy task was scheduled. </summary>
        public string ScheduleTime { get; }

        /// <summary> Policy execution summary which shows the completion status of a LCM run". </summary>
        public StorageLifecyclePolicyRunSummary PolicyRunSummary { get; }

        /// <summary> Execution statistics of a specific policy action in a Blob Management cycle. </summary>
        public StorageLifecyclePolicyActionSummaryDetail DeleteSummary { get; }

        /// <summary> Execution statistics of a specific policy action in a Blob Management cycle. </summary>
        public StorageLifecyclePolicyActionSummaryDetail TierToCoolSummary { get; }

        /// <summary> Execution statistics of a specific policy action in a Blob Management cycle. </summary>
        public StorageLifecyclePolicyActionSummaryDetail TierToArchiveSummary { get; }

        /// <summary> Execution statistics of a specific policy action in a Blob Management cycle. </summary>
        public StorageLifecyclePolicyActionSummaryDetail TierToColdSummary { get; }
    }
}
