// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of common properties of all thread-level chat events. </summary>
    public partial class AcsChatEventInThreadBaseProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AcsChatEventInThreadBaseProperties"/>. </summary>
        /// <param name="threadId"> The chat thread id. </param>
        internal AcsChatEventInThreadBaseProperties(string threadId)
        {
            ThreadId = threadId;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatEventInThreadBaseProperties"/>. </summary>
        /// <param name="transactionId"> The transaction id will be used as co-relation vector. </param>
        /// <param name="threadId"> The chat thread id. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AcsChatEventInThreadBaseProperties(string transactionId, string threadId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            TransactionId = transactionId;
            ThreadId = threadId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The transaction id will be used as co-relation vector. </summary>
        public string TransactionId { get; }

        /// <summary> The chat thread id. </summary>
        public string ThreadId { get; }
    }
}
