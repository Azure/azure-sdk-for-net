// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Communication.SMSReceived event. </summary>
    public partial class AcsSmsReceivedEventData : AcsSmsEventBaseProperties
    {
        /// <summary> Initializes a new instance of <see cref="AcsSmsReceivedEventData"/>. </summary>
        /// <param name="messageId"> The identity of the SMS message. </param>
        /// <param name="from"> The identity of SMS message sender. </param>
        /// <param name="to"> The identity of SMS message receiver. </param>
        /// <param name="message"> The SMS content. </param>
        /// <param name="segmentCount"> Number of segments in the message. </param>
        internal AcsSmsReceivedEventData(string messageId, string @from, string to, string message, int segmentCount) : base(messageId, @from, to)
        {
            Message = message;
            SegmentCount = segmentCount;
        }

        /// <summary> Initializes a new instance of <see cref="AcsSmsReceivedEventData"/>. </summary>
        /// <param name="messageId"> The identity of the SMS message. </param>
        /// <param name="from"> The identity of SMS message sender. </param>
        /// <param name="to"> The identity of SMS message receiver. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="message"> The SMS content. </param>
        /// <param name="receivedTimestamp"> The time at which the SMS was received. </param>
        /// <param name="segmentCount"> Number of segments in the message. </param>
        internal AcsSmsReceivedEventData(string messageId, string @from, string to, IDictionary<string, BinaryData> additionalBinaryDataProperties, string message, DateTimeOffset? receivedTimestamp, int segmentCount) : base(messageId, @from, to, additionalBinaryDataProperties)
        {
            Message = message;
            ReceivedTimestamp = receivedTimestamp;
            SegmentCount = segmentCount;
        }

        /// <summary> The SMS content. </summary>
        public string Message { get; }

        /// <summary> The time at which the SMS was received. </summary>
        public DateTimeOffset? ReceivedTimestamp { get; }

        /// <summary> Number of segments in the message. </summary>
        public int SegmentCount { get; }
    }
}
