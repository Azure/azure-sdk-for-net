// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Schema of the Data property of an EventGridEvent for a Microsoft.Communication.SMSDeliveryReportReceived event. </summary>
    [JsonConverter(typeof(AcsSmsDeliveryReportReceivedEventDataConverter))]
    public partial class AcsSmsDeliveryReportReceivedEventData : IJsonModel<AcsSmsDeliveryReportReceivedEventData>
    {
        /// <summary> Initializes a new instance of <see cref="AcsSmsDeliveryReportReceivedEventData"/> for deserialization. </summary>
        internal AcsSmsDeliveryReportReceivedEventData()
        {
        }

        /// <param name="writer"> The JSON writer. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        void IJsonModel<AcsSmsDeliveryReportReceivedEventData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options)
        {
            writer.WriteStartObject();
            JsonModelWriteCore(writer, options);
            writer.WriteEndObject();
        }

        /// <param name="writer"> The JSON writer. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected override void JsonModelWriteCore(Utf8JsonWriter writer, ModelReaderWriterOptions options)
        {
            string format = options.Format == "W" ? ((IPersistableModel<AcsSmsDeliveryReportReceivedEventData>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(AcsSmsDeliveryReportReceivedEventData)} does not support writing '{format}' format.");
            }
            base.JsonModelWriteCore(writer, options);
            writer.WritePropertyName("deliveryStatus"u8);
            writer.WriteStringValue(DeliveryStatus);
            writer.WritePropertyName("deliveryStatusDetails"u8);
            writer.WriteStringValue(DeliveryStatusDetails);
            if (options.Format != "W")
            {
                writer.WritePropertyName("deliveryAttempts"u8);
                writer.WriteStartArray();
                foreach (AcsSmsDeliveryAttemptProperties item in DeliveryAttempts)
                {
                    writer.WriteObjectValue(item, options);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ReceivedTimestamp))
            {
                writer.WritePropertyName("receivedTimestamp"u8);
                writer.WriteStringValue(ReceivedTimestamp.Value, "O");
            }
            if (Optional.IsDefined(Tag))
            {
                writer.WritePropertyName("tag"u8);
                writer.WriteStringValue(Tag);
            }
        }

        /// <param name="reader"> The JSON reader. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        AcsSmsDeliveryReportReceivedEventData IJsonModel<AcsSmsDeliveryReportReceivedEventData>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => (AcsSmsDeliveryReportReceivedEventData)JsonModelCreateCore(ref reader, options);

        /// <param name="reader"> The JSON reader. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected override AcsSmsEventBaseProperties JsonModelCreateCore(ref Utf8JsonReader reader, ModelReaderWriterOptions options)
        {
            string format = options.Format == "W" ? ((IPersistableModel<AcsSmsDeliveryReportReceivedEventData>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(AcsSmsDeliveryReportReceivedEventData)} does not support reading '{format}' format.");
            }
            using JsonDocument document = JsonDocument.ParseValue(ref reader);
            return DeserializeAcsSmsDeliveryReportReceivedEventData(document.RootElement, options);
        }

        /// <param name="element"> The JSON element to deserialize. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        internal static AcsSmsDeliveryReportReceivedEventData DeserializeAcsSmsDeliveryReportReceivedEventData(JsonElement element, ModelReaderWriterOptions options)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string messageId = default;
            string @from = default;
            string to = default;
            IDictionary<string, BinaryData> additionalBinaryDataProperties = new ChangeTrackingDictionary<string, BinaryData>();
            string deliveryStatus = default;
            string deliveryStatusDetails = default;
            IReadOnlyList<AcsSmsDeliveryAttemptProperties> deliveryAttempts = default;
            DateTimeOffset? receivedTimestamp = default;
            string tag = default;
            foreach (var prop in element.EnumerateObject())
            {
                if (prop.NameEquals("messageId"u8))
                {
                    messageId = prop.Value.GetString();
                    continue;
                }
                if (prop.NameEquals("from"u8))
                {
                    @from = prop.Value.GetString();
                    continue;
                }
                if (prop.NameEquals("to"u8))
                {
                    to = prop.Value.GetString();
                    continue;
                }
                if (prop.NameEquals("deliveryStatus"u8))
                {
                    deliveryStatus = prop.Value.GetString();
                    continue;
                }
                if (prop.NameEquals("deliveryStatusDetails"u8))
                {
                    deliveryStatusDetails = prop.Value.GetString();
                    continue;
                }
                if (prop.NameEquals("deliveryAttempts"u8))
                {
                    List<AcsSmsDeliveryAttemptProperties> array = new List<AcsSmsDeliveryAttemptProperties>();
                    foreach (var item in prop.Value.EnumerateArray())
                    {
                        array.Add(AcsSmsDeliveryAttemptProperties.DeserializeAcsSmsDeliveryAttemptProperties(item, options));
                    }
                    deliveryAttempts = array;
                    continue;
                }
                if (prop.NameEquals("receivedTimestamp"u8))
                {
                    if (prop.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    receivedTimestamp = prop.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (prop.NameEquals("tag"u8))
                {
                    tag = prop.Value.GetString();
                    continue;
                }
                if (options.Format != "W")
                {
                    additionalBinaryDataProperties.Add(prop.Name, BinaryData.FromString(prop.Value.GetRawText()));
                }
            }
            return new AcsSmsDeliveryReportReceivedEventData(
                messageId,
                @from,
                to,
                additionalBinaryDataProperties,
                deliveryStatus,
                deliveryStatusDetails,
                deliveryAttempts,
                receivedTimestamp,
                tag);
        }

        /// <param name="options"> The client options for reading and writing models. </param>
        BinaryData IPersistableModel<AcsSmsDeliveryReportReceivedEventData>.Write(ModelReaderWriterOptions options) => PersistableModelWriteCore(options);

        /// <param name="options"> The client options for reading and writing models. </param>
        protected override BinaryData PersistableModelWriteCore(ModelReaderWriterOptions options)
        {
            string format = options.Format == "W" ? ((IPersistableModel<AcsSmsDeliveryReportReceivedEventData>)this).GetFormatFromOptions(options) : options.Format;
            switch (format)
            {
                case "J":
                    return ModelReaderWriter.Write(this, options, AzureMessagingEventGridSystemEventsContext.Default);
                default:
                    throw new FormatException($"The model {nameof(AcsSmsDeliveryReportReceivedEventData)} does not support writing '{options.Format}' format.");
            }
        }

        /// <param name="data"> The data to parse. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        AcsSmsDeliveryReportReceivedEventData IPersistableModel<AcsSmsDeliveryReportReceivedEventData>.Create(BinaryData data, ModelReaderWriterOptions options) => (AcsSmsDeliveryReportReceivedEventData)PersistableModelCreateCore(data, options);

        /// <param name="data"> The data to parse. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected override AcsSmsEventBaseProperties PersistableModelCreateCore(BinaryData data, ModelReaderWriterOptions options)
        {
            string format = options.Format == "W" ? ((IPersistableModel<AcsSmsDeliveryReportReceivedEventData>)this).GetFormatFromOptions(options) : options.Format;
            switch (format)
            {
                case "J":
                    using (JsonDocument document = JsonDocument.Parse(data))
                    {
                        return DeserializeAcsSmsDeliveryReportReceivedEventData(document.RootElement, options);
                    }
                default:
                    throw new FormatException($"The model {nameof(AcsSmsDeliveryReportReceivedEventData)} does not support reading '{options.Format}' format.");
            }
        }

        /// <param name="options"> The client options for reading and writing models. </param>
        string IPersistableModel<AcsSmsDeliveryReportReceivedEventData>.GetFormatFromOptions(ModelReaderWriterOptions options) => "J";

        internal partial class AcsSmsDeliveryReportReceivedEventDataConverter : JsonConverter<AcsSmsDeliveryReportReceivedEventData>
        {
            /// <summary> Writes the JSON representation of the model. </summary>
            /// <param name="writer"> The writer. </param>
            /// <param name="model"> The model to write. </param>
            /// <param name="options"> The serialization options. </param>
            public override void Write(Utf8JsonWriter writer, AcsSmsDeliveryReportReceivedEventData model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue<IJsonModel<AcsSmsDeliveryReportReceivedEventData>>(model, ModelSerializationExtensions.WireOptions);
            }

            /// <summary> Reads the JSON representation and converts into the model. </summary>
            /// <param name="reader"> The reader. </param>
            /// <param name="typeToConvert"> The type to convert. </param>
            /// <param name="options"> The serialization options. </param>
            public override AcsSmsDeliveryReportReceivedEventData Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using JsonDocument document = JsonDocument.ParseValue(ref reader);
                return DeserializeAcsSmsDeliveryReportReceivedEventData(document.RootElement, ModelSerializationExtensions.WireOptions);
            }
        }
    }
}
