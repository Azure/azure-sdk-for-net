{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "String"
    },
    "testApplicationOid": {
      "type": "string",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "testApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    }
  },
  "variables": {
    "apiVersion": "2020-04-01-preview",
    "eventGridTopicName": "[concat(parameters('baseName'), 'topic')]",
    "eventGridDomainName": "[concat(parameters('baseName'), 'domain')]",
    "cloudeventDomainName": "[concat(parameters('baseName'), 'cloudevent-domain')]",
    "cloudeventTopicName": "[concat(parameters('baseName'), 'cloudevent-topic')]",
    "customeventTopicName": "[concat(parameters('baseName'), 'customevent-topic')]",
    "eventGridDataSenderRoleId": "d5a91429-5739-47e2-a06b-3470a27159e7"
  },
  "resources": [
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('eventGridTopicName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "name": "[variables('eventGridDomainName')]",
      "type": "Microsoft.EventGrid/domains",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "name": "[variables('cloudeventDomainName')]",
      "type": "Microsoft.EventGrid/domains",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "inputSchema": "CloudEventSchemaV1_0"
      }
    },
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('cloudeventTopicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "inputSchema": "CloudEventSchemaV1_0"
      }
    },
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('customeventTopicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "inputSchema": "CustomEventSchema",
        "inputSchemaMapping": {
          "inputSchemaMappingType": "Json",
          "properties": {
            "dataVersion": {
              "defaultValue": "default",
              "sourceField": "TestVersion"
            },
            "eventTime": {
              "sourceField": "TestEventTime"
            },
            "eventType": {
              "defaultValue": "default",
              "sourceField": "TestEventType"
            },
            "id": {
              "sourceField": "TestID"
            },
            "subject": {
              "defaultValue": "default",
              "sourceField": "TestSubject"
            },
            "topic": {
              "sourceField": "TestTopic"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, parameters('testApplicationOid'), variables('eventGridDataSenderRoleId'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('eventGridDataSenderRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    }
  ],
  "outputs": {
    "EVENT_GRID_TOPIC_ENDPOINT": {
      "type": "string",
      "value": "[reference(variables('eventGridTopicName')).endpoint]"
    },
    "EVENT_GRID_TOPIC_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName')), variables('apiVersion')).key1]"
    },
    "EVENT_GRID_DOMAIN_ENDPOINT": {
      "type": "string",
      "value": "[reference(variables('eventGridDomainName')).endpoint]"
    },
    "EVENT_GRID_DOMAIN_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventGrid/domains', variables('eventGridDomainName')), variables('apiVersion')).key1]"
    },
    "EVENT_GRID_CLOUD_EVENT_DOMAIN_ENDPOINT": {
      "type": "string",
      "value": "[reference(variables('cloudeventDomainName')).endpoint]"
    },
    "EVENT_GRID_CLOUD_EVENT_DOMAIN_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventGrid/domains', variables('cloudeventDomainName')), variables('apiVersion')).key1]"
    },
    "EVENT_GRID_CLOUD_EVENT_TOPIC_ENDPOINT": {
      "type": "string",
      "value": "[reference(variables('cloudeventTopicName')).endpoint]"
    },
    "EVENT_GRID_CLOUD_EVENT_TOPIC_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('cloudeventTopicName')), variables('apiVersion')).key1]"
    },
    "EVENT_GRID_CUSTOM_EVENT_TOPIC_ENDPOINT": {
      "type": "string",
      "value": "[reference(variables('customeventTopicName')).endpoint]"
    },
    "EVENT_GRID_CUSTOM_EVENT_TOPIC_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('customeventTopicName')), variables('apiVersion')).key1]"
    }
  }
}
