// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure;

namespace Azure.Messaging.EventGrid.Namespaces
{
    /// <summary> Model factory for models. </summary>
    public static partial class MessagingEventGridNamespacesModelFactory
    {
        /// <summary> Initializes a new instance of BrokerProperties. </summary>
        /// <param name="lockToken"> The token of the lock on the event. </param>
        /// <param name="deliveryCount"> The attempt count for delivering the event. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="lockToken"/> is null. </exception>
        /// <returns> A new <see cref="Namespaces.BrokerProperties"/> instance for mocking. </returns>
        public static BrokerProperties BrokerProperties(string lockToken = null, int deliveryCount = default)
        {
            if (lockToken == null)
            {
                throw new ArgumentNullException(nameof(lockToken));
            }

            return new BrokerProperties(lockToken, deliveryCount);
        }

        /// <summary> Initializes a new instance of AcknowledgeResult. </summary>
        /// <param name="failedLockTokens"> Array of FailedLockToken for failed cloud events. Each FailedLockToken includes the lock token along with the related error information (namely, the error code and description). </param>
        /// <param name="succeededLockTokens"> Array of lock tokens for the successfully acknowledged cloud events. </param>
        /// <returns> A new <see cref="Namespaces.AcknowledgeResult"/> instance for mocking. </returns>
        public static AcknowledgeResult AcknowledgeResult(IEnumerable<FailedLockToken> failedLockTokens = null, IEnumerable<string> succeededLockTokens = null)
        {
            failedLockTokens ??= new List<FailedLockToken>();
            succeededLockTokens ??= new List<string>();

            return new AcknowledgeResult(failedLockTokens?.ToList(), succeededLockTokens?.ToList());
        }

        /// <summary> Initializes a new instance of FailedLockToken. </summary>
        /// <param name="lockToken"> The lock token of an entry in the request. </param>
        /// <param name="error"> Error information of the failed operation result for the lock token in the request. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="lockToken"/> or <paramref name="error"/> is null. </exception>
        /// <returns> A new <see cref="Namespaces.FailedLockToken"/> instance for mocking. </returns>
        public static FailedLockToken FailedLockToken(string lockToken = null, ResponseError error = null)
        {
            if (lockToken == null)
            {
                throw new ArgumentNullException(nameof(lockToken));
            }
            if (error == null)
            {
                throw new ArgumentNullException(nameof(error));
            }

            return new FailedLockToken(lockToken, error);
        }

        /// <summary> Initializes a new instance of ReleaseResult. </summary>
        /// <param name="failedLockTokens"> Array of FailedLockToken for failed cloud events. Each FailedLockToken includes the lock token along with the related error information (namely, the error code and description). </param>
        /// <param name="succeededLockTokens"> Array of lock tokens for the successfully released cloud events. </param>
        /// <returns> A new <see cref="Namespaces.ReleaseResult"/> instance for mocking. </returns>
        public static ReleaseResult ReleaseResult(IEnumerable<FailedLockToken> failedLockTokens = null, IEnumerable<string> succeededLockTokens = null)
        {
            failedLockTokens ??= new List<FailedLockToken>();
            succeededLockTokens ??= new List<string>();

            return new ReleaseResult(failedLockTokens?.ToList(), succeededLockTokens?.ToList());
        }

        /// <summary> Initializes a new instance of RejectResult. </summary>
        /// <param name="failedLockTokens"> Array of FailedLockToken for failed cloud events. Each FailedLockToken includes the lock token along with the related error information (namely, the error code and description). </param>
        /// <param name="succeededLockTokens"> Array of lock tokens for the successfully rejected cloud events. </param>
        /// <returns> A new <see cref="Namespaces.RejectResult"/> instance for mocking. </returns>
        public static RejectResult RejectResult(IEnumerable<FailedLockToken> failedLockTokens = null, IEnumerable<string> succeededLockTokens = null)
        {
            failedLockTokens ??= new List<FailedLockToken>();
            succeededLockTokens ??= new List<string>();

            return new RejectResult(failedLockTokens?.ToList(), succeededLockTokens?.ToList());
        }

        /// <summary> Initializes a new instance of RenewCloudEventLocksResult. </summary>
        /// <param name="failedLockTokens"> Array of FailedLockToken for failed cloud events. Each FailedLockToken includes the lock token along with the related error information (namely, the error code and description). </param>
        /// <param name="succeededLockTokens"> Array of lock tokens for the successfully renewed locks. </param>
        /// <returns> A new <see cref="Namespaces.RenewCloudEventLocksResult"/> instance for mocking. </returns>
        public static RenewCloudEventLocksResult RenewCloudEventLocksResult(IEnumerable<FailedLockToken> failedLockTokens = null, IEnumerable<string> succeededLockTokens = null)
        {
            failedLockTokens ??= new List<FailedLockToken>();
            succeededLockTokens ??= new List<string>();

            return new RenewCloudEventLocksResult(failedLockTokens?.ToList(), succeededLockTokens?.ToList());
        }
    }
}
