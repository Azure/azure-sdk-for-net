// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.EventGrid;

namespace Azure.ResourceManager.EventGrid.Samples
{
    public partial class Sample_ClientGroupCollection
    {
        // ClientGroups_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ClientGroupsGet()
        {
            // Generated from example definition: specification/eventgrid/resource-manager/Microsoft.EventGrid/preview/2023-06-01-preview/examples/ClientGroups_Get.json
            // this example is just showing the usage of "ClientGroups_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceResource created on azure
            // for more information of creating NamespaceResource, please refer to the document of NamespaceResource
            string subscriptionId = "8f6b6269-84f2-4d09-9e31-1127efcd1e40";
            string resourceGroupName = "examplerg";
            string namespaceName = "exampleNamespaceName1";
            ResourceIdentifier namespaceResourceId = NamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            NamespaceResource @namespace = client.GetNamespaceResource(namespaceResourceId);

            // get the collection of this ClientGroupResource
            ClientGroupCollection collection = @namespace.GetClientGroups();

            // invoke the operation
            string clientGroupName = "exampleClientGroupName1";
            ClientGroupResource result = await collection.GetAsync(clientGroupName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ClientGroupData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ClientGroups_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_ClientGroupsGet()
        {
            // Generated from example definition: specification/eventgrid/resource-manager/Microsoft.EventGrid/preview/2023-06-01-preview/examples/ClientGroups_Get.json
            // this example is just showing the usage of "ClientGroups_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceResource created on azure
            // for more information of creating NamespaceResource, please refer to the document of NamespaceResource
            string subscriptionId = "8f6b6269-84f2-4d09-9e31-1127efcd1e40";
            string resourceGroupName = "examplerg";
            string namespaceName = "exampleNamespaceName1";
            ResourceIdentifier namespaceResourceId = NamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            NamespaceResource @namespace = client.GetNamespaceResource(namespaceResourceId);

            // get the collection of this ClientGroupResource
            ClientGroupCollection collection = @namespace.GetClientGroups();

            // invoke the operation
            string clientGroupName = "exampleClientGroupName1";
            bool result = await collection.ExistsAsync(clientGroupName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ClientGroups_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_ClientGroupsCreateOrUpdate()
        {
            // Generated from example definition: specification/eventgrid/resource-manager/Microsoft.EventGrid/preview/2023-06-01-preview/examples/ClientGroups_CreateOrUpdate.json
            // this example is just showing the usage of "ClientGroups_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceResource created on azure
            // for more information of creating NamespaceResource, please refer to the document of NamespaceResource
            string subscriptionId = "8f6b6269-84f2-4d09-9e31-1127efcd1e40";
            string resourceGroupName = "examplerg";
            string namespaceName = "exampleNamespaceName1";
            ResourceIdentifier namespaceResourceId = NamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            NamespaceResource @namespace = client.GetNamespaceResource(namespaceResourceId);

            // get the collection of this ClientGroupResource
            ClientGroupCollection collection = @namespace.GetClientGroups();

            // invoke the operation
            string clientGroupName = "exampleClientGroupName1";
            ClientGroupData data = new ClientGroupData()
            {
                Description = "This is a test client group",
                Query = "attributes.b IN ['a', 'b', 'c']",
            };
            ArmOperation<ClientGroupResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, clientGroupName, data);
            ClientGroupResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ClientGroupData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ClientGroups_ListByNamespace
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ClientGroupsListByNamespace()
        {
            // Generated from example definition: specification/eventgrid/resource-manager/Microsoft.EventGrid/preview/2023-06-01-preview/examples/ClientGroups_ListByNamespace.json
            // this example is just showing the usage of "ClientGroups_ListByNamespace" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceResource created on azure
            // for more information of creating NamespaceResource, please refer to the document of NamespaceResource
            string subscriptionId = "8f6b6269-84f2-4d09-9e31-1127efcd1e40";
            string resourceGroupName = "examplerg";
            string namespaceName = "namespace123";
            ResourceIdentifier namespaceResourceId = NamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            NamespaceResource @namespace = client.GetNamespaceResource(namespaceResourceId);

            // get the collection of this ClientGroupResource
            ClientGroupCollection collection = @namespace.GetClientGroups();

            // invoke the operation and iterate over the result
            await foreach (ClientGroupResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ClientGroupData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
