// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.EventGrid.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.EventGrid
{
    /// <summary> A class representing the Channel data model. </summary>
    public partial class ChannelData : ResourceData
    {
        /// <summary> Initializes a new instance of ChannelData. </summary>
        public ChannelData()
        {
        }

        /// <summary> Initializes a new instance of ChannelData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="channelType"> The type of the event channel which represents the direction flow of events. </param>
        /// <param name="partnerTopicInfo"> This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel. </param>
        /// <param name="messageForActivation"> Context or helpful message that can be used during the approval process by the subscriber. </param>
        /// <param name="provisioningState"> Provisioning state of the channel. </param>
        /// <param name="readinessState"> The readiness state of the corresponding partner topic. </param>
        /// <param name="expirationTimeIfNotActivatedUtc">
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </param>
        internal ChannelData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ChannelType? channelType, PartnerTopicInfo partnerTopicInfo, string messageForActivation, ChannelProvisioningState? provisioningState, ReadinessState? readinessState, DateTimeOffset? expirationTimeIfNotActivatedUtc) : base(id, name, resourceType, systemData)
        {
            ChannelType = channelType;
            PartnerTopicInfo = partnerTopicInfo;
            MessageForActivation = messageForActivation;
            ProvisioningState = provisioningState;
            ReadinessState = readinessState;
            ExpirationTimeIfNotActivatedUtc = expirationTimeIfNotActivatedUtc;
        }

        /// <summary> The type of the event channel which represents the direction flow of events. </summary>
        public ChannelType? ChannelType { get; set; }
        /// <summary> This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel. </summary>
        public PartnerTopicInfo PartnerTopicInfo { get; set; }
        /// <summary> Context or helpful message that can be used during the approval process by the subscriber. </summary>
        public string MessageForActivation { get; set; }
        /// <summary> Provisioning state of the channel. </summary>
        public ChannelProvisioningState? ProvisioningState { get; set; }
        /// <summary> The readiness state of the corresponding partner topic. </summary>
        public ReadinessState? ReadinessState { get; set; }
        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        public DateTimeOffset? ExpirationTimeIfNotActivatedUtc { get; set; }
    }
}
