// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.EventGrid.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.EventGrid
{
    /// <summary>
    /// A class representing the VerifiedPartner data model.
    /// Verified partner information
    /// </summary>
    public partial class VerifiedPartnerData : ResourceData
    {
        /// <summary> Initializes a new instance of VerifiedPartnerData. </summary>
        public VerifiedPartnerData()
        {
        }

        /// <summary> Initializes a new instance of VerifiedPartnerData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="partnerRegistrationImmutableId"> ImmutableId of the corresponding partner registration. </param>
        /// <param name="organizationName"> Official name of the Partner. </param>
        /// <param name="partnerDisplayName"> Display name of the verified partner. </param>
        /// <param name="partnerTopicDetails"> Details of the partner topic scenario. </param>
        /// <param name="provisioningState"> Provisioning state of the verified partner. </param>
        internal VerifiedPartnerData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Guid? partnerRegistrationImmutableId, string organizationName, string partnerDisplayName, PartnerDetails partnerTopicDetails, VerifiedPartnerProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            PartnerRegistrationImmutableId = partnerRegistrationImmutableId;
            OrganizationName = organizationName;
            PartnerDisplayName = partnerDisplayName;
            PartnerTopicDetails = partnerTopicDetails;
            ProvisioningState = provisioningState;
        }

        /// <summary> ImmutableId of the corresponding partner registration. </summary>
        public Guid? PartnerRegistrationImmutableId { get; set; }
        /// <summary> Official name of the Partner. </summary>
        public string OrganizationName { get; set; }
        /// <summary> Display name of the verified partner. </summary>
        public string PartnerDisplayName { get; set; }
        /// <summary> Details of the partner topic scenario. </summary>
        public PartnerDetails PartnerTopicDetails { get; set; }
        /// <summary> Provisioning state of the verified partner. </summary>
        public VerifiedPartnerProvisioningState? ProvisioningState { get; set; }
    }
}
