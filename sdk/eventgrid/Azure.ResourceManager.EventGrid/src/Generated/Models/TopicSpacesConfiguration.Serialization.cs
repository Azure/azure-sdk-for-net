// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EventGrid.Models
{
    public partial class TopicSpacesConfiguration : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(State))
            {
                writer.WritePropertyName("state"u8);
                writer.WriteStringValue(State.Value.ToString());
            }
            if (Core.Optional.IsDefined(RouteTopicResourceId))
            {
                writer.WritePropertyName("routeTopicResourceId"u8);
                writer.WriteStringValue(RouteTopicResourceId);
            }
            if (Core.Optional.IsDefined(RoutingEnrichments))
            {
                writer.WritePropertyName("routingEnrichments"u8);
                writer.WriteObjectValue(RoutingEnrichments);
            }
            if (Core.Optional.IsDefined(ClientAuthentication))
            {
                writer.WritePropertyName("clientAuthentication"u8);
                writer.WriteObjectValue(ClientAuthentication);
            }
            if (Core.Optional.IsDefined(MaximumSessionExpiryInHours))
            {
                writer.WritePropertyName("maximumSessionExpiryInHours"u8);
                writer.WriteNumberValue(MaximumSessionExpiryInHours.Value);
            }
            if (Core.Optional.IsDefined(MaximumClientSessionsPerAuthenticationName))
            {
                writer.WritePropertyName("maximumClientSessionsPerAuthenticationName"u8);
                writer.WriteNumberValue(MaximumClientSessionsPerAuthenticationName.Value);
            }
            if (Core.Optional.IsDefined(RoutingIdentityInfo))
            {
                writer.WritePropertyName("routingIdentityInfo"u8);
                writer.WriteObjectValue(RoutingIdentityInfo);
            }
            writer.WriteEndObject();
        }

        internal static TopicSpacesConfiguration DeserializeTopicSpacesConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<TopicSpacesConfigurationState> state = default;
            Core.Optional<string> routeTopicResourceId = default;
            Core.Optional<string> hostname = default;
            Core.Optional<RoutingEnrichments> routingEnrichments = default;
            Core.Optional<ClientAuthenticationSettings> clientAuthentication = default;
            Core.Optional<int> maximumSessionExpiryInHours = default;
            Core.Optional<int> maximumClientSessionsPerAuthenticationName = default;
            Core.Optional<RoutingIdentityInfo> routingIdentityInfo = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    state = new TopicSpacesConfigurationState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("routeTopicResourceId"u8))
                {
                    routeTopicResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hostname"u8))
                {
                    hostname = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("routingEnrichments"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    routingEnrichments = RoutingEnrichments.DeserializeRoutingEnrichments(property.Value);
                    continue;
                }
                if (property.NameEquals("clientAuthentication"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clientAuthentication = ClientAuthenticationSettings.DeserializeClientAuthenticationSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("maximumSessionExpiryInHours"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maximumSessionExpiryInHours = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maximumClientSessionsPerAuthenticationName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maximumClientSessionsPerAuthenticationName = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("routingIdentityInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    routingIdentityInfo = RoutingIdentityInfo.DeserializeRoutingIdentityInfo(property.Value);
                    continue;
                }
            }
            return new TopicSpacesConfiguration(Core.Optional.ToNullable(state), routeTopicResourceId.Value, hostname.Value, routingEnrichments.Value, clientAuthentication.Value, Core.Optional.ToNullable(maximumSessionExpiryInHours), Core.Optional.ToNullable(maximumClientSessionsPerAuthenticationName), routingIdentityInfo.Value);
        }
    }
}
