// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EventGrid.Models
{
    public partial class AdvancedFilter : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("operatorType"u8);
            writer.WriteStringValue(OperatorType.ToString());
            if (Optional.IsDefined(Key))
            {
                writer.WritePropertyName("key"u8);
                writer.WriteStringValue(Key);
            }
            writer.WriteEndObject();
        }

        internal static AdvancedFilter DeserializeAdvancedFilter(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            if (element.TryGetProperty("operatorType", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "BoolEquals": return BoolEqualsAdvancedFilter.DeserializeBoolEqualsAdvancedFilter(element);
                    case "IsNotNull": return IsNotNullAdvancedFilter.DeserializeIsNotNullAdvancedFilter(element);
                    case "IsNullOrUndefined": return IsNullOrUndefinedAdvancedFilter.DeserializeIsNullOrUndefinedAdvancedFilter(element);
                    case "NumberGreaterThan": return NumberGreaterThanAdvancedFilter.DeserializeNumberGreaterThanAdvancedFilter(element);
                    case "NumberGreaterThanOrEquals": return NumberGreaterThanOrEqualsAdvancedFilter.DeserializeNumberGreaterThanOrEqualsAdvancedFilter(element);
                    case "NumberIn": return NumberInAdvancedFilter.DeserializeNumberInAdvancedFilter(element);
                    case "NumberInRange": return NumberInRangeAdvancedFilter.DeserializeNumberInRangeAdvancedFilter(element);
                    case "NumberLessThan": return NumberLessThanAdvancedFilter.DeserializeNumberLessThanAdvancedFilter(element);
                    case "NumberLessThanOrEquals": return NumberLessThanOrEqualsAdvancedFilter.DeserializeNumberLessThanOrEqualsAdvancedFilter(element);
                    case "NumberNotIn": return NumberNotInAdvancedFilter.DeserializeNumberNotInAdvancedFilter(element);
                    case "NumberNotInRange": return NumberNotInRangeAdvancedFilter.DeserializeNumberNotInRangeAdvancedFilter(element);
                    case "StringBeginsWith": return StringBeginsWithAdvancedFilter.DeserializeStringBeginsWithAdvancedFilter(element);
                    case "StringContains": return StringContainsAdvancedFilter.DeserializeStringContainsAdvancedFilter(element);
                    case "StringEndsWith": return StringEndsWithAdvancedFilter.DeserializeStringEndsWithAdvancedFilter(element);
                    case "StringIn": return StringInAdvancedFilter.DeserializeStringInAdvancedFilter(element);
                    case "StringNotBeginsWith": return StringNotBeginsWithAdvancedFilter.DeserializeStringNotBeginsWithAdvancedFilter(element);
                    case "StringNotContains": return StringNotContainsAdvancedFilter.DeserializeStringNotContainsAdvancedFilter(element);
                    case "StringNotEndsWith": return StringNotEndsWithAdvancedFilter.DeserializeStringNotEndsWithAdvancedFilter(element);
                    case "StringNotIn": return StringNotInAdvancedFilter.DeserializeStringNotInAdvancedFilter(element);
                }
            }
            return UnknownAdvancedFilter.DeserializeUnknownAdvancedFilter(element);
        }
    }
}
