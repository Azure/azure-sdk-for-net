// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.EventGrid.Models
{
    /// <summary>
    /// This property specifies the mode of the Azure Confidential Compute configuration.
    /// Possible values are 'Disabled' or 'Enabled'.
    /// This is an immutable property set at the time of resource creation and cannot be modified later.
    /// Enabling this property ensures that messages are processed and stored in a Azure Confidential Compute environment.
    /// </summary>
    public readonly partial struct ConfidentialComputeMode : IEquatable<ConfidentialComputeMode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ConfidentialComputeMode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ConfidentialComputeMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DisabledValue = "Disabled";
        private const string EnabledValue = "Enabled";

        /// <summary> Disabled. </summary>
        public static ConfidentialComputeMode Disabled { get; } = new ConfidentialComputeMode(DisabledValue);
        /// <summary> Enabled. </summary>
        public static ConfidentialComputeMode Enabled { get; } = new ConfidentialComputeMode(EnabledValue);
        /// <summary> Determines if two <see cref="ConfidentialComputeMode"/> values are the same. </summary>
        public static bool operator ==(ConfidentialComputeMode left, ConfidentialComputeMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ConfidentialComputeMode"/> values are not the same. </summary>
        public static bool operator !=(ConfidentialComputeMode left, ConfidentialComputeMode right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ConfidentialComputeMode"/>. </summary>
        public static implicit operator ConfidentialComputeMode(string value) => new ConfidentialComputeMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ConfidentialComputeMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ConfidentialComputeMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
