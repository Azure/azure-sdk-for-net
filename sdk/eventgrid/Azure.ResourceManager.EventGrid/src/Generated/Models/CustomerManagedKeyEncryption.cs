// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.EventGrid.Models
{
    /// <summary> All Customer-managed key encryption properties for the resource. </summary>
    public partial class CustomerManagedKeyEncryption
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CustomerManagedKeyEncryption"/>. </summary>
        /// <param name="keyEncryptionKeyUri">
        /// Key encryption key URL. This URL can be either versioned (e.g., https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78), or unversioned (e.g.,
        /// https://contosovault.vault.azure.net/keys/contosokek. When versioned URL is used, this version of the key will be used by Event Grid Runtime even if it is rotated. It is user
        /// responsibility to update the URL with the new version by updating the namespace resource. When URL without version is used, Event Grid will query and get latest version and will
        /// be used automatically.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyEncryptionKeyUri"/> is null. </exception>
        public CustomerManagedKeyEncryption(Uri keyEncryptionKeyUri)
        {
            Argument.AssertNotNull(keyEncryptionKeyUri, nameof(keyEncryptionKeyUri));

            KeyEncryptionKeyUri = keyEncryptionKeyUri;
        }

        /// <summary> Initializes a new instance of <see cref="CustomerManagedKeyEncryption"/>. </summary>
        /// <param name="keyEncryptionKeyUri">
        /// Key encryption key URL. This URL can be either versioned (e.g., https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78), or unversioned (e.g.,
        /// https://contosovault.vault.azure.net/keys/contosokek. When versioned URL is used, this version of the key will be used by Event Grid Runtime even if it is rotated. It is user
        /// responsibility to update the URL with the new version by updating the namespace resource. When URL without version is used, Event Grid will query and get latest version and will
        /// be used automatically.
        /// </param>
        /// <param name="keyEncryptionKeyIdentity">
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault. This is an optional property.
        /// When not specified, the SystemAssigned identity will be used.
        /// </param>
        /// <param name="keyEncryptionKeyStatus">
        /// The state of the Customer Managed Key (CMK) encryption. This is a read-only property which determines if the associated key is active and valid and used
        /// actively by runtime as expected. When the associated CMK becomes invalid (e.g., if it is deleted, or if versioned CMK is not current anymore), Event Grid
        /// Service will set this state to disabled to indicate that this key is not valid anymore and requires action from user.
        /// </param>
        /// <param name="keyEncryptionKeyStatusFriendlyDescription">
        /// Friendly description about the Customer Managed Key (CMK) encryption state. This is a read-only property which determines why the associated key is revoked which
        /// will help user to mitigate the issue and re-enable the CMK key.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CustomerManagedKeyEncryption(Uri keyEncryptionKeyUri, KeyEncryptionKeyIdentity keyEncryptionKeyIdentity, KeyEncryptionKeyStatus? keyEncryptionKeyStatus, string keyEncryptionKeyStatusFriendlyDescription, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyEncryptionKeyUri = keyEncryptionKeyUri;
            KeyEncryptionKeyIdentity = keyEncryptionKeyIdentity;
            KeyEncryptionKeyStatus = keyEncryptionKeyStatus;
            KeyEncryptionKeyStatusFriendlyDescription = keyEncryptionKeyStatusFriendlyDescription;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CustomerManagedKeyEncryption"/> for deserialization. </summary>
        internal CustomerManagedKeyEncryption()
        {
        }

        /// <summary>
        /// Key encryption key URL. This URL can be either versioned (e.g., https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78), or unversioned (e.g.,
        /// https://contosovault.vault.azure.net/keys/contosokek. When versioned URL is used, this version of the key will be used by Event Grid Runtime even if it is rotated. It is user
        /// responsibility to update the URL with the new version by updating the namespace resource. When URL without version is used, Event Grid will query and get latest version and will
        /// be used automatically.
        /// </summary>
        [WirePath("keyEncryptionKeyUrl")]
        public Uri KeyEncryptionKeyUri { get; set; }
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault. This is an optional property.
        /// When not specified, the SystemAssigned identity will be used.
        /// </summary>
        [WirePath("keyEncryptionKeyIdentity")]
        public KeyEncryptionKeyIdentity KeyEncryptionKeyIdentity { get; set; }
        /// <summary>
        /// The state of the Customer Managed Key (CMK) encryption. This is a read-only property which determines if the associated key is active and valid and used
        /// actively by runtime as expected. When the associated CMK becomes invalid (e.g., if it is deleted, or if versioned CMK is not current anymore), Event Grid
        /// Service will set this state to disabled to indicate that this key is not valid anymore and requires action from user.
        /// </summary>
        [WirePath("keyEncryptionKeyStatus")]
        public KeyEncryptionKeyStatus? KeyEncryptionKeyStatus { get; }
        /// <summary>
        /// Friendly description about the Customer Managed Key (CMK) encryption state. This is a read-only property which determines why the associated key is revoked which
        /// will help user to mitigate the issue and re-enable the CMK key.
        /// </summary>
        [WirePath("keyEncryptionKeyStatusFriendlyDescription")]
        public string KeyEncryptionKeyStatusFriendlyDescription { get; }
    }
}
