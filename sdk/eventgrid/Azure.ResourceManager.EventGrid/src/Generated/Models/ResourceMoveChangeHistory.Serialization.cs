// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EventGrid.Models
{
    public partial class ResourceMoveChangeHistory : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(AzureSubscriptionId))
            {
                writer.WritePropertyName("azureSubscriptionId"u8);
                writer.WriteStringValue(AzureSubscriptionId);
            }
            if (Core.Optional.IsDefined(ResourceGroupName))
            {
                writer.WritePropertyName("resourceGroupName"u8);
                writer.WriteStringValue(ResourceGroupName);
            }
            if (Core.Optional.IsDefined(ChangedTimeUtc))
            {
                writer.WritePropertyName("changedTimeUtc"u8);
                writer.WriteStringValue(ChangedTimeUtc.Value, "O");
            }
            writer.WriteEndObject();
        }

        internal static ResourceMoveChangeHistory DeserializeResourceMoveChangeHistory(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> azureSubscriptionId = default;
            Core.Optional<string> resourceGroupName = default;
            Core.Optional<DateTimeOffset> changedTimeUtc = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("azureSubscriptionId"u8))
                {
                    azureSubscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceGroupName"u8))
                {
                    resourceGroupName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("changedTimeUtc"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    changedTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new ResourceMoveChangeHistory(azureSubscriptionId.Value, resourceGroupName.Value, Core.Optional.ToNullable(changedTimeUtc));
        }
    }
}
