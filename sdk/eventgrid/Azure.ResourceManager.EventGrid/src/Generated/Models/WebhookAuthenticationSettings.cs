// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.EventGrid.Models
{
    /// <summary> Authentication settings for a webhook endpoint within a Namespace resource. </summary>
    public partial class WebhookAuthenticationSettings
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="WebhookAuthenticationSettings"/>. </summary>
        /// <param name="identity"> The identity configuration required for authenticating a custom webhook. </param>
        /// <param name="endpointUri"> The URL endpoint where the Event Grid service sends authenticated webhook requests using the specified managed identity. </param>
        /// <param name="azureActiveDirectoryApplicationIdOrUri"> Microsoft Entra ID Application ID or URI to get the access token that will be included as the bearer token in delivery requests. </param>
        /// <param name="azureActiveDirectoryTenantId"> Microsoft Entra ID Tenant ID to get the access token that will be included as the bearer token in delivery requests. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="identity"/>, <paramref name="endpointUri"/>, <paramref name="azureActiveDirectoryApplicationIdOrUri"/> or <paramref name="azureActiveDirectoryTenantId"/> is null. </exception>
        public WebhookAuthenticationSettings(CustomWebhookAuthenticationManagedIdentity identity, Uri endpointUri, Uri azureActiveDirectoryApplicationIdOrUri, string azureActiveDirectoryTenantId)
        {
            Argument.AssertNotNull(identity, nameof(identity));
            Argument.AssertNotNull(endpointUri, nameof(endpointUri));
            Argument.AssertNotNull(azureActiveDirectoryApplicationIdOrUri, nameof(azureActiveDirectoryApplicationIdOrUri));
            Argument.AssertNotNull(azureActiveDirectoryTenantId, nameof(azureActiveDirectoryTenantId));

            Identity = identity;
            EndpointUri = endpointUri;
            AzureActiveDirectoryApplicationIdOrUri = azureActiveDirectoryApplicationIdOrUri;
            AzureActiveDirectoryTenantId = azureActiveDirectoryTenantId;
        }

        /// <summary> Initializes a new instance of <see cref="WebhookAuthenticationSettings"/>. </summary>
        /// <param name="identity"> The identity configuration required for authenticating a custom webhook. </param>
        /// <param name="endpointUri"> The URL endpoint where the Event Grid service sends authenticated webhook requests using the specified managed identity. </param>
        /// <param name="endpointBaseUri"> The base URL endpoint where the Event Grid service sends authenticated webhook requests using the specified managed identity. </param>
        /// <param name="azureActiveDirectoryApplicationIdOrUri"> Microsoft Entra ID Application ID or URI to get the access token that will be included as the bearer token in delivery requests. </param>
        /// <param name="azureActiveDirectoryTenantId"> Microsoft Entra ID Tenant ID to get the access token that will be included as the bearer token in delivery requests. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal WebhookAuthenticationSettings(CustomWebhookAuthenticationManagedIdentity identity, Uri endpointUri, Uri endpointBaseUri, Uri azureActiveDirectoryApplicationIdOrUri, string azureActiveDirectoryTenantId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Identity = identity;
            EndpointUri = endpointUri;
            EndpointBaseUri = endpointBaseUri;
            AzureActiveDirectoryApplicationIdOrUri = azureActiveDirectoryApplicationIdOrUri;
            AzureActiveDirectoryTenantId = azureActiveDirectoryTenantId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="WebhookAuthenticationSettings"/> for deserialization. </summary>
        internal WebhookAuthenticationSettings()
        {
        }

        /// <summary> The identity configuration required for authenticating a custom webhook. </summary>
        [WirePath("identity")]
        public CustomWebhookAuthenticationManagedIdentity Identity { get; set; }
        /// <summary> The URL endpoint where the Event Grid service sends authenticated webhook requests using the specified managed identity. </summary>
        [WirePath("endpointUrl")]
        public Uri EndpointUri { get; set; }
        /// <summary> The base URL endpoint where the Event Grid service sends authenticated webhook requests using the specified managed identity. </summary>
        [WirePath("endpointBaseUrl")]
        public Uri EndpointBaseUri { get; set; }
        /// <summary> Microsoft Entra ID Application ID or URI to get the access token that will be included as the bearer token in delivery requests. </summary>
        [WirePath("azureActiveDirectoryApplicationIdOrUri")]
        public Uri AzureActiveDirectoryApplicationIdOrUri { get; set; }
        /// <summary> Microsoft Entra ID Tenant ID to get the access token that will be included as the bearer token in delivery requests. </summary>
        [WirePath("azureActiveDirectoryTenantId")]
        public string AzureActiveDirectoryTenantId { get; set; }
    }
}
