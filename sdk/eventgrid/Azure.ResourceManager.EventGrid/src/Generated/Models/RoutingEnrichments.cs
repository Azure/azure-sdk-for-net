// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.EventGrid.Models
{
    /// <summary> The RoutingEnrichments. </summary>
    public partial class RoutingEnrichments
    {
        /// <summary> Initializes a new instance of <see cref="RoutingEnrichments"/>. </summary>
        public RoutingEnrichments()
        {
            Static = new ChangeTrackingList<StaticRoutingEnrichment>();
            Dynamic = new ChangeTrackingList<DynamicRoutingEnrichment>();
        }

        /// <summary> Initializes a new instance of <see cref="RoutingEnrichments"/>. </summary>
        /// <param name="static">
        /// Please note <see cref="StaticRoutingEnrichment"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="StaticStringRoutingEnrichment"/>.
        /// </param>
        /// <param name="dynamic"></param>
        internal RoutingEnrichments(IList<StaticRoutingEnrichment> @static, IList<DynamicRoutingEnrichment> @dynamic)
        {
            Static = @static;
            Dynamic = @dynamic;
        }

        /// <summary>
        /// Gets the static
        /// Please note <see cref="StaticRoutingEnrichment"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="StaticStringRoutingEnrichment"/>.
        /// </summary>
        public IList<StaticRoutingEnrichment> Static { get; }
        /// <summary> Gets the dynamic. </summary>
        public IList<DynamicRoutingEnrichment> Dynamic { get; }
    }
}
