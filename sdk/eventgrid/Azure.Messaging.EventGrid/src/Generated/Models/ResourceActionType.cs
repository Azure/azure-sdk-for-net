// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Action occurred on a resource. </summary>
    public readonly partial struct ResourceActionType : IEquatable<ResourceActionType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ResourceActionType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ResourceActionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatedValue = "Created";
        private const string UpdatedValue = "Updated";
        private const string DeletedValue = "Deleted";

        /// <summary> Created. </summary>
        public static ResourceActionType Created { get; } = new ResourceActionType(CreatedValue);
        /// <summary> Updated. </summary>
        public static ResourceActionType Updated { get; } = new ResourceActionType(UpdatedValue);
        /// <summary> Deleted. </summary>
        public static ResourceActionType Deleted { get; } = new ResourceActionType(DeletedValue);
        /// <summary> Determines if two <see cref="ResourceActionType"/> values are the same. </summary>
        public static bool operator ==(ResourceActionType left, ResourceActionType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ResourceActionType"/> values are not the same. </summary>
        public static bool operator !=(ResourceActionType left, ResourceActionType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ResourceActionType"/>. </summary>
        public static implicit operator ResourceActionType(string value) => new ResourceActionType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ResourceActionType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ResourceActionType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
