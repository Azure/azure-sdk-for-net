// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Incoming streams out of sync event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingStreamsOutOfSync event. </summary>
    public partial class MediaLiveEventIncomingStreamsOutOfSyncEventData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MediaLiveEventIncomingStreamsOutOfSyncEventData"/>. </summary>
        internal MediaLiveEventIncomingStreamsOutOfSyncEventData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MediaLiveEventIncomingStreamsOutOfSyncEventData"/>. </summary>
        /// <param name="minLastTimestamp"> Gets the minimum last timestamp received. </param>
        /// <param name="typeOfStreamWithMinLastTimestamp"> Gets the type of stream with minimum last timestamp. </param>
        /// <param name="maxLastTimestamp"> Gets the maximum timestamp among all the tracks (audio or video). </param>
        /// <param name="typeOfStreamWithMaxLastTimestamp"> Gets the type of stream with maximum last timestamp. </param>
        /// <param name="timescaleOfMinLastTimestamp"> Gets the timescale in which "MinLastTimestamp" is represented. </param>
        /// <param name="timescaleOfMaxLastTimestamp"> Gets the timescale in which "MaxLastTimestamp" is represented. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MediaLiveEventIncomingStreamsOutOfSyncEventData(string minLastTimestamp, string typeOfStreamWithMinLastTimestamp, string maxLastTimestamp, string typeOfStreamWithMaxLastTimestamp, string timescaleOfMinLastTimestamp, string timescaleOfMaxLastTimestamp, Dictionary<string, BinaryData> rawData)
        {
            MinLastTimestamp = minLastTimestamp;
            TypeOfStreamWithMinLastTimestamp = typeOfStreamWithMinLastTimestamp;
            MaxLastTimestamp = maxLastTimestamp;
            TypeOfStreamWithMaxLastTimestamp = typeOfStreamWithMaxLastTimestamp;
            TimescaleOfMinLastTimestamp = timescaleOfMinLastTimestamp;
            TimescaleOfMaxLastTimestamp = timescaleOfMaxLastTimestamp;
            _rawData = rawData;
        }

        /// <summary> Gets the minimum last timestamp received. </summary>
        public string MinLastTimestamp { get; }
        /// <summary> Gets the type of stream with minimum last timestamp. </summary>
        public string TypeOfStreamWithMinLastTimestamp { get; }
        /// <summary> Gets the maximum timestamp among all the tracks (audio or video). </summary>
        public string MaxLastTimestamp { get; }
        /// <summary> Gets the type of stream with maximum last timestamp. </summary>
        public string TypeOfStreamWithMaxLastTimestamp { get; }
        /// <summary> Gets the timescale in which "MinLastTimestamp" is represented. </summary>
        public string TimescaleOfMinLastTimestamp { get; }
        /// <summary> Gets the timescale in which "MaxLastTimestamp" is represented. </summary>
        public string TimescaleOfMaxLastTimestamp { get; }
    }
}
