// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(StorageBlobInventoryPolicyCompletedEventDataConverter))]
    public partial class StorageBlobInventoryPolicyCompletedEventData
    {
        internal static StorageBlobInventoryPolicyCompletedEventData DeserializeStorageBlobInventoryPolicyCompletedEventData(JsonElement element)
        {
            Optional<DateTimeOffset> scheduleDateTime = default;
            Optional<string> accountName = default;
            Optional<string> ruleName = default;
            Optional<string> policyRunStatus = default;
            Optional<string> policyRunStatusMessage = default;
            Optional<string> policyRunId = default;
            Optional<string> manifestBlobUrl = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("scheduleDateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    scheduleDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("accountName"))
                {
                    accountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ruleName"))
                {
                    ruleName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("policyRunStatus"))
                {
                    policyRunStatus = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("policyRunStatusMessage"))
                {
                    policyRunStatusMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("policyRunId"))
                {
                    policyRunId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("manifestBlobUrl"))
                {
                    manifestBlobUrl = property.Value.GetString();
                    continue;
                }
            }
            return new StorageBlobInventoryPolicyCompletedEventData(Optional.ToNullable(scheduleDateTime), accountName.Value, ruleName.Value, policyRunStatus.Value, policyRunStatusMessage.Value, policyRunId.Value, manifestBlobUrl.Value);
        }

        internal partial class StorageBlobInventoryPolicyCompletedEventDataConverter : JsonConverter<StorageBlobInventoryPolicyCompletedEventData>
        {
            public override void Write(Utf8JsonWriter writer, StorageBlobInventoryPolicyCompletedEventData model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }
            public override StorageBlobInventoryPolicyCompletedEventData Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeStorageBlobInventoryPolicyCompletedEventData(document.RootElement);
            }
        }
    }
}
