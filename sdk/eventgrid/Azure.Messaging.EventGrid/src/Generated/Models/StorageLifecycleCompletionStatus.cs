// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Policy status can be Completed/CompletedWithError/Incomplete. </summary>
    public readonly partial struct StorageLifecycleCompletionStatus : IEquatable<StorageLifecycleCompletionStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="StorageLifecycleCompletionStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public StorageLifecycleCompletionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CompletedValue = "Completed";
        private const string CompletedWithErrorValue = "CompletedWithError";
        private const string IncompleteValue = "Incomplete";

        /// <summary> Completed. </summary>
        public static StorageLifecycleCompletionStatus Completed { get; } = new StorageLifecycleCompletionStatus(CompletedValue);
        /// <summary> CompletedWithError. </summary>
        public static StorageLifecycleCompletionStatus CompletedWithError { get; } = new StorageLifecycleCompletionStatus(CompletedWithErrorValue);
        /// <summary> Incomplete. </summary>
        public static StorageLifecycleCompletionStatus Incomplete { get; } = new StorageLifecycleCompletionStatus(IncompleteValue);
        /// <summary> Determines if two <see cref="StorageLifecycleCompletionStatus"/> values are the same. </summary>
        public static bool operator ==(StorageLifecycleCompletionStatus left, StorageLifecycleCompletionStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="StorageLifecycleCompletionStatus"/> values are not the same. </summary>
        public static bool operator !=(StorageLifecycleCompletionStatus left, StorageLifecycleCompletionStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="StorageLifecycleCompletionStatus"/>. </summary>
        public static implicit operator StorageLifecycleCompletionStatus(string value) => new StorageLifecycleCompletionStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is StorageLifecycleCompletionStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(StorageLifecycleCompletionStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
