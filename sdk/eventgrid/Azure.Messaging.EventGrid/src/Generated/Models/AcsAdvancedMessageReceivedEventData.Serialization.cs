// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(AcsAdvancedMessageReceivedEventDataConverter))]
    public partial class AcsAdvancedMessageReceivedEventData
    {
        internal static AcsAdvancedMessageReceivedEventData DeserializeAcsAdvancedMessageReceivedEventData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string content = default;
            AcsMessageChannelKind? channelType = default;
            AcsAdvancedMessageMediaContent media = default;
            AcsAdvancedMessageContext context = default;
            AcsAdvancedMessageButtonContent button = default;
            AcsAdvancedMessageInteractiveContent interactive = default;
            string @from = default;
            string to = default;
            DateTimeOffset? receivedTimestamp = default;
            AcsAdvancedMessageChannelEventError error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("content"u8))
                {
                    content = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("channelType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    channelType = new AcsMessageChannelKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("media"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    media = AcsAdvancedMessageMediaContent.DeserializeAcsAdvancedMessageMediaContent(property.Value);
                    continue;
                }
                if (property.NameEquals("context"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    context = AcsAdvancedMessageContext.DeserializeAcsAdvancedMessageContext(property.Value);
                    continue;
                }
                if (property.NameEquals("button"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    button = AcsAdvancedMessageButtonContent.DeserializeAcsAdvancedMessageButtonContent(property.Value);
                    continue;
                }
                if (property.NameEquals("interactive"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    interactive = AcsAdvancedMessageInteractiveContent.DeserializeAcsAdvancedMessageInteractiveContent(property.Value);
                    continue;
                }
                if (property.NameEquals("from"u8))
                {
                    @from = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("to"u8))
                {
                    to = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("receivedTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    receivedTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    error = AcsAdvancedMessageChannelEventError.DeserializeAcsAdvancedMessageChannelEventError(property.Value);
                    continue;
                }
            }
            return new AcsAdvancedMessageReceivedEventData(
                @from,
                to,
                receivedTimestamp,
                error,
                content,
                channelType,
                media,
                context,
                button,
                interactive);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static new AcsAdvancedMessageReceivedEventData FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeAcsAdvancedMessageReceivedEventData(document.RootElement);
        }

        internal partial class AcsAdvancedMessageReceivedEventDataConverter : JsonConverter<AcsAdvancedMessageReceivedEventData>
        {
            public override void Write(Utf8JsonWriter writer, AcsAdvancedMessageReceivedEventData model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }

            public override AcsAdvancedMessageReceivedEventData Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeAcsAdvancedMessageReceivedEventData(document.RootElement);
            }
        }
    }
}
