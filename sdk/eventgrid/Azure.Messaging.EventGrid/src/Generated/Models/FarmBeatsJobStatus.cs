// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> Various states a job can be in. </summary>
    public readonly partial struct FarmBeatsJobStatus : IEquatable<FarmBeatsJobStatus>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="FarmBeatsJobStatus"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public FarmBeatsJobStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string WaitingValue = "Waiting";
        private const string RunningValue = "Running";
        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";
        private const string CancelledValue = "Cancelled";

        /// <summary> Waiting. </summary>
        public static FarmBeatsJobStatus Waiting { get; } = new FarmBeatsJobStatus(WaitingValue);
        /// <summary> Running. </summary>
        public static FarmBeatsJobStatus Running { get; } = new FarmBeatsJobStatus(RunningValue);
        /// <summary> Succeeded. </summary>
        public static FarmBeatsJobStatus Succeeded { get; } = new FarmBeatsJobStatus(SucceededValue);
        /// <summary> Failed. </summary>
        public static FarmBeatsJobStatus Failed { get; } = new FarmBeatsJobStatus(FailedValue);
        /// <summary> Cancelled. </summary>
        public static FarmBeatsJobStatus Cancelled { get; } = new FarmBeatsJobStatus(CancelledValue);
        /// <summary> Determines if two <see cref="FarmBeatsJobStatus"/> values are the same. </summary>
        public static bool operator ==(FarmBeatsJobStatus left, FarmBeatsJobStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="FarmBeatsJobStatus"/> values are not the same. </summary>
        public static bool operator !=(FarmBeatsJobStatus left, FarmBeatsJobStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="FarmBeatsJobStatus"/>. </summary>
        public static implicit operator FarmBeatsJobStatus(string value) => new FarmBeatsJobStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is FarmBeatsJobStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(FarmBeatsJobStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
