// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(MediaJobOutputAssetConverter))]
    public partial class MediaJobOutputAsset
    {
        internal static MediaJobOutputAsset DeserializeMediaJobOutputAsset(JsonElement element)
        {
            Optional<string> assetName = default;
            Optional<string> odataType = default;
            Optional<MediaJobError> error = default;
            Optional<string> label = default;
            long progress = default;
            MediaJobState state = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assetName"))
                {
                    assetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("@odata.type"))
                {
                    odataType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = MediaJobError.DeserializeMediaJobError(property.Value);
                    continue;
                }
                if (property.NameEquals("label"))
                {
                    label = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("progress"))
                {
                    progress = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("state"))
                {
                    state = property.Value.GetString().ToMediaJobState();
                    continue;
                }
            }
            return new MediaJobOutputAsset(odataType.Value, error.Value, label.Value, progress, state, assetName.Value);
        }

        internal partial class MediaJobOutputAssetConverter : JsonConverter<MediaJobOutputAsset>
        {
            public override void Write(Utf8JsonWriter writer, MediaJobOutputAsset model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override MediaJobOutputAsset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeMediaJobOutputAsset(document.RootElement);
            }
        }
    }
}
