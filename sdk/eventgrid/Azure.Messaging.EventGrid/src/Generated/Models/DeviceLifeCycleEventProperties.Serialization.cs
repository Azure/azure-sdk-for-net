// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    [JsonConverter(typeof(DeviceLifeCycleEventPropertiesConverter))]
    public partial class DeviceLifeCycleEventProperties
    {
        internal static DeviceLifeCycleEventProperties DeserializeDeviceLifeCycleEventProperties(JsonElement element)
        {
            Optional<string> deviceId = default;
            Optional<string> hubName = default;
            Optional<DeviceTwinInfo> twin = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceId"))
                {
                    deviceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hubName"))
                {
                    hubName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("twin"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    twin = DeviceTwinInfo.DeserializeDeviceTwinInfo(property.Value);
                    continue;
                }
            }
            return new DeviceLifeCycleEventProperties(deviceId.Value, hubName.Value, twin.Value);
        }

        internal partial class DeviceLifeCycleEventPropertiesConverter : JsonConverter<DeviceLifeCycleEventProperties>
        {
            public override void Write(Utf8JsonWriter writer, DeviceLifeCycleEventProperties model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override DeviceLifeCycleEventProperties Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeDeviceLifeCycleEventProperties(document.RootElement);
            }
        }
    }
}
