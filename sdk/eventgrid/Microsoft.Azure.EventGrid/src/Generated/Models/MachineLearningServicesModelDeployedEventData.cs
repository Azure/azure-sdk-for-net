// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Schema of the Data property of an EventGridEvent for an
    /// Microsoft.MachineLearningServices.ModelDeployed event.
    /// </summary>
    public partial class MachineLearningServicesModelDeployedEventData
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MachineLearningServicesModelDeployedEventData class.
        /// </summary>
        public MachineLearningServicesModelDeployedEventData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MachineLearningServicesModelDeployedEventData class.
        /// </summary>
        /// <param name="serviceName">The name of the deployed service.</param>
        /// <param name="serviceComputeType">The compute type (e.g. ACI, AKS)
        /// of the deployed service.</param>
        /// <param name="modelIds">A common separated list of model IDs. The
        /// IDs of the models deployed in the service.</param>
        /// <param name="serviceTags">The tags of the deployed service.</param>
        /// <param name="serviceProperties">The properties of the deployed
        /// service.</param>
        public MachineLearningServicesModelDeployedEventData(string serviceName = default(string), string serviceComputeType = default(string), string modelIds = default(string), object serviceTags = default(object), object serviceProperties = default(object))
        {
            ServiceName = serviceName;
            ServiceComputeType = serviceComputeType;
            ModelIds = modelIds;
            ServiceTags = serviceTags;
            ServiceProperties = serviceProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the deployed service.
        /// </summary>
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// Gets or sets the compute type (e.g. ACI, AKS) of the deployed
        /// service.
        /// </summary>
        [JsonProperty(PropertyName = "serviceComputeType")]
        public string ServiceComputeType { get; set; }

        /// <summary>
        /// Gets or sets a common separated list of model IDs. The IDs of the
        /// models deployed in the service.
        /// </summary>
        [JsonProperty(PropertyName = "modelIds")]
        public string ModelIds { get; set; }

        /// <summary>
        /// Gets or sets the tags of the deployed service.
        /// </summary>
        [JsonProperty(PropertyName = "serviceTags")]
        public object ServiceTags { get; set; }

        /// <summary>
        /// Gets or sets the properties of the deployed service.
        /// </summary>
        [JsonProperty(PropertyName = "serviceProperties")]
        public object ServiceProperties { get; set; }

    }
}
