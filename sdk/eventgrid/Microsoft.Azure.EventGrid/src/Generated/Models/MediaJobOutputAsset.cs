// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The event data for a Job output asset.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.JobOutputAsset")]
    public partial class MediaJobOutputAsset : MediaJobOutput
    {
        /// <summary>
        /// Initializes a new instance of the MediaJobOutputAsset class.
        /// </summary>
        public MediaJobOutputAsset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaJobOutputAsset class.
        /// </summary>
        /// <param name="progress">Gets the Job output progress.</param>
        /// <param name="state">Gets the Job output state. Possible values
        /// include: 'Canceled', 'Canceling', 'Error', 'Finished',
        /// 'Processing', 'Queued', 'Scheduled'</param>
        /// <param name="error">Gets the Job output error.</param>
        /// <param name="label">Gets the Job output label.</param>
        /// <param name="assetName">Gets the Job output asset name.</param>
        public MediaJobOutputAsset(long progress, MediaJobState state, MediaJobError error = default(MediaJobError), string label = default(string), string assetName = default(string))
            : base(progress, state, error, label)
        {
            AssetName = assetName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Job output asset name.
        /// </summary>
        [JsonProperty(PropertyName = "assetName")]
        public string AssetName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
