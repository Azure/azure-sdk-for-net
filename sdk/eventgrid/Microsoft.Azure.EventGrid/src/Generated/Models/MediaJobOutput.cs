// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The event data for a Job output.
    /// </summary>
    [Newtonsoft.Json.JsonObject("MediaJobOutput")]
    public partial class MediaJobOutput
    {
        /// <summary>
        /// Initializes a new instance of the MediaJobOutput class.
        /// </summary>
        public MediaJobOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaJobOutput class.
        /// </summary>
        /// <param name="progress">Gets the Job output progress.</param>
        /// <param name="state">Gets the Job output state. Possible values
        /// include: 'Canceled', 'Canceling', 'Error', 'Finished',
        /// 'Processing', 'Queued', 'Scheduled'</param>
        /// <param name="error">Gets the Job output error.</param>
        /// <param name="label">Gets the Job output label.</param>
        public MediaJobOutput(long progress, MediaJobState state, MediaJobError error = default(MediaJobError), string label = default(string))
        {
            Error = error;
            Label = label;
            Progress = progress;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Job output error.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public MediaJobError Error { get; set; }

        /// <summary>
        /// Gets the Job output label.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Gets the Job output progress.
        /// </summary>
        [JsonProperty(PropertyName = "progress")]
        public long Progress { get; set; }

        /// <summary>
        /// Gets the Job output state. Possible values include: 'Canceled',
        /// 'Canceling', 'Error', 'Finished', 'Processing', 'Queued',
        /// 'Scheduled'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public MediaJobState State { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
