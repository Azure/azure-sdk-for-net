// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Incoming streams out of sync event data.
    /// </summary>
    public partial class MediaLiveEventIncomingStreamsOutOfSyncEventData
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MediaLiveEventIncomingStreamsOutOfSyncEventData class.
        /// </summary>
        public MediaLiveEventIncomingStreamsOutOfSyncEventData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MediaLiveEventIncomingStreamsOutOfSyncEventData class.
        /// </summary>
        /// <param name="minLastTimestamp">Gets the minimum last timestamp
        /// received.</param>
        /// <param name="typeOfStreamWithMinLastTimestamp">Gets the type of
        /// stream with minimum last timestamp.</param>
        /// <param name="maxLastTimestamp">Gets the maximum timestamp among all
        /// the tracks (audio or video).</param>
        /// <param name="typeOfStreamWithMaxLastTimestamp">Gets the type of
        /// stream with maximum last timestamp.</param>
        /// <param name="timescaleOfMinLastTimestamp">Gets the timescale in
        /// which "MinLastTimestamp" is represented.</param>
        /// <param name="timescaleOfMaxLastTimestamp">Gets the timescale in
        /// which "MaxLastTimestamp" is represented.</param>
        public MediaLiveEventIncomingStreamsOutOfSyncEventData(string minLastTimestamp = default(string), string typeOfStreamWithMinLastTimestamp = default(string), string maxLastTimestamp = default(string), string typeOfStreamWithMaxLastTimestamp = default(string), string timescaleOfMinLastTimestamp = default(string), string timescaleOfMaxLastTimestamp = default(string))
        {
            MinLastTimestamp = minLastTimestamp;
            TypeOfStreamWithMinLastTimestamp = typeOfStreamWithMinLastTimestamp;
            MaxLastTimestamp = maxLastTimestamp;
            TypeOfStreamWithMaxLastTimestamp = typeOfStreamWithMaxLastTimestamp;
            TimescaleOfMinLastTimestamp = timescaleOfMinLastTimestamp;
            TimescaleOfMaxLastTimestamp = timescaleOfMaxLastTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the minimum last timestamp received.
        /// </summary>
        [JsonProperty(PropertyName = "minLastTimestamp")]
        public string MinLastTimestamp { get; private set; }

        /// <summary>
        /// Gets the type of stream with minimum last timestamp.
        /// </summary>
        [JsonProperty(PropertyName = "typeOfStreamWithMinLastTimestamp")]
        public string TypeOfStreamWithMinLastTimestamp { get; private set; }

        /// <summary>
        /// Gets the maximum timestamp among all the tracks (audio or video).
        /// </summary>
        [JsonProperty(PropertyName = "maxLastTimestamp")]
        public string MaxLastTimestamp { get; private set; }

        /// <summary>
        /// Gets the type of stream with maximum last timestamp.
        /// </summary>
        [JsonProperty(PropertyName = "typeOfStreamWithMaxLastTimestamp")]
        public string TypeOfStreamWithMaxLastTimestamp { get; private set; }

        /// <summary>
        /// Gets the timescale in which "MinLastTimestamp" is represented.
        /// </summary>
        [JsonProperty(PropertyName = "timescaleOfMinLastTimestamp")]
        public string TimescaleOfMinLastTimestamp { get; private set; }

        /// <summary>
        /// Gets the timescale in which "MaxLastTimestamp" is represented.
        /// </summary>
        [JsonProperty(PropertyName = "timescaleOfMaxLastTimestamp")]
        public string TimescaleOfMaxLastTimestamp { get; private set; }

    }
}
