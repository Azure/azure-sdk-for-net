// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventGrid.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Event Subscription
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EventSubscription : Resource
    {
        /// <summary>
        /// Initializes a new instance of the EventSubscription class.
        /// </summary>
        public EventSubscription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventSubscription class.
        /// </summary>
        /// <param name="id">Fully qualified identifier of the
        /// resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of the resource.</param>
        /// <param name="topic">Name of the topic of the event
        /// subscription.</param>
        /// <param name="provisioningState">Provisioning state of the event
        /// subscription. Possible values include: 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Canceled', 'Failed',
        /// 'AwaitingManualAction'</param>
        /// <param name="destination">Information about the destination where
        /// events have to be delivered for the event subscription.
        /// Uses Azure Event Grid's identity to acquire the authentication
        /// tokens being used during delivery / dead-lettering.</param>
        /// <param name="deliveryWithResourceIdentity">Information about the
        /// destination where events have to be delivered for the event
        /// subscription.
        /// Uses the managed identity setup on the parent resource (namely,
        /// topic or domain) to acquire the authentication tokens being used
        /// during delivery / dead-lettering.</param>
        /// <param name="filter">Information about the filter for the event
        /// subscription.</param>
        /// <param name="labels">List of user defined labels.</param>
        /// <param name="expirationTimeUtc">Expiration time of the event
        /// subscription.</param>
        /// <param name="eventDeliverySchema">The event delivery schema for the
        /// event subscription. Possible values include: 'EventGridSchema',
        /// 'CustomInputSchema', 'CloudEventSchemaV1_0'</param>
        /// <param name="retryPolicy">The retry policy for events. This can be
        /// used to configure maximum number of delivery attempts and time to
        /// live for events.</param>
        /// <param name="deadLetterDestination">The dead letter destination of
        /// the event subscription. Any event that cannot be delivered to its'
        /// destination is sent to the dead letter destination.
        /// Uses Azure Event Grid's identity to acquire the authentication
        /// tokens being used during delivery / dead-lettering.</param>
        /// <param name="deadLetterWithResourceIdentity">The dead letter
        /// destination of the event subscription. Any event that cannot be
        /// delivered to its' destination is sent to the dead letter
        /// destination.
        /// Uses the managed identity setup on the parent resource (namely,
        /// topic or domain) to acquire the authentication tokens being used
        /// during delivery / dead-lettering.</param>
        /// <param name="systemData">The system metadata relating to Event
        /// Subscription resource.</param>
        public EventSubscription(string id = default(string), string name = default(string), string type = default(string), string topic = default(string), string provisioningState = default(string), EventSubscriptionDestination destination = default(EventSubscriptionDestination), DeliveryWithResourceIdentity deliveryWithResourceIdentity = default(DeliveryWithResourceIdentity), EventSubscriptionFilter filter = default(EventSubscriptionFilter), IList<string> labels = default(IList<string>), System.DateTime? expirationTimeUtc = default(System.DateTime?), string eventDeliverySchema = default(string), RetryPolicy retryPolicy = default(RetryPolicy), DeadLetterDestination deadLetterDestination = default(DeadLetterDestination), DeadLetterWithResourceIdentity deadLetterWithResourceIdentity = default(DeadLetterWithResourceIdentity), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Topic = topic;
            ProvisioningState = provisioningState;
            Destination = destination;
            DeliveryWithResourceIdentity = deliveryWithResourceIdentity;
            Filter = filter;
            Labels = labels;
            ExpirationTimeUtc = expirationTimeUtc;
            EventDeliverySchema = eventDeliverySchema;
            RetryPolicy = retryPolicy;
            DeadLetterDestination = deadLetterDestination;
            DeadLetterWithResourceIdentity = deadLetterWithResourceIdentity;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the topic of the event subscription.
        /// </summary>
        [JsonProperty(PropertyName = "properties.topic")]
        public string Topic { get; private set; }

        /// <summary>
        /// Gets provisioning state of the event subscription. Possible values
        /// include: 'Creating', 'Updating', 'Deleting', 'Succeeded',
        /// 'Canceled', 'Failed', 'AwaitingManualAction'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets information about the destination where events have to
        /// be delivered for the event subscription.
        /// Uses Azure Event Grid's identity to acquire the authentication
        /// tokens being used during delivery / dead-lettering.
        /// </summary>
        [JsonProperty(PropertyName = "properties.destination")]
        public EventSubscriptionDestination Destination { get; set; }

        /// <summary>
        /// Gets or sets information about the destination where events have to
        /// be delivered for the event subscription.
        /// Uses the managed identity setup on the parent resource (namely,
        /// topic or domain) to acquire the authentication tokens being used
        /// during delivery / dead-lettering.
        /// </summary>
        [JsonProperty(PropertyName = "properties.deliveryWithResourceIdentity")]
        public DeliveryWithResourceIdentity DeliveryWithResourceIdentity { get; set; }

        /// <summary>
        /// Gets or sets information about the filter for the event
        /// subscription.
        /// </summary>
        [JsonProperty(PropertyName = "properties.filter")]
        public EventSubscriptionFilter Filter { get; set; }

        /// <summary>
        /// Gets or sets list of user defined labels.
        /// </summary>
        [JsonProperty(PropertyName = "properties.labels")]
        public IList<string> Labels { get; set; }

        /// <summary>
        /// Gets or sets expiration time of the event subscription.
        /// </summary>
        [JsonProperty(PropertyName = "properties.expirationTimeUtc")]
        public System.DateTime? ExpirationTimeUtc { get; set; }

        /// <summary>
        /// Gets or sets the event delivery schema for the event subscription.
        /// Possible values include: 'EventGridSchema', 'CustomInputSchema',
        /// 'CloudEventSchemaV1_0'
        /// </summary>
        [JsonProperty(PropertyName = "properties.eventDeliverySchema")]
        public string EventDeliverySchema { get; set; }

        /// <summary>
        /// Gets or sets the retry policy for events. This can be used to
        /// configure maximum number of delivery attempts and time to live for
        /// events.
        /// </summary>
        [JsonProperty(PropertyName = "properties.retryPolicy")]
        public RetryPolicy RetryPolicy { get; set; }

        /// <summary>
        /// Gets or sets the dead letter destination of the event subscription.
        /// Any event that cannot be delivered to its' destination is sent to
        /// the dead letter destination.
        /// Uses Azure Event Grid's identity to acquire the authentication
        /// tokens being used during delivery / dead-lettering.
        /// </summary>
        [JsonProperty(PropertyName = "properties.deadLetterDestination")]
        public DeadLetterDestination DeadLetterDestination { get; set; }

        /// <summary>
        /// Gets or sets the dead letter destination of the event subscription.
        /// Any event that cannot be delivered to its' destination is sent to
        /// the dead letter destination.
        /// Uses the managed identity setup on the parent resource (namely,
        /// topic or domain) to acquire the authentication tokens being used
        /// during delivery / dead-lettering.
        /// </summary>
        [JsonProperty(PropertyName = "properties.deadLetterWithResourceIdentity")]
        public DeadLetterWithResourceIdentity DeadLetterWithResourceIdentity { get; set; }

        /// <summary>
        /// Gets the system metadata relating to Event Subscription resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
