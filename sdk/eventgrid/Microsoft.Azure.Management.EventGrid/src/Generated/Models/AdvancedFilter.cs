// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This is the base type that represents an advanced filter. To configure
    /// an advanced filter, do not directly instantiate an object of this
    /// class. Instead, instantiate an object of a derived class such as
    /// BoolEqualsAdvancedFilter, NumberInAdvancedFilter,
    /// StringEqualsAdvancedFilter etc. depending on the type of the key based
    /// on which you want to filter.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AdvancedFilter")]
    public partial class AdvancedFilter
    {
        /// <summary>
        /// Initializes a new instance of the AdvancedFilter class.
        /// </summary>
        public AdvancedFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AdvancedFilter class.
        /// </summary>
        /// <param name="key">The field/property in the event based on which
        /// you want to filter.</param>
        public AdvancedFilter(string key = default(string))
        {
            Key = key;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the field/property in the event based on which you
        /// want to filter.
        /// </summary>
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }

    }
}
