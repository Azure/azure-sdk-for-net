// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about the partner.
    /// </summary>
    public partial class Partner
    {
        /// <summary>
        /// Initializes a new instance of the Partner class.
        /// </summary>
        public Partner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Partner class.
        /// </summary>
        /// <param name="partnerRegistrationImmutableId">The immutableId of the
        /// corresponding partner registration.</param>
        /// <param name="partnerName">The partner name.</param>
        /// <param name="authorizationExpirationTimeInUtc">Expiration time of
        /// the partner authorization. If this timer expires, any request from
        /// this partner to create, update or delete resources in subscriber's
        /// context will fail. If specified, the allowed values are between 1
        /// to the value of defaultMaximumExpirationTimeInDays specified in
        /// PartnerConfiguration.
        /// If not specified, the default value will be the value of
        /// defaultMaximumExpirationTimeInDays specified in
        /// PartnerConfiguration or 7 if this value is not specified.</param>
        public Partner(System.Guid? partnerRegistrationImmutableId = default(System.Guid?), string partnerName = default(string), System.DateTime? authorizationExpirationTimeInUtc = default(System.DateTime?))
        {
            PartnerRegistrationImmutableId = partnerRegistrationImmutableId;
            PartnerName = partnerName;
            AuthorizationExpirationTimeInUtc = authorizationExpirationTimeInUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the immutableId of the corresponding partner
        /// registration.
        /// </summary>
        [JsonProperty(PropertyName = "partnerRegistrationImmutableId")]
        public System.Guid? PartnerRegistrationImmutableId { get; set; }

        /// <summary>
        /// Gets or sets the partner name.
        /// </summary>
        [JsonProperty(PropertyName = "partnerName")]
        public string PartnerName { get; set; }

        /// <summary>
        /// Gets or sets expiration time of the partner authorization. If this
        /// timer expires, any request from this partner to create, update or
        /// delete resources in subscriber's
        /// context will fail. If specified, the allowed values are between 1
        /// to the value of defaultMaximumExpirationTimeInDays specified in
        /// PartnerConfiguration.
        /// If not specified, the default value will be the value of
        /// defaultMaximumExpirationTimeInDays specified in
        /// PartnerConfiguration or 7 if this value is not specified.
        /// </summary>
        [JsonProperty(PropertyName = "authorizationExpirationTimeInUtc")]
        public System.DateTime? AuthorizationExpirationTimeInUtc { get; set; }

    }
}
