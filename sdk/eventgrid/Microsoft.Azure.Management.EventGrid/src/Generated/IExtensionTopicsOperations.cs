// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventGrid
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ExtensionTopicsOperations operations.
    /// </summary>
    public partial interface IExtensionTopicsOperations
    {
        /// <summary>
        /// Get properties of an extension topic.
        /// </summary>
        /// <remarks>
        /// Get the properties of an extension topic.
        /// </remarks>
        /// <param name='scope'>
        /// The identifier of the resource to which extension topic is queried.
        /// The scope can be a subscription, or a resource group, or a top
        /// level resource belonging to a resource provider namespace. For
        /// example, use '/subscriptions/{subscriptionId}/' for a subscription,
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for a resource group, and
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        /// for Azure resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ExtensionTopic>> GetWithHttpMessagesAsync(string scope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
