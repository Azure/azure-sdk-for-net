// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This data object type contains the properties of a SCSI controller
    /// device attached to a virtual machine that is reported by the
    /// controller.
    /// </summary>
    public partial class VirtualSCSIController
    {
        /// <summary>
        /// Initializes a new instance of the VirtualSCSIController class.
        /// </summary>
        public VirtualSCSIController()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualSCSIController class.
        /// </summary>
        /// <param name="type">Gets or sets the controller type. Possible
        /// values include: 'lsilogic', 'buslogic', 'pvscsi',
        /// 'lsilogicsas'</param>
        /// <param name="controllerKey">Gets or sets the key of the
        /// controller.</param>
        /// <param name="busNumber">Gets or sets the bus number of the
        /// controller.</param>
        /// <param name="scsiCtlrUnitNumber">Gets or sets the SCSI controller
        /// unit number.</param>
        /// <param name="sharing">Gets or sets the sharing mode. Possible
        /// values include: 'noSharing', 'physicalSharing',
        /// 'virtualSharing'</param>
        public VirtualSCSIController(string type = default(string), int? controllerKey = default(int?), int? busNumber = default(int?), int? scsiCtlrUnitNumber = default(int?), string sharing = default(string))
        {
            Type = type;
            ControllerKey = controllerKey;
            BusNumber = busNumber;
            ScsiCtlrUnitNumber = scsiCtlrUnitNumber;
            Sharing = sharing;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the controller type. Possible values include:
        /// 'lsilogic', 'buslogic', 'pvscsi', 'lsilogicsas'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the key of the controller.
        /// </summary>
        [JsonProperty(PropertyName = "controllerKey")]
        public int? ControllerKey { get; set; }

        /// <summary>
        /// Gets or sets the bus number of the controller.
        /// </summary>
        [JsonProperty(PropertyName = "busNumber")]
        public int? BusNumber { get; set; }

        /// <summary>
        /// Gets or sets the SCSI controller unit number.
        /// </summary>
        [JsonProperty(PropertyName = "scsiCtlrUnitNumber")]
        public int? ScsiCtlrUnitNumber { get; set; }

        /// <summary>
        /// Gets or sets the sharing mode. Possible values include:
        /// 'noSharing', 'physicalSharing', 'virtualSharing'
        /// </summary>
        [JsonProperty(PropertyName = "sharing")]
        public string Sharing { get; set; }

    }
}
