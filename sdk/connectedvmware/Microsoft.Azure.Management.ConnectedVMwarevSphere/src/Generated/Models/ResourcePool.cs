// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Define the resourcePool.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ResourcePool : IResource
    {
        /// <summary>
        /// Initializes a new instance of the ResourcePool class.
        /// </summary>
        public ResourcePool()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourcePool class.
        /// </summary>
        /// <param name="location">Gets or sets the location.</param>
        /// <param name="uuid">Gets or sets a unique identifier for this
        /// resource.</param>
        /// <param name="vCenterId">Gets or sets the ARM Id of the vCenter
        /// resource in which this resource pool resides.</param>
        /// <param name="moRefId">Gets or sets the vCenter MoRef (Managed
        /// Object Reference) ID for the resource pool.</param>
        /// <param name="inventoryItemId">Gets or sets the inventory Item ID
        /// for the resource pool.</param>
        /// <param name="moName">Gets or sets the vCenter Managed Object name
        /// for the resource pool.</param>
        /// <param name="cpuSharesLevel">Gets or sets CPUSharesLevel which
        /// specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource
        /// consumers.</param>
        /// <param name="cpuReservationMHz">Gets or sets CPUReservationMHz
        /// which specifies the CPU size in MHz that is guaranteed
        /// to be available.</param>
        /// <param name="cpuLimitMHz">Gets or sets CPULimitMHz which specifies
        /// a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available
        /// resources.</param>
        /// <param name="memSharesLevel">Gets or sets CPUSharesLevel which
        /// specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource
        /// consumers.</param>
        /// <param name="memReservationMB">Gets or sets MemReservationMB which
        /// specifies the guaranteed available memory in
        /// megabytes.</param>
        /// <param name="memLimitMB">Gets or sets MemLimitMB specifies a memory
        /// usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are
        /// available resources.</param>
        /// <param name="customResourceName">Gets the name of the corresponding
        /// resource in Kubernetes.</param>
        /// <param name="statuses">The resource status information.</param>
        /// <param name="provisioningState">Gets or sets the provisioning
        /// state.</param>
        /// <param name="extendedLocation">Gets or sets the extended
        /// location.</param>
        /// <param name="systemData">The system data.</param>
        /// <param name="tags">Gets or sets the Resource tags.</param>
        /// <param name="name">Gets or sets the name.</param>
        /// <param name="id">Gets or sets the Id.</param>
        /// <param name="type">Gets or sets the type of the resource.</param>
        /// <param name="kind">Metadata used by portal/tooling/etc to render
        /// different UX experiences for resources of the same type; e.g.
        /// ApiApps are a kind of Microsoft.Web/sites type.  If supported, the
        /// resource provider must validate and persist this value.</param>
        public ResourcePool(string location, string uuid = default(string), string vCenterId = default(string), string moRefId = default(string), string inventoryItemId = default(string), string moName = default(string), string cpuSharesLevel = default(string), long? cpuReservationMHz = default(long?), long? cpuLimitMHz = default(long?), string memSharesLevel = default(string), long? memReservationMB = default(long?), long? memLimitMB = default(long?), string customResourceName = default(string), IList<ResourceStatus> statuses = default(IList<ResourceStatus>), string provisioningState = default(string), ExtendedLocation extendedLocation = default(ExtendedLocation), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), string name = default(string), string id = default(string), string type = default(string), string kind = default(string))
        {
            Uuid = uuid;
            VCenterId = vCenterId;
            MoRefId = moRefId;
            InventoryItemId = inventoryItemId;
            MoName = moName;
            CpuSharesLevel = cpuSharesLevel;
            CpuReservationMHz = cpuReservationMHz;
            CpuLimitMHz = cpuLimitMHz;
            MemSharesLevel = memSharesLevel;
            MemReservationMB = memReservationMB;
            MemLimitMB = memLimitMB;
            CustomResourceName = customResourceName;
            Statuses = statuses;
            ProvisioningState = provisioningState;
            Location = location;
            ExtendedLocation = extendedLocation;
            SystemData = systemData;
            Tags = tags;
            Name = name;
            Id = id;
            Type = type;
            Kind = kind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a unique identifier for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.uuid")]
        public string Uuid { get; private set; }

        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this
        /// resource pool resides.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vCenterId")]
        public string VCenterId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for
        /// the resource pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.moRefId")]
        public string MoRefId { get; set; }

        /// <summary>
        /// Gets or sets the inventory Item ID for the resource pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.inventoryItemId")]
        public string InventoryItemId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the resource pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.moName")]
        public string MoName { get; private set; }

        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation
        /// level for this pool.
        /// This property is used in relative allocation between resource
        /// consumers.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cpuSharesLevel")]
        public string CpuSharesLevel { get; private set; }

        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz
        /// that is guaranteed
        /// to be available.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cpuReservationMHz")]
        public long? CpuReservationMHz { get; private set; }

        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available
        /// resources.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cpuLimitMHz")]
        public long? CpuLimitMHz { get; private set; }

        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation
        /// level for this pool.
        /// This property is used in relative allocation between resource
        /// consumers.
        /// </summary>
        [JsonProperty(PropertyName = "properties.memSharesLevel")]
        public string MemSharesLevel { get; private set; }

        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed
        /// available memory in
        /// megabytes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.memReservationMB")]
        public long? MemReservationMB { get; private set; }

        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in
        /// megabytes.
        /// Utilization will not exceed the specified limit even if there are
        /// available resources.
        /// </summary>
        [JsonProperty(PropertyName = "properties.memLimitMB")]
        public long? MemLimitMB { get; private set; }

        /// <summary>
        /// Gets the name of the corresponding resource in Kubernetes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.customResourceName")]
        public string CustomResourceName { get; private set; }

        /// <summary>
        /// Gets the resource status information.
        /// </summary>
        [JsonProperty(PropertyName = "properties.statuses")]
        public IList<ResourceStatus> Statuses { get; private set; }

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the location.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the extended location.
        /// </summary>
        [JsonProperty(PropertyName = "extendedLocation")]
        public ExtendedLocation ExtendedLocation { get; set; }

        /// <summary>
        /// Gets or sets the system data.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets the Resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets the type of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets metadata used by portal/tooling/etc to render
        /// different UX experiences for resources of the same type; e.g.
        /// ApiApps are a kind of Microsoft.Web/sites type.  If supported, the
        /// resource provider must validate and persist this value.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

    }
}
