// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines the virtualMachineUpdate.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VirtualMachineUpdate
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineUpdate class.
        /// </summary>
        public VirtualMachineUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineUpdate class.
        /// </summary>
        /// <param name="tags">Gets or sets the Resource tags.</param>
        /// <param name="identity">The identity of the resource.</param>
        public VirtualMachineUpdate(HardwareProfile hardwareProfile = default(HardwareProfile), StorageProfileUpdate storageProfile = default(StorageProfileUpdate), NetworkProfileUpdate networkProfile = default(NetworkProfileUpdate), IDictionary<string, string> tags = default(IDictionary<string, string>), Identity identity = default(Identity))
        {
            HardwareProfile = hardwareProfile;
            StorageProfile = storageProfile;
            NetworkProfile = networkProfile;
            Tags = tags;
            Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.hardwareProfile")]
        public HardwareProfile HardwareProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageProfile")]
        public StorageProfileUpdate StorageProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkProfile")]
        public NetworkProfileUpdate NetworkProfile { get; set; }

        /// <summary>
        /// Gets or sets the Resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the identity of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }

    }
}
