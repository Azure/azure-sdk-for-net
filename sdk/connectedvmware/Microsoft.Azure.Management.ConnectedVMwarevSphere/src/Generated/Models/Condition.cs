// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Condition defines an extension to status.
    /// </summary>
    public partial class Condition
    {
        /// <summary>
        /// Initializes a new instance of the Condition class.
        /// </summary>
        public Condition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Condition class.
        /// </summary>
        /// <param name="status">Status of the condition.</param>
        /// <param name="reason">The reason for the condition's status.</param>
        /// <param name="message">A human readable message indicating details
        /// about the status.</param>
        /// <param name="severity">Severity with which to treat failures of
        /// this type of condition.</param>
        public Condition(string status = default(string), string reason = default(string), string message = default(string), string severity = default(string))
        {
            Status = status;
            Reason = reason;
            Message = message;
            Severity = severity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets status of the condition.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the reason for the condition's status.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; private set; }

        /// <summary>
        /// Gets a human readable message indicating details about the status.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; private set; }

        /// <summary>
        /// Gets severity with which to treat failures of this type of
        /// condition.
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public string Severity { get; private set; }

    }
}
