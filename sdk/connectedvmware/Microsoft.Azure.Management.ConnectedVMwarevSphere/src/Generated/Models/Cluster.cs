// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Define the cluster.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Cluster : IResource
    {
        /// <summary>
        /// Initializes a new instance of the Cluster class.
        /// </summary>
        public Cluster()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Cluster class.
        /// </summary>
        /// <param name="location">Gets or sets the location.</param>
        /// <param name="uuid">Gets or sets a unique identifier for this
        /// resource.</param>
        /// <param name="vCenterId">Gets or sets the ARM Id of the vCenter
        /// resource in which this cluster resides.</param>
        /// <param name="moRefId">Gets or sets the vCenter MoRef (Managed
        /// Object Reference) ID for the cluster.</param>
        /// <param name="inventoryItemId">Gets or sets the inventory Item ID
        /// for the cluster.</param>
        /// <param name="moName">Gets or sets the vCenter Managed Object name
        /// for the cluster.</param>
        /// <param name="statuses">The resource status information.</param>
        /// <param name="customResourceName">Gets the name of the corresponding
        /// resource in Kubernetes.</param>
        /// <param name="datastoreIds">Gets or sets the datastore ARM
        /// ids.</param>
        /// <param name="networkIds">Gets or sets the network ARM ids.</param>
        /// <param name="provisioningState">Gets or sets the provisioning
        /// state.</param>
        /// <param name="extendedLocation">Gets or sets the extended
        /// location.</param>
        /// <param name="systemData">The system data.</param>
        /// <param name="tags">Gets or sets the Resource tags.</param>
        /// <param name="name">Gets or sets the name.</param>
        /// <param name="id">Gets or sets the Id.</param>
        /// <param name="type">Gets or sets the type of the resource.</param>
        /// <param name="kind">Metadata used by portal/tooling/etc to render
        /// different UX experiences for resources of the same type; e.g.
        /// ApiApps are a kind of Microsoft.Web/sites type.  If supported, the
        /// resource provider must validate and persist this value.</param>
        public Cluster(string location, string uuid = default(string), string vCenterId = default(string), string moRefId = default(string), string inventoryItemId = default(string), string moName = default(string), IList<ResourceStatus> statuses = default(IList<ResourceStatus>), string customResourceName = default(string), IList<string> datastoreIds = default(IList<string>), IList<string> networkIds = default(IList<string>), string provisioningState = default(string), ExtendedLocation extendedLocation = default(ExtendedLocation), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), string name = default(string), string id = default(string), string type = default(string), string kind = default(string))
        {
            Uuid = uuid;
            VCenterId = vCenterId;
            MoRefId = moRefId;
            InventoryItemId = inventoryItemId;
            MoName = moName;
            Statuses = statuses;
            CustomResourceName = customResourceName;
            DatastoreIds = datastoreIds;
            NetworkIds = networkIds;
            ProvisioningState = provisioningState;
            Location = location;
            ExtendedLocation = extendedLocation;
            SystemData = systemData;
            Tags = tags;
            Name = name;
            Id = id;
            Type = type;
            Kind = kind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a unique identifier for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.uuid")]
        public string Uuid { get; private set; }

        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this
        /// cluster resides.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vCenterId")]
        public string VCenterId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for
        /// the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "properties.moRefId")]
        public string MoRefId { get; set; }

        /// <summary>
        /// Gets or sets the inventory Item ID for the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "properties.inventoryItemId")]
        public string InventoryItemId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter Managed Object name for the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "properties.moName")]
        public string MoName { get; private set; }

        /// <summary>
        /// Gets the resource status information.
        /// </summary>
        [JsonProperty(PropertyName = "properties.statuses")]
        public IList<ResourceStatus> Statuses { get; private set; }

        /// <summary>
        /// Gets the name of the corresponding resource in Kubernetes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.customResourceName")]
        public string CustomResourceName { get; private set; }

        /// <summary>
        /// Gets or sets the datastore ARM ids.
        /// </summary>
        [JsonProperty(PropertyName = "properties.datastoreIds")]
        public IList<string> DatastoreIds { get; private set; }

        /// <summary>
        /// Gets or sets the network ARM ids.
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkIds")]
        public IList<string> NetworkIds { get; private set; }

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the location.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the extended location.
        /// </summary>
        [JsonProperty(PropertyName = "extendedLocation")]
        public ExtendedLocation ExtendedLocation { get; set; }

        /// <summary>
        /// Gets or sets the system data.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets the Resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets the type of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets metadata used by portal/tooling/etc to render
        /// different UX experiences for resources of the same type; e.g.
        /// ApiApps are a kind of Microsoft.Web/sites type.  If supported, the
        /// resource provider must validate and persist this value.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

    }
}
