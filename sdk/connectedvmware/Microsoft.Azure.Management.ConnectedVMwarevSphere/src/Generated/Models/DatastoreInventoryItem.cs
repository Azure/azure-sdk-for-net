// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The datastore inventory item.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Datastore")]
    public partial class DatastoreInventoryItem : InventoryItemProperties
    {
        /// <summary>
        /// Initializes a new instance of the DatastoreInventoryItem class.
        /// </summary>
        public DatastoreInventoryItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatastoreInventoryItem class.
        /// </summary>
        /// <param name="managedResourceId">Gets or sets the tracked resource
        /// id corresponding to the inventory resource.</param>
        /// <param name="moRefId">Gets or sets the MoRef (Managed Object
        /// Reference) ID for the inventory item.</param>
        /// <param name="moName">Gets or sets the vCenter Managed Object name
        /// for the inventory item.</param>
        /// <param name="provisioningState">Gets or sets the provisioning
        /// state.</param>
        /// <param name="capacityGB">Gets or sets Maximum capacity of this
        /// datastore, in GBs.</param>
        /// <param name="freeSpaceGB">Gets or sets Available space of this
        /// datastore, in GBs.</param>
        public DatastoreInventoryItem(string managedResourceId = default(string), string moRefId = default(string), string moName = default(string), string provisioningState = default(string), long? capacityGB = default(long?), long? freeSpaceGB = default(long?))
            : base(managedResourceId, moRefId, moName, provisioningState)
        {
            CapacityGB = capacityGB;
            FreeSpaceGB = freeSpaceGB;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Maximum capacity of this datastore, in GBs.
        /// </summary>
        [JsonProperty(PropertyName = "capacityGB")]
        public long? CapacityGB { get; set; }

        /// <summary>
        /// Gets or sets Available space of this datastore, in GBs.
        /// </summary>
        [JsonProperty(PropertyName = "freeSpaceGB")]
        public long? FreeSpaceGB { get; set; }

    }
}
