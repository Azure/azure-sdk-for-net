// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ConnectedVMwarevSphere.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the resource properties.
    /// </summary>
    public partial class OsProfile
    {
        /// <summary>
        /// Initializes a new instance of the OsProfile class.
        /// </summary>
        public OsProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OsProfile class.
        /// </summary>
        /// <param name="computerName">Gets or sets computer name.</param>
        /// <param name="adminUsername">Gets or sets administrator
        /// username.</param>
        /// <param name="adminPassword">Gets or sets administrator
        /// password.</param>
        /// <param name="osType">Gets or sets the type of the os. Possible
        /// values include: 'Windows', 'Linux', 'Other'</param>
        /// <param name="osName">Gets or sets os name.</param>
        /// <param name="toolsRunningStatus">Gets or sets the current running
        /// status of VMware Tools running in the guest operating
        /// system.</param>
        /// <param name="toolsVersionStatus">Gets or sets the current version
        /// status of VMware Tools installed in the guest operating
        /// system.</param>
        /// <param name="toolsVersion">Gets or sets the current version of
        /// VMware Tools.</param>
        public OsProfile(string computerName = default(string), string adminUsername = default(string), string adminPassword = default(string), string osType = default(string), string osName = default(string), string toolsRunningStatus = default(string), string toolsVersionStatus = default(string), string toolsVersion = default(string))
        {
            ComputerName = computerName;
            AdminUsername = adminUsername;
            AdminPassword = adminPassword;
            OsType = osType;
            OsName = osName;
            ToolsRunningStatus = toolsRunningStatus;
            ToolsVersionStatus = toolsVersionStatus;
            ToolsVersion = toolsVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets computer name.
        /// </summary>
        [JsonProperty(PropertyName = "computerName")]
        public string ComputerName { get; set; }

        /// <summary>
        /// Gets or sets administrator username.
        /// </summary>
        [JsonProperty(PropertyName = "adminUsername")]
        public string AdminUsername { get; set; }

        /// <summary>
        /// Gets or sets administrator password.
        /// </summary>
        [JsonProperty(PropertyName = "adminPassword")]
        public string AdminPassword { get; set; }

        /// <summary>
        /// Gets or sets the type of the os. Possible values include:
        /// 'Windows', 'Linux', 'Other'
        /// </summary>
        [JsonProperty(PropertyName = "osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets or sets os name.
        /// </summary>
        [JsonProperty(PropertyName = "osName")]
        public string OsName { get; private set; }

        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in
        /// the guest operating system.
        /// </summary>
        [JsonProperty(PropertyName = "toolsRunningStatus")]
        public string ToolsRunningStatus { get; private set; }

        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed
        /// in the guest operating system.
        /// </summary>
        [JsonProperty(PropertyName = "toolsVersionStatus")]
        public string ToolsVersionStatus { get; private set; }

        /// <summary>
        /// Gets or sets the current version of VMware Tools.
        /// </summary>
        [JsonProperty(PropertyName = "toolsVersion")]
        public string ToolsVersion { get; private set; }

    }
}
