// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SiteConfiguration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.SiteConfiguration.Samples
{
    public partial class Sample_DynamicConfigurationVersionCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_DynamicConfigurationVersionsCreateOrUpdateGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationResource created on azure
            // for more information of creating DynamicConfigurationResource, please refer to the document of DynamicConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            ResourceIdentifier dynamicConfigurationResourceId = DynamicConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName);
            DynamicConfigurationResource dynamicConfiguration = client.GetDynamicConfigurationResource(dynamicConfigurationResourceId);

            // get the collection of this DynamicConfigurationVersionResource
            DynamicConfigurationVersionCollection collection = dynamicConfiguration.GetDynamicConfigurationVersions();

            // invoke the operation
            string dynamicConfigurationVersionName = "parameterName";
            DynamicConfigurationVersionData data = new DynamicConfigurationVersionData
            {
                Properties = new DynamicConfigurationVersionProperties("utvmzgdxulnotsgtahcwhkg"),
            };
            ArmOperation<DynamicConfigurationVersionResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, dynamicConfigurationVersionName, data);
            DynamicConfigurationVersionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DynamicConfigurationVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DynamicConfigurationVersionsGetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationResource created on azure
            // for more information of creating DynamicConfigurationResource, please refer to the document of DynamicConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            ResourceIdentifier dynamicConfigurationResourceId = DynamicConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName);
            DynamicConfigurationResource dynamicConfiguration = client.GetDynamicConfigurationResource(dynamicConfigurationResourceId);

            // get the collection of this DynamicConfigurationVersionResource
            DynamicConfigurationVersionCollection collection = dynamicConfiguration.GetDynamicConfigurationVersions();

            // invoke the operation
            string dynamicConfigurationVersionName = "parameterName";
            DynamicConfigurationVersionResource result = await collection.GetAsync(dynamicConfigurationVersionName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DynamicConfigurationVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_DynamicConfigurationVersionsListByDynamicConfigurationGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_ListByDynamicConfiguration_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_ListByDynamicConfiguration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationResource created on azure
            // for more information of creating DynamicConfigurationResource, please refer to the document of DynamicConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            ResourceIdentifier dynamicConfigurationResourceId = DynamicConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName);
            DynamicConfigurationResource dynamicConfiguration = client.GetDynamicConfigurationResource(dynamicConfigurationResourceId);

            // get the collection of this DynamicConfigurationVersionResource
            DynamicConfigurationVersionCollection collection = dynamicConfiguration.GetDynamicConfigurationVersions();

            // invoke the operation and iterate over the result
            await foreach (DynamicConfigurationVersionResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DynamicConfigurationVersionData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_DynamicConfigurationVersionsGetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationResource created on azure
            // for more information of creating DynamicConfigurationResource, please refer to the document of DynamicConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            ResourceIdentifier dynamicConfigurationResourceId = DynamicConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName);
            DynamicConfigurationResource dynamicConfiguration = client.GetDynamicConfigurationResource(dynamicConfigurationResourceId);

            // get the collection of this DynamicConfigurationVersionResource
            DynamicConfigurationVersionCollection collection = dynamicConfiguration.GetDynamicConfigurationVersions();

            // invoke the operation
            string dynamicConfigurationVersionName = "parameterName";
            bool result = await collection.ExistsAsync(dynamicConfigurationVersionName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_DynamicConfigurationVersionsGetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationResource created on azure
            // for more information of creating DynamicConfigurationResource, please refer to the document of DynamicConfigurationResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            ResourceIdentifier dynamicConfigurationResourceId = DynamicConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName);
            DynamicConfigurationResource dynamicConfiguration = client.GetDynamicConfigurationResource(dynamicConfigurationResourceId);

            // get the collection of this DynamicConfigurationVersionResource
            DynamicConfigurationVersionCollection collection = dynamicConfiguration.GetDynamicConfigurationVersions();

            // invoke the operation
            string dynamicConfigurationVersionName = "parameterName";
            NullableResponse<DynamicConfigurationVersionResource> response = await collection.GetIfExistsAsync(dynamicConfigurationVersionName);
            DynamicConfigurationVersionResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DynamicConfigurationVersionData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
