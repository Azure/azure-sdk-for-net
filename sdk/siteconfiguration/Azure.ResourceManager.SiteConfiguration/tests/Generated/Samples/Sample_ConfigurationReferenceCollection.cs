// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SiteConfiguration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.SiteConfiguration.Samples
{
    public partial class Sample_ConfigurationReferenceCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_ConfigurationReferencesCreateOrUpdate()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/ConfigurationReferences_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigurationReferences_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // get the collection of this ConfigurationReferenceResource
            string resourceUri = "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Edge/Sites/aSite";
            ConfigurationReferenceCollection collection = client.GetConfigurationReferences(new ResourceIdentifier(resourceUri));

            // invoke the operation
            string configurationReferenceName = "default";
            ConfigurationReferenceData data = new ConfigurationReferenceData
            {
                Properties = new ConfigurationReferenceProperties
                {
                    ConfigurationResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rgconfigurations/providers/Microsoft.Edge/configurations/aConfiguration"),
                },
            };
            ArmOperation<ConfigurationReferenceResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, configurationReferenceName, data);
            ConfigurationReferenceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ConfigurationReferenceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ConfigurationReferencesGet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/ConfigurationReferences_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigurationReferences_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // get the collection of this ConfigurationReferenceResource
            string resourceUri = "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Edge/Sites/aSite";
            ConfigurationReferenceCollection collection = client.GetConfigurationReferences(new ResourceIdentifier(resourceUri));

            // invoke the operation
            string configurationReferenceName = "default";
            ConfigurationReferenceResource result = await collection.GetAsync(configurationReferenceName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ConfigurationReferenceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ConfigurationReferencesList()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/ConfigurationReferences_List_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigurationReferences_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // get the collection of this ConfigurationReferenceResource
            string resourceUri = "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Edge/Sites/aSite";
            ConfigurationReferenceCollection collection = client.GetConfigurationReferences(new ResourceIdentifier(resourceUri));

            // invoke the operation and iterate over the result
            await foreach (ConfigurationReferenceResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ConfigurationReferenceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_ConfigurationReferencesGet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/ConfigurationReferences_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigurationReferences_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // get the collection of this ConfigurationReferenceResource
            string resourceUri = "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Edge/Sites/aSite";
            ConfigurationReferenceCollection collection = client.GetConfigurationReferences(new ResourceIdentifier(resourceUri));

            // invoke the operation
            string configurationReferenceName = "default";
            bool result = await collection.ExistsAsync(configurationReferenceName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_ConfigurationReferencesGet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/ConfigurationReferences_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigurationReferences_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // get the collection of this ConfigurationReferenceResource
            string resourceUri = "subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Edge/Sites/aSite";
            ConfigurationReferenceCollection collection = client.GetConfigurationReferences(new ResourceIdentifier(resourceUri));

            // invoke the operation
            string configurationReferenceName = "default";
            NullableResponse<ConfigurationReferenceResource> response = await collection.GetIfExistsAsync(configurationReferenceName);
            ConfigurationReferenceResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ConfigurationReferenceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
