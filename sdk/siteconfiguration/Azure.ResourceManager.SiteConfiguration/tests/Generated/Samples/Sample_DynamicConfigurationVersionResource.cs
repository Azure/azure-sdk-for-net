// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SiteConfiguration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.SiteConfiguration.Samples
{
    public partial class Sample_DynamicConfigurationVersionResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DynamicConfigurationVersionsGetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationVersionResource created on azure
            // for more information of creating DynamicConfigurationVersionResource, please refer to the document of DynamicConfigurationVersionResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            string dynamicConfigurationVersionName = "parameterName";
            ResourceIdentifier dynamicConfigurationVersionResourceId = DynamicConfigurationVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName, dynamicConfigurationVersionName);
            DynamicConfigurationVersionResource dynamicConfigurationVersion = client.GetDynamicConfigurationVersionResource(dynamicConfigurationVersionResourceId);

            // invoke the operation
            DynamicConfigurationVersionResource result = await dynamicConfigurationVersion.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DynamicConfigurationVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DynamicConfigurationVersionsDeleteGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationVersionResource created on azure
            // for more information of creating DynamicConfigurationVersionResource, please refer to the document of DynamicConfigurationVersionResource
            string subscriptionId = "917932C2-DB34-4B40-9759-D44452DBEC0D";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            string dynamicConfigurationVersionName = "parameterName";
            ResourceIdentifier dynamicConfigurationVersionResourceId = DynamicConfigurationVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName, dynamicConfigurationVersionName);
            DynamicConfigurationVersionResource dynamicConfigurationVersion = client.GetDynamicConfigurationVersionResource(dynamicConfigurationVersionResourceId);

            // invoke the operation
            await dynamicConfigurationVersion.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_DynamicConfigurationVersionsUpdateGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurationVersions_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurationVersions_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DynamicConfigurationVersionResource created on azure
            // for more information of creating DynamicConfigurationVersionResource, please refer to the document of DynamicConfigurationVersionResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            string dynamicConfigurationName = "parameterName";
            string dynamicConfigurationVersionName = "parameterName";
            ResourceIdentifier dynamicConfigurationVersionResourceId = DynamicConfigurationVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName, dynamicConfigurationName, dynamicConfigurationVersionName);
            DynamicConfigurationVersionResource dynamicConfigurationVersion = client.GetDynamicConfigurationVersionResource(dynamicConfigurationVersionResourceId);

            // invoke the operation
            DynamicConfigurationVersionPatch patch = new DynamicConfigurationVersionPatch
            {
                DynamicConfigurationVersionPropertiesUpdateValues = "ujeeunyfkqihelwbpllkhxgfusoyj",
            };
            DynamicConfigurationVersionResource result = await dynamicConfigurationVersion.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DynamicConfigurationVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
