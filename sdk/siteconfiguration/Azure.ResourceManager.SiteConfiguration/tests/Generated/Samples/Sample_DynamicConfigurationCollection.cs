// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SiteConfiguration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.SiteConfiguration.Samples
{
    public partial class Sample_DynamicConfigurationCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_DynamicConfigurationsCreateOrUpdate()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurations_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurations_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigurationResource created on azure
            // for more information of creating ConfigurationResource, please refer to the document of ConfigurationResource
            string subscriptionId = "917932C2-DB34-4B40-9759-D44452DBEC0D";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            ResourceIdentifier configurationResourceId = ConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName);
            ConfigurationResource configuration = client.GetConfigurationResource(configurationResourceId);

            // get the collection of this DynamicConfigurationResource
            DynamicConfigurationCollection collection = configuration.GetDynamicConfigurations();

            // invoke the operation
            string dynamicConfigurationName = "parameterName";
            DynamicConfigurationData data = new DynamicConfigurationData
            {
                Properties = new DynamicConfigurationProperties("ltpwymdbybbjdgyuumsfh"),
            };
            ArmOperation<DynamicConfigurationResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, dynamicConfigurationName, data);
            DynamicConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DynamicConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DynamicConfigurationsGet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigurationResource created on azure
            // for more information of creating ConfigurationResource, please refer to the document of ConfigurationResource
            string subscriptionId = "917932C2-DB34-4B40-9759-D44452DBEC0D";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            ResourceIdentifier configurationResourceId = ConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName);
            ConfigurationResource configuration = client.GetConfigurationResource(configurationResourceId);

            // get the collection of this DynamicConfigurationResource
            DynamicConfigurationCollection collection = configuration.GetDynamicConfigurations();

            // invoke the operation
            string dynamicConfigurationName = "parameterName";
            DynamicConfigurationResource result = await collection.GetAsync(dynamicConfigurationName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DynamicConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_DynamicConfigurationsListByConfiguration()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurations_ListByConfiguration_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurations_ListByConfiguration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigurationResource created on azure
            // for more information of creating ConfigurationResource, please refer to the document of ConfigurationResource
            string subscriptionId = "917932C2-DB34-4B40-9759-D44452DBEC0D";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            ResourceIdentifier configurationResourceId = ConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName);
            ConfigurationResource configuration = client.GetConfigurationResource(configurationResourceId);

            // get the collection of this DynamicConfigurationResource
            DynamicConfigurationCollection collection = configuration.GetDynamicConfigurations();

            // invoke the operation and iterate over the result
            await foreach (DynamicConfigurationResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DynamicConfigurationData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_DynamicConfigurationsGet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigurationResource created on azure
            // for more information of creating ConfigurationResource, please refer to the document of ConfigurationResource
            string subscriptionId = "917932C2-DB34-4B40-9759-D44452DBEC0D";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            ResourceIdentifier configurationResourceId = ConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName);
            ConfigurationResource configuration = client.GetConfigurationResource(configurationResourceId);

            // get the collection of this DynamicConfigurationResource
            DynamicConfigurationCollection collection = configuration.GetDynamicConfigurations();

            // invoke the operation
            string dynamicConfigurationName = "parameterName";
            bool result = await collection.ExistsAsync(dynamicConfigurationName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_DynamicConfigurationsGet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurations/stable/2025-06-01/examples/DynamicConfigurations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigurationResource created on azure
            // for more information of creating ConfigurationResource, please refer to the document of ConfigurationResource
            string subscriptionId = "917932C2-DB34-4B40-9759-D44452DBEC0D";
            string resourceGroupName = "rgconfigurations";
            string configurationName = "parameterName";
            ResourceIdentifier configurationResourceId = ConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configurationName);
            ConfigurationResource configuration = client.GetConfigurationResource(configurationResourceId);

            // get the collection of this DynamicConfigurationResource
            DynamicConfigurationCollection collection = configuration.GetDynamicConfigurations();

            // invoke the operation
            string dynamicConfigurationName = "parameterName";
            NullableResponse<DynamicConfigurationResource> response = await collection.GetIfExistsAsync(dynamicConfigurationName);
            DynamicConfigurationResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DynamicConfigurationData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
