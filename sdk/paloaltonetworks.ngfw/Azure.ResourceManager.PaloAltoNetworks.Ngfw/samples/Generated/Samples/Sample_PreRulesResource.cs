// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.PaloAltoNetworks.Ngfw;
using Azure.ResourceManager.PaloAltoNetworks.Ngfw.Models;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Samples
{
    public partial class Sample_PreRulesResource
    {
        // PreRules_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_PreRulesGetMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "PreRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            PreRulesResource result = await preRulesResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PreRulesResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PreRules_Get_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_PreRulesGetMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "PreRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            PreRulesResource result = await preRulesResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PreRulesResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PreRules_CreateOrUpdate_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PreRulesCreateOrUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "PreRules_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            PreRulesResourceData data = new PreRulesResourceData("preRule1")
            {
                ETag = new ETag("c18e6eef-ba3e-49ee-8a85-2b36c863a9d0"),
                Description = "description of pre rule",
                RuleState = StateEnum.Disabled,
                Source = new SourceAddr()
                {
                    Cidrs =
{
"1.0.0.1/10"
},
                    Countries =
{
"India"
},
                    Feeds =
{
"feed"
},
                    PrefixLists =
{
"PL1"
},
                },
                NegateSource = BooleanEnum.True,
                Destination = new DestinationAddr()
                {
                    Cidrs =
{
"1.0.0.1/10"
},
                    Countries =
{
"India"
},
                    Feeds =
{
"feed"
},
                    PrefixLists =
{
"PL1"
},
                    FqdnLists =
{
"FQDN1"
},
                },
                NegateDestination = BooleanEnum.True,
                Applications =
{
"app1"
},
                Category = new Category(new string[]
            {
"https://microsoft.com"
            }, new string[]
            {
"feed"
            }),
                Protocol = "HTTP",
                ProtocolPortList =
{
"80"
},
                InboundInspectionCertificate = "cert1",
                AuditComment = "example comment",
                ActionType = ActionEnum.Allow,
                EnableLogging = StateEnum.Disabled,
                DecryptionRuleType = DecryptionRuleTypeEnum.SSLOutboundInspection,
                Tags =
{
new TagInfo("keyName","value")
},
            };
            ArmOperation<PreRulesResource> lro = await preRulesResource.UpdateAsync(WaitUntil.Completed, data);
            PreRulesResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PreRulesResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PreRules_CreateOrUpdate_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PreRulesCreateOrUpdateMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_CreateOrUpdate_MinimumSet_Gen.json
            // this example is just showing the usage of "PreRules_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            PreRulesResourceData data = new PreRulesResourceData("preRule1");
            ArmOperation<PreRulesResource> lro = await preRulesResource.UpdateAsync(WaitUntil.Completed, data);
            PreRulesResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PreRulesResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PreRules_Delete_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_PreRulesDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "PreRules_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            await preRulesResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // PreRules_Delete_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_PreRulesDeleteMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "PreRules_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            await preRulesResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // PreRules_getCounters_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetCounters_PreRulesGetCountersMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_getCounters_MaximumSet_Gen.json
            // this example is just showing the usage of "PreRules_getCounters" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            string firewallName = "firewall1";
            RuleCounter result = await preRulesResource.GetCountersAsync(firewallName: firewallName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // PreRules_getCounters_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetCounters_PreRulesGetCountersMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_getCounters_MinimumSet_Gen.json
            // this example is just showing the usage of "PreRules_getCounters" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            RuleCounter result = await preRulesResource.GetCountersAsync();

            Console.WriteLine($"Succeeded: {result}");
        }

        // PreRules_refreshCounters_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task RefreshCounters_PreRulesRefreshCountersMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_refreshCounters_MaximumSet_Gen.json
            // this example is just showing the usage of "PreRules_refreshCounters" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            string firewallName = "firewall1";
            await preRulesResource.RefreshCountersAsync(firewallName: firewallName);

            Console.WriteLine($"Succeeded");
        }

        // PreRules_refreshCounters_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task RefreshCounters_PreRulesRefreshCountersMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_refreshCounters_MinimumSet_Gen.json
            // this example is just showing the usage of "PreRules_refreshCounters" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            await preRulesResource.RefreshCountersAsync();

            Console.WriteLine($"Succeeded");
        }

        // PreRules_resetCounters_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ResetCounters_PreRulesResetCountersMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_resetCounters_MaximumSet_Gen.json
            // this example is just showing the usage of "PreRules_resetCounters" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            string firewallName = "firewall1";
            RuleCounterReset result = await preRulesResource.ResetCountersAsync(firewallName: firewallName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // PreRules_resetCounters_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ResetCounters_PreRulesResetCountersMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2022-08-29-preview/examples/PreRules_resetCounters_MinimumSet_Gen.json
            // this example is just showing the usage of "PreRules_resetCounters" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PreRulesResource created on azure
            // for more information of creating PreRulesResource, please refer to the document of PreRulesResource
            string globalRulestackName = "lrs1";
            string priority = "1";
            ResourceIdentifier preRulesResourceId = PreRulesResource.CreateResourceIdentifier(globalRulestackName, priority);
            PreRulesResource preRulesResource = client.GetPreRulesResource(preRulesResourceId);

            // invoke the operation
            RuleCounterReset result = await preRulesResource.ResetCountersAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
