// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Models
{
    public partial class FirewallLogDestination : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(StorageConfiguration))
            {
                writer.WritePropertyName("storageConfigurations"u8);
                writer.WriteObjectValue(StorageConfiguration);
            }
            if (Core.Optional.IsDefined(EventHubConfiguration))
            {
                writer.WritePropertyName("eventHubConfigurations"u8);
                writer.WriteObjectValue(EventHubConfiguration);
            }
            if (Core.Optional.IsDefined(MonitorConfiguration))
            {
                writer.WritePropertyName("monitorConfigurations"u8);
                writer.WriteObjectValue(MonitorConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static FirewallLogDestination DeserializeFirewallLogDestination(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<StorageAccountConfiguration> storageConfigurations = default;
            Core.Optional<EventHubConfiguration> eventHubConfigurations = default;
            Core.Optional<MonitorLogConfiguration> monitorConfigurations = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("storageConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storageConfigurations = StorageAccountConfiguration.DeserializeStorageAccountConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("eventHubConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    eventHubConfigurations = EventHubConfiguration.DeserializeEventHubConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("monitorConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    monitorConfigurations = MonitorLogConfiguration.DeserializeMonitorLogConfiguration(property.Value);
                    continue;
                }
            }
            return new FirewallLogDestination(storageConfigurations.Value, eventHubConfigurations.Value, monitorConfigurations.Value);
        }
    }
}
