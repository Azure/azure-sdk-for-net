// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Models
{
    public partial class FirewallLogSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(LogType))
            {
                writer.WritePropertyName("logType"u8);
                writer.WriteStringValue(LogType.Value.ToString());
            }
            if (Optional.IsDefined(LogOption))
            {
                writer.WritePropertyName("logOption"u8);
                writer.WriteStringValue(LogOption.Value.ToString());
            }
            if (Optional.IsDefined(ApplicationInsights))
            {
                writer.WritePropertyName("applicationInsights"u8);
                writer.WriteObjectValue(ApplicationInsights);
            }
            if (Optional.IsDefined(CommonDestination))
            {
                writer.WritePropertyName("commonDestination"u8);
                writer.WriteObjectValue(CommonDestination);
            }
            if (Optional.IsDefined(TrafficLogDestination))
            {
                writer.WritePropertyName("trafficLogDestination"u8);
                writer.WriteObjectValue(TrafficLogDestination);
            }
            if (Optional.IsDefined(ThreatLogDestination))
            {
                writer.WritePropertyName("threatLogDestination"u8);
                writer.WriteObjectValue(ThreatLogDestination);
            }
            if (Optional.IsDefined(DecryptLogDestination))
            {
                writer.WritePropertyName("decryptLogDestination"u8);
                writer.WriteObjectValue(DecryptLogDestination);
            }
            writer.WriteEndObject();
        }

        internal static FirewallLogSettings DeserializeFirewallLogSettings(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<FirewallLogType> logType = default;
            Optional<FirewallLogOption> logOption = default;
            Optional<FirewallApplicationInsights> applicationInsights = default;
            Optional<FirewallLogDestination> commonDestination = default;
            Optional<FirewallLogDestination> trafficLogDestination = default;
            Optional<FirewallLogDestination> threatLogDestination = default;
            Optional<FirewallLogDestination> decryptLogDestination = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("logType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    logType = new FirewallLogType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("logOption"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    logOption = new FirewallLogOption(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("applicationInsights"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    applicationInsights = FirewallApplicationInsights.DeserializeFirewallApplicationInsights(property.Value);
                    continue;
                }
                if (property.NameEquals("commonDestination"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    commonDestination = FirewallLogDestination.DeserializeFirewallLogDestination(property.Value);
                    continue;
                }
                if (property.NameEquals("trafficLogDestination"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    trafficLogDestination = FirewallLogDestination.DeserializeFirewallLogDestination(property.Value);
                    continue;
                }
                if (property.NameEquals("threatLogDestination"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    threatLogDestination = FirewallLogDestination.DeserializeFirewallLogDestination(property.Value);
                    continue;
                }
                if (property.NameEquals("decryptLogDestination"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    decryptLogDestination = FirewallLogDestination.DeserializeFirewallLogDestination(property.Value);
                    continue;
                }
            }
            return new FirewallLogSettings(Optional.ToNullable(logType), Optional.ToNullable(logOption), applicationInsights.Value, commonDestination.Value, trafficLogDestination.Value, threatLogDestination.Value, decryptLogDestination.Value);
        }
    }
}
