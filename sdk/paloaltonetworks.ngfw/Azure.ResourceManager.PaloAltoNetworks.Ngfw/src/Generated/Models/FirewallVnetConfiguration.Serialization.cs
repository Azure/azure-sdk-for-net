// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Models
{
    public partial class FirewallVnetConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("vnet"u8);
            writer.WriteObjectValue(Vnet);
            writer.WritePropertyName("trustSubnet"u8);
            writer.WriteObjectValue(TrustSubnet);
            writer.WritePropertyName("unTrustSubnet"u8);
            writer.WriteObjectValue(UnTrustSubnet);
            if (Optional.IsDefined(IPOfTrustSubnetForUdr))
            {
                writer.WritePropertyName("ipOfTrustSubnetForUdr"u8);
                writer.WriteObjectValue(IPOfTrustSubnetForUdr);
            }
            writer.WriteEndObject();
        }

        internal static FirewallVnetConfiguration DeserializeFirewallVnetConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IPAddressSpaceInfo vnet = default;
            IPAddressSpaceInfo trustSubnet = default;
            IPAddressSpaceInfo unTrustSubnet = default;
            Optional<IPAddressInfo> ipOfTrustSubnetForUdr = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("vnet"u8))
                {
                    vnet = IPAddressSpaceInfo.DeserializeIPAddressSpaceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("trustSubnet"u8))
                {
                    trustSubnet = IPAddressSpaceInfo.DeserializeIPAddressSpaceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("unTrustSubnet"u8))
                {
                    unTrustSubnet = IPAddressSpaceInfo.DeserializeIPAddressSpaceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("ipOfTrustSubnetForUdr"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ipOfTrustSubnetForUdr = IPAddressInfo.DeserializeIPAddressInfo(property.Value);
                    continue;
                }
            }
            return new FirewallVnetConfiguration(vnet, trustSubnet, unTrustSubnet, ipOfTrustSubnetForUdr.Value);
        }
    }
}
