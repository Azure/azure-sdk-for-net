// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Models
{
    public partial class LogDestination : IUtf8JsonSerializable, Core.IModelSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((Core.IModelSerializable)this).Serialize(writer, new Core.Serialization.SerializableOptions());

        void Core.IModelSerializable.Serialize(Utf8JsonWriter writer, Core.Serialization.SerializableOptions options)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(StorageConfigurations))
            {
                writer.WritePropertyName("storageConfigurations"u8);
                writer.WriteObjectValue(StorageConfigurations);
            }
            if (Optional.IsDefined(EventHubConfigurations))
            {
                writer.WritePropertyName("eventHubConfigurations"u8);
                writer.WriteObjectValue(EventHubConfigurations);
            }
            if (Optional.IsDefined(MonitorConfigurations))
            {
                writer.WritePropertyName("monitorConfigurations"u8);
                writer.WriteObjectValue(MonitorConfigurations);
            }
            writer.WriteEndObject();
        }

        internal static LogDestination DeserializeLogDestination(JsonElement element, Core.Serialization.SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<StorageAccount> storageConfigurations = default;
            Optional<EventHub> eventHubConfigurations = default;
            Optional<MonitorLog> monitorConfigurations = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("storageConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storageConfigurations = StorageAccount.DeserializeStorageAccount(property.Value);
                    continue;
                }
                if (property.NameEquals("eventHubConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    eventHubConfigurations = EventHub.DeserializeEventHub(property.Value);
                    continue;
                }
                if (property.NameEquals("monitorConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    monitorConfigurations = MonitorLog.DeserializeMonitorLog(property.Value);
                    continue;
                }
            }
            return new LogDestination(storageConfigurations.Value, eventHubConfigurations.Value, monitorConfigurations.Value);
        }
    }
}
