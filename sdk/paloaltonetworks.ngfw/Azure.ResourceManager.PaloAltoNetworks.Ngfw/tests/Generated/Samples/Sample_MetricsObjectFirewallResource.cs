// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Samples
{
    public partial class Sample_MetricsObjectFirewallResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_MetricsObjectFirewallGetMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2025-07-07-preview/examples/MetricsObjectFirewall_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "MetricsObjectFirewall_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MetricsObjectFirewallResource created on azure
            // for more information of creating MetricsObjectFirewallResource, please refer to the document of MetricsObjectFirewallResource
            string subscriptionId = "aaaaaaa";
            string resourceGroupName = "rgopenapi";
            string firewallName = "aaaaaaaaaaaaaaaaaaaaaaaa";
            ResourceIdentifier metricsObjectFirewallResourceId = MetricsObjectFirewallResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, firewallName);
            MetricsObjectFirewallResource metricsObjectFirewallResource = client.GetMetricsObjectFirewallResource(metricsObjectFirewallResourceId);

            // invoke the operation
            MetricsObjectFirewallResource result = await metricsObjectFirewallResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MetricsObjectFirewallResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_MetricsObjectFirewallGetMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2025-07-07-preview/examples/MetricsObjectFirewall_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "MetricsObjectFirewall_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MetricsObjectFirewallResource created on azure
            // for more information of creating MetricsObjectFirewallResource, please refer to the document of MetricsObjectFirewallResource
            string subscriptionId = "aaaaaaa";
            string resourceGroupName = "rgopenapi";
            string firewallName = "aaaaaaaaaaaaaaaaaaaaaaaa";
            ResourceIdentifier metricsObjectFirewallResourceId = MetricsObjectFirewallResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, firewallName);
            MetricsObjectFirewallResource metricsObjectFirewallResource = client.GetMetricsObjectFirewallResource(metricsObjectFirewallResourceId);

            // invoke the operation
            MetricsObjectFirewallResource result = await metricsObjectFirewallResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MetricsObjectFirewallResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_MetricsObjectFirewallDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2025-07-07-preview/examples/MetricsObjectFirewall_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "MetricsObjectFirewall_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MetricsObjectFirewallResource created on azure
            // for more information of creating MetricsObjectFirewallResource, please refer to the document of MetricsObjectFirewallResource
            string subscriptionId = "aaaaaaa";
            string resourceGroupName = "rgopenapi";
            string firewallName = "aaaaaaaaaaaaaaaaaaaaaaaa";
            ResourceIdentifier metricsObjectFirewallResourceId = MetricsObjectFirewallResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, firewallName);
            MetricsObjectFirewallResource metricsObjectFirewallResource = client.GetMetricsObjectFirewallResource(metricsObjectFirewallResourceId);

            // invoke the operation
            await metricsObjectFirewallResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_MetricsObjectFirewallDeleteMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2025-07-07-preview/examples/MetricsObjectFirewall_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "MetricsObjectFirewall_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MetricsObjectFirewallResource created on azure
            // for more information of creating MetricsObjectFirewallResource, please refer to the document of MetricsObjectFirewallResource
            string subscriptionId = "aaaaaaa";
            string resourceGroupName = "rgopenapi";
            string firewallName = "aaaaaaaaaaaaaaaaaaaaaaaa";
            ResourceIdentifier metricsObjectFirewallResourceId = MetricsObjectFirewallResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, firewallName);
            MetricsObjectFirewallResource metricsObjectFirewallResource = client.GetMetricsObjectFirewallResource(metricsObjectFirewallResourceId);

            // invoke the operation
            await metricsObjectFirewallResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_MetricsObjectFirewallCreateOrUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2025-07-07-preview/examples/MetricsObjectFirewall_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "MetricsObjectFirewall_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MetricsObjectFirewallResource created on azure
            // for more information of creating MetricsObjectFirewallResource, please refer to the document of MetricsObjectFirewallResource
            string subscriptionId = "aaaaaaa";
            string resourceGroupName = "rgopenapi";
            string firewallName = "aaaaaaaaaaaaaaaaaaaaaaaa";
            ResourceIdentifier metricsObjectFirewallResourceId = MetricsObjectFirewallResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, firewallName);
            MetricsObjectFirewallResource metricsObjectFirewallResource = client.GetMetricsObjectFirewallResource(metricsObjectFirewallResourceId);

            // invoke the operation
            MetricsObjectFirewallResourceData data = new MetricsObjectFirewallResourceData("aaaaaaaaaaaaaaa", "aaa")
            {
                PanETag = new ETag("aaaaaaaaaa"),
            };
            ArmOperation<MetricsObjectFirewallResource> lro = await metricsObjectFirewallResource.CreateOrUpdateAsync(WaitUntil.Completed, data);
            MetricsObjectFirewallResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MetricsObjectFirewallResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_MetricsObjectFirewallCreateOrUpdateMinimumSetGen()
        {
            // Generated from example definition: specification/paloaltonetworks/resource-manager/PaloAltoNetworks.Cloudngfw/preview/2025-07-07-preview/examples/MetricsObjectFirewall_CreateOrUpdate_MinimumSet_Gen.json
            // this example is just showing the usage of "MetricsObjectFirewall_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MetricsObjectFirewallResource created on azure
            // for more information of creating MetricsObjectFirewallResource, please refer to the document of MetricsObjectFirewallResource
            string subscriptionId = "aaaaaaa";
            string resourceGroupName = "rgopenapi";
            string firewallName = "aaaaaaaaaaaaaaaaaaaaaaaa";
            ResourceIdentifier metricsObjectFirewallResourceId = MetricsObjectFirewallResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, firewallName);
            MetricsObjectFirewallResource metricsObjectFirewallResource = client.GetMetricsObjectFirewallResource(metricsObjectFirewallResourceId);

            // invoke the operation
            MetricsObjectFirewallResourceData data = new MetricsObjectFirewallResourceData("aaaaaaaaaaaaaaa", "aaa");
            ArmOperation<MetricsObjectFirewallResource> lro = await metricsObjectFirewallResource.CreateOrUpdateAsync(WaitUntil.Completed, data);
            MetricsObjectFirewallResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MetricsObjectFirewallResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
