// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServices.Models
{
    public partial class MonitoringSummary
    {
        internal static MonitoringSummary DeserializeMonitoringSummary(JsonElement element)
        {
            Optional<int> unHealthyVmCount = default;
            Optional<int> unHealthyProviderCount = default;
            Optional<int> eventsCount = default;
            Optional<int> deprecatedProviderCount = default;
            Optional<int> supportedProviderCount = default;
            Optional<int> unsupportedProviderCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("unHealthyVmCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    unHealthyVmCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("unHealthyProviderCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    unHealthyProviderCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("eventsCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    eventsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("deprecatedProviderCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    deprecatedProviderCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("supportedProviderCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    supportedProviderCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("unsupportedProviderCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    unsupportedProviderCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new MonitoringSummary(Optional.ToNullable(unHealthyVmCount), Optional.ToNullable(unHealthyProviderCount), Optional.ToNullable(eventsCount), Optional.ToNullable(deprecatedProviderCount), Optional.ToNullable(supportedProviderCount), Optional.ToNullable(unsupportedProviderCount));
        }
    }
}
