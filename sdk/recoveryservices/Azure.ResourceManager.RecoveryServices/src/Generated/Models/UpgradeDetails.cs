// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.RecoveryServices.Models
{
    /// <summary> Details for upgrading vault. </summary>
    public partial class UpgradeDetails
    {
        /// <summary> Initializes a new instance of UpgradeDetails. </summary>
        public UpgradeDetails()
        {
        }

        /// <summary> Initializes a new instance of UpgradeDetails. </summary>
        /// <param name="operationId"> ID of the vault upgrade operation. </param>
        /// <param name="startTimeUtc"> UTC time at which the upgrade operation has started. </param>
        /// <param name="lastUpdatedTimeUtc"> UTC time at which the upgrade operation status was last updated. </param>
        /// <param name="endTimeUtc"> UTC time at which the upgrade operation has ended. </param>
        /// <param name="status"> Status of the vault upgrade operation. </param>
        /// <param name="message"> Message to the user containing information about the upgrade operation. </param>
        /// <param name="triggerType"> The way the vault upgrade was triggered. </param>
        /// <param name="upgradedResourceId"> Resource ID of the upgraded vault. </param>
        /// <param name="previousResourceId"> Resource ID of the vault before the upgrade. </param>
        internal UpgradeDetails(string operationId, DateTimeOffset? startTimeUtc, DateTimeOffset? lastUpdatedTimeUtc, DateTimeOffset? endTimeUtc, VaultUpgradeState? status, string message, TriggerType? triggerType, string upgradedResourceId, string previousResourceId)
        {
            OperationId = operationId;
            StartTimeUtc = startTimeUtc;
            LastUpdatedTimeUtc = lastUpdatedTimeUtc;
            EndTimeUtc = endTimeUtc;
            Status = status;
            Message = message;
            TriggerType = triggerType;
            UpgradedResourceId = upgradedResourceId;
            PreviousResourceId = previousResourceId;
        }

        /// <summary> ID of the vault upgrade operation. </summary>
        public string OperationId { get; }
        /// <summary> UTC time at which the upgrade operation has started. </summary>
        public DateTimeOffset? StartTimeUtc { get; }
        /// <summary> UTC time at which the upgrade operation status was last updated. </summary>
        public DateTimeOffset? LastUpdatedTimeUtc { get; }
        /// <summary> UTC time at which the upgrade operation has ended. </summary>
        public DateTimeOffset? EndTimeUtc { get; }
        /// <summary> Status of the vault upgrade operation. </summary>
        public VaultUpgradeState? Status { get; }
        /// <summary> Message to the user containing information about the upgrade operation. </summary>
        public string Message { get; }
        /// <summary> The way the vault upgrade was triggered. </summary>
        public TriggerType? TriggerType { get; }
        /// <summary> Resource ID of the upgraded vault. </summary>
        public string UpgradedResourceId { get; }
        /// <summary> Resource ID of the vault before the upgrade. </summary>
        public string PreviousResourceId { get; }
    }
}
