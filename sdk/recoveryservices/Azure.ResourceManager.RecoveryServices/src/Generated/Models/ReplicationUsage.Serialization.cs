// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServices.Models
{
    public partial class ReplicationUsage
    {
        internal static ReplicationUsage DeserializeReplicationUsage(JsonElement element)
        {
            Optional<MonitoringSummary> monitoringSummary = default;
            Optional<JobsSummary> jobsSummary = default;
            Optional<int> protectedItemCount = default;
            Optional<int> recoveryPlanCount = default;
            Optional<int> registeredServersCount = default;
            Optional<int> recoveryServicesProviderAuthType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("monitoringSummary"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    monitoringSummary = MonitoringSummary.DeserializeMonitoringSummary(property.Value);
                    continue;
                }
                if (property.NameEquals("jobsSummary"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    jobsSummary = JobsSummary.DeserializeJobsSummary(property.Value);
                    continue;
                }
                if (property.NameEquals("protectedItemCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    protectedItemCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("recoveryPlanCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    recoveryPlanCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("registeredServersCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    registeredServersCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("recoveryServicesProviderAuthType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    recoveryServicesProviderAuthType = property.Value.GetInt32();
                    continue;
                }
            }
            return new ReplicationUsage(monitoringSummary.Value, jobsSummary.Value, Optional.ToNullable(protectedItemCount), Optional.ToNullable(recoveryPlanCount), Optional.ToNullable(registeredServersCount), Optional.ToNullable(recoveryServicesProviderAuthType));
        }
    }
}
