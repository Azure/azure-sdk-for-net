// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of the vault.
    /// </summary>
    public partial class VaultProperties
    {
        /// <summary>
        /// Initializes a new instance of the VaultProperties class.
        /// </summary>
        public VaultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VaultProperties class.
        /// </summary>
        /// <param name="provisioningState">Provisioning State.</param>
        /// <param name="privateEndpointConnections">List of private endpoint
        /// connection.</param>
        /// <param name="privateEndpointStateForBackup">Private endpoint state
        /// for backup. Possible values include: 'None', 'Enabled'</param>
        /// <param name="privateEndpointStateForSiteRecovery">Private endpoint
        /// state for site recovery. Possible values include: 'None',
        /// 'Enabled'</param>
        /// <param name="encryption">Customer Managed Key details of the
        /// resource.</param>
        /// <param name="moveDetails">The details of the latest move operation
        /// performed on the Azure Resource</param>
        /// <param name="moveState">The State of the Resource after the move
        /// operation. Possible values include: 'Unknown', 'InProgress',
        /// 'PrepareFailed', 'CommitFailed', 'PrepareTimedout',
        /// 'CommitTimedout', 'MoveSucceeded', 'Failure', 'CriticalFailure',
        /// 'PartialSuccess'</param>
        /// <param name="backupStorageVersion">Backup storage version. Possible
        /// values include: 'V1', 'V2', 'Unassigned'</param>
        /// <param name="publicNetworkAccess">property to enable or disable
        /// resource provider inbound network traffic from public clients.
        /// Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="monitoringSettings">Monitoring Settings of the
        /// vault</param>
        /// <param name="redundancySettings">The redundancy Settings of a
        /// Vault</param>
        /// <param name="securitySettings">Security Settings of the
        /// vault</param>
        public VaultProperties(string provisioningState = default(string), UpgradeDetails upgradeDetails = default(UpgradeDetails), IList<PrivateEndpointConnectionVaultProperties> privateEndpointConnections = default(IList<PrivateEndpointConnectionVaultProperties>), string privateEndpointStateForBackup = default(string), string privateEndpointStateForSiteRecovery = default(string), VaultPropertiesEncryption encryption = default(VaultPropertiesEncryption), VaultPropertiesMoveDetails moveDetails = default(VaultPropertiesMoveDetails), string moveState = default(string), string backupStorageVersion = default(string), string publicNetworkAccess = default(string), MonitoringSettings monitoringSettings = default(MonitoringSettings), VaultPropertiesRedundancySettings redundancySettings = default(VaultPropertiesRedundancySettings), SecuritySettings securitySettings = default(SecuritySettings))
        {
            ProvisioningState = provisioningState;
            UpgradeDetails = upgradeDetails;
            PrivateEndpointConnections = privateEndpointConnections;
            PrivateEndpointStateForBackup = privateEndpointStateForBackup;
            PrivateEndpointStateForSiteRecovery = privateEndpointStateForSiteRecovery;
            Encryption = encryption;
            MoveDetails = moveDetails;
            MoveState = moveState;
            BackupStorageVersion = backupStorageVersion;
            PublicNetworkAccess = publicNetworkAccess;
            MonitoringSettings = monitoringSettings;
            RedundancySettings = redundancySettings;
            SecuritySettings = securitySettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning State.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "upgradeDetails")]
        public UpgradeDetails UpgradeDetails { get; set; }

        /// <summary>
        /// Gets list of private endpoint connection.
        /// </summary>
        [JsonProperty(PropertyName = "privateEndpointConnections")]
        public IList<PrivateEndpointConnectionVaultProperties> PrivateEndpointConnections { get; private set; }

        /// <summary>
        /// Gets private endpoint state for backup. Possible values include:
        /// 'None', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "privateEndpointStateForBackup")]
        public string PrivateEndpointStateForBackup { get; private set; }

        /// <summary>
        /// Gets private endpoint state for site recovery. Possible values
        /// include: 'None', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "privateEndpointStateForSiteRecovery")]
        public string PrivateEndpointStateForSiteRecovery { get; private set; }

        /// <summary>
        /// Gets or sets customer Managed Key details of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "encryption")]
        public VaultPropertiesEncryption Encryption { get; set; }

        /// <summary>
        /// Gets or sets the details of the latest move operation performed on
        /// the Azure Resource
        /// </summary>
        [JsonProperty(PropertyName = "moveDetails")]
        public VaultPropertiesMoveDetails MoveDetails { get; set; }

        /// <summary>
        /// Gets the State of the Resource after the move operation. Possible
        /// values include: 'Unknown', 'InProgress', 'PrepareFailed',
        /// 'CommitFailed', 'PrepareTimedout', 'CommitTimedout',
        /// 'MoveSucceeded', 'Failure', 'CriticalFailure', 'PartialSuccess'
        /// </summary>
        [JsonProperty(PropertyName = "moveState")]
        public string MoveState { get; private set; }

        /// <summary>
        /// Gets backup storage version. Possible values include: 'V1', 'V2',
        /// 'Unassigned'
        /// </summary>
        [JsonProperty(PropertyName = "backupStorageVersion")]
        public string BackupStorageVersion { get; private set; }

        /// <summary>
        /// Gets or sets property to enable or disable resource provider
        /// inbound network traffic from public clients. Possible values
        /// include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

        /// <summary>
        /// Gets or sets monitoring Settings of the vault
        /// </summary>
        [JsonProperty(PropertyName = "monitoringSettings")]
        public MonitoringSettings MonitoringSettings { get; set; }

        /// <summary>
        /// Gets or sets the redundancy Settings of a Vault
        /// </summary>
        [JsonProperty(PropertyName = "redundancySettings")]
        public VaultPropertiesRedundancySettings RedundancySettings { get; set; }

        /// <summary>
        /// Gets or sets security Settings of the vault
        /// </summary>
        [JsonProperty(PropertyName = "securitySettings")]
        public SecuritySettings SecuritySettings { get; set; }

    }
}
