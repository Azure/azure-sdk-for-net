// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Summary of the replication monitoring data for this vault.
    /// </summary>
    public partial class MonitoringSummary
    {
        /// <summary>
        /// Initializes a new instance of the MonitoringSummary class.
        /// </summary>
        public MonitoringSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MonitoringSummary class.
        /// </summary>
        /// <param name="unHealthyVmCount">Count of unhealthy VMs.</param>
        /// <param name="unHealthyProviderCount">Count of unhealthy replication
        /// providers.</param>
        /// <param name="eventsCount">Count of all critical warnings.</param>
        /// <param name="deprecatedProviderCount">Count of all deprecated
        /// recovery service providers.</param>
        /// <param name="supportedProviderCount">Count of all the supported
        /// recovery service providers.</param>
        /// <param name="unsupportedProviderCount">Count of all the unsupported
        /// recovery service providers.</param>
        public MonitoringSummary(int? unHealthyVmCount = default(int?), int? unHealthyProviderCount = default(int?), int? eventsCount = default(int?), int? deprecatedProviderCount = default(int?), int? supportedProviderCount = default(int?), int? unsupportedProviderCount = default(int?))
        {
            UnHealthyVmCount = unHealthyVmCount;
            UnHealthyProviderCount = unHealthyProviderCount;
            EventsCount = eventsCount;
            DeprecatedProviderCount = deprecatedProviderCount;
            SupportedProviderCount = supportedProviderCount;
            UnsupportedProviderCount = unsupportedProviderCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets count of unhealthy VMs.
        /// </summary>
        [JsonProperty(PropertyName = "unHealthyVmCount")]
        public int? UnHealthyVmCount { get; set; }

        /// <summary>
        /// Gets or sets count of unhealthy replication providers.
        /// </summary>
        [JsonProperty(PropertyName = "unHealthyProviderCount")]
        public int? UnHealthyProviderCount { get; set; }

        /// <summary>
        /// Gets or sets count of all critical warnings.
        /// </summary>
        [JsonProperty(PropertyName = "eventsCount")]
        public int? EventsCount { get; set; }

        /// <summary>
        /// Gets or sets count of all deprecated recovery service providers.
        /// </summary>
        [JsonProperty(PropertyName = "deprecatedProviderCount")]
        public int? DeprecatedProviderCount { get; set; }

        /// <summary>
        /// Gets or sets count of all the supported recovery service providers.
        /// </summary>
        [JsonProperty(PropertyName = "supportedProviderCount")]
        public int? SupportedProviderCount { get; set; }

        /// <summary>
        /// Gets or sets count of all the unsupported recovery service
        /// providers.
        /// </summary>
        [JsonProperty(PropertyName = "unsupportedProviderCount")]
        public int? UnsupportedProviderCount { get; set; }

    }
}
