// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.FluidRelay;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.FluidRelay.Models
{
    /// <summary> Model factory for generated models. </summary>
    public static partial class FluidRelayModelFactory
    {
        /// <summary> Initializes a new instance of FluidRelayServerData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> The type of identity used for the resource. </param>
        /// <param name="frsTenantId"> The Fluid tenantId for this server. </param>
        /// <param name="fluidRelayEndpoints"> The Fluid Relay Service endpoints for this server. </param>
        /// <param name="provisioningState"> Provision states for FluidRelay RP. </param>
        /// <param name="customerManagedKeyEncryption"> All encryption configuration for a resource. </param>
        /// <param name="storageSku"> Sku of the storage associated with the resource. </param>
        /// <returns> A new <see cref="FluidRelay.FluidRelayServerData"/> instance for mocking. </returns>
        public static FluidRelayServerData FluidRelayServerData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, ManagedServiceIdentity identity = null, Guid? frsTenantId = null, FluidRelayEndpoints fluidRelayEndpoints = null, FluidRelayProvisioningState? provisioningState = null, CmkEncryptionProperties customerManagedKeyEncryption = null, FluidRelayStorageSku? storageSku = null)
        {
            tags ??= new Dictionary<string, string>();

            return new FluidRelayServerData(id, name, resourceType, systemData, tags, location, identity, frsTenantId, fluidRelayEndpoints, provisioningState, new EncryptionProperties(customerManagedKeyEncryption), storageSku);
        }

        /// <summary> Initializes a new instance of FluidRelayEndpoints. </summary>
        /// <param name="ordererEndpoints"> The Fluid Relay Orderer endpoints. </param>
        /// <param name="storageEndpoints"> The Fluid Relay storage endpoints. </param>
        /// <param name="serviceEndpoints"> The Fluid Relay service endpoints. </param>
        /// <returns> A new <see cref="Models.FluidRelayEndpoints"/> instance for mocking. </returns>
        public static FluidRelayEndpoints FluidRelayEndpoints(IEnumerable<string> ordererEndpoints = null, IEnumerable<string> storageEndpoints = null, IEnumerable<string> serviceEndpoints = null)
        {
            ordererEndpoints ??= new List<string>();
            storageEndpoints ??= new List<string>();
            serviceEndpoints ??= new List<string>();

            return new FluidRelayEndpoints(ordererEndpoints?.ToList(), storageEndpoints?.ToList(), serviceEndpoints?.ToList());
        }

        /// <summary> Initializes a new instance of CmkEncryptionProperties. </summary>
        /// <param name="keyEncryptionKeyIdentity"> All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault. </param>
        /// <param name="keyEncryptionKeyUri"> key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url. </param>
        /// <returns> A new <see cref="Models.CmkEncryptionProperties"/> instance for mocking. </returns>
        public static CmkEncryptionProperties CmkEncryptionProperties(CmkIdentity keyEncryptionKeyIdentity = null, Uri keyEncryptionKeyUri = null)
        {
            return new CmkEncryptionProperties(keyEncryptionKeyIdentity, keyEncryptionKeyUri);
        }

        /// <summary> Initializes a new instance of CmkIdentity. </summary>
        /// <param name="identityType"> Values can be SystemAssigned or UserAssigned. </param>
        /// <param name="userAssignedIdentityResourceId"> user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/&lt;resource group&gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity. </param>
        /// <returns> A new <see cref="Models.CmkIdentity"/> instance for mocking. </returns>
        public static CmkIdentity CmkIdentity(CmkIdentityType? identityType = null, ResourceIdentifier userAssignedIdentityResourceId = null)
        {
            return new CmkIdentity(identityType, userAssignedIdentityResourceId);
        }

        /// <summary> Initializes a new instance of FluidRelayServerKeys. </summary>
        /// <param name="primaryKey"> The primary key for this server. </param>
        /// <param name="secondaryKey"> The secondary key for this server. </param>
        /// <returns> A new <see cref="Models.FluidRelayServerKeys"/> instance for mocking. </returns>
        public static FluidRelayServerKeys FluidRelayServerKeys(string primaryKey = null, string secondaryKey = null)
        {
            return new FluidRelayServerKeys(primaryKey, secondaryKey);
        }

        /// <summary> Initializes a new instance of FluidRelayContainerData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="frsTenantId"> The Fluid tenantId for this container. </param>
        /// <param name="frsContainerId"> The frsContainerId for this container. </param>
        /// <param name="provisioningState"> Provision states for FluidRelay RP. </param>
        /// <param name="createdOn"> The creation time of this resource. </param>
        /// <param name="lastAccessOn"> Last time when user access this resource. </param>
        /// <returns> A new <see cref="FluidRelay.FluidRelayContainerData"/> instance for mocking. </returns>
        public static FluidRelayContainerData FluidRelayContainerData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, Guid? frsTenantId = null, Guid? frsContainerId = null, FluidRelayProvisioningState? provisioningState = null, DateTimeOffset? createdOn = null, DateTimeOffset? lastAccessOn = null)
        {
            return new FluidRelayContainerData(id, name, resourceType, systemData, frsTenantId, frsContainerId, provisioningState, createdOn, lastAccessOn);
        }
    }
}
