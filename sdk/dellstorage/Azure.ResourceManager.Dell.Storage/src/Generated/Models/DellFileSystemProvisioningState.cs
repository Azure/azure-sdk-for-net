// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Dell.Storage.Models
{
    /// <summary> Provisioning State of the File system resource. </summary>
    public readonly partial struct DellFileSystemProvisioningState : IEquatable<DellFileSystemProvisioningState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DellFileSystemProvisioningState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DellFileSystemProvisioningState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AcceptedValue = "Accepted";
        private const string CreatingValue = "Creating";
        private const string UpdatingValue = "Updating";
        private const string DeletingValue = "Deleting";
        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";
        private const string CanceledValue = "Canceled";
        private const string DeletedValue = "Deleted";
        private const string NotSpecifiedValue = "NotSpecified";

        /// <summary> File system resource creation request accepted. </summary>
        public static DellFileSystemProvisioningState Accepted { get; } = new DellFileSystemProvisioningState(AcceptedValue);
        /// <summary> File system resource creation started. </summary>
        public static DellFileSystemProvisioningState Creating { get; } = new DellFileSystemProvisioningState(CreatingValue);
        /// <summary> File system resource is being updated. </summary>
        public static DellFileSystemProvisioningState Updating { get; } = new DellFileSystemProvisioningState(UpdatingValue);
        /// <summary> File system resource deletion started. </summary>
        public static DellFileSystemProvisioningState Deleting { get; } = new DellFileSystemProvisioningState(DeletingValue);
        /// <summary> File system resource creation successful. </summary>
        public static DellFileSystemProvisioningState Succeeded { get; } = new DellFileSystemProvisioningState(SucceededValue);
        /// <summary> File system resource creation failed. </summary>
        public static DellFileSystemProvisioningState Failed { get; } = new DellFileSystemProvisioningState(FailedValue);
        /// <summary> File system resource creation canceled. </summary>
        public static DellFileSystemProvisioningState Canceled { get; } = new DellFileSystemProvisioningState(CanceledValue);
        /// <summary> File system resource is deleted. </summary>
        public static DellFileSystemProvisioningState Deleted { get; } = new DellFileSystemProvisioningState(DeletedValue);
        /// <summary> File system resource state is unknown. </summary>
        public static DellFileSystemProvisioningState NotSpecified { get; } = new DellFileSystemProvisioningState(NotSpecifiedValue);
        /// <summary> Determines if two <see cref="DellFileSystemProvisioningState"/> values are the same. </summary>
        public static bool operator ==(DellFileSystemProvisioningState left, DellFileSystemProvisioningState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DellFileSystemProvisioningState"/> values are not the same. </summary>
        public static bool operator !=(DellFileSystemProvisioningState left, DellFileSystemProvisioningState right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DellFileSystemProvisioningState"/>. </summary>
        public static implicit operator DellFileSystemProvisioningState(string value) => new DellFileSystemProvisioningState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DellFileSystemProvisioningState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DellFileSystemProvisioningState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
