// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Dell.Storage.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmDellStorageModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Storage.DellFileSystemData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <returns> A new <see cref="Storage.DellFileSystemData"/> instance for mocking. </returns>
        public static DellFileSystemData DellFileSystemData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, DellFileSystemProperties properties = null, ManagedServiceIdentity identity = null)
        {
            tags ??= new Dictionary<string, string>();

            return new DellFileSystemData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                properties,
                identity,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DellFileSystemProperties"/>. </summary>
        /// <param name="capacity"> Capacity for Dell Filesystem, Will be received as part of Job Status. </param>
        /// <param name="marketplace"> Marketplace details. </param>
        /// <param name="provisioningState"> Provisioning State of the resource. </param>
        /// <param name="delegatedSubnetId"> Delegated subnet id for Vnet injection. </param>
        /// <param name="delegatedSubnetCidr"> Domain range for the delegated subnet. </param>
        /// <param name="userEmail"> User Details. </param>
        /// <param name="fileSystemId"> File system Id of the resource. </param>
        /// <param name="smartConnectFqdn"> Smart Connect FQDN of the resource. </param>
        /// <param name="oneFsUri"> OneFS url. </param>
        /// <param name="dellReferenceNumber"> DellReferenceNumber of the resource. </param>
        /// <param name="encryption"> EncryptionProperties of the resource. </param>
        /// <returns> A new <see cref="Models.DellFileSystemProperties"/> instance for mocking. </returns>
        public static DellFileSystemProperties DellFileSystemProperties(DellFileSystemCapacity capacity = null, DellFileSystemMarketplaceDetails marketplace = null, DellFileSystemProvisioningState? provisioningState = null, ResourceIdentifier delegatedSubnetId = null, string delegatedSubnetCidr = null, string userEmail = null, string fileSystemId = null, string smartConnectFqdn = null, Uri oneFsUri = null, string dellReferenceNumber = null, DellFileSystemEncryptionProperties encryption = null)
        {
            return new DellFileSystemProperties(
                capacity,
                marketplace,
                provisioningState,
                delegatedSubnetId,
                delegatedSubnetCidr,
                userEmail != null ? new DellFileSystemUserDetails(userEmail, serializedAdditionalRawData: null) : null,
                fileSystemId,
                smartConnectFqdn,
                oneFsUri,
                dellReferenceNumber,
                encryption,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DellFileSystemMarketplaceDetails"/>. </summary>
        /// <param name="marketplaceSubscriptionId"> Marketplace Subscription Id. </param>
        /// <param name="planId"> Plan Id. </param>
        /// <param name="offerId"> Offer Id. </param>
        /// <param name="publisherId"> Publisher Id. </param>
        /// <param name="privateOfferId"> Private Offer Id. </param>
        /// <param name="planName"> Plan Name. </param>
        /// <param name="marketplaceSubscriptionStatus"> Marketplace subscription status. </param>
        /// <param name="endDate"> End Date of the subscription. </param>
        /// <param name="termUnit"> Term Unit. </param>
        /// <returns> A new <see cref="Models.DellFileSystemMarketplaceDetails"/> instance for mocking. </returns>
        public static DellFileSystemMarketplaceDetails DellFileSystemMarketplaceDetails(string marketplaceSubscriptionId = null, string planId = null, string offerId = null, string publisherId = null, string privateOfferId = null, string planName = null, DellFileSystemMarketplaceSubscriptionStatus? marketplaceSubscriptionStatus = null, string endDate = null, string termUnit = null)
        {
            return new DellFileSystemMarketplaceDetails(
                marketplaceSubscriptionId,
                planId,
                offerId,
                publisherId,
                privateOfferId,
                planName,
                marketplaceSubscriptionStatus,
                endDate,
                termUnit,
                serializedAdditionalRawData: null);
        }
    }
}
