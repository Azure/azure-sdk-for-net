// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagedNetwork.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Managed Network resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ManagedNetworkModel : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedNetworkModel class.
        /// </summary>
        public ManagedNetworkModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedNetworkModel class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="provisioningState">Provisioning state of the
        /// ManagedNetwork resource. Possible values are: 'Updating',
        /// 'Deleting', and 'Failed'. Possible values include: 'Updating',
        /// 'Deleting', 'Failed', 'Succeeded'</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        /// <param name="scope">The collection of management groups,
        /// subscriptions, virtual networks, and subnets by the Managed
        /// Network. This is a read-only property that is reflective of all
        /// ScopeAssignments for this Managed Network</param>
        /// <param name="connectivity">The collection of groups and policies
        /// concerned with connectivity</param>
        public ManagedNetworkModel(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string provisioningState = default(string), string etag = default(string), Scope scope = default(Scope), ConnectivityCollection connectivity = default(ConnectivityCollection))
            : base(id, name, type, location, tags)
        {
            ProvisioningState = provisioningState;
            Etag = etag;
            Scope = scope;
            Connectivity = connectivity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state of the ManagedNetwork resource. Possible
        /// values are: 'Updating', 'Deleting', and 'Failed'. Possible values
        /// include: 'Updating', 'Deleting', 'Failed', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.etag")]
        public string Etag { get; private set; }

        /// <summary>
        /// Gets or sets the collection of management groups, subscriptions,
        /// virtual networks, and subnets by the Managed Network. This is a
        /// read-only property that is reflective of all ScopeAssignments for
        /// this Managed Network
        /// </summary>
        [JsonProperty(PropertyName = "properties.scope")]
        public Scope Scope { get; set; }

        /// <summary>
        /// Gets the collection of groups and policies concerned with
        /// connectivity
        /// </summary>
        [JsonProperty(PropertyName = "properties.connectivity")]
        public ConnectivityCollection Connectivity { get; private set; }

    }
}
