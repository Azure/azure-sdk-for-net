// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagedNetwork.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Managed Network Peering Policy resource
    /// </summary>
    public partial class ManagedNetworkPeeringPolicy : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedNetworkPeeringPolicy
        /// class.
        /// </summary>
        public ManagedNetworkPeeringPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedNetworkPeeringPolicy
        /// class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="properties">Gets or sets the properties of a Managed
        /// Network Policy</param>
        public ManagedNetworkPeeringPolicy(string id = default(string), string name = default(string), string type = default(string), string location = default(string), ManagedNetworkPeeringPolicyProperties properties = default(ManagedNetworkPeeringPolicyProperties))
            : base(id, name, type, location)
        {
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the properties of a Managed Network Policy
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public ManagedNetworkPeeringPolicyProperties Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Properties != null)
            {
                Properties.Validate();
            }
        }
    }
}
