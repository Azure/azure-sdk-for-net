// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagedNetwork.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Base for resource properties.
    /// </summary>
    public partial class ResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ResourceProperties class.
        /// </summary>
        public ResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceProperties class.
        /// </summary>
        /// <param name="provisioningState">Provisioning state of the
        /// ManagedNetwork resource. Possible values are: 'Updating',
        /// 'Deleting', and 'Failed'. Possible values include: 'Updating',
        /// 'Deleting', 'Failed', 'Succeeded'</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public ResourceProperties(string provisioningState = default(string), string etag = default(string))
        {
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state of the ManagedNetwork resource. Possible
        /// values are: 'Updating', 'Deleting', and 'Failed'. Possible values
        /// include: 'Updating', 'Deleting', 'Failed', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
