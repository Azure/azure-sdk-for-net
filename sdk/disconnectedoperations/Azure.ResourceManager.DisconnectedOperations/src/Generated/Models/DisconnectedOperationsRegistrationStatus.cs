// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DisconnectedOperations.Models
{
    /// <summary> Registration status. </summary>
    public readonly partial struct DisconnectedOperationsRegistrationStatus : IEquatable<DisconnectedOperationsRegistrationStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DisconnectedOperationsRegistrationStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DisconnectedOperationsRegistrationStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string RegisteredValue = "Registered";
        private const string UnregisteredValue = "Unregistered";

        /// <summary> Device is registered to cloud. </summary>
        public static DisconnectedOperationsRegistrationStatus Registered { get; } = new DisconnectedOperationsRegistrationStatus(RegisteredValue);
        /// <summary> Device is not registered to cloud. </summary>
        public static DisconnectedOperationsRegistrationStatus Unregistered { get; } = new DisconnectedOperationsRegistrationStatus(UnregisteredValue);
        /// <summary> Determines if two <see cref="DisconnectedOperationsRegistrationStatus"/> values are the same. </summary>
        public static bool operator ==(DisconnectedOperationsRegistrationStatus left, DisconnectedOperationsRegistrationStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DisconnectedOperationsRegistrationStatus"/> values are not the same. </summary>
        public static bool operator !=(DisconnectedOperationsRegistrationStatus left, DisconnectedOperationsRegistrationStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DisconnectedOperationsRegistrationStatus"/>. </summary>
        public static implicit operator DisconnectedOperationsRegistrationStatus(string value) => new DisconnectedOperationsRegistrationStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DisconnectedOperationsRegistrationStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DisconnectedOperationsRegistrationStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
