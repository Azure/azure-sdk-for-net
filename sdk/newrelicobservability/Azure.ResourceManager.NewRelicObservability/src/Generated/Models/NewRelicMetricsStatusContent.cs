// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NewRelicObservability.Models
{
    /// <summary> Request of get metrics status Operation. </summary>
    public partial class NewRelicMetricsStatusContent
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="NewRelicMetricsStatusContent"/>. </summary>
        /// <param name="userEmail"> User Email. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="userEmail"/> is null. </exception>
        public NewRelicMetricsStatusContent(string userEmail)
        {
            Argument.AssertNotNull(userEmail, nameof(userEmail));

            AzureResourceIds = new ChangeTrackingList<string>();
            UserEmail = userEmail;
        }

        /// <summary> Initializes a new instance of <see cref="NewRelicMetricsStatusContent"/>. </summary>
        /// <param name="azureResourceIds"> Azure resource IDs. </param>
        /// <param name="userEmail"> User Email. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal NewRelicMetricsStatusContent(IList<string> azureResourceIds, string userEmail, Dictionary<string, BinaryData> rawData)
        {
            AzureResourceIds = azureResourceIds;
            UserEmail = userEmail;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="NewRelicMetricsStatusContent"/> for deserialization. </summary>
        internal NewRelicMetricsStatusContent()
        {
        }

        /// <summary> Azure resource IDs. </summary>
        public IList<string> AzureResourceIds { get; }
        /// <summary> User Email. </summary>
        public string UserEmail { get; }
    }
}
