// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.NewRelicObservability.Models
{
    /// <summary>
    /// Resubscribe Properties
    /// Serialized Name: ResubscribeProperties
    /// </summary>
    public partial class NewRelicResubscribeProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NewRelicResubscribeProperties"/>. </summary>
        public NewRelicResubscribeProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NewRelicResubscribeProperties"/>. </summary>
        /// <param name="planId">
        /// Newly selected plan Id to create the new Marketplace subscription for Resubscribe
        /// Serialized Name: ResubscribeProperties.planId
        /// </param>
        /// <param name="termId">
        /// Newly selected term Id to create the new Marketplace subscription for Resubscribe
        /// Serialized Name: ResubscribeProperties.termId
        /// </param>
        /// <param name="subscriptionId">
        /// Newly selected Azure Subscription Id in which the new Marketplace subscription will be created for Resubscribe
        /// Serialized Name: ResubscribeProperties.subscriptionId
        /// </param>
        /// <param name="resourceGroup">
        /// Newly selected Azure resource group in which the new Marketplace subscription will be created for Resubscribe
        /// Serialized Name: ResubscribeProperties.resourceGroup
        /// </param>
        /// <param name="organizationId">
        /// Organization Id of the NewRelic Organization that needs to be resubscribed
        /// Serialized Name: ResubscribeProperties.organizationId
        /// </param>
        /// <param name="publisherId">
        /// Publisher Id of the NewRelic offer that needs to be resubscribed
        /// Serialized Name: ResubscribeProperties.publisherId
        /// </param>
        /// <param name="offerId">
        /// Offer Id of the NewRelic offer that needs to be resubscribed
        /// Serialized Name: ResubscribeProperties.offerId
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NewRelicResubscribeProperties(string planId, string termId, string subscriptionId, string resourceGroup, string organizationId, string publisherId, string offerId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            PlanId = planId;
            TermId = termId;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            OrganizationId = organizationId;
            PublisherId = publisherId;
            OfferId = offerId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Newly selected plan Id to create the new Marketplace subscription for Resubscribe
        /// Serialized Name: ResubscribeProperties.planId
        /// </summary>
        [WirePath("planId")]
        public string PlanId { get; set; }
        /// <summary>
        /// Newly selected term Id to create the new Marketplace subscription for Resubscribe
        /// Serialized Name: ResubscribeProperties.termId
        /// </summary>
        [WirePath("termId")]
        public string TermId { get; set; }
        /// <summary>
        /// Newly selected Azure Subscription Id in which the new Marketplace subscription will be created for Resubscribe
        /// Serialized Name: ResubscribeProperties.subscriptionId
        /// </summary>
        [WirePath("subscriptionId")]
        public string SubscriptionId { get; set; }
        /// <summary>
        /// Newly selected Azure resource group in which the new Marketplace subscription will be created for Resubscribe
        /// Serialized Name: ResubscribeProperties.resourceGroup
        /// </summary>
        [WirePath("resourceGroup")]
        public string ResourceGroup { get; set; }
        /// <summary>
        /// Organization Id of the NewRelic Organization that needs to be resubscribed
        /// Serialized Name: ResubscribeProperties.organizationId
        /// </summary>
        [WirePath("organizationId")]
        public string OrganizationId { get; set; }
        /// <summary>
        /// Publisher Id of the NewRelic offer that needs to be resubscribed
        /// Serialized Name: ResubscribeProperties.publisherId
        /// </summary>
        [WirePath("publisherId")]
        public string PublisherId { get; set; }
        /// <summary>
        /// Offer Id of the NewRelic offer that needs to be resubscribed
        /// Serialized Name: ResubscribeProperties.offerId
        /// </summary>
        [WirePath("offerId")]
        public string OfferId { get; set; }
    }
}
