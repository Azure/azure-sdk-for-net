// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.NewRelicObservability.Models
{
    public partial class NewRelicResourceMonitorResult
    {
        internal static NewRelicResourceMonitorResult DeserializeNewRelicResourceMonitorResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<ResourceIdentifier> id = default;
            Core.Optional<NewRelicObservabilitySendingMetricsStatus> sendingMetrics = default;
            Core.Optional<string> reasonForMetricsStatus = default;
            Core.Optional<NewRelicObservabilitySendingLogsStatus> sendingLogs = default;
            Core.Optional<string> reasonForLogsStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sendingMetrics"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sendingMetrics = new NewRelicObservabilitySendingMetricsStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("reasonForMetricsStatus"u8))
                {
                    reasonForMetricsStatus = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sendingLogs"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sendingLogs = new NewRelicObservabilitySendingLogsStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("reasonForLogsStatus"u8))
                {
                    reasonForLogsStatus = property.Value.GetString();
                    continue;
                }
            }
            return new NewRelicResourceMonitorResult(id.Value, Core.Optional.ToNullable(sendingMetrics), reasonForMetricsStatus.Value, Core.Optional.ToNullable(sendingLogs), reasonForLogsStatus.Value);
        }
    }
}
