// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.NewRelicObservability;

namespace Azure.ResourceManager.NewRelicObservability.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmNewRelicObservabilityModelFactory
    {
        /// <summary> Initializes a new instance of AccountResource. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="organizationId"> organization id. </param>
        /// <param name="accountId"> account id. </param>
        /// <param name="accountName"> account name. </param>
        /// <param name="region"> region. </param>
        /// <returns> A new <see cref="Models.AccountResource"/> instance for mocking. </returns>
        public static AccountResource AccountResource(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string organizationId = null, string accountId = null, string accountName = null, string region = null)
        {
            return new AccountResource(id, name, resourceType, systemData, organizationId, accountId, accountName, region);
        }

        /// <summary> Initializes a new instance of NewRelicMonitorResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <param name="provisioningState"> Provisioning State of the resource. </param>
        /// <param name="monitoringStatus"> MonitoringStatus of the resource. </param>
        /// <param name="marketplaceSubscriptionStatus"> NewRelic Organization properties of the resource. </param>
        /// <param name="marketplaceSubscriptionId"> Marketplace Subscription Id. </param>
        /// <param name="newRelicAccountProperties"> MarketplaceSubscriptionStatus of the resource. </param>
        /// <param name="userInfo"> User Info. </param>
        /// <param name="planData"> Plan details. </param>
        /// <param name="liftrResourceCategory"> Liftr resource category. </param>
        /// <param name="liftrResourcePreference"> Liftr resource preference. The priority of the resource. </param>
        /// <param name="orgCreationSource"> Source of org creation. </param>
        /// <param name="accountCreationSource"> Source of account creation. </param>
        /// <returns> A new <see cref="NewRelicObservability.NewRelicMonitorResourceData"/> instance for mocking. </returns>
        public static NewRelicMonitorResourceData NewRelicMonitorResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, ManagedServiceIdentity identity = null, NewrelicProvisioningState? provisioningState = null, MonitoringStatus? monitoringStatus = null, MarketplaceSubscriptionStatus? marketplaceSubscriptionStatus = null, string marketplaceSubscriptionId = null, NewRelicAccountProperties newRelicAccountProperties = null, UserInfo userInfo = null, PlanData planData = null, LiftrResourceCategory? liftrResourceCategory = null, int? liftrResourcePreference = null, OrgCreationSource? orgCreationSource = null, AccountCreationSource? accountCreationSource = null)
        {
            tags ??= new Dictionary<string, string>();

            return new NewRelicMonitorResourceData(id, name, resourceType, systemData, tags, location, identity, provisioningState, monitoringStatus, marketplaceSubscriptionStatus, marketplaceSubscriptionId, newRelicAccountProperties, userInfo, planData, liftrResourceCategory, liftrResourcePreference, orgCreationSource, accountCreationSource);
        }

        /// <summary> Initializes a new instance of OrganizationResource. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="organizationId"> organization id. </param>
        /// <param name="organizationName"> organization name. </param>
        /// <param name="billingSource"> Billing source. </param>
        /// <returns> A new <see cref="Models.OrganizationResource"/> instance for mocking. </returns>
        public static OrganizationResource OrganizationResource(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string organizationId = null, string organizationName = null, BillingSource? billingSource = null)
        {
            return new OrganizationResource(id, name, resourceType, systemData, organizationId, organizationName, billingSource);
        }

        /// <summary> Initializes a new instance of PlanDataResource. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="planData"> Plan details. </param>
        /// <param name="orgCreationSource"> Source of org creation. </param>
        /// <param name="accountCreationSource"> Source of account creation. </param>
        /// <returns> A new <see cref="Models.PlanDataResource"/> instance for mocking. </returns>
        public static PlanDataResource PlanDataResource(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, PlanData planData = null, OrgCreationSource? orgCreationSource = null, AccountCreationSource? accountCreationSource = null)
        {
            return new PlanDataResource(id, name, resourceType, systemData, planData, orgCreationSource, accountCreationSource);
        }

        /// <summary> Initializes a new instance of MetricsStatusResponse. </summary>
        /// <param name="azureResourceIds"> Azure resource IDs. </param>
        /// <returns> A new <see cref="Models.MetricsStatusResponse"/> instance for mocking. </returns>
        public static MetricsStatusResponse MetricsStatusResponse(IEnumerable<string> azureResourceIds = null)
        {
            azureResourceIds ??= new List<string>();

            return new MetricsStatusResponse(azureResourceIds?.ToList());
        }

        /// <summary> Initializes a new instance of AppServiceInfo. </summary>
        /// <param name="azureResourceId"> Azure App service resource ID. </param>
        /// <param name="agentVersion"> Version of the NewRelic agent installed on the App service. </param>
        /// <param name="agentStatus"> Status of the NewRelic agent installed on the App service. </param>
        /// <returns> A new <see cref="Models.AppServiceInfo"/> instance for mocking. </returns>
        public static AppServiceInfo AppServiceInfo(string azureResourceId = null, string agentVersion = null, string agentStatus = null)
        {
            return new AppServiceInfo(azureResourceId, agentVersion, agentStatus);
        }

        /// <summary> Initializes a new instance of VmInfo. </summary>
        /// <param name="vmId"> Azure VM resource ID. </param>
        /// <param name="agentVersion"> Version of the NewRelic agent installed on the VM. </param>
        /// <param name="agentStatus"> Status of the NewRelic agent installed on the VM. </param>
        /// <returns> A new <see cref="Models.VmInfo"/> instance for mocking. </returns>
        public static VmInfo VmInfo(string vmId = null, string agentVersion = null, string agentStatus = null)
        {
            return new VmInfo(vmId, agentVersion, agentStatus);
        }

        /// <summary> Initializes a new instance of MonitoredResource. </summary>
        /// <param name="id"> The ARM id of the resource. </param>
        /// <param name="sendingMetrics"> Flag indicating if resource is sending metrics to NewRelic. </param>
        /// <param name="reasonForMetricsStatus"> Reason for why the resource is sending metrics (or why it is not sending). </param>
        /// <param name="sendingLogs"> Flag indicating if resource is sending logs to NewRelic. </param>
        /// <param name="reasonForLogsStatus"> Reason for why the resource is sending logs (or why it is not sending). </param>
        /// <returns> A new <see cref="Models.MonitoredResource"/> instance for mocking. </returns>
        public static MonitoredResource MonitoredResource(string id = null, SendingMetricsStatus? sendingMetrics = null, string reasonForMetricsStatus = null, SendingLogsStatus? sendingLogs = null, string reasonForLogsStatus = null)
        {
            return new MonitoredResource(id, sendingMetrics, reasonForMetricsStatus, sendingLogs, reasonForLogsStatus);
        }

        /// <summary> Initializes a new instance of TagRuleData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Provisioning State of the resource. </param>
        /// <param name="logRules"> Set of rules for sending logs for the Monitor resource. </param>
        /// <param name="metricRules"> Set of rules for sending metrics for the Monitor resource. </param>
        /// <returns> A new <see cref="NewRelicObservability.TagRuleData"/> instance for mocking. </returns>
        public static TagRuleData TagRuleData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, NewrelicProvisioningState? provisioningState = null, LogRules logRules = null, MetricRules metricRules = null)
        {
            return new TagRuleData(id, name, resourceType, systemData, provisioningState, logRules, metricRules);
        }

        /// <summary> Initializes a new instance of VmExtensionPayload. </summary>
        /// <param name="ingestionKey"> Ingestion key of the account. </param>
        /// <returns> A new <see cref="Models.VmExtensionPayload"/> instance for mocking. </returns>
        public static VmExtensionPayload VmExtensionPayload(string ingestionKey = null)
        {
            return new VmExtensionPayload(ingestionKey);
        }
    }
}
