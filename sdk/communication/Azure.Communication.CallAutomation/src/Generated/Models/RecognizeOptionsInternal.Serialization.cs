// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.CallAutomation
{
    internal partial class RecognizeOptionsInternal : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (InterruptPrompt.HasValue)
            {
                writer.WritePropertyName("interruptPrompt"u8);
                writer.WriteBooleanValue(InterruptPrompt.Value);
            }
            if (InitialSilenceTimeoutInSeconds.HasValue)
            {
                writer.WritePropertyName("initialSilenceTimeoutInSeconds"u8);
                writer.WriteNumberValue(InitialSilenceTimeoutInSeconds.Value);
            }
            writer.WritePropertyName("targetParticipant"u8);
            writer.WriteObjectValue(TargetParticipant);
            if (SpeechLanguage != null)
            {
                writer.WritePropertyName("speechLanguage"u8);
                writer.WriteStringValue(SpeechLanguage);
            }
            if (SpeechRecognitionModelEndpointId != null)
            {
                writer.WritePropertyName("speechRecognitionModelEndpointId"u8);
                writer.WriteStringValue(SpeechRecognitionModelEndpointId);
            }
            if (DtmfOptions != null)
            {
                writer.WritePropertyName("dtmfOptions"u8);
                writer.WriteObjectValue(DtmfOptions);
            }
            if (!(Choices is ChangeTrackingList<RecognitionChoice> collection && collection.IsUndefined))
            {
                writer.WritePropertyName("choices"u8);
                writer.WriteStartArray();
                foreach (var item in Choices)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (SpeechOptions != null)
            {
                writer.WritePropertyName("speechOptions"u8);
                writer.WriteObjectValue(SpeechOptions);
            }
            writer.WriteEndObject();
        }
    }
}
