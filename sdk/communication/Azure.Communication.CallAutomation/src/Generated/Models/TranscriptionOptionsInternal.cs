// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.CallAutomation
{
    /// <summary>
    /// Options for live transcription.
    /// Please note <see cref="TranscriptionOptionsInternal"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="WebSocketTranscriptionOptionsInternal"/>.
    /// </summary>
    internal abstract partial class TranscriptionOptionsInternal
    {
        /// <summary> Initializes a new instance of <see cref="TranscriptionOptionsInternal"/>. </summary>
        /// <param name="locale"> Specifies the Locale used for transcription, e.g., en-CA or en-AU. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="locale"/> is null. </exception>
        protected TranscriptionOptionsInternal(string locale)
        {
            Argument.AssertNotNull(locale, nameof(locale));

            Locale = locale;
        }

        /// <summary> Initializes a new instance of <see cref="TranscriptionOptionsInternal"/>. </summary>
        /// <param name="transportType"> Defines the transport type used for streaming. Note that future values may be introduced that are not currently documented. </param>
        /// <param name="locale"> Specifies the Locale used for transcription, e.g., en-CA or en-AU. </param>
        internal TranscriptionOptionsInternal(StreamingTransport transportType, string locale)
        {
            TransportType = transportType;
            Locale = locale;
        }

        /// <summary> Defines the transport type used for streaming. Note that future values may be introduced that are not currently documented. </summary>
        internal StreamingTransport TransportType { get; set; }
        /// <summary> Specifies the Locale used for transcription, e.g., en-CA or en-AU. </summary>
        public string Locale { get; }
    }
}
