// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Communication.CallAutomation
{
    /// <summary> Represents the options for WebSocket transport. </summary>
    internal partial class WebSocketMediaStreamingOptionsInternal : MediaStreamingOptionsInternal
    {
        /// <summary> Initializes a new instance of <see cref="WebSocketMediaStreamingOptionsInternal"/>. </summary>
        /// <param name="audioChannelType"> The audio channel type to stream, e.g., unmixed audio, mixed audio. </param>
        public WebSocketMediaStreamingOptionsInternal(MediaStreamingAudioChannel audioChannelType) : base(audioChannelType)
        {
            TransportType = StreamingTransport.Websocket;
        }

        /// <summary> Initializes a new instance of <see cref="WebSocketMediaStreamingOptionsInternal"/>. </summary>
        /// <param name="transportType"> Defines the transport type used for streaming. Note that future values may be introduced that are not currently documented. </param>
        /// <param name="audioChannelType"> The audio channel type to stream, e.g., unmixed audio, mixed audio. </param>
        /// <param name="transportUrl"> The transport URL for media streaming. </param>
        /// <param name="contentType"></param>
        /// <param name="startMediaStreaming"> A value indicating whether the media streaming should start immediately after the call is answered. </param>
        /// <param name="enableBidirectional"> A value indicating whether bidirectional streaming is enabled. </param>
        /// <param name="audioFormat"> The audio format used for encoding, including sample rate and channel type. The default is Pcm16KMono. </param>
        /// <param name="enableDtmfTones"> A value that indicates whether to stream the DTMF tones. </param>
        internal WebSocketMediaStreamingOptionsInternal(StreamingTransport transportType, MediaStreamingAudioChannel audioChannelType, string transportUrl, MediaStreamingContent? contentType, bool? startMediaStreaming, bool? enableBidirectional, AudioFormat? audioFormat, bool? enableDtmfTones) : base(transportType, audioChannelType)
        {
            TransportUrl = transportUrl;
            ContentType = contentType;
            StartMediaStreaming = startMediaStreaming;
            EnableBidirectional = enableBidirectional;
            AudioFormat = audioFormat;
            EnableDtmfTones = enableDtmfTones;
            TransportType = transportType;
        }

        /// <summary> The transport URL for media streaming. </summary>
        public string TransportUrl { get; set; }
        /// <summary> Gets or sets the content type. </summary>
        public MediaStreamingContent? ContentType { get; set; }
        /// <summary> A value indicating whether the media streaming should start immediately after the call is answered. </summary>
        public bool? StartMediaStreaming { get; set; }
        /// <summary> A value indicating whether bidirectional streaming is enabled. </summary>
        public bool? EnableBidirectional { get; set; }
        /// <summary> The audio format used for encoding, including sample rate and channel type. The default is Pcm16KMono. </summary>
        public AudioFormat? AudioFormat { get; set; }
        /// <summary> A value that indicates whether to stream the DTMF tones. </summary>
        public bool? EnableDtmfTones { get; set; }
    }
}
