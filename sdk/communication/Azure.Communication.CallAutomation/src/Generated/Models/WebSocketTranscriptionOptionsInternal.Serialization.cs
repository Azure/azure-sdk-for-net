// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.CallAutomation
{
    internal partial class WebSocketTranscriptionOptionsInternal : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(TransportUrl))
            {
                writer.WritePropertyName("transportUrl"u8);
                writer.WriteStringValue(TransportUrl);
            }
            if (Optional.IsDefined(SpeechModelEndpointId))
            {
                writer.WritePropertyName("speechModelEndpointId"u8);
                writer.WriteStringValue(SpeechModelEndpointId);
            }
            if (Optional.IsDefined(StartTranscription))
            {
                writer.WritePropertyName("startTranscription"u8);
                writer.WriteBooleanValue(StartTranscription.Value);
            }
            if (Optional.IsDefined(EnableIntermediateResults))
            {
                writer.WritePropertyName("enableIntermediateResults"u8);
                writer.WriteBooleanValue(EnableIntermediateResults.Value);
            }
            writer.WritePropertyName("transportType"u8);
            writer.WriteStringValue(TransportType.ToString());
            writer.WritePropertyName("locale"u8);
            writer.WriteStringValue(Locale);
            writer.WriteEndObject();
        }

        /// <summary> Convert into a <see cref="RequestContent"/>. </summary>
        internal override RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
