// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Communication;
using Azure.Core;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The CallConnectionProperties. </summary>
    internal partial class CallConnectionPropertiesInternal
    {
        /// <summary> Initializes a new instance of CallConnectionPropertiesInternal. </summary>
        internal CallConnectionPropertiesInternal()
        {
            Targets = new ChangeTrackingList<CommunicationIdentifierModel>();
        }

        /// <summary> Initializes a new instance of CallConnectionPropertiesInternal. </summary>
        /// <param name="callConnectionId"></param>
        /// <param name="serverCallId"></param>
        /// <param name="targets"></param>
        /// <param name="callConnectionState"></param>
        /// <param name="callbackUri"></param>
        /// <param name="mediaSubscriptionId"></param>
        /// <param name="sourceCallerIdNumber"></param>
        /// <param name="sourceDisplayName"></param>
        /// <param name="sourceIdentity"></param>
        /// <param name="correlationId"></param>
        /// <param name="answeredByIdentifier"></param>
        internal CallConnectionPropertiesInternal(string callConnectionId, string serverCallId, IReadOnlyList<CommunicationIdentifierModel> targets, CallConnectionState? callConnectionState, string callbackUri, string mediaSubscriptionId, PhoneNumberIdentifierModel sourceCallerIdNumber, string sourceDisplayName, CommunicationIdentifierModel sourceIdentity, string correlationId, CommunicationUserIdentifierModel answeredByIdentifier)
        {
            CallConnectionId = callConnectionId;
            ServerCallId = serverCallId;
            Targets = targets;
            CallConnectionState = callConnectionState;
            CallbackUri = callbackUri;
            MediaSubscriptionId = mediaSubscriptionId;
            SourceCallerIdNumber = sourceCallerIdNumber;
            SourceDisplayName = sourceDisplayName;
            SourceIdentity = sourceIdentity;
            CorrelationId = correlationId;
            AnsweredByIdentifier = answeredByIdentifier;
        }

        /// <summary> Gets the call connection id. </summary>
        public string CallConnectionId { get; }
        /// <summary> Gets the server call id. </summary>
        public string ServerCallId { get; }
        /// <summary> Gets the targets. </summary>
        public IReadOnlyList<CommunicationIdentifierModel> Targets { get; }
        /// <summary> Gets the call connection state. </summary>
        public CallConnectionState? CallConnectionState { get; }
        /// <summary> Gets the callback uri. </summary>
        public string CallbackUri { get; }
        /// <summary> Gets the media subscription id. </summary>
        public string MediaSubscriptionId { get; }
        /// <summary> Gets the source caller id number. </summary>
        public PhoneNumberIdentifierModel SourceCallerIdNumber { get; }
        /// <summary> Gets the source display name. </summary>
        public string SourceDisplayName { get; }
        /// <summary> Gets the source identity. </summary>
        public CommunicationIdentifierModel SourceIdentity { get; }
        /// <summary> Gets the correlation id. </summary>
        public string CorrelationId { get; }
        /// <summary> Gets the answered by identifier. </summary>
        public CommunicationUserIdentifierModel AnsweredByIdentifier { get; }
    }
}
