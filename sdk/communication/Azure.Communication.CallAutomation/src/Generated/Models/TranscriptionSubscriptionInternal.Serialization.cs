// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;

namespace Azure.Communication.CallAutomation
{
    internal partial class TranscriptionSubscriptionInternal
    {
        internal static TranscriptionSubscriptionInternal DeserializeTranscriptionSubscriptionInternal(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string id = default;
            TranscriptionSubscriptionState? state = default;
            IReadOnlyList<TranscriptionResultState> subscribedResultTypes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    state = new TranscriptionSubscriptionState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("subscribedResultTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<TranscriptionResultState> array = new List<TranscriptionResultState>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new TranscriptionResultState(item.GetString()));
                    }
                    subscribedResultTypes = array;
                    continue;
                }
            }
            return new TranscriptionSubscriptionInternal(id, state, subscribedResultTypes ?? new ChangeTrackingList<TranscriptionResultState>());
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static TranscriptionSubscriptionInternal FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeTranscriptionSubscriptionInternal(document.RootElement);
        }
    }
}
