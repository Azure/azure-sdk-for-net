// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.CallAutomation
{
    public partial class TeamsPhoneCallDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(TeamsPhoneCallerDetails))
            {
                writer.WritePropertyName("teamsPhoneCallerDetails"u8);
                writer.WriteObjectValue(TeamsPhoneCallerDetails);
            }
            if (Optional.IsDefined(TeamsPhoneSourceDetails))
            {
                writer.WritePropertyName("teamsPhoneSourceDetails"u8);
                writer.WriteObjectValue(TeamsPhoneSourceDetails);
            }
            if (Optional.IsDefined(SessionId))
            {
                writer.WritePropertyName("sessionId"u8);
                writer.WriteStringValue(SessionId);
            }
            if (Optional.IsDefined(Intent))
            {
                writer.WritePropertyName("intent"u8);
                writer.WriteStringValue(Intent);
            }
            if (Optional.IsDefined(CallTopic))
            {
                writer.WritePropertyName("callTopic"u8);
                writer.WriteStringValue(CallTopic);
            }
            if (Optional.IsDefined(CallContext))
            {
                writer.WritePropertyName("callContext"u8);
                writer.WriteStringValue(CallContext);
            }
            if (Optional.IsDefined(TranscriptUrl))
            {
                writer.WritePropertyName("transcriptUrl"u8);
                writer.WriteStringValue(TranscriptUrl);
            }
            if (Optional.IsDefined(CallSentiment))
            {
                writer.WritePropertyName("callSentiment"u8);
                writer.WriteStringValue(CallSentiment);
            }
            if (Optional.IsDefined(SuggestedActions))
            {
                writer.WritePropertyName("suggestedActions"u8);
                writer.WriteStringValue(SuggestedActions);
            }
            writer.WriteEndObject();
        }

        /// <summary> Convert into a <see cref="RequestContent"/>. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
