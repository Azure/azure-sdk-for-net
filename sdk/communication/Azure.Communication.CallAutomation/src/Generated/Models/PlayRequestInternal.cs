// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Communication;
using Azure.Core;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The PlayRequest. </summary>
    internal partial class PlayRequestInternal
    {
        /// <summary> Initializes a new instance of <see cref="PlayRequestInternal"/>. </summary>
        /// <param name="playSources"> The source of the audio to be played. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="playSources"/> is null. </exception>
        public PlayRequestInternal(IEnumerable<PlaySourceInternal> playSources)
        {
            Argument.AssertNotNull(playSources, nameof(playSources));

            PlaySources = playSources.ToList();
            PlayTo = new ChangeTrackingList<CommunicationIdentifierModel>();
        }

        /// <summary> Initializes a new instance of <see cref="PlayRequestInternal"/>. </summary>
        /// <param name="playSourceInfo"> The source of the audio to be played. </param>
        /// <param name="playTo">
        /// The list of call participants play provided audio to.
        /// Plays to everyone in the call when not provided.
        /// </param>
        /// <param name="playOptions"> Defines options for playing the audio. </param>
        /// <param name="operationContext"> The value to identify context of the operation. </param>
        /// <param name="callbackUri"> The callback URI to override the main callback URI. </param>
        internal PlayRequestInternal(PlaySourceInternal playSourceInfo, IList<CommunicationIdentifierModel> playTo, PlayOptionsInternal playOptions, string operationContext, string callbackUri)
        {
            PlaySourceInfo = playSourceInfo;
            PlayTo = playTo;
            PlayOptions = playOptions;
            OperationContext = operationContext;
            CallbackUri = callbackUri;
        }

        /// <summary> The source of the audio to be played. </summary>
        public IList<PlaySourceInternal> PlaySources { get; }
        /// <summary> Defines options for playing the audio. </summary>
        public PlayOptionsInternal PlayOptions { get; set; }
        /// <summary> The value to identify context of the operation. </summary>
        public string OperationContext { get; set; }
        /// <summary>
        /// Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
        /// This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
        /// </summary>
        public string OperationCallbackUri { get; set; }
    }
}
