// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The TranscriptionResultType. </summary>
    internal readonly partial struct TranscriptionResultInternal : IEquatable<TranscriptionResultInternal>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="TranscriptionResultInternal"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TranscriptionResultInternal(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FinalValue = "final";
        private const string IntermediateValue = "intermediate";

        /// <summary> final. </summary>
        public static TranscriptionResultInternal Final { get; } = new TranscriptionResultInternal(FinalValue);
        /// <summary> intermediate. </summary>
        public static TranscriptionResultInternal Intermediate { get; } = new TranscriptionResultInternal(IntermediateValue);
        /// <summary> Determines if two <see cref="TranscriptionResultInternal"/> values are the same. </summary>
        public static bool operator ==(TranscriptionResultInternal left, TranscriptionResultInternal right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TranscriptionResultInternal"/> values are not the same. </summary>
        public static bool operator !=(TranscriptionResultInternal left, TranscriptionResultInternal right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="TranscriptionResultInternal"/>. </summary>
        public static implicit operator TranscriptionResultInternal(string value) => new TranscriptionResultInternal(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TranscriptionResultInternal other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TranscriptionResultInternal other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
