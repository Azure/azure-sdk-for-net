// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The ResultInformation. </summary>
    public partial class ResultInformation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ResultInformation"/>. </summary>
        internal ResultInformation()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ResultInformation"/>. </summary>
        /// <param name="code"> Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
        /// <param name="subCode"> Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
        /// <param name="message"> Detail message that describes the current result. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ResultInformation(int? code, int? subCode, string message, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Code = code;
            SubCode = subCode;
            Message = message;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </summary>
        public int? Code { get; }
        /// <summary> Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </summary>
        public int? SubCode { get; }
        /// <summary> Detail message that describes the current result. </summary>
        public string Message { get; }
    }
}
