// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The request payload for creating a connection to a CallLocator. </summary>
    internal partial class ConnectRequestInternal
    {
        /// <summary> Initializes a new instance of <see cref="ConnectRequestInternal"/>. </summary>
        /// <param name="callLocator"> The call locator. </param>
        /// <param name="callbackUri"> The callback URI. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="callLocator"/> or <paramref name="callbackUri"/> is null. </exception>
        public ConnectRequestInternal(CallLocatorInternal callLocator, string callbackUri)
        {
            Argument.AssertNotNull(callLocator, nameof(callLocator));
            Argument.AssertNotNull(callbackUri, nameof(callbackUri));

            CallLocator = callLocator;
            CallbackUri = callbackUri;
        }

        /// <summary> Initializes a new instance of <see cref="ConnectRequestInternal"/>. </summary>
        /// <param name="callLocator"> The call locator. </param>
        /// <param name="callbackUri"> The callback URI. </param>
        /// <param name="callIntelligenceOptions"> AI options for the call. </param>
        internal ConnectRequestInternal(CallLocatorInternal callLocator, string callbackUri, CallIntelligenceOptionsInternal callIntelligenceOptions)
        {
            CallLocator = callLocator;
            CallbackUri = callbackUri;
            CallIntelligenceOptions = callIntelligenceOptions;
        }

        /// <summary> The call locator. </summary>
        public CallLocatorInternal CallLocator { get; }
        /// <summary> The callback URI. </summary>
        public string CallbackUri { get; }
        /// <summary> AI options for the call. </summary>
        public CallIntelligenceOptionsInternal CallIntelligenceOptions { get; set; }
    }
}
