// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The request payload for creating a connection to a CallLocator. </summary>
    internal partial class ConnectRequestInternal
    {
        /// <summary> Initializes a new instance of <see cref="ConnectRequestInternal"/>. </summary>
        /// <param name="callLocator"> The call locator. </param>
        /// <param name="callbackUri"> The callback URI. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="callLocator"/> or <paramref name="callbackUri"/> is null. </exception>
        public ConnectRequestInternal(CallLocatorInternal callLocator, string callbackUri)
        {
            Argument.AssertNotNull(callLocator, nameof(callLocator));
            Argument.AssertNotNull(callbackUri, nameof(callbackUri));

            CallLocator = callLocator;
            CallbackUri = callbackUri;
        }

        /// <summary> Initializes a new instance of <see cref="ConnectRequestInternal"/>. </summary>
        /// <param name="callLocator"> The call locator. </param>
        /// <param name="callbackUri"> The callback URI. </param>
        /// <param name="operationContext"> Used by customers to correlate the request to the response event. </param>
        /// <param name="callIntelligenceOptions"> AI options for the call. </param>
        /// <param name="mediaStreamingOptions">
        /// Media Streaming Options.
        /// Please note <see cref="MediaStreamingOptionsInternal"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSocketMediaStreamingOptionsInternal"/>.
        /// </param>
        /// <param name="transcriptionOptions">
        /// Transcription Options.
        /// Please note <see cref="TranscriptionOptionsInternal"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSocketTranscriptionOptionsInternal"/>.
        /// </param>
        internal ConnectRequestInternal(CallLocatorInternal callLocator, string callbackUri, string operationContext, CallIntelligenceOptionsInternal callIntelligenceOptions, MediaStreamingOptionsInternal mediaStreamingOptions, TranscriptionOptionsInternal transcriptionOptions)
        {
            CallLocator = callLocator;
            CallbackUri = callbackUri;
            OperationContext = operationContext;
            CallIntelligenceOptions = callIntelligenceOptions;
            MediaStreamingOptions = mediaStreamingOptions;
            TranscriptionOptions = transcriptionOptions;
        }

        /// <summary> The call locator. </summary>
        public CallLocatorInternal CallLocator { get; }
        /// <summary> The callback URI. </summary>
        public string CallbackUri { get; }
        /// <summary> Used by customers to correlate the request to the response event. </summary>
        public string OperationContext { get; set; }
        /// <summary> AI options for the call. </summary>
        public CallIntelligenceOptionsInternal CallIntelligenceOptions { get; set; }
        /// <summary>
        /// Media Streaming Options.
        /// Please note <see cref="MediaStreamingOptionsInternal"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSocketMediaStreamingOptionsInternal"/>.
        /// </summary>
        public MediaStreamingOptionsInternal MediaStreamingOptions { get; set; }
        /// <summary>
        /// Transcription Options.
        /// Please note <see cref="TranscriptionOptionsInternal"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSocketTranscriptionOptionsInternal"/>.
        /// </summary>
        public TranscriptionOptionsInternal TranscriptionOptions { get; set; }
    }
}
