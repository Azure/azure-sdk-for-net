// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.CallAutomation
{
    /// <summary> Represents the options for WebSocket transport. </summary>
    internal partial class WebSocketTranscriptionOptionsInternal : TranscriptionOptionsInternal
    {
        /// <summary> Initializes a new instance of <see cref="WebSocketTranscriptionOptionsInternal"/>. </summary>
        /// <param name="locale"> Specifies the Locale used for transcription, e.g., en-CA or en-AU. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="locale"/> is null. </exception>
        public WebSocketTranscriptionOptionsInternal(string locale) : base(locale)
        {
            Argument.AssertNotNull(locale, nameof(locale));

            Locales = new ChangeTrackingList<string>();
            TransportType = StreamingTransport.Websocket;
        }

        /// <summary> Initializes a new instance of <see cref="WebSocketTranscriptionOptionsInternal"/>. </summary>
        /// <param name="transportType"> Defines the transport type used for streaming. Note that future values may be introduced that are not currently documented. </param>
        /// <param name="locale"> Specifies the Locale used for transcription, e.g., en-CA or en-AU. </param>
        /// <param name="transportUrl"> The URL used for live transcription transport. </param>
        /// <param name="speechModelEndpointId"> The ID of the deployed custom model in GUID format. The GUID is generated by Azure Speech Studio, e.g., a259c255-1cdw-4ed7-a693-dd58563b6f6a. </param>
        /// <param name="startTranscription"> Indicates whether the transcription should start immediately after the call is answered. </param>
        /// <param name="enableIntermediateResults"> Enables intermediate results for the transcribed speech. </param>
        /// <param name="piiRedactionOptions"> PII redaction configuration options. </param>
        /// <param name="enableSentimentAnalysis"> Indicating if sentiment analysis should be used. </param>
        /// <param name="locales"> List of languages for Language Identification. </param>
        /// <param name="summarizationOptions"> Summarization configuration options. </param>
        internal WebSocketTranscriptionOptionsInternal(StreamingTransport transportType, string locale, string transportUrl, string speechModelEndpointId, bool? startTranscription, bool? enableIntermediateResults, PiiRedactionOptionsInternal piiRedactionOptions, bool? enableSentimentAnalysis, IList<string> locales, SummarizationOptionsInternal summarizationOptions) : base(transportType, locale)
        {
            TransportUrl = transportUrl;
            SpeechModelEndpointId = speechModelEndpointId;
            StartTranscription = startTranscription;
            EnableIntermediateResults = enableIntermediateResults;
            PiiRedactionOptions = piiRedactionOptions;
            EnableSentimentAnalysis = enableSentimentAnalysis;
            Locales = locales;
            SummarizationOptions = summarizationOptions;
            TransportType = transportType;
        }

        /// <summary> The URL used for live transcription transport. </summary>
        public string TransportUrl { get; set; }
        /// <summary> The ID of the deployed custom model in GUID format. The GUID is generated by Azure Speech Studio, e.g., a259c255-1cdw-4ed7-a693-dd58563b6f6a. </summary>
        public string SpeechModelEndpointId { get; set; }
        /// <summary> Indicates whether the transcription should start immediately after the call is answered. </summary>
        public bool? StartTranscription { get; set; }
        /// <summary> Enables intermediate results for the transcribed speech. </summary>
        public bool? EnableIntermediateResults { get; set; }
        /// <summary> PII redaction configuration options. </summary>
        public PiiRedactionOptionsInternal PiiRedactionOptions { get; set; }
        /// <summary> Indicating if sentiment analysis should be used. </summary>
        public bool? EnableSentimentAnalysis { get; set; }
        /// <summary> List of languages for Language Identification. </summary>
        public IList<string> Locales { get; }
        /// <summary> Summarization configuration options. </summary>
        public SummarizationOptionsInternal SummarizationOptions { get; set; }
    }
}
