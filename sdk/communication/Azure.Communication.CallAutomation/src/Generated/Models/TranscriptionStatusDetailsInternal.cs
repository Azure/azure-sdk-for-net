// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.CallAutomation
{
    /// <summary> The TranscriptionStatusDetails. </summary>
    internal readonly partial struct TranscriptionStatusDetailsInternal : IEquatable<TranscriptionStatusDetailsInternal>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="TranscriptionStatusDetailsInternal"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TranscriptionStatusDetailsInternal(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SubscriptionStartedValue = "subscriptionStarted";
        private const string StreamConnectionReestablishedValue = "streamConnectionReestablished";
        private const string StreamConnectionUnsuccessfulValue = "streamConnectionUnsuccessful";
        private const string StreamUrlMissingValue = "streamUrlMissing";
        private const string ServiceShutdownValue = "serviceShutdown";
        private const string StreamConnectionInterruptedValue = "streamConnectionInterrupted";
        private const string SpeechServicesConnectionErrorValue = "speechServicesConnectionError";
        private const string SubscriptionStoppedValue = "subscriptionStopped";
        private const string UnspecifiedErrorValue = "unspecifiedError";
        private const string AuthenticationFailureValue = "authenticationFailure";
        private const string BadRequestValue = "badRequest";
        private const string TooManyRequestsValue = "tooManyRequests";
        private const string ForbiddenValue = "forbidden";
        private const string ServiceTimeoutValue = "serviceTimeout";
        private const string TranscriptionLocaleUpdatedValue = "transcriptionLocaleUpdated";

        /// <summary> subscriptionStarted. </summary>
        public static TranscriptionStatusDetailsInternal SubscriptionStarted { get; } = new TranscriptionStatusDetailsInternal(SubscriptionStartedValue);
        /// <summary> streamConnectionReestablished. </summary>
        public static TranscriptionStatusDetailsInternal StreamConnectionReestablished { get; } = new TranscriptionStatusDetailsInternal(StreamConnectionReestablishedValue);
        /// <summary> streamConnectionUnsuccessful. </summary>
        public static TranscriptionStatusDetailsInternal StreamConnectionUnsuccessful { get; } = new TranscriptionStatusDetailsInternal(StreamConnectionUnsuccessfulValue);
        /// <summary> streamUrlMissing. </summary>
        public static TranscriptionStatusDetailsInternal StreamUrlMissing { get; } = new TranscriptionStatusDetailsInternal(StreamUrlMissingValue);
        /// <summary> serviceShutdown. </summary>
        public static TranscriptionStatusDetailsInternal ServiceShutdown { get; } = new TranscriptionStatusDetailsInternal(ServiceShutdownValue);
        /// <summary> streamConnectionInterrupted. </summary>
        public static TranscriptionStatusDetailsInternal StreamConnectionInterrupted { get; } = new TranscriptionStatusDetailsInternal(StreamConnectionInterruptedValue);
        /// <summary> speechServicesConnectionError. </summary>
        public static TranscriptionStatusDetailsInternal SpeechServicesConnectionError { get; } = new TranscriptionStatusDetailsInternal(SpeechServicesConnectionErrorValue);
        /// <summary> subscriptionStopped. </summary>
        public static TranscriptionStatusDetailsInternal SubscriptionStopped { get; } = new TranscriptionStatusDetailsInternal(SubscriptionStoppedValue);
        /// <summary> unspecifiedError. </summary>
        public static TranscriptionStatusDetailsInternal UnspecifiedError { get; } = new TranscriptionStatusDetailsInternal(UnspecifiedErrorValue);
        /// <summary> authenticationFailure. </summary>
        public static TranscriptionStatusDetailsInternal AuthenticationFailure { get; } = new TranscriptionStatusDetailsInternal(AuthenticationFailureValue);
        /// <summary> badRequest. </summary>
        public static TranscriptionStatusDetailsInternal BadRequest { get; } = new TranscriptionStatusDetailsInternal(BadRequestValue);
        /// <summary> tooManyRequests. </summary>
        public static TranscriptionStatusDetailsInternal TooManyRequests { get; } = new TranscriptionStatusDetailsInternal(TooManyRequestsValue);
        /// <summary> forbidden. </summary>
        public static TranscriptionStatusDetailsInternal Forbidden { get; } = new TranscriptionStatusDetailsInternal(ForbiddenValue);
        /// <summary> serviceTimeout. </summary>
        public static TranscriptionStatusDetailsInternal ServiceTimeout { get; } = new TranscriptionStatusDetailsInternal(ServiceTimeoutValue);
        /// <summary> transcriptionLocaleUpdated. </summary>
        public static TranscriptionStatusDetailsInternal TranscriptionLocaleUpdated { get; } = new TranscriptionStatusDetailsInternal(TranscriptionLocaleUpdatedValue);
        /// <summary> Determines if two <see cref="TranscriptionStatusDetailsInternal"/> values are the same. </summary>
        public static bool operator ==(TranscriptionStatusDetailsInternal left, TranscriptionStatusDetailsInternal right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TranscriptionStatusDetailsInternal"/> values are not the same. </summary>
        public static bool operator !=(TranscriptionStatusDetailsInternal left, TranscriptionStatusDetailsInternal right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="TranscriptionStatusDetailsInternal"/>. </summary>
        public static implicit operator TranscriptionStatusDetailsInternal(string value) => new TranscriptionStatusDetailsInternal(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TranscriptionStatusDetailsInternal other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TranscriptionStatusDetailsInternal other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
