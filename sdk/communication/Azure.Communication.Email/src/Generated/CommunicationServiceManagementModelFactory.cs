// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Communication.Email
{
    /// <summary> Model factory for models. </summary>
    public static partial class CommunicationServiceManagementModelFactory
    {
        /// <summary> Initializes a new instance of Operation. </summary>
        /// <param name="name"> The name of the operation, as per Resource-Based Access Control (RBAC). Examples: &quot;Microsoft.Compute/virtualMachines/write&quot;, &quot;Microsoft.Compute/virtualMachines/capture/action&quot;. </param>
        /// <param name="isDataAction"> Whether the operation applies to data-plane. This is &quot;true&quot; for data-plane operations and &quot;false&quot; for ARM/control-plane operations. </param>
        /// <param name="display"> Localized display information for this particular operation. </param>
        /// <param name="origin"> The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is &quot;user,system&quot;. </param>
        /// <param name="actionType"> Enum. Indicates the action type. &quot;Internal&quot; refers to actions that are for internal only APIs. </param>
        /// <returns> A new <see cref="Email.Operation"/> instance for mocking. </returns>
        public static Operation Operation(string name = null, bool? isDataAction = null, OperationDisplay display = null, Origin? origin = null, ActionType? actionType = null)
        {
            return new Operation(name, isDataAction, display, origin, actionType);
        }

        /// <summary> Initializes a new instance of OperationDisplay. </summary>
        /// <param name="provider"> The localized friendly form of the resource provider name, e.g. &quot;Microsoft Monitoring Insights&quot; or &quot;Microsoft Compute&quot;. </param>
        /// <param name="resource"> The localized friendly name of the resource type related to this operation. E.g. &quot;Virtual Machines&quot; or &quot;Job Schedule Collections&quot;. </param>
        /// <param name="operation"> The concise, localized friendly name for the operation; suitable for dropdowns. E.g. &quot;Create or Update Virtual Machine&quot;, &quot;Restart Virtual Machine&quot;. </param>
        /// <param name="description"> The short, localized friendly description of the operation; suitable for tool tips and detailed views. </param>
        /// <returns> A new <see cref="Email.OperationDisplay"/> instance for mocking. </returns>
        public static OperationDisplay OperationDisplay(string provider = null, string resource = null, string operation = null, string description = null)
        {
            return new OperationDisplay(provider, resource, operation, description);
        }

        /// <summary> Initializes a new instance of CheckNameAvailabilityResponse. </summary>
        /// <param name="nameAvailable"> Indicates if the resource name is available. </param>
        /// <param name="reason"> The reason why the given name is not available. </param>
        /// <param name="message"> Detailed reason why the given name is available. </param>
        /// <returns> A new <see cref="Email.CheckNameAvailabilityResponse"/> instance for mocking. </returns>
        public static CheckNameAvailabilityResponse CheckNameAvailabilityResponse(bool? nameAvailable = null, CheckNameAvailabilityReason? reason = null, string message = null)
        {
            return new CheckNameAvailabilityResponse(nameAvailable, reason, message);
        }

        /// <summary> Initializes a new instance of LinkedNotificationHub. </summary>
        /// <param name="resourceId"> The resource ID of the notification hub. </param>
        /// <returns> A new <see cref="Email.LinkedNotificationHub"/> instance for mocking. </returns>
        public static LinkedNotificationHub LinkedNotificationHub(string resourceId = null)
        {
            return new LinkedNotificationHub(resourceId);
        }

        /// <summary> Initializes a new instance of CommunicationServiceResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="hostName"> FQDN of the CommunicationService instance. </param>
        /// <param name="dataLocation"> The location where the communication service stores its data at rest. </param>
        /// <param name="notificationHubId"> Resource ID of an Azure Notification Hub linked to this resource. </param>
        /// <param name="version"> Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs. </param>
        /// <param name="immutableResourceId"> The immutable resource Id of the communication service. </param>
        /// <param name="linkedDomains"> List of email Domain resource Ids. </param>
        /// <returns> A new <see cref="Email.CommunicationServiceResource"/> instance for mocking. </returns>
        public static CommunicationServiceResource CommunicationServiceResource(string id = null, string name = null, string type = null, SystemData systemData = null, IDictionary<string, string> tags = null, string location = null, CommunicationServicesProvisioningState? provisioningState = null, string hostName = null, string dataLocation = null, string notificationHubId = null, string version = null, string immutableResourceId = null, IEnumerable<string> linkedDomains = null)
        {
            tags ??= new Dictionary<string, string>();
            linkedDomains ??= new List<string>();

            return new CommunicationServiceResource(id, name, type, systemData, tags, location, provisioningState, hostName, dataLocation, notificationHubId, version, immutableResourceId, linkedDomains?.ToList());
        }

        /// <summary> Initializes a new instance of TrackedResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <returns> A new <see cref="Email.TrackedResource"/> instance for mocking. </returns>
        public static TrackedResource TrackedResource(string id = null, string name = null, string type = null, SystemData systemData = null, IDictionary<string, string> tags = null, string location = null)
        {
            tags ??= new Dictionary<string, string>();

            return new TrackedResource(id, name, type, systemData, tags, location);
        }

        /// <summary> Initializes a new instance of Resource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <returns> A new <see cref="Email.Resource"/> instance for mocking. </returns>
        public static Resource Resource(string id = null, string name = null, string type = null, SystemData systemData = null)
        {
            return new Resource(id, name, type, systemData);
        }

        /// <summary> Initializes a new instance of SystemData. </summary>
        /// <param name="createdBy"> The identity that created the resource. </param>
        /// <param name="createdByType"> The type of identity that created the resource. </param>
        /// <param name="createdAt"> The timestamp of resource creation (UTC). </param>
        /// <param name="lastModifiedBy"> The identity that last modified the resource. </param>
        /// <param name="lastModifiedByType"> The type of identity that last modified the resource. </param>
        /// <param name="lastModifiedAt"> The timestamp of resource last modification (UTC). </param>
        /// <returns> A new <see cref="Email.SystemData"/> instance for mocking. </returns>
        public static SystemData SystemData(string createdBy = null, CreatedByType? createdByType = null, DateTimeOffset? createdAt = null, string lastModifiedBy = null, CreatedByType? lastModifiedByType = null, DateTimeOffset? lastModifiedAt = null)
        {
            return new SystemData(createdBy, createdByType, createdAt, lastModifiedBy, lastModifiedByType, lastModifiedAt);
        }

        /// <summary> Initializes a new instance of CommunicationServiceKeys. </summary>
        /// <param name="primaryKey"> The primary access key. </param>
        /// <param name="secondaryKey"> The secondary access key. </param>
        /// <param name="primaryConnectionString"> CommunicationService connection string constructed via the primaryKey. </param>
        /// <param name="secondaryConnectionString"> CommunicationService connection string constructed via the secondaryKey. </param>
        /// <returns> A new <see cref="Email.CommunicationServiceKeys"/> instance for mocking. </returns>
        public static CommunicationServiceKeys CommunicationServiceKeys(string primaryKey = null, string secondaryKey = null, string primaryConnectionString = null, string secondaryConnectionString = null)
        {
            return new CommunicationServiceKeys(primaryKey, secondaryKey, primaryConnectionString, secondaryConnectionString);
        }

        /// <summary> Initializes a new instance of DomainResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="dataLocation"> The location where the Domains resource data is stored at rest. </param>
        /// <param name="fromSenderDomain"> P2 sender domain that is displayed to the email recipients [RFC 5322]. </param>
        /// <param name="mailFromSenderDomain"> P1 sender domain that is present on the email envelope [RFC 5321]. </param>
        /// <param name="domainManagement"> Describes how a Domains resource is being managed. </param>
        /// <param name="userEngagementTracking"> Describes whether user engagement tracking is enabled or disabled. </param>
        /// <param name="domainPropertiesVerificationRecordsDomain"> A class that represents a VerificationStatus record. </param>
        /// <param name="spfPropertiesVerificationRecordsSPF"> A class that represents a VerificationStatus record. </param>
        /// <param name="dkimPropertiesVerificationRecordsDkim"> A class that represents a VerificationStatus record. </param>
        /// <param name="dkim2PropertiesVerificationRecordsDkim2"> A class that represents a VerificationStatus record. </param>
        /// <param name="dmarcPropertiesVerificationRecordsDmarc"> A class that represents a VerificationStatus record. </param>
        /// <param name="domainPropertiesVerificationStatesDomain"> A class that represents a VerificationStatus record. </param>
        /// <param name="spfPropertiesVerificationStatesSPF"> A class that represents a VerificationStatus record. </param>
        /// <param name="dkimPropertiesVerificationStatesDkim"> A class that represents a VerificationStatus record. </param>
        /// <param name="dkim2PropertiesVerificationStatesDkim2"> A class that represents a VerificationStatus record. </param>
        /// <param name="dmarcPropertiesVerificationStatesDmarc"> A class that represents a VerificationStatus record. </param>
        /// <returns> A new <see cref="Email.DomainResource"/> instance for mocking. </returns>
        public static DomainResource DomainResource(string id = null, string name = null, string type = null, SystemData systemData = null, IDictionary<string, string> tags = null, string location = null, DomainsProvisioningState? provisioningState = null, string dataLocation = null, string fromSenderDomain = null, string mailFromSenderDomain = null, DomainManagement? domainManagement = null, UserEngagementTracking? userEngagementTracking = null, DnsRecord domainPropertiesVerificationRecordsDomain = null, DnsRecord spfPropertiesVerificationRecordsSPF = null, DnsRecord dkimPropertiesVerificationRecordsDkim = null, DnsRecord dkim2PropertiesVerificationRecordsDkim2 = null, DnsRecord dmarcPropertiesVerificationRecordsDmarc = null, VerificationStatusRecord domainPropertiesVerificationStatesDomain = null, VerificationStatusRecord spfPropertiesVerificationStatesSPF = null, VerificationStatusRecord dkimPropertiesVerificationStatesDkim = null, VerificationStatusRecord dkim2PropertiesVerificationStatesDkim2 = null, VerificationStatusRecord dmarcPropertiesVerificationStatesDmarc = null)
        {
            tags ??= new Dictionary<string, string>();

            return new DomainResource(id, name, type, systemData, tags, location, provisioningState, dataLocation, fromSenderDomain, mailFromSenderDomain, domainManagement, userEngagementTracking, domainPropertiesVerificationRecordsDomain, spfPropertiesVerificationRecordsSPF, dkimPropertiesVerificationRecordsDkim, dkim2PropertiesVerificationRecordsDkim2, dmarcPropertiesVerificationRecordsDmarc, domainPropertiesVerificationStatesDomain, spfPropertiesVerificationStatesSPF, dkimPropertiesVerificationStatesDkim, dkim2PropertiesVerificationStatesDkim2, dmarcPropertiesVerificationStatesDmarc);
        }

        /// <summary> Initializes a new instance of VerificationStatusRecord. </summary>
        /// <param name="status"> Status of the verification operation. </param>
        /// <param name="errorCode"> Error code. This property will only be present if the status is UnableToVerify. </param>
        /// <returns> A new <see cref="Email.VerificationStatusRecord"/> instance for mocking. </returns>
        public static VerificationStatusRecord VerificationStatusRecord(VerificationStatus? status = null, string errorCode = null)
        {
            return new VerificationStatusRecord(status, errorCode);
        }

        /// <summary> Initializes a new instance of DnsRecord. </summary>
        /// <param name="type"> Type of the DNS record. Example: TXT. </param>
        /// <param name="name"> Name of the DNS record. </param>
        /// <param name="value"> Value of the DNS record. </param>
        /// <param name="ttl"> Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec. </param>
        /// <returns> A new <see cref="Email.DnsRecord"/> instance for mocking. </returns>
        public static DnsRecord DnsRecord(string type = null, string name = null, string value = null, int? ttl = null)
        {
            return new DnsRecord(type, name, value, ttl);
        }

        /// <summary> Initializes a new instance of EmailServiceResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="dataLocation"> The location where the email service stores its data at rest. </param>
        /// <returns> A new <see cref="Email.EmailServiceResource"/> instance for mocking. </returns>
        public static EmailServiceResource EmailServiceResource(string id = null, string name = null, string type = null, SystemData systemData = null, IDictionary<string, string> tags = null, string location = null, EmailServicesProvisioningState? provisioningState = null, string dataLocation = null)
        {
            tags ??= new Dictionary<string, string>();

            return new EmailServiceResource(id, name, type, systemData, tags, location, provisioningState, dataLocation);
        }

        /// <summary> Initializes a new instance of SenderUsernameResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="dataLocation"> The location where the SenderUsername resource data is stored at rest. </param>
        /// <param name="username"> A sender senderUsername to be used when sending emails. </param>
        /// <param name="displayName"> The display name for the senderUsername. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <returns> A new <see cref="Email.SenderUsernameResource"/> instance for mocking. </returns>
        public static SenderUsernameResource SenderUsernameResource(string id = null, string name = null, string type = null, SystemData systemData = null, string dataLocation = null, string username = null, string displayName = null, ProvisioningState? provisioningState = null)
        {
            return new SenderUsernameResource(id, name, type, systemData, dataLocation, username, displayName, provisioningState);
        }

        /// <summary> Initializes a new instance of ProxyResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <returns> A new <see cref="Email.ProxyResource"/> instance for mocking. </returns>
        public static ProxyResource ProxyResource(string id = null, string name = null, string type = null, SystemData systemData = null)
        {
            return new ProxyResource(id, name, type, systemData);
        }
    }
}
