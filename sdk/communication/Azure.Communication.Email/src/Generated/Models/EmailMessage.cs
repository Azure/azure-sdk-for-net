// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.Email.Models
{
    /// <summary> Message payload for sending an email. </summary>
    public partial class EmailMessage
    {
        /// <summary> Initializes a new instance of EmailMessage. </summary>
        /// <param name="sender"> Sender email address from a verified domain. </param>
        /// <param name="content"> Email content to be sent. </param>
        /// <param name="recipients"> Recipients for the email. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sender"/>, <paramref name="content"/> or <paramref name="recipients"/> is null. </exception>
        public EmailMessage(string sender, EmailContent content, EmailRecipients recipients)
        {
            if (sender == null)
            {
                throw new ArgumentNullException(nameof(sender));
            }
            if (content == null)
            {
                throw new ArgumentNullException(nameof(content));
            }
            if (recipients == null)
            {
                throw new ArgumentNullException(nameof(recipients));
            }

            CustomHeaders = new ChangeTrackingList<EmailCustomHeader>();
            Sender = sender;
            Content = content;
            Recipients = recipients;
            Attachments = new ChangeTrackingList<EmailAttachment>();
            ReplyTo = new ChangeTrackingList<EmailAddress>();
        }

        /// <summary> Custom email headers to be passed. </summary>
        public IList<EmailCustomHeader> CustomHeaders { get; }
        /// <summary> Sender email address from a verified domain. </summary>
        public string Sender { get; }
        /// <summary> Email content to be sent. </summary>
        public EmailContent Content { get; }
        /// <summary> The importance type for the email. </summary>
        public EmailImportance? Importance { get; set; }
        /// <summary> Recipients for the email. </summary>
        public EmailRecipients Recipients { get; }
        /// <summary> list of attachments. </summary>
        public IList<EmailAttachment> Attachments { get; }
        /// <summary> Email addresses where recipients&apos; replies will be sent to. </summary>
        public IList<EmailAddress> ReplyTo { get; }
        /// <summary> Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking setting was already enabled in the control plane. </summary>
        public bool? DisableUserEngagementTracking { get; set; }
    }
}
