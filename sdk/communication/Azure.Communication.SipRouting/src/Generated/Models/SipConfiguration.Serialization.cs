// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.SipRouting.Models
{
    public partial class SipConfiguration
    {
        internal static SipConfiguration DeserializeSipConfiguration(JsonElement element)
        {
            Optional<IReadOnlyDictionary<string, Trunk>> trunks = default;
            Optional<IReadOnlyList<TrunkRoute>> routes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("trunks"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, Trunk> dictionary = new Dictionary<string, Trunk>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, Trunk.DeserializeTrunk(property0.Value));
                    }
                    trunks = dictionary;
                    continue;
                }
                if (property.NameEquals("routes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TrunkRoute> array = new List<TrunkRoute>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TrunkRoute.DeserializeTrunkRoute(item));
                    }
                    routes = array;
                    continue;
                }
            }
            return new SipConfiguration(Optional.ToDictionary(trunks), Optional.ToList(routes));
        }
    }
}
