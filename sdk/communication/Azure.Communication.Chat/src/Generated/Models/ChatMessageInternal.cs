// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.Chat
{
    /// <summary> Chat message. </summary>
    internal partial class ChatMessageInternal
    {
        /// <summary> Initializes a new instance of ChatMessageInternal. </summary>
        /// <param name="id"> The id of the chat message. This id is server generated. </param>
        /// <param name="type"> The chat message type. </param>
        /// <param name="priority"> The chat message priority. </param>
        /// <param name="sequenceId"> Sequence of the chat message in the conversation. </param>
        /// <param name="version"> Version of the chat message. </param>
        /// <param name="createdOn"> The timestamp when the chat message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="senderId"> The id of the chat message sender. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="sequenceId"/>, <paramref name="version"/>, or <paramref name="senderId"/> is null. </exception>
        internal ChatMessageInternal(string id, ChatMessageType type, ChatMessagePriority priority, string sequenceId, string version, DateTimeOffset createdOn, string senderId)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            if (sequenceId == null)
            {
                throw new ArgumentNullException(nameof(sequenceId));
            }
            if (version == null)
            {
                throw new ArgumentNullException(nameof(version));
            }
            if (senderId == null)
            {
                throw new ArgumentNullException(nameof(senderId));
            }

            Id = id;
            Type = type;
            Priority = priority;
            SequenceId = sequenceId;
            Version = version;
            CreatedOn = createdOn;
            SenderId = senderId;
        }

        /// <summary> Initializes a new instance of ChatMessageInternal. </summary>
        /// <param name="id"> The id of the chat message. This id is server generated. </param>
        /// <param name="type"> The chat message type. </param>
        /// <param name="priority"> The chat message priority. </param>
        /// <param name="sequenceId"> Sequence of the chat message in the conversation. </param>
        /// <param name="version"> Version of the chat message. </param>
        /// <param name="content"> Content of a chat message. </param>
        /// <param name="senderDisplayName"> The display name of the chat message sender. This property is used to populate sender name for push notifications. </param>
        /// <param name="createdOn"> The timestamp when the chat message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="senderId"> The id of the chat message sender. </param>
        /// <param name="deletedOn"> The timestamp (if applicable) when the message was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="editedOn"> The last timestamp (if applicable) when the message was edited. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        internal ChatMessageInternal(string id, ChatMessageType type, ChatMessagePriority priority, string sequenceId, string version, ChatMessageContentInternal content, string senderDisplayName, DateTimeOffset createdOn, string senderId, DateTimeOffset? deletedOn, DateTimeOffset? editedOn)
        {
            Id = id;
            Type = type;
            Priority = priority;
            SequenceId = sequenceId;
            Version = version;
            Content = content;
            SenderDisplayName = senderDisplayName;
            CreatedOn = createdOn;
            SenderId = senderId;
            DeletedOn = deletedOn;
            EditedOn = editedOn;
        }

        /// <summary> The id of the chat message. This id is server generated. </summary>
        public string Id { get; }
        /// <summary> The chat message type. </summary>
        public ChatMessageType Type { get; }
        /// <summary> The chat message priority. </summary>
        public ChatMessagePriority Priority { get; }
        /// <summary> Sequence of the chat message in the conversation. </summary>
        public string SequenceId { get; }
        /// <summary> Version of the chat message. </summary>
        public string Version { get; }
        /// <summary> Content of a chat message. </summary>
        public ChatMessageContentInternal Content { get; }
        /// <summary> The display name of the chat message sender. This property is used to populate sender name for push notifications. </summary>
        public string SenderDisplayName { get; }
        /// <summary> The timestamp when the chat message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </summary>
        public DateTimeOffset CreatedOn { get; }
        /// <summary> The id of the chat message sender. </summary>
        public string SenderId { get; }
        /// <summary> The timestamp (if applicable) when the message was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </summary>
        public DateTimeOffset? DeletedOn { get; }
        /// <summary> The last timestamp (if applicable) when the message was edited. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </summary>
        public DateTimeOffset? EditedOn { get; }
    }
}
