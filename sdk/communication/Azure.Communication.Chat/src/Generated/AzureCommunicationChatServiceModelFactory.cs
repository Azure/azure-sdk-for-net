// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.Chat
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class AzureCommunicationChatServiceModelFactory
    {
        /// <summary> Initializes new instance of ChatError class. </summary>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="target"> The error target. </param>
        /// <param name="details"> Further details about specific errors that led to this error. </param>
        /// <param name="innerError"> The inner error if any. </param>
        /// <returns> A new <see cref="Chat.ChatError"/> instance for mocking. </returns>
        public static ChatError ChatError(string code = default, string message = default, string target = default, IReadOnlyList<ChatError> details = default, ChatError innerError = default)
        {
            details ??= new List<ChatError>();
            return new ChatError(code, message, target, details, innerError);
        }

        /// <summary> Initializes new instance of AddChatParticipantsResult class. </summary>
        /// <param name="invalidParticipants"> The participants that failed to be added to the chat thread. </param>
        /// <returns> A new <see cref="Chat.AddChatParticipantsResult"/> instance for mocking. </returns>
        public static AddChatParticipantsResult AddChatParticipantsResult(IReadOnlyList<ChatError> invalidParticipants = default)
        {
            invalidParticipants ??= new List<ChatError>();
            return new AddChatParticipantsResult(invalidParticipants);
        }

        /// <summary> Initializes new instance of ChatThreadItem class. </summary>
        /// <param name="id"> Chat thread id. </param>
        /// <param name="topic"> Chat thread topic. </param>
        /// <param name="deletedOn"> The timestamp when the chat thread was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="lastMessageReceivedOn"> The timestamp when the last message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <returns> A new <see cref="Chat.ChatThreadItem"/> instance for mocking. </returns>
        public static ChatThreadItem ChatThreadItem(string id = default, string topic = default, DateTimeOffset? deletedOn = default, DateTimeOffset? lastMessageReceivedOn = default)
        {
            return new ChatThreadItem(id, topic, deletedOn, lastMessageReceivedOn);
        }
    }
}
