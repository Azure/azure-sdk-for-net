// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Communication.MediaComposition.Models;
using Azure.Core;

namespace Azure.Communication.MediaComposition
{
    public partial class InputGroup : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(InputIds))
            {
                writer.WritePropertyName("inputIds");
                writer.WriteStartArray();
                foreach (var item in InputIds)
                {
                    writer.WriteStartArray();
                    foreach (var item0 in item)
                    {
                        writer.WriteStringValue(item0);
                    }
                    writer.WriteEndArray();
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Position))
            {
                writer.WritePropertyName("position");
                writer.WriteObjectValue(Position);
            }
            if (Optional.IsDefined(Width))
            {
                writer.WritePropertyName("width");
                writer.WriteStringValue(Width);
            }
            if (Optional.IsDefined(Height))
            {
                writer.WritePropertyName("height");
                writer.WriteStringValue(Height);
            }
            if (Optional.IsDefined(Rows))
            {
                writer.WritePropertyName("rows");
                writer.WriteNumberValue(Rows.Value);
            }
            if (Optional.IsDefined(Columns))
            {
                writer.WritePropertyName("columns");
                writer.WriteNumberValue(Columns.Value);
            }
            if (Optional.IsDefined(Layer))
            {
                writer.WritePropertyName("layer");
                writer.WriteStringValue(Layer);
            }
            writer.WriteEndObject();
        }

        internal static InputGroup DeserializeInputGroup(JsonElement element)
        {
            Optional<IList<IList<string>>> inputIds = default;
            Optional<InputPosition> position = default;
            Optional<string> width = default;
            Optional<string> height = default;
            Optional<int> rows = default;
            Optional<int> columns = default;
            Optional<string> layer = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("inputIds"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<IList<string>> array = new List<IList<string>>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        List<string> array0 = new List<string>();
                        foreach (var item0 in item.EnumerateArray())
                        {
                            array0.Add(item0.GetString());
                        }
                        array.Add(array0);
                    }
                    inputIds = array;
                    continue;
                }
                if (property.NameEquals("position"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    position = InputPosition.DeserializeInputPosition(property.Value);
                    continue;
                }
                if (property.NameEquals("width"))
                {
                    width = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("height"))
                {
                    height = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rows"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rows = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("columns"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    columns = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("layer"))
                {
                    layer = property.Value.GetString();
                    continue;
                }
            }
            return new InputGroup(Optional.ToList(inputIds), position.Value, width.Value, height.Value, Optional.ToNullable(rows), Optional.ToNullable(columns), layer.Value);
        }
    }
}
