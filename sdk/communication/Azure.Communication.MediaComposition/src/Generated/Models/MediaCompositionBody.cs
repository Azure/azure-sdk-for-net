// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Communication.MediaComposition;
using Azure.Core;

namespace Azure.Communication.MediaComposition.Models
{
    /// <summary> Body of a media composition. </summary>
    public partial class MediaCompositionBody
    {
        /// <summary> Initializes a new instance of MediaCompositionBody. </summary>
        public MediaCompositionBody()
        {
            Inputs = new ChangeTrackingDictionary<string, MediaInput>();
            Outputs = new ChangeTrackingDictionary<string, MediaOutput>();
        }

        /// <summary> Initializes a new instance of MediaCompositionBody. </summary>
        /// <param name="id"> Id of the media composition. </param>
        /// <param name="layout"> Layout configuration of the composition. </param>
        /// <param name="inputs"> Inputs used in the composition. </param>
        /// <param name="outputs"> Outputs used in the composition. </param>
        /// <param name="streamState"> State of the composition stream. </param>
        internal MediaCompositionBody(string id, MediaCompositionLayout layout, IDictionary<string, MediaInput> inputs, IDictionary<string, MediaOutput> outputs, CompositionStreamState? streamState)
        {
            Id = id;
            Layout = layout;
            Inputs = inputs;
            Outputs = outputs;
            StreamState = streamState;
        }

        /// <summary> Id of the media composition. </summary>
        public string Id { get; set; }
        /// <summary> State of the composition stream. </summary>
        public CompositionStreamState? StreamState { get; set; }
    }
}
