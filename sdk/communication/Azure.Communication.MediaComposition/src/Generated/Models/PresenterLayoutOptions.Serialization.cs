// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.MediaComposition
{
    public partial class PresenterLayoutOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("presenterId");
            writer.WriteStringValue(PresenterId);
            writer.WritePropertyName("supportId");
            writer.WriteStringValue(SupportId);
            if (Optional.IsDefined(SupportPosition))
            {
                writer.WritePropertyName("supportPosition");
                writer.WriteStringValue(SupportPosition.Value.ToString());
            }
            if (Optional.IsDefined(SupportAspectRatio))
            {
                writer.WritePropertyName("supportAspectRatio");
                writer.WriteNumberValue(SupportAspectRatio.Value);
            }
            writer.WriteEndObject();
        }

        internal static PresenterLayoutOptions DeserializePresenterLayoutOptions(JsonElement element)
        {
            string presenterId = default;
            string supportId = default;
            Optional<SupportPosition> supportPosition = default;
            Optional<double> supportAspectRatio = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("presenterId"))
                {
                    presenterId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("supportId"))
                {
                    supportId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("supportPosition"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    supportPosition = new SupportPosition(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("supportAspectRatio"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    supportAspectRatio = property.Value.GetDouble();
                    continue;
                }
            }
            return new PresenterLayoutOptions(presenterId, supportId, Optional.ToNullable(supportPosition), Optional.ToNullable(supportAspectRatio));
        }
    }
}
