// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Communication.MediaComposition
{
    /// <summary> Configure the presentation layout. </summary>
    public partial class PresentationLayoutOptions
    {
        /// <summary> Initializes a new instance of PresentationLayoutOptions. </summary>
        /// <param name="presenterId"> Id of the presenter input. </param>
        /// <param name="audienceIds"> Input ids to be included in the audience of layout. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="presenterId"/> or <paramref name="audienceIds"/> is null. </exception>
        public PresentationLayoutOptions(string presenterId, IEnumerable<string> audienceIds)
        {
            if (presenterId == null)
            {
                throw new ArgumentNullException(nameof(presenterId));
            }
            if (audienceIds == null)
            {
                throw new ArgumentNullException(nameof(audienceIds));
            }

            PresenterId = presenterId;
            AudienceIds = audienceIds.ToList();
        }

        /// <summary> Initializes a new instance of PresentationLayoutOptions. </summary>
        /// <param name="presenterId"> Id of the presenter input. </param>
        /// <param name="audienceIds"> Input ids to be included in the audience of layout. </param>
        /// <param name="audiencePosition"> Position of the audience streams. </param>
        internal PresentationLayoutOptions(string presenterId, IList<string> audienceIds, AudiencePosition? audiencePosition)
        {
            PresenterId = presenterId;
            AudienceIds = audienceIds;
            AudiencePosition = audiencePosition;
        }

        /// <summary> Id of the presenter input. </summary>
        public string PresenterId { get; set; }
        /// <summary> Input ids to be included in the audience of layout. </summary>
        public IList<string> AudienceIds { get; }
        /// <summary> Position of the audience streams. </summary>
        public AudiencePosition? AudiencePosition { get; set; }
    }
}
