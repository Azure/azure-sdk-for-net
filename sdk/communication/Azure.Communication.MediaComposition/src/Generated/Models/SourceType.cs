// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.MediaComposition
{
    /// <summary> The SourceType. </summary>
    public readonly partial struct SourceType : IEquatable<SourceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="SourceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ParticipantValue = "participant";
        private const string SpriteValue = "sprite";
        private const string RtmpValue = "rtmp";
        private const string SrtValue = "srt";
        private const string ScreenShareValue = "screenShare";

        /// <summary> participant. </summary>
        public static SourceType Participant { get; } = new SourceType(ParticipantValue);
        /// <summary> sprite. </summary>
        public static SourceType Sprite { get; } = new SourceType(SpriteValue);
        /// <summary> rtmp. </summary>
        public static SourceType Rtmp { get; } = new SourceType(RtmpValue);
        /// <summary> srt. </summary>
        public static SourceType Srt { get; } = new SourceType(SrtValue);
        /// <summary> screenShare. </summary>
        public static SourceType ScreenShare { get; } = new SourceType(ScreenShareValue);
        /// <summary> Determines if two <see cref="SourceType"/> values are the same. </summary>
        public static bool operator ==(SourceType left, SourceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SourceType"/> values are not the same. </summary>
        public static bool operator !=(SourceType left, SourceType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="SourceType"/>. </summary>
        public static implicit operator SourceType(string value) => new SourceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SourceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SourceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
