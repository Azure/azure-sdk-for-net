// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Communication.CallingServer
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class ServerCallingModelFactory
    {
        /// <summary> Initializes a new instance of TransferCallResponse. </summary>
        /// <param name="operationId"> The operation id. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="operationContext"> The operation context provided by client. </param>
        /// <param name="resultDetails"> The result info for the operation. </param>
        /// <returns> A new <see cref="CallingServer.TransferCallResponse"/> instance for mocking. </returns>
        public static TransferCallResponse TransferCallResponse(string operationId = null, CallingOperationStatus status = default, string operationContext = null, CallingOperationResultDetails resultDetails = null)
        {
            return new TransferCallResponse(operationId, status, operationContext, resultDetails);
        }

        /// <summary> Initializes a new instance of CallingOperationResultDetails. </summary>
        /// <param name="code"> The result code associated with the operation. </param>
        /// <param name="subcode"> The subcode that further classifies the result. </param>
        /// <param name="message"> The message is a detail explanation of subcode. </param>
        /// <returns> A new <see cref="CallingServer.CallingOperationResultDetails"/> instance for mocking. </returns>
        public static CallingOperationResultDetails CallingOperationResultDetails(int code = default, int subcode = default, string message = null)
        {
            return new CallingOperationResultDetails(code, subcode, message);
        }

        /// <summary> Initializes a new instance of PlayResponse. </summary>
        /// <param name="operationId"> The operation id. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="operationContext"> The operation context provided by client. </param>
        /// <param name="resultDetails"> The result info for the operation. </param>
        /// <returns> A new <see cref="CallingServer.PlayResponse"/> instance for mocking. </returns>
        public static PlayResponse PlayResponse(string operationId = null, CallingOperationStatus status = default, string operationContext = null, CallingOperationResultDetails resultDetails = null)
        {
            return new PlayResponse(operationId, status, operationContext, resultDetails);
        }

        /// <summary> Initializes a new instance of AddParticipantsResponse. </summary>
        /// <param name="operationId"> The operation id. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="operationContext"> The operation context provided by client. </param>
        /// <param name="resultDetails"> The result info for the operation. </param>
        /// <returns> A new <see cref="CallingServer.AddParticipantsResponse"/> instance for mocking. </returns>
        public static AddParticipantsResponse AddParticipantsResponse(string operationId = null, CallingOperationStatus status = default, string operationContext = null, CallingOperationResultDetails resultDetails = null)
        {
            return new AddParticipantsResponse(operationId, status, operationContext, resultDetails);
        }

        /// <summary> Initializes a new instance of RemoveParticipantsResponse. </summary>
        /// <param name="operationId"> The operation id. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="operationContext"> The operation context provided by client. </param>
        /// <param name="resultDetails"> The result info for the operation. </param>
        /// <returns> A new <see cref="CallingServer.RemoveParticipantsResponse"/> instance for mocking. </returns>
        public static RemoveParticipantsResponse RemoveParticipantsResponse(string operationId = null, CallingOperationStatus status = default, string operationContext = null, CallingOperationResultDetails resultDetails = null)
        {
            return new RemoveParticipantsResponse(operationId, status, operationContext, resultDetails);
        }

        /// <summary> Initializes a new instance of StartCallRecordingResponse. </summary>
        /// <param name="recordingId"> The recording id of the started recording. </param>
        /// <returns> A new <see cref="CallingServer.StartCallRecordingResponse"/> instance for mocking. </returns>
        public static StartCallRecordingResponse StartCallRecordingResponse(string recordingId = null)
        {
            return new StartCallRecordingResponse(recordingId);
        }

        /// <summary> Initializes a new instance of GetCallRecordingStateResponse. </summary>
        /// <param name="recordingState"></param>
        /// <returns> A new <see cref="CallingServer.GetCallRecordingStateResponse"/> instance for mocking. </returns>
        public static GetCallRecordingStateResponse GetCallRecordingStateResponse(RecordingState? recordingState = null)
        {
            return new GetCallRecordingStateResponse(recordingState);
        }
    }
}
