// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Communication.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A class representing a CommunicationService resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CommunicationServiceResource
    {
        /// <summary>
        /// Initializes a new instance of the CommunicationServiceResource
        /// class.
        /// </summary>
        public CommunicationServiceResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommunicationServiceResource
        /// class.
        /// </summary>
        /// <param name="dataLocation">The location where the communication
        /// service stores its data at rest.</param>
        /// <param name="id">Fully qualified resource ID for the
        /// resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the service - e.g.
        /// "Microsoft.Communication/CommunicationServices"</param>
        /// <param name="location">The Azure location where the
        /// CommunicationService is running.</param>
        /// <param name="tags">Tags of the service which is a list of key value
        /// pairs that describe the resource.</param>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Unknown', 'Succeeded', 'Failed',
        /// 'Canceled', 'Running', 'Creating', 'Updating', 'Deleting',
        /// 'Moving'</param>
        /// <param name="hostName">FQDN of the CommunicationService
        /// instance.</param>
        /// <param name="notificationHubId">Resource ID of an Azure
        /// Notification Hub linked to this resource.</param>
        /// <param name="version">Version of the CommunicationService resource.
        /// Probably you need the same or higher version of client
        /// SDKs.</param>
        /// <param name="immutableResourceId">The immutable resource Id of the
        /// communication service.</param>
        public CommunicationServiceResource(string dataLocation, string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string provisioningState = default(string), string hostName = default(string), string notificationHubId = default(string), string version = default(string), string immutableResourceId = default(string))
        {
            Id = id;
            Name = name;
            Type = type;
            Location = location;
            Tags = tags;
            ProvisioningState = provisioningState;
            HostName = hostName;
            DataLocation = dataLocation;
            NotificationHubId = notificationHubId;
            Version = version;
            ImmutableResourceId = immutableResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets fully qualified resource ID for the resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the type of the service - e.g.
        /// "Microsoft.Communication/CommunicationServices"
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets the Azure location where the CommunicationService is
        /// running.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets tags of the service which is a list of key value pairs
        /// that describe the resource.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets provisioning state of the resource. Possible values include:
        /// 'Unknown', 'Succeeded', 'Failed', 'Canceled', 'Running',
        /// 'Creating', 'Updating', 'Deleting', 'Moving'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets FQDN of the CommunicationService instance.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostName")]
        public string HostName { get; private set; }

        /// <summary>
        /// Gets or sets the location where the communication service stores
        /// its data at rest.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataLocation")]
        public string DataLocation { get; set; }

        /// <summary>
        /// Gets resource ID of an Azure Notification Hub linked to this
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.notificationHubId")]
        public string NotificationHubId { get; private set; }

        /// <summary>
        /// Gets version of the CommunicationService resource. Probably you
        /// need the same or higher version of client SDKs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets the immutable resource Id of the communication service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.immutableResourceId")]
        public string ImmutableResourceId { get; private set; }

    }
}
