// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Communication.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The current status of an async operation
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OperationStatus
    {
        /// <summary>
        /// Initializes a new instance of the OperationStatus class.
        /// </summary>
        public OperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationStatus class.
        /// </summary>
        /// <param name="id">Fully qualified ID for the operation
        /// status.</param>
        /// <param name="status">Provisioning state of the resource. Possible
        /// values include: 'Succeeded', 'Failed', 'Canceled', 'Creating',
        /// 'Deleting', 'Moving'</param>
        /// <param name="startTime">The start time of the operation</param>
        /// <param name="endTime">The end time of the operation</param>
        /// <param name="percentComplete">Percent of the operation that is
        /// complete</param>
        /// <param name="error">The error</param>
        public OperationStatus(string id = default(string), string status = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), double? percentComplete = default(double?), ErrorResponseError error = default(ErrorResponseError))
        {
            Id = id;
            Status = status;
            StartTime = startTime;
            EndTime = endTime;
            PercentComplete = percentComplete;
            Error = error;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets fully qualified ID for the operation status.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets provisioning state of the resource. Possible values include:
        /// 'Succeeded', 'Failed', 'Canceled', 'Creating', 'Deleting', 'Moving'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the start time of the operation
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets the end time of the operation
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets percent of the operation that is complete
        /// </summary>
        [JsonProperty(PropertyName = "percentComplete")]
        public double? PercentComplete { get; private set; }

        /// <summary>
        /// Gets or sets the error
        /// </summary>
        [JsonProperty(PropertyName = "error.error")]
        public ErrorResponseError Error { get; set; }

    }
}
