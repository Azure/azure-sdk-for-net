// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.Messages
{
    /// <summary> A request to send a template conversation message. </summary>
    public partial class TemplateConversationMessageContent : ConversationMessageContent
    {
        /// <summary> Initializes a new instance of <see cref="TemplateConversationMessageContent"/>. </summary>
        /// <param name="template"> The template object used to create templates. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="template"/> is null. </exception>
        public TemplateConversationMessageContent(MessageTemplate template)
        {
            Argument.AssertNotNull(template, nameof(template));

            Kind = CommunicationMessageKind.Template;
            Template = template;
        }

        /// <summary> Initializes a new instance of <see cref="TemplateConversationMessageContent"/>. </summary>
        /// <param name="kind"> The type discriminator describing a message type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="template"> The template object used to create templates. </param>
        internal TemplateConversationMessageContent(CommunicationMessageKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, MessageTemplate template) : base(kind, serializedAdditionalRawData)
        {
            Template = template;
        }

        /// <summary> Initializes a new instance of <see cref="TemplateConversationMessageContent"/> for deserialization. </summary>
        internal TemplateConversationMessageContent()
        {
        }

        /// <summary> The template object used to create templates. </summary>
        public MessageTemplate Template { get; set; }
    }
}
