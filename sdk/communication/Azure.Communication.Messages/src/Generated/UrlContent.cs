// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.Messages
{
    /// <summary> The message content of type Url information. </summary>
    public partial class UrlContent : MessageContent
    {
        /// <summary> Initializes a new instance of <see cref="UrlContent"/>. </summary>
        /// <param name="title"> Title of the url content. </param>
        /// <param name="url"> The url in the content. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="title"/> or <paramref name="url"/> is null. </exception>
        public UrlContent(string title, Uri url)
        {
            Argument.AssertNotNull(title, nameof(title));
            Argument.AssertNotNull(url, nameof(url));

            Kind = MessageContentKind.Url;
            Title = title;
            Url = url;
        }

        /// <summary> Initializes a new instance of <see cref="UrlContent"/>. </summary>
        /// <param name="kind"> Kind of MessageContent. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="title"> Title of the url content. </param>
        /// <param name="url"> The url in the content. </param>
        internal UrlContent(MessageContentKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, string title, Uri url) : base(kind, serializedAdditionalRawData)
        {
            Title = title;
            Url = url;
        }

        /// <summary> Initializes a new instance of <see cref="UrlContent"/> for deserialization. </summary>
        internal UrlContent()
        {
        }

        /// <summary> Title of the url content. </summary>
        public string Title { get; }
        /// <summary> The url in the content. </summary>
        public Uri Url { get; }
    }
}
