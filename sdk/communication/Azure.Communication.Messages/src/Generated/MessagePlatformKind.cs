// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.Messages
{
    /// <summary> Defines the type of message platform. </summary>
    internal readonly partial struct MessagePlatformKind : IEquatable<MessagePlatformKind>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MessagePlatformKind"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MessagePlatformKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CommunicationValue = "communication";
        private const string BotValue = "bot";
        private const string WhatsAppValue = "whatsApp";

        /// <summary> Azure Communication platform. </summary>
        public static MessagePlatformKind Communication { get; } = new MessagePlatformKind(CommunicationValue);
        /// <summary> Bot platform. </summary>
        public static MessagePlatformKind Bot { get; } = new MessagePlatformKind(BotValue);
        /// <summary> WhatsApp platform. </summary>
        public static MessagePlatformKind WhatsApp { get; } = new MessagePlatformKind(WhatsAppValue);
        /// <summary> Determines if two <see cref="MessagePlatformKind"/> values are the same. </summary>
        public static bool operator ==(MessagePlatformKind left, MessagePlatformKind right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MessagePlatformKind"/> values are not the same. </summary>
        public static bool operator !=(MessagePlatformKind left, MessagePlatformKind right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MessagePlatformKind"/>. </summary>
        public static implicit operator MessagePlatformKind(string value) => new MessagePlatformKind(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MessagePlatformKind other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MessagePlatformKind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
