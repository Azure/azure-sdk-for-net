// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Communication.Messages
{
    /// <summary> The action content of type ActionSet. </summary>
    public partial class ActionSetContent : MessageContent
    {
        /// <summary> Initializes a new instance of <see cref="ActionSetContent"/>. </summary>
        /// <param name="title"> Title of the actionSet content. </param>
        /// <param name="actionSet"> Set or group of actions. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="title"/> or <paramref name="actionSet"/> is null. </exception>
        public ActionSetContent(string title, IEnumerable<ActionSet> actionSet)
        {
            Argument.AssertNotNull(title, nameof(title));
            Argument.AssertNotNull(actionSet, nameof(actionSet));

            Kind = MessageContentKind.ActionSet;
            Title = title;
            ActionSet = actionSet.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ActionSetContent"/>. </summary>
        /// <param name="kind"> Kind of MessageContent. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="title"> Title of the actionSet content. </param>
        /// <param name="actionSet"> Set or group of actions. </param>
        internal ActionSetContent(MessageContentKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, string title, IList<ActionSet> actionSet) : base(kind, serializedAdditionalRawData)
        {
            Title = title;
            ActionSet = actionSet;
        }

        /// <summary> Initializes a new instance of <see cref="ActionSetContent"/> for deserialization. </summary>
        internal ActionSetContent()
        {
        }

        /// <summary> Title of the actionSet content. </summary>
        public string Title { get; }
        /// <summary> Set or group of actions. </summary>
        public IList<ActionSet> ActionSet { get; }
    }
}
