// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Communication.Messages
{
    /// <summary> Result of the send message operation. </summary>
    public partial class SendMessageResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SendMessageResult"/>. </summary>
        /// <param name="receipts"> Receipts of the send message operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="receipts"/> is null. </exception>
        internal SendMessageResult(IEnumerable<MessageReceipt> receipts)
        {
            Argument.AssertNotNull(receipts, nameof(receipts));

            Receipts = receipts.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="SendMessageResult"/>. </summary>
        /// <param name="receipts"> Receipts of the send message operation. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SendMessageResult(IReadOnlyList<MessageReceipt> receipts, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Receipts = receipts;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SendMessageResult"/> for deserialization. </summary>
        internal SendMessageResult()
        {
        }

        /// <summary> Receipts of the send message operation. </summary>
        public IReadOnlyList<MessageReceipt> Receipts { get; }
    }
}
