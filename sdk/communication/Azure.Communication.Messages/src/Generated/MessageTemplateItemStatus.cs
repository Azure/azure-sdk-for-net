// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.Messages
{
    /// <summary> Enum for status in MessageTemplateItem. </summary>
    public readonly partial struct MessageTemplateItemStatus : IEquatable<MessageTemplateItemStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MessageTemplateItemStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MessageTemplateItemStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ApprovedValue = "approved";
        private const string RejectedValue = "rejected";
        private const string PendingValue = "pending";
        private const string PausedValue = "paused";

        /// <summary> approved. </summary>
        public static MessageTemplateItemStatus Approved { get; } = new MessageTemplateItemStatus(ApprovedValue);
        /// <summary> rejected. </summary>
        public static MessageTemplateItemStatus Rejected { get; } = new MessageTemplateItemStatus(RejectedValue);
        /// <summary> pending. </summary>
        public static MessageTemplateItemStatus Pending { get; } = new MessageTemplateItemStatus(PendingValue);
        /// <summary> paused. </summary>
        public static MessageTemplateItemStatus Paused { get; } = new MessageTemplateItemStatus(PausedValue);
        /// <summary> Determines if two <see cref="MessageTemplateItemStatus"/> values are the same. </summary>
        public static bool operator ==(MessageTemplateItemStatus left, MessageTemplateItemStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MessageTemplateItemStatus"/> values are not the same. </summary>
        public static bool operator !=(MessageTemplateItemStatus left, MessageTemplateItemStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MessageTemplateItemStatus"/>. </summary>
        public static implicit operator MessageTemplateItemStatus(string value) => new MessageTemplateItemStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MessageTemplateItemStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MessageTemplateItemStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
