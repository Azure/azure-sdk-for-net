// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Communication.Messages
{
    /// <summary>
    /// Details of the message to send.
    /// Please note <see cref="SendNotificationRequest"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="SendTextNotificationRequest"/>, <see cref="SendMediaNotificationRequest"/> and <see cref="SendTemplateNotificationRequest"/>.
    /// </summary>
    internal abstract partial class SendNotificationRequest
    {
        /// <summary> Initializes a new instance of <see cref="SendNotificationRequest"/>. </summary>
        /// <param name="channelRegistrationId"> The Channel Registration ID for the Business Identifier. </param>
        /// <param name="to"> The native external platform user identifiers of the recipient. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="to"/> is null. </exception>
        protected SendNotificationRequest(Guid channelRegistrationId, IEnumerable<string> to)
        {
            Argument.AssertNotNull(to, nameof(to));

            ChannelRegistrationId = channelRegistrationId;
            To = to.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="SendNotificationRequest"/>. </summary>
        /// <param name="kind"> Discriminator. </param>
        /// <param name="channelRegistrationId"> The Channel Registration ID for the Business Identifier. </param>
        /// <param name="to"> The native external platform user identifiers of the recipient. </param>
        internal SendNotificationRequest(string kind, Guid channelRegistrationId, IList<string> to)
        {
            Kind = kind;
            ChannelRegistrationId = channelRegistrationId;
            To = to;
        }

        /// <summary> Discriminator. </summary>
        internal string Kind { get; set; }
        /// <summary> The Channel Registration ID for the Business Identifier. </summary>
        public Guid ChannelRegistrationId { get; }
        /// <summary> The native external platform user identifiers of the recipient. </summary>
        public IList<string> To { get; }
    }
}
