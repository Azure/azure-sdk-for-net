<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="SendMessageAsync(NotificationContent,CancellationToken)">
      <example>
This sample shows how to call SendMessageAsync.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = await client.SendMessageAsync(notificationContent);
]]></code>
This sample shows how to call SendMessageAsync with all parameters.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = await client.SendMessageAsync(notificationContent);
]]></code></example>
    </member>
    <member name="SendMessage(NotificationContent,CancellationToken)">
      <example>
This sample shows how to call SendMessage.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = client.SendMessage(notificationContent);
]]></code>
This sample shows how to call SendMessage with all parameters.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = client.SendMessage(notificationContent);
]]></code></example>
    </member>
    <member name="SendMessageAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call SendMessageAsync and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    content = "<content>",
    kind = "text",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = await client.SendMessageAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code>
This sample shows how to call SendMessageAsync with all request content and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    content = "<content>",
    kind = "text",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = await client.SendMessageAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code></example>
    </member>
    <member name="SendMessage(RequestContent,RequestContext)">
      <example>
This sample shows how to call SendMessage and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    content = "<content>",
    kind = "text",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = client.SendMessage(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code>
This sample shows how to call SendMessage with all request content and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    content = "<content>",
    kind = "text",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = client.SendMessage(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code></example>
    </member>
  </members>
</doc>