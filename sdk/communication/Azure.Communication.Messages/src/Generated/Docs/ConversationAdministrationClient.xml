<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateConversationAsync(CommunicationConversation,ConversationMessage,CancellationToken)">
      <example>
This sample shows how to call CreateConversationAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

CommunicationConversation conversation = new CommunicationConversation();
Response<CommunicationConversation> response = await client.CreateConversationAsync(conversation);
]]></code>
This sample shows how to call CreateConversationAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

CommunicationConversation conversation = new CommunicationConversation
{
    Topic = "<topic>",
    DeliveryChannelIds = { "<deliveryChannelIds>" },
    OutboundDeliveryStrategy = OutboundDeliveryStrategyKind.InternalOnly,
    Participants = {new InternalConversationParticipant(new CommunicationContact("<id>"))
    {
        DisplayName = "<displayName>",
    }},
};
ConversationMessage initialMessage = new ConversationMessage("<content>");
Response<CommunicationConversation> response = await client.CreateConversationAsync(conversation, initialMessage: initialMessage);
]]></code></example>
    </member>
    <member name="CreateConversation(CommunicationConversation,ConversationMessage,CancellationToken)">
      <example>
This sample shows how to call CreateConversation.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

CommunicationConversation conversation = new CommunicationConversation();
Response<CommunicationConversation> response = client.CreateConversation(conversation);
]]></code>
This sample shows how to call CreateConversation with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

CommunicationConversation conversation = new CommunicationConversation
{
    Topic = "<topic>",
    DeliveryChannelIds = { "<deliveryChannelIds>" },
    OutboundDeliveryStrategy = OutboundDeliveryStrategyKind.InternalOnly,
    Participants = {new InternalConversationParticipant(new CommunicationContact("<id>"))
    {
        DisplayName = "<displayName>",
    }},
};
ConversationMessage initialMessage = new ConversationMessage("<content>");
Response<CommunicationConversation> response = client.CreateConversation(conversation, initialMessage: initialMessage);
]]></code></example>
    </member>
    <member name="CreateConversationAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateConversationAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    conversation = new object(),
});
Response response = await client.CreateConversationAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CreateConversationAsync with all request content and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    conversation = new
    {
        topic = "<topic>",
        deliveryChannelIds = new object[]
        {
            "<deliveryChannelIds>"
        },
        outboundDeliveryStrategy = "internalOnly",
        participants = new object[]
        {
            new
            {
                kind = "internal",
                contact = new
                {
                    kind = "communication",
                    id = "<id>",
                },
                displayName = "<displayName>",
            }
        },
    },
    initialMessage = new
    {
        content = "<content>",
    },
});
Response response = await client.CreateConversationAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("topic").ToString());
Console.WriteLine(result.GetProperty("deliveryChannelIds")[0].ToString());
Console.WriteLine(result.GetProperty("outboundDeliveryStrategy").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="CreateConversation(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateConversation and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    conversation = new object(),
});
Response response = client.CreateConversation(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call CreateConversation with all request content and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    conversation = new
    {
        topic = "<topic>",
        deliveryChannelIds = new object[]
        {
            "<deliveryChannelIds>"
        },
        outboundDeliveryStrategy = "internalOnly",
        participants = new object[]
        {
            new
            {
                kind = "internal",
                contact = new
                {
                    kind = "communication",
                    id = "<id>",
                },
                displayName = "<displayName>",
            }
        },
    },
    initialMessage = new
    {
        content = "<content>",
    },
});
Response response = client.CreateConversation(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("topic").ToString());
Console.WriteLine(result.GetProperty("deliveryChannelIds")[0].ToString());
Console.WriteLine(result.GetProperty("outboundDeliveryStrategy").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="GetConversationAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetConversationAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<CommunicationConversation> response = await client.GetConversationAsync("<conversationId>");
]]></code>
This sample shows how to call GetConversationAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<CommunicationConversation> response = await client.GetConversationAsync("<conversationId>");
]]></code></example>
    </member>
    <member name="GetConversation(string,CancellationToken)">
      <example>
This sample shows how to call GetConversation.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<CommunicationConversation> response = client.GetConversation("<conversationId>");
]]></code>
This sample shows how to call GetConversation with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<CommunicationConversation> response = client.GetConversation("<conversationId>");
]]></code></example>
    </member>
    <member name="GetConversationAsync(string,RequestContext)">
      <example>
This sample shows how to call GetConversationAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.GetConversationAsync("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetConversationAsync with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.GetConversationAsync("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("topic").ToString());
Console.WriteLine(result.GetProperty("deliveryChannelIds")[0].ToString());
Console.WriteLine(result.GetProperty("outboundDeliveryStrategy").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="GetConversation(string,RequestContext)">
      <example>
This sample shows how to call GetConversation and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.GetConversation("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetConversation with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.GetConversation("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("topic").ToString());
Console.WriteLine(result.GetProperty("deliveryChannelIds")[0].ToString());
Console.WriteLine(result.GetProperty("outboundDeliveryStrategy").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("participants")[0].GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="DeleteConversationAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteConversationAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.DeleteConversationAsync("<conversationId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteConversationAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.DeleteConversationAsync("<conversationId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteConversation(string,RequestContext)">
      <example>
This sample shows how to call DeleteConversation.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.DeleteConversation("<conversationId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteConversation with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.DeleteConversation("<conversationId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateConversationAsync(string,RequestContext)">
      <example>
This sample shows how to call TerminateConversationAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.TerminateConversationAsync("<conversationId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call TerminateConversationAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.TerminateConversationAsync("<conversationId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateConversation(string,RequestContext)">
      <example>
This sample shows how to call TerminateConversation.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.TerminateConversation("<conversationId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call TerminateConversation with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.TerminateConversation("<conversationId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="AddParticipantsAsync(string,AddParticipantsOptions,CancellationToken)">
      <example>
This sample shows how to call AddParticipantsAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

AddParticipantsOptions options = new AddParticipantsOptions(new ConversationParticipant[]
{
    new InternalConversationParticipant(new CommunicationContact("<id>"))
});
Response<AddParticipantsResult> response = await client.AddParticipantsAsync("<conversationId>", options);
]]></code>
This sample shows how to call AddParticipantsAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

AddParticipantsOptions options = new AddParticipantsOptions(new ConversationParticipant[]
{
    new InternalConversationParticipant(new CommunicationContact("<id>"))
    {
        DisplayName = "<displayName>",
    }
});
Response<AddParticipantsResult> response = await client.AddParticipantsAsync("<conversationId>", options);
]]></code></example>
    </member>
    <member name="AddParticipants(string,AddParticipantsOptions,CancellationToken)">
      <example>
This sample shows how to call AddParticipants.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

AddParticipantsOptions options = new AddParticipantsOptions(new ConversationParticipant[]
{
    new InternalConversationParticipant(new CommunicationContact("<id>"))
});
Response<AddParticipantsResult> response = client.AddParticipants("<conversationId>", options);
]]></code>
This sample shows how to call AddParticipants with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

AddParticipantsOptions options = new AddParticipantsOptions(new ConversationParticipant[]
{
    new InternalConversationParticipant(new CommunicationContact("<id>"))
    {
        DisplayName = "<displayName>",
    }
});
Response<AddParticipantsResult> response = client.AddParticipants("<conversationId>", options);
]]></code></example>
    </member>
    <member name="AddParticipantsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AddParticipantsAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participants = new object[]
    {
        new
        {
            kind = "internal",
            contact = new
            {
                kind = "communication",
                id = "<id>",
            },
        }
    },
});
Response response = await client.AddParticipantsAsync("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
]]></code>
This sample shows how to call AddParticipantsAsync with all parameters and request content and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participants = new object[]
    {
        new
        {
            kind = "internal",
            contact = new
            {
                kind = "communication",
                id = "<id>",
            },
            displayName = "<displayName>",
        }
    },
});
Response response = await client.AddParticipantsAsync("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="AddParticipants(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AddParticipants and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participants = new object[]
    {
        new
        {
            kind = "internal",
            contact = new
            {
                kind = "communication",
                id = "<id>",
            },
        }
    },
});
Response response = client.AddParticipants("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
]]></code>
This sample shows how to call AddParticipants with all parameters and request content and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participants = new object[]
    {
        new
        {
            kind = "internal",
            contact = new
            {
                kind = "communication",
                id = "<id>",
            },
            displayName = "<displayName>",
        }
    },
});
Response response = client.AddParticipants("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="RemoveParticipantsAsync(string,RemoveParticipantsOptions,CancellationToken)">
      <example>
This sample shows how to call RemoveParticipantsAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

RemoveParticipantsOptions options = new RemoveParticipantsOptions(new string[] { "<participantIds>" });
Response<RemoveParticipantsResult> response = await client.RemoveParticipantsAsync("<conversationId>", options);
]]></code>
This sample shows how to call RemoveParticipantsAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

RemoveParticipantsOptions options = new RemoveParticipantsOptions(new string[] { "<participantIds>" });
Response<RemoveParticipantsResult> response = await client.RemoveParticipantsAsync("<conversationId>", options);
]]></code></example>
    </member>
    <member name="RemoveParticipants(string,RemoveParticipantsOptions,CancellationToken)">
      <example>
This sample shows how to call RemoveParticipants.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

RemoveParticipantsOptions options = new RemoveParticipantsOptions(new string[] { "<participantIds>" });
Response<RemoveParticipantsResult> response = client.RemoveParticipants("<conversationId>", options);
]]></code>
This sample shows how to call RemoveParticipants with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

RemoveParticipantsOptions options = new RemoveParticipantsOptions(new string[] { "<participantIds>" });
Response<RemoveParticipantsResult> response = client.RemoveParticipants("<conversationId>", options);
]]></code></example>
    </member>
    <member name="RemoveParticipantsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RemoveParticipantsAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participantIds = new object[]
    {
        "<participantIds>"
    },
});
Response response = await client.RemoveParticipantsAsync("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
]]></code>
This sample shows how to call RemoveParticipantsAsync with all parameters and request content and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participantIds = new object[]
    {
        "<participantIds>"
    },
});
Response response = await client.RemoveParticipantsAsync("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="RemoveParticipants(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RemoveParticipants and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participantIds = new object[]
    {
        "<participantIds>"
    },
});
Response response = client.RemoveParticipants("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
]]></code>
This sample shows how to call RemoveParticipants with all parameters and request content and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

using RequestContent content = RequestContent.Create(new
{
    participantIds = new object[]
    {
        "<participantIds>"
    },
});
Response response = client.RemoveParticipants("<conversationId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("invalidParticipants")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="AnalyzeConversationAsync(string,CancellationToken)">
      <example>
This sample shows how to call AnalyzeConversationAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<GetConversationThreadAnalysisResult> response = await client.AnalyzeConversationAsync("<conversationId>");
]]></code>
This sample shows how to call AnalyzeConversationAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<GetConversationThreadAnalysisResult> response = await client.AnalyzeConversationAsync("<conversationId>");
]]></code></example>
    </member>
    <member name="AnalyzeConversation(string,CancellationToken)">
      <example>
This sample shows how to call AnalyzeConversation.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<GetConversationThreadAnalysisResult> response = client.AnalyzeConversation("<conversationId>");
]]></code>
This sample shows how to call AnalyzeConversation with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response<GetConversationThreadAnalysisResult> response = client.AnalyzeConversation("<conversationId>");
]]></code></example>
    </member>
    <member name="AnalyzeConversationAsync(string,RequestContext)">
      <example>
This sample shows how to call AnalyzeConversationAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.AnalyzeConversationAsync("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").ToString());
]]></code>
This sample shows how to call AnalyzeConversationAsync with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = await client.AnalyzeConversationAsync("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").ToString());
]]></code></example>
    </member>
    <member name="AnalyzeConversation(string,RequestContext)">
      <example>
This sample shows how to call AnalyzeConversation and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.AnalyzeConversation("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").ToString());
]]></code>
This sample shows how to call AnalyzeConversation with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

Response response = client.AnalyzeConversation("<conversationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("summary").ToString());
]]></code></example>
    </member>
    <member name="GetConversationsAsync(int?,string,Guid?,CancellationToken)">
      <example>
This sample shows how to call GetConversationsAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (CommunicationConversation item in client.GetConversationsAsync())
{
}
]]></code>
This sample shows how to call GetConversationsAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (CommunicationConversation item in client.GetConversationsAsync(maxPageSize: 1234, participantId: "<participantId>", channelId: Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")))
{
}
]]></code></example>
    </member>
    <member name="GetConversations(int?,string,Guid?,CancellationToken)">
      <example>
This sample shows how to call GetConversations.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (CommunicationConversation item in client.GetConversations())
{
}
]]></code>
This sample shows how to call GetConversations with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (CommunicationConversation item in client.GetConversations(maxPageSize: 1234, participantId: "<participantId>", channelId: Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")))
{
}
]]></code></example>
    </member>
    <member name="GetConversationsAsync(int?,string,Guid?,RequestContext)">
      <example>
This sample shows how to call GetConversationsAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (BinaryData item in client.GetConversationsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetConversationsAsync with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (BinaryData item in client.GetConversationsAsync(1234, "<participantId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("topic").ToString());
    Console.WriteLine(result.GetProperty("deliveryChannelIds")[0].ToString());
    Console.WriteLine(result.GetProperty("outboundDeliveryStrategy").ToString());
    Console.WriteLine(result.GetProperty("participants")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("participants")[0].GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("participants")[0].GetProperty("kind").ToString());
}
]]></code></example>
    </member>
    <member name="GetConversations(int?,string,Guid?,RequestContext)">
      <example>
This sample shows how to call GetConversations and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (BinaryData item in client.GetConversations(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetConversations with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (BinaryData item in client.GetConversations(1234, "<participantId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("topic").ToString());
    Console.WriteLine(result.GetProperty("deliveryChannelIds")[0].ToString());
    Console.WriteLine(result.GetProperty("outboundDeliveryStrategy").ToString());
    Console.WriteLine(result.GetProperty("participants")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("participants")[0].GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("participants")[0].GetProperty("kind").ToString());
}
]]></code></example>
    </member>
    <member name="GetMessagesAsync(string,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetMessagesAsync.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (ConversationMessageItem item in client.GetMessagesAsync("<conversationId>"))
{
}
]]></code>
This sample shows how to call GetMessagesAsync with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (ConversationMessageItem item in client.GetMessagesAsync("<conversationId>", maxPageSize: 1234, participantId: "<participantId>"))
{
}
]]></code></example>
    </member>
    <member name="GetMessages(string,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetMessages.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (ConversationMessageItem item in client.GetMessages("<conversationId>"))
{
}
]]></code>
This sample shows how to call GetMessages with all parameters.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (ConversationMessageItem item in client.GetMessages("<conversationId>", maxPageSize: 1234, participantId: "<participantId>"))
{
}
]]></code></example>
    </member>
    <member name="GetMessagesAsync(string,int?,string,RequestContext)">
      <example>
This sample shows how to call GetMessagesAsync and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (BinaryData item in client.GetMessagesAsync("<conversationId>", null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("message").GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("senderCommunicationIdentifier").ToString());
    Console.WriteLine(result.GetProperty("createdOn").ToString());
}
]]></code>
This sample shows how to call GetMessagesAsync with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

await foreach (BinaryData item in client.GetMessagesAsync("<conversationId>", 1234, "<participantId>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("sequenceId").ToString());
    Console.WriteLine(result.GetProperty("message").GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("senderDisplayName").ToString());
    Console.WriteLine(result.GetProperty("senderCommunicationIdentifier").ToString());
    Console.WriteLine(result.GetProperty("createdOn").ToString());
}
]]></code></example>
    </member>
    <member name="GetMessages(string,int?,string,RequestContext)">
      <example>
This sample shows how to call GetMessages and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (BinaryData item in client.GetMessages("<conversationId>", null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("message").GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("senderCommunicationIdentifier").ToString());
    Console.WriteLine(result.GetProperty("createdOn").ToString());
}
]]></code>
This sample shows how to call GetMessages with all parameters and parse the result.
<code><![CDATA[
ConversationAdministrationClient client = new ConversationAdministrationClient((string)null);

foreach (BinaryData item in client.GetMessages("<conversationId>", 1234, "<participantId>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("sequenceId").ToString());
    Console.WriteLine(result.GetProperty("message").GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("senderDisplayName").ToString());
    Console.WriteLine(result.GetProperty("senderCommunicationIdentifier").ToString());
    Console.WriteLine(result.GetProperty("createdOn").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>