// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.Messages
{
    /// <summary> The message content of type Url information. </summary>
    public partial class LinkContent : MessageContent
    {
        /// <summary> Initializes a new instance of <see cref="LinkContent"/>. </summary>
        /// <param name="title"> Title of the url content. </param>
        /// <param name="uri"> The url in the content. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="title"/> or <paramref name="uri"/> is null. </exception>
        public LinkContent(string title, Uri uri)
        {
            Argument.AssertNotNull(title, nameof(title));
            Argument.AssertNotNull(uri, nameof(uri));

            Kind = MessageContentKind.Url;
            Title = title;
            Uri = uri;
        }

        /// <summary> Initializes a new instance of <see cref="LinkContent"/>. </summary>
        /// <param name="kind"> Kind of MessageContent. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="title"> Title of the url content. </param>
        /// <param name="uri"> The url in the content. </param>
        internal LinkContent(MessageContentKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, string title, Uri uri) : base(kind, serializedAdditionalRawData)
        {
            Title = title;
            Uri = uri;
        }

        /// <summary> Initializes a new instance of <see cref="LinkContent"/> for deserialization. </summary>
        internal LinkContent()
        {
        }

        /// <summary> Title of the url content. </summary>
        public string Title { get; }
        /// <summary> The url in the content. </summary>
        public Uri Uri { get; }
    }
}
