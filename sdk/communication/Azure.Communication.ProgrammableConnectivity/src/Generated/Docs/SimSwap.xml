<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="RetrieveAsync(string,NetworkIdentifier,string,CancellationToken)">
      <example>
This sample shows how to call RetrieveAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapRetrievalResult> response = await client.RetrieveAsync("<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call RetrieveAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapRetrievalResult> response = await client.RetrieveAsync("<apcGatewayId>", networkIdentifier, phoneNumber: "<phoneNumber>");
]]></code></example>
    </member>
    <member name="Retrieve(string,NetworkIdentifier,string,CancellationToken)">
      <example>
This sample shows how to call Retrieve.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapRetrievalResult> response = client.Retrieve("<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call Retrieve with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapRetrievalResult> response = client.Retrieve("<apcGatewayId>", networkIdentifier, phoneNumber: "<phoneNumber>");
]]></code></example>
    </member>
    <member name="RetrieveAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RetrieveAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = await client.RetrieveAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RetrieveAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    phoneNumber = "<phoneNumber>",
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = await client.RetrieveAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("date").ToString());
]]></code></example>
    </member>
    <member name="Retrieve(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Retrieve and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = client.Retrieve("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Retrieve with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    phoneNumber = "<phoneNumber>",
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = client.Retrieve("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("date").ToString());
]]></code></example>
    </member>
    <member name="VerifyAsync(string,NetworkIdentifier,string,int?,CancellationToken)">
      <example>
This sample shows how to call VerifyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapVerificationResult> response = await client.VerifyAsync("<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call VerifyAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapVerificationResult> response = await client.VerifyAsync("<apcGatewayId>", networkIdentifier, phoneNumber: "<phoneNumber>", maxAgeHours: 1234);
]]></code></example>
    </member>
    <member name="Verify(string,NetworkIdentifier,string,int?,CancellationToken)">
      <example>
This sample shows how to call Verify.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapVerificationResult> response = client.Verify("<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call Verify with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<SimSwapVerificationResult> response = client.Verify("<apcGatewayId>", networkIdentifier, phoneNumber: "<phoneNumber>", maxAgeHours: 1234);
]]></code></example>
    </member>
    <member name="VerifyAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call VerifyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = await client.VerifyAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call VerifyAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    phoneNumber = "<phoneNumber>",
    maxAgeHours = 1234,
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = await client.VerifyAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
    </member>
    <member name="Verify(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Verify and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = client.Verify("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call Verify with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SimSwap client = new ProgrammableConnectivityClient(endpoint, credential).GetSimSwapClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    phoneNumber = "<phoneNumber>",
    maxAgeHours = 1234,
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
});
Response response = client.Verify("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
    </member>
  </members>
</doc>