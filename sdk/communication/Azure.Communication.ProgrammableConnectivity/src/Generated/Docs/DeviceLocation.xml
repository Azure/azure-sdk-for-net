<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="VerifyAsync(string,DeviceLocationVerificationContent,CancellationToken)">
      <example>
This sample shows how to call VerifyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

DeviceLocationVerificationContent deviceLocationVerificationContent = new DeviceLocationVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"), 123.45, 123.45, 1234, new LocationDevice());
Response<DeviceLocationVerificationResult> response = await client.VerifyAsync("<apcGatewayId>", deviceLocationVerificationContent);
]]></code>
This sample shows how to call VerifyAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

DeviceLocationVerificationContent deviceLocationVerificationContent = new DeviceLocationVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"), 123.45, 123.45, 1234, new LocationDevice
{
    NetworkAccessIdentifier = "<networkAccessIdentifier>",
    PhoneNumber = "<phoneNumber>",
    Ipv4Address = new Ipv4Address("<ipv4>", 1234),
    Ipv6Address = new Ipv6Address("<ipv6>", 1234),
});
Response<DeviceLocationVerificationResult> response = await client.VerifyAsync("<apcGatewayId>", deviceLocationVerificationContent);
]]></code></example>
    </member>
    <member name="Verify(string,DeviceLocationVerificationContent,CancellationToken)">
      <example>
This sample shows how to call Verify.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

DeviceLocationVerificationContent deviceLocationVerificationContent = new DeviceLocationVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"), 123.45, 123.45, 1234, new LocationDevice());
Response<DeviceLocationVerificationResult> response = client.Verify("<apcGatewayId>", deviceLocationVerificationContent);
]]></code>
This sample shows how to call Verify with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

DeviceLocationVerificationContent deviceLocationVerificationContent = new DeviceLocationVerificationContent(new NetworkIdentifier("<identifierType>", "<identifier>"), 123.45, 123.45, 1234, new LocationDevice
{
    NetworkAccessIdentifier = "<networkAccessIdentifier>",
    PhoneNumber = "<phoneNumber>",
    Ipv4Address = new Ipv4Address("<ipv4>", 1234),
    Ipv6Address = new Ipv6Address("<ipv6>", 1234),
});
Response<DeviceLocationVerificationResult> response = client.Verify("<apcGatewayId>", deviceLocationVerificationContent);
]]></code></example>
    </member>
    <member name="VerifyAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call VerifyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    latitude = 123.45,
    longitude = 123.45,
    accuracy = 1234,
    device = new object(),
});
Response response = await client.VerifyAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call VerifyAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    latitude = 123.45,
    longitude = 123.45,
    accuracy = 1234,
    device = new
    {
        networkAccessIdentifier = "<networkAccessIdentifier>",
        phoneNumber = "<phoneNumber>",
        ipv4Address = new
        {
            ipv4 = "<ipv4>",
            port = 1234,
        },
        ipv6Address = new
        {
            ipv6 = "<ipv6>",
            port = 1234,
        },
    },
});
Response response = await client.VerifyAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
    </member>
    <member name="Verify(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Verify and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    latitude = 123.45,
    longitude = 123.45,
    accuracy = 1234,
    device = new object(),
});
Response response = client.Verify("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call Verify with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceLocation client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceLocationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    latitude = 123.45,
    longitude = 123.45,
    accuracy = 1234,
    device = new
    {
        networkAccessIdentifier = "<networkAccessIdentifier>",
        phoneNumber = "<phoneNumber>",
        ipv4Address = new
        {
            ipv4 = "<ipv4>",
            port = 1234,
        },
        ipv6Address = new
        {
            ipv6 = "<ipv6>",
            port = 1234,
        },
    },
});
Response response = client.Verify("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
    </member>
  </members>
</doc>