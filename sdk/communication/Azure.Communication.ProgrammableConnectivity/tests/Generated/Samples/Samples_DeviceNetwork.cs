// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Communication.ProgrammableConnectivity.Samples
{
    public partial class Samples_DeviceNetwork
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeviceNetwork_Retrieve_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            using RequestContent content = RequestContent.Create(new
            {
                identifierType = "<identifierType>",
                identifier = "<identifier>",
            });
            Response response = client.Retrieve("<apcGatewayId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("networkCode").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeviceNetwork_Retrieve_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            using RequestContent content = RequestContent.Create(new
            {
                identifierType = "<identifierType>",
                identifier = "<identifier>",
            });
            Response response = await client.RetrieveAsync("<apcGatewayId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("networkCode").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeviceNetwork_Retrieve_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
            Response<NetworkRetrievalResult> response = client.Retrieve("<apcGatewayId>", networkIdentifier);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeviceNetwork_Retrieve_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
            Response<NetworkRetrievalResult> response = await client.RetrieveAsync("<apcGatewayId>", networkIdentifier);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeviceNetwork_Retrieve_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            using RequestContent content = RequestContent.Create(new
            {
                identifierType = "<identifierType>",
                identifier = "<identifier>",
            });
            Response response = client.Retrieve("<apcGatewayId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("networkCode").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeviceNetwork_Retrieve_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            using RequestContent content = RequestContent.Create(new
            {
                identifierType = "<identifierType>",
                identifier = "<identifier>",
            });
            Response response = await client.RetrieveAsync("<apcGatewayId>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("networkCode").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeviceNetwork_Retrieve_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
            Response<NetworkRetrievalResult> response = client.Retrieve("<apcGatewayId>", networkIdentifier);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeviceNetwork_Retrieve_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

            NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
            Response<NetworkRetrievalResult> response = await client.RetrieveAsync("<apcGatewayId>", networkIdentifier);
        }
    }
}
