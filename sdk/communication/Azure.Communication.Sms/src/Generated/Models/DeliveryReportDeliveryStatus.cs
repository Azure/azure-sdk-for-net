// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.Sms.Models
{
    /// <summary> The delivery status of the message. </summary>
    public readonly partial struct DeliveryReportDeliveryStatus : IEquatable<DeliveryReportDeliveryStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DeliveryReportDeliveryStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DeliveryReportDeliveryStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PendingValue = "Pending";
        private const string DeliveredValue = "Delivered";
        private const string FailedValue = "Failed";
        private const string UnknownValue = "Unknown";

        /// <summary> Pending. </summary>
        public static DeliveryReportDeliveryStatus Pending { get; } = new DeliveryReportDeliveryStatus(PendingValue);
        /// <summary> Delivered. </summary>
        public static DeliveryReportDeliveryStatus Delivered { get; } = new DeliveryReportDeliveryStatus(DeliveredValue);
        /// <summary> Failed. </summary>
        public static DeliveryReportDeliveryStatus Failed { get; } = new DeliveryReportDeliveryStatus(FailedValue);
        /// <summary> Unknown. </summary>
        public static DeliveryReportDeliveryStatus Unknown { get; } = new DeliveryReportDeliveryStatus(UnknownValue);
        /// <summary> Determines if two <see cref="DeliveryReportDeliveryStatus"/> values are the same. </summary>
        public static bool operator ==(DeliveryReportDeliveryStatus left, DeliveryReportDeliveryStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DeliveryReportDeliveryStatus"/> values are not the same. </summary>
        public static bool operator !=(DeliveryReportDeliveryStatus left, DeliveryReportDeliveryStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DeliveryReportDeliveryStatus"/>. </summary>
        public static implicit operator DeliveryReportDeliveryStatus(string value) => new DeliveryReportDeliveryStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DeliveryReportDeliveryStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DeliveryReportDeliveryStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
