// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Communication.Sms
{
    /// <summary> Represents the properties of a send MMS message request. </summary>
    internal partial class MmsSendMessageRequest
    {
        /// <summary> Initializes a new instance of MmsSendMessageRequest. </summary>
        /// <param name="from"> The sender&apos;s identifier (typically phone number in E.164 format) that is owned by the authenticated account. </param>
        /// <param name="recipients"> The recipient phone numbers in E.164 format. </param>
        /// <param name="attachments"> A list of media attachments to include as part of the MMS. You can have maximum 10 attachments. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="from"/>, <paramref name="recipients"/> or <paramref name="attachments"/> is null. </exception>
        public MmsSendMessageRequest(string @from, IEnumerable<MmsRecipient> recipients, IEnumerable<MmsSendRequestAttachment> attachments)
        {
            Argument.AssertNotNull(@from, nameof(@from));
            Argument.AssertNotNull(recipients, nameof(recipients));
            Argument.AssertNotNull(attachments, nameof(attachments));

            From = @from;
            Recipients = recipients.ToList();
            Attachments = attachments.ToList();
        }

        /// <summary> The sender&apos;s identifier (typically phone number in E.164 format) that is owned by the authenticated account. </summary>
        public string From { get; }
        /// <summary> The recipient phone numbers in E.164 format. </summary>
        public IList<MmsRecipient> Recipients { get; }
        /// <summary> The contents of the message that will be sent to the recipient. </summary>
        public string Message { get; set; }
        /// <summary> A list of media attachments to include as part of the MMS. You can have maximum 10 attachments. </summary>
        public IList<MmsSendRequestAttachment> Attachments { get; }
        /// <summary> Optional configuration for sending MMS messages. </summary>
        public MmsSendOptions SendOptions { get; set; }
    }
}
