// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.Sms
{
    /// <summary> The result of a repeatable request with one of the case-insensitive values accepted or rejected. </summary>
    internal readonly partial struct MmsSendResponseItemRepeatabilityResult : IEquatable<MmsSendResponseItemRepeatabilityResult>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MmsSendResponseItemRepeatabilityResult"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MmsSendResponseItemRepeatabilityResult(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AcceptedValue = "accepted";
        private const string RejectedValue = "rejected";

        /// <summary> accepted. </summary>
        public static MmsSendResponseItemRepeatabilityResult Accepted { get; } = new MmsSendResponseItemRepeatabilityResult(AcceptedValue);
        /// <summary> rejected. </summary>
        public static MmsSendResponseItemRepeatabilityResult Rejected { get; } = new MmsSendResponseItemRepeatabilityResult(RejectedValue);
        /// <summary> Determines if two <see cref="MmsSendResponseItemRepeatabilityResult"/> values are the same. </summary>
        public static bool operator ==(MmsSendResponseItemRepeatabilityResult left, MmsSendResponseItemRepeatabilityResult right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MmsSendResponseItemRepeatabilityResult"/> values are not the same. </summary>
        public static bool operator !=(MmsSendResponseItemRepeatabilityResult left, MmsSendResponseItemRepeatabilityResult right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MmsSendResponseItemRepeatabilityResult"/>. </summary>
        public static implicit operator MmsSendResponseItemRepeatabilityResult(string value) => new MmsSendResponseItemRepeatabilityResult(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MmsSendResponseItemRepeatabilityResult other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MmsSendResponseItemRepeatabilityResult other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
