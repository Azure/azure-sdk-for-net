// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;

namespace Azure.Communication.Sms.Models
{
    public partial class DeliveryReport
    {
        internal static DeliveryReport DeserializeDeliveryReport(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DeliveryReportDeliveryStatus deliveryStatus = default;
            string deliveryStatusDetails = default;
            IReadOnlyList<DeliveryAttempt> deliveryAttempts = default;
            DateTimeOffset? receivedTimestamp = default;
            string tag = default;
            string messageId = default;
            string @from = default;
            string to = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deliveryStatus"u8))
                {
                    deliveryStatus = new DeliveryReportDeliveryStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("deliveryStatusDetails"u8))
                {
                    deliveryStatusDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deliveryAttempts"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DeliveryAttempt> array = new List<DeliveryAttempt>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DeliveryAttempt.DeserializeDeliveryAttempt(item));
                    }
                    deliveryAttempts = array;
                    continue;
                }
                if (property.NameEquals("receivedTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    receivedTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("tag"u8))
                {
                    tag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("messageId"u8))
                {
                    messageId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("from"u8))
                {
                    @from = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("to"u8))
                {
                    to = property.Value.GetString();
                    continue;
                }
            }
            return new DeliveryReport(
                deliveryStatus,
                deliveryStatusDetails,
                deliveryAttempts ?? new ChangeTrackingList<DeliveryAttempt>(),
                receivedTimestamp,
                tag,
                messageId,
                @from,
                to);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static DeliveryReport FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content, ModelSerializationExtensions.JsonDocumentOptions);
            return DeserializeDeliveryReport(document.RootElement);
        }
    }
}
