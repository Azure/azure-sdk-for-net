// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    public partial class FunctionRouterRule
    {
        internal static FunctionRouterRule DeserializeFunctionRouterRule(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Uri functionUri = default;
            Optional<FunctionRouterRuleCredential> credential = default;
            RouterRuleKind kind = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("functionUri"u8))
                {
                    functionUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("credential"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    credential = FunctionRouterRuleCredential.DeserializeFunctionRouterRuleCredential(property.Value);
                    continue;
                }
                if (property.NameEquals("kind"u8))
                {
                    kind = new RouterRuleKind(property.Value.GetString());
                    continue;
                }
            }
            return new FunctionRouterRule(kind, functionUri, credential.Value);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static new FunctionRouterRule FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeFunctionRouterRule(document.RootElement);
        }
    }
}
