// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    /// <summary> An offer of a job to a worker. </summary>
    public partial class RouterJobOffer
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="RouterJobOffer"/>. </summary>
        /// <param name="jobId"> The Id of the job. </param>
        /// <param name="capacityCost"> The capacity cost consumed by the job offer. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="jobId"/> is null. </exception>
        internal RouterJobOffer(string jobId, int capacityCost)
        {
            Argument.AssertNotNull(jobId, nameof(jobId));

            JobId = jobId;
            CapacityCost = capacityCost;
            _serializedAdditionalRawData = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="RouterJobOffer"/>. </summary>
        /// <param name="offerId"> The Id of the offer. </param>
        /// <param name="jobId"> The Id of the job. </param>
        /// <param name="capacityCost"> The capacity cost consumed by the job offer. </param>
        /// <param name="offeredAt"> The time the offer was created in UTC. </param>
        /// <param name="expiresAt"> The time that the offer will expire in UTC. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal RouterJobOffer(string offerId, string jobId, int capacityCost, DateTimeOffset? offeredAt, DateTimeOffset? expiresAt, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            OfferId = offerId;
            JobId = jobId;
            CapacityCost = capacityCost;
            OfferedAt = offeredAt;
            ExpiresAt = expiresAt;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="RouterJobOffer"/> for deserialization. </summary>
        internal RouterJobOffer()
        {
        }

        /// <summary> The Id of the offer. </summary>
        public string OfferId { get; }
        /// <summary> The Id of the job. </summary>
        public string JobId { get; }
        /// <summary> The capacity cost consumed by the job offer. </summary>
        public int CapacityCost { get; }
        /// <summary> The time the offer was created in UTC. </summary>
        public DateTimeOffset? OfferedAt { get; }
        /// <summary> The time that the offer will expire in UTC. </summary>
        public DateTimeOffset? ExpiresAt { get; }
    }
}
