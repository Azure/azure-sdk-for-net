// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    /// <summary> Assignment details of a job to a worker. </summary>
    public partial class RouterJobAssignment
    {
        /// <summary> Initializes a new instance of RouterJobAssignment. </summary>
        /// <param name="assignmentId"> The Id of the job assignment. </param>
        /// <param name="assignedAt"> The assignment time of the job in UTC. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="assignmentId"/> is null. </exception>
        internal RouterJobAssignment(string assignmentId, DateTimeOffset assignedAt)
        {
            Argument.AssertNotNull(assignmentId, nameof(assignmentId));

            AssignmentId = assignmentId;
            AssignedAt = assignedAt;
        }

        /// <summary> Initializes a new instance of RouterJobAssignment. </summary>
        /// <param name="assignmentId"> The Id of the job assignment. </param>
        /// <param name="workerId"> The Id of the Worker assigned to the job. </param>
        /// <param name="assignedAt"> The assignment time of the job in UTC. </param>
        /// <param name="completedAt"> The time the job was marked as completed after being assigned in UTC. </param>
        /// <param name="closedAt"> The time the job was marked as closed after being completed in UTC. </param>
        internal RouterJobAssignment(string assignmentId, string workerId, DateTimeOffset assignedAt, DateTimeOffset? completedAt, DateTimeOffset? closedAt)
        {
            AssignmentId = assignmentId;
            WorkerId = workerId;
            AssignedAt = assignedAt;
            CompletedAt = completedAt;
            ClosedAt = closedAt;
        }

        /// <summary> The Id of the job assignment. </summary>
        public string AssignmentId { get; }
        /// <summary> The Id of the Worker assigned to the job. </summary>
        public string WorkerId { get; }
        /// <summary> The assignment time of the job in UTC. </summary>
        public DateTimeOffset AssignedAt { get; }
        /// <summary> The time the job was marked as completed after being assigned in UTC. </summary>
        public DateTimeOffset? CompletedAt { get; }
        /// <summary> The time the job was marked as closed after being completed in UTC. </summary>
        public DateTimeOffset? ClosedAt { get; }
    }
}
