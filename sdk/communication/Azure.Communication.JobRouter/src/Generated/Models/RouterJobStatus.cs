// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.JobRouter.Models
{
    /// <summary> The state of the Job. </summary>
    public readonly partial struct RouterJobStatus : IEquatable<RouterJobStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RouterJobStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RouterJobStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PendingClassificationValue = "pendingClassification";
        private const string QueuedValue = "queued";
        private const string AssignedValue = "assigned";
        private const string CompletedValue = "completed";
        private const string ClosedValue = "closed";
        private const string CancelledValue = "cancelled";
        private const string ClassificationFailedValue = "classificationFailed";
        private const string CreatedValue = "created";

        /// <summary> pendingClassification. </summary>
        public static RouterJobStatus PendingClassification { get; } = new RouterJobStatus(PendingClassificationValue);
        /// <summary> queued. </summary>
        public static RouterJobStatus Queued { get; } = new RouterJobStatus(QueuedValue);
        /// <summary> assigned. </summary>
        public static RouterJobStatus Assigned { get; } = new RouterJobStatus(AssignedValue);
        /// <summary> completed. </summary>
        public static RouterJobStatus Completed { get; } = new RouterJobStatus(CompletedValue);
        /// <summary> closed. </summary>
        public static RouterJobStatus Closed { get; } = new RouterJobStatus(ClosedValue);
        /// <summary> cancelled. </summary>
        public static RouterJobStatus Cancelled { get; } = new RouterJobStatus(CancelledValue);
        /// <summary> classificationFailed. </summary>
        public static RouterJobStatus ClassificationFailed { get; } = new RouterJobStatus(ClassificationFailedValue);
        /// <summary> created. </summary>
        public static RouterJobStatus Created { get; } = new RouterJobStatus(CreatedValue);
        /// <summary> Determines if two <see cref="RouterJobStatus"/> values are the same. </summary>
        public static bool operator ==(RouterJobStatus left, RouterJobStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RouterJobStatus"/> values are not the same. </summary>
        public static bool operator !=(RouterJobStatus left, RouterJobStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RouterJobStatus"/>. </summary>
        public static implicit operator RouterJobStatus(string value) => new RouterJobStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RouterJobStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RouterJobStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
