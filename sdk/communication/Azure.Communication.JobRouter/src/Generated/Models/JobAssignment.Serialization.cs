// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    public partial class JobAssignment
    {
        internal static JobAssignment DeserializeJobAssignment(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string id = default;
            Optional<string> workerId = default;
            DateTimeOffset assignTime = default;
            Optional<DateTimeOffset> completeTime = default;
            Optional<DateTimeOffset> closeTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("workerId"u8))
                {
                    workerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("assignTime"u8))
                {
                    assignTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("completeTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    completeTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("closeTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    closeTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new JobAssignment(id, workerId.Value, assignTime, Optional.ToNullable(completeTime), Optional.ToNullable(closeTime));
        }
    }
}
