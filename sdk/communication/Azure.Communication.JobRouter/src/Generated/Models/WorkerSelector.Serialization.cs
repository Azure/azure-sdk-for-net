// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    public partial class WorkerSelector : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("key");
            writer.WriteStringValue(Key);
            writer.WritePropertyName("labelOperator");
            writer.WriteStringValue(LabelOperator.ToSerialString());
            if (Optional.IsDefined(_value))
            {
                writer.WritePropertyName("value");
                writer.WriteObjectValue(_value);
            }
            if (Optional.IsDefined(TtlSeconds))
            {
                writer.WritePropertyName("ttlSeconds");
                writer.WriteNumberValue(TtlSeconds.Value);
            }
            if (Optional.IsDefined(Expedite))
            {
                writer.WritePropertyName("expedite");
                writer.WriteBooleanValue(Expedite.Value);
            }
            writer.WriteEndObject();
        }

        internal static WorkerSelector DeserializeWorkerSelector(JsonElement element)
        {
            string key = default;
            LabelOperator labelOperator = default;
            Optional<object> value = default;
            Optional<double> ttlSeconds = default;
            Optional<bool> expedite = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("key"))
                {
                    key = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("labelOperator"))
                {
                    labelOperator = property.Value.GetString().ToLabelOperator();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    value = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("ttlSeconds"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ttlSeconds = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("expedite"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expedite = property.Value.GetBoolean();
                    continue;
                }
            }
            return new WorkerSelector(key, labelOperator, value.Value, Optional.ToNullable(ttlSeconds), Optional.ToNullable(expedite));
        }
    }
}
