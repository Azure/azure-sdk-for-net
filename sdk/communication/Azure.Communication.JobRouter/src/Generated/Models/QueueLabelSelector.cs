// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Communication.JobRouter.Models
{
    /// <summary> Selects a queue by label selectors evaluated against it&apos;s labels. </summary>
    public partial class QueueLabelSelector : QueueSelector
    {
        /// <summary> Initializes a new instance of QueueLabelSelector. </summary>
        /// <param name="labelSelectors"> The label selectors to evaluate against the queue labels. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="labelSelectors"/> is null. </exception>
        public QueueLabelSelector(IEnumerable<LabelSelectorAttachment> labelSelectors)
        {
            if (labelSelectors == null)
            {
                throw new ArgumentNullException(nameof(labelSelectors));
            }

            LabelSelectors = labelSelectors.ToList();
            Kind = "queue-label";
        }

        /// <summary> Initializes a new instance of QueueLabelSelector. </summary>
        /// <param name="kind"> . </param>
        /// <param name="labelSelectors"> The label selectors to evaluate against the queue labels. </param>
        internal QueueLabelSelector(string kind, IList<LabelSelectorAttachment> labelSelectors) : base(kind)
        {
            LabelSelectors = labelSelectors;
            Kind = kind ?? "queue-label";
        }

        /// <summary> The label selectors to evaluate against the queue labels. </summary>
        public IList<LabelSelectorAttachment> LabelSelectors { get; }
    }
}
