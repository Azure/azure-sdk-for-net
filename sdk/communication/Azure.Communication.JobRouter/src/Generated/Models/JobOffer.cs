// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.JobRouter
{
    /// <summary> An offer of an assignment of work to a worker. </summary>
    public partial class JobOffer
    {
        /// <summary> Initializes a new instance of JobOffer. </summary>
        /// <param name="id"> The Id of the offer. </param>
        /// <param name="jobId"> The Id of the job. </param>
        /// <param name="capacityCost"> The capacity cost consumed by the job offer. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="jobId"/> is null. </exception>
        internal JobOffer(string id, string jobId, int capacityCost)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            if (jobId == null)
            {
                throw new ArgumentNullException(nameof(jobId));
            }

            Id = id;
            JobId = jobId;
            CapacityCost = capacityCost;
        }

        /// <summary> Initializes a new instance of JobOffer. </summary>
        /// <param name="id"> The Id of the offer. </param>
        /// <param name="jobId"> The Id of the job. </param>
        /// <param name="capacityCost"> The capacity cost consumed by the job offer. </param>
        /// <param name="offerTimeUtc"> The time the offer was created. </param>
        /// <param name="expiryTimeUtc"> The time that the offer will expire. </param>
        internal JobOffer(string id, string jobId, int capacityCost, DateTimeOffset? offerTimeUtc, DateTimeOffset? expiryTimeUtc)
        {
            Id = id;
            JobId = jobId;
            CapacityCost = capacityCost;
            OfferTimeUtc = offerTimeUtc;
            ExpiryTimeUtc = expiryTimeUtc;
        }

        /// <summary> The Id of the offer. </summary>
        public string Id { get; }
        /// <summary> The Id of the job. </summary>
        public string JobId { get; }
        /// <summary> The capacity cost consumed by the job offer. </summary>
        public int CapacityCost { get; }
        /// <summary> The time the offer was created. </summary>
        public DateTimeOffset? OfferTimeUtc { get; }
        /// <summary> The time that the offer will expire. </summary>
        public DateTimeOffset? ExpiryTimeUtc { get; }
    }
}
