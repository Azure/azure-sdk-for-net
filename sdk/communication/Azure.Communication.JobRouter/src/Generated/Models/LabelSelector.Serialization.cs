// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    public partial class LabelSelector : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("key");
            writer.WriteStringValue(Key);
            writer.WritePropertyName("operator");
            writer.WriteStringValue(Operator.ToSerialString());
            if (Optional.IsDefined(Value))
            {
                if (Value != null)
                {
                    writer.WritePropertyName("value");
                    writer.WriteObjectValue(Value);
                }
                else
                {
                    writer.WriteNull("value");
                }
            }
            if (Optional.IsDefined(Ttl))
            {
                if (Ttl != null)
                {
                    writer.WritePropertyName("ttl");
                    writer.WriteStringValue(Ttl.Value);
                }
                else
                {
                    writer.WriteNull("ttl");
                }
            }
            writer.WriteEndObject();
        }

        internal static LabelSelector DeserializeLabelSelector(JsonElement element)
        {
            string key = default;
            LabelOperator @operator = default;
            Optional<object> value = default;
            Optional<TimeSpan?> ttl = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("key"))
                {
                    key = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operator"))
                {
                    @operator = property.Value.GetString().ToLabelOperator();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        value = null;
                        continue;
                    }
                    value = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("ttl"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        ttl = null;
                        continue;
                    }
                    ttl = property.Value.GetTimeSpan();
                    continue;
                }
            }
            return new LabelSelector(key, @operator, value.Value, Optional.ToNullable(ttl));
        }
    }
}
