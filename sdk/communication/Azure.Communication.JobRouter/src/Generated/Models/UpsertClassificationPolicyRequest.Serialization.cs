// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    internal partial class UpsertClassificationPolicyRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id");
            writer.WriteStringValue(Id);
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(FallbackQueueId))
            {
                writer.WritePropertyName("fallbackQueueId");
                writer.WriteStringValue(FallbackQueueId);
            }
            if (Optional.IsDefined(QueueSelector))
            {
                if (QueueSelector != null)
                {
                    writer.WritePropertyName("queueSelector");
                    writer.WriteObjectValue(QueueSelector);
                }
                else
                {
                    writer.WriteNull("queueSelector");
                }
            }
            if (Optional.IsDefined(PrioritizationRule))
            {
                if (PrioritizationRule != null)
                {
                    writer.WritePropertyName("prioritizationRule");
                    writer.WriteObjectValue(PrioritizationRule);
                }
                else
                {
                    writer.WriteNull("prioritizationRule");
                }
            }
            if (Optional.IsCollectionDefined(WorkerSelectors))
            {
                if (WorkerSelectors != null)
                {
                    writer.WritePropertyName("workerSelectors");
                    writer.WriteStartArray();
                    foreach (var item in WorkerSelectors)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("workerSelectors");
                }
            }
            writer.WriteEndObject();
        }
    }
}
