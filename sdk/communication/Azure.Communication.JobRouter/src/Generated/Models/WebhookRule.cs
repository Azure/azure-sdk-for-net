// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.JobRouter
{
    /// <summary> A rule providing a binding to an external web server. </summary>
    public partial class WebhookRule : RouterRule
    {
        /// <summary> Initializes a new instance of WebhookRule. </summary>
        public WebhookRule()
        {
            Kind = "webhook-rule";
        }

        /// <summary> Initializes a new instance of WebhookRule. </summary>
        /// <param name="kind"> The type discriminator describing a sub-type of Rule. </param>
        /// <param name="authorizationServerUri"> Uri for Authorization Server. </param>
        /// <param name="clientCredential">
        /// OAuth2.0 Credentials used to Contoso&apos;s Authorization server.
        /// Reference: https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/
        /// </param>
        /// <param name="webhookUri"> Uri for Contoso&apos;s Web Server. </param>
        internal WebhookRule(string kind, Uri authorizationServerUri, Oauth2ClientCredential clientCredential, Uri webhookUri) : base(kind)
        {
            AuthorizationServerUri = authorizationServerUri;
            ClientCredential = clientCredential;
            WebhookUri = webhookUri;
            Kind = kind ?? "webhook-rule";
        }

        /// <summary> Uri for Authorization Server. </summary>
        public Uri AuthorizationServerUri { get; set; }
        /// <summary>
        /// OAuth2.0 Credentials used to Contoso&apos;s Authorization server.
        /// Reference: https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/
        /// </summary>
        public Oauth2ClientCredential ClientCredential { get; set; }
        /// <summary> Uri for Contoso&apos;s Web Server. </summary>
        public Uri WebhookUri { get; set; }
    }
}
