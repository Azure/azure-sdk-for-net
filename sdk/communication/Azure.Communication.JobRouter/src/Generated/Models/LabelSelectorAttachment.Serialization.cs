// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    public partial class LabelSelectorAttachment : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("kind");
            writer.WriteStringValue(Kind);
            writer.WriteEndObject();
        }

        internal static LabelSelectorAttachment DeserializeLabelSelectorAttachment(JsonElement element)
        {
            if (element.TryGetProperty("kind", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "conditional": return ConditionalLabelSelector.DeserializeConditionalLabelSelector(element);
                    case "pass-through": return PassThroughLabelSelector.DeserializePassThroughLabelSelector(element);
                    case "rule": return RuleLabelSelector.DeserializeRuleLabelSelector(element);
                    case "static": return StaticLabelSelector.DeserializeStaticLabelSelector(element);
                    case "weighted-allocation": return WeightedAllocationLabelSelector.DeserializeWeightedAllocationLabelSelector(element);
                }
            }
            throw new NotSupportedException("Deserialization of abstract type 'global::Azure.Communication.JobRouter.Models.LabelSelectorAttachment' not supported.");
        }
    }
}
