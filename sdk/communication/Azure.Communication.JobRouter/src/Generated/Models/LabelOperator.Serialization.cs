// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Communication.JobRouter
{
    internal static partial class LabelOperatorExtensions
    {
        public static string ToSerialString(this LabelOperator value) => value switch
        {
            LabelOperator.Equal => "equal",
            LabelOperator.NotEqual => "notEqual",
            LabelOperator.LessThan => "lessThan",
            LabelOperator.LessThanEqual => "lessThanEqual",
            LabelOperator.GreaterThan => "greaterThan",
            LabelOperator.GreaterThanEqual => "greaterThanEqual",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown LabelOperator value.")
        };

        public static LabelOperator ToLabelOperator(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "equal")) return LabelOperator.Equal;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "notEqual")) return LabelOperator.NotEqual;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "lessThan")) return LabelOperator.LessThan;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "lessThanEqual")) return LabelOperator.LessThanEqual;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "greaterThan")) return LabelOperator.GreaterThan;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "greaterThanEqual")) return LabelOperator.GreaterThanEqual;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown LabelOperator value.");
        }
    }
}
