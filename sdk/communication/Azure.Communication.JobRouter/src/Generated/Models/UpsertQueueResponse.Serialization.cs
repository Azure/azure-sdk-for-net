// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    public partial class UpsertQueueResponse
    {
        internal static UpsertQueueResponse DeserializeUpsertQueueResponse(JsonElement element)
        {
            string id = default;
            Optional<string> name = default;
            string distributionPolicyId = default;
            Optional<IDictionary<string, object>> labels = default;
            Optional<string> exceptionPolicyId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("distributionPolicyId"))
                {
                    distributionPolicyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("labels"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        labels = null;
                        continue;
                    }
                    Dictionary<string, object> dictionary = new Dictionary<string, object>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetObject());
                    }
                    labels = dictionary;
                    continue;
                }
                if (property.NameEquals("exceptionPolicyId"))
                {
                    exceptionPolicyId = property.Value.GetString();
                    continue;
                }
            }
            return new UpsertQueueResponse(id, name.Value, distributionPolicyId, Optional.ToDictionary(labels), exceptionPolicyId.Value);
        }
    }
}
