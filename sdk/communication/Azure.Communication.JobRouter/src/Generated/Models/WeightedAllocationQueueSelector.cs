// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Communication.JobRouter
{
    /// <summary> Describes multiple sets of label selectors, of which one will be selected and attached according to a weighting. </summary>
    public partial class WeightedAllocationQueueSelector : QueueSelectorAttachment
    {
        /// <summary> Initializes a new instance of WeightedAllocationQueueSelector. </summary>
        /// <param name="allocations"> A collection of percentage based weighted allocations. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="allocations"/> is null. </exception>
        public WeightedAllocationQueueSelector(IEnumerable<QueueWeightedAllocation> allocations)
        {
            if (allocations == null)
            {
                throw new ArgumentNullException(nameof(allocations));
            }

            Allocations = allocations.ToList();
            Kind = "weighted-allocation-queue-selector";
        }

        /// <summary> Initializes a new instance of WeightedAllocationQueueSelector. </summary>
        /// <param name="kind"> The type discriminator describing the type of label selector attachment. </param>
        /// <param name="allocations"> A collection of percentage based weighted allocations. </param>
        internal WeightedAllocationQueueSelector(string kind, IList<QueueWeightedAllocation> allocations) : base(kind)
        {
            Allocations = allocations;
            Kind = kind ?? "weighted-allocation-queue-selector";
        }

        /// <summary> A collection of percentage based weighted allocations. </summary>
        public IList<QueueWeightedAllocation> Allocations { get; }
    }
}
