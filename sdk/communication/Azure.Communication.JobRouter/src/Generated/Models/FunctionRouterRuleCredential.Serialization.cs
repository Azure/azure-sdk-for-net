// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    public partial class FunctionRouterRuleCredential : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(FunctionKey))
            {
                writer.WritePropertyName("functionKey"u8);
                writer.WriteStringValue(FunctionKey);
            }
            if (Core.Optional.IsDefined(AppKey))
            {
                writer.WritePropertyName("appKey"u8);
                writer.WriteStringValue(AppKey);
            }
            if (Core.Optional.IsDefined(ClientId))
            {
                writer.WritePropertyName("clientId"u8);
                writer.WriteStringValue(ClientId);
            }
            writer.WriteEndObject();
        }

        internal static FunctionRouterRuleCredential DeserializeFunctionRouterRuleCredential(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> functionKey = default;
            Core.Optional<string> appKey = default;
            Core.Optional<string> clientId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("functionKey"u8))
                {
                    functionKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appKey"u8))
                {
                    appKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientId"u8))
                {
                    clientId = property.Value.GetString();
                    continue;
                }
            }
            return new FunctionRouterRuleCredential(functionKey.Value, appKey.Value, clientId.Value);
        }
    }
}
