// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    public partial class QueueStatistics
    {
        internal static QueueStatistics DeserializeQueueStatistics(JsonElement element)
        {
            string queueId = default;
            int length = default;
            Optional<IReadOnlyDictionary<string, double>> estimatedWaitTimeMinutes = default;
            Optional<double> longestJobWaitTimeMinutes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("queueId"))
                {
                    queueId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("length"))
                {
                    length = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("estimatedWaitTimeMinutes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, double> dictionary = new Dictionary<string, double>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetDouble());
                    }
                    estimatedWaitTimeMinutes = dictionary;
                    continue;
                }
                if (property.NameEquals("longestJobWaitTimeMinutes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    longestJobWaitTimeMinutes = property.Value.GetDouble();
                    continue;
                }
            }
            return new QueueStatistics(queueId, length, Optional.ToDictionary(estimatedWaitTimeMinutes), Optional.ToNullable(longestJobWaitTimeMinutes));
        }
    }
}
