// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    public partial class CancelExceptionAction : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Note))
            {
                writer.WritePropertyName("note");
                writer.WriteStringValue(Note);
            }
            if (Optional.IsDefined(DispositionCode))
            {
                writer.WritePropertyName("dispositionCode");
                writer.WriteStringValue(DispositionCode);
            }
            writer.WritePropertyName("kind");
            writer.WriteStringValue(Kind);
            writer.WritePropertyName("id");
            writer.WriteStringValue(Id);
            writer.WriteEndObject();
        }

        internal static CancelExceptionAction DeserializeCancelExceptionAction(JsonElement element)
        {
            Optional<string> note = default;
            Optional<string> dispositionCode = default;
            string kind = default;
            string id = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("note"))
                {
                    note = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dispositionCode"))
                {
                    dispositionCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
            }
            return new CancelExceptionAction(kind, id, note.Value, dispositionCode.Value);
        }
    }
}
