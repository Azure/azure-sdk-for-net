// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    /// <summary> Request payload for closing jobs. </summary>
    public partial class CloseJobRequest
    {
        /// <summary> Initializes a new instance of CloseJobRequest. </summary>
        /// <param name="assignmentId"> The assignment within which the job is to be closed. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="assignmentId"/> is null. </exception>
        public CloseJobRequest(string assignmentId)
        {
            Argument.AssertNotNull(assignmentId, nameof(assignmentId));

            AssignmentId = assignmentId;
        }

        /// <summary> Initializes a new instance of CloseJobRequest. </summary>
        /// <param name="assignmentId"> The assignment within which the job is to be closed. </param>
        /// <param name="dispositionCode">
        /// Indicates the outcome of the job, populate this field with your own custom
        /// values.
        /// </param>
        /// <param name="closeAt">
        /// If not provided, worker capacity is released immediately along with a
        /// JobClosedEvent notification.
        /// If provided, worker capacity is released along
        /// with a JobClosedEvent notification at a future time in UTC.
        /// </param>
        /// <param name="note">
        /// (Optional) A note that will be appended to the jobs' Notes collection with the
        /// current timestamp.
        /// </param>
        internal CloseJobRequest(string assignmentId, string dispositionCode, DateTimeOffset? closeAt, string note)
        {
            AssignmentId = assignmentId;
            DispositionCode = dispositionCode;
            CloseAt = closeAt;
            Note = note;
        }

        /// <summary> The assignment within which the job is to be closed. </summary>
        public string AssignmentId { get; }
        /// <summary>
        /// Indicates the outcome of the job, populate this field with your own custom
        /// values.
        /// </summary>
        public string DispositionCode { get; set; }
        /// <summary>
        /// If not provided, worker capacity is released immediately along with a
        /// JobClosedEvent notification.
        /// If provided, worker capacity is released along
        /// with a JobClosedEvent notification at a future time in UTC.
        /// </summary>
        public DateTimeOffset? CloseAt { get; set; }
        /// <summary>
        /// (Optional) A note that will be appended to the jobs' Notes collection with the
        /// current timestamp.
        /// </summary>
        public string Note { get; set; }
    }
}
