// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Communication.Identity.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class CommunicationIdentityModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.CommunicationIdentity"/>. </summary>
        /// <param name="customId"> The custom Id if one has been associated with the identity. </param>
        /// <param name="lastTokenIssuedAt"> Last time a token has been issued for the identity. </param>
        /// <param name="id"> Identifier of the identity. </param>
        /// <returns> A new <see cref="Models.CommunicationIdentity"/> instance for mocking. </returns>
        public static CommunicationIdentity CommunicationIdentity(string customId = null, DateTimeOffset? lastTokenIssuedAt = null, string id = null)
        {
            return new CommunicationIdentity(customId, lastTokenIssuedAt, id);
        }

        /// <summary> Initializes a new instance of <see cref="Models.TeamsExtensionAssignmentResponse"/>. </summary>
        /// <param name="objectId"></param>
        /// <param name="tenantId"></param>
        /// <param name="principalType"> The type of principal the assignment is for. </param>
        /// <param name="clientIds"></param>
        /// <returns> A new <see cref="Models.TeamsExtensionAssignmentResponse"/> instance for mocking. </returns>
        public static TeamsExtensionAssignmentResponse TeamsExtensionAssignmentResponse(string objectId = null, string tenantId = null, TeamsExtensionPrincipalType principalType = default, IEnumerable<string> clientIds = null)
        {
            clientIds ??= new List<string>();

            return new TeamsExtensionAssignmentResponse(objectId, tenantId, principalType, clientIds?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.EntraAssignmentsResponse"/>. </summary>
        /// <param name="value"></param>
        /// <param name="nextLink"></param>
        /// <returns> A new <see cref="Models.EntraAssignmentsResponse"/> instance for mocking. </returns>
        public static EntraAssignmentsResponse EntraAssignmentsResponse(IEnumerable<EntraAssignment> value = null, string nextLink = null)
        {
            value ??= new List<EntraAssignment>();

            return new EntraAssignmentsResponse(value?.ToList(), nextLink);
        }

        /// <summary> Initializes a new instance of <see cref="Models.EntraAssignment"/>. </summary>
        /// <param name="objectId"></param>
        /// <param name="tenantId"></param>
        /// <param name="principalType"></param>
        /// <param name="clientIds"></param>
        /// <returns> A new <see cref="Models.EntraAssignment"/> instance for mocking. </returns>
        public static EntraAssignment EntraAssignment(string objectId = null, string tenantId = null, EntraPrincipalType principalType = default, IEnumerable<string> clientIds = null)
        {
            clientIds ??= new List<string>();

            return new EntraAssignment(objectId, tenantId, principalType, clientIds?.ToList());
        }
    }
}
