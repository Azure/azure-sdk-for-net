// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.Communication.PhoneNumbers
{
    /// <summary> Represents a phone number available in inventory. </summary>
    internal partial class AvailablePhoneNumber
    {
        /// <summary> Initializes a new instance of <see cref="AvailablePhoneNumber"/>. </summary>
        /// <param name="id"> The id of the phone number. </param>
        /// <param name="countryCode"> The ISO 3166-2 country code, e.g. US. </param>
        /// <param name="phoneNumber"> The phone number in E.164 format, e.g. +11234567890. </param>
        /// <param name="capabilities"> Capabilities of a phone number. </param>
        /// <param name="phoneNumberType"> Represents the number type of the offering. </param>
        /// <param name="assignmentType"> Represents the assignment type of the offering. Also known as the use case. </param>
        /// <param name="cost"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="countryCode"/>, <paramref name="phoneNumber"/>, <paramref name="capabilities"/> or <paramref name="cost"/> is null. </exception>
        internal AvailablePhoneNumber(string id, string countryCode, string phoneNumber, PhoneNumberCapabilities capabilities, PhoneNumberType phoneNumberType, PhoneNumberAssignmentType assignmentType, AvailablePhoneNumberCost cost)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(countryCode, nameof(countryCode));
            Argument.AssertNotNull(phoneNumber, nameof(phoneNumber));
            Argument.AssertNotNull(capabilities, nameof(capabilities));
            Argument.AssertNotNull(cost, nameof(cost));

            Id = id;
            CountryCode = countryCode;
            PhoneNumber = phoneNumber;
            Capabilities = capabilities;
            PhoneNumberType = phoneNumberType;
            AssignmentType = assignmentType;
            Cost = cost;
        }

        /// <summary> The id of the phone number. </summary>
        public string Id { get; }
        /// <summary> The ISO 3166-2 country code, e.g. US. </summary>
        public string CountryCode { get; }
        /// <summary> The phone number in E.164 format, e.g. +11234567890. </summary>
        public string PhoneNumber { get; }
        /// <summary> Capabilities of a phone number. </summary>
        public PhoneNumberCapabilities Capabilities { get; }
        /// <summary> Represents the number type of the offering. </summary>
        public PhoneNumberType PhoneNumberType { get; }
        /// <summary> Represents the assignment type of the offering. Also known as the use case. </summary>
        public PhoneNumberAssignmentType AssignmentType { get; }
        /// <summary> Gets the cost. </summary>
        public AvailablePhoneNumberCost Cost { get; }
    }
}
