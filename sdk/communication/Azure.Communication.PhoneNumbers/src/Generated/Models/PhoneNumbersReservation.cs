// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.PhoneNumbers
{
    /// <summary> The PhoneNumbersReservation. </summary>
    public partial class PhoneNumbersReservation
    {
        /// <summary> Initializes a new instance of <see cref="PhoneNumbersReservation"/>. </summary>
        internal PhoneNumbersReservation()
        {
            PhoneNumbers = new ChangeTrackingList<AvailablePhoneNumber>();
        }

        /// <summary> Initializes a new instance of <see cref="PhoneNumbersReservation"/>. </summary>
        /// <param name="id"> The id of the reservation. </param>
        /// <param name="expiresAt"> The time at which the reservation will expire. If a reservation is not purchased before this time, all of the reserved phone numbers will be released and made available for others to purchase. </param>
        /// <param name="phoneNumbers"></param>
        /// <param name="status"></param>
        internal PhoneNumbersReservation(string id, DateTimeOffset? expiresAt, IReadOnlyList<AvailablePhoneNumber> phoneNumbers, ReservationStatus? status)
        {
            Id = id;
            ExpiresAt = expiresAt;
            PhoneNumbers = phoneNumbers;
            Status = status;
        }

        /// <summary> The id of the reservation. </summary>
        public string Id { get; }
        /// <summary> The time at which the reservation will expire. If a reservation is not purchased before this time, all of the reserved phone numbers will be released and made available for others to purchase. </summary>
        public DateTimeOffset? ExpiresAt { get; }
        /// <summary> Gets the phone numbers. </summary>
        public IReadOnlyList<AvailablePhoneNumber> PhoneNumbers { get; }
        /// <summary> Gets the status. </summary>
        public ReservationStatus? Status { get; }
    }
}
