// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.PhoneNumbers
{
    public partial class PhoneNumbersReservation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("phoneNumbers"u8);
            writer.WriteStartObject();
            foreach (var item in PhoneNumbers)
            {
                writer.WritePropertyName(item.Key);
                writer.WriteObjectValue<AvailablePhoneNumber>(item.Value);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static PhoneNumbersReservation DeserializePhoneNumbersReservation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string id = default;
            DateTimeOffset? expiresAt = default;
            IDictionary<string, AvailablePhoneNumber> phoneNumbers = default;
            ReservationStatus? status = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expiresAt"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    expiresAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("phoneNumbers"u8))
                {
                    Dictionary<string, AvailablePhoneNumber> dictionary = new Dictionary<string, AvailablePhoneNumber>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, AvailablePhoneNumber.DeserializeAvailablePhoneNumber(property0.Value));
                    }
                    phoneNumbers = dictionary;
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    status = new ReservationStatus(property.Value.GetString());
                    continue;
                }
            }
            return new PhoneNumbersReservation(id, expiresAt, phoneNumbers, status);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static PhoneNumbersReservation FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializePhoneNumbersReservation(document.RootElement);
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue<PhoneNumbersReservation>(this);
            return content;
        }
    }
}
