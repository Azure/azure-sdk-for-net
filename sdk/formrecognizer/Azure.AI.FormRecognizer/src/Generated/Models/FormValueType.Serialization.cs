// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.FormRecognizer.Models
{
    internal static class FormValueTypeExtensions
    {
        public static string ToSerialString(this FormValueType value) => value switch
        {
            FormValueType.StringType => "string",
            FormValueType.DateType => "date",
            FormValueType.TimeType => "time",
            FormValueType.PhoneNumberType => "phoneNumber",
            FormValueType.FloatType => "number",
            FormValueType.IntegerType => "integer",
            FormValueType.ArrayType => "array",
            FormValueType.ObjectType => "object",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown FormValueType value.")
        };

        public static FormValueType ToFormValueType(this string value)
        {
            if (string.Equals(value, "string", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.StringType;
            if (string.Equals(value, "date", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.DateType;
            if (string.Equals(value, "time", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.TimeType;
            if (string.Equals(value, "phoneNumber", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.PhoneNumberType;
            if (string.Equals(value, "number", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.FloatType;
            if (string.Equals(value, "integer", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.IntegerType;
            if (string.Equals(value, "array", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.ArrayType;
            if (string.Equals(value, "object", StringComparison.InvariantCultureIgnoreCase)) return FormValueType.ObjectType;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown FormValueType value.");
        }
    }
}
