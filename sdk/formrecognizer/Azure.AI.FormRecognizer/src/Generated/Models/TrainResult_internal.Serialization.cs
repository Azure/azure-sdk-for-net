// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.AI.FormRecognizer.Training;
using Azure.Core;

namespace Azure.AI.FormRecognizer.Models
{
    internal partial class TrainResult_internal
    {
        internal static TrainResult_internal DeserializeTrainResult_internal(JsonElement element)
        {
            IReadOnlyList<TrainingDocumentInfo> trainingDocuments = default;
            Optional<IReadOnlyList<CustomFormModelField>> fields = default;
            Optional<float> averageModelAccuracy = default;
            Optional<IReadOnlyList<FormRecognizerError>> errors = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("trainingDocuments"))
                {
                    List<TrainingDocumentInfo> array = new List<TrainingDocumentInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(TrainingDocumentInfo.DeserializeTrainingDocumentInfo(item));
                        }
                    }
                    trainingDocuments = array;
                    continue;
                }
                if (property.NameEquals("fields"))
                {
                    List<CustomFormModelField> array = new List<CustomFormModelField>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(CustomFormModelField.DeserializeCustomFormModelField(item));
                        }
                    }
                    fields = array;
                    continue;
                }
                if (property.NameEquals("averageModelAccuracy"))
                {
                    averageModelAccuracy = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("errors"))
                {
                    List<FormRecognizerError> array = new List<FormRecognizerError>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(FormRecognizerError.DeserializeFormRecognizerError(item));
                        }
                    }
                    errors = array;
                    continue;
                }
            }
            return new TrainResult_internal(trainingDocuments, new ChangeTrackingList<CustomFormModelField>(fields), averageModelAccuracy.HasValue ? averageModelAccuracy.Value : (float?)null, new ChangeTrackingList<FormRecognizerError>(errors));
        }
    }
}
