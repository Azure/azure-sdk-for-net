// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.FormRecognizer.Models
{
    internal static class LabeledFieldTypeExtensions
    {
        public static string ToSerialString(this LabeledFieldType value) => value switch
        {
            LabeledFieldType.StringValue => "string",
            LabeledFieldType.DateValue => "date",
            LabeledFieldType.TimeValue => "time",
            LabeledFieldType.PhoneNumberValue => "phoneNumber",
            LabeledFieldType.FloatValue => "number",
            LabeledFieldType.IntegerValue => "integer",
            LabeledFieldType.ArrayValue => "array",
            LabeledFieldType.ObjectValue => "object",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown LabeledFieldType value.")
        };

        public static LabeledFieldType ToLabeledFieldType(this string value)
        {
            if (string.Equals(value, "string", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.StringValue;
            if (string.Equals(value, "date", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.DateValue;
            if (string.Equals(value, "time", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.TimeValue;
            if (string.Equals(value, "phoneNumber", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.PhoneNumberValue;
            if (string.Equals(value, "number", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.FloatValue;
            if (string.Equals(value, "integer", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.IntegerValue;
            if (string.Equals(value, "array", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.ArrayValue;
            if (string.Equals(value, "object", StringComparison.InvariantCultureIgnoreCase)) return LabeledFieldType.ObjectValue;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown LabeledFieldType value.");
        }
    }
}
