// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.FormRecognizer.DocumentAnalysis
{
    /// <summary> An annotation object that represents a visual annotation in the document, such as checks âœ“ and crosses X. </summary>
    public partial class DocumentAnnotation
    {
        /// <summary> Initializes a new instance of DocumentAnnotation. </summary>
        /// <param name="kind"> Annotation kind. </param>
        /// <param name="polygon"> Bounding polygon of the annotation. </param>
        /// <param name="confidence"> Confidence of correctly extracting the annotation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="polygon"/> is null. </exception>
        internal DocumentAnnotation(DocumentAnnotationKind kind, IEnumerable<float> polygon, float confidence)
        {
            Argument.AssertNotNull(polygon, nameof(polygon));

            Kind = kind;
            Polygon = polygon.ToList();
            Confidence = confidence;
        }

        /// <summary> Initializes a new instance of DocumentAnnotation. </summary>
        /// <param name="kind"> Annotation kind. </param>
        /// <param name="polygon"> Bounding polygon of the annotation. </param>
        /// <param name="confidence"> Confidence of correctly extracting the annotation. </param>
        internal DocumentAnnotation(DocumentAnnotationKind kind, IReadOnlyList<float> polygon, float confidence)
        {
            Kind = kind;
            Polygon = polygon;
            Confidence = confidence;
        }

        /// <summary> Annotation kind. </summary>
        public DocumentAnnotationKind Kind { get; }
        /// <summary> Confidence of correctly extracting the annotation. </summary>
        public float Confidence { get; }
    }
}
