// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.AI.FormRecognizer.Models
{
    internal partial class PageResult_internal
    {
        internal static PageResult_internal DeserializePageResult_internal(JsonElement element)
        {
            int page = default;
            Optional<int> clusterId = default;
            Optional<IReadOnlyList<KeyValuePair_internal>> keyValuePairs = default;
            Optional<IReadOnlyList<DataTable_internal>> tables = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("page"))
                {
                    page = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("clusterId"))
                {
                    clusterId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("keyValuePairs"))
                {
                    List<KeyValuePair_internal> array = new List<KeyValuePair_internal>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(KeyValuePair_internal.DeserializeKeyValuePair_internal(item));
                        }
                    }
                    keyValuePairs = array;
                    continue;
                }
                if (property.NameEquals("tables"))
                {
                    List<DataTable_internal> array = new List<DataTable_internal>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(DataTable_internal.DeserializeDataTable_internal(item));
                        }
                    }
                    tables = array;
                    continue;
                }
            }
            return new PageResult_internal(page, clusterId.HasValue ? clusterId.Value : (int?)null, new ChangeTrackingList<KeyValuePair_internal>(keyValuePairs), new ChangeTrackingList<DataTable_internal>(tables));
        }
    }
}
