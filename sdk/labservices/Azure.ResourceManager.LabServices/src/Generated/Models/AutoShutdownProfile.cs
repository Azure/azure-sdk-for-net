// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.LabServices.Models
{
    /// <summary>
    /// Profile for how to handle shutting down virtual machines.
    /// Serialized Name: AutoShutdownProfile
    /// </summary>
    public partial class AutoShutdownProfile
    {
        /// <summary> Initializes a new instance of AutoShutdownProfile. </summary>
        public AutoShutdownProfile()
        {
        }

        /// <summary> Initializes a new instance of AutoShutdownProfile. </summary>
        /// <param name="shutdownOnDisconnect">
        /// Whether shutdown on disconnect is enabled
        /// Serialized Name: AutoShutdownProfile.shutdownOnDisconnect
        /// </param>
        /// <param name="shutdownWhenNotConnected">
        /// Whether a VM will get shutdown when it hasn&apos;t been connected to after a period of time.
        /// Serialized Name: AutoShutdownProfile.shutdownWhenNotConnected
        /// </param>
        /// <param name="shutdownOnIdle">
        /// Whether a VM will get shutdown when it has idled for a period of time.
        /// Serialized Name: AutoShutdownProfile.shutdownOnIdle
        /// </param>
        /// <param name="disconnectDelay">
        /// The amount of time a VM will stay running after a user disconnects if this behavior is enabled.
        /// Serialized Name: AutoShutdownProfile.disconnectDelay
        /// </param>
        /// <param name="noConnectDelay">
        /// The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled.
        /// Serialized Name: AutoShutdownProfile.noConnectDelay
        /// </param>
        /// <param name="idleDelay">
        /// The amount of time a VM will idle before it is shutdown if this behavior is enabled.
        /// Serialized Name: AutoShutdownProfile.idleDelay
        /// </param>
        internal AutoShutdownProfile(EnableState? shutdownOnDisconnect, EnableState? shutdownWhenNotConnected, ShutdownOnIdleMode? shutdownOnIdle, TimeSpan? disconnectDelay, TimeSpan? noConnectDelay, TimeSpan? idleDelay)
        {
            ShutdownOnDisconnect = shutdownOnDisconnect;
            ShutdownWhenNotConnected = shutdownWhenNotConnected;
            ShutdownOnIdle = shutdownOnIdle;
            DisconnectDelay = disconnectDelay;
            NoConnectDelay = noConnectDelay;
            IdleDelay = idleDelay;
        }

        /// <summary>
        /// Whether shutdown on disconnect is enabled
        /// Serialized Name: AutoShutdownProfile.shutdownOnDisconnect
        /// </summary>
        public EnableState? ShutdownOnDisconnect { get; set; }
        /// <summary>
        /// Whether a VM will get shutdown when it hasn&apos;t been connected to after a period of time.
        /// Serialized Name: AutoShutdownProfile.shutdownWhenNotConnected
        /// </summary>
        public EnableState? ShutdownWhenNotConnected { get; set; }
        /// <summary>
        /// Whether a VM will get shutdown when it has idled for a period of time.
        /// Serialized Name: AutoShutdownProfile.shutdownOnIdle
        /// </summary>
        public ShutdownOnIdleMode? ShutdownOnIdle { get; set; }
        /// <summary>
        /// The amount of time a VM will stay running after a user disconnects if this behavior is enabled.
        /// Serialized Name: AutoShutdownProfile.disconnectDelay
        /// </summary>
        public TimeSpan? DisconnectDelay { get; set; }
        /// <summary>
        /// The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled.
        /// Serialized Name: AutoShutdownProfile.noConnectDelay
        /// </summary>
        public TimeSpan? NoConnectDelay { get; set; }
        /// <summary>
        /// The amount of time a VM will idle before it is shutdown if this behavior is enabled.
        /// Serialized Name: AutoShutdownProfile.idleDelay
        /// </summary>
        public TimeSpan? IdleDelay { get; set; }
    }
}
