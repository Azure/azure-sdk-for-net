// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.LabServices.Models
{
    /// <summary> The localized name of the resource. </summary>
    public readonly partial struct SkuCapacityScaleType : IEquatable<SkuCapacityScaleType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="SkuCapacityScaleType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SkuCapacityScaleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string ManualValue = "Manual";
        private const string AutomaticValue = "Automatic";

        /// <summary> The capacity is not adjustable in any way. </summary>
        public static SkuCapacityScaleType None { get; } = new SkuCapacityScaleType(NoneValue);
        /// <summary> The user must manually scale this SKU in and out. </summary>
        public static SkuCapacityScaleType Manual { get; } = new SkuCapacityScaleType(ManualValue);
        /// <summary> The user is permitted to scale this SKU in and out. </summary>
        public static SkuCapacityScaleType Automatic { get; } = new SkuCapacityScaleType(AutomaticValue);
        /// <summary> Determines if two <see cref="SkuCapacityScaleType"/> values are the same. </summary>
        public static bool operator ==(SkuCapacityScaleType left, SkuCapacityScaleType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SkuCapacityScaleType"/> values are not the same. </summary>
        public static bool operator !=(SkuCapacityScaleType left, SkuCapacityScaleType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="SkuCapacityScaleType"/>. </summary>
        public static implicit operator SkuCapacityScaleType(string value) => new SkuCapacityScaleType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SkuCapacityScaleType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SkuCapacityScaleType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
