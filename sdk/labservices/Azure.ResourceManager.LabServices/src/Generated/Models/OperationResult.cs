// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;

namespace Azure.ResourceManager.LabServices.Models
{
    /// <summary> A long running operation result. </summary>
    public partial class OperationResult
    {
        /// <summary> Initializes a new instance of OperationResult. </summary>
        /// <param name="status"> The operation status. </param>
        internal OperationResult(OperationStatus status)
        {
            Status = status;
        }

        /// <summary> Initializes a new instance of OperationResult. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="status"> The operation status. </param>
        /// <param name="startOn"> Start time. </param>
        /// <param name="endOn"> End time. </param>
        /// <param name="percentComplete"> Percent completion. </param>
        /// <param name="error"> The error for a failure if the operation failed. </param>
        internal OperationResult(string id, string name, OperationStatus status, DateTimeOffset? startOn, DateTimeOffset? endOn, float? percentComplete, ResponseError error)
        {
            Id = id;
            Name = name;
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            PercentComplete = percentComplete;
            Error = error;
        }

        /// <summary> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </summary>
        public string Id { get; }
        /// <summary> The name of the resource. </summary>
        public string Name { get; }
        /// <summary> The operation status. </summary>
        public OperationStatus Status { get; }
        /// <summary> Start time. </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary> End time. </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary> Percent completion. </summary>
        public float? PercentComplete { get; }
        /// <summary> The error for a failure if the operation failed. </summary>
        public ResponseError Error { get; }
    }
}
