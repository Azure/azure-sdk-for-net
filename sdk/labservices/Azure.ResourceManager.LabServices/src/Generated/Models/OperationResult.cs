// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;

namespace Azure.ResourceManager.LabServices.Models
{
    /// <summary>
    /// A long running operation result
    /// Serialized Name: OperationResult
    /// </summary>
    public partial class OperationResult
    {
        /// <summary> Initializes a new instance of OperationResult. </summary>
        /// <param name="status">
        /// The operation status
        /// Serialized Name: OperationResult.status
        /// </param>
        internal OperationResult(OperationStatus status)
        {
            Status = status;
        }

        /// <summary> Initializes a new instance of OperationResult. </summary>
        /// <param name="id">
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// Serialized Name: OperationResult.id
        /// </param>
        /// <param name="name">
        /// The name of the resource
        /// Serialized Name: OperationResult.name
        /// </param>
        /// <param name="status">
        /// The operation status
        /// Serialized Name: OperationResult.status
        /// </param>
        /// <param name="startOn">
        /// Start time
        /// Serialized Name: OperationResult.startTime
        /// </param>
        /// <param name="endOn">
        /// End time
        /// Serialized Name: OperationResult.endTime
        /// </param>
        /// <param name="percentComplete">
        /// Percent completion
        /// Serialized Name: OperationResult.percentComplete
        /// </param>
        /// <param name="error">
        /// The error for a failure if the operation failed.
        /// Serialized Name: OperationResult.error
        /// </param>
        internal OperationResult(string id, string name, OperationStatus status, DateTimeOffset? startOn, DateTimeOffset? endOn, float? percentComplete, ResponseError error)
        {
            Id = id;
            Name = name;
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            PercentComplete = percentComplete;
            Error = error;
        }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// Serialized Name: OperationResult.id
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// The name of the resource
        /// Serialized Name: OperationResult.name
        /// </summary>
        public string Name { get; }
        /// <summary>
        /// The operation status
        /// Serialized Name: OperationResult.status
        /// </summary>
        public OperationStatus Status { get; }
        /// <summary>
        /// Start time
        /// Serialized Name: OperationResult.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// End time
        /// Serialized Name: OperationResult.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary>
        /// Percent completion
        /// Serialized Name: OperationResult.percentComplete
        /// </summary>
        public float? PercentComplete { get; }
        /// <summary>
        /// The error for a failure if the operation failed.
        /// Serialized Name: OperationResult.error
        /// </summary>
        public ResponseError Error { get; }
    }
}
