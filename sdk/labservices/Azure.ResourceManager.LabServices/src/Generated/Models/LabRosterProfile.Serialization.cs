// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.LabServices.Models
{
    public partial class LabRosterProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ActiveDirectoryGroupId))
            {
                writer.WritePropertyName("activeDirectoryGroupId"u8);
                writer.WriteStringValue(ActiveDirectoryGroupId);
            }
            if (Optional.IsDefined(LtiContextId))
            {
                writer.WritePropertyName("ltiContextId"u8);
                writer.WriteStringValue(LtiContextId);
            }
            if (Optional.IsDefined(LmsInstance))
            {
                writer.WritePropertyName("lmsInstance"u8);
                writer.WriteStringValue(LmsInstance.AbsoluteUri);
            }
            if (Optional.IsDefined(LtiClientId))
            {
                writer.WritePropertyName("ltiClientId"u8);
                writer.WriteStringValue(LtiClientId);
            }
            if (Optional.IsDefined(LtiRosterEndpoint))
            {
                writer.WritePropertyName("ltiRosterEndpoint"u8);
                writer.WriteStringValue(LtiRosterEndpoint.AbsoluteUri);
            }
            writer.WriteEndObject();
        }

        internal static LabRosterProfile DeserializeLabRosterProfile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> activeDirectoryGroupId = default;
            Optional<string> ltiContextId = default;
            Optional<Uri> lmsInstance = default;
            Optional<string> ltiClientId = default;
            Optional<Uri> ltiRosterEndpoint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("activeDirectoryGroupId"u8))
                {
                    activeDirectoryGroupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ltiContextId"u8))
                {
                    ltiContextId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lmsInstance"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lmsInstance = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ltiClientId"u8))
                {
                    ltiClientId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ltiRosterEndpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ltiRosterEndpoint = new Uri(property.Value.GetString());
                    continue;
                }
            }
            return new LabRosterProfile(activeDirectoryGroupId.Value, ltiContextId.Value, lmsInstance.Value, ltiClientId.Value, ltiRosterEndpoint.Value);
        }
    }
}
