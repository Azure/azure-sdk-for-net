// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A lab virtual machine resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VirtualMachine : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachine class.
        /// </summary>
        public VirtualMachine()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachine class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">System data of the Lab virtual
        /// machine.</param>
        /// <param name="provisioningState">Current provisioning state of the
        /// virtual machine. Possible values include: 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Locked'</param>
        /// <param name="state">The current state of the virtual machine.
        /// Possible values include: 'Stopped', 'Starting', 'Running',
        /// 'Stopping', 'ResettingPassword', 'Reimaging', 'Redeploying'</param>
        /// <param name="connectionProfile">Profile for information about
        /// connecting to the virtual machine.</param>
        /// <param name="claimedByUserId">The lab user ID (not the PUID!) of
        /// who claimed the virtual machine.</param>
        /// <param name="vmType">The type of this VM resource. Possible values
        /// include: 'User', 'Template'</param>
        public VirtualMachine(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), ProvisioningState? provisioningState = default(ProvisioningState?), VirtualMachineState? state = default(VirtualMachineState?), VirtualMachineConnectionProfile connectionProfile = default(VirtualMachineConnectionProfile), string claimedByUserId = default(string), VirtualMachineType? vmType = default(VirtualMachineType?))
            : base(id, name, type)
        {
            SystemData = systemData;
            ProvisioningState = provisioningState;
            State = state;
            ConnectionProfile = connectionProfile;
            ClaimedByUserId = claimedByUserId;
            VmType = vmType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets system data of the Lab virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Gets current provisioning state of the virtual machine. Possible
        /// values include: 'Creating', 'Updating', 'Deleting', 'Succeeded',
        /// 'Failed', 'Locked'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public ProvisioningState? ProvisioningState { get; private set; }

        /// <summary>
        /// Gets the current state of the virtual machine. Possible values
        /// include: 'Stopped', 'Starting', 'Running', 'Stopping',
        /// 'ResettingPassword', 'Reimaging', 'Redeploying'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public VirtualMachineState? State { get; private set; }

        /// <summary>
        /// Gets profile for information about connecting to the virtual
        /// machine.
        /// </summary>
        [JsonProperty(PropertyName = "properties.connectionProfile")]
        public VirtualMachineConnectionProfile ConnectionProfile { get; private set; }

        /// <summary>
        /// Gets the lab user ID (not the PUID!) of who claimed the virtual
        /// machine.
        /// </summary>
        [JsonProperty(PropertyName = "properties.claimedByUserId")]
        public string ClaimedByUserId { get; private set; }

        /// <summary>
        /// Gets the type of this VM resource. Possible values include: 'User',
        /// 'Template'
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmType")]
        public VirtualMachineType? VmType { get; private set; }

    }
}
