// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This represents the details about a lab that the User is in, and its
    /// state.
    /// </summary>
    public partial class LabDetails
    {
        /// <summary>
        /// Initializes a new instance of the LabDetails class.
        /// </summary>
        public LabDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LabDetails class.
        /// </summary>
        /// <param name="name">Name of the lab</param>
        /// <param name="provisioningState">The provisioning state of the
        /// lab.</param>
        /// <param name="id">The Id of the lab.</param>
        /// <param name="usageQuota">The maximum duration a user can use a VM
        /// in this lab.</param>
        public LabDetails(string name = default(string), string provisioningState = default(string), string id = default(string), System.TimeSpan? usageQuota = default(System.TimeSpan?))
        {
            Name = name;
            ProvisioningState = provisioningState;
            Id = id;
            UsageQuota = usageQuota;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the lab
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the lab.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the Id of the lab.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets the maximum duration a user can use a VM in this lab.
        /// </summary>
        [JsonProperty(PropertyName = "usageQuota")]
        public System.TimeSpan? UsageQuota { get; private set; }

    }
}
