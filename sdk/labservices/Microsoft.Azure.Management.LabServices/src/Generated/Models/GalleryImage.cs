// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an image from the Azure Marketplace
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class GalleryImage : Resource
    {
        /// <summary>
        /// Initializes a new instance of the GalleryImage class.
        /// </summary>
        public GalleryImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GalleryImage class.
        /// </summary>
        /// <param name="id">The identifier of the resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="location">The location of the resource.</param>
        /// <param name="tags">The tags of the resource.</param>
        /// <param name="author">The author of the gallery image.</param>
        /// <param name="createdDate">The creation date of the gallery
        /// image.</param>
        /// <param name="description">The description of the gallery
        /// image.</param>
        /// <param name="imageReference">The image reference of the gallery
        /// image.</param>
        /// <param name="icon">The icon of the gallery image.</param>
        /// <param name="isEnabled">Indicates whether this gallery image is
        /// enabled.</param>
        /// <param name="isOverride">Indicates whether this gallery has been
        /// overridden for this lab account</param>
        /// <param name="planId">The third party plan that applies to this
        /// image</param>
        /// <param name="isPlanAuthorized">Indicates if the plan has been
        /// authorized for programmatic deployment.</param>
        /// <param name="provisioningState">The provisioning status of the
        /// resource.</param>
        /// <param name="uniqueIdentifier">The unique immutable identifier of a
        /// resource (Guid).</param>
        /// <param name="latestOperationResult">The details of the latest
        /// operation. ex: status, error</param>
        public GalleryImage(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string author = default(string), System.DateTime? createdDate = default(System.DateTime?), string description = default(string), GalleryImageReference imageReference = default(GalleryImageReference), string icon = default(string), bool? isEnabled = default(bool?), bool? isOverride = default(bool?), string planId = default(string), bool? isPlanAuthorized = default(bool?), string provisioningState = default(string), string uniqueIdentifier = default(string), LatestOperationResult latestOperationResult = default(LatestOperationResult))
            : base(id, name, type, location, tags)
        {
            Author = author;
            CreatedDate = createdDate;
            Description = description;
            ImageReference = imageReference;
            Icon = icon;
            IsEnabled = isEnabled;
            IsOverride = isOverride;
            PlanId = planId;
            IsPlanAuthorized = isPlanAuthorized;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
            LatestOperationResult = latestOperationResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the author of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.author")]
        public string Author { get; private set; }

        /// <summary>
        /// Gets the creation date of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate { get; private set; }

        /// <summary>
        /// Gets the description of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets the image reference of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageReference")]
        public GalleryImageReference ImageReference { get; private set; }

        /// <summary>
        /// Gets the icon of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icon")]
        public string Icon { get; private set; }

        /// <summary>
        /// Gets or sets indicates whether this gallery image is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// Gets or sets indicates whether this gallery has been overridden for
        /// this lab account
        /// </summary>
        [JsonProperty(PropertyName = "properties.isOverride")]
        public bool? IsOverride { get; set; }

        /// <summary>
        /// Gets the third party plan that applies to this image
        /// </summary>
        [JsonProperty(PropertyName = "properties.planId")]
        public string PlanId { get; private set; }

        /// <summary>
        /// Gets or sets indicates if the plan has been authorized for
        /// programmatic deployment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isPlanAuthorized")]
        public bool? IsPlanAuthorized { get; set; }

        /// <summary>
        /// Gets or sets the provisioning status of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the unique immutable identifier of a resource (Guid).
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier { get; set; }

        /// <summary>
        /// Gets the details of the latest operation. ex: status, error
        /// </summary>
        [JsonProperty(PropertyName = "properties.latestOperationResult")]
        public LatestOperationResult LatestOperationResult { get; private set; }

    }
}
