// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for CreateOption.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CreateOption
    {
        /// <summary>
        /// An image is used to create all lab user virtual machines. When this
        /// option is set, no template VM will be created.
        /// </summary>
        [EnumMember(Value = "Image")]
        Image,
        /// <summary>
        /// A template VM will be used to create all lab user virtual machines.
        /// </summary>
        [EnumMember(Value = "TemplateVM")]
        TemplateVM
    }
    internal static class CreateOptionEnumExtension
    {
        internal static string ToSerializedValue(this CreateOption? value)
        {
            return value == null ? null : ((CreateOption)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this CreateOption value)
        {
            switch( value )
            {
                case CreateOption.Image:
                    return "Image";
                case CreateOption.TemplateVM:
                    return "TemplateVM";
            }
            return null;
        }

        internal static CreateOption? ParseCreateOption(this string value)
        {
            switch( value )
            {
                case "Image":
                    return CreateOption.Image;
                case "TemplateVM":
                    return CreateOption.TemplateVM;
            }
            return null;
        }
    }
}
