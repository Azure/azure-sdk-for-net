// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents resource specific settings
    /// </summary>
    public partial class ResourceSettingCreationParameters
    {
        /// <summary>
        /// Initializes a new instance of the ResourceSettingCreationParameters
        /// class.
        /// </summary>
        public ResourceSettingCreationParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceSettingCreationParameters
        /// class.
        /// </summary>
        /// <param name="galleryImageResourceId">The resource id of the gallery
        /// image used for creating the virtual machine</param>
        /// <param name="referenceVmCreationParameters">Creation parameters for
        /// Reference Vm</param>
        /// <param name="location">The location where the virtual machine will
        /// live</param>
        /// <param name="name">The name of the resource setting</param>
        /// <param name="size">The size of the virtual machine. Possible values
        /// include: 'Basic', 'Standard', 'Performance'</param>
        public ResourceSettingCreationParameters(string galleryImageResourceId, ReferenceVmCreationParameters referenceVmCreationParameters, string location = default(string), string name = default(string), string size = default(string))
        {
            Location = location;
            Name = name;
            GalleryImageResourceId = galleryImageResourceId;
            Size = size;
            ReferenceVmCreationParameters = referenceVmCreationParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the location where the virtual machine will live
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the name of the resource setting
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the resource id of the gallery image used for creating
        /// the virtual machine
        /// </summary>
        [JsonProperty(PropertyName = "galleryImageResourceId")]
        public string GalleryImageResourceId { get; set; }

        /// <summary>
        /// Gets or sets the size of the virtual machine. Possible values
        /// include: 'Basic', 'Standard', 'Performance'
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public string Size { get; set; }

        /// <summary>
        /// Gets or sets creation parameters for Reference Vm
        /// </summary>
        [JsonProperty(PropertyName = "referenceVmCreationParameters")]
        public ReferenceVmCreationParameters ReferenceVmCreationParameters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (GalleryImageResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GalleryImageResourceId");
            }
            if (ReferenceVmCreationParameters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ReferenceVmCreationParameters");
            }
            if (ReferenceVmCreationParameters != null)
            {
                ReferenceVmCreationParameters.Validate();
            }
        }
    }
}
