// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Network details of the environment
    /// </summary>
    public partial class NetworkInterface
    {
        /// <summary>
        /// Initializes a new instance of the NetworkInterface class.
        /// </summary>
        public NetworkInterface()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkInterface class.
        /// </summary>
        /// <param name="privateIpAddress">PrivateIp address of the Compute
        /// VM</param>
        /// <param name="sshAuthority">Connection information for Linux</param>
        /// <param name="rdpAuthority">Connection information for
        /// Windows</param>
        /// <param name="username">Username of the VM</param>
        public NetworkInterface(string privateIpAddress = default(string), string sshAuthority = default(string), string rdpAuthority = default(string), string username = default(string))
        {
            PrivateIpAddress = privateIpAddress;
            SshAuthority = sshAuthority;
            RdpAuthority = rdpAuthority;
            Username = username;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets privateIp address of the Compute VM
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIpAddress { get; private set; }

        /// <summary>
        /// Gets connection information for Linux
        /// </summary>
        [JsonProperty(PropertyName = "sshAuthority")]
        public string SshAuthority { get; private set; }

        /// <summary>
        /// Gets connection information for Windows
        /// </summary>
        [JsonProperty(PropertyName = "rdpAuthority")]
        public string RdpAuthority { get; private set; }

        /// <summary>
        /// Gets username of the VM
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; private set; }

    }
}
