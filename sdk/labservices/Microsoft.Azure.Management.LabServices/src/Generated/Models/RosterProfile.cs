// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The lab user list management profile.
    /// </summary>
    public partial class RosterProfile
    {
        /// <summary>
        /// Initializes a new instance of the RosterProfile class.
        /// </summary>
        public RosterProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RosterProfile class.
        /// </summary>
        /// <param name="activeDirectoryGroupId">The AAD group ID which this
        /// lab roster is populated from. Having this set enables AAD sync
        /// mode.</param>
        /// <param name="ltiContextId">The unique context identifier for the
        /// lab in the lms.</param>
        /// <param name="lmsInstance">The base URI identifying the lms
        /// instance.</param>
        /// <param name="ltiClientId">The unique id of the azure lab services
        /// tool in the lms.</param>
        /// <param name="ltiRosterEndpoint">The uri of the names and roles
        /// service endpoint on the lms for the class attached to this
        /// lab.</param>
        public RosterProfile(string activeDirectoryGroupId = default(string), string ltiContextId = default(string), string lmsInstance = default(string), string ltiClientId = default(string), string ltiRosterEndpoint = default(string))
        {
            ActiveDirectoryGroupId = activeDirectoryGroupId;
            LtiContextId = ltiContextId;
            LmsInstance = lmsInstance;
            LtiClientId = ltiClientId;
            LtiRosterEndpoint = ltiRosterEndpoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the AAD group ID which this lab roster is populated
        /// from. Having this set enables AAD sync mode.
        /// </summary>
        [JsonProperty(PropertyName = "activeDirectoryGroupId")]
        public string ActiveDirectoryGroupId { get; set; }

        /// <summary>
        /// Gets or sets the unique context identifier for the lab in the lms.
        /// </summary>
        [JsonProperty(PropertyName = "ltiContextId")]
        public string LtiContextId { get; set; }

        /// <summary>
        /// Gets or sets the base URI identifying the lms instance.
        /// </summary>
        [JsonProperty(PropertyName = "lmsInstance")]
        public string LmsInstance { get; set; }

        /// <summary>
        /// Gets or sets the unique id of the azure lab services tool in the
        /// lms.
        /// </summary>
        [JsonProperty(PropertyName = "ltiClientId")]
        public string LtiClientId { get; set; }

        /// <summary>
        /// Gets or sets the uri of the names and roles service endpoint on the
        /// lms for the class attached to this lab.
        /// </summary>
        [JsonProperty(PropertyName = "ltiRosterEndpoint")]
        public string LtiRosterEndpoint { get; set; }

    }
}
