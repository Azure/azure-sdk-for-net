// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents the size information
    /// </summary>
    public partial class SizeAvailability
    {
        /// <summary>
        /// Initializes a new instance of the SizeAvailability class.
        /// </summary>
        public SizeAvailability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SizeAvailability class.
        /// </summary>
        /// <param name="sizeCategory">The category of the size (Basic,
        /// Standard, Performance). Possible values include: 'Basic',
        /// 'Standard', 'Performance'</param>
        /// <param name="isAvailable">Whether or not this size category is
        /// available</param>
        public SizeAvailability(string sizeCategory = default(string), bool? isAvailable = default(bool?))
        {
            SizeCategory = sizeCategory;
            IsAvailable = isAvailable;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the category of the size (Basic, Standard,
        /// Performance). Possible values include: 'Basic', 'Standard',
        /// 'Performance'
        /// </summary>
        [JsonProperty(PropertyName = "sizeCategory")]
        public string SizeCategory { get; set; }

        /// <summary>
        /// Gets or sets whether or not this size category is available
        /// </summary>
        [JsonProperty(PropertyName = "isAvailable")]
        public bool? IsAvailable { get; set; }

    }
}
