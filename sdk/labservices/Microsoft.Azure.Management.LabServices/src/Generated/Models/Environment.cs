// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an environment instance
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Environment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Environment class.
        /// </summary>
        public Environment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Environment class.
        /// </summary>
        /// <param name="id">The identifier of the resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="location">The location of the resource.</param>
        /// <param name="tags">The tags of the resource.</param>
        /// <param name="resourceSets">The set of a VM and the setting id it
        /// was created for</param>
        /// <param name="claimedByUserObjectId">The AAD object Id of the user
        /// who has claimed the environment</param>
        /// <param name="claimedByUserPrincipalId">The user principal Id of the
        /// user who has claimed the environment</param>
        /// <param name="claimedByUserName">The name or email address of the
        /// user who has claimed the environment</param>
        /// <param name="isClaimed">Is the environment claimed or not</param>
        /// <param name="lastKnownPowerState">Last known power state of the
        /// environment</param>
        /// <param name="networkInterface">Network details of the
        /// environment</param>
        /// <param name="totalUsage">How long the environment has been used by
        /// a lab user</param>
        /// <param name="passwordLastReset">When the password was last reset on
        /// the environment.</param>
        /// <param name="provisioningState">The provisioning status of the
        /// resource.</param>
        /// <param name="uniqueIdentifier">The unique immutable identifier of a
        /// resource (Guid).</param>
        /// <param name="latestOperationResult">The details of the latest
        /// operation. ex: status, error</param>
        public Environment(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), ResourceSet resourceSets = default(ResourceSet), string claimedByUserObjectId = default(string), string claimedByUserPrincipalId = default(string), string claimedByUserName = default(string), bool? isClaimed = default(bool?), string lastKnownPowerState = default(string), NetworkInterface networkInterface = default(NetworkInterface), System.TimeSpan? totalUsage = default(System.TimeSpan?), System.DateTime? passwordLastReset = default(System.DateTime?), string provisioningState = default(string), string uniqueIdentifier = default(string), LatestOperationResult latestOperationResult = default(LatestOperationResult))
            : base(id, name, type, location, tags)
        {
            ResourceSets = resourceSets;
            ClaimedByUserObjectId = claimedByUserObjectId;
            ClaimedByUserPrincipalId = claimedByUserPrincipalId;
            ClaimedByUserName = claimedByUserName;
            IsClaimed = isClaimed;
            LastKnownPowerState = lastKnownPowerState;
            NetworkInterface = networkInterface;
            TotalUsage = totalUsage;
            PasswordLastReset = passwordLastReset;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
            LatestOperationResult = latestOperationResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the set of a VM and the setting id it was created for
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceSets")]
        public ResourceSet ResourceSets { get; set; }

        /// <summary>
        /// Gets the AAD object Id of the user who has claimed the environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.claimedByUserObjectId")]
        public string ClaimedByUserObjectId { get; private set; }

        /// <summary>
        /// Gets the user principal Id of the user who has claimed the
        /// environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.claimedByUserPrincipalId")]
        public string ClaimedByUserPrincipalId { get; private set; }

        /// <summary>
        /// Gets the name or email address of the user who has claimed the
        /// environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.claimedByUserName")]
        public string ClaimedByUserName { get; private set; }

        /// <summary>
        /// Gets is the environment claimed or not
        /// </summary>
        [JsonProperty(PropertyName = "properties.isClaimed")]
        public bool? IsClaimed { get; private set; }

        /// <summary>
        /// Gets last known power state of the environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastKnownPowerState")]
        public string LastKnownPowerState { get; private set; }

        /// <summary>
        /// Gets network details of the environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkInterface")]
        public NetworkInterface NetworkInterface { get; private set; }

        /// <summary>
        /// Gets how long the environment has been used by a lab user
        /// </summary>
        [JsonProperty(PropertyName = "properties.totalUsage")]
        public System.TimeSpan? TotalUsage { get; private set; }

        /// <summary>
        /// Gets when the password was last reset on the environment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.passwordLastReset")]
        public System.DateTime? PasswordLastReset { get; private set; }

        /// <summary>
        /// Gets or sets the provisioning status of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the unique immutable identifier of a resource (Guid).
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier { get; set; }

        /// <summary>
        /// Gets the details of the latest operation. ex: status, error
        /// </summary>
        [JsonProperty(PropertyName = "properties.latestOperationResult")]
        public LatestOperationResult LatestOperationResult { get; private set; }

    }
}
