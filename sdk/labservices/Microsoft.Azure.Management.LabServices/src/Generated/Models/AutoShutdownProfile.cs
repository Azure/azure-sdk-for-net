// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Profile for how to handle shutting down virtual machines.
    /// </summary>
    public partial class AutoShutdownProfile
    {
        /// <summary>
        /// Initializes a new instance of the AutoShutdownProfile class.
        /// </summary>
        public AutoShutdownProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoShutdownProfile class.
        /// </summary>
        /// <param name="shutdownOnDisconnect">Whether shutdown on disconnect
        /// is enabled. Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="shutdownWhenNotConnected">Whether a VM will get
        /// shutdown when it hasn't been connected to after a period of time.
        /// Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="shutdownOnIdle">Whether a VM will get shutdown when it
        /// has idled for a period of time. Possible values include: 'None',
        /// 'UserAbsence', 'LowUsage'</param>
        /// <param name="disconnectDelay">The amount of time a VM will stay
        /// running after a user disconnects if this behavior is
        /// enabled.</param>
        /// <param name="noConnectDelay">The amount of time a VM will stay
        /// running before it is shutdown if no connection is made and this
        /// behavior is enabled.</param>
        /// <param name="idleDelay">The amount of time a VM will idle before it
        /// is shutdown if this behavior is enabled.</param>
        public AutoShutdownProfile(EnableState? shutdownOnDisconnect = default(EnableState?), EnableState? shutdownWhenNotConnected = default(EnableState?), ShutdownOnIdleMode? shutdownOnIdle = default(ShutdownOnIdleMode?), System.TimeSpan? disconnectDelay = default(System.TimeSpan?), System.TimeSpan? noConnectDelay = default(System.TimeSpan?), System.TimeSpan? idleDelay = default(System.TimeSpan?))
        {
            ShutdownOnDisconnect = shutdownOnDisconnect;
            ShutdownWhenNotConnected = shutdownWhenNotConnected;
            ShutdownOnIdle = shutdownOnIdle;
            DisconnectDelay = disconnectDelay;
            NoConnectDelay = noConnectDelay;
            IdleDelay = idleDelay;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether shutdown on disconnect is enabled. Possible
        /// values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "shutdownOnDisconnect")]
        public EnableState? ShutdownOnDisconnect { get; set; }

        /// <summary>
        /// Gets or sets whether a VM will get shutdown when it hasn't been
        /// connected to after a period of time. Possible values include:
        /// 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "shutdownWhenNotConnected")]
        public EnableState? ShutdownWhenNotConnected { get; set; }

        /// <summary>
        /// Gets or sets whether a VM will get shutdown when it has idled for a
        /// period of time. Possible values include: 'None', 'UserAbsence',
        /// 'LowUsage'
        /// </summary>
        [JsonProperty(PropertyName = "shutdownOnIdle")]
        public ShutdownOnIdleMode? ShutdownOnIdle { get; set; }

        /// <summary>
        /// Gets or sets the amount of time a VM will stay running after a user
        /// disconnects if this behavior is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "disconnectDelay")]
        public System.TimeSpan? DisconnectDelay { get; set; }

        /// <summary>
        /// Gets or sets the amount of time a VM will stay running before it is
        /// shutdown if no connection is made and this behavior is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "noConnectDelay")]
        public System.TimeSpan? NoConnectDelay { get; set; }

        /// <summary>
        /// Gets or sets the amount of time a VM will idle before it is
        /// shutdown if this behavior is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "idleDelay")]
        public System.TimeSpan? IdleDelay { get; set; }

    }
}
