// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Details of the backing virtual machine.
    /// </summary>
    public partial class VirtualMachineDetails
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineDetails class.
        /// </summary>
        public VirtualMachineDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineDetails class.
        /// </summary>
        /// <param name="provisioningState">Provisioning state of the Dtl
        /// VM</param>
        /// <param name="rdpAuthority">Connection information for
        /// Windows</param>
        /// <param name="sshAuthority">Connection information for Linux</param>
        /// <param name="privateIpAddress">PrivateIp address of the compute
        /// VM</param>
        /// <param name="userName">Compute VM login user name</param>
        /// <param name="lastKnownPowerState">Last known compute power state
        /// captured in DTL</param>
        public VirtualMachineDetails(string provisioningState = default(string), string rdpAuthority = default(string), string sshAuthority = default(string), string privateIpAddress = default(string), string userName = default(string), string lastKnownPowerState = default(string))
        {
            ProvisioningState = provisioningState;
            RdpAuthority = rdpAuthority;
            SshAuthority = sshAuthority;
            PrivateIpAddress = privateIpAddress;
            UserName = userName;
            LastKnownPowerState = lastKnownPowerState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state of the Dtl VM
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets connection information for Windows
        /// </summary>
        [JsonProperty(PropertyName = "rdpAuthority")]
        public string RdpAuthority { get; private set; }

        /// <summary>
        /// Gets connection information for Linux
        /// </summary>
        [JsonProperty(PropertyName = "sshAuthority")]
        public string SshAuthority { get; private set; }

        /// <summary>
        /// Gets privateIp address of the compute VM
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIpAddress { get; private set; }

        /// <summary>
        /// Gets compute VM login user name
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; private set; }

        /// <summary>
        /// Gets last known compute power state captured in DTL
        /// </summary>
        [JsonProperty(PropertyName = "lastKnownPowerState")]
        public string LastKnownPowerState { get; private set; }

    }
}
