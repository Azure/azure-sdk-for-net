// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ContainerInstance.Models
{
    /// <summary> The container Http Get settings, for liveness or readiness probe. </summary>
    public partial class ContainerHttpGet
    {
        /// <summary> Initializes a new instance of <see cref="ContainerHttpGet"/>. </summary>
        /// <param name="port"> The port number to probe. </param>
        public ContainerHttpGet(int port)
        {
            Port = port;
            HttpHeaders = new ChangeTrackingList<ContainerHttpHeader>();
        }

        /// <summary> Initializes a new instance of <see cref="ContainerHttpGet"/>. </summary>
        /// <param name="path"> The path to probe. </param>
        /// <param name="port"> The port number to probe. </param>
        /// <param name="scheme"> The scheme. </param>
        /// <param name="httpHeaders"> The HTTP headers. </param>
        internal ContainerHttpGet(string path, int port, ContainerHttpGetScheme? scheme, IList<ContainerHttpHeader> httpHeaders)
        {
            Path = path;
            Port = port;
            Scheme = scheme;
            HttpHeaders = httpHeaders;
        }

        /// <summary> The path to probe. </summary>
        public string Path { get; set; }
        /// <summary> The port number to probe. </summary>
        public int Port { get; set; }
        /// <summary> The scheme. </summary>
        public ContainerHttpGetScheme? Scheme { get; set; }
        /// <summary> The HTTP headers. </summary>
        public IList<ContainerHttpHeader> HttpHeaders { get; }
    }
}
