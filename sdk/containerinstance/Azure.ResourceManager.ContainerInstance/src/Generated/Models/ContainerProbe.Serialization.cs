// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerInstance.Models
{
    public partial class ContainerProbe : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Exec))
            {
                writer.WritePropertyName("exec"u8);
                writer.WriteObjectValue(Exec);
            }
            if (Core.Optional.IsDefined(HttpGet))
            {
                writer.WritePropertyName("httpGet"u8);
                writer.WriteObjectValue(HttpGet);
            }
            if (Core.Optional.IsDefined(InitialDelayInSeconds))
            {
                writer.WritePropertyName("initialDelaySeconds"u8);
                writer.WriteNumberValue(InitialDelayInSeconds.Value);
            }
            if (Core.Optional.IsDefined(PeriodInSeconds))
            {
                writer.WritePropertyName("periodSeconds"u8);
                writer.WriteNumberValue(PeriodInSeconds.Value);
            }
            if (Core.Optional.IsDefined(FailureThreshold))
            {
                writer.WritePropertyName("failureThreshold"u8);
                writer.WriteNumberValue(FailureThreshold.Value);
            }
            if (Core.Optional.IsDefined(SuccessThreshold))
            {
                writer.WritePropertyName("successThreshold"u8);
                writer.WriteNumberValue(SuccessThreshold.Value);
            }
            if (Core.Optional.IsDefined(TimeoutInSeconds))
            {
                writer.WritePropertyName("timeoutSeconds"u8);
                writer.WriteNumberValue(TimeoutInSeconds.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerProbe DeserializeContainerProbe(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<ContainerExec> exec = default;
            Core.Optional<ContainerHttpGet> httpGet = default;
            Core.Optional<int> initialDelaySeconds = default;
            Core.Optional<int> periodSeconds = default;
            Core.Optional<int> failureThreshold = default;
            Core.Optional<int> successThreshold = default;
            Core.Optional<int> timeoutSeconds = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("exec"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    exec = ContainerExec.DeserializeContainerExec(property.Value);
                    continue;
                }
                if (property.NameEquals("httpGet"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    httpGet = ContainerHttpGet.DeserializeContainerHttpGet(property.Value);
                    continue;
                }
                if (property.NameEquals("initialDelaySeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    initialDelaySeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("periodSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    periodSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("failureThreshold"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    failureThreshold = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("successThreshold"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    successThreshold = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("timeoutSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timeoutSeconds = property.Value.GetInt32();
                    continue;
                }
            }
            return new ContainerProbe(exec.Value, httpGet.Value, Core.Optional.ToNullable(initialDelaySeconds), Core.Optional.ToNullable(periodSeconds), Core.Optional.ToNullable(failureThreshold), Core.Optional.ToNullable(successThreshold), Core.Optional.ToNullable(timeoutSeconds));
        }
    }
}
