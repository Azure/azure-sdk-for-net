// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.ContainerInstance.Models
{
    /// <summary> IP address for the container group. </summary>
    public partial class IPAddress
    {
        /// <summary> Initializes a new instance of IPAddress. </summary>
        /// <param name="ports"> The list of ports exposed on the container group. </param>
        /// <param name="containerGroupIPAddressType"> Specifies if the IP is exposed to the public internet or private VNET. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="ports"/> is null. </exception>
        public IPAddress(IEnumerable<Port> ports, ContainerGroupIPAddressType containerGroupIPAddressType)
        {
            if (ports == null)
            {
                throw new ArgumentNullException(nameof(ports));
            }

            Ports = ports.ToList();
            ContainerGroupIPAddressType = containerGroupIPAddressType;
        }

        /// <summary> Initializes a new instance of IPAddress. </summary>
        /// <param name="ports"> The list of ports exposed on the container group. </param>
        /// <param name="containerGroupIPAddressType"> Specifies if the IP is exposed to the public internet or private VNET. </param>
        /// <param name="ip"> The IP exposed to the public internet. </param>
        /// <param name="dnsNameLabel"> The Dns name label for the IP. </param>
        /// <param name="dnsNameLabelReusePolicy"> The value representing the security enum. </param>
        /// <param name="fqdn"> The FQDN for the IP. </param>
        internal IPAddress(IList<Port> ports, ContainerGroupIPAddressType containerGroupIPAddressType, string ip, string dnsNameLabel, AutoGeneratedDomainNameLabelScope? dnsNameLabelReusePolicy, string fqdn)
        {
            Ports = ports;
            ContainerGroupIPAddressType = containerGroupIPAddressType;
            IP = ip;
            DnsNameLabel = dnsNameLabel;
            DnsNameLabelReusePolicy = dnsNameLabelReusePolicy;
            Fqdn = fqdn;
        }

        /// <summary> The list of ports exposed on the container group. </summary>
        public IList<Port> Ports { get; }
        /// <summary> Specifies if the IP is exposed to the public internet or private VNET. </summary>
        public ContainerGroupIPAddressType ContainerGroupIPAddressType { get; set; }
        /// <summary> The IP exposed to the public internet. </summary>
        public string IP { get; set; }
        /// <summary> The Dns name label for the IP. </summary>
        public string DnsNameLabel { get; set; }
        /// <summary> The value representing the security enum. </summary>
        public AutoGeneratedDomainNameLabelScope? DnsNameLabelReusePolicy { get; set; }
        /// <summary> The FQDN for the IP. </summary>
        public string Fqdn { get; }
    }
}
