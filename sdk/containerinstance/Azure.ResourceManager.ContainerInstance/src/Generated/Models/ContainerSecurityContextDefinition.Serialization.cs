// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerInstance.Models
{
    public partial class ContainerSecurityContextDefinition : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IsPrivileged))
            {
                writer.WritePropertyName("privileged"u8);
                writer.WriteBooleanValue(IsPrivileged.Value);
            }
            if (Optional.IsDefined(AllowPrivilegeEscalation))
            {
                writer.WritePropertyName("allowPrivilegeEscalation"u8);
                writer.WriteBooleanValue(AllowPrivilegeEscalation.Value);
            }
            if (Optional.IsDefined(Capabilities))
            {
                writer.WritePropertyName("capabilities"u8);
                writer.WriteObjectValue(Capabilities);
            }
            if (Optional.IsDefined(RunAsGroup))
            {
                writer.WritePropertyName("runAsGroup"u8);
                writer.WriteNumberValue(RunAsGroup.Value);
            }
            if (Optional.IsDefined(RunAsUser))
            {
                writer.WritePropertyName("runAsUser"u8);
                writer.WriteNumberValue(RunAsUser.Value);
            }
            if (Optional.IsDefined(SeccompProfile))
            {
                writer.WritePropertyName("seccompProfile"u8);
                writer.WriteStringValue(SeccompProfile);
            }
            writer.WriteEndObject();
        }

        internal static ContainerSecurityContextDefinition DeserializeContainerSecurityContextDefinition(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> privileged = default;
            Optional<bool> allowPrivilegeEscalation = default;
            Optional<ContainerSecurityContextCapabilitiesDefinition> capabilities = default;
            Optional<int> runAsGroup = default;
            Optional<int> runAsUser = default;
            Optional<string> seccompProfile = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("privileged"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    privileged = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("allowPrivilegeEscalation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    allowPrivilegeEscalation = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("capabilities"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    capabilities = ContainerSecurityContextCapabilitiesDefinition.DeserializeContainerSecurityContextCapabilitiesDefinition(property.Value);
                    continue;
                }
                if (property.NameEquals("runAsGroup"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    runAsGroup = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("runAsUser"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    runAsUser = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("seccompProfile"u8))
                {
                    seccompProfile = property.Value.GetString();
                    continue;
                }
            }
            return new ContainerSecurityContextDefinition(Optional.ToNullable(privileged), Optional.ToNullable(allowPrivilegeEscalation), capabilities.Value, Optional.ToNullable(runAsGroup), Optional.ToNullable(runAsUser), seccompProfile.Value);
        }
    }
}
