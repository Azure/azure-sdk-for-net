// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The GPU resource.
    /// </summary>
    public partial class GpuResource
    {
        /// <summary>
        /// Initializes a new instance of the GpuResource class.
        /// </summary>
        public GpuResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GpuResource class.
        /// </summary>
        /// <param name="count">The count of the GPU resource.</param>
        /// <param name="sku">The SKU of the GPU resource. Possible values
        /// include: 'K80', 'P100', 'V100'</param>
        public GpuResource(int count, string sku)
        {
            Count = count;
            Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the count of the GPU resource.
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public int Count { get; set; }

        /// <summary>
        /// Gets or sets the SKU of the GPU resource. Possible values include:
        /// 'K80', 'P100', 'V100'
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sku");
            }
        }
    }
}
