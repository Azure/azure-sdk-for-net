// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of the Azure File volume. Azure File shares are mounted
    /// as volumes.
    /// </summary>
    public partial class AzureFileVolume
    {
        /// <summary>
        /// Initializes a new instance of the AzureFileVolume class.
        /// </summary>
        public AzureFileVolume()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureFileVolume class.
        /// </summary>
        /// <param name="shareName">The name of the Azure File share to be
        /// mounted as a volume.</param>
        /// <param name="storageAccountName">The name of the storage account
        /// that contains the Azure File share.</param>
        /// <param name="readOnlyProperty">The flag indicating whether the
        /// Azure File shared mounted as a volume is read-only.</param>
        /// <param name="storageAccountKey">The storage account access key used
        /// to access the Azure File share.</param>
        public AzureFileVolume(string shareName, string storageAccountName, bool? readOnlyProperty = default(bool?), string storageAccountKey = default(string))
        {
            ShareName = shareName;
            ReadOnlyProperty = readOnlyProperty;
            StorageAccountName = storageAccountName;
            StorageAccountKey = storageAccountKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the Azure File share to be mounted as a
        /// volume.
        /// </summary>
        [JsonProperty(PropertyName = "shareName")]
        public string ShareName { get; set; }

        /// <summary>
        /// Gets or sets the flag indicating whether the Azure File shared
        /// mounted as a volume is read-only.
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// Gets or sets the name of the storage account that contains the
        /// Azure File share.
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountName")]
        public string StorageAccountName { get; set; }

        /// <summary>
        /// Gets or sets the storage account access key used to access the
        /// Azure File share.
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountKey")]
        public string StorageAccountKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ShareName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ShareName");
            }
            if (StorageAccountName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StorageAccountName");
            }
        }
    }
}
