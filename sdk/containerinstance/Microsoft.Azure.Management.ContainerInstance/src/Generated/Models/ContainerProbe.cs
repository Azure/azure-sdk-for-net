// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerInstance.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The container probe, for liveness or readiness
    /// </summary>
    public partial class ContainerProbe
    {
        /// <summary>
        /// Initializes a new instance of the ContainerProbe class.
        /// </summary>
        public ContainerProbe()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerProbe class.
        /// </summary>
        /// <param name="exec">The execution command to probe</param>
        /// <param name="httpGet">The Http Get settings to probe</param>
        /// <param name="initialDelaySeconds">The initial delay
        /// seconds.</param>
        /// <param name="periodSeconds">The period seconds.</param>
        /// <param name="failureThreshold">The failure threshold.</param>
        /// <param name="successThreshold">The success threshold.</param>
        /// <param name="timeoutSeconds">The timeout seconds.</param>
        public ContainerProbe(ContainerExec exec = default(ContainerExec), ContainerHttpGet httpGet = default(ContainerHttpGet), int? initialDelaySeconds = default(int?), int? periodSeconds = default(int?), int? failureThreshold = default(int?), int? successThreshold = default(int?), int? timeoutSeconds = default(int?))
        {
            Exec = exec;
            HttpGet = httpGet;
            InitialDelaySeconds = initialDelaySeconds;
            PeriodSeconds = periodSeconds;
            FailureThreshold = failureThreshold;
            SuccessThreshold = successThreshold;
            TimeoutSeconds = timeoutSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the execution command to probe
        /// </summary>
        [JsonProperty(PropertyName = "exec")]
        public ContainerExec Exec { get; set; }

        /// <summary>
        /// Gets or sets the Http Get settings to probe
        /// </summary>
        [JsonProperty(PropertyName = "httpGet")]
        public ContainerHttpGet HttpGet { get; set; }

        /// <summary>
        /// Gets or sets the initial delay seconds.
        /// </summary>
        [JsonProperty(PropertyName = "initialDelaySeconds")]
        public int? InitialDelaySeconds { get; set; }

        /// <summary>
        /// Gets or sets the period seconds.
        /// </summary>
        [JsonProperty(PropertyName = "periodSeconds")]
        public int? PeriodSeconds { get; set; }

        /// <summary>
        /// Gets or sets the failure threshold.
        /// </summary>
        [JsonProperty(PropertyName = "failureThreshold")]
        public int? FailureThreshold { get; set; }

        /// <summary>
        /// Gets or sets the success threshold.
        /// </summary>
        [JsonProperty(PropertyName = "successThreshold")]
        public int? SuccessThreshold { get; set; }

        /// <summary>
        /// Gets or sets the timeout seconds.
        /// </summary>
        [JsonProperty(PropertyName = "timeoutSeconds")]
        public int? TimeoutSeconds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (HttpGet != null)
            {
                HttpGet.Validate();
            }
        }
    }
}
