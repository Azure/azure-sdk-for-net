// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerInstance.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Extension sidecars to be added to the deployment.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DeploymentExtensionSpec
    {
        /// <summary>
        /// Initializes a new instance of the DeploymentExtensionSpec class.
        /// </summary>
        public DeploymentExtensionSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeploymentExtensionSpec class.
        /// </summary>
        /// <param name="name">Name of the extension.</param>
        /// <param name="extensionType">Type of extension to be added.</param>
        /// <param name="version">Version of the extension being used.</param>
        /// <param name="settings">Settings for the extension.</param>
        /// <param name="protectedSettings">Protected settings for the
        /// extension.</param>
        public DeploymentExtensionSpec(string name, string extensionType, string version, object settings = default(object), object protectedSettings = default(object))
        {
            Name = name;
            ExtensionType = extensionType;
            Version = version;
            Settings = settings;
            ProtectedSettings = protectedSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the extension.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets type of extension to be added.
        /// </summary>
        [JsonProperty(PropertyName = "properties.extensionType")]
        public string ExtensionType { get; set; }

        /// <summary>
        /// Gets or sets version of the extension being used.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets settings for the extension.
        /// </summary>
        [JsonProperty(PropertyName = "properties.settings")]
        public object Settings { get; set; }

        /// <summary>
        /// Gets or sets protected settings for the extension.
        /// </summary>
        [JsonProperty(PropertyName = "properties.protectedSettings")]
        public object ProtectedSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (ExtensionType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExtensionType");
            }
            if (Version == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Version");
            }
        }
    }
}
