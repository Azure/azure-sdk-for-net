<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSignRootCertificateAsync(string,string,CancellationToken)">
<example>
This sample shows how to call GetSignRootCertificateAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var result = await client.GetSignRootCertificateAsync("<codeSigningAccountName>", "<certificateProfileName>");
]]></code>
</example>
    </member>
    <member name="GetSignRootCertificate(string,string,CancellationToken)">
<example>
This sample shows how to call GetSignRootCertificate with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var result = client.GetSignRootCertificate("<codeSigningAccountName>", "<certificateProfileName>");
]]></code>
</example>
    </member>
    <member name="GetSignRootCertificateAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetSignRootCertificateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

Response response = await client.GetSignRootCertificateAsync("<codeSigningAccountName>", "<certificateProfileName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetSignRootCertificate(string,string,RequestContext)">
<example>
This sample shows how to call GetSignRootCertificate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

Response response = client.GetSignRootCertificate("<codeSigningAccountName>", "<certificateProfileName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetSignEkusAsync(string,string,CancellationToken)">
<example>
This sample shows how to call GetSignEkusAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

await foreach (var item in client.GetSignEkusAsync("<codeSigningAccountName>", "<certificateProfileName>"))
{
}
]]></code>
</example>
    </member>
    <member name="GetSignEkus(string,string,CancellationToken)">
<example>
This sample shows how to call GetSignEkus with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

foreach (var item in client.GetSignEkus("<codeSigningAccountName>", "<certificateProfileName>"))
{
}
]]></code>
</example>
    </member>
    <member name="GetSignEkusAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetSignEkusAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

await foreach (var item in client.GetSignEkusAsync("<codeSigningAccountName>", "<certificateProfileName>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("ekus")[0].ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSignEkus(string,string,RequestContext)">
<example>
This sample shows how to call GetSignEkus with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

foreach (var item in client.GetSignEkus("<codeSigningAccountName>", "<certificateProfileName>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("ekus")[0].ToString());
}
]]></code>
</example>
    </member>
    <member name="SignAsync(WaitUntil,string,string,CodeSigningSubmissionOptions,CancellationToken)">
<example>
This sample shows how to call SignAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var codeSigningSubmissionOptions = new CodeSigningSubmissionOptions(SignatureAlgorithm.RS256, BinaryData.FromString("<your binary data content>"))
{
    FileHashList = 
{
        BinaryData.FromString("<your binary data content>")
    },
    AuthenticodeHashList = 
{
        BinaryData.FromString("<your binary data content>")
    },
};
var operation = await client.SignAsync(WaitUntil.Completed, "<codeSigningAccountName>", "<certificateProfileName>", codeSigningSubmissionOptions);
]]></code>
</example>
    </member>
    <member name="Sign(WaitUntil,string,string,CodeSigningSubmissionOptions,CancellationToken)">
<example>
This sample shows how to call Sign with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var codeSigningSubmissionOptions = new CodeSigningSubmissionOptions(SignatureAlgorithm.RS256, BinaryData.FromString("<your binary data content>"))
{
    FileHashList = 
{
        BinaryData.FromString("<your binary data content>")
    },
    AuthenticodeHashList = 
{
        BinaryData.FromString("<your binary data content>")
    },
};
var operation = client.Sign(WaitUntil.Completed, "<codeSigningAccountName>", "<certificateProfileName>", codeSigningSubmissionOptions);
]]></code>
</example>
    </member>
    <member name="SignAsync(WaitUntil,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call SignAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var data = new {
    signatureAlgorithm = "RS256",
    digest = new {},
};

var operation = await client.SignAsync(WaitUntil.Completed, "<codeSigningAccountName>", "<certificateProfileName>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call SignAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var data = new {
    signatureAlgorithm = "RS256",
    digest = new {},
    fileHashList = new[] {
        new {}
    },
    authenticodeHashList = new[] {
        new {}
    },
};

var operation = await client.SignAsync(WaitUntil.Completed, "<codeSigningAccountName>", "<certificateProfileName>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("signResult").GetProperty("operationId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("signResult").GetProperty("signature").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("signResult").GetProperty("signingCertificate").ToString());
]]></code>
</example>
    </member>
    <member name="Sign(WaitUntil,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Sign with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var data = new {
    signatureAlgorithm = "RS256",
    digest = new {},
};

var operation = client.Sign(WaitUntil.Completed, "<codeSigningAccountName>", "<certificateProfileName>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call Sign with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new CodeSigningClient("<region>", credential);

var data = new {
    signatureAlgorithm = "RS256",
    digest = new {},
    fileHashList = new[] {
        new {}
    },
    authenticodeHashList = new[] {
        new {}
    },
};

var operation = client.Sign(WaitUntil.Completed, "<codeSigningAccountName>", "<certificateProfileName>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("signResult").GetProperty("operationId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("signResult").GetProperty("signature").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("signResult").GetProperty("signingCertificate").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>