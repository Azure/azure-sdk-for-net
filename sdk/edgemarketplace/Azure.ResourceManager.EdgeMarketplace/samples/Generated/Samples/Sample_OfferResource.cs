// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.EdgeMarketplace;
using Azure.ResourceManager.EdgeMarketplace.Models;

namespace Azure.ResourceManager.EdgeMarketplace.Samples
{
    public partial class Sample_OfferResource
    {
        // Get offer
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetOffer()
        {
            // Generated from example definition: specification/edgemarketplace/resource-manager/Microsoft.EdgeMarketplace/stable/2023-08-01/examples/GetOffer.json
            // this example is just showing the usage of "Offers_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OfferResource created on azure
            // for more information of creating OfferResource, please refer to the document of OfferResource
            string resourceUri = "subscriptions/4bed37fd-19a1-4d31-8b44-40267555bec5/resourceGroups/edgemarketplace-rg/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/edgemarketplace-demo";
            string offerId = "0001-com-ubuntu-pro-jammy";
            ResourceIdentifier offerResourceId = OfferResource.CreateResourceIdentifier(resourceUri, offerId);
            OfferResource offer = client.GetOfferResource(offerResourceId);

            // invoke the operation
            OfferResource result = await offer.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OfferData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Generate AccessToken
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GenerateAccessToken_GenerateAccessToken()
        {
            // Generated from example definition: specification/edgemarketplace/resource-manager/Microsoft.EdgeMarketplace/stable/2023-08-01/examples/GenerateAccessToken.json
            // this example is just showing the usage of "Offers_GenerateAccessToken" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OfferResource created on azure
            // for more information of creating OfferResource, please refer to the document of OfferResource
            string resourceUri = "subscriptions/4bed37fd-19a1-4d31-8b44-40267555bec5/resourceGroups/edgemarketplace-rg/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/edgemarketplace-demo";
            string offerId = "0001-com-ubuntu-pro-jammy";
            ResourceIdentifier offerResourceId = OfferResource.CreateResourceIdentifier(resourceUri, offerId);
            OfferResource offer = client.GetOfferResource(offerResourceId);

            // invoke the operation
            AccessTokenContent content = new AccessTokenContent("EastUS2Euap")
            {
                PublisherName = "ubuntu",
                EgeMarketPlaceResourceId = "testid",
                HypervGeneration = "V2",
                MarketPlaceSku = "2022-datacenter-azure-edition-core",
                MarketPlaceSkuVersion = "20348.1129.221007",
                DeviceSku = "edge",
                DeviceVersion = "1.0.18062.1",
            };
            ArmOperation<DiskAccessToken> lro = await offer.GenerateAccessTokenAsync(WaitUntil.Completed, content);
            DiskAccessToken result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        // Get AccessToken
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAccessToken_GetAccessToken()
        {
            // Generated from example definition: specification/edgemarketplace/resource-manager/Microsoft.EdgeMarketplace/stable/2023-08-01/examples/GetAccessToken.json
            // this example is just showing the usage of "Offers_GetAccessToken" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OfferResource created on azure
            // for more information of creating OfferResource, please refer to the document of OfferResource
            string resourceUri = "subscriptions/4bed37fd-19a1-4d31-8b44-40267555bec5/resourceGroups/edgemarketplace-rg/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/edgemarketplace-demo";
            string offerId = "0001-com-ubuntu-pro-jammy";
            ResourceIdentifier offerResourceId = OfferResource.CreateResourceIdentifier(resourceUri, offerId);
            OfferResource offer = client.GetOfferResource(offerResourceId);

            // invoke the operation
            AccessTokenReadContent content = new AccessTokenReadContent("1.0.18062.1");
            DiskAccessToken result = await offer.GetAccessTokenAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
