// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeMarketplace.Models
{
    public partial class OfferContent
    {
        internal static OfferContent DeserializeOfferContent(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string displayName = default;
            Optional<string> summary = default;
            Optional<string> longSummary = default;
            Optional<string> description = default;
            string offerId = default;
            Optional<string> offerType = default;
            Optional<Uri> supportUri = default;
            Optional<int> popularity = default;
            Optional<OfferPublisher> offerPublisher = default;
            Optional<OfferAvailability> availability = default;
            Optional<OfferReleaseType> releaseType = default;
            Optional<IconFileUris> iconFileUris = default;
            Optional<TermsAndConditions> termsAndConditions = default;
            Optional<IReadOnlyList<string>> categoryIds = default;
            Optional<IReadOnlyList<string>> operatingSystems = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("summary"u8))
                {
                    summary = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("longSummary"u8))
                {
                    longSummary = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offerId"u8))
                {
                    offerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offerType"u8))
                {
                    offerType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("supportUri"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    supportUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("popularity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    popularity = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("offerPublisher"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    offerPublisher = OfferPublisher.DeserializeOfferPublisher(property.Value);
                    continue;
                }
                if (property.NameEquals("availability"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    availability = new OfferAvailability(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("releaseType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    releaseType = new OfferReleaseType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("iconFileUris"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    iconFileUris = IconFileUris.DeserializeIconFileUris(property.Value);
                    continue;
                }
                if (property.NameEquals("termsAndConditions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    termsAndConditions = TermsAndConditions.DeserializeTermsAndConditions(property.Value);
                    continue;
                }
                if (property.NameEquals("categoryIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    categoryIds = array;
                    continue;
                }
                if (property.NameEquals("operatingSystems"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    operatingSystems = array;
                    continue;
                }
            }
            return new OfferContent(displayName, summary.Value, longSummary.Value, description.Value, offerId, offerType.Value, supportUri.Value, Optional.ToNullable(popularity), offerPublisher.Value, Optional.ToNullable(availability), Optional.ToNullable(releaseType), iconFileUris.Value, termsAndConditions.Value, Optional.ToList(categoryIds), Optional.ToList(operatingSystems));
        }
    }
}
