// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.StorageActions;

namespace Azure.ResourceManager.StorageActions.Models
{
    /// <summary> Parameters of the storage task update request. </summary>
    public partial class StorageTaskPatch
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StorageTaskPatch"/>. </summary>
        public StorageTaskPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="StorageTaskPatch"/>. </summary>
        /// <param name="identity"> The identity of the resource. </param>
        /// <param name="tags"> Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. </param>
        /// <param name="properties"> Properties of the storage task. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StorageTaskPatch(ManagedServiceIdentity identity, IDictionary<string, string> tags, StorageTaskUpdateProperties properties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Identity = identity;
            Tags = tags;
            Properties = properties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The identity of the resource. </summary>
        public ManagedServiceIdentity Identity { get; set; }

        /// <summary> Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. </summary>
        public IDictionary<string, string> Tags { get; }

        /// <summary> Properties of the storage task. </summary>
        public StorageTaskUpdateProperties Properties { get; set; }
    }
}
