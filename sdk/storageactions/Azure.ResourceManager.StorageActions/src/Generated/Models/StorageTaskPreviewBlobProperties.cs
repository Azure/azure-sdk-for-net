// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.StorageActions;

namespace Azure.ResourceManager.StorageActions.Models
{
    /// <summary> Storage task preview container properties. </summary>
    public partial class StorageTaskPreviewBlobProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StorageTaskPreviewBlobProperties"/>. </summary>
        public StorageTaskPreviewBlobProperties()
        {
            Properties = new ChangeTrackingList<StorageTaskPreviewKeyValueProperties>();
            Metadata = new ChangeTrackingList<StorageTaskPreviewKeyValueProperties>();
            Tags = new ChangeTrackingList<StorageTaskPreviewKeyValueProperties>();
        }

        /// <summary> Initializes a new instance of <see cref="StorageTaskPreviewBlobProperties"/>. </summary>
        /// <param name="name"> Name of test blob. </param>
        /// <param name="properties"> properties key value pairs to be tested for a match against the provided condition. </param>
        /// <param name="metadata"> metadata key value pairs to be tested for a match against the provided condition. </param>
        /// <param name="tags"> tags key value pairs to be tested for a match against the provided condition. </param>
        /// <param name="matchedBlock"> Represents the condition block name that matched blob properties. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StorageTaskPreviewBlobProperties(string name, IList<StorageTaskPreviewKeyValueProperties> properties, IList<StorageTaskPreviewKeyValueProperties> metadata, IList<StorageTaskPreviewKeyValueProperties> tags, MatchedBlockName? matchedBlock, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Properties = properties;
            Metadata = metadata;
            Tags = tags;
            MatchedBlock = matchedBlock;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of test blob. </summary>
        public string Name { get; set; }

        /// <summary> properties key value pairs to be tested for a match against the provided condition. </summary>
        public IList<StorageTaskPreviewKeyValueProperties> Properties { get; }

        /// <summary> metadata key value pairs to be tested for a match against the provided condition. </summary>
        public IList<StorageTaskPreviewKeyValueProperties> Metadata { get; }

        /// <summary> tags key value pairs to be tested for a match against the provided condition. </summary>
        public IList<StorageTaskPreviewKeyValueProperties> Tags { get; }

        /// <summary> Represents the condition block name that matched blob properties. </summary>
        public MatchedBlockName? MatchedBlock { get; }
    }
}
