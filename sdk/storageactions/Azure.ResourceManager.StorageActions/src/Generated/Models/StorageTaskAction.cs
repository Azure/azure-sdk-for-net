// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.StorageActions;

namespace Azure.ResourceManager.StorageActions.Models
{
    /// <summary> The storage task action represents conditional statements and operations to be performed on target objects. </summary>
    public partial class StorageTaskAction
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StorageTaskAction"/>. </summary>
        /// <param name="if"> The if block of storage task operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="if"/> is null. </exception>
        public StorageTaskAction(StorageTaskIfCondition @if)
        {
            Argument.AssertNotNull(@if, nameof(@if));

            If = @if;
        }

        /// <summary> Initializes a new instance of <see cref="StorageTaskAction"/>. </summary>
        /// <param name="if"> The if block of storage task operation. </param>
        /// <param name="else"> The else block of storage task operation. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StorageTaskAction(StorageTaskIfCondition @if, StorageTaskElseCondition @else, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            If = @if;
            Else = @else;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The if block of storage task operation. </summary>
        public StorageTaskIfCondition If { get; set; }

        /// <summary> The else block of storage task operation. </summary>
        internal StorageTaskElseCondition Else { get; set; }

        /// <summary> List of operations to execute in the else block. </summary>
        public IList<StorageTaskOperationInfo> ElseOperations
        {
            get
            {
                return Else is null ? default : Else.Operations;
            }
            set
            {
                Else = new StorageTaskElseCondition(value);
            }
        }
    }
}
