// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.StorageActions;

namespace Azure.ResourceManager.StorageActions.Models
{
    /// <summary> Represents an operation to be performed on the object. </summary>
    public partial class StorageTaskOperationInfo
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StorageTaskOperationInfo"/>. </summary>
        /// <param name="name"> The operation to be performed on the object. </param>
        public StorageTaskOperationInfo(StorageTaskOperationName name)
        {
            Name = name;
            Parameters = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="StorageTaskOperationInfo"/>. </summary>
        /// <param name="name"> The operation to be performed on the object. </param>
        /// <param name="parameters"> Key-value parameters for the operation. </param>
        /// <param name="onSuccess"> Action to be taken when the operation is successful for a object. </param>
        /// <param name="onFailure"> Action to be taken when the operation fails for a object. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StorageTaskOperationInfo(StorageTaskOperationName name, IDictionary<string, string> parameters, OnSuccessAction? onSuccess, OnFailureAction? onFailure, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Parameters = parameters;
            OnSuccess = onSuccess;
            OnFailure = onFailure;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The operation to be performed on the object. </summary>
        public StorageTaskOperationName Name { get; set; }

        /// <summary> Key-value parameters for the operation. </summary>
        public IDictionary<string, string> Parameters { get; }

        /// <summary> Action to be taken when the operation is successful for a object. </summary>
        public OnSuccessAction? OnSuccess { get; set; }

        /// <summary> Action to be taken when the operation fails for a object. </summary>
        public OnFailureAction? OnFailure { get; set; }
    }
}
