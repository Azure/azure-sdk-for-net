// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Storageactions.Models
{
    /// <summary> Storage Task Preview Action. </summary>
    public partial class StorageTaskPreviewAction
    {
        /// <summary> Initializes a new instance of StorageTaskPreviewAction. </summary>
        /// <param name="container"> Preview action container properties to be tested for a match with the provided condition. </param>
        /// <param name="blobs"> Preview action container properties to be tested for a match with the provided condition. </param>
        /// <param name="action"> Preview action container properties to be tested for a match with the provided condition. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="container"/>, <paramref name="blobs"/> or <paramref name="action"/> is null. </exception>
        public StorageTaskPreviewAction(StorageTaskPreviewContainerProperties container, IEnumerable<StorageTaskPreviewBlobProperties> blobs, StorageTaskPreviewActionCondition action)
        {
            Argument.AssertNotNull(container, nameof(container));
            Argument.AssertNotNull(blobs, nameof(blobs));
            Argument.AssertNotNull(action, nameof(action));

            Container = container;
            Blobs = blobs.ToList();
            Action = action;
        }

        /// <summary> Initializes a new instance of StorageTaskPreviewAction. </summary>
        /// <param name="container"> Preview action container properties to be tested for a match with the provided condition. </param>
        /// <param name="blobs"> Preview action container properties to be tested for a match with the provided condition. </param>
        /// <param name="action"> Preview action container properties to be tested for a match with the provided condition. </param>
        internal StorageTaskPreviewAction(StorageTaskPreviewContainerProperties container, IList<StorageTaskPreviewBlobProperties> blobs, StorageTaskPreviewActionCondition action)
        {
            Container = container;
            Blobs = blobs;
            Action = action;
        }

        /// <summary> Preview action container properties to be tested for a match with the provided condition. </summary>
        public StorageTaskPreviewContainerProperties Container { get; set; }
        /// <summary> Preview action container properties to be tested for a match with the provided condition. </summary>
        public IList<StorageTaskPreviewBlobProperties> Blobs { get; }
        /// <summary> Preview action container properties to be tested for a match with the provided condition. </summary>
        public StorageTaskPreviewActionCondition Action { get; set; }
    }
}
