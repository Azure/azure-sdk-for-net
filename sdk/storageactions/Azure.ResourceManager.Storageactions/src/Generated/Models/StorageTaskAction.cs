// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Storageactions.Models
{
    /// <summary> The storage task action represents conditional statements and operations to be performed on target objects. </summary>
    public partial class StorageTaskAction
    {
        /// <summary> Initializes a new instance of StorageTaskAction. </summary>
        /// <param name="if"> The if block of storage task operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="if"/> is null. </exception>
        public StorageTaskAction(IfCondition @if)
        {
            Argument.AssertNotNull(@if, nameof(@if));

            If = @if;
        }

        /// <summary> Initializes a new instance of StorageTaskAction. </summary>
        /// <param name="if"> The if block of storage task operation. </param>
        /// <param name="else"> The else block of storage task operation. </param>
        internal StorageTaskAction(IfCondition @if, ElseCondition @else)
        {
            If = @if;
            Else = @else;
        }

        /// <summary> The if block of storage task operation. </summary>
        public IfCondition If { get; set; }
        /// <summary> The else block of storage task operation. </summary>
        internal ElseCondition Else { get; set; }
        /// <summary> List of operations to execute in the else block. </summary>
        public IList<StorageTaskOperation> ElseOperations
        {
            get => Else is null ? default : Else.Operations;
            set => Else = new ElseCondition(value);
        }
    }
}
