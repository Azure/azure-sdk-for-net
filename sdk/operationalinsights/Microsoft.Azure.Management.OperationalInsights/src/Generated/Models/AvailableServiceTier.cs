// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Service Tier details.
    /// </summary>
    public partial class AvailableServiceTier
    {
        /// <summary>
        /// Initializes a new instance of the AvailableServiceTier class.
        /// </summary>
        public AvailableServiceTier()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailableServiceTier class.
        /// </summary>
        /// <param name="serviceTier">The name of the Service Tier. Possible
        /// values include: 'Free', 'Standard', 'Premium', 'PerNode',
        /// 'PerGB2018', 'Standalone', 'CapacityReservation'</param>
        /// <param name="enabled">True if the Service Tier is enabled for the
        /// workspace.</param>
        /// <param name="minimumRetention">The minimum retention for the
        /// Service Tier, in days.</param>
        /// <param name="maximumRetention">The maximum retention for the
        /// Service Tier, in days.</param>
        /// <param name="defaultRetention">The default retention for the
        /// Service Tier, in days.</param>
        /// <param name="capacityReservationLevel">The capacity reservation
        /// level in GB per day. Returned for the Capacity Reservation Service
        /// Tier.</param>
        /// <param name="lastSkuUpdate">Time when the sku was last updated for
        /// the workspace. Returned for the Capacity Reservation Service
        /// Tier.</param>
        public AvailableServiceTier(string serviceTier = default(string), bool? enabled = default(bool?), long? minimumRetention = default(long?), long? maximumRetention = default(long?), long? defaultRetention = default(long?), long? capacityReservationLevel = default(long?), string lastSkuUpdate = default(string))
        {
            ServiceTier = serviceTier;
            Enabled = enabled;
            MinimumRetention = minimumRetention;
            MaximumRetention = maximumRetention;
            DefaultRetention = defaultRetention;
            CapacityReservationLevel = capacityReservationLevel;
            LastSkuUpdate = lastSkuUpdate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the Service Tier. Possible values include: 'Free',
        /// 'Standard', 'Premium', 'PerNode', 'PerGB2018', 'Standalone',
        /// 'CapacityReservation'
        /// </summary>
        [JsonProperty(PropertyName = "serviceTier")]
        public string ServiceTier { get; private set; }

        /// <summary>
        /// Gets true if the Service Tier is enabled for the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; private set; }

        /// <summary>
        /// Gets the minimum retention for the Service Tier, in days.
        /// </summary>
        [JsonProperty(PropertyName = "minimumRetention")]
        public long? MinimumRetention { get; private set; }

        /// <summary>
        /// Gets the maximum retention for the Service Tier, in days.
        /// </summary>
        [JsonProperty(PropertyName = "maximumRetention")]
        public long? MaximumRetention { get; private set; }

        /// <summary>
        /// Gets the default retention for the Service Tier, in days.
        /// </summary>
        [JsonProperty(PropertyName = "defaultRetention")]
        public long? DefaultRetention { get; private set; }

        /// <summary>
        /// Gets the capacity reservation level in GB per day. Returned for the
        /// Capacity Reservation Service Tier.
        /// </summary>
        [JsonProperty(PropertyName = "capacityReservationLevel")]
        public long? CapacityReservationLevel { get; private set; }

        /// <summary>
        /// Gets time when the sku was last updated for the workspace. Returned
        /// for the Capacity Reservation Service Tier.
        /// </summary>
        [JsonProperty(PropertyName = "lastSkuUpdate")]
        public string LastSkuUpdate { get; private set; }

    }
}
