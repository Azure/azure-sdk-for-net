// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The top level Log Analytics cluster resource container.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Cluster : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the Cluster class.
        /// </summary>
        public Cluster()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Cluster class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="identity">The identity of the resource.</param>
        /// <param name="sku">The sku properties.</param>
        /// <param name="nextLink">The link used to get the next page of
        /// recommendations.</param>
        /// <param name="clusterId">The ID associated with the cluster.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// cluster. Possible values include: 'Creating', 'Succeeded',
        /// 'Failed', 'Canceled', 'Deleting', 'ProvisioningAccount',
        /// 'Updating'</param>
        /// <param name="keyVaultProperties">The associated key
        /// properties.</param>
        public Cluster(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Identity identity = default(Identity), ClusterSku sku = default(ClusterSku), string nextLink = default(string), string clusterId = default(string), string provisioningState = default(string), KeyVaultProperties keyVaultProperties = default(KeyVaultProperties))
            : base(location, id, name, type, tags)
        {
            Identity = identity;
            Sku = sku;
            NextLink = nextLink;
            ClusterId = clusterId;
            ProvisioningState = provisioningState;
            KeyVaultProperties = keyVaultProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identity of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }

        /// <summary>
        /// Gets or sets the sku properties.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public ClusterSku Sku { get; set; }

        /// <summary>
        /// Gets or sets the link used to get the next page of recommendations.
        /// </summary>
        [JsonProperty(PropertyName = "properties.nextLink")]
        public string NextLink { get; set; }

        /// <summary>
        /// Gets the ID associated with the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "properties.clusterId")]
        public string ClusterId { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the cluster. Possible values
        /// include: 'Creating', 'Succeeded', 'Failed', 'Canceled', 'Deleting',
        /// 'ProvisioningAccount', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the associated key properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyVaultProperties")]
        public KeyVaultProperties KeyVaultProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Identity != null)
            {
                Identity.Validate();
            }
        }
    }
}
