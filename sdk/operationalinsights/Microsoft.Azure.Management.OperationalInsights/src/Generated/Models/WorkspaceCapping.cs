// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The daily volume cap for ingestion.
    /// </summary>
    public partial class WorkspaceCapping
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceCapping class.
        /// </summary>
        public WorkspaceCapping()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceCapping class.
        /// </summary>
        /// <param name="dailyQuotaGb">The workspace daily quota for
        /// ingestion.</param>
        /// <param name="quotaNextResetTime">The time when the quota will be
        /// rest.</param>
        /// <param name="dataIngestionStatus">The status of data ingestion for
        /// this workspace. Possible values include: 'RespectQuota', 'ForceOn',
        /// 'ForceOff', 'OverQuota', 'SubscriptionSuspended',
        /// 'ApproachingQuota'</param>
        public WorkspaceCapping(double? dailyQuotaGb = default(double?), string quotaNextResetTime = default(string), string dataIngestionStatus = default(string))
        {
            DailyQuotaGb = dailyQuotaGb;
            QuotaNextResetTime = quotaNextResetTime;
            DataIngestionStatus = dataIngestionStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the workspace daily quota for ingestion.
        /// </summary>
        [JsonProperty(PropertyName = "dailyQuotaGb")]
        public double? DailyQuotaGb { get; set; }

        /// <summary>
        /// Gets the time when the quota will be rest.
        /// </summary>
        [JsonProperty(PropertyName = "quotaNextResetTime")]
        public string QuotaNextResetTime { get; private set; }

        /// <summary>
        /// Gets the status of data ingestion for this workspace. Possible
        /// values include: 'RespectQuota', 'ForceOn', 'ForceOff', 'OverQuota',
        /// 'SubscriptionSuspended', 'ApproachingQuota'
        /// </summary>
        [JsonProperty(PropertyName = "dataIngestionStatus")]
        public string DataIngestionStatus { get; private set; }

    }
}
