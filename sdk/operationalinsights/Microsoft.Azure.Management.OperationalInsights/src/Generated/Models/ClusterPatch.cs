// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The top level Log Analytics cluster resource container.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ClusterPatch : IResource
    {
        /// <summary>
        /// Initializes a new instance of the ClusterPatch class.
        /// </summary>
        public ClusterPatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClusterPatch class.
        /// </summary>
        /// <param name="keyVaultProperties">The associated key
        /// properties.</param>
        /// <param name="identity">The identity of the resource.</param>
        /// <param name="sku">The sku properties.</param>
        /// <param name="tags">Resource tags.</param>
        public ClusterPatch(KeyVaultProperties keyVaultProperties = default(KeyVaultProperties), Identity identity = default(Identity), ClusterSku sku = default(ClusterSku), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            KeyVaultProperties = keyVaultProperties;
            Identity = identity;
            Sku = sku;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the associated key properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyVaultProperties")]
        public KeyVaultProperties KeyVaultProperties { get; set; }

        /// <summary>
        /// Gets or sets the identity of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }

        /// <summary>
        /// Gets or sets the sku properties.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public ClusterSku Sku { get; set; }

        /// <summary>
        /// Gets or sets resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Identity != null)
            {
                Identity.Validate();
            }
        }
    }
}
