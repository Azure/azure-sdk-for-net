// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Table's schema.
    /// </summary>
    public partial class Schema
    {
        /// <summary>
        /// Initializes a new instance of the Schema class.
        /// </summary>
        public Schema()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Schema class.
        /// </summary>
        /// <param name="name">Table name.</param>
        /// <param name="displayName">Table display name.</param>
        /// <param name="description">Table description.</param>
        /// <param name="columns">A list of table custom columns.</param>
        /// <param name="standardColumns">A list of table standard
        /// columns.</param>
        /// <param name="categories">Table category.</param>
        /// <param name="labels">Table labels.</param>
        /// <param name="source">Table's creator. Possible values include:
        /// 'microsoft', 'customer'</param>
        /// <param name="tableType">Table's creator. Possible values include:
        /// 'Microsoft', 'CustomLog', 'RestoredLogs', 'SearchResults'</param>
        /// <param name="tableSubType">The subtype describes what APIs can be
        /// used to interact with the table, and what features are available
        /// against it. Possible values include: 'Any', 'Classic',
        /// 'DataCollectionRuleBased'</param>
        /// <param name="solutions">List of solutions the table is affiliated
        /// with</param>
        /// <param name="searchResults">Parameters of the search job that
        /// initiated this table.</param>
        /// <param name="restoredLogs">Parameters of the restore operation that
        /// initiated this table.</param>
        public Schema(string name = default(string), string displayName = default(string), string description = default(string), IList<Column> columns = default(IList<Column>), IList<Column> standardColumns = default(IList<Column>), IList<string> categories = default(IList<string>), IList<string> labels = default(IList<string>), string source = default(string), string tableType = default(string), string tableSubType = default(string), IList<string> solutions = default(IList<string>), SearchResults searchResults = default(SearchResults), RestoredLogs restoredLogs = default(RestoredLogs))
        {
            Name = name;
            DisplayName = displayName;
            Description = description;
            Columns = columns;
            StandardColumns = standardColumns;
            Categories = categories;
            Labels = labels;
            Source = source;
            TableType = tableType;
            TableSubType = tableSubType;
            Solutions = solutions;
            SearchResults = searchResults;
            RestoredLogs = restoredLogs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets table name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets table display name.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets table description.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets a list of table custom columns.
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<Column> Columns { get; set; }

        /// <summary>
        /// Gets a list of table standard columns.
        /// </summary>
        [JsonProperty(PropertyName = "standardColumns")]
        public IList<Column> StandardColumns { get; private set; }

        /// <summary>
        /// Gets table category.
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<string> Categories { get; private set; }

        /// <summary>
        /// Gets table labels.
        /// </summary>
        [JsonProperty(PropertyName = "labels")]
        public IList<string> Labels { get; private set; }

        /// <summary>
        /// Gets table's creator. Possible values include: 'microsoft',
        /// 'customer'
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; private set; }

        /// <summary>
        /// Gets table's creator. Possible values include: 'Microsoft',
        /// 'CustomLog', 'RestoredLogs', 'SearchResults'
        /// </summary>
        [JsonProperty(PropertyName = "tableType")]
        public string TableType { get; private set; }

        /// <summary>
        /// Gets the subtype describes what APIs can be used to interact with
        /// the table, and what features are available against it. Possible
        /// values include: 'Any', 'Classic', 'DataCollectionRuleBased'
        /// </summary>
        [JsonProperty(PropertyName = "tableSubType")]
        public string TableSubType { get; private set; }

        /// <summary>
        /// Gets list of solutions the table is affiliated with
        /// </summary>
        [JsonProperty(PropertyName = "solutions")]
        public IList<string> Solutions { get; private set; }

        /// <summary>
        /// Gets parameters of the search job that initiated this table.
        /// </summary>
        [JsonProperty(PropertyName = "searchResults")]
        public SearchResults SearchResults { get; private set; }

        /// <summary>
        /// Gets parameters of the restore operation that initiated this table.
        /// </summary>
        [JsonProperty(PropertyName = "restoredLogs")]
        public RestoredLogs RestoredLogs { get; private set; }

    }
}
