// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Value object for schema results.
    /// </summary>
    public partial class SearchSchemaValue
    {
        /// <summary>
        /// Initializes a new instance of the SearchSchemaValue class.
        /// </summary>
        public SearchSchemaValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchSchemaValue class.
        /// </summary>
        /// <param name="indexed">The boolean that indicates the field is
        /// searchable as free text.</param>
        /// <param name="stored">The boolean that indicates whether or not the
        /// field is stored.</param>
        /// <param name="facet">The boolean that indicates whether or not the
        /// field is a facet.</param>
        /// <param name="name">The name of the schema.</param>
        /// <param name="displayName">The display name of the schema.</param>
        /// <param name="type">The type.</param>
        /// <param name="ownerType">The array of workflows containing the
        /// field.</param>
        public SearchSchemaValue(bool indexed, bool stored, bool facet, string name = default(string), string displayName = default(string), string type = default(string), IList<string> ownerType = default(IList<string>))
        {
            Name = name;
            DisplayName = displayName;
            Type = type;
            Indexed = indexed;
            Stored = stored;
            Facet = facet;
            OwnerType = ownerType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the schema.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the display name of the schema.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the boolean that indicates the field is searchable as
        /// free text.
        /// </summary>
        [JsonProperty(PropertyName = "indexed")]
        public bool Indexed { get; set; }

        /// <summary>
        /// Gets or sets the boolean that indicates whether or not the field is
        /// stored.
        /// </summary>
        [JsonProperty(PropertyName = "stored")]
        public bool Stored { get; set; }

        /// <summary>
        /// Gets or sets the boolean that indicates whether or not the field is
        /// a facet.
        /// </summary>
        [JsonProperty(PropertyName = "facet")]
        public bool Facet { get; set; }

        /// <summary>
        /// Gets or sets the array of workflows containing the field.
        /// </summary>
        [JsonProperty(PropertyName = "ownerType")]
        public IList<string> OwnerType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
