// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.OperationalInsights.Models;

namespace Azure.ResourceManager.OperationalInsights
{
    /// <summary> A class representing the Table data model. </summary>
    public partial class TableData : ResourceData
    {
        /// <summary> Initializes a new instance of TableData. </summary>
        public TableData()
        {
        }

        /// <summary> Initializes a new instance of TableData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="retentionInDays"> The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention. </param>
        /// <param name="totalRetentionInDays"> The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention. </param>
        /// <param name="archiveRetentionInDays"> The table data archive retention in days. Calculated as (totalRetentionInDays-retentionInDays). </param>
        /// <param name="searchResults"> Parameters of the search job that initiated this table. </param>
        /// <param name="restoredLogs"> Parameters of the restore operation that initiated this table. </param>
        /// <param name="resultStatistics"> Search job execution statistics. </param>
        /// <param name="plan"> Instruct the system how to handle and charge the logs ingested to this table. </param>
        /// <param name="lastPlanModifiedDate"> The timestamp that table plan was last modified (UTC). </param>
        /// <param name="schema"> Table schema. </param>
        /// <param name="provisioningState"> Table&apos;s current provisioning state. If set to &apos;updating&apos;, indicates a resource lock due to ongoing operation, forbidding any update to the table until the ongoing operation is concluded. </param>
        /// <param name="retentionInDaysAsDefault"> True - Value originates from workspace retention in days, False - Customer specific. </param>
        /// <param name="totalRetentionInDaysAsDefault"> True - Value originates from retention in days, False - Customer specific. </param>
        internal TableData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, int? retentionInDays, int? totalRetentionInDays, int? archiveRetentionInDays, SearchResults searchResults, RestoredLogs restoredLogs, ResultStatistics resultStatistics, TablePlanEnum? plan, string lastPlanModifiedDate, Schema schema, ProvisioningStateEnum? provisioningState, RetentionInDaysAsDefault? retentionInDaysAsDefault, TotalRetentionInDaysAsDefault? totalRetentionInDaysAsDefault) : base(id, name, resourceType, systemData)
        {
            RetentionInDays = retentionInDays;
            TotalRetentionInDays = totalRetentionInDays;
            ArchiveRetentionInDays = archiveRetentionInDays;
            SearchResults = searchResults;
            RestoredLogs = restoredLogs;
            ResultStatistics = resultStatistics;
            Plan = plan;
            LastPlanModifiedDate = lastPlanModifiedDate;
            Schema = schema;
            ProvisioningState = provisioningState;
            RetentionInDaysAsDefault = retentionInDaysAsDefault;
            TotalRetentionInDaysAsDefault = totalRetentionInDaysAsDefault;
        }

        /// <summary> The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention. </summary>
        public int? RetentionInDays { get; set; }
        /// <summary> The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention. </summary>
        public int? TotalRetentionInDays { get; set; }
        /// <summary> The table data archive retention in days. Calculated as (totalRetentionInDays-retentionInDays). </summary>
        public int? ArchiveRetentionInDays { get; }
        /// <summary> Parameters of the search job that initiated this table. </summary>
        public SearchResults SearchResults { get; set; }
        /// <summary> Parameters of the restore operation that initiated this table. </summary>
        public RestoredLogs RestoredLogs { get; set; }
        /// <summary> Search job execution statistics. </summary>
        public ResultStatistics ResultStatistics { get; }
        /// <summary> Instruct the system how to handle and charge the logs ingested to this table. </summary>
        public TablePlanEnum? Plan { get; set; }
        /// <summary> The timestamp that table plan was last modified (UTC). </summary>
        public string LastPlanModifiedDate { get; }
        /// <summary> Table schema. </summary>
        public Schema Schema { get; set; }
        /// <summary> Table&apos;s current provisioning state. If set to &apos;updating&apos;, indicates a resource lock due to ongoing operation, forbidding any update to the table until the ongoing operation is concluded. </summary>
        public ProvisioningStateEnum? ProvisioningState { get; }
        /// <summary> True - Value originates from workspace retention in days, False - Customer specific. </summary>
        public RetentionInDaysAsDefault? RetentionInDaysAsDefault { get; }
        /// <summary> True - Value originates from retention in days, False - Customer specific. </summary>
        public TotalRetentionInDaysAsDefault? TotalRetentionInDaysAsDefault { get; }
    }
}
