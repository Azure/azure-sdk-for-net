// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.OperationalInsights.Models
{
    /// <summary> The name of the SKU. </summary>
    public readonly partial struct WorkspaceSkuNameEnum : IEquatable<WorkspaceSkuNameEnum>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="WorkspaceSkuNameEnum"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public WorkspaceSkuNameEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FreeValue = "Free";
        private const string StandardValue = "Standard";
        private const string PremiumValue = "Premium";
        private const string PerNodeValue = "PerNode";
        private const string PerGB2018Value = "PerGB2018";
        private const string StandaloneValue = "Standalone";
        private const string CapacityReservationValue = "CapacityReservation";
        private const string LAClusterValue = "LACluster";

        /// <summary> Free. </summary>
        public static WorkspaceSkuNameEnum Free { get; } = new WorkspaceSkuNameEnum(FreeValue);
        /// <summary> Standard. </summary>
        public static WorkspaceSkuNameEnum Standard { get; } = new WorkspaceSkuNameEnum(StandardValue);
        /// <summary> Premium. </summary>
        public static WorkspaceSkuNameEnum Premium { get; } = new WorkspaceSkuNameEnum(PremiumValue);
        /// <summary> PerNode. </summary>
        public static WorkspaceSkuNameEnum PerNode { get; } = new WorkspaceSkuNameEnum(PerNodeValue);
        /// <summary> PerGB2018. </summary>
        public static WorkspaceSkuNameEnum PerGB2018 { get; } = new WorkspaceSkuNameEnum(PerGB2018Value);
        /// <summary> Standalone. </summary>
        public static WorkspaceSkuNameEnum Standalone { get; } = new WorkspaceSkuNameEnum(StandaloneValue);
        /// <summary> CapacityReservation. </summary>
        public static WorkspaceSkuNameEnum CapacityReservation { get; } = new WorkspaceSkuNameEnum(CapacityReservationValue);
        /// <summary> LACluster. </summary>
        public static WorkspaceSkuNameEnum LACluster { get; } = new WorkspaceSkuNameEnum(LAClusterValue);
        /// <summary> Determines if two <see cref="WorkspaceSkuNameEnum"/> values are the same. </summary>
        public static bool operator ==(WorkspaceSkuNameEnum left, WorkspaceSkuNameEnum right) => left.Equals(right);
        /// <summary> Determines if two <see cref="WorkspaceSkuNameEnum"/> values are not the same. </summary>
        public static bool operator !=(WorkspaceSkuNameEnum left, WorkspaceSkuNameEnum right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="WorkspaceSkuNameEnum"/>. </summary>
        public static implicit operator WorkspaceSkuNameEnum(string value) => new WorkspaceSkuNameEnum(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is WorkspaceSkuNameEnum other && Equals(other);
        /// <inheritdoc />
        public bool Equals(WorkspaceSkuNameEnum other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
