// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.OperationalInsights.Models
{
    public partial class OperationalInsightsSearchSchemaValue
    {
        internal static OperationalInsightsSearchSchemaValue DeserializeOperationalInsightsSearchSchemaValue(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> name = default;
            Optional<string> displayName = default;
            Optional<string> type = default;
            bool indexed = default;
            bool stored = default;
            bool facet = default;
            Optional<IReadOnlyList<string>> ownerType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("indexed"u8))
                {
                    indexed = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("stored"u8))
                {
                    stored = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("facet"u8))
                {
                    facet = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("ownerType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    ownerType = array;
                    continue;
                }
            }
            return new OperationalInsightsSearchSchemaValue(name.Value, displayName.Value, type.Value, indexed, stored, facet, Optional.ToList(ownerType));
        }
    }
}
