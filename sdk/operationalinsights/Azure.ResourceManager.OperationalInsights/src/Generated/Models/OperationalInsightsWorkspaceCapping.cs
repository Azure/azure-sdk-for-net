// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OperationalInsights.Models
{
    /// <summary> The daily volume cap for ingestion. </summary>
    public partial class OperationalInsightsWorkspaceCapping
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="OperationalInsightsWorkspaceCapping"/>. </summary>
        public OperationalInsightsWorkspaceCapping()
        {
        }

        /// <summary> Initializes a new instance of <see cref="OperationalInsightsWorkspaceCapping"/>. </summary>
        /// <param name="dailyQuotaInGB"> The workspace daily quota for ingestion. </param>
        /// <param name="quotaNextResetTime"> The time when the quota will be rest. </param>
        /// <param name="dataIngestionStatus"> The status of data ingestion for this workspace. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal OperationalInsightsWorkspaceCapping(double? dailyQuotaInGB, string quotaNextResetTime, OperationalInsightsDataIngestionStatus? dataIngestionStatus, Dictionary<string, BinaryData> rawData)
        {
            DailyQuotaInGB = dailyQuotaInGB;
            QuotaNextResetTime = quotaNextResetTime;
            DataIngestionStatus = dataIngestionStatus;
            _rawData = rawData;
        }

        /// <summary> The workspace daily quota for ingestion. </summary>
        public double? DailyQuotaInGB { get; set; }
        /// <summary> The time when the quota will be rest. </summary>
        public string QuotaNextResetTime { get; }
        /// <summary> The status of data ingestion for this workspace. </summary>
        public OperationalInsightsDataIngestionStatus? DataIngestionStatus { get; }
    }
}
