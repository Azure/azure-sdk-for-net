// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.OperationalInsights.Models
{
    /// <summary> Restore parameters. </summary>
    public partial class OperationalInsightsTableRestoredLogs
    {
        /// <summary> Initializes a new instance of <see cref="OperationalInsightsTableRestoredLogs"/>. </summary>
        public OperationalInsightsTableRestoredLogs()
        {
        }

        /// <summary> Initializes a new instance of <see cref="OperationalInsightsTableRestoredLogs"/>. </summary>
        /// <param name="startRestoreOn"> The timestamp to start the restore from (UTC). </param>
        /// <param name="endRestoreOn"> The timestamp to end the restore by (UTC). </param>
        /// <param name="sourceTable"> The table to restore data from. </param>
        /// <param name="azureAsyncOperationId"> Search results table async operation id. </param>
        internal OperationalInsightsTableRestoredLogs(DateTimeOffset? startRestoreOn, DateTimeOffset? endRestoreOn, string sourceTable, Guid? azureAsyncOperationId)
        {
            StartRestoreOn = startRestoreOn;
            EndRestoreOn = endRestoreOn;
            SourceTable = sourceTable;
            AzureAsyncOperationId = azureAsyncOperationId;
        }

        /// <summary> The timestamp to start the restore from (UTC). </summary>
        public DateTimeOffset? StartRestoreOn { get; set; }
        /// <summary> The timestamp to end the restore by (UTC). </summary>
        public DateTimeOffset? EndRestoreOn { get; set; }
        /// <summary> The table to restore data from. </summary>
        public string SourceTable { get; set; }
        /// <summary> Search results table async operation id. </summary>
        public Guid? AzureAsyncOperationId { get; }
    }
}
