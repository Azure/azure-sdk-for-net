// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SqlVulnerabilityAssessmentBaselineRulesOperations.
    /// </summary>
    public static partial class SqlVulnerabilityAssessmentBaselineRulesOperationsExtensions
    {
            /// <summary>
            /// Creates a Baseline for a rule in a database. Will overwrite any previously
            /// existing results.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ruleId'>
            /// The rule Id.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='latestScan'>
            /// Take results from latest scan.
            /// </param>
            /// <param name='results'>
            /// Expected results to be inserted into the baseline.
            /// Leave this field empty it LatestScan == true.
            /// </param>
            public static RuleResults CreateOrUpdate(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string apiVersion, string resourceId, bool? latestScan = default(bool?), IList<IList<string>> results = default(IList<IList<string>>))
            {
                return operations.CreateOrUpdateAsync(ruleId, workspaceId, apiVersion, resourceId, latestScan, results).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a Baseline for a rule in a database. Will overwrite any previously
            /// existing results.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ruleId'>
            /// The rule Id.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='latestScan'>
            /// Take results from latest scan.
            /// </param>
            /// <param name='results'>
            /// Expected results to be inserted into the baseline.
            /// Leave this field empty it LatestScan == true.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RuleResults> CreateOrUpdateAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string apiVersion, string resourceId, bool? latestScan = default(bool?), IList<IList<string>> results = default(IList<IList<string>>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(ruleId, workspaceId, apiVersion, resourceId, latestScan, results, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the results for a given rule in the Baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ruleId'>
            /// The rule Id.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            public static RuleResults Get(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string apiVersion, string resourceId)
            {
                return operations.GetAsync(ruleId, workspaceId, apiVersion, resourceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the results for a given rule in the Baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ruleId'>
            /// The rule Id.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RuleResults> GetAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string apiVersion, string resourceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(ruleId, workspaceId, apiVersion, resourceId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a rule from the Baseline of a given database.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ruleId'>
            /// The rule Id.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            public static void Delete(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string apiVersion, string resourceId)
            {
                operations.DeleteAsync(ruleId, workspaceId, apiVersion, resourceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a rule from the Baseline of a given database.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='ruleId'>
            /// The rule Id.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string apiVersion, string resourceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(ruleId, workspaceId, apiVersion, resourceId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the results for all rules in the Baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            public static RulesResults List(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string apiVersion, string resourceId)
            {
                return operations.ListAsync(workspaceId, apiVersion, resourceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the results for all rules in the Baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RulesResults> ListAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string apiVersion, string resourceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(workspaceId, apiVersion, resourceId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Add a list of baseline rules. Will overwrite any previously existing
            /// results (for all rules).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='latestScan'>
            /// Take results from latest scan.
            /// </param>
            /// <param name='results'>
            /// Expected results to be inserted into the baseline.
            /// Leave this field empty it LatestScan == true.
            /// </param>
            public static RulesResults Add(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string apiVersion, string resourceId, bool? latestScan = default(bool?), IDictionary<string, IList<IList<string>>> results = default(IDictionary<string, IList<IList<string>>>))
            {
                return operations.AddAsync(workspaceId, apiVersion, resourceId, latestScan, results).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Add a list of baseline rules. Will overwrite any previously existing
            /// results (for all rules).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceId'>
            /// The workspace Id.
            /// </param>
            /// <param name='apiVersion'>
            /// The api version.
            /// </param>
            /// <param name='resourceId'>
            /// The identifier of the resource.
            /// </param>
            /// <param name='latestScan'>
            /// Take results from latest scan.
            /// </param>
            /// <param name='results'>
            /// Expected results to be inserted into the baseline.
            /// Leave this field empty it LatestScan == true.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RulesResults> AddAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string apiVersion, string resourceId, bool? latestScan = default(bool?), IDictionary<string, IList<IList<string>>> results = default(IDictionary<string, IList<IList<string>>>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddWithHttpMessagesAsync(workspaceId, apiVersion, resourceId, latestScan, results, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
