// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Security Application over a given scope
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Application : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Application class.
        /// </summary>
        public Application()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Application class.
        /// </summary>
        /// <param name="conditionSets">The application conditionSets - see
        /// examples</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="displayName">display name of the application</param>
        /// <param name="description">description of the application</param>
        public Application(IList<object> conditionSets, string id = default(string), string name = default(string), string type = default(string), string displayName = default(string), string description = default(string))
            : base(id, name, type)
        {
            DisplayName = displayName;
            Description = description;
            ConditionSets = conditionSets;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for Application class.
        /// </summary>
        static Application()
        {
            SourceResourceType = "Assessments";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets display name of the application
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets description of the application
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the application conditionSets - see examples
        /// </summary>
        [JsonProperty(PropertyName = "properties.conditionSets")]
        public IList<object> ConditionSets { get; set; }

        /// <summary>
        /// The application source, what it affects, e.g. Assessments
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceResourceType")]
        public static string SourceResourceType { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ConditionSets == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConditionSets");
            }
        }
    }
}
