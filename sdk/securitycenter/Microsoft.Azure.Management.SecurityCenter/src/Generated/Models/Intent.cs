// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{

    /// <summary>
    /// Defines values for Intent.
    /// </summary>
    public static class Intent
    {
        /// <summary>
        /// Unknown
        /// </summary>
        public const string Unknown = "Unknown";
        /// <summary>
        /// PreAttack could be either an attempt to access a certain resource
        /// regardless of a malicious intent, or a failed attempt to gain
        /// access to a target system to gather information prior to
        /// exploitation. This step is usually detected as an attempt,
        /// originating from outside the network, to scan the target system and
        /// find a way in.  Further details on the PreAttack stage can be read
        /// in [MITRE Pre-Att&ck
        /// matrix](https://attack.mitre.org/matrices/pre/).
        /// </summary>
        public const string PreAttack = "PreAttack";
        /// <summary>
        /// InitialAccess is the stage where an attacker manages to get
        /// foothold on the attacked resource.
        /// </summary>
        public const string InitialAccess = "InitialAccess";
        /// <summary>
        /// Persistence is any access, action, or configuration change to a
        /// system that gives a threat actor a persistent presence on that
        /// system.
        /// </summary>
        public const string Persistence = "Persistence";
        /// <summary>
        /// Privilege escalation is the result of actions that allow an
        /// adversary to obtain a higher level of permissions on a system or
        /// network.
        /// </summary>
        public const string PrivilegeEscalation = "PrivilegeEscalation";
        /// <summary>
        /// Defense evasion consists of techniques an adversary may use to
        /// evade detection or avoid other defenses.
        /// </summary>
        public const string DefenseEvasion = "DefenseEvasion";
        /// <summary>
        /// Credential access represents techniques resulting in access to or
        /// control over system, domain, or service credentials that are used
        /// within an enterprise environment.
        /// </summary>
        public const string CredentialAccess = "CredentialAccess";
        /// <summary>
        /// Discovery consists of techniques that allow the adversary to gain
        /// knowledge about the system and internal network.
        /// </summary>
        public const string Discovery = "Discovery";
        /// <summary>
        /// Lateral movement consists of techniques that enable an adversary to
        /// access and control remote systems on a network and could, but does
        /// not necessarily, include execution of tools on remote systems.
        /// </summary>
        public const string LateralMovement = "LateralMovement";
        /// <summary>
        /// The execution tactic represents techniques that result in execution
        /// of adversary-controlled code on a local or remote system.
        /// </summary>
        public const string Execution = "Execution";
        /// <summary>
        /// Collection consists of techniques used to identify and gather
        /// information, such as sensitive files, from a target network prior
        /// to exfiltration.
        /// </summary>
        public const string Collection = "Collection";
        /// <summary>
        /// Exfiltration refers to techniques and attributes that result or aid
        /// in the adversary removing files and information from a target
        /// network.
        /// </summary>
        public const string Exfiltration = "Exfiltration";
        /// <summary>
        /// The command and control tactic represents how adversaries
        /// communicate with systems under their control within a target
        /// network.
        /// </summary>
        public const string CommandAndControl = "CommandAndControl";
        /// <summary>
        /// Impact events primarily try to directly reduce the availability or
        /// integrity of a system, service, or network; including manipulation
        /// of data to impact a business or operational process.
        /// </summary>
        public const string Impact = "Impact";
        /// <summary>
        /// Probing could be either an attempt to access a certain resource
        /// regardless of a malicious intent, or a failed attempt to gain
        /// access to a target system to gather information prior to
        /// exploitation.
        /// </summary>
        public const string Probing = "Probing";
        /// <summary>
        /// Exploitation is the stage where an attacker manages to get a
        /// foothold on the attacked resource. This stage is relevant for
        /// compute hosts and resources such as user accounts, certificates
        /// etc.
        /// </summary>
        public const string Exploitation = "Exploitation";
    }
}
