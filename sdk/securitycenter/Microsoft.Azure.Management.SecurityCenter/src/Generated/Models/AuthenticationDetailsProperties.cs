// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Settings for cloud authentication management
    /// </summary>
    [Newtonsoft.Json.JsonObject("AuthenticationDetailsProperties")]
    public partial class AuthenticationDetailsProperties
    {
        /// <summary>
        /// Initializes a new instance of the AuthenticationDetailsProperties
        /// class.
        /// </summary>
        public AuthenticationDetailsProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AuthenticationDetailsProperties
        /// class.
        /// </summary>
        /// <param name="authenticationProvisioningState">State of the
        /// multi-cloud connector. Possible values include: 'Valid', 'Invalid',
        /// 'Expired', 'IncorrectPolicy'</param>
        /// <param name="grantedPermissions">The permissions detected in the
        /// cloud account.</param>
        public AuthenticationDetailsProperties(string authenticationProvisioningState = default(string), IList<string> grantedPermissions = default(IList<string>))
        {
            AuthenticationProvisioningState = authenticationProvisioningState;
            GrantedPermissions = grantedPermissions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets state of the multi-cloud connector. Possible values include:
        /// 'Valid', 'Invalid', 'Expired', 'IncorrectPolicy'
        /// </summary>
        [JsonProperty(PropertyName = "authenticationProvisioningState")]
        public string AuthenticationProvisioningState { get; private set; }

        /// <summary>
        /// Gets the permissions detected in the cloud account.
        /// </summary>
        [JsonProperty(PropertyName = "grantedPermissions")]
        public IList<string> GrantedPermissions { get; private set; }

    }
}
