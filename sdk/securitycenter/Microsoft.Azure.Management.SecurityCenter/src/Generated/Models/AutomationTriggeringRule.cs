// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A rule which is evaluated upon event interception. The rule is
    /// configured by comparing a specific value from the event model to an
    /// expected value. This comparison is done by using one of the supported
    /// operators set.
    /// </summary>
    public partial class AutomationTriggeringRule
    {
        /// <summary>
        /// Initializes a new instance of the AutomationTriggeringRule class.
        /// </summary>
        public AutomationTriggeringRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutomationTriggeringRule class.
        /// </summary>
        /// <param name="propertyJPath">The JPath of the entity model property
        /// that should be checked.</param>
        /// <param name="propertyType">The data type of the compared operands
        /// (string, integer, floating point number or a boolean [true/false]].
        /// Possible values include: 'String', 'Integer', 'Number',
        /// 'Boolean'</param>
        /// <param name="expectedValue">The expected value.</param>
        /// <param name="operatorProperty">A valid comparer operator to use. A
        /// case-insensitive comparison will be applied for String
        /// PropertyType. Possible values include: 'Equals', 'GreaterThan',
        /// 'GreaterThanOrEqualTo', 'LesserThan', 'LesserThanOrEqualTo',
        /// 'NotEquals', 'Contains', 'StartsWith', 'EndsWith'</param>
        public AutomationTriggeringRule(string propertyJPath = default(string), string propertyType = default(string), string expectedValue = default(string), string operatorProperty = default(string))
        {
            PropertyJPath = propertyJPath;
            PropertyType = propertyType;
            ExpectedValue = expectedValue;
            OperatorProperty = operatorProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the JPath of the entity model property that should be
        /// checked.
        /// </summary>
        [JsonProperty(PropertyName = "propertyJPath")]
        public string PropertyJPath { get; set; }

        /// <summary>
        /// Gets or sets the data type of the compared operands (string,
        /// integer, floating point number or a boolean [true/false]]. Possible
        /// values include: 'String', 'Integer', 'Number', 'Boolean'
        /// </summary>
        [JsonProperty(PropertyName = "propertyType")]
        public string PropertyType { get; set; }

        /// <summary>
        /// Gets or sets the expected value.
        /// </summary>
        [JsonProperty(PropertyName = "expectedValue")]
        public string ExpectedValue { get; set; }

        /// <summary>
        /// Gets or sets a valid comparer operator to use. A case-insensitive
        /// comparison will be applied for String PropertyType. Possible values
        /// include: 'Equals', 'GreaterThan', 'GreaterThanOrEqualTo',
        /// 'LesserThan', 'LesserThanOrEqualTo', 'NotEquals', 'Contains',
        /// 'StartsWith', 'EndsWith'
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

    }
}
