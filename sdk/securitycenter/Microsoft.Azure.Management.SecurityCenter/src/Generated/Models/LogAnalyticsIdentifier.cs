// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a Log Analytics workspace scope identifier.
    /// </summary>
    [Newtonsoft.Json.JsonObject("LogAnalytics")]
    public partial class LogAnalyticsIdentifier : ResourceIdentifier
    {
        /// <summary>
        /// Initializes a new instance of the LogAnalyticsIdentifier class.
        /// </summary>
        public LogAnalyticsIdentifier()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogAnalyticsIdentifier class.
        /// </summary>
        /// <param name="workspaceId">The LogAnalytics workspace id that stores
        /// this alert.</param>
        /// <param name="workspaceSubscriptionId">The azure subscription id for
        /// the LogAnalytics workspace storing this alert.</param>
        /// <param name="workspaceResourceGroup">The azure resource group for
        /// the LogAnalytics workspace storing this alert</param>
        /// <param name="agentId">(optional) The LogAnalytics agent id
        /// reporting the event that this alert is based on.</param>
        public LogAnalyticsIdentifier(string workspaceId = default(string), string workspaceSubscriptionId = default(string), string workspaceResourceGroup = default(string), string agentId = default(string))
        {
            WorkspaceId = workspaceId;
            WorkspaceSubscriptionId = workspaceSubscriptionId;
            WorkspaceResourceGroup = workspaceResourceGroup;
            AgentId = agentId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the LogAnalytics workspace id that stores this alert.
        /// </summary>
        [JsonProperty(PropertyName = "workspaceId")]
        public string WorkspaceId { get; private set; }

        /// <summary>
        /// Gets the azure subscription id for the LogAnalytics workspace
        /// storing this alert.
        /// </summary>
        [JsonProperty(PropertyName = "workspaceSubscriptionId")]
        public string WorkspaceSubscriptionId { get; private set; }

        /// <summary>
        /// Gets the azure resource group for the LogAnalytics workspace
        /// storing this alert
        /// </summary>
        [JsonProperty(PropertyName = "workspaceResourceGroup")]
        public string WorkspaceResourceGroup { get; private set; }

        /// <summary>
        /// Gets (optional) The LogAnalytics agent id reporting the event that
        /// this alert is based on.
        /// </summary>
        [JsonProperty(PropertyName = "agentId")]
        public string AgentId { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (WorkspaceSubscriptionId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(WorkspaceSubscriptionId, "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "WorkspaceSubscriptionId", "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$");
                }
            }
        }
    }
}
