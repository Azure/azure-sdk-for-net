// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Firmware information
    /// </summary>
    public partial class Firmware
    {
        /// <summary>
        /// Initializes a new instance of the Firmware class.
        /// </summary>
        public Firmware()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Firmware class.
        /// </summary>
        /// <param name="moduleAddress">Address of the specific module a
        /// firmware is related to</param>
        /// <param name="rack">Rack number of the module a firmware is related
        /// to.</param>
        /// <param name="slot">Slot number in the rack of the module a firmware
        /// is related to</param>
        /// <param name="serial">Serial of the firmware</param>
        /// <param name="model">Firmware model</param>
        /// <param name="version">Firmware version</param>
        /// <param name="additionalData"> A bag of fields which extends the
        /// firmware information.</param>
        public Firmware(string moduleAddress = default(string), string rack = default(string), string slot = default(string), string serial = default(string), string model = default(string), string version = default(string), object additionalData = default(object))
        {
            ModuleAddress = moduleAddress;
            Rack = rack;
            Slot = slot;
            Serial = serial;
            Model = model;
            Version = version;
            AdditionalData = additionalData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets address of the specific module a firmware is related to
        /// </summary>
        [JsonProperty(PropertyName = "moduleAddress")]
        public string ModuleAddress { get; private set; }

        /// <summary>
        /// Gets rack number of the module a firmware is related to.
        /// </summary>
        [JsonProperty(PropertyName = "rack")]
        public string Rack { get; private set; }

        /// <summary>
        /// Gets slot number in the rack of the module a firmware is related to
        /// </summary>
        [JsonProperty(PropertyName = "slot")]
        public string Slot { get; private set; }

        /// <summary>
        /// Gets serial of the firmware
        /// </summary>
        [JsonProperty(PropertyName = "serial")]
        public string Serial { get; private set; }

        /// <summary>
        /// Gets firmware model
        /// </summary>
        [JsonProperty(PropertyName = "model")]
        public string Model { get; private set; }

        /// <summary>
        /// Gets firmware version
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets  A bag of fields which extends the firmware information.
        /// </summary>
        [JsonProperty(PropertyName = "additionalData")]
        public object AdditionalData { get; private set; }

    }
}
