// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Compliance of a scope
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Compliance : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Compliance class.
        /// </summary>
        public Compliance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Compliance class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="assessmentTimestampUtcDate">The timestamp when the
        /// Compliance calculation was conducted.</param>
        /// <param name="resourceCount">The resource count of the given
        /// subscription for which the Compliance calculation was conducted
        /// (needed for Management Group Compliance calculation).</param>
        /// <param name="assessmentResult">An array of segment, which is the
        /// actually the compliance assessment.</param>
        public Compliance(string id = default(string), string name = default(string), string type = default(string), System.DateTime? assessmentTimestampUtcDate = default(System.DateTime?), int? resourceCount = default(int?), IList<ComplianceSegment> assessmentResult = default(IList<ComplianceSegment>))
            : base(id, name, type)
        {
            AssessmentTimestampUtcDate = assessmentTimestampUtcDate;
            ResourceCount = resourceCount;
            AssessmentResult = assessmentResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the timestamp when the Compliance calculation was conducted.
        /// </summary>
        [JsonProperty(PropertyName = "properties.assessmentTimestampUtcDate")]
        public System.DateTime? AssessmentTimestampUtcDate { get; private set; }

        /// <summary>
        /// Gets the resource count of the given subscription for which the
        /// Compliance calculation was conducted (needed for Management Group
        /// Compliance calculation).
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceCount")]
        public int? ResourceCount { get; private set; }

        /// <summary>
        /// Gets an array of segment, which is the actually the compliance
        /// assessment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.assessmentResult")]
        public IList<ComplianceSegment> AssessmentResult { get; private set; }

    }
}
