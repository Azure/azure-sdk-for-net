// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Defender for Containers AWS offering configurations
    /// </summary>
    [Newtonsoft.Json.JsonObject("DefenderForContainersAws")]
    public partial class DefenderForContainersAwsOffering : CloudOffering
    {
        /// <summary>
        /// Initializes a new instance of the DefenderForContainersAwsOffering
        /// class.
        /// </summary>
        public DefenderForContainersAwsOffering()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DefenderForContainersAwsOffering
        /// class.
        /// </summary>
        /// <param name="description">The offering description.</param>
        /// <param name="kubernetesService">The kubernetes service connection
        /// configuration</param>
        /// <param name="kubernetesScubaReader">The kubernetes to scuba
        /// connection configuration</param>
        /// <param name="cloudWatchToKinesis">The cloudwatch to kinesis
        /// connection configuration</param>
        /// <param name="kinesisToS3">The kinesis to s3 connection
        /// configuration</param>
        public DefenderForContainersAwsOffering(string description = default(string), DefenderForContainersAwsOfferingKubernetesService kubernetesService = default(DefenderForContainersAwsOfferingKubernetesService), DefenderForContainersAwsOfferingKubernetesScubaReader kubernetesScubaReader = default(DefenderForContainersAwsOfferingKubernetesScubaReader), DefenderForContainersAwsOfferingCloudWatchToKinesis cloudWatchToKinesis = default(DefenderForContainersAwsOfferingCloudWatchToKinesis), DefenderForContainersAwsOfferingKinesisToS3 kinesisToS3 = default(DefenderForContainersAwsOfferingKinesisToS3))
            : base(description)
        {
            KubernetesService = kubernetesService;
            KubernetesScubaReader = kubernetesScubaReader;
            CloudWatchToKinesis = cloudWatchToKinesis;
            KinesisToS3 = kinesisToS3;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the kubernetes service connection configuration
        /// </summary>
        [JsonProperty(PropertyName = "kubernetesService")]
        public DefenderForContainersAwsOfferingKubernetesService KubernetesService { get; set; }

        /// <summary>
        /// Gets or sets the kubernetes to scuba connection configuration
        /// </summary>
        [JsonProperty(PropertyName = "kubernetesScubaReader")]
        public DefenderForContainersAwsOfferingKubernetesScubaReader KubernetesScubaReader { get; set; }

        /// <summary>
        /// Gets or sets the cloudwatch to kinesis connection configuration
        /// </summary>
        [JsonProperty(PropertyName = "cloudWatchToKinesis")]
        public DefenderForContainersAwsOfferingCloudWatchToKinesis CloudWatchToKinesis { get; set; }

        /// <summary>
        /// Gets or sets the kinesis to s3 connection configuration
        /// </summary>
        [JsonProperty(PropertyName = "kinesisToS3")]
        public DefenderForContainersAwsOfferingKinesisToS3 KinesisToS3 { get; set; }

    }
}
