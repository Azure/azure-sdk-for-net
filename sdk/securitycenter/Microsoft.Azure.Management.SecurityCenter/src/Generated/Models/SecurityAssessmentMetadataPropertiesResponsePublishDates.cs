// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SecurityAssessmentMetadataPropertiesResponsePublishDates
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SecurityAssessmentMetadataPropertiesResponsePublishDates class.
        /// </summary>
        public SecurityAssessmentMetadataPropertiesResponsePublishDates()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SecurityAssessmentMetadataPropertiesResponsePublishDates class.
        /// </summary>
        public SecurityAssessmentMetadataPropertiesResponsePublishDates(string publicProperty, string ga = default(string))
        {
            GA = ga;
            PublicProperty = publicProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GA")]
        public string GA { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "public")]
        public string PublicProperty { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PublicProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PublicProperty");
            }
            if (GA != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(GA, "^([0-9]{2}/){2}[0-9]{4}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "GA", "^([0-9]{2}/){2}[0-9]{4}$");
                }
            }
            if (PublicProperty != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(PublicProperty, "^([0-9]{2}/){2}[0-9]{4}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "PublicProperty", "^([0-9]{2}/){2}[0-9]{4}$");
                }
            }
        }
    }
}
