// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// IoT Security solution recommendation information.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class IoTSecurityAggregatedRecommendation
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IoTSecurityAggregatedRecommendation class.
        /// </summary>
        public IoTSecurityAggregatedRecommendation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IoTSecurityAggregatedRecommendation class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="recommendationName">Name of the
        /// recommendation.</param>
        /// <param name="recommendationDisplayName">Display name of the
        /// recommendation type.</param>
        /// <param name="description">Description of the suspected
        /// vulnerability and meaning.</param>
        /// <param name="recommendationTypeId">Recommendation-type
        /// GUID.</param>
        /// <param name="detectedBy">Name of the organization that made the
        /// recommendation.</param>
        /// <param name="remediationSteps">Recommended steps for
        /// remediation</param>
        /// <param name="reportedSeverity">Assessed recommendation severity.
        /// Possible values include: 'Informational', 'Low', 'Medium',
        /// 'High'</param>
        /// <param name="healthyDevices">Number of healthy devices within the
        /// IoT Security solution.</param>
        /// <param name="unhealthyDeviceCount">Number of unhealthy devices
        /// within the IoT Security solution.</param>
        /// <param name="logAnalyticsQuery">Log analytics query for getting the
        /// list of affected devices/alerts.</param>
        public IoTSecurityAggregatedRecommendation(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string recommendationName = default(string), string recommendationDisplayName = default(string), string description = default(string), string recommendationTypeId = default(string), string detectedBy = default(string), string remediationSteps = default(string), string reportedSeverity = default(string), int? healthyDevices = default(int?), int? unhealthyDeviceCount = default(int?), string logAnalyticsQuery = default(string))
        {
            Id = id;
            Name = name;
            Type = type;
            Tags = tags;
            RecommendationName = recommendationName;
            RecommendationDisplayName = recommendationDisplayName;
            Description = description;
            RecommendationTypeId = recommendationTypeId;
            DetectedBy = detectedBy;
            RemediationSteps = remediationSteps;
            ReportedSeverity = reportedSeverity;
            HealthyDevices = healthyDevices;
            UnhealthyDeviceCount = unhealthyDeviceCount;
            LogAnalyticsQuery = logAnalyticsQuery;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets resource Id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets resource name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets resource type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets name of the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommendationName")]
        public string RecommendationName { get; set; }

        /// <summary>
        /// Gets display name of the recommendation type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommendationDisplayName")]
        public string RecommendationDisplayName { get; private set; }

        /// <summary>
        /// Gets description of the suspected vulnerability and meaning.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets recommendation-type GUID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommendationTypeId")]
        public string RecommendationTypeId { get; private set; }

        /// <summary>
        /// Gets name of the organization that made the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.detectedBy")]
        public string DetectedBy { get; private set; }

        /// <summary>
        /// Gets recommended steps for remediation
        /// </summary>
        [JsonProperty(PropertyName = "properties.remediationSteps")]
        public string RemediationSteps { get; private set; }

        /// <summary>
        /// Gets assessed recommendation severity. Possible values include:
        /// 'Informational', 'Low', 'Medium', 'High'
        /// </summary>
        [JsonProperty(PropertyName = "properties.reportedSeverity")]
        public string ReportedSeverity { get; private set; }

        /// <summary>
        /// Gets number of healthy devices within the IoT Security solution.
        /// </summary>
        [JsonProperty(PropertyName = "properties.healthyDevices")]
        public int? HealthyDevices { get; private set; }

        /// <summary>
        /// Gets number of unhealthy devices within the IoT Security solution.
        /// </summary>
        [JsonProperty(PropertyName = "properties.unhealthyDeviceCount")]
        public int? UnhealthyDeviceCount { get; private set; }

        /// <summary>
        /// Gets log analytics query for getting the list of affected
        /// devices/alerts.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logAnalyticsQuery")]
        public string LogAnalyticsQuery { get; private set; }

    }
}
