// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Security alert
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Alert : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        public Alert()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="alertType">Unique identifier for the detection logic
        /// (all alert instances from the same detection logic will have the
        /// same alertType).</param>
        /// <param name="systemAlertId">Unique identifier for the
        /// alert.</param>
        /// <param name="productComponentName">The name of Azure Security
        /// Center pricing tier which powering this alert. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing</param>
        /// <param name="alertDisplayName">The display name of the
        /// alert.</param>
        /// <param name="description">Description of the suspicious activity
        /// that was detected.</param>
        /// <param name="severity">The risk level of the threat that was
        /// detected. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-alerts-overview#how-are-alerts-classified.
        /// Possible values include: 'Informational', 'Low', 'Medium',
        /// 'High'</param>
        /// <param name="intent">The kill chain related intent behind the
        /// alert. For list of supported values, and explanations of Azure
        /// Security Center's supported kill chain intents. Possible values
        /// include: 'Unknown', 'PreAttack', 'InitialAccess', 'Persistence',
        /// 'PrivilegeEscalation', 'DefenseEvasion', 'CredentialAccess',
        /// 'Discovery', 'LateralMovement', 'Execution', 'Collection',
        /// 'Exfiltration', 'CommandAndControl', 'Impact', 'Probing',
        /// 'Exploitation'</param>
        /// <param name="startTimeUtc">The UTC time of the first event or
        /// activity included in the alert in ISO8601 format.</param>
        /// <param name="endTimeUtc">The UTC time of the last event or activity
        /// included in the alert in ISO8601 format.</param>
        /// <param name="resourceIdentifiers">The resource identifiers that can
        /// be used to direct the alert to the right product exposure group
        /// (tenant, workspace, subscription etc.). There can be multiple
        /// identifiers of different type per alert.</param>
        /// <param name="remediationSteps">Manual action items to take to
        /// remediate the alert.</param>
        /// <param name="vendorName">The name of the vendor that raises the
        /// alert.</param>
        /// <param name="status">The life cycle status of the alert. Possible
        /// values include: 'Active', 'Resolved', 'Dismissed'</param>
        /// <param name="extendedLinks">Links related to the alert</param>
        /// <param name="alertUri">A direct link to the alert page in Azure
        /// Portal.</param>
        /// <param name="timeGeneratedUtc">The UTC time the alert was generated
        /// in ISO8601 format.</param>
        /// <param name="productName">The name of the product which published
        /// this alert (Azure Security Center, Azure ATP, Microsoft Defender
        /// ATP, O365 ATP, MCAS, and so on).</param>
        /// <param name="processingEndTimeUtc">The UTC processing end time of
        /// the alert in ISO8601 format.</param>
        /// <param name="entities">A list of entities related to the
        /// alert.</param>
        /// <param name="isIncident">This field determines whether the alert is
        /// an incident (a compound grouping of several alerts) or a single
        /// alert.</param>
        /// <param name="correlationKey">Key for corelating related alerts.
        /// Alerts with the same correlation key considered to be
        /// related.</param>
        /// <param name="extendedProperties">Custom properties for the
        /// alert.</param>
        /// <param name="compromisedEntity">The display name of the resource
        /// most related to this alert.</param>
        public Alert(string id = default(string), string name = default(string), string type = default(string), string alertType = default(string), string systemAlertId = default(string), string productComponentName = default(string), string alertDisplayName = default(string), string description = default(string), string severity = default(string), string intent = default(string), System.DateTime? startTimeUtc = default(System.DateTime?), System.DateTime? endTimeUtc = default(System.DateTime?), IList<ResourceIdentifier> resourceIdentifiers = default(IList<ResourceIdentifier>), IList<string> remediationSteps = default(IList<string>), string vendorName = default(string), string status = default(string), IList<IDictionary<string, string>> extendedLinks = default(IList<IDictionary<string, string>>), string alertUri = default(string), System.DateTime? timeGeneratedUtc = default(System.DateTime?), string productName = default(string), System.DateTime? processingEndTimeUtc = default(System.DateTime?), IList<AlertEntity> entities = default(IList<AlertEntity>), bool? isIncident = default(bool?), string correlationKey = default(string), IDictionary<string, string> extendedProperties = default(IDictionary<string, string>), string compromisedEntity = default(string))
            : base(id, name, type)
        {
            AlertType = alertType;
            SystemAlertId = systemAlertId;
            ProductComponentName = productComponentName;
            AlertDisplayName = alertDisplayName;
            Description = description;
            Severity = severity;
            Intent = intent;
            StartTimeUtc = startTimeUtc;
            EndTimeUtc = endTimeUtc;
            ResourceIdentifiers = resourceIdentifiers;
            RemediationSteps = remediationSteps;
            VendorName = vendorName;
            Status = status;
            ExtendedLinks = extendedLinks;
            AlertUri = alertUri;
            TimeGeneratedUtc = timeGeneratedUtc;
            ProductName = productName;
            ProcessingEndTimeUtc = processingEndTimeUtc;
            Entities = entities;
            IsIncident = isIncident;
            CorrelationKey = correlationKey;
            ExtendedProperties = extendedProperties;
            CompromisedEntity = compromisedEntity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets unique identifier for the detection logic (all alert instances
        /// from the same detection logic will have the same alertType).
        /// </summary>
        [JsonProperty(PropertyName = "properties.alertType")]
        public string AlertType { get; private set; }

        /// <summary>
        /// Gets unique identifier for the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.systemAlertId")]
        public string SystemAlertId { get; private set; }

        /// <summary>
        /// Gets the name of Azure Security Center pricing tier which powering
        /// this alert. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing
        /// </summary>
        [JsonProperty(PropertyName = "properties.productComponentName")]
        public string ProductComponentName { get; private set; }

        /// <summary>
        /// Gets the display name of the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.alertDisplayName")]
        public string AlertDisplayName { get; private set; }

        /// <summary>
        /// Gets description of the suspicious activity that was detected.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets the risk level of the threat that was detected. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-alerts-overview#how-are-alerts-classified.
        /// Possible values include: 'Informational', 'Low', 'Medium', 'High'
        /// </summary>
        [JsonProperty(PropertyName = "properties.severity")]
        public string Severity { get; private set; }

        /// <summary>
        /// Gets the kill chain related intent behind the alert. For list of
        /// supported values, and explanations of Azure Security Center's
        /// supported kill chain intents. Possible values include: 'Unknown',
        /// 'PreAttack', 'InitialAccess', 'Persistence', 'PrivilegeEscalation',
        /// 'DefenseEvasion', 'CredentialAccess', 'Discovery',
        /// 'LateralMovement', 'Execution', 'Collection', 'Exfiltration',
        /// 'CommandAndControl', 'Impact', 'Probing', 'Exploitation'
        /// </summary>
        [JsonProperty(PropertyName = "properties.intent")]
        public string Intent { get; private set; }

        /// <summary>
        /// Gets the UTC time of the first event or activity included in the
        /// alert in ISO8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startTimeUtc")]
        public System.DateTime? StartTimeUtc { get; private set; }

        /// <summary>
        /// Gets the UTC time of the last event or activity included in the
        /// alert in ISO8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endTimeUtc")]
        public System.DateTime? EndTimeUtc { get; private set; }

        /// <summary>
        /// Gets the resource identifiers that can be used to direct the alert
        /// to the right product exposure group (tenant, workspace,
        /// subscription etc.). There can be multiple identifiers of different
        /// type per alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceIdentifiers")]
        public IList<ResourceIdentifier> ResourceIdentifiers { get; private set; }

        /// <summary>
        /// Gets manual action items to take to remediate the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.remediationSteps")]
        public IList<string> RemediationSteps { get; private set; }

        /// <summary>
        /// Gets the name of the vendor that raises the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vendorName")]
        public string VendorName { get; private set; }

        /// <summary>
        /// Gets the life cycle status of the alert. Possible values include:
        /// 'Active', 'Resolved', 'Dismissed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets links related to the alert
        /// </summary>
        [JsonProperty(PropertyName = "properties.extendedLinks")]
        public IList<IDictionary<string, string>> ExtendedLinks { get; private set; }

        /// <summary>
        /// Gets a direct link to the alert page in Azure Portal.
        /// </summary>
        [JsonProperty(PropertyName = "properties.alertUri")]
        public string AlertUri { get; private set; }

        /// <summary>
        /// Gets the UTC time the alert was generated in ISO8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeGeneratedUtc")]
        public System.DateTime? TimeGeneratedUtc { get; private set; }

        /// <summary>
        /// Gets the name of the product which published this alert (Azure
        /// Security Center, Azure ATP, Microsoft Defender ATP, O365 ATP, MCAS,
        /// and so on).
        /// </summary>
        [JsonProperty(PropertyName = "properties.productName")]
        public string ProductName { get; private set; }

        /// <summary>
        /// Gets the UTC processing end time of the alert in ISO8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.processingEndTimeUtc")]
        public System.DateTime? ProcessingEndTimeUtc { get; private set; }

        /// <summary>
        /// Gets a list of entities related to the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.entities")]
        public IList<AlertEntity> Entities { get; private set; }

        /// <summary>
        /// Gets this field determines whether the alert is an incident (a
        /// compound grouping of several alerts) or a single alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isIncident")]
        public bool? IsIncident { get; private set; }

        /// <summary>
        /// Gets key for corelating related alerts. Alerts with the same
        /// correlation key considered to be related.
        /// </summary>
        [JsonProperty(PropertyName = "properties.correlationKey")]
        public string CorrelationKey { get; private set; }

        /// <summary>
        /// Gets or sets custom properties for the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.extendedProperties")]
        public IDictionary<string, string> ExtendedProperties { get; set; }

        /// <summary>
        /// Gets the display name of the resource most related to this alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.compromisedEntity")]
        public string CompromisedEntity { get; private set; }

    }
}
