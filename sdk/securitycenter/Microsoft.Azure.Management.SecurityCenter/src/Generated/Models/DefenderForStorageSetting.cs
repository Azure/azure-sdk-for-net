// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Defender for Storage resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DefenderForStorageSetting : Resource
    {
        /// <summary>
        /// Initializes a new instance of the DefenderForStorageSetting class.
        /// </summary>
        public DefenderForStorageSetting()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DefenderForStorageSetting class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="isEnabled">Indicates whether Defender for Storage is
        /// enabled on this storage account.</param>
        /// <param name="isEnabled1">Indicates whether On Upload malware
        /// scanning should be enabled.</param>
        /// <param name="capGBPerMonth">Defines the max GB to be scanned per
        /// Month. Set to -1 if no capping is needed.</param>
        /// <param name="operationStatus">Upon failure or partial success.
        /// Additional data describing Malware Scanning enable/disable
        /// operation.</param>
        /// <param name="isEnabled2">Indicates whether Sensitive Data Discovery
        /// should be enabled.</param>
        /// <param name="operationStatus1">Upon failure or partial success.
        /// Additional data describing Sensitive Data Discovery enable/disable
        /// operation.</param>
        /// <param name="overrideSubscriptionLevelSettings">Indicates whether
        /// the settings defined for this storage account should override the
        /// settings defined for the subscription.</param>
        public DefenderForStorageSetting(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), bool? isEnabled = default(bool?), bool? isEnabled1 = default(bool?), int? capGBPerMonth = default(int?), OperationStatus operationStatus = default(OperationStatus), bool? isEnabled2 = default(bool?), OperationStatus operationStatus1 = default(OperationStatus), bool? overrideSubscriptionLevelSettings = default(bool?))
            : base(id, name, type, systemData)
        {
            IsEnabled = isEnabled;
            IsEnabled1 = isEnabled1;
            CapGBPerMonth = capGBPerMonth;
            OperationStatus = operationStatus;
            IsEnabled2 = isEnabled2;
            OperationStatus1 = operationStatus1;
            OverrideSubscriptionLevelSettings = overrideSubscriptionLevelSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether Defender for Storage is enabled on
        /// this storage account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// Gets or sets indicates whether On Upload malware scanning should be
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.malwareScanning.onUpload.isEnabled")]
        public bool? IsEnabled1 { get; set; }

        /// <summary>
        /// Gets or sets defines the max GB to be scanned per Month. Set to -1
        /// if no capping is needed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.malwareScanning.onUpload.capGBPerMonth")]
        public int? CapGBPerMonth { get; set; }

        /// <summary>
        /// Gets upon failure or partial success. Additional data describing
        /// Malware Scanning enable/disable operation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.malwareScanning.operationStatus")]
        public OperationStatus OperationStatus { get; private set; }

        /// <summary>
        /// Gets or sets indicates whether Sensitive Data Discovery should be
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sensitiveDataDiscovery.isEnabled")]
        public bool? IsEnabled2 { get; set; }

        /// <summary>
        /// Gets upon failure or partial success. Additional data describing
        /// Sensitive Data Discovery enable/disable operation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sensitiveDataDiscovery.operationStatus")]
        public OperationStatus OperationStatus1 { get; private set; }

        /// <summary>
        /// Gets or sets indicates whether the settings defined for this
        /// storage account should override the settings defined for the
        /// subscription.
        /// </summary>
        [JsonProperty(PropertyName = "properties.overrideSubscriptionLevelSettings")]
        public bool? OverrideSubscriptionLevelSettings { get; set; }

    }
}
