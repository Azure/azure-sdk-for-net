// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configures where to store the OMS agent data for workspaces under a
    /// scope
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkspaceSetting : Resource
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceSetting class.
        /// </summary>
        public WorkspaceSetting()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceSetting class.
        /// </summary>
        /// <param name="workspaceId">The full Azure ID of the workspace to
        /// save the data in</param>
        /// <param name="scope">All the VMs in this scope will send their
        /// security data to the mentioned workspace unless overridden by a
        /// setting with more specific scope</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        public WorkspaceSetting(string workspaceId, string scope, string id = default(string), string name = default(string), string type = default(string))
            : base(id, name, type)
        {
            WorkspaceId = workspaceId;
            Scope = scope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the full Azure ID of the workspace to save the data in
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceId")]
        public string WorkspaceId { get; set; }

        /// <summary>
        /// Gets or sets all the VMs in this scope will send their security
        /// data to the mentioned workspace unless overridden by a setting with
        /// more specific scope
        /// </summary>
        [JsonProperty(PropertyName = "properties.scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (WorkspaceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WorkspaceId");
            }
            if (Scope == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Scope");
            }
        }
    }
}
