// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Additional context fields for server vulnerability assessment
    /// </summary>
    [Newtonsoft.Json.JsonObject("ServerVulnerabilityAssessment")]
    public partial class ServerVulnerabilityProperties : AdditionalData
    {
        /// <summary>
        /// Initializes a new instance of the ServerVulnerabilityProperties
        /// class.
        /// </summary>
        public ServerVulnerabilityProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerVulnerabilityProperties
        /// class.
        /// </summary>
        /// <param name="type">Vulnerability Type. e.g: Vulnerability,
        /// Potential Vulnerability, Information Gathered</param>
        /// <param name="cvss">Dictionary from cvss version to cvss details
        /// object</param>
        /// <param name="patchable">Indicates whether a patch is available or
        /// not</param>
        /// <param name="cve">List of CVEs</param>
        /// <param name="threat">Threat name</param>
        /// <param name="publishedTime">Published time</param>
        public ServerVulnerabilityProperties(string type = default(string), IDictionary<string, CVSS> cvss = default(IDictionary<string, CVSS>), bool? patchable = default(bool?), IList<CVE> cve = default(IList<CVE>), string threat = default(string), System.DateTime? publishedTime = default(System.DateTime?), IList<VendorReference> vendorReferences = default(IList<VendorReference>))
        {
            Type = type;
            Cvss = cvss;
            Patchable = patchable;
            Cve = cve;
            Threat = threat;
            PublishedTime = publishedTime;
            VendorReferences = vendorReferences;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets vulnerability Type. e.g: Vulnerability, Potential
        /// Vulnerability, Information Gathered
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets dictionary from cvss version to cvss details object
        /// </summary>
        [JsonProperty(PropertyName = "cvss")]
        public IDictionary<string, CVSS> Cvss { get; private set; }

        /// <summary>
        /// Gets indicates whether a patch is available or not
        /// </summary>
        [JsonProperty(PropertyName = "patchable")]
        public bool? Patchable { get; private set; }

        /// <summary>
        /// Gets list of CVEs
        /// </summary>
        [JsonProperty(PropertyName = "cve")]
        public IList<CVE> Cve { get; private set; }

        /// <summary>
        /// Gets threat name
        /// </summary>
        [JsonProperty(PropertyName = "threat")]
        public string Threat { get; private set; }

        /// <summary>
        /// Gets published time
        /// </summary>
        [JsonProperty(PropertyName = "publishedTime")]
        public System.DateTime? PublishedTime { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vendorReferences")]
        public IList<VendorReference> VendorReferences { get; private set; }

    }
}
