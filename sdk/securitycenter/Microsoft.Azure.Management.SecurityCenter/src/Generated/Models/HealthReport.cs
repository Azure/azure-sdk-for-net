// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The health report resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class HealthReport : Resource
    {
        /// <summary>
        /// Initializes a new instance of the HealthReport class.
        /// </summary>
        public HealthReport()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HealthReport class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="affectedDefendersPlans">The affected defenders plans
        /// by unhealthy report</param>
        /// <param name="affectedDefendersSubPlans">The affected defenders sub
        /// plans by unhealthy report</param>
        /// <param name="reportAdditionalData">Additional data for the given
        /// health report, this field can include more details on the resource
        /// and the health scenario.</param>
        /// <param name="issues">A collection of the issues in the
        /// report</param>
        public HealthReport(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), ResourceDetailsModel resourceDetails = default(ResourceDetailsModel), EnvironmentDetails environmentDetails = default(EnvironmentDetails), HealthDataClassification healthDataClassification = default(HealthDataClassification), Status1 status = default(Status1), IList<string> affectedDefendersPlans = default(IList<string>), IList<string> affectedDefendersSubPlans = default(IList<string>), IDictionary<string, string> reportAdditionalData = default(IDictionary<string, string>), IList<Issue> issues = default(IList<Issue>))
            : base(id, name, type, systemData)
        {
            ResourceDetails = resourceDetails;
            EnvironmentDetails = environmentDetails;
            HealthDataClassification = healthDataClassification;
            Status = status;
            AffectedDefendersPlans = affectedDefendersPlans;
            AffectedDefendersSubPlans = affectedDefendersSubPlans;
            ReportAdditionalData = reportAdditionalData;
            Issues = issues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceDetails")]
        public ResourceDetailsModel ResourceDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.environmentDetails")]
        public EnvironmentDetails EnvironmentDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.healthDataClassification")]
        public HealthDataClassification HealthDataClassification { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public Status1 Status { get; set; }

        /// <summary>
        /// Gets or sets the affected defenders plans by unhealthy report
        /// </summary>
        [JsonProperty(PropertyName = "properties.affectedDefendersPlans")]
        public IList<string> AffectedDefendersPlans { get; set; }

        /// <summary>
        /// Gets or sets the affected defenders sub plans by unhealthy report
        /// </summary>
        [JsonProperty(PropertyName = "properties.affectedDefendersSubPlans")]
        public IList<string> AffectedDefendersSubPlans { get; set; }

        /// <summary>
        /// Gets additional data for the given health report, this field can
        /// include more details on the resource and the health scenario.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reportAdditionalData")]
        public IDictionary<string, string> ReportAdditionalData { get; private set; }

        /// <summary>
        /// Gets or sets a collection of the issues in the report
        /// </summary>
        [JsonProperty(PropertyName = "properties.issues")]
        public IList<Issue> Issues { get; set; }

    }
}
