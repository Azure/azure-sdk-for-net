// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Information about package downloads
    /// </summary>
    public partial class PackageDownloads
    {
        /// <summary>
        /// Initializes a new instance of the PackageDownloads class.
        /// </summary>
        public PackageDownloads()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PackageDownloads class.
        /// </summary>
        /// <param name="sensor">Contains all Sensor binary downloads</param>
        /// <param name="centralManager">All downloads for Central
        /// Manager</param>
        /// <param name="threatIntelligence">All downloads for threat
        /// intelligence</param>
        /// <param name="snmp">SNMP Server file</param>
        /// <param name="wmiTool">Used for local configuration export</param>
        /// <param name="authorizedDevicesImportTemplate">Authorized devices
        /// import template</param>
        /// <param name="deviceInformationUpdateImportTemplate">Authorized
        /// devices import template</param>
        public PackageDownloads(PackageDownloadsSensor sensor = default(PackageDownloadsSensor), PackageDownloadsCentralManager centralManager = default(PackageDownloadsCentralManager), IList<PackageDownloadInfo> threatIntelligence = default(IList<PackageDownloadInfo>), IList<PackageDownloadInfo> snmp = default(IList<PackageDownloadInfo>), IList<PackageDownloadInfo> wmiTool = default(IList<PackageDownloadInfo>), IList<PackageDownloadInfo> authorizedDevicesImportTemplate = default(IList<PackageDownloadInfo>), IList<PackageDownloadInfo> deviceInformationUpdateImportTemplate = default(IList<PackageDownloadInfo>))
        {
            Sensor = sensor;
            CentralManager = centralManager;
            ThreatIntelligence = threatIntelligence;
            Snmp = snmp;
            WmiTool = wmiTool;
            AuthorizedDevicesImportTemplate = authorizedDevicesImportTemplate;
            DeviceInformationUpdateImportTemplate = deviceInformationUpdateImportTemplate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets contains all Sensor binary downloads
        /// </summary>
        [JsonProperty(PropertyName = "sensor")]
        public PackageDownloadsSensor Sensor { get; private set; }

        /// <summary>
        /// Gets all downloads for Central Manager
        /// </summary>
        [JsonProperty(PropertyName = "centralManager")]
        public PackageDownloadsCentralManager CentralManager { get; private set; }

        /// <summary>
        /// Gets all downloads for threat intelligence
        /// </summary>
        [JsonProperty(PropertyName = "threatIntelligence")]
        public IList<PackageDownloadInfo> ThreatIntelligence { get; private set; }

        /// <summary>
        /// Gets SNMP Server file
        /// </summary>
        [JsonProperty(PropertyName = "snmp")]
        public IList<PackageDownloadInfo> Snmp { get; private set; }

        /// <summary>
        /// Gets used for local configuration export
        /// </summary>
        [JsonProperty(PropertyName = "wmiTool")]
        public IList<PackageDownloadInfo> WmiTool { get; private set; }

        /// <summary>
        /// Gets authorized devices import template
        /// </summary>
        [JsonProperty(PropertyName = "authorizedDevicesImportTemplate")]
        public IList<PackageDownloadInfo> AuthorizedDevicesImportTemplate { get; private set; }

        /// <summary>
        /// Gets authorized devices import template
        /// </summary>
        [JsonProperty(PropertyName = "deviceInformationUpdateImportTemplate")]
        public IList<PackageDownloadInfo> DeviceInformationUpdateImportTemplate { get; private set; }

    }
}
