// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Security GovernanceAssignment over a given scope
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class GovernanceAssignment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the GovernanceAssignment class.
        /// </summary>
        public GovernanceAssignment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GovernanceAssignment class.
        /// </summary>
        /// <param name="remediationDueDate">The remediation due-date - after
        /// this date Secure Score will be affected (in case of  active
        /// grace-period)</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="owner">The Owner for the governance assignment - e.g.
        /// user@contoso.com - see example</param>
        /// <param name="remediationEta">The ETA (estimated time of arrival)
        /// for remediation (optional), see example</param>
        /// <param name="isGracePeriod">Defines whether there is a grace period
        /// on the governance assignment</param>
        /// <param name="governanceEmailNotification">The email notifications
        /// settings for the governance rule, states whether to disable
        /// notifications for mangers and owners</param>
        /// <param name="additionalData">The additional data for the governance
        /// assignment - e.g. links to ticket (optional), see example</param>
        public GovernanceAssignment(System.DateTime remediationDueDate, string id = default(string), string name = default(string), string type = default(string), string owner = default(string), RemediationEta remediationEta = default(RemediationEta), bool? isGracePeriod = default(bool?), GovernanceEmailNotification governanceEmailNotification = default(GovernanceEmailNotification), GovernanceAssignmentAdditionalData additionalData = default(GovernanceAssignmentAdditionalData))
            : base(id, name, type)
        {
            Owner = owner;
            RemediationDueDate = remediationDueDate;
            RemediationEta = remediationEta;
            IsGracePeriod = isGracePeriod;
            GovernanceEmailNotification = governanceEmailNotification;
            AdditionalData = additionalData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Owner for the governance assignment - e.g.
        /// user@contoso.com - see example
        /// </summary>
        [JsonProperty(PropertyName = "properties.owner")]
        public string Owner { get; set; }

        /// <summary>
        /// Gets or sets the remediation due-date - after this date Secure
        /// Score will be affected (in case of  active grace-period)
        /// </summary>
        [JsonProperty(PropertyName = "properties.remediationDueDate")]
        public System.DateTime RemediationDueDate { get; set; }

        /// <summary>
        /// Gets or sets the ETA (estimated time of arrival) for remediation
        /// (optional), see example
        /// </summary>
        [JsonProperty(PropertyName = "properties.remediationEta")]
        public RemediationEta RemediationEta { get; set; }

        /// <summary>
        /// Gets or sets defines whether there is a grace period on the
        /// governance assignment
        /// </summary>
        [JsonProperty(PropertyName = "properties.isGracePeriod")]
        public bool? IsGracePeriod { get; set; }

        /// <summary>
        /// Gets or sets the email notifications settings for the governance
        /// rule, states whether to disable notifications for mangers and
        /// owners
        /// </summary>
        [JsonProperty(PropertyName = "properties.governanceEmailNotification")]
        public GovernanceEmailNotification GovernanceEmailNotification { get; set; }

        /// <summary>
        /// Gets or sets the additional data for the governance assignment -
        /// e.g. links to ticket (optional), see example
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalData")]
        public GovernanceAssignmentAdditionalData AdditionalData { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RemediationEta != null)
            {
                RemediationEta.Validate();
            }
            if (AdditionalData != null)
            {
                AdditionalData.Validate();
            }
        }
    }
}
