// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Statistical information about the number of recommendations per device,
    /// per recommendation type.
    /// </summary>
    public partial class IoTSecurityDeviceRecommendation
    {
        /// <summary>
        /// Initializes a new instance of the IoTSecurityDeviceRecommendation
        /// class.
        /// </summary>
        public IoTSecurityDeviceRecommendation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IoTSecurityDeviceRecommendation
        /// class.
        /// </summary>
        /// <param name="recommendationDisplayName">Display name of the
        /// recommendation.</param>
        /// <param name="reportedSeverity">Assessed recommendation severity.
        /// Possible values include: 'Informational', 'Low', 'Medium',
        /// 'High'</param>
        /// <param name="devicesCount">Number of devices with this
        /// recommendation.</param>
        public IoTSecurityDeviceRecommendation(string recommendationDisplayName = default(string), string reportedSeverity = default(string), int? devicesCount = default(int?))
        {
            RecommendationDisplayName = recommendationDisplayName;
            ReportedSeverity = reportedSeverity;
            DevicesCount = devicesCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets display name of the recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "recommendationDisplayName")]
        public string RecommendationDisplayName { get; private set; }

        /// <summary>
        /// Gets assessed recommendation severity. Possible values include:
        /// 'Informational', 'Low', 'Medium', 'High'
        /// </summary>
        [JsonProperty(PropertyName = "reportedSeverity")]
        public string ReportedSeverity { get; private set; }

        /// <summary>
        /// Gets number of devices with this recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "devicesCount")]
        public int? DevicesCount { get; private set; }

    }
}
