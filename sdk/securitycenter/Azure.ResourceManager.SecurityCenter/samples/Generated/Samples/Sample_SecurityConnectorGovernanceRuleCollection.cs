// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.SecurityCenter;
using Azure.ResourceManager.SecurityCenter.Models;

namespace Azure.ResourceManager.SecurityCenter.Samples
{
    public partial class Sample_SecurityConnectorGovernanceRuleCollection
    {
        // List security governanceRules by security connector level scope
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListSecurityGovernanceRulesBySecurityConnectorLevelScope()
        {
            // Generated from example definition: specification/security/resource-manager/Microsoft.Security/preview/2022-01-01-preview/examples/GovernanceRules/ListBySecurityConnectorGovernanceRules_example.json
            // this example is just showing the usage of "SecurityConnectorGovernanceRules_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityConnectorResource created on azure
            // for more information of creating SecurityConnectorResource, please refer to the document of SecurityConnectorResource
            string subscriptionId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23";
            string resourceGroupName = "gcpResourceGroup";
            string securityConnectorName = "gcpconnector";
            ResourceIdentifier securityConnectorResourceId = SecurityConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, securityConnectorName);
            SecurityConnectorResource securityConnector = client.GetSecurityConnectorResource(securityConnectorResourceId);

            // get the collection of this SecurityConnectorGovernanceRuleResource
            SecurityConnectorGovernanceRuleCollection collection = securityConnector.GetSecurityConnectorGovernanceRules();

            // invoke the operation and iterate over the result
            await foreach (SecurityConnectorGovernanceRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                GovernanceRuleData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Get security governanceRules by specific governanceRuleId
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetSecurityGovernanceRulesBySpecificGovernanceRuleId()
        {
            // Generated from example definition: specification/security/resource-manager/Microsoft.Security/preview/2022-01-01-preview/examples/GovernanceRules/GetSecurityConnectorGovernanceRule_example.json
            // this example is just showing the usage of "SecurityConnectorGovernanceRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityConnectorResource created on azure
            // for more information of creating SecurityConnectorResource, please refer to the document of SecurityConnectorResource
            string subscriptionId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23";
            string resourceGroupName = "gcpResourceGroup";
            string securityConnectorName = "gcpconnector";
            ResourceIdentifier securityConnectorResourceId = SecurityConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, securityConnectorName);
            SecurityConnectorResource securityConnector = client.GetSecurityConnectorResource(securityConnectorResourceId);

            // get the collection of this SecurityConnectorGovernanceRuleResource
            SecurityConnectorGovernanceRuleCollection collection = securityConnector.GetSecurityConnectorGovernanceRules();

            // invoke the operation
            string ruleId = "ad9a8e26-29d9-4829-bb30-e597a58cdbb8";
            SecurityConnectorGovernanceRuleResource result = await collection.GetAsync(ruleId);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GovernanceRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get security governanceRules by specific governanceRuleId
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetSecurityGovernanceRulesBySpecificGovernanceRuleId()
        {
            // Generated from example definition: specification/security/resource-manager/Microsoft.Security/preview/2022-01-01-preview/examples/GovernanceRules/GetSecurityConnectorGovernanceRule_example.json
            // this example is just showing the usage of "SecurityConnectorGovernanceRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityConnectorResource created on azure
            // for more information of creating SecurityConnectorResource, please refer to the document of SecurityConnectorResource
            string subscriptionId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23";
            string resourceGroupName = "gcpResourceGroup";
            string securityConnectorName = "gcpconnector";
            ResourceIdentifier securityConnectorResourceId = SecurityConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, securityConnectorName);
            SecurityConnectorResource securityConnector = client.GetSecurityConnectorResource(securityConnectorResourceId);

            // get the collection of this SecurityConnectorGovernanceRuleResource
            SecurityConnectorGovernanceRuleCollection collection = securityConnector.GetSecurityConnectorGovernanceRules();

            // invoke the operation
            string ruleId = "ad9a8e26-29d9-4829-bb30-e597a58cdbb8";
            bool result = await collection.ExistsAsync(ruleId);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Create Governance rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateGovernanceRule()
        {
            // Generated from example definition: specification/security/resource-manager/Microsoft.Security/preview/2022-01-01-preview/examples/GovernanceRules/PutSecurityConnectorGovernanceRule_example.json
            // this example is just showing the usage of "SecurityConnectorGovernanceRules_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityConnectorResource created on azure
            // for more information of creating SecurityConnectorResource, please refer to the document of SecurityConnectorResource
            string subscriptionId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23";
            string resourceGroupName = "gcpResourceGroup";
            string securityConnectorName = "gcpconnector";
            ResourceIdentifier securityConnectorResourceId = SecurityConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, securityConnectorName);
            SecurityConnectorResource securityConnector = client.GetSecurityConnectorResource(securityConnectorResourceId);

            // get the collection of this SecurityConnectorGovernanceRuleResource
            SecurityConnectorGovernanceRuleCollection collection = securityConnector.GetSecurityConnectorGovernanceRules();

            // invoke the operation
            string ruleId = "ad9a8e26-29d9-4829-bb30-e597a58cdbb8";
            GovernanceRuleData data = new GovernanceRuleData()
            {
                DisplayName = "GCP Admin's rule",
                Description = "A rule on critical GCP recommendations",
                RemediationTimeframe = "7.00:00:00",
                IsGracePeriod = true,
                RulePriority = 200,
                IsDisabled = false,
                RuleType = GovernanceRuleType.Integrated,
                SourceResourceType = GovernanceRuleSourceResourceType.Assessments,
                ConditionSets =
{
BinaryData.FromObjectAsJson(new Dictionary<string, object>()
{
["conditions"] = new object[] { new Dictionary<string, object>()
{
["operator"] = "In",
["property"] = "$.AssessmentKey",
["value"] = "[\"b1cd27e0-4ecc-4246-939f-49c426d9d72f\", \"fe83f80b-073d-4ccf-93d9-6797eb870201\"]"} }})
},
                OwnerSource = new GovernanceRuleOwnerSource()
                {
                    SourceType = GovernanceRuleOwnerSourceType.Manually,
                    Value = "user@contoso.com",
                },
                GovernanceEmailNotification = new GovernanceRuleEmailNotification()
                {
                    IsManagerEmailNotificationDisabled = true,
                    IsOwnerEmailNotificationDisabled = false,
                },
            };
            ArmOperation<SecurityConnectorGovernanceRuleResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, ruleId, data);
            SecurityConnectorGovernanceRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GovernanceRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
