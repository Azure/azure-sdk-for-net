// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class PathRecommendation : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Path))
            {
                writer.WritePropertyName("path"u8);
                writer.WriteStringValue(Path);
            }
            if (Core.Optional.IsDefined(Action))
            {
                writer.WritePropertyName("action"u8);
                writer.WriteStringValue(Action.Value.ToString());
            }
            if (Core.Optional.IsDefined(IotSecurityRecommendationType))
            {
                writer.WritePropertyName("type"u8);
                writer.WriteStringValue(IotSecurityRecommendationType.Value.ToString());
            }
            if (Core.Optional.IsDefined(PublisherInfo))
            {
                writer.WritePropertyName("publisherInfo"u8);
                writer.WriteObjectValue(PublisherInfo);
            }
            if (Core.Optional.IsDefined(IsCommon))
            {
                writer.WritePropertyName("common"u8);
                writer.WriteBooleanValue(IsCommon.Value);
            }
            if (Core.Optional.IsCollectionDefined(UserSids))
            {
                writer.WritePropertyName("userSids"u8);
                writer.WriteStartArray();
                foreach (var item in UserSids)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsCollectionDefined(Usernames))
            {
                writer.WritePropertyName("usernames"u8);
                writer.WriteStartArray();
                foreach (var item in Usernames)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsDefined(FileType))
            {
                writer.WritePropertyName("fileType"u8);
                writer.WriteStringValue(FileType.Value.ToString());
            }
            if (Core.Optional.IsDefined(ConfigurationStatus))
            {
                writer.WritePropertyName("configurationStatus"u8);
                writer.WriteStringValue(ConfigurationStatus.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static PathRecommendation DeserializePathRecommendation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> path = default;
            Core.Optional<RecommendationAction> action = default;
            Core.Optional<IotSecurityRecommendationType> type = default;
            Core.Optional<SecurityCenterPublisherInfo> publisherInfo = default;
            Core.Optional<bool> common = default;
            Core.Optional<IList<string>> userSids = default;
            Core.Optional<IList<UserRecommendation>> usernames = default;
            Core.Optional<PathRecommendationFileType> fileType = default;
            Core.Optional<SecurityCenterConfigurationStatus> configurationStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("path"u8))
                {
                    path = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("action"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    action = new RecommendationAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new IotSecurityRecommendationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("publisherInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    publisherInfo = SecurityCenterPublisherInfo.DeserializeSecurityCenterPublisherInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("common"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    common = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("userSids"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    userSids = array;
                    continue;
                }
                if (property.NameEquals("usernames"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<UserRecommendation> array = new List<UserRecommendation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(UserRecommendation.DeserializeUserRecommendation(item));
                    }
                    usernames = array;
                    continue;
                }
                if (property.NameEquals("fileType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    fileType = new PathRecommendationFileType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("configurationStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    configurationStatus = new SecurityCenterConfigurationStatus(property.Value.GetString());
                    continue;
                }
            }
            return new PathRecommendation(path.Value, Core.Optional.ToNullable(action), Core.Optional.ToNullable(type), publisherInfo.Value, Core.Optional.ToNullable(common), Core.Optional.ToList(userSids), Core.Optional.ToList(usernames), Core.Optional.ToNullable(fileType), Core.Optional.ToNullable(configurationStatus));
        }
    }
}
