// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class GetSensitivitySettingsResponsePropertiesMipInformation
    {
        internal static GetSensitivitySettingsResponsePropertiesMipInformation DeserializeGetSensitivitySettingsResponsePropertiesMipInformation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<MipIntegrationStatus> mipIntegrationStatus = default;
            Optional<IReadOnlyList<Label>> labels = default;
            Optional<IReadOnlyList<InfoType>> customInfoTypes = default;
            Optional<IReadOnlyList<BuiltInInfoType>> builtInInfoTypes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("mipIntegrationStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    mipIntegrationStatus = new MipIntegrationStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("labels"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Label> array = new List<Label>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Label.DeserializeLabel(item));
                    }
                    labels = array;
                    continue;
                }
                if (property.NameEquals("customInfoTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<InfoType> array = new List<InfoType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(InfoType.DeserializeInfoType(item));
                    }
                    customInfoTypes = array;
                    continue;
                }
                if (property.NameEquals("builtInInfoTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<BuiltInInfoType> array = new List<BuiltInInfoType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BuiltInInfoType.DeserializeBuiltInInfoType(item));
                    }
                    builtInInfoTypes = array;
                    continue;
                }
            }
            return new GetSensitivitySettingsResponsePropertiesMipInformation(Optional.ToNullable(mipIntegrationStatus), Optional.ToList(labels), Optional.ToList(customInfoTypes), Optional.ToList(builtInInfoTypes));
        }
    }
}
