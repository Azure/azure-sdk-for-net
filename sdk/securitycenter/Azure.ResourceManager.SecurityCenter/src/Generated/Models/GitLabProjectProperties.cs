// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    /// <summary> GitLab Project properties. </summary>
    public partial class GitLabProjectProperties
    {
        /// <summary> Initializes a new instance of <see cref="GitLabProjectProperties"/>. </summary>
        public GitLabProjectProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="GitLabProjectProperties"/>. </summary>
        /// <param name="provisioningStatusMessage"> Gets or sets resource status message. </param>
        /// <param name="provisioningStatusUpdateTimeUtc"> Gets or sets time when resource was last checked. </param>
        /// <param name="provisioningState">
        /// The provisioning state of the resource.
        ///
        /// Pending - Provisioning pending.
        /// Failed - Provisioning failed.
        /// Succeeded - Successful provisioning.
        /// Canceled - Provisioning canceled.
        /// PendingDeletion - Deletion pending.
        /// DeletionSuccess - Deletion successful.
        /// DeletionFailure - Deletion failure.
        /// </param>
        /// <param name="fullyQualifiedName">
        /// Gets or sets the fully-qualified name of the project object.
        ///
        /// This contains the entire hierarchy where entities are separated by the '$' character.
        /// </param>
        /// <param name="fullyQualifiedFriendlyName">
        /// Gets or sets the human readable fully-qualified name of the Project object.
        ///
        /// This contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/' character.
        /// </param>
        /// <param name="fullyQualifiedParentGroupName">
        /// Gets or sets the fully-qualified name of the project's parent group object.
        ///
        /// This contains the entire hierarchy where namespaces are separated by the '$' character.
        /// </param>
        /// <param name="uri"> Gets or sets the url of the GitLab Project. </param>
        /// <param name="onboardingState">
        /// Details about resource onboarding status across all connectors.
        ///
        /// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
        /// Onboarded - this resource has already been onboarded by the specified connector.
        /// NotOnboarded - this resource has not been onboarded to any connector.
        /// NotApplicable - the onboarding state is not applicable to the current endpoint.
        /// </param>
        internal GitLabProjectProperties(string provisioningStatusMessage, DateTimeOffset? provisioningStatusUpdateTimeUtc, DevOpsProvisioningState? provisioningState, string fullyQualifiedName, string fullyQualifiedFriendlyName, string fullyQualifiedParentGroupName, Uri uri, OnboardingState? onboardingState)
        {
            ProvisioningStatusMessage = provisioningStatusMessage;
            ProvisioningStatusUpdateTimeUtc = provisioningStatusUpdateTimeUtc;
            ProvisioningState = provisioningState;
            FullyQualifiedName = fullyQualifiedName;
            FullyQualifiedFriendlyName = fullyQualifiedFriendlyName;
            FullyQualifiedParentGroupName = fullyQualifiedParentGroupName;
            Uri = uri;
            OnboardingState = onboardingState;
        }

        /// <summary> Gets or sets resource status message. </summary>
        public string ProvisioningStatusMessage { get; }
        /// <summary> Gets or sets time when resource was last checked. </summary>
        public DateTimeOffset? ProvisioningStatusUpdateTimeUtc { get; }
        /// <summary>
        /// The provisioning state of the resource.
        ///
        /// Pending - Provisioning pending.
        /// Failed - Provisioning failed.
        /// Succeeded - Successful provisioning.
        /// Canceled - Provisioning canceled.
        /// PendingDeletion - Deletion pending.
        /// DeletionSuccess - Deletion successful.
        /// DeletionFailure - Deletion failure.
        /// </summary>
        public DevOpsProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Gets or sets the fully-qualified name of the project object.
        ///
        /// This contains the entire hierarchy where entities are separated by the '$' character.
        /// </summary>
        public string FullyQualifiedName { get; }
        /// <summary>
        /// Gets or sets the human readable fully-qualified name of the Project object.
        ///
        /// This contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/' character.
        /// </summary>
        public string FullyQualifiedFriendlyName { get; }
        /// <summary>
        /// Gets or sets the fully-qualified name of the project's parent group object.
        ///
        /// This contains the entire hierarchy where namespaces are separated by the '$' character.
        /// </summary>
        public string FullyQualifiedParentGroupName { get; }
        /// <summary> Gets or sets the url of the GitLab Project. </summary>
        public Uri Uri { get; }
        /// <summary>
        /// Details about resource onboarding status across all connectors.
        ///
        /// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
        /// Onboarded - this resource has already been onboarded by the specified connector.
        /// NotOnboarded - this resource has not been onboarded to any connector.
        /// NotApplicable - the onboarding state is not applicable to the current endpoint.
        /// </summary>
        public OnboardingState? OnboardingState { get; set; }
    }
}
