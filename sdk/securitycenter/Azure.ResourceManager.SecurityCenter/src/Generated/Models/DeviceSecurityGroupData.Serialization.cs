// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityCenter.Models;

namespace Azure.ResourceManager.SecurityCenter
{
    public partial class DeviceSecurityGroupData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(ThresholdRules))
            {
                writer.WritePropertyName("thresholdRules");
                writer.WriteStartArray();
                foreach (var item in ThresholdRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(TimeWindowRules))
            {
                writer.WritePropertyName("timeWindowRules");
                writer.WriteStartArray();
                foreach (var item in TimeWindowRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(AllowlistRules))
            {
                writer.WritePropertyName("allowlistRules");
                writer.WriteStartArray();
                foreach (var item in AllowlistRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(DenylistRules))
            {
                writer.WritePropertyName("denylistRules");
                writer.WriteStartArray();
                foreach (var item in DenylistRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static DeviceSecurityGroupData DeserializeDeviceSecurityGroupData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<IList<ThresholdCustomAlertRule>> thresholdRules = default;
            Optional<IList<TimeWindowCustomAlertRule>> timeWindowRules = default;
            Optional<IList<AllowlistCustomAlertRule>> allowlistRules = default;
            Optional<IList<DenylistCustomAlertRule>> denylistRules = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("thresholdRules"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<ThresholdCustomAlertRule> array = new List<ThresholdCustomAlertRule>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(ThresholdCustomAlertRule.DeserializeThresholdCustomAlertRule(item));
                            }
                            thresholdRules = array;
                            continue;
                        }
                        if (property0.NameEquals("timeWindowRules"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<TimeWindowCustomAlertRule> array = new List<TimeWindowCustomAlertRule>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(TimeWindowCustomAlertRule.DeserializeTimeWindowCustomAlertRule(item));
                            }
                            timeWindowRules = array;
                            continue;
                        }
                        if (property0.NameEquals("allowlistRules"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<AllowlistCustomAlertRule> array = new List<AllowlistCustomAlertRule>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(AllowlistCustomAlertRule.DeserializeAllowlistCustomAlertRule(item));
                            }
                            allowlistRules = array;
                            continue;
                        }
                        if (property0.NameEquals("denylistRules"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<DenylistCustomAlertRule> array = new List<DenylistCustomAlertRule>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(DenylistCustomAlertRule.DeserializeDenylistCustomAlertRule(item));
                            }
                            denylistRules = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new DeviceSecurityGroupData(id, name, type, systemData.Value, Optional.ToList(thresholdRules), Optional.ToList(timeWindowRules), Optional.ToList(allowlistRules), Optional.ToList(denylistRules));
        }
    }
}
