// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class DefenderForContainersGcpOffering : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(NativeCloudConnection))
            {
                writer.WritePropertyName("nativeCloudConnection"u8);
                writer.WriteObjectValue(NativeCloudConnection);
            }
            if (Core.Optional.IsDefined(DataPipelineNativeCloudConnection))
            {
                writer.WritePropertyName("dataPipelineNativeCloudConnection"u8);
                writer.WriteObjectValue(DataPipelineNativeCloudConnection);
            }
            if (Core.Optional.IsDefined(IsAuditLogsAutoProvisioningEnabled))
            {
                writer.WritePropertyName("auditLogsAutoProvisioningFlag"u8);
                writer.WriteBooleanValue(IsAuditLogsAutoProvisioningEnabled.Value);
            }
            if (Core.Optional.IsDefined(IsDefenderAgentAutoProvisioningEnabled))
            {
                writer.WritePropertyName("defenderAgentAutoProvisioningFlag"u8);
                writer.WriteBooleanValue(IsDefenderAgentAutoProvisioningEnabled.Value);
            }
            if (Core.Optional.IsDefined(IsPolicyAgentAutoProvisioningEnabled))
            {
                writer.WritePropertyName("policyAgentAutoProvisioningFlag"u8);
                writer.WriteBooleanValue(IsPolicyAgentAutoProvisioningEnabled.Value);
            }
            writer.WritePropertyName("offeringType"u8);
            writer.WriteStringValue(OfferingType.ToString());
            writer.WriteEndObject();
        }

        internal static DefenderForContainersGcpOffering DeserializeDefenderForContainersGcpOffering(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<DefenderForContainersGcpOfferingNativeCloudConnection> nativeCloudConnection = default;
            Core.Optional<DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection> dataPipelineNativeCloudConnection = default;
            Core.Optional<bool> auditLogsAutoProvisioningFlag = default;
            Core.Optional<bool> defenderAgentAutoProvisioningFlag = default;
            Core.Optional<bool> policyAgentAutoProvisioningFlag = default;
            OfferingType offeringType = default;
            Core.Optional<string> description = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("nativeCloudConnection"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    nativeCloudConnection = DefenderForContainersGcpOfferingNativeCloudConnection.DeserializeDefenderForContainersGcpOfferingNativeCloudConnection(property.Value);
                    continue;
                }
                if (property.NameEquals("dataPipelineNativeCloudConnection"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    dataPipelineNativeCloudConnection = DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection.DeserializeDefenderForContainersGcpOfferingDataPipelineNativeCloudConnection(property.Value);
                    continue;
                }
                if (property.NameEquals("auditLogsAutoProvisioningFlag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    auditLogsAutoProvisioningFlag = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("defenderAgentAutoProvisioningFlag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defenderAgentAutoProvisioningFlag = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("policyAgentAutoProvisioningFlag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    policyAgentAutoProvisioningFlag = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("offeringType"u8))
                {
                    offeringType = new OfferingType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
            }
            return new DefenderForContainersGcpOffering(offeringType, description.Value, nativeCloudConnection.Value, dataPipelineNativeCloudConnection.Value, Core.Optional.ToNullable(auditLogsAutoProvisioningFlag), Core.Optional.ToNullable(defenderAgentAutoProvisioningFlag), Core.Optional.ToNullable(policyAgentAutoProvisioningFlag));
        }
    }
}
