// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class VmRecommendation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ConfigurationStatus))
            {
                writer.WritePropertyName("configurationStatus");
                writer.WriteStringValue(ConfigurationStatus.Value.ToString());
            }
            if (Optional.IsDefined(RecommendationAction))
            {
                writer.WritePropertyName("recommendationAction");
                writer.WriteStringValue(RecommendationAction.Value.ToString());
            }
            if (Optional.IsDefined(ResourceId))
            {
                writer.WritePropertyName("resourceId");
                writer.WriteStringValue(ResourceId);
            }
            if (Optional.IsDefined(EnforcementSupport))
            {
                writer.WritePropertyName("enforcementSupport");
                writer.WriteStringValue(EnforcementSupport.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static VmRecommendation DeserializeVmRecommendation(JsonElement element)
        {
            Optional<ConfigurationStatus> configurationStatus = default;
            Optional<RecommendationAction> recommendationAction = default;
            Optional<string> resourceId = default;
            Optional<EnforcementSupport> enforcementSupport = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("configurationStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    configurationStatus = new ConfigurationStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("recommendationAction"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    recommendationAction = new RecommendationAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceId"))
                {
                    resourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("enforcementSupport"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    enforcementSupport = new EnforcementSupport(property.Value.GetString());
                    continue;
                }
            }
            return new VmRecommendation(Optional.ToNullable(configurationStatus), Optional.ToNullable(recommendationAction), resourceId.Value, Optional.ToNullable(enforcementSupport));
        }
    }
}
