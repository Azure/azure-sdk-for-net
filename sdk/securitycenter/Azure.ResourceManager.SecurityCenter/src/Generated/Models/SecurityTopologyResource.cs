// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    /// <summary> The SecurityTopologyResource. </summary>
    public partial class SecurityTopologyResource : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="SecurityTopologyResource"/>. </summary>
        public SecurityTopologyResource()
        {
            TopologyResources = new ChangeTrackingList<TopologySingleResource>();
        }

        /// <summary> Initializes a new instance of <see cref="SecurityTopologyResource"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="calculatedOn"> The UTC time on which the topology was calculated. </param>
        /// <param name="topologyResources"> Azure resources which are part of this topology resource. </param>
        /// <param name="location"> Location where the resource is stored. </param>
        internal SecurityTopologyResource(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DateTimeOffset? calculatedOn, IReadOnlyList<TopologySingleResource> topologyResources, AzureLocation? location) : base(id, name, resourceType, systemData)
        {
            CalculatedOn = calculatedOn;
            TopologyResources = topologyResources;
            Location = location;
        }

        /// <summary> The UTC time on which the topology was calculated. </summary>
        public DateTimeOffset? CalculatedOn { get; }
        /// <summary> Azure resources which are part of this topology resource. </summary>
        public IReadOnlyList<TopologySingleResource> TopologyResources { get; }
        /// <summary> Location where the resource is stored. </summary>
        public AzureLocation? Location { get; }
    }
}
