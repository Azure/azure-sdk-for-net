// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class GetSensitivitySettingsResponseProperties
    {
        internal static GetSensitivitySettingsResponseProperties DeserializeGetSensitivitySettingsResponseProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<Guid>> sensitiveInfoTypesIds = default;
            Optional<float> sensitivityThresholdLabelOrder = default;
            Optional<Guid> sensitivityThresholdLabelId = default;
            Optional<GetSensitivitySettingsResponsePropertiesMipInformation> mipInformation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sensitiveInfoTypesIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Guid> array = new List<Guid>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetGuid());
                    }
                    sensitiveInfoTypesIds = array;
                    continue;
                }
                if (property.NameEquals("sensitivityThresholdLabelOrder"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sensitivityThresholdLabelOrder = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("sensitivityThresholdLabelId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sensitivityThresholdLabelId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("mipInformation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    mipInformation = GetSensitivitySettingsResponsePropertiesMipInformation.DeserializeGetSensitivitySettingsResponsePropertiesMipInformation(property.Value);
                    continue;
                }
            }
            return new GetSensitivitySettingsResponseProperties(Optional.ToList(sensitiveInfoTypesIds), Optional.ToNullable(sensitivityThresholdLabelOrder), Optional.ToNullable(sensitivityThresholdLabelId), mipInformation.Value);
        }
    }
}
