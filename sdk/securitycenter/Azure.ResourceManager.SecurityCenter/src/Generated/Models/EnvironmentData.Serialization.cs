// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class EnvironmentData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("environmentType");
            writer.WriteStringValue(EnvironmentType.ToString());
            writer.WriteEndObject();
        }

        internal static EnvironmentData DeserializeEnvironmentData(JsonElement element)
        {
            if (element.TryGetProperty("environmentType", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "AwsAccount": return AWSEnvironmentData.DeserializeAWSEnvironmentData(element);
                    case "AzureDevOpsScope": return AzureDevOpsScopeEnvironmentData.DeserializeAzureDevOpsScopeEnvironmentData(element);
                    case "GcpProject": return GcpProjectEnvironmentData.DeserializeGcpProjectEnvironmentData(element);
                    case "GithubScope": return GithubScopeEnvironmentData.DeserializeGithubScopeEnvironmentData(element);
                }
            }
            EnvironmentType environmentType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("environmentType"))
                {
                    environmentType = new EnvironmentType(property.Value.GetString());
                    continue;
                }
            }
            return new UnknownEnvironmentData(environmentType);
        }
    }
}
