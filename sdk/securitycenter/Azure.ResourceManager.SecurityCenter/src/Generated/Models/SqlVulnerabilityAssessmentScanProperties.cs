// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    /// <summary>
    /// A vulnerability assessment scan record properties.
    /// Serialized Name: ScanProperties
    /// </summary>
    public partial class SqlVulnerabilityAssessmentScanProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SqlVulnerabilityAssessmentScanProperties"/>. </summary>
        public SqlVulnerabilityAssessmentScanProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SqlVulnerabilityAssessmentScanProperties"/>. </summary>
        /// <param name="triggerType">
        /// The scan trigger type.
        /// Serialized Name: ScanProperties.triggerType
        /// </param>
        /// <param name="state">
        /// The scan status.
        /// Serialized Name: ScanProperties.state
        /// </param>
        /// <param name="server">
        /// The server name.
        /// Serialized Name: ScanProperties.server
        /// </param>
        /// <param name="database">
        /// The database name.
        /// Serialized Name: ScanProperties.database
        /// </param>
        /// <param name="sqlVersion">
        /// The SQL version.
        /// Serialized Name: ScanProperties.sqlVersion
        /// </param>
        /// <param name="startOn">
        /// The scan start time (UTC).
        /// Serialized Name: ScanProperties.startTime
        /// </param>
        /// <param name="endOn">
        /// Scan results are valid until end time (UTC).
        /// Serialized Name: ScanProperties.endTime
        /// </param>
        /// <param name="highSeverityFailedRulesCount">
        /// The number of failed rules with high severity.
        /// Serialized Name: ScanProperties.highSeverityFailedRulesCount
        /// </param>
        /// <param name="mediumSeverityFailedRulesCount">
        /// The number of failed rules with medium severity.
        /// Serialized Name: ScanProperties.mediumSeverityFailedRulesCount
        /// </param>
        /// <param name="lowSeverityFailedRulesCount">
        /// The number of failed rules with low severity.
        /// Serialized Name: ScanProperties.lowSeverityFailedRulesCount
        /// </param>
        /// <param name="totalPassedRulesCount">
        /// The number of total passed rules.
        /// Serialized Name: ScanProperties.totalPassedRulesCount
        /// </param>
        /// <param name="totalFailedRulesCount">
        /// The number of total failed rules.
        /// Serialized Name: ScanProperties.totalFailedRulesCount
        /// </param>
        /// <param name="totalRulesCount">
        /// The number of total rules assessed.
        /// Serialized Name: ScanProperties.totalRulesCount
        /// </param>
        /// <param name="isBaselineApplied">
        /// Baseline created for this database, and has one or more rules.
        /// Serialized Name: ScanProperties.isBaselineApplied
        /// </param>
        /// <param name="lastScanOn">
        /// Last scan time.
        /// Serialized Name: ScanProperties.lastScanTime
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SqlVulnerabilityAssessmentScanProperties(SqlVulnerabilityAssessmentScanTriggerType? triggerType, SqlVulnerabilityAssessmentScanState? state, string server, string database, string sqlVersion, DateTimeOffset? startOn, DateTimeOffset? endOn, int? highSeverityFailedRulesCount, int? mediumSeverityFailedRulesCount, int? lowSeverityFailedRulesCount, int? totalPassedRulesCount, int? totalFailedRulesCount, int? totalRulesCount, bool? isBaselineApplied, DateTimeOffset? lastScanOn, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TriggerType = triggerType;
            State = state;
            Server = server;
            Database = database;
            SqlVersion = sqlVersion;
            StartOn = startOn;
            EndOn = endOn;
            HighSeverityFailedRulesCount = highSeverityFailedRulesCount;
            MediumSeverityFailedRulesCount = mediumSeverityFailedRulesCount;
            LowSeverityFailedRulesCount = lowSeverityFailedRulesCount;
            TotalPassedRulesCount = totalPassedRulesCount;
            TotalFailedRulesCount = totalFailedRulesCount;
            TotalRulesCount = totalRulesCount;
            IsBaselineApplied = isBaselineApplied;
            LastScanOn = lastScanOn;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The scan trigger type.
        /// Serialized Name: ScanProperties.triggerType
        /// </summary>
        public SqlVulnerabilityAssessmentScanTriggerType? TriggerType { get; set; }
        /// <summary>
        /// The scan status.
        /// Serialized Name: ScanProperties.state
        /// </summary>
        public SqlVulnerabilityAssessmentScanState? State { get; set; }
        /// <summary>
        /// The server name.
        /// Serialized Name: ScanProperties.server
        /// </summary>
        public string Server { get; set; }
        /// <summary>
        /// The database name.
        /// Serialized Name: ScanProperties.database
        /// </summary>
        public string Database { get; set; }
        /// <summary>
        /// The SQL version.
        /// Serialized Name: ScanProperties.sqlVersion
        /// </summary>
        public string SqlVersion { get; set; }
        /// <summary>
        /// The scan start time (UTC).
        /// Serialized Name: ScanProperties.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// Scan results are valid until end time (UTC).
        /// Serialized Name: ScanProperties.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary>
        /// The number of failed rules with high severity.
        /// Serialized Name: ScanProperties.highSeverityFailedRulesCount
        /// </summary>
        public int? HighSeverityFailedRulesCount { get; set; }
        /// <summary>
        /// The number of failed rules with medium severity.
        /// Serialized Name: ScanProperties.mediumSeverityFailedRulesCount
        /// </summary>
        public int? MediumSeverityFailedRulesCount { get; set; }
        /// <summary>
        /// The number of failed rules with low severity.
        /// Serialized Name: ScanProperties.lowSeverityFailedRulesCount
        /// </summary>
        public int? LowSeverityFailedRulesCount { get; set; }
        /// <summary>
        /// The number of total passed rules.
        /// Serialized Name: ScanProperties.totalPassedRulesCount
        /// </summary>
        public int? TotalPassedRulesCount { get; set; }
        /// <summary>
        /// The number of total failed rules.
        /// Serialized Name: ScanProperties.totalFailedRulesCount
        /// </summary>
        public int? TotalFailedRulesCount { get; set; }
        /// <summary>
        /// The number of total rules assessed.
        /// Serialized Name: ScanProperties.totalRulesCount
        /// </summary>
        public int? TotalRulesCount { get; set; }
        /// <summary>
        /// Baseline created for this database, and has one or more rules.
        /// Serialized Name: ScanProperties.isBaselineApplied
        /// </summary>
        public bool? IsBaselineApplied { get; set; }
        /// <summary>
        /// Last scan time.
        /// Serialized Name: ScanProperties.lastScanTime
        /// </summary>
        public DateTimeOffset? LastScanOn { get; set; }
    }
}
