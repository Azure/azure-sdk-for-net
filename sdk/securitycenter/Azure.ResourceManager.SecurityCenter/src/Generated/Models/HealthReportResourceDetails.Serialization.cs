// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Models
{
<<<<<<<< HEAD:sdk/azurestackhci/Azure.ResourceManager.Hci/src/Generated/Models/VirtualMachineInstancePropertiesStorageProfileOSDisk.Serialization.cs
    public partial class VirtualMachineInstancePropertiesStorageProfileOSDisk : IUtf8JsonSerializable
========
    public partial class HealthReportResourceDetails : IUtf8JsonSerializable
>>>>>>>> f49344353ba (Fix autorest mapping and add unit tests):sdk/securitycenter/Azure.ResourceManager.SecurityCenter/src/Generated/Models/HealthReportResourceDetails.Serialization.cs
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id"u8);
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(OSType))
            {
                writer.WritePropertyName("osType"u8);
                writer.WriteStringValue(OSType.Value.ToSerialString());
            }
            writer.WriteEndObject();
        }

<<<<<<<< HEAD:sdk/azurestackhci/Azure.ResourceManager.Hci/src/Generated/Models/VirtualMachineInstancePropertiesStorageProfileOSDisk.Serialization.cs
        internal static VirtualMachineInstancePropertiesStorageProfileOSDisk DeserializeVirtualMachineInstancePropertiesStorageProfileOSDisk(JsonElement element)
========
        internal static HealthReportResourceDetails DeserializeHealthReportResourceDetails(JsonElement element)
>>>>>>>> f49344353ba (Fix autorest mapping and add unit tests):sdk/securitycenter/Azure.ResourceManager.SecurityCenter/src/Generated/Models/HealthReportResourceDetails.Serialization.cs
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> id = default;
            Optional<OperatingSystemType> osType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("osType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    osType = property.Value.GetString().ToOperatingSystemType();
                    continue;
                }
            }
<<<<<<<< HEAD:sdk/azurestackhci/Azure.ResourceManager.Hci/src/Generated/Models/VirtualMachineInstancePropertiesStorageProfileOSDisk.Serialization.cs
            return new VirtualMachineInstancePropertiesStorageProfileOSDisk(id.Value, Optional.ToNullable(osType));
========
            return new HealthReportResourceDetails(Optional.ToNullable(source), id.Value, connectorId.Value);
>>>>>>>> f49344353ba (Fix autorest mapping and add unit tests):sdk/securitycenter/Azure.ResourceManager.SecurityCenter/src/Generated/Models/HealthReportResourceDetails.Serialization.cs
        }
    }
}
