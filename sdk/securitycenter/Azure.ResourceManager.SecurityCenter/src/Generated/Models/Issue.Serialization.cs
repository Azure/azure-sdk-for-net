// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class Issue : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("issueKey"u8);
            writer.WriteStringValue(IssueKey);
            if (Optional.IsDefined(IssueName))
            {
                writer.WritePropertyName("issueName"u8);
                writer.WriteStringValue(IssueName);
            }
            if (Optional.IsCollectionDefined(SecurityValues))
            {
                writer.WritePropertyName("securityValues"u8);
                writer.WriteStartArray();
                foreach (var item in SecurityValues)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(IssueDescription))
            {
                writer.WritePropertyName("issueDescription"u8);
                writer.WriteStringValue(IssueDescription);
            }
            if (Optional.IsDefined(RemediationSteps))
            {
                writer.WritePropertyName("remediationSteps"u8);
                writer.WriteStringValue(RemediationSteps);
            }
            if (Optional.IsDefined(RemediationScript))
            {
                writer.WritePropertyName("remediationScript"u8);
                writer.WriteStringValue(RemediationScript);
            }
            if (Optional.IsCollectionDefined(IssueAdditionalData))
            {
                writer.WritePropertyName("issueAdditionalData"u8);
                writer.WriteStartObject();
                foreach (var item in IssueAdditionalData)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static Issue DeserializeIssue(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string issueKey = default;
            Optional<string> issueName = default;
            Optional<IList<string>> securityValues = default;
            Optional<string> issueDescription = default;
            Optional<string> remediationSteps = default;
            Optional<string> remediationScript = default;
            Optional<IDictionary<string, string>> issueAdditionalData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("issueKey"u8))
                {
                    issueKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("issueName"u8))
                {
                    issueName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("securityValues"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    securityValues = array;
                    continue;
                }
                if (property.NameEquals("issueDescription"u8))
                {
                    issueDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("remediationSteps"u8))
                {
                    remediationSteps = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("remediationScript"u8))
                {
                    remediationScript = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("issueAdditionalData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    issueAdditionalData = dictionary;
                    continue;
                }
            }
            return new Issue(issueKey, issueName.Value, Optional.ToList(securityValues), issueDescription.Value, remediationSteps.Value, remediationScript.Value, Optional.ToDictionary(issueAdditionalData));
        }
    }
}
