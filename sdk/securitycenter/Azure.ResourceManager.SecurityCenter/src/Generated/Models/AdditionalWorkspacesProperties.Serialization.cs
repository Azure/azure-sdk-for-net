// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class AdditionalWorkspacesProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Workspace))
            {
                writer.WritePropertyName("workspace"u8);
                writer.WriteStringValue(Workspace);
            }
            if (Core.Optional.IsDefined(WorkspaceType))
            {
                writer.WritePropertyName("type"u8);
                writer.WriteStringValue(WorkspaceType.Value.ToString());
            }
            if (Core.Optional.IsCollectionDefined(DataTypes))
            {
                writer.WritePropertyName("dataTypes"u8);
                writer.WriteStartArray();
                foreach (var item in DataTypes)
                {
                    writer.WriteStringValue(item.ToString());
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AdditionalWorkspacesProperties DeserializeAdditionalWorkspacesProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> workspace = default;
            Core.Optional<AdditionalWorkspaceType> type = default;
            Core.Optional<IList<AdditionalWorkspaceDataType>> dataTypes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("workspace"u8))
                {
                    workspace = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new AdditionalWorkspaceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("dataTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AdditionalWorkspaceDataType> array = new List<AdditionalWorkspaceDataType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new AdditionalWorkspaceDataType(item.GetString()));
                    }
                    dataTypes = array;
                    continue;
                }
            }
            return new AdditionalWorkspacesProperties(workspace.Value, Core.Optional.ToNullable(type), Core.Optional.ToList(dataTypes));
        }
    }
}
