// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    /// <summary> Properties of the IoT Security solution's user defined resources. </summary>
    public partial class UserDefinedResourcesProperties
    {
        /// <summary> Initializes a new instance of <see cref="UserDefinedResourcesProperties"/>. </summary>
        /// <param name="query"> Azure Resource Graph query which represents the security solution's user defined resources. Required to start with "where type != "Microsoft.Devices/IotHubs"". </param>
        /// <param name="querySubscriptions"> List of Azure subscription ids on which the user defined resources query should be executed. </param>
        public UserDefinedResourcesProperties(string query, IEnumerable<string> querySubscriptions)
        {
            Query = query;
            QuerySubscriptions = querySubscriptions?.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="UserDefinedResourcesProperties"/>. </summary>
        /// <param name="query"> Azure Resource Graph query which represents the security solution's user defined resources. Required to start with "where type != "Microsoft.Devices/IotHubs"". </param>
        /// <param name="querySubscriptions"> List of Azure subscription ids on which the user defined resources query should be executed. </param>
        internal UserDefinedResourcesProperties(string query, IList<string> querySubscriptions)
        {
            Query = query;
            QuerySubscriptions = querySubscriptions;
        }

        /// <summary> Azure Resource Graph query which represents the security solution's user defined resources. Required to start with "where type != "Microsoft.Devices/IotHubs"". </summary>
        public string Query { get; set; }
        /// <summary> List of Azure subscription ids on which the user defined resources query should be executed. </summary>
        public IList<string> QuerySubscriptions { get; set; }
    }
}
