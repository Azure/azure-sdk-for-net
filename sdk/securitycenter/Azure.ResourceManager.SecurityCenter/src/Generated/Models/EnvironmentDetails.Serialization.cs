// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class EnvironmentDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(NativeResourceId))
            {
                writer.WritePropertyName("nativeResourceId"u8);
                writer.WriteStringValue(NativeResourceId);
            }
            if (Optional.IsDefined(EnvironmentHierarchyId))
            {
                writer.WritePropertyName("environmentHierarchyId"u8);
                writer.WriteStringValue(EnvironmentHierarchyId);
            }
            if (Optional.IsDefined(OrganizationalHierarchyId))
            {
                writer.WritePropertyName("organizationalHierarchyId"u8);
                writer.WriteStringValue(OrganizationalHierarchyId);
            }
            if (Optional.IsDefined(SubscriptionId))
            {
                writer.WritePropertyName("subscriptionId"u8);
                writer.WriteStringValue(SubscriptionId);
            }
            if (Optional.IsDefined(TenantId))
            {
                writer.WritePropertyName("tenantId"u8);
                writer.WriteStringValue(TenantId.Value);
            }
            writer.WriteEndObject();
        }

        internal static EnvironmentDetails DeserializeEnvironmentDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ResourceIdentifier> nativeResourceId = default;
            Optional<string> environmentHierarchyId = default;
            Optional<string> organizationalHierarchyId = default;
            Optional<string> subscriptionId = default;
            Optional<Guid> tenantId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("nativeResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    nativeResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("environmentHierarchyId"u8))
                {
                    environmentHierarchyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("organizationalHierarchyId"u8))
                {
                    organizationalHierarchyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subscriptionId"u8))
                {
                    subscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tenantId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tenantId = property.Value.GetGuid();
                    continue;
                }
            }
            return new EnvironmentDetails(nativeResourceId.Value, environmentHierarchyId.Value, organizationalHierarchyId.Value, subscriptionId.Value, Optional.ToNullable(tenantId));
        }
    }
}
