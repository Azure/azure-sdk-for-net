// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityCenter.Models;

namespace Azure.ResourceManager.SecurityCenter
{
    public partial class ApiCollectionData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static ApiCollectionData DeserializeApiCollectionData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<SecurityFamilyProvisioningState> provisioningState = default;
            Optional<string> displayName = default;
            Optional<ResourceIdentifier> discoveredVia = default;
            Optional<Uri> baseUrl = default;
            Optional<long> numberOfApiEndpoints = default;
            Optional<long> numberOfInactiveApiEndpoints = default;
            Optional<long> numberOfUnauthenticatedApiEndpoints = default;
            Optional<long> numberOfExternalApiEndpoints = default;
            Optional<long> numberOfApiEndpointsWithSensitiveDataExposed = default;
            Optional<string> sensitivityLabel = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("provisioningState"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            provisioningState = new SecurityFamilyProvisioningState(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("displayName"u8))
                        {
                            displayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("discoveredVia"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            discoveredVia = new ResourceIdentifier(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("baseUrl"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            baseUrl = new Uri(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("numberOfApiEndpoints"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            numberOfApiEndpoints = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("numberOfInactiveApiEndpoints"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            numberOfInactiveApiEndpoints = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("numberOfUnauthenticatedApiEndpoints"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            numberOfUnauthenticatedApiEndpoints = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("numberOfExternalApiEndpoints"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            numberOfExternalApiEndpoints = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("numberOfApiEndpointsWithSensitiveDataExposed"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            numberOfApiEndpointsWithSensitiveDataExposed = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("sensitivityLabel"u8))
                        {
                            sensitivityLabel = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ApiCollectionData(id, name, type, systemData.Value, Optional.ToNullable(provisioningState), displayName.Value, discoveredVia.Value, baseUrl.Value, Optional.ToNullable(numberOfApiEndpoints), Optional.ToNullable(numberOfInactiveApiEndpoints), Optional.ToNullable(numberOfUnauthenticatedApiEndpoints), Optional.ToNullable(numberOfExternalApiEndpoints), Optional.ToNullable(numberOfApiEndpointsWithSensitiveDataExposed), sensitivityLabel.Value);
        }
    }
}
