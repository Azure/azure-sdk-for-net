// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityCenter.Models;

namespace Azure.ResourceManager.SecurityCenter
{
    public partial class IotSecuritySolutionAnalyticsModelData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(TopAlertedDevices))
            {
                writer.WritePropertyName("topAlertedDevices");
                writer.WriteStartArray();
                foreach (var item in TopAlertedDevices)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(MostPrevalentDeviceAlerts))
            {
                writer.WritePropertyName("mostPrevalentDeviceAlerts");
                writer.WriteStartArray();
                foreach (var item in MostPrevalentDeviceAlerts)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(MostPrevalentDeviceRecommendations))
            {
                writer.WritePropertyName("mostPrevalentDeviceRecommendations");
                writer.WriteStartArray();
                foreach (var item in MostPrevalentDeviceRecommendations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static IotSecuritySolutionAnalyticsModelData DeserializeIotSecuritySolutionAnalyticsModelData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<IotSeverityMetrics> metrics = default;
            Optional<long> unhealthyDeviceCount = default;
            Optional<IReadOnlyList<IotSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem>> devicesMetrics = default;
            Optional<IList<IotSecurityAlertedDevice>> topAlertedDevices = default;
            Optional<IList<IotSecurityDeviceAlert>> mostPrevalentDeviceAlerts = default;
            Optional<IList<IotSecurityDeviceRecommendation>> mostPrevalentDeviceRecommendations = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("metrics"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            metrics = IotSeverityMetrics.DeserializeIotSeverityMetrics(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("unhealthyDeviceCount"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            unhealthyDeviceCount = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("devicesMetrics"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<IotSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem> array = new List<IotSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(IotSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem.DeserializeIotSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem(item));
                            }
                            devicesMetrics = array;
                            continue;
                        }
                        if (property0.NameEquals("topAlertedDevices"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<IotSecurityAlertedDevice> array = new List<IotSecurityAlertedDevice>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(IotSecurityAlertedDevice.DeserializeIotSecurityAlertedDevice(item));
                            }
                            topAlertedDevices = array;
                            continue;
                        }
                        if (property0.NameEquals("mostPrevalentDeviceAlerts"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<IotSecurityDeviceAlert> array = new List<IotSecurityDeviceAlert>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(IotSecurityDeviceAlert.DeserializeIotSecurityDeviceAlert(item));
                            }
                            mostPrevalentDeviceAlerts = array;
                            continue;
                        }
                        if (property0.NameEquals("mostPrevalentDeviceRecommendations"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<IotSecurityDeviceRecommendation> array = new List<IotSecurityDeviceRecommendation>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(IotSecurityDeviceRecommendation.DeserializeIotSecurityDeviceRecommendation(item));
                            }
                            mostPrevalentDeviceRecommendations = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new IotSecuritySolutionAnalyticsModelData(id, name, type, systemData.Value, metrics.Value, Optional.ToNullable(unhealthyDeviceCount), Optional.ToList(devicesMetrics), Optional.ToList(topAlertedDevices), Optional.ToList(mostPrevalentDeviceAlerts), Optional.ToList(mostPrevalentDeviceRecommendations));
        }
    }
}
