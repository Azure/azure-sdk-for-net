// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    /// <summary> The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas. </summary>
    public partial class SecurityAutomationSource
    {
        /// <summary> Initializes a new instance of <see cref="SecurityAutomationSource"/>. </summary>
        public SecurityAutomationSource()
        {
            RuleSets = new ChangeTrackingList<SecurityAutomationRuleSet>();
        }

        /// <summary> Initializes a new instance of <see cref="SecurityAutomationSource"/>. </summary>
        /// <param name="eventSource"> A valid event source type. </param>
        /// <param name="ruleSets"> A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or'). </param>
        internal SecurityAutomationSource(SecurityEventSource? eventSource, IList<SecurityAutomationRuleSet> ruleSets)
        {
            EventSource = eventSource;
            RuleSets = ruleSets;
        }

        /// <summary> A valid event source type. </summary>
        public SecurityEventSource? EventSource { get; set; }
        /// <summary> A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or'). </summary>
        public IList<SecurityAutomationRuleSet> RuleSets { get; }
    }
}
