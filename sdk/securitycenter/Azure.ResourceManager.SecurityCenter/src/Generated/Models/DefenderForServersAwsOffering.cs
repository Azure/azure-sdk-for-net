// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    /// <summary>
    /// The Defender for Servers AWS offering
    /// Serialized Name: DefenderForServersAwsOffering
    /// </summary>
    public partial class DefenderForServersAwsOffering : SecurityCenterCloudOffering
    {
        /// <summary> Initializes a new instance of <see cref="DefenderForServersAwsOffering"/>. </summary>
        public DefenderForServersAwsOffering()
        {
            OfferingType = OfferingType.DefenderForServersAws;
        }

        /// <summary> Initializes a new instance of <see cref="DefenderForServersAwsOffering"/>. </summary>
        /// <param name="offeringType">
        /// The type of the security offering.
        /// Serialized Name: CloudOffering.offeringType
        /// </param>
        /// <param name="description">
        /// The offering description.
        /// Serialized Name: CloudOffering.description
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="defenderForServers">
        /// The Defender for servers connection configuration
        /// Serialized Name: DefenderForServersAwsOffering.defenderForServers
        /// </param>
        /// <param name="arcAutoProvisioning">
        /// The ARC autoprovisioning configuration
        /// Serialized Name: DefenderForServersAwsOffering.arcAutoProvisioning
        /// </param>
        /// <param name="vaAutoProvisioning">
        /// The Vulnerability Assessment autoprovisioning configuration
        /// Serialized Name: DefenderForServersAwsOffering.vaAutoProvisioning
        /// </param>
        /// <param name="mdeAutoProvisioning">
        /// The Microsoft Defender for Endpoint autoprovisioning configuration
        /// Serialized Name: DefenderForServersAwsOffering.mdeAutoProvisioning
        /// </param>
        /// <param name="subPlan">
        /// configuration for the servers offering subPlan
        /// Serialized Name: DefenderForServersAwsOffering.subPlan
        /// </param>
        /// <param name="vmScanners">
        /// The Microsoft Defender for Server VM scanning configuration
        /// Serialized Name: DefenderForServersAwsOffering.vmScanners
        /// </param>
        internal DefenderForServersAwsOffering(OfferingType offeringType, string description, IDictionary<string, BinaryData> serializedAdditionalRawData, AwsDefenderForServersInfo defenderForServers, DefenderForServersAwsOfferingArcAutoProvisioning arcAutoProvisioning, DefenderForServersAwsOfferingVulnerabilityAssessmentAutoProvisioning vaAutoProvisioning, DefenderForServersAwsOfferingMdeAutoProvisioning mdeAutoProvisioning, DefenderForServersAwsOfferingSubPlan subPlan, DefenderForServersAwsOfferingVmScanners vmScanners) : base(offeringType, description, serializedAdditionalRawData)
        {
            DefenderForServers = defenderForServers;
            ArcAutoProvisioning = arcAutoProvisioning;
            VaAutoProvisioning = vaAutoProvisioning;
            MdeAutoProvisioning = mdeAutoProvisioning;
            SubPlan = subPlan;
            VmScanners = vmScanners;
            OfferingType = offeringType;
        }

        /// <summary>
        /// The Defender for servers connection configuration
        /// Serialized Name: DefenderForServersAwsOffering.defenderForServers
        /// </summary>
        internal AwsDefenderForServersInfo DefenderForServers { get; set; }
        /// <summary>
        /// The cloud role ARN in AWS for this feature
        /// Serialized Name: DefenderForServersAwsOfferingDefenderForServers.cloudRoleArn
        /// </summary>
        public string DefenderForServersCloudRoleArn
        {
            get => DefenderForServers is null ? default : DefenderForServers.CloudRoleArn;
            set
            {
                if (DefenderForServers is null)
                    DefenderForServers = new AwsDefenderForServersInfo();
                DefenderForServers.CloudRoleArn = value;
            }
        }

        /// <summary>
        /// The ARC autoprovisioning configuration
        /// Serialized Name: DefenderForServersAwsOffering.arcAutoProvisioning
        /// </summary>
        public DefenderForServersAwsOfferingArcAutoProvisioning ArcAutoProvisioning { get; set; }
        /// <summary>
        /// The Vulnerability Assessment autoprovisioning configuration
        /// Serialized Name: DefenderForServersAwsOffering.vaAutoProvisioning
        /// </summary>
        public DefenderForServersAwsOfferingVulnerabilityAssessmentAutoProvisioning VaAutoProvisioning { get; set; }
        /// <summary>
        /// The Microsoft Defender for Endpoint autoprovisioning configuration
        /// Serialized Name: DefenderForServersAwsOffering.mdeAutoProvisioning
        /// </summary>
        public DefenderForServersAwsOfferingMdeAutoProvisioning MdeAutoProvisioning { get; set; }
        /// <summary>
        /// configuration for the servers offering subPlan
        /// Serialized Name: DefenderForServersAwsOffering.subPlan
        /// </summary>
        internal DefenderForServersAwsOfferingSubPlan SubPlan { get; set; }
        /// <summary>
        /// The available sub plans
        /// Serialized Name: DefenderForServersAwsOfferingSubPlan.type
        /// </summary>
        public AvailableSubPlanType? AvailableSubPlanType
        {
            get => SubPlan is null ? default : SubPlan.AvailableSubPlanType;
            set
            {
                if (SubPlan is null)
                    SubPlan = new DefenderForServersAwsOfferingSubPlan();
                SubPlan.AvailableSubPlanType = value;
            }
        }

        /// <summary>
        /// The Microsoft Defender for Server VM scanning configuration
        /// Serialized Name: DefenderForServersAwsOffering.vmScanners
        /// </summary>
        public DefenderForServersAwsOfferingVmScanners VmScanners { get; set; }
    }
}
