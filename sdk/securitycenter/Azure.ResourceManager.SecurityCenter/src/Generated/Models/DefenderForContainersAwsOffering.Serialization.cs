// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityCenter.Models
{
    public partial class DefenderForContainersAwsOffering : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(KubernetesService))
            {
                writer.WritePropertyName("kubernetesService");
                writer.WriteObjectValue(KubernetesService);
            }
            if (Optional.IsDefined(KubernetesScubaReader))
            {
                writer.WritePropertyName("kubernetesScubaReader");
                writer.WriteObjectValue(KubernetesScubaReader);
            }
            if (Optional.IsDefined(CloudWatchToKinesis))
            {
                writer.WritePropertyName("cloudWatchToKinesis");
                writer.WriteObjectValue(CloudWatchToKinesis);
            }
            if (Optional.IsDefined(KinesisToS3))
            {
                writer.WritePropertyName("kinesisToS3");
                writer.WriteObjectValue(KinesisToS3);
            }
            if (Optional.IsDefined(ContainerVulnerabilityAssessment))
            {
                writer.WritePropertyName("containerVulnerabilityAssessment");
                writer.WriteObjectValue(ContainerVulnerabilityAssessment);
            }
            if (Optional.IsDefined(ContainerVulnerabilityAssessmentTask))
            {
                writer.WritePropertyName("containerVulnerabilityAssessmentTask");
                writer.WriteObjectValue(ContainerVulnerabilityAssessmentTask);
            }
            if (Optional.IsDefined(EnableContainerVulnerabilityAssessment))
            {
                writer.WritePropertyName("enableContainerVulnerabilityAssessment");
                writer.WriteBooleanValue(EnableContainerVulnerabilityAssessment.Value);
            }
            if (Optional.IsDefined(AutoProvisioning))
            {
                writer.WritePropertyName("autoProvisioning");
                writer.WriteBooleanValue(AutoProvisioning.Value);
            }
            if (Optional.IsDefined(KubeAuditRetentionTime))
            {
                writer.WritePropertyName("kubeAuditRetentionTime");
                writer.WriteNumberValue(KubeAuditRetentionTime.Value);
            }
            if (Optional.IsDefined(ScubaExternalId))
            {
                writer.WritePropertyName("scubaExternalId");
                writer.WriteStringValue(ScubaExternalId);
            }
            writer.WritePropertyName("offeringType");
            writer.WriteStringValue(OfferingType.ToString());
            writer.WriteEndObject();
        }

        internal static DefenderForContainersAwsOffering DeserializeDefenderForContainersAwsOffering(JsonElement element)
        {
            Optional<DefenderForContainersAwsOfferingKubernetesService> kubernetesService = default;
            Optional<DefenderForContainersAwsOfferingKubernetesScubaReader> kubernetesScubaReader = default;
            Optional<DefenderForContainersAwsOfferingCloudWatchToKinesis> cloudWatchToKinesis = default;
            Optional<DefenderForContainersAwsOfferingKinesisToS3> kinesisToS3 = default;
            Optional<DefenderForContainersAwsOfferingContainerVulnerabilityAssessment> containerVulnerabilityAssessment = default;
            Optional<DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask> containerVulnerabilityAssessmentTask = default;
            Optional<bool> enableContainerVulnerabilityAssessment = default;
            Optional<bool> autoProvisioning = default;
            Optional<long> kubeAuditRetentionTime = default;
            Optional<string> scubaExternalId = default;
            OfferingType offeringType = default;
            Optional<string> description = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kubernetesService"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    kubernetesService = DefenderForContainersAwsOfferingKubernetesService.DeserializeDefenderForContainersAwsOfferingKubernetesService(property.Value);
                    continue;
                }
                if (property.NameEquals("kubernetesScubaReader"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    kubernetesScubaReader = DefenderForContainersAwsOfferingKubernetesScubaReader.DeserializeDefenderForContainersAwsOfferingKubernetesScubaReader(property.Value);
                    continue;
                }
                if (property.NameEquals("cloudWatchToKinesis"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cloudWatchToKinesis = DefenderForContainersAwsOfferingCloudWatchToKinesis.DeserializeDefenderForContainersAwsOfferingCloudWatchToKinesis(property.Value);
                    continue;
                }
                if (property.NameEquals("kinesisToS3"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    kinesisToS3 = DefenderForContainersAwsOfferingKinesisToS3.DeserializeDefenderForContainersAwsOfferingKinesisToS3(property.Value);
                    continue;
                }
                if (property.NameEquals("containerVulnerabilityAssessment"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    containerVulnerabilityAssessment = DefenderForContainersAwsOfferingContainerVulnerabilityAssessment.DeserializeDefenderForContainersAwsOfferingContainerVulnerabilityAssessment(property.Value);
                    continue;
                }
                if (property.NameEquals("containerVulnerabilityAssessmentTask"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    containerVulnerabilityAssessmentTask = DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask.DeserializeDefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask(property.Value);
                    continue;
                }
                if (property.NameEquals("enableContainerVulnerabilityAssessment"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    enableContainerVulnerabilityAssessment = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("autoProvisioning"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    autoProvisioning = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("kubeAuditRetentionTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    kubeAuditRetentionTime = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("scubaExternalId"))
                {
                    scubaExternalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offeringType"))
                {
                    offeringType = new OfferingType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
            }
            return new DefenderForContainersAwsOffering(offeringType, description.Value, kubernetesService.Value, kubernetesScubaReader.Value, cloudWatchToKinesis.Value, kinesisToS3.Value, containerVulnerabilityAssessment.Value, containerVulnerabilityAssessmentTask.Value, Optional.ToNullable(enableContainerVulnerabilityAssessment), Optional.ToNullable(autoProvisioning), Optional.ToNullable(kubeAuditRetentionTime), scubaExternalId.Value);
        }
    }
}
