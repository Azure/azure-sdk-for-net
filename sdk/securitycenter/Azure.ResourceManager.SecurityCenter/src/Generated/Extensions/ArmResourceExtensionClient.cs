// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.SecurityCenter
{
    /// <summary> A class to add extension methods to ArmResource. </summary>
    internal partial class ArmResourceExtensionClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="ArmResourceExtensionClient"/> class for mocking. </summary>
        protected ArmResourceExtensionClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="ArmResourceExtensionClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal ArmResourceExtensionClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of ComplianceResultResources in the ArmResource. </summary>
        /// <returns> An object representing collection of ComplianceResultResources and their operations over a ComplianceResultResource. </returns>
        public virtual ComplianceResultCollection GetComplianceResults()
        {
            return GetCachedClient(Client => new ComplianceResultCollection(Client, Id));
        }

        /// <summary> Gets an object representing a AdvancedThreatProtectionSettingResource along with the instance operations that can be performed on it in the ArmResource. </summary>
        /// <returns> Returns a <see cref="AdvancedThreatProtectionSettingResource" /> object. </returns>
        public virtual AdvancedThreatProtectionSettingResource GetAdvancedThreatProtectionSetting()
        {
            return new AdvancedThreatProtectionSettingResource(Client, new ResourceIdentifier(Id.ToString() + "/providers/Microsoft.Security/advancedThreatProtectionSettings/current"));
        }

        /// <summary> Gets a collection of DeviceSecurityGroupResources in the ArmResource. </summary>
        /// <returns> An object representing collection of DeviceSecurityGroupResources and their operations over a DeviceSecurityGroupResource. </returns>
        public virtual DeviceSecurityGroupCollection GetDeviceSecurityGroups()
        {
            return GetCachedClient(Client => new DeviceSecurityGroupCollection(Client, Id));
        }

        /// <summary> Gets a collection of ComplianceResources in the ArmResource. </summary>
        /// <returns> An object representing collection of ComplianceResources and their operations over a ComplianceResource. </returns>
        public virtual ComplianceCollection GetCompliances()
        {
            return GetCachedClient(Client => new ComplianceCollection(Client, Id));
        }

        /// <summary> Gets a collection of SecurityAssessmentResponseResources in the ArmResource. </summary>
        /// <returns> An object representing collection of SecurityAssessmentResponseResources and their operations over a SecurityAssessmentResponseResource. </returns>
        public virtual SecurityAssessmentResponseCollection GetSecurityAssessmentResponses()
        {
            return GetCachedClient(Client => new SecurityAssessmentResponseCollection(Client, Id));
        }

        /// <summary> Gets a collection of ScanResources in the ArmResource. </summary>
        /// <returns> An object representing collection of ScanResources and their operations over a ScanResource. </returns>
        public virtual ScanCollection GetScans()
        {
            return GetCachedClient(Client => new ScanCollection(Client, Id));
        }

        /// <summary> Gets a collection of RuleResultResources in the ArmResource. </summary>
        /// <returns> An object representing collection of RuleResultResources and their operations over a RuleResultResource. </returns>
        public virtual RuleResultCollection GetRuleResults()
        {
            return GetCachedClient(Client => new RuleResultCollection(Client, Id));
        }
    }
}
