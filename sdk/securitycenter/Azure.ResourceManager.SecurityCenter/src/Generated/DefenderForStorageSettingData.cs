// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityCenter.Models;

namespace Azure.ResourceManager.SecurityCenter
{
    /// <summary>
    /// A class representing the DefenderForStorageSetting data model.
    /// The Defender for Storage resource.
    /// Serialized Name: DefenderForStorageSetting
    /// </summary>
    public partial class DefenderForStorageSettingData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DefenderForStorageSettingData"/>. </summary>
        public DefenderForStorageSettingData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DefenderForStorageSettingData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="isEnabledPropertiesIsEnabled">
        /// Indicates whether Defender for Storage is enabled on this storage account.
        /// Serialized Name: DefenderForStorageSetting.properties.isEnabled
        /// </param>
        /// <param name="overrideSubscriptionLevelSettings">
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// Serialized Name: DefenderForStorageSetting.properties.overrideSubscriptionLevelSettings
        /// </param>
        /// <param name="isEnabledPropertiesSensitiveDataDiscoveryIsEnabled">
        /// Indicates whether Sensitive Data Discovery should be enabled.
        /// Serialized Name: DefenderForStorageSetting.properties.sensitiveDataDiscovery.isEnabled
        /// </param>
        /// <param name="operationStatusPropertiesSensitiveDataDiscoveryOperationStatus">
        /// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
        /// Serialized Name: DefenderForStorageSetting.properties.sensitiveDataDiscovery.operationStatus
        /// </param>
        /// <param name="scanResultsEventGridTopicResourceId">
        /// Optional. Resource id of an Event Grid Topic to send scan results to.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.scanResultsEventGridTopicResourceId
        /// </param>
        /// <param name="operationStatusPropertiesMalwareScanningOperationStatus">
        /// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.operationStatus
        /// </param>
        /// <param name="isEnabledPropertiesMalwareScanningOnUploadIsEnabled">
        /// Indicates whether On Upload malware scanning should be enabled.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.onUpload.isEnabled
        /// </param>
        /// <param name="capGBPerMonth">
        /// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.onUpload.capGBPerMonth
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DefenderForStorageSettingData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, bool? isEnabledPropertiesIsEnabled, bool? overrideSubscriptionLevelSettings, bool? isEnabledPropertiesSensitiveDataDiscoveryIsEnabled, ExtensionOperationStatus operationStatusPropertiesSensitiveDataDiscoveryOperationStatus, ResourceIdentifier scanResultsEventGridTopicResourceId, ExtensionOperationStatus operationStatusPropertiesMalwareScanningOperationStatus, bool? isEnabledPropertiesMalwareScanningOnUploadIsEnabled, int? capGBPerMonth, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            IsEnabledPropertiesIsEnabled = isEnabledPropertiesIsEnabled;
            OverrideSubscriptionLevelSettings = overrideSubscriptionLevelSettings;
            IsEnabledPropertiesSensitiveDataDiscoveryIsEnabled = isEnabledPropertiesSensitiveDataDiscoveryIsEnabled;
            OperationStatusPropertiesSensitiveDataDiscoveryOperationStatus = operationStatusPropertiesSensitiveDataDiscoveryOperationStatus;
            ScanResultsEventGridTopicResourceId = scanResultsEventGridTopicResourceId;
            OperationStatusPropertiesMalwareScanningOperationStatus = operationStatusPropertiesMalwareScanningOperationStatus;
            IsEnabledPropertiesMalwareScanningOnUploadIsEnabled = isEnabledPropertiesMalwareScanningOnUploadIsEnabled;
            CapGBPerMonth = capGBPerMonth;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Indicates whether Defender for Storage is enabled on this storage account.
        /// Serialized Name: DefenderForStorageSetting.properties.isEnabled
        /// </summary>
        public bool? IsEnabledPropertiesIsEnabled { get; set; }
        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// Serialized Name: DefenderForStorageSetting.properties.overrideSubscriptionLevelSettings
        /// </summary>
        public bool? OverrideSubscriptionLevelSettings { get; set; }
        /// <summary>
        /// Indicates whether Sensitive Data Discovery should be enabled.
        /// Serialized Name: DefenderForStorageSetting.properties.sensitiveDataDiscovery.isEnabled
        /// </summary>
        public bool? IsEnabledPropertiesSensitiveDataDiscoveryIsEnabled { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
        /// Serialized Name: DefenderForStorageSetting.properties.sensitiveDataDiscovery.operationStatus
        /// </summary>
        public ExtensionOperationStatus OperationStatusPropertiesSensitiveDataDiscoveryOperationStatus { get; }
        /// <summary>
        /// Optional. Resource id of an Event Grid Topic to send scan results to.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.scanResultsEventGridTopicResourceId
        /// </summary>
        public ResourceIdentifier ScanResultsEventGridTopicResourceId { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.operationStatus
        /// </summary>
        public ExtensionOperationStatus OperationStatusPropertiesMalwareScanningOperationStatus { get; }
        /// <summary>
        /// Indicates whether On Upload malware scanning should be enabled.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.onUpload.isEnabled
        /// </summary>
        public bool? IsEnabledPropertiesMalwareScanningOnUploadIsEnabled { get; set; }
        /// <summary>
        /// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
        /// Serialized Name: DefenderForStorageSetting.properties.malwareScanning.onUpload.capGBPerMonth
        /// </summary>
        public int? CapGBPerMonth { get; set; }
    }
}
