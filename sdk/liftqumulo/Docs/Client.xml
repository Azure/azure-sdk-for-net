<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetOperationsAsync(RequestContext)">
<example>
This sample shows how to call GetOperationsAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new Client(credential);

await foreach (var data in client.GetOperationsAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("isDataAction").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("provider").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("resource").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("operation").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("origin").ToString());
    Console.WriteLine(result.GetProperty("actionType").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>OperationListResultValue</c>:
<code>{
  name: string, # Optional. The name of the operation, as per Resource-Based Access Control (RBAC). Examples: &quot;Microsoft.Compute/virtualMachines/write&quot;, &quot;Microsoft.Compute/virtualMachines/capture/action&quot;
  isDataAction: boolean, # Optional. Whether the operation applies to data-plane. This is &quot;true&quot; for data-plane operations and &quot;false&quot; for ARM/control-plane operations.
  display: {
    provider: string, # Optional. The localized friendly form of the resource provider name, e.g. &quot;Microsoft Monitoring Insights&quot; or &quot;Microsoft Compute&quot;.
    resource: string, # Optional. The localized friendly name of the resource type related to this operation. E.g. &quot;Virtual Machines&quot; or &quot;Job Schedule Collections&quot;.
    operation: string, # Optional. The concise, localized friendly name for the operation; suitable for dropdowns. E.g. &quot;Create or Update Virtual Machine&quot;, &quot;Restart Virtual Machine&quot;.
    description: string, # Optional. The short, localized friendly description of the operation; suitable for tool tips and detailed views.
  }, # Optional. Localized display information for this particular operation.
  origin: &quot;user&quot; | &quot;system&quot; | &quot;user,system&quot;, # Optional. The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is &quot;user,system&quot;
  actionType: &quot;Internal&quot;, # Optional. Enum. Indicates the action type. &quot;Internal&quot; refers to actions that are for internal only APIs.
}
</code>

</remarks>
    </member>
    <member name="GetOperations(RequestContext)">
<example>
This sample shows how to call GetOperations and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new Client(credential);

foreach (var data in client.GetOperations())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("isDataAction").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("provider").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("resource").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("operation").ToString());
    Console.WriteLine(result.GetProperty("display").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("origin").ToString());
    Console.WriteLine(result.GetProperty("actionType").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>OperationListResultValue</c>:
<code>{
  name: string, # Optional. The name of the operation, as per Resource-Based Access Control (RBAC). Examples: &quot;Microsoft.Compute/virtualMachines/write&quot;, &quot;Microsoft.Compute/virtualMachines/capture/action&quot;
  isDataAction: boolean, # Optional. Whether the operation applies to data-plane. This is &quot;true&quot; for data-plane operations and &quot;false&quot; for ARM/control-plane operations.
  display: {
    provider: string, # Optional. The localized friendly form of the resource provider name, e.g. &quot;Microsoft Monitoring Insights&quot; or &quot;Microsoft Compute&quot;.
    resource: string, # Optional. The localized friendly name of the resource type related to this operation. E.g. &quot;Virtual Machines&quot; or &quot;Job Schedule Collections&quot;.
    operation: string, # Optional. The concise, localized friendly name for the operation; suitable for dropdowns. E.g. &quot;Create or Update Virtual Machine&quot;, &quot;Restart Virtual Machine&quot;.
    description: string, # Optional. The short, localized friendly description of the operation; suitable for tool tips and detailed views.
  }, # Optional. Localized display information for this particular operation.
  origin: &quot;user&quot; | &quot;system&quot; | &quot;user,system&quot;, # Optional. The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is &quot;user,system&quot;
  actionType: &quot;Internal&quot;, # Optional. Enum. Indicates the action type. &quot;Internal&quot; refers to actions that are for internal only APIs.
}
</code>

</remarks>
    </member>
  </members>
</doc>