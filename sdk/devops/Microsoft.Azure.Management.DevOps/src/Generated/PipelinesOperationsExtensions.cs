// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevOps
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PipelinesOperations.
    /// </summary>
    public static partial class PipelinesOperationsExtensions
    {
            /// <summary>
            /// Creates or updates an Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource in ARM.
            /// </param>
            /// <param name='createOperationParameters'>
            /// The request payload to create the Azure Pipeline.
            /// </param>
            public static Pipeline CreateOrUpdate(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, Pipeline createOperationParameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, pipelineName, createOperationParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates an Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource in ARM.
            /// </param>
            /// <param name='createOperationParameters'>
            /// The request payload to create the Azure Pipeline.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Pipeline> CreateOrUpdateAsync(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, Pipeline createOperationParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, pipelineName, createOperationParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets an existing Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource in ARM.
            /// </param>
            public static Pipeline Get(this IPipelinesOperations operations, string resourceGroupName, string pipelineName)
            {
                return operations.GetAsync(resourceGroupName, pipelineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets an existing Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource in ARM.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Pipeline> GetAsync(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, pipelineName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the properties of an Azure Pipeline. Currently, only tags can be
            /// updated.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource.
            /// </param>
            /// <param name='tags'>
            /// Dictionary of key-value pairs to be set as tags on the Azure Pipeline. This
            /// will overwrite any existing tags.
            /// </param>
            public static Pipeline Update(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.UpdateAsync(resourceGroupName, pipelineName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the properties of an Azure Pipeline. Currently, only tags can be
            /// updated.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource.
            /// </param>
            /// <param name='tags'>
            /// Dictionary of key-value pairs to be set as tags on the Azure Pipeline. This
            /// will overwrite any existing tags.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Pipeline> UpdateAsync(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, pipelineName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource.
            /// </param>
            public static void Delete(this IPipelinesOperations operations, string resourceGroupName, string pipelineName)
            {
                operations.DeleteAsync(resourceGroupName, pipelineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, pipelineName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            public static IPage<Pipeline> ListByResourceGroup(this IPipelinesOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Pipeline>> ListByResourceGroupAsync(this IPipelinesOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<Pipeline> ListBySubscription(this IPipelinesOperations operations)
            {
                return operations.ListBySubscriptionAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Pipeline>> ListBySubscriptionAsync(this IPipelinesOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates an Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource in ARM.
            /// </param>
            /// <param name='createOperationParameters'>
            /// The request payload to create the Azure Pipeline.
            /// </param>
            public static Pipeline BeginCreateOrUpdate(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, Pipeline createOperationParameters)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, pipelineName, createOperationParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates an Azure Pipeline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='pipelineName'>
            /// The name of the Azure Pipeline resource in ARM.
            /// </param>
            /// <param name='createOperationParameters'>
            /// The request payload to create the Azure Pipeline.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Pipeline> BeginCreateOrUpdateAsync(this IPipelinesOperations operations, string resourceGroupName, string pipelineName, Pipeline createOperationParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, pipelineName, createOperationParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Pipeline> ListByResourceGroupNext(this IPipelinesOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Pipeline>> ListByResourceGroupNextAsync(this IPipelinesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Pipeline> ListBySubscriptionNext(this IPipelinesOperations operations, string nextPageLink)
            {
                return operations.ListBySubscriptionNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all Azure Pipelines under the specified subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Pipeline>> ListBySubscriptionNextAsync(this IPipelinesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
