// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevOps.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Repository containing the source code for a pipeline.
    /// </summary>
    public partial class CodeRepository
    {
        /// <summary>
        /// Initializes a new instance of the CodeRepository class.
        /// </summary>
        public CodeRepository()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CodeRepository class.
        /// </summary>
        /// <param name="repositoryType">Type of code repository. Possible
        /// values include: 'gitHub', 'vstsGit'</param>
        /// <param name="id">Unique immutable identifier of the code
        /// repository.</param>
        /// <param name="defaultBranch">Default branch used to configure
        /// Continuous Integration (CI) in the pipeline.</param>
        /// <param name="authorization">Authorization info to access the code
        /// repository.</param>
        /// <param name="properties">Repository-specific properties.</param>
        public CodeRepository(string repositoryType, string id, string defaultBranch, Authorization authorization = default(Authorization), IDictionary<string, string> properties = default(IDictionary<string, string>))
        {
            RepositoryType = repositoryType;
            Id = id;
            DefaultBranch = defaultBranch;
            Authorization = authorization;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of code repository. Possible values include:
        /// 'gitHub', 'vstsGit'
        /// </summary>
        [JsonProperty(PropertyName = "repositoryType")]
        public string RepositoryType { get; set; }

        /// <summary>
        /// Gets or sets unique immutable identifier of the code repository.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets default branch used to configure Continuous
        /// Integration (CI) in the pipeline.
        /// </summary>
        [JsonProperty(PropertyName = "defaultBranch")]
        public string DefaultBranch { get; set; }

        /// <summary>
        /// Gets or sets authorization info to access the code repository.
        /// </summary>
        [JsonProperty(PropertyName = "authorization")]
        public Authorization Authorization { get; set; }

        /// <summary>
        /// Gets or sets repository-specific properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

    }
}
