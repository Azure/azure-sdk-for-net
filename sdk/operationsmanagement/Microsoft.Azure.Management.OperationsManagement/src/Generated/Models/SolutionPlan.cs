// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.OperationsManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Plan for solution object supported by the OperationsManagement resource
    /// provider.
    /// </summary>
    public partial class SolutionPlan
    {
        /// <summary>
        /// Initializes a new instance of the SolutionPlan class.
        /// </summary>
        public SolutionPlan()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SolutionPlan class.
        /// </summary>
        /// <param name="name">name of the solution to be created. For
        /// Microsoft published solution it should be in the format of
        /// solutionType(workspaceName). SolutionType part is case sensitive.
        /// For third party solution, it can be anything.</param>
        /// <param name="publisher">Publisher name. For gallery solution, it is
        /// Microsoft.</param>
        /// <param name="promotionCode">promotionCode, Not really used now, can
        /// you left as empty</param>
        /// <param name="product">name of the solution to enabled/add. For
        /// Microsoft published gallery solution it should be in the format of
        /// OMSGallery/&lt;solutionType&gt;. This is case sensitive</param>
        public SolutionPlan(string name = default(string), string publisher = default(string), string promotionCode = default(string), string product = default(string))
        {
            Name = name;
            Publisher = publisher;
            PromotionCode = promotionCode;
            Product = product;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the solution to be created. For Microsoft
        /// published solution it should be in the format of
        /// solutionType(workspaceName). SolutionType part is case sensitive.
        /// For third party solution, it can be anything.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets publisher name. For gallery solution, it is Microsoft.
        /// </summary>
        [JsonProperty(PropertyName = "publisher")]
        public string Publisher { get; set; }

        /// <summary>
        /// Gets or sets promotionCode, Not really used now, can you left as
        /// empty
        /// </summary>
        [JsonProperty(PropertyName = "promotionCode")]
        public string PromotionCode { get; set; }

        /// <summary>
        /// Gets or sets name of the solution to enabled/add. For Microsoft
        /// published gallery solution it should be in the format of
        /// OMSGallery/&amp;lt;solutionType&amp;gt;. This is case sensitive
        /// </summary>
        [JsonProperty(PropertyName = "product")]
        public string Product { get; set; }

    }
}
