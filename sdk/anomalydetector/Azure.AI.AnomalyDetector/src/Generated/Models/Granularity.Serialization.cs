// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.AnomalyDetector.Models
{
    internal static class GranularityExtensions
    {
        public static string ToSerialString(this Granularity value) => value switch
        {
            Granularity.Yearly => "yearly",
            Granularity.Monthly => "monthly",
            Granularity.Weekly => "weekly",
            Granularity.Daily => "daily",
            Granularity.Hourly => "hourly",
            Granularity.Minutely => "minutely",
            Granularity.Secondly => "secondly",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown Granularity value.")
        };

        public static Granularity ToGranularity(this string value)
        {
            if (string.Equals(value, "yearly", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Yearly;
            if (string.Equals(value, "monthly", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Monthly;
            if (string.Equals(value, "weekly", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Weekly;
            if (string.Equals(value, "daily", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Daily;
            if (string.Equals(value, "hourly", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Hourly;
            if (string.Equals(value, "minutely", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Minutely;
            if (string.Equals(value, "secondly", StringComparison.InvariantCultureIgnoreCase)) return Granularity.Secondly;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown Granularity value.");
        }
    }
}
