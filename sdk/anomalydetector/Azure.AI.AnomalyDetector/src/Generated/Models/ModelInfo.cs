// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.AnomalyDetector.Models
{
    /// <summary> Train result of a model including status, errors and diagnose info for model and variables. </summary>
    public partial class ModelInfo
    {
        /// <summary> Initializes a new instance of ModelInfo. </summary>
        /// <param name="source"> Source link to the input variables. Each variable should be a csv file with two columns, `timestamp` and `value`. By default, the file name of the variable will be used as its variable name. </param>
        /// <param name="startTime"> A required field, indicating the start time of training data. Should be date-time. </param>
        /// <param name="endTime"> A required field, indicating the end time of training data. Should be date-time. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> is null. </exception>
        public ModelInfo(string source, DateTimeOffset startTime, DateTimeOffset endTime)
        {
            if (source == null)
            {
                throw new ArgumentNullException(nameof(source));
            }

            Source = source;
            StartTime = startTime;
            EndTime = endTime;
            Errors = new ChangeTrackingList<ErrorResponse>();
        }

        /// <summary> Initializes a new instance of ModelInfo. </summary>
        /// <param name="slidingWindow"> An optional field, indicating how many previous points will be used to compute the anomaly score of the subsequent point. </param>
        /// <param name="alignPolicy"></param>
        /// <param name="source"> Source link to the input variables. Each variable should be a csv file with two columns, `timestamp` and `value`. By default, the file name of the variable will be used as its variable name. </param>
        /// <param name="startTime"> A required field, indicating the start time of training data. Should be date-time. </param>
        /// <param name="endTime"> A required field, indicating the end time of training data. Should be date-time. </param>
        /// <param name="displayName"> An optional field. The name of the model whose maximum length is 24. </param>
        /// <param name="status"> Model training status. </param>
        /// <param name="errors"> Error messages when failed to create a model. </param>
        /// <param name="diagnosticsInfo"></param>
        internal ModelInfo(int? slidingWindow, AlignPolicy alignPolicy, string source, DateTimeOffset startTime, DateTimeOffset endTime, string displayName, ModelStatus? status, IReadOnlyList<ErrorResponse> errors, DiagnosticsInfo diagnosticsInfo)
        {
            SlidingWindow = slidingWindow;
            AlignPolicy = alignPolicy;
            Source = source;
            StartTime = startTime;
            EndTime = endTime;
            DisplayName = displayName;
            Status = status;
            Errors = errors;
            DiagnosticsInfo = diagnosticsInfo;
        }

        /// <summary> An optional field, indicating how many previous points will be used to compute the anomaly score of the subsequent point. </summary>
        public int? SlidingWindow { get; set; }
        /// <summary> Gets or sets the align policy. </summary>
        public AlignPolicy AlignPolicy { get; set; }
        /// <summary> Source link to the input variables. Each variable should be a csv file with two columns, `timestamp` and `value`. By default, the file name of the variable will be used as its variable name. </summary>
        public string Source { get; set; }
        /// <summary> A required field, indicating the start time of training data. Should be date-time. </summary>
        public DateTimeOffset StartTime { get; set; }
        /// <summary> A required field, indicating the end time of training data. Should be date-time. </summary>
        public DateTimeOffset EndTime { get; set; }
        /// <summary> An optional field. The name of the model whose maximum length is 24. </summary>
        public string DisplayName { get; set; }
        /// <summary> Model training status. </summary>
        public ModelStatus? Status { get; }
        /// <summary> Error messages when failed to create a model. </summary>
        public IReadOnlyList<ErrorResponse> Errors { get; }
        /// <summary> Gets the diagnostics info. </summary>
        public DiagnosticsInfo DiagnosticsInfo { get; }
    }
}
