// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.AI.AnomalyDetector.Models
{
    public partial class AnomalyValue
    {
        internal static AnomalyValue DeserializeAnomalyValue(JsonElement element)
        {
            bool isAnomaly = default;
            float severity = default;
            float score = default;
            Optional<IReadOnlyList<AnomalyInterpretation>> interpretation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isAnomaly"))
                {
                    isAnomaly = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("severity"))
                {
                    severity = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("score"))
                {
                    score = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("interpretation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AnomalyInterpretation> array = new List<AnomalyInterpretation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AnomalyInterpretation.DeserializeAnomalyInterpretation(item));
                    }
                    interpretation = array;
                    continue;
                }
            }
            return new AnomalyValue(isAnomaly, severity, score, Optional.ToList(interpretation));
        }
    }
}
