// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.AI.AnomalyDetector.Models
{
    public partial class DetectionResult
    {
        internal static DetectionResult DeserializeDetectionResult(JsonElement element)
        {
            Guid resultId = default;
            DetectionResultSummary summary = default;
            IReadOnlyList<AnomalyState> results = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("resultId"))
                {
                    resultId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("summary"))
                {
                    summary = DetectionResultSummary.DeserializeDetectionResultSummary(property.Value);
                    continue;
                }
                if (property.NameEquals("results"))
                {
                    List<AnomalyState> array = new List<AnomalyState>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AnomalyState.DeserializeAnomalyState(item));
                    }
                    results = array;
                    continue;
                }
            }
            return new DetectionResult(resultId, summary, results);
        }
    }
}
