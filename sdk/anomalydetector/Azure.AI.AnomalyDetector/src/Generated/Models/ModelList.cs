// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.AnomalyDetector.Models
{
    /// <summary> Response to the list models operation. </summary>
    internal partial class ModelList
    {
        /// <summary> Initializes a new instance of ModelList. </summary>
        /// <param name="models"> List of models. </param>
        /// <param name="currentCount"> Current count of trained multivariate models. </param>
        /// <param name="maxCount"> Max number of models that can be trained for this subscription. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="models"/> is null. </exception>
        internal ModelList(IEnumerable<ModelSnapshot> models, int currentCount, int maxCount)
        {
            if (models == null)
            {
                throw new ArgumentNullException(nameof(models));
            }

            Models = models.ToList();
            CurrentCount = currentCount;
            MaxCount = maxCount;
        }

        /// <summary> Initializes a new instance of ModelList. </summary>
        /// <param name="models"> List of models. </param>
        /// <param name="currentCount"> Current count of trained multivariate models. </param>
        /// <param name="maxCount"> Max number of models that can be trained for this subscription. </param>
        /// <param name="nextLink"> next link to fetch more models. </param>
        internal ModelList(IReadOnlyList<ModelSnapshot> models, int currentCount, int maxCount, string nextLink)
        {
            Models = models;
            CurrentCount = currentCount;
            MaxCount = maxCount;
            NextLink = nextLink;
        }

        /// <summary> List of models. </summary>
        public IReadOnlyList<ModelSnapshot> Models { get; }
        /// <summary> Current count of trained multivariate models. </summary>
        public int CurrentCount { get; }
        /// <summary> Max number of models that can be trained for this subscription. </summary>
        public int MaxCount { get; }
        /// <summary> next link to fetch more models. </summary>
        public string NextLink { get; }
    }
}
