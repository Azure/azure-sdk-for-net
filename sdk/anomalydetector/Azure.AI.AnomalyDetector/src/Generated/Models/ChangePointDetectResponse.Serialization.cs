// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.AI.AnomalyDetector.Models
{
    public partial class ChangePointDetectResponse
    {
        internal static ChangePointDetectResponse DeserializeChangePointDetectResponse(JsonElement element)
        {
            int period = default;
            IReadOnlyList<bool> isChangePoint = default;
            IReadOnlyList<float> confidenceScores = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("period"))
                {
                    period = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("isChangePoint"))
                {
                    List<bool> array = new List<bool>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetBoolean());
                    }
                    isChangePoint = array;
                    continue;
                }
                if (property.NameEquals("confidenceScores"))
                {
                    List<float> array = new List<float>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetSingle());
                    }
                    confidenceScores = array;
                    continue;
                }
            }
            return new ChangePointDetectResponse(period, isChangePoint, confidenceScores);
        }
    }
}
