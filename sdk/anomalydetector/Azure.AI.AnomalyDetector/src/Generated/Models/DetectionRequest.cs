// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.AnomalyDetector.Models
{
    /// <summary> Detection request. </summary>
    public partial class DetectionRequest
    {
        /// <summary> Initializes a new instance of DetectionRequest. </summary>
        /// <param name="source"> Source link to the input variables. Each variable should be a csv with two columns, `timestamp` and `value`. The file name of the variable will be used as its name. The variables used in detection should be exactly the same with those used in the training phase. </param>
        /// <param name="startTime"> A required field, indicating the start time of data for detection. Should be date-time. </param>
        /// <param name="endTime"> A required field, indicating the end time of data for detection. Should be date-time. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> is null. </exception>
        public DetectionRequest(string source, DateTimeOffset startTime, DateTimeOffset endTime)
        {
            if (source == null)
            {
                throw new ArgumentNullException(nameof(source));
            }

            Source = source;
            StartTime = startTime;
            EndTime = endTime;
        }

        /// <summary> Source link to the input variables. Each variable should be a csv with two columns, `timestamp` and `value`. The file name of the variable will be used as its name. The variables used in detection should be exactly the same with those used in the training phase. </summary>
        public string Source { get; set; }
        /// <summary> A required field, indicating the start time of data for detection. Should be date-time. </summary>
        public DateTimeOffset StartTime { get; set; }
        /// <summary> A required field, indicating the end time of data for detection. Should be date-time. </summary>
        public DateTimeOffset EndTime { get; set; }
    }
}
