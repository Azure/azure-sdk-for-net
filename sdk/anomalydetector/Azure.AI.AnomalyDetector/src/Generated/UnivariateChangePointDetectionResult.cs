// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.AnomalyDetector
{
    /// <summary> The response of change point detection. </summary>
    public partial class UnivariateChangePointDetectionResult
    {
        /// <summary> Initializes a new instance of UnivariateChangePointDetectionResult. </summary>
        internal UnivariateChangePointDetectionResult()
        {
            IsChangePoint = new ChangeTrackingList<bool>();
            ConfidenceScores = new ChangeTrackingList<float>();
        }

        /// <summary> Initializes a new instance of UnivariateChangePointDetectionResult. </summary>
        /// <param name="period"></param>
        /// <param name="isChangePoint"></param>
        /// <param name="confidenceScores"></param>
        internal UnivariateChangePointDetectionResult(int? period, IReadOnlyList<bool> isChangePoint, IReadOnlyList<float> confidenceScores)
        {
            Period = period;
            IsChangePoint = isChangePoint.ToList();
            ConfidenceScores = confidenceScores.ToList();
        }

        /// <summary> Gets the period. </summary>
        public int? Period { get; }
        /// <summary> Gets the is change point. </summary>
        public IReadOnlyList<bool> IsChangePoint { get; }
        /// <summary> Gets the confidence scores. </summary>
        public IReadOnlyList<float> ConfidenceScores { get; }
    }
}
