// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PowerBIEmbedded
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for WorkspaceCollectionsOperations.
    /// </summary>
    public static partial class WorkspaceCollectionsOperationsExtensions
    {
            /// <summary>
            /// Retrieves an existing Power BI Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            public static WorkspaceCollection GetByName(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
            {
                return operations.GetByNameAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves an existing Power BI Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceCollection> GetByNameAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByNameWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a new Power BI Workspace Collection with the specified properties.
            /// A Power BI Workspace Collection contains one or more workspaces, and can be
            /// used to provision keys that provide API access to those workspaces.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='location'>
            /// Azure location
            /// </param>
            /// <param name='tags'>
            /// </param>
            public static WorkspaceCollection Create(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.CreateAsync(resourceGroupName, workspaceCollectionName, location, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new Power BI Workspace Collection with the specified properties.
            /// A Power BI Workspace Collection contains one or more workspaces, and can be
            /// used to provision keys that provide API access to those workspaces.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='location'>
            /// Azure location
            /// </param>
            /// <param name='tags'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceCollection> CreateAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, location, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update an existing Power BI Workspace Collection with the specified
            /// properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='tags'>
            /// </param>
            public static WorkspaceCollection Update(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.UpdateAsync(resourceGroupName, workspaceCollectionName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update an existing Power BI Workspace Collection with the specified
            /// properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='tags'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceCollection> UpdateAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a Power BI Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            public static void Delete(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a Power BI Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Verify the specified Power BI Workspace Collection name is valid and not
            /// already in use.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Azure location
            /// </param>
            /// <param name='name'>
            /// Workspace collection name
            /// </param>
            /// <param name='type'>
            /// Resource type
            /// </param>
            public static CheckNameResponse CheckNameAvailability(this IWorkspaceCollectionsOperations operations, string location, string name = default(string), string type = "Microsoft.PowerBI/workspaceCollections")
            {
                return operations.CheckNameAvailabilityAsync(location, name, type).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Verify the specified Power BI Workspace Collection name is valid and not
            /// already in use.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Azure location
            /// </param>
            /// <param name='name'>
            /// Workspace collection name
            /// </param>
            /// <param name='type'>
            /// Resource type
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckNameResponse> CheckNameAvailabilityAsync(this IWorkspaceCollectionsOperations operations, string location, string name = default(string), string type = "Microsoft.PowerBI/workspaceCollections", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(location, name, type, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves all existing Power BI workspace collections in the specified
            /// resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            public static IEnumerable<WorkspaceCollection> ListByResourceGroup(this IWorkspaceCollectionsOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves all existing Power BI workspace collections in the specified
            /// resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<WorkspaceCollection>> ListByResourceGroupAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves all existing Power BI workspace collections in the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IEnumerable<WorkspaceCollection> ListBySubscription(this IWorkspaceCollectionsOperations operations)
            {
                return operations.ListBySubscriptionAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves all existing Power BI workspace collections in the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<WorkspaceCollection>> ListBySubscriptionAsync(this IWorkspaceCollectionsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves the primary and secondary access keys for the specified Power BI
            /// Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            public static WorkspaceCollectionAccessKeys GetAccessKeys(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
            {
                return operations.GetAccessKeysAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves the primary and secondary access keys for the specified Power BI
            /// Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceCollectionAccessKeys> GetAccessKeysAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAccessKeysWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Regenerates the primary or secondary access key for the specified Power BI
            /// Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='keyName'>
            /// Key name. Possible values include: 'key1', 'key2'
            /// </param>
            public static WorkspaceCollectionAccessKeys RegenerateKey(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, AccessKeyName? keyName = default(AccessKeyName?))
            {
                return operations.RegenerateKeyAsync(resourceGroupName, workspaceCollectionName, keyName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Regenerates the primary or secondary access key for the specified Power BI
            /// Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='keyName'>
            /// Key name. Possible values include: 'key1', 'key2'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceCollectionAccessKeys> RegenerateKeyAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, AccessKeyName? keyName = default(AccessKeyName?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RegenerateKeyWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, keyName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Migrates an existing Power BI Workspace Collection to a different resource
            /// group and/or subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='targetResourceGroup'>
            /// Name of the resource group the Power BI workspace collections will be
            /// migrated to.
            /// </param>
            /// <param name='resources'>
            /// </param>
            public static void Migrate(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string targetResourceGroup = default(string), IList<string> resources = default(IList<string>))
            {
                operations.MigrateAsync(resourceGroupName, targetResourceGroup, resources).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Migrates an existing Power BI Workspace Collection to a different resource
            /// group and/or subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='targetResourceGroup'>
            /// Name of the resource group the Power BI workspace collections will be
            /// migrated to.
            /// </param>
            /// <param name='resources'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task MigrateAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string targetResourceGroup = default(string), IList<string> resources = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.MigrateWithHttpMessagesAsync(resourceGroupName, targetResourceGroup, resources, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Delete a Power BI Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            public static void BeginDelete(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
            {
                operations.BeginDeleteAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a Power BI Workspace Collection.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group
            /// </param>
            /// <param name='workspaceCollectionName'>
            /// Power BI Embedded Workspace Collection name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
