<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Mvc.Formatters.Json</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Internal.ClosedGenericMatcher">
            <summary>
            Helper related to generic interface definitions and implementing classes.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.ClosedGenericMatcher.ExtractGenericInterface(System.Type,System.Type)">
            <summary>
            Determine whether <paramref name="queryType"/> is or implements a closed generic <see cref="T:System.Type"/>
            created from <paramref name="interfaceType"/>.
            </summary>
            <param name="queryType">The <see cref="T:System.Type"/> of interest.</param>
            <param name="interfaceType">The open generic <see cref="T:System.Type"/> to match. Usually an interface.</param>
            <returns>
            The closed generic <see cref="T:System.Type"/> created from <paramref name="interfaceType"/> that
            <paramref name="queryType"/> is or implements. <c>null</c> if the two <see cref="T:System.Type"/>s have no such
            relationship.
            </returns>
            <remarks>
            This method will return <paramref name="queryType"/> if <paramref name="interfaceType"/> is
            <c>typeof(KeyValuePair{,})</c>, and <paramref name="queryType"/> is
            <c>typeof(KeyValuePair{string, object})</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcJsonMvcBuilderExtensions">
            <summary>
            Extensions methods for configuring MVC via an <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcJsonMvcBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions})">
            <summary>
            Adds configuration of <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/> for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/> which need to be configured.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcJsonMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcJsonOptions})">
            <summary>
            Adds configuration of <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/> for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/> which need to be configured.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor">
            <summary>
            Executes a <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> to write to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions},System.Buffers.ArrayPool{System.Char})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor"/>.
            </summary>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/>.</param>
            <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:char[]"/> buffers.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Logger">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Options">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.WriterFactory">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.JsonResult)">
            <summary>
            Executes the <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> and writes the response.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when writing has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonSerializerObjectPolicy">
            <summary>
            <see cref="T:Microsoft.Extensions.ObjectPool.IPooledObjectPolicy`1"/> for <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonSerializerObjectPolicy.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonSerializerObjectPolicy"/>.
            </summary>
            <param name="serializerSettings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to instantiate
            <see cref="T:Newtonsoft.Json.JsonSerializer"/> instances.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonSerializerObjectPolicy.Create">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonSerializerObjectPolicy.Return(Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.MvcJsonMvcOptionsSetup">
            <summary>
            Sets up JSON formatter options for <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.Json.JsonPatchOperationsArrayProvider">
            <summary>
            Implements a provider of <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription"/> to change parameters of 
            type <see cref="T:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument"/> to an array of <see cref="T:Microsoft.AspNetCore.JsonPatch.Operations.Operation"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.JsonPatchOperationsArrayProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.Json.JsonPatchOperationsArrayProvider"/>.
            </summary>        
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.Json.JsonPatchOperationsArrayProvider.Order">
            <inheritdoc />
            <remarks>
            The order -999 ensures that this provider is executed right after the <c>Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiDescriptionProvider</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.JsonPatchOperationsArrayProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.Json.JsonPatchOperationsArrayProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/> for JSON content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter"/>.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter"/>.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
            <param name="suppressInputFormatterBuffering">Flag to buffer entire request body before deserializing it.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter"/>.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
            <param name="suppressInputFormatterBuffering">Flag to buffer entire request body before deserializing it.</param>
            <param name="allowInputFormatterExceptionMessages">If <see langword="true"/>, JSON deserialization exception messages will replaced by a generic message in model state.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider,Microsoft.AspNetCore.Mvc.MvcOptions,Microsoft.AspNetCore.Mvc.MvcJsonOptions)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter"/>.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="jsonOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ExceptionPolicy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings">
            <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <remarks>
            Any modifications to the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> object after this
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter"/> has been used will have no effect.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer">
            <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer"/> used during deserialization.</returns>
            <remarks>
            This method works in tandem with <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(Newtonsoft.Json.JsonSerializer)"/> to
            manage the lifetimes of <see cref="T:Newtonsoft.Json.JsonSerializer"/> instances.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(Newtonsoft.Json.JsonSerializer)">
            <summary>
            Releases the <paramref name="serializer"/> instance.
            </summary>
            <param name="serializer">The <see cref="T:Newtonsoft.Json.JsonSerializer"/> to release.</param>
            <remarks>
            This method works in tandem with <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(Newtonsoft.Json.JsonSerializer)"/> to
            manage the lifetimes of <see cref="T:Newtonsoft.Json.JsonSerializer"/> instances.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/> for JSON content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.#ctor(Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char})">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter"/> instance.
            </summary>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.SerializerSettings">
            <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <remarks>
            Any modifications to the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> object after this
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter"/> has been used will have no effect.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.PublicSerializerSettings">
            <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <remarks>
            Any modifications to the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> object after this
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter"/> has been used will have no effect.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(System.IO.TextWriter,System.Object)">
            <summary>
            Writes the given <paramref name="value"/> as JSON using the given
            <paramref name="writer"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> used to write the <paramref name="value"/></param>
            <param name="value">The value to write as JSON.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter(System.IO.TextWriter)">
            <summary>
            Called during serialization to create the <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> used to write.</param>
            <returns>The <see cref="T:Newtonsoft.Json.JsonWriter"/> used during serialization.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer">
            <summary>
            Called during serialization to create the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer"/> used during serialization and deserialization.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/> for JSON Patch (application/json-patch+json) content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter"/> instance.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter"/> instance.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
            <param name="suppressInputFormatterBuffering">Flag to buffer entire request body before deserializing it.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter"/> instance.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
            <param name="suppressInputFormatterBuffering">Flag to buffer entire request body before deserializing it.</param>
            <param name="allowInputFormatterExceptionMessages">
            If <see langword="false"/>, JSON deserialization exception messages will replaced by a generic message in model state.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider,Microsoft.AspNetCore.Mvc.MvcOptions,Microsoft.AspNetCore.Mvc.MvcJsonOptions)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter"/> instance.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings"/>) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings"/> initially returned.
            </param>
            <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1"/>.</param>
            <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider"/>.</param>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="jsonOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.ExceptionPolicy">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider">
            <summary>
            Helper class which provides <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings">
            <summary>
            Creates default <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <returns>Default <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.JsonPatchExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{``0},``0,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Applies JSON patch operations on object and logs errors in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
            <param name="patchDoc">The <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1"/>.</param>
            <param name="objectToApplyTo">The entity on which <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1"/> is applied.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> to add errors.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonPatchExtensions.ApplyTo``1(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{``0},``0,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)">
            <summary>
            Applies JSON patch operations on object and logs errors in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
            <param name="patchDoc">The <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1"/>.</param>
            <param name="objectToApplyTo">The entity on which <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1"/> is applied.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> to add errors.</param>
            <param name="prefix">The prefix to use when looking up values in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.JsonResult">
            <summary>
            An action result which formats the given object as JSON.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to format as JSON.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to format as JSON.</param>
            <param name="serializerSettings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> to be used by
            the formatter.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.ContentType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> representing the Content-Type header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.SerializerSettings">
            <summary>
            Gets or sets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.Value">
            <summary>
            Gets or sets the value to be formatted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions">
            <summary>
            Provides programmatic configuration for JSON in the MVC framework.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.MvcJsonOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.MvcJsonOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.AllowInputFormatterExceptionMessages">
            <summary>
            Gets or sets a flag to determine whether error messsages from JSON deserialization by the 
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter"/> will be added to the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>. The default
            value is <c>false</c>, meaning that a generic error message will be used instead.
            </summary>
            <remarks>
            <para>
            Error messages in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> are often communicated to clients, either in HTML
            or using <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/>. In effect, this setting controls whether clients can receive
            detailed error messages about submitted JSON data.
            </para>
            <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on 
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> for 
            guidance and examples of setting the application's compatibility version.
            </para>
            <para>
            Configuring the desired of the value compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>.
            </para>
            <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0"/> then
            this setting will have value <c>false</c> unless explicitly configured.
            </para>
            <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1"/> or
            higher then this setting will have value <c>true</c> unless explicitly configured.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings">
            <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> that are used by this application.
            </summary>
        </member>
    </members>
</doc>
