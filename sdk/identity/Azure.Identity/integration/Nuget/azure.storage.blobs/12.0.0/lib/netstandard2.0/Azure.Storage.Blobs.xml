<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azure.Storage.Blobs</name>
    </assembly>
    <members>
        <member name="T:Azure.Storage.Blobs.Specialized.AppendBlobClient">
             <summary>
             The <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/> allows you to manipulate Azure
             Storage append blobs.
            
             An append blob is comprised of blocks and is optimized for append
             operations.  When you modify an append blob, blocks are added to the
             end of the blob only, via the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             operation.  Updating or deleting of existing blocks is not supported.
             Unlike a block blob, an append blob does not expose its block IDs.
            
             Each block in an append blob can be a different size, up to a maximum
             of 4 MB, and an append blob can include up to 50,000 blocks.  The
             maximum size of an append blob is therefore slightly more than 195 GB
             (4 MB X 50,000 blocks).
             </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxAppendBlockBytes">
            <summary>
            Gets the maximum number of bytes that can be sent in a call
            to AppendBlock.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxBlocks">
            <summary>
            Gets the maximum number of blocks allowed in an append blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this append blob.
             </param>
             <param name="blobName">
             The name of this append blob.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this append blob.
             </param>
             <param name="blobName">
             The name of this append blob.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the append blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the append blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the append blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the append blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics">Client diagnostics.</param>
            <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
             class with an identical <see cref="T:System.Uri"/> source but the specified
             <paramref name="snapshot"/> timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </summary>
             <param name="snapshot">The snapshot identifier.</param>
             <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/> instance.</returns>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL
             to the base blob.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Create(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Create(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a new 0-length
             append blob.  The content of any existing blob is overwritten with
             the newly initialized append blob.  To add content to the append
             blob, call the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new append blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this append blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the creation of this new append blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a new 0-length
             append blob.  The content of any existing blob is overwritten with
             the newly initialized append blob.  To add content to the append
             blob, call the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new append blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this append blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the creation of this new append blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExists(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExists(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new 0-length
             append blob.  If the append blob already exists, the content of
             the existing append blob will remain unchanged.  To add content to the append
             blob, call the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new append blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this append blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new 0-length
             append blob.  If the append blob already exists, the content of
             the existing append blob will remain unchanged.  To add content to the append
             blob, call the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new append blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this append blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsInternal(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsInternal(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)"/> operation creates a new 0-length
             append blob.  If the append blob already exists, the content of
             the existing append blob will remain unchanged.  To add content to the append
             blob, call the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new append blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this append blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateInternal(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateInternal(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)"/> operation creates a new 0-length
             append blob.  The content of any existing blob is overwritten with
             the newly initialized append blob.  To add content to the append
             blob, call the <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new append blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this append blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the creation of this new append blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation commits a new block
             of data, represented by the <paramref name="content"/> <see cref="T:System.IO.Stream"/>,
             to the end of the existing append blob.  The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             operation is only permitted if the blob was created as an append
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/append-block" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content of the block to
             append.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on appending content to this append blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation commits a new block
             of data, represented by the <paramref name="content"/> <see cref="T:System.IO.Stream"/>,
             to the end of the existing append blob.  The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             operation is only permitted if the blob was created as an append
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/append-block" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content of the block to
             append.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on appending content to this append blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockInternal(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockInternal(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)"/> operation commits a new block
             of data, represented by the <paramref name="content"/> <see cref="T:System.IO.Stream"/>,
             to the end of the existing append blob.  The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockInternal(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)"/>
             operation is only permitted if the blob was created as an append
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/append-block" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content of the block to
             append.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on appending content to this append blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUri(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUri(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)"/> operation commits a new
             block of data, represented by the <paramref name="sourceUri"/>,
             to the end of the existing append blob.  The
             <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUri(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)"/> operation is only permitted
             if the blob was created as an append blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url" />.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a <see cref="T:System.Uri"/> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
             <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             <paramref name="sourceUri"/> in the specified range.  If this is
             not specified, the entire source blob contents are uploaded as a
             single append block.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the append block content from the
             <paramref name="sourceUri"/>.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the <paramref name="sourceUri"/>
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data to this append blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriAsync(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriAsync(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)"/> operation commits a new
             block of data, represented by the <paramref name="sourceUri"/>,
             to the end of the existing append blob.  The
             <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriAsync(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)"/> operation is only permitted
             if the blob was created as an append blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url" />.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a <see cref="T:System.Uri"/> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
             <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             <paramref name="sourceUri"/> in the specified range.  If this is
             not specified, the entire source blob contents are uploaded as a
             single append block.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the append block content from the
             <paramref name="sourceUri"/>.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the <paramref name="sourceUri"/>
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data to this append blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriInternal(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriInternal(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation commits a new
             block of data, represented by the <paramref name="sourceUri"/>,
             to the end of the existing append blob.  The
             <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriInternal(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation is only permitted
             if the blob was created as an append blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url" />.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a <see cref="T:System.Uri"/> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
             <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             <paramref name="sourceUri"/> in the specified range.  If this is
             not specified, the entire source blob contents are uploaded as a
             single append block.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the append block content from the
             <paramref name="sourceUri"/>.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the <paramref name="sourceUri"/>
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data to this append blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated append blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions">
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> for
            creating <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/> instances.
            </summary>
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> for
            creating <see cref="T:Azure.Storage.Blobs.BlobClient"/> instances.
            </summary>
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> and
            <see cref="T:Azure.Storage.Blobs.BlobClient"/> for easily creating <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/>
            instances.
            </summary>
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> for
            creating <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> instances.
            </summary>
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> for
            creating <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> instances.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetAppendBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/> object by
            concatenating <paramref name="blobName"/> to
            the end of the <paramref name="client"/>'s
            <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/>. The new
            <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.</param>
            <param name="blobName">The name of the append blob.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobBaseClient(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Blobs.BlobClient"/> object by concatenating
            <paramref name="blobName"/> to the end of the
            <paramref name="client"/>'s <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/>.
            The new <see cref="T:Azure.Storage.Blobs.BlobClient"/> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.</param>
            <param name="blobName">The name of the blob.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.BlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobLeaseClient(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/> class.
            </summary>
            <param name="client">
            A <see cref="T:Azure.Storage.Blobs.BlobClient"/> representing the blob being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobLeaseClient(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/> class.
            </summary>
            <param name="client">
            A <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> representing the container
            being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlockBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> object by
            concatenating <paramref name="blobName"/> to
            the end of the <paramref name="client"/>'s
            <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/>. The new
            <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.</param>
            <param name="blobName">The name of the append blob.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetPageBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> object by
            concatenating <paramref name="blobName"/> to
            the end of the <paramref name="client"/>'s
            <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/>. The new
            <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.</param>
            <param name="blobName">The name of the page blob.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Specialized.BlobBaseClient">
            <summary>
            The <see cref="T:Azure.Storage.Blobs.BlobClient"/> allows you to manipulate Azure Storage
            blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._uri">
            <summary>
            The blob's primary <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri">
            <summary>
            Gets the blob's primary <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> endpoint.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._clientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.ClientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._customerProvidedKey">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.CustomerProvidedKey"/> to be used when sending requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.CustomerProvidedKey">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.CustomerProvidedKey"/> to be used when sending requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._accountName">
            <summary>
            The Storage account name corresponding to the blob client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the blob client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._containerName">
            <summary>
            The container name corresponding to the blob client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.BlobContainerName">
            <summary>
            Gets the container name corresponding to the blob client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobBaseClient._name">
            <summary>
            The name of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Name">
            <summary>
            Gets the name of the blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
             <param name="blobName">
             The name of this blob.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
             <param name="blobName">
             The name of this blob.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics">Client diagnostics.</param>
            <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
             class with an identical <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> source but the specified
             <paramref name="snapshot"/> timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </summary>
             <param name="snapshot">The snapshot identifier.</param>
             <returns>A new <see cref="T:Azure.Storage.Blobs.BlobClient"/> instance.</returns>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL
             to the base blob.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshotCore(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/> class
            with an identical <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> source but the specified
            <paramref name="snapshot"/> timestamp.
            </summary>
            <param name="snapshot">The snapshot identifier.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.BlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetNameFieldsIfNull">
            <summary>
            Sets the various name fields if they are currently null.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download"/> operation downloads a blob from
             the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync"/> operation downloads a blob from
             the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(System.Threading.CancellationToken)"/> operation downloads
             a blob from the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(System.Threading.CancellationToken)"/> operation
             downloads a blob from the service, including its metadata and
             properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/>
             operation downloads a blob from the service, including its metadata
             and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <param name="range">
             If provided, only donwload the bytes of the blob in the specified
             range.  If not provided, download the entire blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             donwloading this blob.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range"/>,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range"/> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException"/>
             is thrown.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/>
             operation downloads a blob from the service, including its metadata
             and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <param name="range">
             If provided, only donwload the bytes of the blob in the specified
             range.  If not provided, download the entire blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             donwloading this blob.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range"/>,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range"/> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException"/>
             is thrown.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadInternal(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadInternal(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Boolean,System.Threading.CancellationToken)"/> operation downloads a blob
             from the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
             <param name="range">
             If provided, only donwload the bytes of the blob in the specified
             range.  If not provided, download the entire blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             donwloading this blob.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range"/>,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range"/> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException"/>
             is thrown.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
             the blob's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartDownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Int64,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartDownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Int64,System.Boolean,System.Threading.CancellationToken)"/> operation starts downloading
            a blob from the service from a given <paramref name="startOffset"/>.
            </summary>
            <param name="range">
            If provided, only download the bytes of the blob in the specified
            range.  If not provided, download the entire blob.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            donwloading this blob.
            </param>
            <param name="rangeGetContentHash">
            When set to true and specified together with the <paramref name="range"/>,
            the service returns the MD5 hash for the range, as long as the
            range is less than or equal to 4 MB in size.  If this value is
            specified without <paramref name="range"/> or set to true when the
            range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException"/>
            is thrown.
            </param>
            <param name="startOffset">
            Starting offset to request - in the event of a retry.
            </param>
            <param name="async">
            Whether to invoke the operation asynchronously.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing the
            downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content"/> contains
            the blob's data.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream)"/> operation downloads a blob using parallel requests,
            and writes the content to <paramref name="destination"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String)"/> operation downloads a blob using parallel requests,
            and writes the content to <paramref name="path"/>.
            </summary>
            <param name="path">
            A file path to write the downloaded content to.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream)"/> downloads a blob using parallel requests,
            and writes the content to <paramref name="destination"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String)"/> downloads a blob using parallel requests,
            and writes the content to <paramref name="path"/>.
            </summary>
            <param name="path">
            A file path to write the downloaded content to.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,System.Threading.CancellationToken)"/> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="destination"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,System.Threading.CancellationToken)"/> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="path"/>.
            </summary>
            <param name="path">
            A file path to write the downloaded content to.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,System.Threading.CancellationToken)"/> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="destination"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,System.Threading.CancellationToken)"/> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="path"/>.
            </summary>
            <param name="path">
            A file path to write the downloaded content to.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="destination"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="path"/>.
            </summary>
            <param name="path">
            A file path to write the downloaded content to.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="destination"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="path"/>.
            </summary>
            <param name="path">
            A file path to write the downloaded content to.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StagedDownloadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Int64,Azure.Storage.StorageTransferOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            This operation will download a blob of arbitrary size by downloading it as indiviually staged
            partitions if it's larger than the
            <paramref name="initialTransferLength"/>.
            </summary>
            <param name="destination">
            A <see cref="T:System.IO.Stream"/> to write the downloaded content to.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="initialTransferLength">
            The maximum size stream that we'll download as a single block.  The
            default value is 256MB.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="async">
            Whether to invoke the operation asynchronously.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response"/> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/>
             operation copies data at from the <paramref name="source"/> to this
             blob.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/>
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> to determine if the
             copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob" />.
             </summary>
             <param name="source">
             Specifies the <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> of the source blob.  The value may
             be a <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of up to 2 KB in length that specifies a
             blob.  A source blob in the same storage account can be
             authenticated via Shared Key.  However, if the source is a blob in
             another account, the source blob must either be public or must be
             authenticated via a shared access signature. If the source blob
             is public, no authentication is required to perform the copy
             operation.
            
             The source object may be a file in the Azure File service.  If the
             source object is a file that is to be copied to a blob, then the
             source file must be authenticated using a shared access signature,
             whether it resides in the same account or in a different account.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this blob.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the copying of data to this blob.
             </param>
             <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority"/>
             Indicates the priority with which to rehydrate an archived blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> describing the
             state of the copy operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/>
             operation copies data at from the <paramref name="source"/> to this
             blob.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/>
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> to determine if
             the copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob" />.
             </summary>
             <param name="source">
             Specifies the <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> of the source blob.  The value may
             be a <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of up to 2 KB in length that specifies a
             blob.  A source blob in the same storage account can be
             authenticated via Shared Key.  However, if the source is a blob in
             another account, the source blob must either be public or must be
             authenticated via a shared access signature. If the source blob
             is public, no authentication is required to perform the copy
             operation.
            
             The source object may be a file in the Azure File service.  If the
             source object is a file that is to be copied to a blob, then the
             source file must be authenticated using a shared access signature,
             whether it resides in the same account or in a different account.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this blob.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the copying of data to this blob.
             </param>
             <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority"/>
             Indicates the priority with which to rehydrate an archived blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> describing the
             state of the copy operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriInternal(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriInternal(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Boolean,System.Threading.CancellationToken)"/> operation copies data at
             from the <paramref name="source"/> to this blob.  You can check
             the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/> returned from the
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> to determine if the copy has
             completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob" />.
             </summary>
             <param name="source">
             Specifies the <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri"/> of the source blob.  The value may
             be a <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of up to 2 KB in length that specifies a
             blob.  A source blob in the same storage account can be
             authenticated via Shared Key.  However, if the source is a blob in
             another account, the source blob must either be public or must be
             authenticated via a shared access signature. If the source blob
             is public, no authentication is required to perform the copy
             operation.
            
             The source object may be a file in the Azure File service.  If the
             source object is a file that is to be copied to a blob, then the
             source file must be authenticated using a shared access signature,
             whether it resides in the same account or in a different account.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this blob.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the copying of data to this blob.
             </param>
             <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority"/>
             Indicates the priority with which to rehydrate an archived blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the copy operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUri(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUri(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation aborts a pending
             <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/>, and leaves a this
             blob with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob" />.
             </summary>
             <param name="copyId">
             ID of the copy operation to abort.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on aborting the copy operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation aborts a pending
             <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/>, and leaves a this
             blob with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob" />.
             </summary>
             <param name="copyId">
             ID of the copy operation to abort.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on aborting the copy operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriInternal(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation aborts a pending
             <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/>, and leaves a this
             blob with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob" />.
             </summary>
             <param name="copyId">
             ID of the copy operation to abort.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on aborting the copy operation.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified blob
             or snapshot for  deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified blob
             or snapshot for  deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExists(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExists(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified blob
             or snapshot for deletion, if the blob exists. The blob is later deleted
             during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified blob
             or snapshot for deletion, if the blob exists. The blob is later deleted
             during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsInternal(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsInternal(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation marks the specified blob
             or snapshot for deletion, if the blob exists. The blob is later deleted
             during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteInternal(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteInternal(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)"/> operation marks the specified blob
             or snapshot for  deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Undelete(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Undelete(System.Threading.CancellationToken)"/> operation restores the contents
             and metadata of a soft deleted blob and any associated soft
             deleted snapshots.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/undelete-blob" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteAsync(System.Threading.CancellationToken)"/> operation restores the contents
             and metadata of a soft deleted blob and any associated soft
             deleted snapshots.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/undelete-blob" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteInternal(System.Boolean,System.Threading.CancellationToken)"/> operation restores the contents
             and metadata of a soft deleted blob and any associated soft
             deleted snapshots.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/undelete-blob" />.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the blob. It does not return the content of the
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob's properties.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             blob's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the blob. It does not return the content of the
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob's properties.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             blob's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the blob. It does not return the content of the
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob's properties.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             blob's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeaders(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeaders(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets system
             properties on the blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the blob's HTTP headers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets system
             properties on the blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the blob's HTTP headers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersInternal(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersInternal(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation sets system
             properties on the blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the blob's HTTP headers.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets user-defined
             metadata for the specified blob as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata" />.
             </summary>
             <param name="metadata">
             Custom metadata to set for this blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the blob's metadata.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets user-defined
             metadata for the specified blob as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata" />.
             </summary>
             <param name="metadata">
             Custom metadata to set for this blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the blob's metadata.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation sets user-defined
             metadata for the specified blob as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata" />.
             </summary>
             <param name="metadata">
             Custom metadata to set for this blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the blob's metadata.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a
             read-only snapshot of a blob.
            
             For more infomration, see <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-blob" />.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this blob snapshot.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting creating this snapshot.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             new blob snapshot.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a
             read-only snapshot of a blob.
            
             For more infomration, see <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-blob" />.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this blob snapshot.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting creating this snapshot.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             new blob snapshot.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation creates a
             read-only snapshot of a blob.
            
             For more infomration, see <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-blob" />.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this blob snapshot.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting creating this snapshot.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             new blob snapshot.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTier(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTier(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/> operation sets the tier on a blob.
             The operation is allowed on a page blob in a premium storage
             account and on a block blob in a blob storage or general purpose
             v2 account.
            
             A premium page blob's tier determines the allowed size, IOPS, and
             bandwidth of the blob.  A block blob's tier determines
             Hot/Cool/Archive storage type.  This operation does not update the
             blob's ETag.  For detailed information about block blob level
             tiering <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />
            
             For more information about setting the tier, see
             <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />.
             </summary>
             <param name="accessTier">
             Indicates the tier to be set on the blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the access tier.
             </param>
             <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority"/>
             Indicates the priority with which to rehydrate an archived blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully setting the tier.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierAsync(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierAsync(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/> operation sets the tier on a blob.
             The operation is allowed on a page blob in a premium storage
             account and on a block blob in a blob storage or general purpose
             v2 account.
            
             A premium page blob's tier determines the allowed size, IOPS, and
             bandwidth of the blob.  A block blob's tier determines
             Hot/Cool/Archive storage type.  This operation does not update the
             blob's ETag.  For detailed information about block blob level
             tiering <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />
            
             For more information about setting the tier, see
             <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />.
             </summary>
             <param name="accessTier">
             Indicates the tier to be set on the blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the access tier.
             </param>
             <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority"/>
             Indicates the priority with which to rehydrate an archived blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully setting the tier.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierInternal(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierInternal(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Boolean,System.Threading.CancellationToken)"/> operation sets the tier on a blob.
             The operation is allowed on a page blob in a premium storage
             account and on a block blob in a blob storage or general purpose
             v2 account.
            
             A premium page blob's tier determines the allowed size, IOPS, and
             bandwidth of the blob.  A block blob's tier determines
             Hot/Cool/Archive storage type.  This operation does not update the
             blob's ETag.  For detailed information about block blob level
             tiering <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />
            
             For more information about setting the tier, see
             <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />.
             </summary>
             <param name="accessTier">
             Indicates the tier to be set on the blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             setting the access tier.
             </param>
             <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority"/>
             Indicates the priority with which to rehydrate an archived blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully setting the tier.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient">
            <summary>
            The <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/> allows you to manipulate Azure
            Storage leases on containers and blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient._blob">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobClient"/> to manage leases for.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobClient">
            <summary>
            Gets the <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobClient"/> to manage leases for.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient._container">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobContainerClient"/> to manage leases for.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobContainerClient">
            <summary>
            Gets the <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobContainerClient"/> to manage leases for.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Uri">
            <summary>
            Gets the URI of the object being leased.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId">
            <summary>
            Gets the Lease ID for this lease.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ClientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient.InfiniteLeaseDuration">
            <summary>
            The <see cref="T:System.TimeSpan"/> representing an infinite lease duration.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/> class
            for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/>  class.
            </summary>
            <param name="client">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobClient"/> representing the blob being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient"/>  class.
            </summary>
            <param name="client">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobContainerClient"/> representing the blob container
            being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.CreateUniqueLeaseId">
            <summary>
            Gets a unique lease ID.
            </summary>
            <returns>A unique lease ID.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.EnsureClient">
            <summary>
            Ensure either the Blob or Container is present.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Acquire(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Acquire(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)"/> operation acquires a lease on
             the blob or container.  The lease <paramref name="duration"/> must
             be between 15 to 60 seconds, or infinite (-1).
            
             If the container does not have an active lease, the Blob service
             creates a lease on the blob or container and returns it.  If the
             container has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/>, but you can
             specify a new <paramref name="duration"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="duration">
             Specifies the duration of the lease, in seconds, or specify
             <see cref="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient.InfiniteLeaseDuration"/> for a lease that never expires.
             A non-infinite lease can be between 15 and 60 seconds.
             A lease duration cannot be changed using <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> or <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on acquiring a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.AcquireAsync(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.AcquireAsync(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)"/> operation acquires a lease on
             the blob or container.  The lease <paramref name="duration"/> must
             be between 15 to 60 seconds, or infinite (-1).
            
             If the container does not have an active lease, the Blob service
             creates a lease on the blob or container and returns it.  If the
             container has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/>, but you can
             specify a new <paramref name="duration"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="duration">
             Specifies the duration of the lease, in seconds, or specify
             <see cref="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient.InfiniteLeaseDuration"/> for a lease that never expires.
             A non-infinite lease can be between 15 and 60 seconds.
             A lease duration cannot be changed using <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> or <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on acquiring a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.AcquireInternal(System.TimeSpan,Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.AcquireInternal(System.TimeSpan,Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation acquires a lease on
             the blob or container.  The lease <paramref name="duration"/> must
             be between 15 to 60 seconds, or infinite (-1).
            
             If the container does not have an active lease, the Blob service
             creates a lease on the blob or container and returns it.  If the
             container has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/>, but you can
             specify a new <paramref name="duration"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="duration">
             Specifies the duration of the lease, in seconds, or specify
             <see cref="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient.InfiniteLeaseDuration"/> for a lease that never expires.
             A non-infinite lease can be between 15 and 60 seconds.
             A lease duration cannot be changed using <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> or <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on acquiring a lease.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Renew(Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Renew(Azure.RequestConditions,System.Threading.CancellationToken)"/> operation renews the blob or
             container's previously-acquired lease.
            
             The lease can be renewed if the leaseId
             matches that associated with the blob or container.  Note that the]
             lease may be renewed even if it has expired as long as the blob or
             container has not been leased again since the expiration of that
             lease.  When you renew a lease, the lease duration clock resets.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on renewing a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> operation renews the blob or
             container's previously-acquired lease.
            
             The lease can be renewed if the leaseId
             matches that associated with the blob or container.  Note that the]
             lease may be renewed even if it has expired as long as the blob or
             container has not been leased again since the expiration of that
             lease.  When you renew a lease, the lease duration clock resets.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on renewing a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewInternal(Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewInternal(Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation renews the blob or
             container's previously-acquired lease.
            
             The lease can be renewed if the leaseId
             matches that associated with the blob or container.  Note that the]
             lease may be renewed even if it has expired as long as the blob or
             container has not been leased again since the expiration of that
             lease.  When you renew a lease, the lease duration clock resets.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on renewing a lease.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Release(Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Release(Azure.RequestConditions,System.Threading.CancellationToken)"/> operation releases the
             container or blob's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/>
             matches that associated with the container or blob.  Releasing the
             lease allows another client to immediately acquire the lease for the
             container or blob as soon as the release is complete.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on releasing a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             updated blob or container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> operation releases the
             container or blob's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/>
             matches that associated with the container or blob.  Releasing the
             lease allows another client to immediately acquire the lease for the
             container or blob as soon as the release is complete.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on releasing a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             updated blob or container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseInternal(Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseInternal(Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation releases the
             container or blob's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/>
             matches that associated with the container or blob.  Releasing the
             lease allows another client to immediately acquire the lease for the
             container or blob as soon as the release is complete.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on releasing a lease.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             updated blob or container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Change(System.String,Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Change(System.String,Azure.RequestConditions,System.Threading.CancellationToken)"/> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/> and a new <paramref name="proposedId"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException"/> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on changing a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)"/> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/> and a new <paramref name="proposedId"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException"/> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on changing a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeInternal(System.String,Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeInternal(System.String,Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId"/> and a new <paramref name="proposedId"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException"/> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on changing a lease.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Break(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Break(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)"/> operation breaks the blob or
             container's previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.  When a lease is broken, the lease
             break <paramref name="breakPeriod"/> is allowed to elapse,
             during which time no lease operation except
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Break(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)"/> and <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Release(Azure.RequestConditions,System.Threading.CancellationToken)"/> can be
             performed on the blob or container.  When a lease is successfully
             broken, the response indicates the interval in seconds until a new
             lease can be acquired.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a blob or container lease that has been
             released.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="breakPeriod">
             Specifies the proposed duration the lease should continue before
             it is broken, in seconds, between 0 and 60.  This break period is
             only used if it is shorter than the time remaining on the lease.
             If longer, the time remaining on the lease is used.  A new lease
             will not be available before the break period has expired, but the
             lease may be held for longer than the break period.  If this value
             is not provided, a fixed-duration lease breaks after the remaining
             lease period elapses, and an infinite lease breaks immediately.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on breaking a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the broken lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)"/> operation breaks the blob or
             container's previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.  When a lease is broken, the lease
             break <paramref name="breakPeriod"/> is allowed to elapse,
             during which time no lease operation except
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)"/> and <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> can be
             performed on the blob or container.  When a lease is successfully
             broken, the response indicates the interval in seconds until a new
             lease can be acquired.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a blob or container lease that has been
             released.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="breakPeriod">
             Specifies the proposed duration the lease should continue before
             it is broken, in seconds, between 0 and 60.  This break period is
             only used if it is shorter than the time remaining on the lease.
             If longer, the time remaining on the lease is used.  A new lease
             will not be available before the break period has expired, but the
             lease may be held for longer than the break period.  If this value
             is not provided, a fixed-duration lease breaks after the remaining
             lease period elapses, and an infinite lease breaks immediately.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on breaking a lease.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the broken lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakInternal(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakInternal(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation breaks the blob or
             container's previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.  When a lease is broken, the lease
             break <paramref name="breakPeriod"/> is allowed to elapse,
             during which time no lease operation except
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)"/> and <see cref="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)"/> can be
             performed on the blob or container.  When a lease is successfully
             broken, the response indicates the interval in seconds until a new
             lease can be acquired.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a blob or container lease that has been
             released.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/lease-container" />.
             </summary>
             <param name="breakPeriod">
             Specifies the proposed duration the lease should continue before
             it is broken, in seconds, between 0 and 60.  This break period is
             only used if it is shorter than the time remaining on the lease.
             If longer, the time remaining on the lease is used.  A new lease
             will not be available before the break period has expired, but the
             lease may be held for longer than the break period.  If this value
             is not provided, a fixed-duration lease breaks after the remaining
             lease period elapses, and an infinite lease breaks immediately.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on breaking a lease.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the broken lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.Specialized.BlockBlobClient">
             <summary>
             The <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> allows you to manipulate Azure
             Storage block blobs.
            
             Block blobs let you upload large blobs efficiently.  Block blobs are
             comprised of blocks, each of which is identified by a block ID. You
             create or modify a block blob by writing a set of blocks and
             committing them by their block IDs. Each block can be a different
             size, up to a maximum of 100 MB (4 MB for requests using REST versions
             before 2016-05-31), and a block blob can include up to 50,000 blocks.
             The maximum size of a block blob is therefore slightly more than 4.75
             TB (100 MB X 50,000 blocks).  If you are writing a block blob that is
             no more than 256 MB in size, you can upload it in its entirety with a
             single write operation; see <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/>.
            
             When you upload a block to a blob in your storage account, it is
             associated with the specified block blob, but it does not become part
             of the blob until you commit a list of blocks that includes the new
             block's ID. New blocks remain in an uncommitted state until they are
             specifically committed or discarded. Writing a block does not update
             the last modified time of an existing blob.
            
             Block blobs include features that help you manage large files over
             networks.  With a block blob, you can upload multiple blocks in
             parallel to decrease upload time.  Each block can include an MD5 hash
             to verify the transfer, so you can track upload progress and re-send
             blocks as needed.You can upload blocks in any order, and determine
             their sequence in the final block list commitment step. You can also
             upload a new block to replace an existing uncommitted block of the
             same block ID.  You have one week to commit blocks to a blob before
             they are discarded.  All uncommitted blocks are also discarded when a
             block list commitment operation occurs but does not include them.
            
             You can modify an existing block blob by inserting, replacing, or
             deleting existing blocks. After uploading the block or blocks that
             have changed, you can commit a new version of the blob by committing
             the new blocks with the existing blocks you want to keep using a
             single commit operation. To insert the same range of bytes in two
             different locations of the committed blob, you can commit the same
             block in two places within the same commit operation.For any commit
             operation, if any block is not found, the entire commitment operation
             fails with an error, and the blob is not modified. Any block commitment
             overwrites the blob’s existing properties and metadata, and discards
             all uncommitted blocks.
            
             Block IDs are strings of equal length within a blob. Block client code
             usually uses base-64 encoding to normalize strings into equal lengths.
             When using base-64 encoding, the pre-encoded string must be 64 bytes
             or less.  Block ID values can be duplicated in different blobs.  A
             blob can have up to 100,000 uncommitted blocks, but their total size
             cannot exceed 200,000 MB.
            
             If you write a block for a blob that does not exist, a new block blob
             is created, with a length of zero bytes.  This blob will appear in
             blob lists that include uncommitted blobs.  If you don’t commit any
             block to this blob, it and its uncommitted blocks will be discarded
             one week after the last successful block upload. All uncommitted
             blocks are also discarded when a new blob of the same name is created
             using a single step(rather than the two-step block upload-then-commit
             process).
             </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxUploadBlobBytes">
            <summary>
            Gets the maximum number of bytes that can be sent in a call
            to <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxStageBlockBytes">
            <summary>
            Gets the maximum number of bytes that can be sent in a call
            to <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxBlocks">
            <summary>
            Gets the maximum number of blocks allowed in a block blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="containerName">
             The name of the container containing this block blob.
             </param>
             <param name="blobName">
             The name of this block blob.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this block blob.
             </param>
             <param name="blobName">
             The name of this block blob.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the block blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the block blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics">Client diagnostics.</param>
            <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>
             class with an identical <see cref="T:System.Uri"/> source but the specified
             <paramref name="snapshot"/> timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </summary>
             <param name="snapshot">The snapshot identifier.</param>
             <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> instance.</returns>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL
             to the base blob.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshotCore(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> class
            with an identical <see cref="T:System.Uri"/> source but the specified
            <paramref name="snapshot"/> timestamp.
            </summary>
            <param name="snapshot">The snapshot identifier.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation creates a new block  blob,
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             Partial updates are not supported with <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/>;
             the content of the existing blob is overwritten with the content
             of the new blob.  To perform a partial update of the content of a
             block blob, use the <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> and
             <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" /> operations.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> to add
             conditions on the creation of this new block blob.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation creates a new block  blob,
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             Partial updates are not supported with <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/>;
             the content of the existing blob is overwritten with the content
             of the new blob.  To perform a partial update of the content of a
             block blob, use the <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> and
             <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" /> operations.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the creation of this new block blob.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadInternal(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadInternal(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)"/> operation creates a new block blob,
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             Partial updates are not supported with <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)"/>;
             the content of the existing blob is overwritten with the content
             of the new blob.  To perform a partial update of the content of a
             block blob, use the <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> and
             <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" /> operations.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="blobHttpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> to add
             conditions on the creation of this new block blob.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation creates a new block as
             part of a block blob's "staging area" to be eventually committed
             via the <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-block" />.
             </summary>
             <param name="base64BlockId">
             A valid Base64 string value that identifies the block. Prior to
             encoding, the string must be less than or equal to 64 bytes in
             size.
            
             For a given blob, the length of the value specified for the
             blockid parameter must be the same size for each block. Note that
             the Base64 string must be URL-encoded.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="transactionalContentHash">
             An optional MD5 hash of the block <paramref name="content"/>.
             This hash is used to verify the integrity of the block during
             transport.  When this value is specified, the storage service
             compares the hash of the content that has arrived with this value.
             Note that this MD5 hash is not stored with the blob.  If the two
             hashes do not match, the operation will throw a
             <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the upload of this block.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation creates a new block as
             part of a block blob's "staging area" to be eventually committed
             via the <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-block" />.
             </summary>
             <param name="base64BlockId">
             A valid Base64 string value that identifies the block. Prior to
             encoding, the string must be less than or equal to 64 bytes in
             size.
            
             For a given blob, the length of the value specified for the
             blockid parameter must be the same size for each block. Note that
             the Base64 string must be URL-encoded.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="transactionalContentHash">
             An optional MD5 hash of the block <paramref name="content"/>.
             This hash is used to verify the integrity of the block during
             transport.  When this value is specified, the storage service
             compares the hash of the content that has arrived with this value.
             Note that this MD5 hash is not stored with the blob.  If the two
             hashes do not match, the operation will throw a
             <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the upload of this block.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockInternal(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockInternal(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)"/> operation creates a new block
             as part of a block blob's "staging area" to be eventually committed
             via the <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> operation.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-block" />.
             </summary>
             <param name="base64BlockId">
             A valid Base64 string value that identifies the block. Prior to
             encoding, the string must be less than or equal to 64 bytes in
             size.
            
             For a given blob, the length of the value specified for the
             blockid parameter must be the same size for each block. Note that
             the Base64 string must be URL-encoded.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="transactionalContentHash">
             An optional MD5 hash of the block <paramref name="content"/>.
             This hash is used to verify the integrity of the block during
             transport.  When this value is specified, the storage service
             compares the hash of the content that has arrived with this value.
             Note that this MD5 hash is not stored with the blob.  If the two
             hashes do not match, the operation will throw a
             <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the upload of this block.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUri(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUri(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a new
             block to be committed as part of a blob where the contents are
             read from the <paramref name="sourceUri" />.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url"/>.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a URL of up to 2 KB in length that specifies a blob.  The
             source blob must either be public or must be authenticated via a
             shared access signature. If the source blob is public, no
             authentication is required to perform the operation.
             </param>
             <param name="base64BlockId">
             A valid Base64 string value that identifies the block. Prior to
             encoding, the string must be less than or equal to 64 bytes in
             size.  For a given blob, the length of the value specified for
             the <paramref name="base64BlockId"/> parameter must be the same
             size for each block.  Note that the Base64 string must be
             URL-encoded.
             </param>
             <param name="sourceRange">
             Optionally uploads only the bytes of the blob in the
             <paramref name="sourceUri"/> in the specified range.  If this is
             not specified, the entire source blob contents are uploaded as a
             single block.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the block content from the
             <paramref name="sourceUri"/>.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the <paramref name="sourceUri"/>
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the staging of this block.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriAsync(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriAsync(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a new
             block to be committed as part of a blob where the contents are
             read from the <paramref name="sourceUri" />.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url"/>.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a URL of up to 2 KB in length that specifies a blob.  The
             source blob must either be public or must be authenticated via a
             shared access signature. If the source blob is public, no
             authentication is required to perform the operation.
             </param>
             <param name="base64BlockId">
             A valid Base64 string value that identifies the block. Prior to
             encoding, the string must be less than or equal to 64 bytes in
             size.  For a given blob, the length of the value specified for
             the <paramref name="base64BlockId"/> parameter must be the same
             size for each block.  Note that the Base64 string must be
             URL-encoded.
             </param>
             <param name="sourceRange">
             Optionally uploads only the bytes of the blob in the
             <paramref name="sourceUri"/> in the specified range.  If this is
             not specified, the entire source blob contents are uploaded as a
             single block.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the block content from the
             <paramref name="sourceUri"/>.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the <paramref name="sourceUri"/>
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the staging of this block.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriInternal(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriInternal(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation creates a new
             block to be committed as part of a blob where the contents are
             read from the <paramref name="sourceUri" />.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url"/>.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a URL of up to 2 KB in length that specifies a blob.  The
             source blob must either be public or must be authenticated via a
             shared access signature. If the source blob is public, no
             authentication is required to perform the operation.
             </param>
             <param name="base64BlockId">
             A valid Base64 string value that identifies the block. Prior to
             encoding, the string must be less than or equal to 64 bytes in
             size.  For a given blob, the length of the value specified for
             the <paramref name="base64BlockId"/> parameter must be the same
             size for each block.  Note that the Base64 string must be
             URL-encoded.
             </param>
             <param name="sourceRange">
             Optionally uploads only the bytes of the blob in the
             <paramref name="sourceUri"/> in the specified range.  If this is
             not specified, the entire source blob contents are uploaded as a
             single block.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the block content from the
             <paramref name="sourceUri"/>.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the <paramref name="sourceUri"/>
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.RequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the staging of this block.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> operation writes a blob by
             specifying the list of block IDs that make up the blob.  In order
             to be written as part of a blob, a block must have been
             successfully written to the server in a prior <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             operation.  You can call <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> to
             update a blob by uploading only those blocks that have changed,
             then committing the new and existing blocks together.  You can do
             this by specifying whether to commit a block from the committed
             block list or from the uncommitted block list, or to commit the
             most recently uploaded version of the block, whichever list it
             may belong to.  Any blocks not specified in the block list and
             permanently deleted.
            
             For more information, see  <see href="https://docs.microsoft.com/rest/api/storageservices/put-block-list"/>.
             </summary>
             <param name="base64BlockIds">
             Specify the Uncommitted Base64 encoded block IDs to indicate that
             the blob service should search only the uncommitted block list for
             the named blocks.  If the block is not found in the uncommitted
             block list, it will not be written as part of the blob, and a
             <see cref="T:Azure.RequestFailedException"/> will be thrown.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> to add
             conditions on committing this block list.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> operation writes a blob by
             specifying the list of block IDs that make up the blob.  In order
             to be written as part of a blob, a block must have been
             successfully written to the server in a prior <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             operation.  You can call <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> to
             update a blob by uploading only those blocks that have changed,
             then committing the new and existing blocks together.  You can do
             this by specifying whether to commit a block from the committed
             block list or from the uncommitted block list, or to commit the
             most recently uploaded version of the block, whichever list it
             may belong to.  Any blocks not specified in the block list and
             permanently deleted.
            
             For more information, see  <see href="https://docs.microsoft.com/rest/api/storageservices/put-block-list"/>.
             </summary>
             <param name="base64BlockIds">
             Specify the Uncommitted Base64 encoded block IDs to indicate that
             the blob service should search only the uncommitted block list for
             the named blocks.  If the block is not found in the uncommitted
             block list, it will not be written as part of the blob, and a
             <see cref="T:Azure.RequestFailedException"/> will be thrown.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> to add
             conditions on committing this block list.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListInternal(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListInternal(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Boolean,System.Threading.CancellationToken)"/> operation writes a blob by
             specifying the list of block IDs that make up the blob.  In order
             to be written as part of a blob, a block must have been
             successfully written to the server in a prior <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             operation.  You can call <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> to
             update a blob by uploading only those blocks that have changed,
             then committing the new and existing blocks together.  You can do
             this by specifying whether to commit a block from the committed
             block list or from the uncommitted block list, or to commit the
             most recently uploaded version of the block, whichever list it
             may belong to.  Any blocks not specified in the block list and
             permanently deleted.
            
             For more information, see  <see href="https://docs.microsoft.com/rest/api/storageservices/put-block-list"/>.
             </summary>
             <param name="base64BlockIds">
             Specify the Uncommitted Base64 encoded block IDs to indicate that
             the blob service should search only the uncommitted block list for
             the named blocks.  If the block is not found in the uncommitted
             block list, it will not be written as part of the blob, and a
             <see cref="T:Azure.RequestFailedException"/> will be thrown.
             </param>
             <param name="blobHttpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/> to add
             conditions on committing this block list.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockList(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockList(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation operation retrieves
            the list of blocks that have been uploaded as part of a block blob.
            There are two block lists maintained for a blob.  The Committed
            Block list has blocks that have been successfully committed to a
            given blob with <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/>.  The
            Uncommitted Block list has blocks that have been uploaded for a
            blob using <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>, but that have not yet
            been committed.  These blocks are stored in Azure in association
            with a blob, but do not yet form part of the blob.
            </summary>
            <param name="blockListTypes">
            Specifies whether to return the list of committed blocks, the
            list of uncommitted blocks, or both lists together.  If you omit
            this parameter, Get Block List returns the list of committed blocks.
            </param>
            <param name="snapshot">
            Optionally specifies the blob snapshot to retrieve the block list
            from. For more information on working with blob snapshots, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
            conditions on retrieving the block list.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing requested
            block list.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation operation retrieves
            the list of blocks that have been uploaded as part of a block blob.
            There are two block lists maintained for a blob.  The Committed
            Block list has blocks that have been successfully committed to a
            given blob with <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/>.  The
            Uncommitted Block list has blocks that have been uploaded for a
            blob using <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>, but that have not yet
            been committed.  These blocks are stored in Azure in association
            with a blob, but do not yet form part of the blob.
            </summary>
            <param name="blockListTypes">
            Specifies whether to return the list of committed blocks, the
            list of uncommitted blocks, or both lists together.  If you omit
            this parameter, Get Block List returns the list of committed blocks.
            </param>
            <param name="snapshot">
            Optionally specifies the blob snapshot to retrieve the block list
            from. For more information on working with blob snapshots, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
            conditions on retrieving the block list.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing requested
            block list.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListInternal(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListInternal(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation operation retrieves
            the list of blocks that have been uploaded as part of a block blob.
            There are two block lists maintained for a blob.  The Committed
            Block list has blocks that have been successfully committed to a
            given blob with <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/>.  The
            Uncommitted Block list has blocks that have been uploaded for a
            blob using <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>, but that have not yet
            been committed.  These blocks are stored in Azure in association
            with a blob, but do not yet form part of the blob.
            </summary>
            <param name="blockListTypes">
            Specifies whether to return the list of committed blocks, the
            list of uncommitted blocks, or both lists together.  If you omit
            this parameter, Get Block List returns the list of committed blocks.
            </param>
            <param name="snapshot">
            Optionally specifies the blob snapshot to retrieve the block list
            from. For more information on working with blob snapshots, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
            conditions on retrieving the block list.
            </param>
            <param name="async">
            Whether to invoke the operation asynchronously.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing requested
            block list.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.Specialized.PageBlobClient">
             <summary>
             The <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> allows you to manipulate Azure
             Storage page blobs.
            
             Page blobs are a collection of 512-byte pages optimized for random
             read and write operations. To create a page blob, you initialize the
             page blob and specify the maximum size the page blob will grow. To add
             or update the contents of a page blob, you write a page or pages by
             specifying an offset and a range that align to 512-byte page
             boundaries.  A write to a page blob can overwrite just one page, some
             pages, or up to 4 MB of the page blob.  Writes to page blobs happen
             in-place and are immediately committed to the blob. The maximum size
             for a page blob is 8 TB.
             </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes">
            <summary>
            Gets the number of bytes in a page (512).
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes">
            <summary>
            Gets the maximum number of bytes that can be sent in a call
            to the <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this page blob.
             </param>
             <param name="blobName">
             The name of this page blob.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this page blob.
             </param>
             <param name="blobName">
             The name of this page blob.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics">Client diagnostics.</param>
            <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/>
             class with an identical <see cref="T:System.Uri"/> source but the specified
             snapshot timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </summary>
             <param name="snapshot">The snapshot identifier.</param>
             <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> instance.</returns>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL
             to the base blob.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshotCore(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> class
            with an identical <see cref="T:System.Uri"/> source but the specified
            snapshot timestamp.
            </summary>
            <param name="snapshot">The snapshot identifier.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a new page blob of
             the specified <paramref name="size"/>.  The content of any
             existing blob is overwritten with the newly initialized page blob
             To add content to the page blob, call the
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
             <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber"/> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the creation of this new page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation creates a new page blob of
             the specified <paramref name="size"/>.  The content of any
             existing blob is overwritten with the newly initialized page blob
             To add content to the page blob, call the
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
             <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber"/> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the creation of this new page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new page blob
             of the specified <paramref name="size"/>.  If the blob already exists, the content of
             the existing blob will remain unchanged. If the blob does not already exists,
             a new page blob with the specified <paramref name="size"/> will be created.
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
             <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber"/> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
             /// <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new page blob
             of the specified <paramref name="size"/>.  If the blob already exists, the content of
             the existing blob will remain unchanged. If the blob does not already exists,
             a new page blob with the specified <paramref name="size"/> will be created.
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
             <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber"/> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsInternal(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsInternal(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)"/> operation creates a new page blob
             of the specified <paramref name="size"/>.  If the blob already exists, the content of
             the existing blob will remain unchanged. If the blob does not already exists,
             a new page blob with the specified <paramref name="size"/> will be created.
             To add content to the page blob, call the
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
             <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber"/> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateInternal(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateInternal(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)"/> operation creates a new page blob
             of the specified <paramref name="size"/>.  The content of any
             existing blob is overwritten with the newly initialized page blob
             To add content to the page blob, call the
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
             <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber"/> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the creation of this new page blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             newly created page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation writes
             <paramref name="content"/> to a range of pages in a page blob,
             starting at <paramref name="offset"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content of the pages to
             upload.  The content can be up to 4 MB in size.
             </param>
             <param name="offset">
             Specifies the starting offset for the <paramref name="content"/>
             to be written as a page.  Given that pages must be aligned with
             512-byte boundaries, the start offset must be a modulus of 512.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on uploading pages to this page blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> operation writes
             <paramref name="content"/> to a range of pages in a page blob,
             starting at <paramref name="offset"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content of the pages to
             upload.  The content can be up to 4 MB in size.
             </param>
             <param name="offset">
             Specifies the starting offset for the <paramref name="content"/>
             to be written as a page.  Given that pages must be aligned with
             512-byte boundaries, the start offset must be a modulus of 512.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on uploading pages to this page blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesInternal(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesInternal(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Boolean,System.Threading.CancellationToken)"/> operation writes
             <paramref name="content"/> to a range of pages in a page blob,
             starting at <paramref name="offset"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content of the pages to
             upload.  The content can be up to 4 MB in size.
             </param>
             <param name="offset">
             Specifies the starting offset for the <paramref name="content"/>
             to be written as a page.  Given that pages must be aligned with
             512-byte boundaries, the start offset must be a modulus of 512.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on uploading pages to this page blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation clears one or more
             pages from the page blob, as specificed by the <paramref name="range"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
             <param name="range">
             Specifies the range of bytes to be cleared. Both the start and
             end of the range must be specified.  For a page clear operation,
             the page range can be up to the value of the blob's full size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on clearing pages from this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation clears one or more
             pages from the page blob, as specificed by the <paramref name="range"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
             <param name="range">
             Specifies the range of bytes to be cleared. Both the start and
             end of the range must be specified.  For a page clear operation,
             the page range can be up to the value of the blob's full size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on clearing pages from this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesInternal(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesInternal(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation clears one or more
             pages from the page blob, as specificed by the <paramref name="range"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
             <param name="range">
             Specifies the range of bytes to be cleared. Both the start and
             end of the range must be specified.  For a page clear operation,
             the page range can be up to the value of the blob's full size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on clearing pages from this page blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation returns the list of
             valid page ranges for a page blob or snapshot of a page blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
             <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
             <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on getting page ranges for the this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             valid page ranges for this blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation returns the list of
             valid page ranges for a page blob or snapshot of a page blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
             <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
             <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on getting page ranges for the this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             valid page ranges for this blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesInternal(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesInternal(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation returns the list
             of valid page ranges for a page blob or snapshot of a page blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
             <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
             <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on getting page ranges for the this blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             valid page ranges for this blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation returns the
             list of page ranges that differ between a
             <paramref name="previousSnapshot"/> and this page blob. Changed pages
             include both updated and cleared pages.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
             <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
             <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
             </param>
             <param name="previousSnapshot">
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshot"/> is the older of the two.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on getting page ranges for the this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             valid page ranges for this blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation returns the
             list of page ranges that differ between a
             <paramref name="previousSnapshot"/> and this page blob. Changed pages
             include both updated and cleared pages.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
             <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
             <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
             </param>
             <param name="previousSnapshot">
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshot"/> is the older of the two.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on getting page ranges for the this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             valid page ranges for this blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffInternal(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffInternal(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation returns the
             list of page ranges that differ between a
             <paramref name="previousSnapshot"/> and this page blob. Changed pages
             include both updated and cleared pages.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
             <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
             <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob"/>.
             </param>
             <param name="previousSnapshot">
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshot"/> is the older of the two.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on getting page ranges for the this blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             valid page ranges for this blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation resizes the page blob to
             the specified size (which must be a multiple of 512).  If the
             specified value is less than the current size of the blob, then
             all pages above the specified value are cleared.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.  If the specified
             value is less than the current size of the blob, then all pages
             above the specified value are cleared.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the resize of this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the resized
             page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation resizes the page blob to
             the specified size (which must be a multiple of 512).  If the
             specified value is less than the current size of the blob, then
             all pages above the specified value are cleared.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.  If the specified
             value is less than the current size of the blob, then all pages
             above the specified value are cleared.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the resize of this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the resized
             page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeInternal(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation resizes the page blob to
             the specified size (which must be a multiple of 512).  If the
             specified value is less than the current size of the blob, then
             all pages above the specified value are cleared.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.  If the specified
             value is less than the current size of the blob, then all pages
             above the specified value are cleared.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the resize of this page blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the resized
             page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation changes the
             sequence number <paramref name="action"/> and <paramref name="sequenceNumber"/>
             for this page blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="action">
             Specifies how the service should modify the blob's sequence number.
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max"/> sets the sequence number to
             be the higher of the value included with the request and the value
             currently stored for the blob.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update"/>
             sets the sequence number to the <paramref name="sequenceNumber"/>
             value.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/> increments
             the value of the sequence number by 1.  If specifying
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/>, do not include the
             <paramref name="sequenceNumber"/> because that will throw a
             <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="sequenceNumber">
             An updated sequence number of your choosing, if
             <paramref name="action"/> is <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max"/>
             or <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update"/>.  The value should
             not be provided if <paramref name="action"/> is
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/>.  The sequence number
             is a user-controlled property that you can use to track requests
             and manage concurrency issues via <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add conditions
             on updating the sequence number of this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation changes the
             sequence number <paramref name="action"/> and <paramref name="sequenceNumber"/>
             for this page blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="action">
             Specifies how the service should modify the blob's sequence number.
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max"/> sets the sequence number to
             be the higher of the value included with the request and the value
             currently stored for the blob.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update"/>
             sets the sequence number to the <paramref name="sequenceNumber"/>
             value.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/> increments
             the value of the sequence number by 1.  If specifying
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/>, do not include the
             <paramref name="sequenceNumber"/> because that will throw a
             <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="sequenceNumber">
             An updated sequence number of your choosing, if
             <paramref name="action"/> is <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max"/>
             or <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update"/>.  The value should
             not be provided if <paramref name="action"/> is
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/>.  The sequence number
             is a user-controlled property that you can use to track requests
             and manage concurrency issues via <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add conditions
             on updating the sequence number of this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberInternal(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberInternal(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation changes the
             sequence number <paramref name="action"/> and <paramref name="sequenceNumber"/>
             for this page blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
             <param name="action">
             Specifies how the service should modify the blob's sequence number.
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max"/> sets the sequence number to
             be the higher of the value included with the request and the value
             currently stored for the blob.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update"/>
             sets the sequence number to the <paramref name="sequenceNumber"/>
             value.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/> increments
             the value of the sequence number by 1.  If specifying
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/>, do not include the
             <paramref name="sequenceNumber"/> because that will throw a
             <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="sequenceNumber">
             An updated sequence number of your choosing, if
             <paramref name="action"/> is <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max"/>
             or <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update"/>.  The value should
             not be provided if <paramref name="action"/> is
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment"/>.  The sequence number
             is a user-controlled property that you can use to track requests
             and manage concurrency issues via <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add conditions
             on updating the sequence number of this page blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the updated
             page blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             operation starts copying a snapshot of the sourceUri page blob to
             this page blob.  The snapshot is copied such that only the
             differential changes between the previously copied snapshot are
             transferred to the destination.  The copied snapshots are complete
             copies of the original snapshot and can be read or copied from as
             usual.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/>
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> to
             determine if the copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/incremental-copy-blob" />
             and <see href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots"/>.
             </summary>
             <param name="sourceUri">
             Specifies the to the source page blob as a <see cref="T:System.Uri"/> up to
             2 KB in length.  The source blob must either be public or must be
             authenticated via a shared access signature.
             </param>
             <param name="snapshot">
             The name of a snapshot to start copying from
             sourceUri.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the incremental copy into this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> referencing the incremental
             copy operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
            
             The destination of an incremental copy must either not exist, or
             must have been created with a previous incremental copy from the
             same source blob.  Once created, the destination blob is
             permanently associated with the source and may only be used for
             incremental copies.
            
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>,
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobs(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/>, and
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchy(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>
             operations indicate whether the blob is an incremental copy blob
             created in this way.  Incremental copy blobs may not be downloaded
             directly.  The only supported operations are
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>,
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>,
             and <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>.  The copied snapshots may
             be read and deleted as usual.
            
             An incremental copy is performed asynchronously on the service and
             must be polled for completion.  You can poll
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> and check
             <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/> to determine when the copy
             has completed.  When the copy completes, the destination blob will
             contain a new snapshot.  The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>
             operation returns the snapshot time of the newly created snapshot.
            
             The first time an incremental copy is performed on a destination
             blob, a new blob is created with a snapshot that is fully copied
             from the source.  Each subsequent call to <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             will create a new snapshot by copying only the differential
             changes from the previously copied snapshot.  The differential
             changes are computed on the server by issuing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             call on the source blob snapshot with prevSnapshot set to the most
             recently copied snapshot. Therefore, the same restrictions on
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> apply to
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>.
             Specifically, snapshots must be copied in ascending order and if
             the source blob is recreated using <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> or
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/>
             then  <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             on new snapshots will fail.
            
             The additional storage space consumed by the copied snapshot is
             the size of the differential data transferred during the copy.
             This can be determined by performing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             call on the snapshot to compare it to the previous snapshot.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             operation starts copying a snapshot of the sourceUri page blob to
             this page blob.  The snapshot is copied such that only the
             differential changes between the previously copied snapshot are
             transferred to the destination. The copied snapshots are complete
             copies of the original snapshot and can be read or copied from as
             usual.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/>
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>
             to determine if thecopy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/incremental-copy-blob" />
             and <see href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots"/>.
             </summary>
             <param name="sourceUri">
             Specifies the to the source page blob as a <see cref="T:System.Uri"/> up to
             2 KB in length.  The source blob must either be public or must be
             authenticated via a shared access signature.
             </param>
             <param name="snapshot">
             The name of a snapshot to start copying from
             sourceUri.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the incremental copy into this page blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> describing the
             state of the incremental copy operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
            
             The destination of an incremental copy must either not exist, or
             must have been created with a previous incremental copy from the
             same source blob.  Once created, the destination blob is
             permanently associated with the source and may only be used for
             incremental copies.
            
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>,
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/>, and
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>
             operations indicate whether the blob is an incremental copy blob
             created in this way.  Incremental copy blobs may not be downloaded
             directly.  The only supported operations are
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>,
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>,
             and  <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>.  The copied
             snapshots may be read and deleted as usual.
            
             An incremental copy is performed asynchronously on the service and
             must be polled for completion.  You can poll
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> and check
             <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/> to determine when the copy
             has completed.  When the copy completes, the destination blob will
             contain a new snapshot.  The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>
             operation returns the snapshot time of the newly created snapshot.
            
             The first time an incremental copy is performed on a destination
             blob, a new blob is created with a snapshot that is fully copied
             from the source.  Each subsequent call to <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             will create a new snapshot by copying only the differential
             changes from the previously copied snapshot.  The differential
             changes are computed on the server by issuing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             call on the source blob snapshot with prevSnapshot set to the most
             recently copied snapshot. Therefore, the same restrictions on
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> apply to
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>.
             Specifically, snapshots must be copied in ascending order and if
             the source blob is recreated using <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/> or
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/>
             then <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             on new snapshots will fail.
            
             The additional storage space consumed by the copied snapshot is
             the size of the differential data transferred during the copy.
             This can be determined by performing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             call on the snapshot to compare it to the previous snapshot.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalInternal(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalInternal(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation starts
             copying a snapshot of the
             sourceUri page blob to this page blob.  The
             snapshot is copied such that only the differential changes between
             the previously copied snapshot are transferred to the destination.
             The copied snapshots are complete copies of the original snapshot
             and can be read or copied from as usual.  You can check the
             <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/> returned from the
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> to determine if the
             copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/incremental-copy-blob" />
             and <see href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots"/>.
             </summary>
             <param name="sourceUri">
             Specifies the to the source page blob as a <see cref="T:System.Uri"/> up to
             2 KB in length.  The source blob must either be public or must be
             authenticated via a shared access signature.
             </param>
             <param name="snapshot">
             The name of a snapshot to start copying from
             sourceUri.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions"/> to add
             conditions on the incremental copy into this page blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the incremental copy operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
            
             The destination of an incremental copy must either not exist, or
             must have been created with a previous incremental copy from the
             same source blob.  Once created, the destination blob is
             permanently associated with the source and may only be used for
             incremental copies.
            
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>,
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/>, and
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>
             operations indicate whether the blob is an incremental copy blob
             created in this way.  Incremental copy blobs may not be downloaded
             directly.  The only supported operations are
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>,
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>,
             and  <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>.  The copied
             snapshots may be read and deleted as usual.
            
             An incremental copy is performed asynchronously on the service and
             must be polled for completion.  You can poll
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> and check
             <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus"/> to determine when the copy
             has completed.  When the copy completes, the destination blob will
             contain a new snapshot.  The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>
             operation returns the snapshot time of the newly created snapshot.
            
             The first time an incremental copy is performed on a destination
             blob, a new blob is created with a snapshot that is fully copied
             from the source.  Each subsequent call to <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             will create a new snapshot by copying only the differential
             changes from the previously copied snapshot.  The differential
             changes are computed on the server by issuing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             call on the source blob snapshot with prevSnapshot set to the most
             recently copied snapshot. Therefore, the same restrictions on
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> apply to
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>.
             Specifically, snapshots must be copied in ascending order and if
             the source blob is recreated using <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)"/>
             or  <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/>
             then <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             on new snapshots will fail.
            
             The additional storage space consumed by the copied snapshot is
             the size of the differential data transferred during the copy.
             This can be determined by performing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/>
             call on the snapshot to compare it to the previous snapshot.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation writes a range
             of pages to a page blob where the contents are read from
             sourceUri.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url" />.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a <see cref="T:System.Uri" /> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
             <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             sourceUri in the specified range.
             </param>
             <param name="range">
             Specifies the range to be written as a page. Both the start and
             end of the range must be specified and can be up to 4MB in size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the page block content from the
             sourceUri.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the sourceUri
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data to this page blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)"/> operation writes a range
             of pages to a page blob where the contents are read from
             sourceUri.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url" />.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a <see cref="T:System.Uri" /> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
             <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             sourceUri in the specified range.
             </param>
             <param name="range">
             Specifies the range to be written as a page. Both the start and
             end of the range must be specified and can be up to 4MB in size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the page block content from the
             sourceUri.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the sourceUri
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data to this page blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriInternal(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriInternal(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation writes a
             range of pages to a page blob where the contents are read from
             sourceUri.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url" />.
             </summary>
             <param name="sourceUri">
             Specifies the <see cref="T:System.Uri"/> of the source blob.  The value may
             be a <see cref="T:System.Uri" /> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
             <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             sourceUri in the specified range.
             </param>
             <param name="range">
             Specifies the range to be written as a page. Both the start and
             end of the range must be specified and can be up to 4MB in size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
             <param name="sourceContentHash">
             Optional MD5 hash of the page block content from the
             sourceUri.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the sourceUri
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException"/>.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data to this page blob.
             </param>
             <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions"/> to add
             conditions on the copying of data from this source blob.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated pages.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobClient">
            <summary>
            The <see cref="T:Azure.Storage.Blobs.BlobClient"/> allows you to manipulate Azure Storage
            blobs.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
             <param name="blobName">
             The name of this blob.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
             <param name="blobName">
             The name of this blob.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient"/>
            class.
            </summary>
            <param name="blobUri">
            A <see cref="T:System.Uri"/> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics">Client diagnostics.</param>
            <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream)"/> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String)"/> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream)"/> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String)"/> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)"/> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the creation of this new block blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
             parallel transfer behavior.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the creation of this new block blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
             parallel transfer behavior.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the creation of this new block blob.
             </param>
             <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
             parallel transfer behavior.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)"/>
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="path">
             A file path containing the content to upload.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             the creation of this new block blob.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1"/> to provide
             progress updates about data transfers.
             </param>
             <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
             Indicates the tier to be set on the blob.
             </param>
             <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
             parallel transfer behavior.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.StagedUploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.Int64},Azure.Storage.StorageTransferOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            This operation will create a new
            block blob of arbitrary size by uploading it as indiviually staged
            blocks if it's larger than the
            <paramref name="singleUploadThreshold"/>.
            </summary>
            <param name="content">
            A <see cref="T:System.IO.Stream"/> containing the content to upload.
            </param>
            <param name="blobHttpHeaders">
            Optional standard HTTP header properties that can be set for the
            block blob.
            </param>
            <param name="metadata">
            Optional custom metadata to set for this block blob.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="progressHandler">
            Optional <see cref="T:System.IProgress`1"/> to provide
            progress updates about data transfers.
            </param>
            <param name="accessTier">
            Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
            Indicates the tier to be set on the blob.
            </param>
            <param name="singleUploadThreshold">
            The maximum size stream that we'll upload as a single block.  The
            default value is 256MB.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="async">
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing the
            state of the updated block blob.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.StagedUploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.Int64},Azure.Storage.StorageTransferOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            This operation will create a new
            block blob of arbitrary size by uploading it as indiviually staged
            blocks if it's larger than the
            <paramref name="singleUploadThreshold"/>.
            </summary>
            <param name="path">
            A file path of the file to upload.
            </param>
            <param name="blobHttpHeaders">
            Optional standard HTTP header properties that can be set for the
            block blob.
            </param>
            <param name="metadata">
            Optional custom metadata to set for this block blob.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
            the creation of this new block blob.
            </param>
            <param name="progressHandler">
            Optional <see cref="T:System.IProgress`1"/> to provide
            progress updates about data transfers.
            </param>
            <param name="accessTier">
            Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>
            Indicates the tier to be set on the blob.
            </param>
            <param name="singleUploadThreshold">
            The maximum size stream that we'll upload as a single block.  The
            default value is 256MB.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions"/> to configure
            parallel transfer behavior.
            </param>
            <param name="async">
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing the
            state of the updated block blob.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClient.TransformContent(System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs a transform on the data for uploads. It is a no-op by default.
            </summary>
            <param name="content">Content to transform.</param>
            <param name="metadata">Content metadata to transform.</param>
            <returns>Transformed content stream and metadata.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobClientOptions">
            <summary>
            Provides the client configuration options for connecting to Azure Blob
            Storage.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobClientOptions.LatestVersion">
            <summary>
            The Latest service version supported by this client library.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion">
            <summary>
            The versions of Azure Blob Storage supported by this client
            library.  For more, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2019_02_02">
            <summary>
            The 2019-02-02 service version described at
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services#version-2019-02-02" />
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobClientOptions.Version">
            <summary>
            Gets the <see cref="T:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion"/> of the service API used when
            making requests.  For more, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobClientOptions.CustomerProvidedKey">
            <summary>
            Gets the <see cref="P:Azure.Storage.Blobs.BlobClientOptions.CustomerProvidedKey"/> to be used when making requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobClientOptions.GeoRedundantSecondaryUri">
             <summary>
             Gets or sets the secondary storage <see cref="T:System.Uri"/> that can be read from for the storage account if the
             account is enabled for RA-GRS.
            
             If this property is set, the secondary Uri will be used for GET or HEAD requests during retries.
             If the status of the response from the secondary Uri is a 404, then subsequent retries for
             the request will not use the secondary Uri again, as this indicates that the resource
             may not have propagated there yet. Otherwise, subsequent retries will alternate back and forth
             between primary and secondary Uri.
             </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClientOptions.#ctor(Azure.Storage.Blobs.BlobClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClientOptions"/>
            class.
            </summary>
            <param name="version">
            The <see cref="T:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion"/> of the service API used when
            making requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClientOptions.AddHeadersAndQueryParameters">
            <summary>
            Add headers and query parameters in <see cref="P:Azure.Core.DiagnosticsOptions.LoggedHeaderNames"/> and <see cref="P:Azure.Core.DiagnosticsOptions.LoggedQueryParameters"/>
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClientOptions.Build(Azure.Core.Pipeline.HttpPipelinePolicy)">
            <summary>
            Create an HttpPipeline from BlobClientOptions.
            </summary>
            <param name="authentication">Optional authentication policy.</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobClientOptions.Build(System.Object)">
            <summary>
            Create an HttpPipeline from BlobClientOptions.
            </summary>
            <param name="credentials">Optional authentication credentials.</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobContainerClient">
            <summary>
            The <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> allows you to manipulate Azure
            Storage containers and their blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient.RootBlobContainerName">
            <summary>
            The Azure Storage name used to identify a storage account's root container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient.LogsBlobContainerName">
            <summary>
            The Azure Storage name used to identify a storage account's logs container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient.WebBlobContainerName">
            <summary>
            The Azure Storage name used to identify a storage account's web content container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient._uri">
            <summary>
            Gets the container's primary <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobContainerClient.Uri">
            <summary>
            Gets the container's primary <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> endpoint.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient._pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobContainerClient.Pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient._clientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobContainerClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobContainerClient.ClientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobContainerClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient._customerProvidedKey">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobContainerClient.CustomerProvidedKey"/> to be used when sending requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobContainerClient.CustomerProvidedKey">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobContainerClient.CustomerProvidedKey"/> to be used when sending requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient._accountName">
            <summary>
            The Storage account name corresponding to the container client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobContainerClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the container client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobContainerClient._name">
            <summary>
            The name of the container.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobContainerClient.Name">
            <summary>
            Gets the name of the container.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the blob container in the storage account to reference.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="blobContainerName">
             The name of the container in the storage account to reference.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
            class.
            </summary>
            <param name="blobContainerUri">
            A <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> referencing the blob container that includes the
            name of the account and the name of the container.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
            class.
            </summary>
            <param name="blobContainerUri">
            A <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> referencing the blob container that includes the
            name of the account and the name of the container.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
            class.
            </summary>
            <param name="blobContainerUri">
            A <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> referencing the blob container that includes the
            name of the account and the name of the container.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
            class.
            </summary>
            <param name="blobContainerUri">
            A <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> referencing the blob container that includes the
            name of the account and the name of the container.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>
            class.
            </summary>
            <param name="containerUri">
            A <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/> referencing the blob container that includes the
            name of the account and the name of the container.
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics"></param>
            /// <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobClient(System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Blobs.BlobClient"/> object by appending
            <paramref name="blobName"/> to the end of <see cref="P:Azure.Storage.Blobs.BlobContainerClient.Uri"/>.  The
            new <see cref="T:Azure.Storage.Blobs.BlobClient"/> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/>.
            </summary>
            <param name="blobName">The name of the blob.</param>
            <returns>A new <see cref="T:Azure.Storage.Blobs.BlobClient"/> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetNameFieldsIfNull">
            <summary>
            Sets the various name fields if they are currently null.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.Create(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.Create(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new container
             under the specified account. If the container with the same name
             already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the newly
             created blob container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.CreateAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.CreateAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new container
             under the specified account. If the container with the same name
             already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the newly
             created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExists(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExists(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new container
             under the specified account. If the container with the same name
             already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the newly
             created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new container
             under the specified account. If the container with the same name
             already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the newly
             created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsInternal(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsInternal(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)"/> operation creates a new container
             under the specified account. If the container with the same name
             already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the newly
             created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.CreateInternal(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.CreateInternal(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken,System.String)"/> operation creates a new container
             under the specified account, if it does not already exist.
             If the container with the same name already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the newly
             created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.Delete(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.Delete(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             container for deletion. The container and any blobs contained
             within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             container for deletion. The container and any blobs contained
             within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExists(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExists(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             container for deletion if it exists. The container and any blobs
             contained within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> Returns true if container exists and was
             deleted, return false otherwise.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             container for deletion if it exists. The container and any blobs
             contained within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> Returns true if container exists and was
             deleted, return false otherwise.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExistsInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExistsInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation marks the specified
             container for deletion if it exists. The container and any blobs
             contained within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> Returns true if container exists and was
             deleted, return false otherwise.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             container for deletion. The container and any blobs contained
             within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation returns all
             user-defined metadata and system properties for the specified
             container. The data returned does not include the container's
             list of blobs.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob container's properties.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             container and its properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation returns all
             user-defined metadata and system properties for the specified
             container. The data returned does not include the container's
             list of blobs.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob container's properties.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             container and its properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetPropertiesInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation returns all
             user-defined metadata and system properties for the specified
             container. The data returned does not include the container's
             list of blobs.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob container's properties.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             container and its properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets one or more
             user-defined name-value pairs for the specified container.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-container-metadata" />.
             </summary>
             <param name="metadata">
             Custom metadata to set for this container.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets one or more
             user-defined name-value pairs for the specified container.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-container-metadata" />.
             </summary>
             <param name="metadata">
             Custom metadata to set for this container.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadataInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadataInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)"/> operation sets one or more
             user-defined name-value pairs for the specified container.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-container-metadata" />.
             </summary>
             <param name="metadata">
             Custom metadata to set for this container.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicy(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicy(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation gets the
             permissions for this container. The permissions indicate whether
             container data may be accessed publicly.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob container's access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the container's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicyAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicyAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation gets the
             permissions for this container. The permissions indicate whether
             container data may be accessed publicly.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob container's access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the container's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicyInternal(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicyAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation gets the
             permissions for this container. The permissions indicate whether
             container data may be accessed publicly.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl" />.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on getting the blob container's access policy.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the container's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets the
             permissions for the specified container. The permissions indicate
             whether blob container data may be accessed publicly.
            
             For more information, see <see href=" https://docs.microsoft.com/rest/api/storageservices/set-container-acl" />.
             </summary>
             <param name="accessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over container permissions.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on setting this blob container's access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             updated container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicyAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicyAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets the
             permissions for the specified container. The permissions indicate
             whether blob container data may be accessed publicly.
            
             For more information, see <see href=" https://docs.microsoft.com/rest/api/storageservices/set-container-acl" />.
             </summary>
             <param name="accessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over container permissions.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on setting this blob container's access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             updated container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicyInternal(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicyAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation sets the
             permissions for the specified container. The permissions indicate
             whether blob container data may be accessed publicly.
            
             For more information, see <see href=" https://docs.microsoft.com/rest/api/storageservices/set-container-acl" />.
             </summary>
             <param name="accessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over container permissions.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on setting this blob container's access policy.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             updated container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobs(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobs(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/> operation returns an async sequence
             of blobs in this container.  Enumerating the blobs may make
             multiple requests to the service while fetching all the values.
             Blobs are ordered lexicographically by name.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-blobs"/>.
             </summary>
             <param name="traits">
             Specifies trait options for shaping the blobs.
             </param>
             <param name="states">
             Specifies state options for filtering the blobs.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only blobs
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:Azure.Pageable`1"/> of <see cref="T:Azure.Storage.Blobs.Models.BlobItem"/>
             describing the blobs in the container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/> operation returns an async
             sequence of blobs in this container.  Enumerating the blobs may
             make multiple requests to the service while fetching all the
             values.  Blobs are ordered lexicographically by name.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-blobs"/>.
             </summary>
             <param name="traits">
             Specifies trait options for shaping the blobs.
             </param>
             <param name="states">
             Specifies state options for filtering the blobs.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only blobs
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:Azure.AsyncPageable`1"/> describing the
             blobs in the container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsInternal(System.String,Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsInternal(System.String,Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)"/> operation returns a
             single segment of blobs in this container, starting
             from the specified <paramref name="marker"/>.  Use an empty
             <paramref name="marker"/> to start enumeration from the beginning
             and the <see cref="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.NextMarker"/> if it's not
             empty to make subsequent calls to <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/>
             to continue enumerating the blobs segment by segment. Blobs are
             ordered lexicographically by name.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-blobs"/>.
             </summary>
             <param name="marker">
             An optional string value that identifies the segment of the list
             of blobs to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.NextMarker"/>
             if the listing operation did not return all blobs remaining to be
             listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker"/> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="traits">
             Specifies trait options for shaping the blobs.
             </param>
             <param name="states">
             Specifies state options for filtering the blobs.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only blobs
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="pageSizeHint">
             Gets or sets a value indicating the size of the page that should be
             requested.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing a
             segment of the blobs in the container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchy(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchy(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/> operation returns
             an async collection of blobs in this container.  Enumerating the
             blobs may make multiple requests to the service while fetching all
             the values.  Blobs are ordered lexicographically by name.   A
             <paramref name="delimiter"/> can be used to traverse a virtual
             hierarchy of blobs as though it were a file system.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-blobs"/>.
             </summary>
             <param name="traits">
             Specifies trait options for shaping the blobs.
             </param>
             <param name="states">
             Specifies state options for filtering the blobs.
             </param>
             <param name="delimiter">
             A <paramref name="delimiter"/> that can be used to traverse a
             virtual hierarchy of blobs as though it were a file system.  The
             delimiter may be a single character or a string.
             <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix"/> will be returned
             in place of all blobs whose names begin with the same substring up
             to the appearance of the delimiter character.  The value of a
             prefix is substring+delimiter, where substring is the common
             substring that begins one or more blob  names, and delimiter is the
             value of <paramref name="delimiter"/>. You can use the value of
             prefix to make a subsequent call to list the blobs that begin with
             this prefix, by specifying the value of the prefix for the
             <paramref name="prefix"/>.
            
             Note that each BlobPrefix element returned counts toward the
             maximum result, just as each Blob element does.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only blobs
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:Azure.Pageable`1"/> of <see cref="T:Azure.Storage.Blobs.Models.BlobHierarchyItem"/>
             describing the blobs in the container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/> operation returns
             an async collection of blobs in this container.  Enumerating the
             blobs may make multiple requests to the service while fetching all
             the values.  Blobs are ordered lexicographically by name.   A
             <paramref name="delimiter"/> can be used to traverse a virtual
             hierarchy of blobs as though it were a file system.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-blobs"/>.
             </summary>
             <param name="traits">
             Specifies trait options for shaping the blobs.
             </param>
             <param name="states">
             Specifies state options for filtering the blobs.
             </param>
             <param name="delimiter">
             A <paramref name="delimiter"/> that can be used to traverse a
             virtual hierarchy of blobs as though it were a file system.  The
             delimiter may be a single character or a string.
             <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix"/> will be returned
             in place of all blobs whose names begin with the same substring up
             to the appearance of the delimiter character.  The value of a
             prefix is substring+delimiter, where substring is the common
             substring that begins one or more blob  names, and delimiter is the
             value of <paramref name="delimiter"/>. You can use the value of
             prefix to make a subsequent call to list the blobs that begin with
             this prefix, by specifying the value of the prefix for the
             <paramref name="prefix"/>.
            
             Note that each BlobPrefix element returned counts toward the
             maximum result, just as each Blob element does.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only blobs
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:Azure.AsyncPageable`1"/> describing the
             blobs in the container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyInternal(System.String,System.String,Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyInternal(System.String,System.String,Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)"/> operation returns
             a single segment of blobs in this container, starting
             from the specified <paramref name="marker"/>.  Use an empty
             <paramref name="marker"/> to start enumeration from the beginning
             and the <see cref="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.NextMarker"/> if it's not
             empty to make subsequent calls to <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>
             to continue enumerating the blobs segment by segment. Blobs are
             ordered lexicographically by name.   A <paramref name="delimiter"/>
             can be used to traverse a virtual hierarchy of blobs as though
             it were a file system.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-blobs"/>.
             </summary>
             <param name="marker">
             An optional string value that identifies the segment of the list
             of blobs to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.NextMarker"/>
             if the listing operation did not return all blobs remaining to be
             listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker"/> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="delimiter">
             A <paramref name="delimiter"/> that can be used to traverse a
             virtual hierarchy of blobs as though it were a file system.  The
             delimiter may be a single character or a string.
             <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix"/> will be returned
             in place of all blobs whose names begin with the same substring up
             to the appearance of the delimiter character.  The value of a
             prefix is substring+delimiter, where substring is the common
             substring that begins one or more blob  names, and delimiter is the
             value of <paramref name="delimiter"/>. You can use the value of
             prefix to make a subsequent call to list the blobs that begin with
             this prefix, by specifying the value of the prefix for the
             <paramref name="prefix"/>.
            
             Note that each BlobPrefix element returned counts toward the
             maximum result, just as each Blob element does.
             </param>
             <param name="traits">
             Specifies trait options for shaping the blobs.
             </param>
             <param name="states">
             Specifies state options for filtering the blobs.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only blobs
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="pageSizeHint">
             Gets or sets a value indicating the size of the page that should be
             requested.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing a
             segment of the blobs in the container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlob(System.String,System.IO.Stream,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlob(System.String,System.IO.Stream,System.Threading.CancellationToken)"/> operation creates a new block
             blob or updates the content of an existing block blob in this
             container.  Updating an existing block blob overwrites any existing
             metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="blobName">The name of the blob to upload.</param>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlobAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlobAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)"/> operation creates a new block
             blob or updates the content of an existing block blob in this
             container.  Updating an existing block blob overwrites any existing
             metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient"/>.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient"/> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
             <param name="blobName">The name of the blob to upload.</param>
             <param name="content">
             A <see cref="T:System.IO.Stream"/> containing the content to upload.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the
             state of the updated block blob.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlob(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlob(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             blob or snapshot for deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="blobName">The name of the blob to delete.</param>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             blob or snapshot for deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="blobName">The name of the blob to delete.</param>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExists(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExists(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             blob or snapshot for deletion, if the blob or snapshot exists. The blob
             is later deleted during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="blobName">The name of the blob to delete.</param>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExistsAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExistsAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the specified
             blob or snapshot for deletion, if the blob or snapshot exists. The blob
             is later deleted during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots"/>.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
             <param name="blobName">The name of the blob to delete.</param>
             <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add conditions on
             deleting this blob.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobErrors">
            <summary>
            Create exceptions for common error cases.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobServiceClient">
            <summary>
            The <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/> allows you to manipulate Azure
            Storage service resources and blob containers. The storage account provides
            the top-level namespace for the Blob service.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobServiceClient._uri">
            <summary>
            Gets the blob service's primary <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobServiceClient.Uri">
            <summary>
            Gets the blob service's primary <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> endpoint.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobServiceClient._pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobServiceClient.Pipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to send
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobServiceClient._authenticationPolicy">
            <summary>
            The authentication policy for our pipeline.  We cache it here in
            case we need to construct a pipeline for authenticating batch
            operations.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobServiceClient.BatchOperationPipeline">
            <summary>
            The <see cref="T:Azure.Core.Pipeline.HttpPipeline"/> transport pipeline used to prepare
            requests for batching without actually sending them.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobServiceClient._clientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobServiceClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobServiceClient.ClientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobServiceClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobServiceClient._customerProvidedKey">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobServiceClient.CustomerProvidedKey"/> to be used when sending requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobServiceClient.CustomerProvidedKey">
            <summary>
            The <see cref="P:Azure.Storage.Blobs.BlobServiceClient.CustomerProvidedKey"/> to be used when sending requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobServiceClient._accountName">
            <summary>
            The Storage account name corresponding to the service client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobServiceClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the service client.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.String,Azure.Storage.Blobs.BlobClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string"/>.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> referencing the blob service.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> referencing the blob service.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> referencing the blob service.
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Blobs.BlobClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> referencing the blob service.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,System.Nullable{Azure.Storage.Blobs.Models.CustomerProvidedKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/> referencing the blob service.
            </param>
            <param name="authentication"></param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="clientDiagnostics"></param>
            <param name="customerProvidedKey">Customer provided key.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainerClient(System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> object by appending
            <paramref name="blobContainerName"/> to the end of <see cref="P:Azure.Storage.Blobs.BlobServiceClient.Uri"/>.
            The new <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> uses the same request
            policy pipeline as the <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/>.
            </summary>
            <param name="blobContainerName">
            The name of the blob container to reference.
            </param>
            <returns>
            A <see cref="T:Azure.Storage.Blobs.BlobContainerClient"/> for the desired container.
            </returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainers(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainers(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)"/> operation returns an async
             sequence of blob containers in the storage account.  Enumerating the
             blob containers may make multiple requests to the service while fetching
             all the values.  Containers are ordered lexicographically by name.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-containers2"/>.
             </summary>
             <param name="traits">
             Specifies trait options for shaping the blob containers.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only containers
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Azure.Response`1"/>
             describing the blob containers in the storage account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)"/> operation returns an async
             sequence of blob containers in the storage account.  Enumerating the
             blob containers may make multiple requests to the service while fetching
             all the values.  Containers are ordered lexicographically by name.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-containers2"/>.
             </summary>
             <param name="traits">
             Specifies trait options for shaping the blob containers.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only containers
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:Azure.AsyncPageable`1"/> describing the
             containers in the storage account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersInternal(System.String,Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersInternal(System.String,Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)"/> operation returns a
             single segment of blob containers in the storage account, starting
             from the specified <paramref name="continuationToken"/>.  Use an empty
             <paramref name="continuationToken"/> to start enumeration from the beginning
             and the <see cref="P:Azure.Storage.Blobs.Models.BlobContainersSegment.NextMarker"/> if it's not
             empty to make subsequent calls to <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)"/>
             to continue enumerating the containers segment by segment.
             Containers are ordered lexicographically by name.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/list-containers2"/>.
             </summary>
             <param name="continuationToken">
             An optional string value that identifies the segment of the list
             of blob containers to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Blobs.Models.BlobContainersSegment.NextMarker"/>
             if the listing operation did not return all blob containers remaining
             to be listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="continuationToken"/> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="traits">
             Specifies trait options for shaping the blob containers.
             </param>
             <param name="prefix">
             Specifies a string that filters the results to return only containers
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="pageSizeHint">
             Gets or sets a value indicating the size of the page that should be
             requested.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing a
             segment of the blob containers in the storage account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfo(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfo(System.Threading.CancellationToken)"/> operation returns the sku
             name and account kind for the specified account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfoAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfoAsync(System.Threading.CancellationToken)"/> operation returns the sku
             name and account kind for the specified account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfoInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfoInternal(System.Boolean,System.Threading.CancellationToken)"/> operation returns the sku
             name and account kind for the specified account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information" />.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing the account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetProperties(System.Threading.CancellationToken)"/> operation gets the properties
             of a storage account’s blob service, including properties for
             Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)"/> operation gets the properties
             of a storage account’s blob service, including properties for
             Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties" />.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetPropertiesInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetPropertiesInternal(System.Boolean,System.Threading.CancellationToken)"/> operation gets the properties
             of a storage account’s blob service, including properties for
             Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties" />.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.SetProperties(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.SetProperties(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)"/> operation sets properties for
             a storage account’s Blob service endpoint, including properties
             for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules
             and soft delete settings.  You can also use this operation to set
             the default request version for all incoming requests to the Blob
             service that do not have a version specified.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties"/>.
             </summary>
             <param name="properties">The blob service properties.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.SetPropertiesAsync(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.SetPropertiesAsync(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)"/> operation sets properties for
             a storage account’s Blob service endpoint, including properties
             for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules
             and soft delete settings.  You can also use this operation to set
             the default request version for all incoming requests to the Blob
             service that do not have a version specified.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties"/>.
             </summary>
             <param name="properties">The blob service properties.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.SetPropertiesInternal(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.SetPropertiesInternal(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Boolean,System.Threading.CancellationToken)"/> operation sets properties for
             a storage account’s Blob service endpoint, including properties
             for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules
             and soft delete settings.  You can also use this operation to set
             the default request version for all incoming requests to the Blob
             service that do not have a version specified.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties"/>.
             </summary>
             <param name="properties">The blob service properties.</param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetStatistics(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetStatistics(System.Threading.CancellationToken)"/> operation retrieves
             statistics related to replication for the Blob service.  It is
             only available on the secondary location endpoint when read-access
             geo-redundant replication (<see cref="F:Azure.Storage.Blobs.Models.SkuName.StandardRagrs"/>)
             is enabled for the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats"/>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the service replication statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)"/> operation retrieves
             statistics related to replication for the Blob service.  It is
             only available on the secondary location endpoint when read-access
             geo-redundant replication (<see cref="F:Azure.Storage.Blobs.Models.SkuName.StandardRagrs"/>)
             is enabled for the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats"/>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the service replication statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetStatisticsInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetStatisticsInternal(System.Boolean,System.Threading.CancellationToken)"/> operation retrieves
             statistics related to replication for the Blob service.  It is
             only available on the secondary location endpoint when read-access
             geo-redundant replication (<see cref="F:Azure.Storage.Blobs.Models.SkuName.StandardRagrs"/>)
             is enabled for the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats"/>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> describing
             the service replication statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKey(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKey(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)"/> operation retrieves a
            key that can be used to delegate Active Directory authorization to
            shared access signatures created with <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
            <param name="startsOn">
            Start time for the key's validity, with null indicating an
            immediate start.  The time should be specified in UTC.
            </param>
            <param name="expiresOn">
            Expiration of the key's validity.  The time should be specified
            in UTC.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing
            the service replication statistics.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyAsync(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyAsync(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)"/> operation retrieves a
            key that can be used to delegate Active Directory authorization to
            shared access signatures created with <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
            <param name="startsOn">
            Start time for the key's validity, with null indicating an
            immediate start.  The time should be specified in UTC.
            </param>
            <param name="expiresOn">
            Expiration of the key's validity.  The time should be specified
            in UTC.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing
            the service replication statistics.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyInternal(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyInternal(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Boolean,System.Threading.CancellationToken)"/> operation retrieves a
            key that can be used to delegate Active Directory authorization to
            shared access signatures created with <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
            <param name="startsOn">
            Start time for the key's validity, with null indicating an
            immediate start.  The time should be specified in UTC.
            </param>
            <param name="expiresOn">
            Expiration of the key's validity.  The time should be specified
            in UTC.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <param name="async"/>
            <returns>
            A <see cref="T:Azure.Response`1"/> describing
            the service replication statistics.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainer(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainer(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new
             blob container under the specified account. If the container with the
             same name already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="blobContainerName">
             The name of the container to create.
             </param>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> referencing the
             newly created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/> operation creates a new
             blob container under the specified account. If the container with the
             same name already exists, the operation fails.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-container"/>.
             </summary>
             <param name="blobContainerName">
             The name of the container to create.
             </param>
             <param name="publicAccessType">
             Optionally specifies whether data in the container may be accessed
             publicly and the level of access. <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer"/>
             specifies full public read access for container and blob data.
             Clients can enumerate blobs within the container via anonymous
             request, but cannot enumerate containers within the storage
             account.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob"/> specifies public
             read access for blobs.  Blob data within this container can be
             read via anonymous request, but container data is not available.
             Clients cannot enumerate blobs within the container via anonymous
             request.  <see cref="F:Azure.Storage.Blobs.Models.PublicAccessType.None"/> specifies that the
             container data is private to the account owner.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1"/> referencing the
             newly created container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainer(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainer(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the
             specified blob container for deletion. The container and any blobs
             contained within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="blobContainerName">
             The name of the container to delete.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/> operation marks the
             specified container for deletion. The container and any blobs
             contained within it are later deleted during garbage collection.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-container" />.
             </summary>
             <param name="blobContainerName">
             The name of the blob container to delete.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions"/> to add
             conditions on the deletion of this blob container.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobUriBuilder">
             <summary>
             The <see cref="T:Azure.Storage.Blobs.BlobUriBuilder"/> class provides a convenient way to
             modify the contents of a <see cref="T:System.Uri"/> instance to point to
             different Azure Storage resources like an account, container, or blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata" />.
             </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.BlobUriBuilder._uri">
            <summary>
            The Uri instance constructed by this builder.  It will be reset to
            null when changes are made and reconstructed when <see cref="T:System.Uri"/>
            is accessed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.Scheme">
            <summary>
            Gets or sets the scheme name of the URI.
            Example: "https"
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.Host">
             <summary>
             Gets or sets the Domain Name System (DNS) host name or IP address
             of a server.
            
             Example: "account.blob.core.windows.net"
             </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.Port">
            <summary>
            Gets or sets the port number of the URI.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.AccountName">
            <summary>
            Gets or sets the Azure Storage account name.  This is only
            populated for IP-style <see cref="T:System.Uri"/>s.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.BlobContainerName">
            <summary>
            Gets or sets the name of a blob storage Container.  The value
            defaults to <see cref="F:System.String.Empty"/> if not present in the
            <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.BlobName">
            <summary>
            Gets or sets the name of a blob.  The value defaults to
            <see cref="F:System.String.Empty"/> if not present in the <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.Snapshot">
            <summary>
            Gets or sets the name of a blob snapshot.  The value defaults to
            <see cref="F:System.String.Empty"/> if not present in the <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.Sas">
            <summary>
            Gets or sets the Shared Access Signature query parameters, or null
            if not present in the <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.BlobUriBuilder.Query">
            <summary>
            Gets or sets any query information included in the URI that's not
            relevant to addressing Azure storage resources.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobUriBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobUriBuilder"/>
            class with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">
            The <see cref="T:System.Uri"/> to a storage resource.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobUriBuilder.ToUri">
            <summary>
            Returns the <see cref="T:System.Uri"/> constructed from the
            <see cref="T:Azure.Storage.Blobs.BlobUriBuilder"/>'s fields. The <see cref="P:System.Uri.Query"/>
            property contains the SAS and additional query parameters.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobUriBuilder.ToString">
            <summary>
            Returns the display string for the specified
            <see cref="T:Azure.Storage.Blobs.BlobUriBuilder"/> instance.
            </summary>
            <returns>
            The display string for the specified <see cref="T:Azure.Storage.Blobs.BlobUriBuilder"/>
            instance.
            </returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobUriBuilder.ResetUri">
            <summary>
            Reset our cached URI.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobUriBuilder.BuildUri">
            <summary>
            Construct a <see cref="T:Azure.Core.RequestUriBuilder"/> representing the
            <see cref="T:Azure.Storage.Blobs.BlobUriBuilder"/>'s fields. The <see cref="P:System.Uri.Query"/>
            property contains the SAS, snapshot, and unparsed query parameters.
            </summary>
            <returns>The constructed <see cref="T:Azure.Core.RequestUriBuilder"/>.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient">
            <summary>
            Azure Blob Storage
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.Service">
            <summary>
            Service operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.SetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.BlobServiceProperties,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets properties for a storage account's Blob service endpoint, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blobServiceProperties">The StorageService properties.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.SetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.BlobServiceProperties,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.SetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blobServiceProperties">The StorageService properties.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.SetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.SetPropertiesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.SetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.SetPropertiesAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            gets the properties of a storage account's Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Storage Service Properties.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.GetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.GetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetPropertiesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.GetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.GetPropertiesAsync Azure.Response{Azure.Storage.Blobs.Models.BlobServiceProperties}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetStatisticsAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves statistics related to replication for the Blob service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Statistics for the storage service.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetStatisticsAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.GetStatisticsAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.GetStatisticsAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetStatisticsAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.GetStatisticsAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.GetStatisticsAsync Azure.Response{Azure.Storage.Blobs.Models.BlobServiceStatistics}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.ListBlobContainersSegmentAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.ListBlobContainersIncludeType},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The List Containers Segment operation returns a list of the containers under the specified account
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="prefix">Filters the results to return only containers whose name begins with the specified prefix.</param>
            <param name="marker">A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify that the container's metadata be returned as part of the response body.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An enumeration of containers</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.ListBlobContainersSegmentAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.ListBlobContainersIncludeType},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.ListBlobContainersSegmentAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="prefix">Filters the results to return only containers whose name begins with the specified prefix.</param>
            <param name="marker">A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify that the container's metadata be returned as part of the response body.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.ListBlobContainersSegmentAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.ListBlobContainersSegmentAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.ListBlobContainersSegmentAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.ListBlobContainersSegmentAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContainersSegment}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetUserDelegationKeyAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.KeyInfo,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a user delegation key for the Blob service. This is only a valid operation when using bearer token authentication.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="keyInfo">Key information</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A user delegation key</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetUserDelegationKeyAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.KeyInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.GetUserDelegationKeyAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="keyInfo">Key information</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.GetUserDelegationKeyAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetUserDelegationKeyAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.GetUserDelegationKeyAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.GetUserDelegationKeyAsync Azure.Response{Azure.Storage.Blobs.Models.UserDelegationKey}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetAccountInfoAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the sku name and account kind
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.AccountInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetAccountInfoAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri)">
            <summary>
            Create the Service.GetAccountInfoAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <returns>The Service.GetAccountInfoAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.GetAccountInfoAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.GetAccountInfoAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.GetAccountInfoAsync Azure.Response{Azure.Storage.Blobs.Models.AccountInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.SubmitBatchAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Batch operation allows multiple API calls to be embedded into a single HTTP request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="multipartContentType">Required. The value of this header must be multipart/mixed with a batch boundary. Example header value: multipart/mixed; boundary=batch_{GUID}</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobBatchResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.SubmitBatchAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.SubmitBatchAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="multipartContentType">Required. The value of this header must be multipart/mixed with a batch boundary. Example header value: multipart/mixed; boundary=batch_{GUID}</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.SubmitBatchAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Service.SubmitBatchAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Service.SubmitBatchAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Service.SubmitBatchAsync Azure.Response{Azure.Storage.Blobs.Models.BlobBatchResult}.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.Container">
            <summary>
            Container operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.CreateAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.PublicAccessType,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            creates a new container under the specified account. If the container with the same name already exists, the operation fails
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="access">Specifies whether data in the container may be accessed publicly and the level of access</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.CreateAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.PublicAccessType,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Create the Container.CreateAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="access">Specifies whether data in the container may be accessed publicly and the level of access</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.CreateAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.CreateAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.CreateAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.CreateAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.GetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            returns all user-defined metadata and system properties for the specified container. The data returned does not include the container's list of blobs
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.FlattenedContainerItem}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.GetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Create the Container.GetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.GetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.GetPropertiesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.GetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.GetPropertiesAsync Azure.Response{Azure.Storage.Blobs.Models.FlattenedContainerItem}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.DeleteAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            operation marks the specified container for deletion. The container and any blobs contained within it are later deleted during garbage collection
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.DeleteAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.DeleteAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.DeleteAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.DeleteAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.DeleteAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.DeleteAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.SetMetadataAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            operation sets one or more user-defined name-value pairs for the specified container.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.SetMetadataAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.SetMetadataAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.SetMetadataAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.SetMetadataAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.SetMetadataAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.SetMetadataAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.GetAccessPolicyAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            gets the permissions for the specified container. The permissions indicate whether container data may be accessed publicly.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContainerAccessPolicy}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.GetAccessPolicyAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Create the Container.GetAccessPolicyAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.GetAccessPolicyAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.GetAccessPolicyAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.GetAccessPolicyAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.GetAccessPolicyAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContainerAccessPolicy}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.SetAccessPolicyAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            sets the permissions for the specified container. The permissions indicate whether blobs in a container may be accessed publicly.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="access">Specifies whether data in the container may be accessed publicly and the level of access</param>
            <param name="permissions">the acls for the container</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.SetAccessPolicyAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.SetAccessPolicyAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="access">Specifies whether data in the container may be accessed publicly and the level of access</param>
            <param name="permissions">the acls for the container</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.SetAccessPolicyAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.SetAccessPolicyAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.SetAccessPolicyAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.SetAccessPolicyAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.AcquireLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="duration">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.AcquireLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.AcquireLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="duration">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.AcquireLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.AcquireLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.AcquireLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.AcquireLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ReleaseLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ReleaseLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.ReleaseLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.ReleaseLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ReleaseLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.ReleaseLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.ReleaseLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContainerInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.RenewLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.RenewLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.RenewLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.RenewLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.RenewLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.RenewLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.RenewLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.BreakLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="breakPeriod">For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BrokenLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.BreakLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.BreakLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="breakPeriod">For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.BreakLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.BreakLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.BreakLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.BreakLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BrokenLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ChangeLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ChangeLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Container.ChangeLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.ChangeLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ChangeLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.ChangeLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.ChangeLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ListBlobsFlatSegmentAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.ListBlobsIncludeItem},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The List Blobs operation returns a list of the blobs under the specified container
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="prefix">Filters the results to return only containers whose name begins with the specified prefix.</param>
            <param name="marker">A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify one or more datasets to include in the response.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An enumeration of blobs</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ListBlobsFlatSegmentAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.ListBlobsIncludeItem},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Container.ListBlobsFlatSegmentAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="prefix">Filters the results to return only containers whose name begins with the specified prefix.</param>
            <param name="marker">A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify one or more datasets to include in the response.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.ListBlobsFlatSegmentAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ListBlobsFlatSegmentAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.ListBlobsFlatSegmentAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.ListBlobsFlatSegmentAsync Azure.Response{Azure.Storage.Blobs.Models.BlobsFlatSegment}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ListBlobsHierarchySegmentAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.ListBlobsIncludeItem},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The List Blobs operation returns a list of the blobs under the specified container
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="prefix">Filters the results to return only containers whose name begins with the specified prefix.</param>
            <param name="delimiter">When the request includes this parameter, the operation returns a BlobPrefix element in the response body that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string.</param>
            <param name="marker">A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify one or more datasets to include in the response.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An enumeration of blobs</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ListBlobsHierarchySegmentAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.ListBlobsIncludeItem},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Container.ListBlobsHierarchySegmentAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="prefix">Filters the results to return only containers whose name begins with the specified prefix.</param>
            <param name="delimiter">When the request includes this parameter, the operation returns a BlobPrefix element in the response body that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string.</param>
            <param name="marker">A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify one or more datasets to include in the response.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Container.ListBlobsHierarchySegmentAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Container.ListBlobsHierarchySegmentAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Container.ListBlobsHierarchySegmentAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Container.ListBlobsHierarchySegmentAsync Azure.Response{Azure.Storage.Blobs.Models.BlobsHierarchySegment}.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.Blob">
            <summary>
            Blob operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.DownloadAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Download operation reads or downloads a blob from the system, including its metadata and properties. You can also call Download to read a snapshot.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="rangeGetContentHash">When set to true and specified together with the Range, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size.</param>
            <param name="rangeGetContentCRC64">When set to true and specified together with the Range, the service returns the CRC64 hash for the range, as long as the range is less than or equal to 4 MB in size.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.FlattenedDownloadProperties}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.DownloadAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.DownloadAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="rangeGetContentHash">When set to true and specified together with the Range, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size.</param>
            <param name="rangeGetContentCRC64">When set to true and specified together with the Range, the service returns the CRC64 hash for the range, as long as the range is less than or equal to 4 MB in size.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.DownloadAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.DownloadAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.DownloadAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.DownloadAsync Azure.Response{Azure.Storage.Blobs.Models.FlattenedDownloadProperties}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.GetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system properties for the blob. It does not return the content of the blob.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobProperties}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.GetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.GetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.GetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.GetPropertiesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.GetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.GetPropertiesAsync Azure.Response{Azure.Storage.Blobs.Models.BlobProperties}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.DeleteAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.Storage.Blobs.Models.DeleteSnapshotsOption},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            If the storage account's soft delete feature is disabled then, when a blob is deleted, it is permanently removed from the storage account. If the storage account's soft delete feature is enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible immediately. However, the blob service retains the blob or snapshot for the number of days specified by the DeleteRetentionPolicy section of [Storage service properties] (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is permanently removed from the storage account. Note that you continue to be charged for the soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the "include=deleted" query parameter to discover which blobs and snapshots have been soft deleted. You can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a soft-deleted blob or snapshot causes the service to return an HTTP status code of 404 (ResourceNotFound).
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="deleteSnapshots">Required if the blob has associated snapshots. Specify one of the following two options: include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots and not the blob itself</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.DeleteAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.Storage.Blobs.Models.DeleteSnapshotsOption},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.DeleteAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="deleteSnapshots">Required if the blob has associated snapshots. Specify one of the following two options: include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots and not the blob itself</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.DeleteAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.DeleteAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.DeleteAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.DeleteAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetAccessControlAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Set the owner, group, permissions, or access control list for a blob.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="owner">Optional. The owner of the blob or directory.</param>
            <param name="group">Optional. The owning group of the blob or directory.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixAcl">Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobSetAccessControlResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetAccessControlAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Blob.SetAccessControlAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="owner">Optional. The owner of the blob or directory.</param>
            <param name="group">Optional. The owning group of the blob or directory.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixAcl">Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.SetAccessControlAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetAccessControlAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.SetAccessControlAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.SetAccessControlAsync Azure.Response{Azure.Storage.Blobs.Models.BlobSetAccessControlResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.GetAccessControlAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the owner, group, permissions, or access control list for a blob.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="upn">Optional. Valid only when Hierarchical Namespace is enabled for the account. If "true", the identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If "false", the values will be returned as Azure Active Directory Object IDs. The default value is false.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobGetAccessControlResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.GetAccessControlAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Blob.GetAccessControlAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="upn">Optional. Valid only when Hierarchical Namespace is enabled for the account. If "true", the identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If "false", the values will be returned as Azure Active Directory Object IDs. The default value is false.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.GetAccessControlAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.GetAccessControlAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.GetAccessControlAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.GetAccessControlAsync Azure.Response{Azure.Storage.Blobs.Models.BlobGetAccessControlResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.RenameAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.PathRenameMode},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename a blob/file.  By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).  To fail if the destination already exists, use a conditional request with If-None-Match: "*".
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="renameSource">The file or directory to be renamed. The value must have the following format: "/{filesysystem}/{path}".  If "x-ms-properties" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="pathRenameMode">Determines the behavior of the rename operation</param>
            <param name="directoryProperties">Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is base64 encoded.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixUmask">Only valid if Hierarchical Namespace is enabled for the account. This umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. Otherwise the corresponding permission will be determined by the permission. A 4-digit octal notation (e.g. 0022) is supported here. If no umask was specified, a default umask - 0027 will be used.</param>
            <param name="cacheControl">Cache control for given resource</param>
            <param name="contentType">Content type for given resource</param>
            <param name="contentEncoding">Content encoding for given resource</param>
            <param name="contentLanguage">Content language for given resource</param>
            <param name="contentDisposition">Content disposition for given resource</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="sourceLeaseId">A lease ID for the source path. If specified, the source path must have an active lease and the leaase ID must match.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobRenameResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.RenameAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.PathRenameMode},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.RenameAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="renameSource">The file or directory to be renamed. The value must have the following format: "/{filesysystem}/{path}".  If "x-ms-properties" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="pathRenameMode">Determines the behavior of the rename operation</param>
            <param name="directoryProperties">Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is base64 encoded.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixUmask">Only valid if Hierarchical Namespace is enabled for the account. This umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. Otherwise the corresponding permission will be determined by the permission. A 4-digit octal notation (e.g. 0022) is supported here. If no umask was specified, a default umask - 0027 will be used.</param>
            <param name="cacheControl">Cache control for given resource</param>
            <param name="contentType">Content type for given resource</param>
            <param name="contentEncoding">Content encoding for given resource</param>
            <param name="contentLanguage">Content language for given resource</param>
            <param name="contentDisposition">Content disposition for given resource</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="sourceLeaseId">A lease ID for the source path. If specified, the source path must have an active lease and the leaase ID must match.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.RenameAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.RenameAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.RenameAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.RenameAsync Azure.Response{Azure.Storage.Blobs.Models.BlobRenameResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.UndeleteAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Undelete a blob that was previously soft deleted
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.UndeleteAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Blob.UndeleteAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.UndeleteAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.UndeleteAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.UndeleteAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.UndeleteAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetHttpHeadersAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Set HTTP Headers operation sets system properties on the blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.SetHttpHeadersOperation}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetHttpHeadersAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String)">
            <summary>
            Create the Blob.SetHttpHeadersAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.SetHttpHeadersAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetHttpHeadersAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.SetHttpHeadersAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.SetHttpHeadersAsync Azure.Response{Azure.Storage.Blobs.Models.SetHttpHeadersOperation}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetMetadataAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more name-value pairs
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.SetMetadataOperation}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetMetadataAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.SetMetadataAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.SetMetadataAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetMetadataAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.SetMetadataAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.SetMetadataAsync Azure.Response{Azure.Storage.Blobs.Models.SetMetadataOperation}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.AcquireLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete operations
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="duration">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.AcquireLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.AcquireLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="duration">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.AcquireLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.AcquireLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.AcquireLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.AcquireLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.ReleaseLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete operations
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.ReleaseLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.ReleaseLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.ReleaseLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.ReleaseLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.ReleaseLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.ReleaseLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.RenewLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete operations
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.RenewLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.RenewLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.RenewLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.RenewLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.RenewLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.RenewLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.ChangeLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete operations
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.ChangeLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.ChangeLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="leaseId">Specifies the current lease ID on the resource.</param>
            <param name="proposedLeaseId">Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.ChangeLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.ChangeLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.ChangeLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.ChangeLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BlobLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.BreakLeaseAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete operations
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="breakPeriod">For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BrokenLease}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.BreakLeaseAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Blob.BreakLeaseAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="breakPeriod">For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.BreakLeaseAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.BreakLeaseAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.BreakLeaseAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.BreakLeaseAsync Azure.Response{Azure.Storage.Blobs.Models.BrokenLease}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.CreateSnapshotAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Create Snapshot operation creates a read-only snapshot of a blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobSnapshotInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.CreateSnapshotAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String)">
            <summary>
            Create the Blob.CreateSnapshotAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.CreateSnapshotAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.CreateSnapshotAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.CreateSnapshotAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.CreateSnapshotAsync Azure.Response{Azure.Storage.Blobs.Models.BlobSnapshotInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.StartCopyFromUriAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Start Copy From URL operation copies a blob or an internet resource to a new blob.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copySource">Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="rehydratePriority">Optional: Indicates the priority with which to rehydrate an archived blob.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobCopyInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.StartCopyFromUriAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String)">
            <summary>
            Create the Blob.StartCopyFromUriAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copySource">Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="rehydratePriority">Optional: Indicates the priority with which to rehydrate an archived blob.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.StartCopyFromUriAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.StartCopyFromUriAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.StartCopyFromUriAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.StartCopyFromUriAsync Azure.Response{Azure.Storage.Blobs.Models.BlobCopyInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.CopyFromUriAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return a response until the copy is complete.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copySource">Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobCopyInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.CopyFromUriAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.String)">
            <summary>
            Create the Blob.CopyFromUriAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copySource">Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.CopyFromUriAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.CopyFromUriAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.CopyFromUriAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.CopyFromUriAsync Azure.Response{Azure.Storage.Blobs.Models.BlobCopyInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.AbortCopyFromUriAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination blob with zero length and full metadata.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copyId">The copy identifier provided in the x-ms-copy-id header of the original Copy Blob operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.AbortCopyFromUriAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Create the Blob.AbortCopyFromUriAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copyId">The copy identifier provided in the x-ms-copy-id header of the original Copy Blob operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Blob.AbortCopyFromUriAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.AbortCopyFromUriAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.AbortCopyFromUriAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.AbortCopyFromUriAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetAccessTierAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.AccessTier,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium storage account and on a block blob in a blob storage account (locally redundant storage only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's ETag.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="tier">Indicates the tier to be set on the blob.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="rehydratePriority">Optional: Indicates the priority with which to rehydrate an archived blob.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetAccessTierAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.AccessTier,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.String,System.String)">
            <summary>
            Create the Blob.SetAccessTierAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="tier">Indicates the tier to be set on the blob.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="rehydratePriority">Optional: Indicates the priority with which to rehydrate an archived blob.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <returns>The Blob.SetAccessTierAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Blob.SetAccessTierAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Blob.SetAccessTierAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Blob.SetAccessTierAsync Azure.Response.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.PageBlob">
            <summary>
            PageBlob operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.CreateAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.String,System.String,System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.Int64},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Create operation creates a new page blob.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="blobContentLength">This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="tier">Optional. Indicates the tier to be set on the page blob.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="blobSequenceNumber">Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.CreateAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.String,System.String,System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.Int64},System.String)">
            <summary>
            Create the PageBlob.CreateAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="blobContentLength">This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="tier">Optional. Indicates the tier to be set on the page blob.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="blobSequenceNumber">Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.CreateAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.CreateAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.CreateAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.CreateAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UploadPagesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Upload Pages operation writes a range of pages to a page blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifSequenceNumberLessThanOrEqualTo">Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.</param>
            <param name="ifSequenceNumberLessThan">Specify this header value to operate only on a blob if it has a sequence number less than the specified.</param>
            <param name="ifSequenceNumberEqualTo">Specify this header value to operate only on a blob if it has the specified sequence number.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UploadPagesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.UploadPagesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifSequenceNumberLessThanOrEqualTo">Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.</param>
            <param name="ifSequenceNumberLessThan">Specify this header value to operate only on a blob if it has a sequence number less than the specified.</param>
            <param name="ifSequenceNumberEqualTo">Specify this header value to operate only on a blob if it has the specified sequence number.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.UploadPagesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UploadPagesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.UploadPagesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.UploadPagesAsync Azure.Response{Azure.Storage.Blobs.Models.PageInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.ClearPagesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Clear Pages operation clears a set of pages from a page blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifSequenceNumberLessThanOrEqualTo">Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.</param>
            <param name="ifSequenceNumberLessThan">Specify this header value to operate only on a blob if it has a sequence number less than the specified.</param>
            <param name="ifSequenceNumberEqualTo">Specify this header value to operate only on a blob if it has the specified sequence number.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.ClearPagesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.ClearPagesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifSequenceNumberLessThanOrEqualTo">Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.</param>
            <param name="ifSequenceNumberLessThan">Specify this header value to operate only on a blob if it has a sequence number less than the specified.</param>
            <param name="ifSequenceNumberEqualTo">Specify this header value to operate only on a blob if it has the specified sequence number.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.ClearPagesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.ClearPagesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.ClearPagesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.ClearPagesAsync Azure.Response{Azure.Storage.Blobs.Models.PageInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UploadPagesFromUriAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Upload Pages operation writes a range of pages to a page blob where the contents are read from a URL
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="sourceUri">Specify a URL to the copy source.</param>
            <param name="sourceRange">Bytes of source data in the specified range. The length of this range should match the ContentLength header and x-ms-range/Range destination range header.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="range">The range of bytes to which the source range would be written. The range should be 512 aligned and range-end is required.</param>
            <param name="sourceContentHash">Specify the md5 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="sourceContentcrc64">Specify the crc64 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifSequenceNumberLessThanOrEqualTo">Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.</param>
            <param name="ifSequenceNumberLessThan">Specify this header value to operate only on a blob if it has a sequence number less than the specified.</param>
            <param name="ifSequenceNumberEqualTo">Specify this header value to operate only on a blob if it has the specified sequence number.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UploadPagesFromUriAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.String,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.UploadPagesFromUriAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="sourceUri">Specify a URL to the copy source.</param>
            <param name="sourceRange">Bytes of source data in the specified range. The length of this range should match the ContentLength header and x-ms-range/Range destination range header.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="range">The range of bytes to which the source range would be written. The range should be 512 aligned and range-end is required.</param>
            <param name="sourceContentHash">Specify the md5 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="sourceContentcrc64">Specify the crc64 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifSequenceNumberLessThanOrEqualTo">Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.</param>
            <param name="ifSequenceNumberLessThan">Specify this header value to operate only on a blob if it has a sequence number less than the specified.</param>
            <param name="ifSequenceNumberEqualTo">Specify this header value to operate only on a blob if it has the specified sequence number.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.UploadPagesFromUriAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UploadPagesFromUriAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.UploadPagesFromUriAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.UploadPagesFromUriAsync Azure.Response{Azure.Storage.Blobs.Models.PageInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.GetPageRangesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a page blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageRangesInfoInternal}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.GetPageRangesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.GetPageRangesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.GetPageRangesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.GetPageRangesAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.GetPageRangesAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.GetPageRangesAsync Azure.Response{Azure.Storage.Blobs.Models.PageRangesInfoInternal}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.GetPageRangesDiffAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were changed between target blob and previous snapshot.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="prevsnapshot">Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that specifies that the response will contain only pages that were changed between target blob and previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note that incremental snapshots are currently supported only for blobs created on or after January 1, 2016.</param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageRangesInfoInternal}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.GetPageRangesDiffAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.GetPageRangesDiffAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="prevsnapshot">Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that specifies that the response will contain only pages that were changed between target blob and previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note that incremental snapshots are currently supported only for blobs created on or after January 1, 2016.</param>
            <param name="range">Return only the bytes of the blob in the specified range.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.GetPageRangesDiffAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.GetPageRangesDiffAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.GetPageRangesDiffAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.GetPageRangesDiffAsync Azure.Response{Azure.Storage.Blobs.Models.PageRangesInfoInternal}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.ResizeAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Resize the Blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blobContentLength">This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageBlobInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.ResizeAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.ResizeAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blobContentLength">This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.ResizeAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.ResizeAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.ResizeAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.ResizeAsync Azure.Response{Azure.Storage.Blobs.Models.PageBlobInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UpdateSequenceNumberAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.Int64},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the sequence number of the blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="sequenceNumberAction">Required if the x-ms-blob-sequence-number header is set for the request. This property applies to page blobs only. This property indicates how the service should modify the blob's sequence number</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="blobSequenceNumber">Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.PageBlobInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UpdateSequenceNumberAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.Int64},System.String)">
            <summary>
            Create the PageBlob.UpdateSequenceNumberAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="sequenceNumberAction">Required if the x-ms-blob-sequence-number header is set for the request. This property applies to page blobs only. This property indicates how the service should modify the blob's sequence number</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="blobSequenceNumber">Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.UpdateSequenceNumberAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.UpdateSequenceNumberAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.UpdateSequenceNumberAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.UpdateSequenceNumberAsync Azure.Response{Azure.Storage.Blobs.Models.PageBlobInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.CopyIncrementalAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob. The snapshot is copied such that only the differential changes between the previously copied snapshot are transferred to the destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual. This API is supported since REST version 2016-05-31.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copySource">Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobCopyInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.CopyIncrementalAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the PageBlob.CopyIncrementalAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="copySource">Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The PageBlob.CopyIncrementalAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.PageBlob.CopyIncrementalAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the PageBlob.CopyIncrementalAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The PageBlob.CopyIncrementalAsync Azure.Response{Azure.Storage.Blobs.Models.BlobCopyInfo}.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.AppendBlob">
            <summary>
            AppendBlob operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.CreateAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Nullable{System.Int32},System.String,System.String,System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Create Append Blob operation creates a new append blob.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.CreateAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Int64,System.Nullable{System.Int32},System.String,System.String,System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the AppendBlob.CreateAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The AppendBlob.CreateAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.CreateAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the AppendBlob.CreateAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The AppendBlob.CreateAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.AppendBlockAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.Nullable{System.Int32},System.Byte[],System.Byte[],System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob. The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version 2015-02-21 version or later.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="maxSize">Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="appendPosition">Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobAppendInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.AppendBlockAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.Nullable{System.Int32},System.Byte[],System.Byte[],System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the AppendBlob.AppendBlockAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="maxSize">Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="appendPosition">Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The AppendBlob.AppendBlockAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.AppendBlockAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the AppendBlob.AppendBlockAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The AppendBlob.AppendBlockAsync Azure.Response{Azure.Storage.Blobs.Models.BlobAppendInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.AppendBlockFromUriAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob where the contents are read from a source url. The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version 2015-02-21 version or later.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="sourceUri">Specify a URL to the copy source.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="sourceRange">Bytes of source data in the specified range.</param>
            <param name="sourceContentHash">Specify the md5 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="sourceContentcrc64">Specify the crc64 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="maxSize">Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="appendPosition">Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobAppendInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.AppendBlockFromUriAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Uri,System.Int64,System.String,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the AppendBlob.AppendBlockFromUriAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="sourceUri">Specify a URL to the copy source.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="sourceRange">Bytes of source data in the specified range.</param>
            <param name="sourceContentHash">Specify the md5 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="sourceContentcrc64">Specify the crc64 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="maxSize">Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="appendPosition">Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed).</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The AppendBlob.AppendBlockFromUriAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.AppendBlob.AppendBlockFromUriAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the AppendBlob.AppendBlockFromUriAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The AppendBlob.AppendBlockFromUriAsync Azure.Response{Azure.Storage.Blobs.Models.BlobAppendInfo}.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.BlockBlob">
            <summary>
            BlockBlob operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.UploadAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Upload Block Blob operation updates the content of an existing block blob. Updating an existing block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a partial update of the content of a block blob, use the Put Block List operation.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.UploadAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.IO.Stream,System.Int64,System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the BlockBlob.UploadAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="body">Initial data</param>
            <param name="contentLength">The length of the request.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The BlockBlob.UploadAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.UploadAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the BlockBlob.UploadAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The BlockBlob.UploadAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.StageBlockAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Int64,System.IO.Stream,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Stage Block operation creates a new block to be committed as part of a blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blockId">A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="body">Initial data</param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlockInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.StageBlockAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Int64,System.IO.Stream,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String)">
            <summary>
            Create the BlockBlob.StageBlockAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blockId">A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="body">Initial data</param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The BlockBlob.StageBlockAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.StageBlockAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the BlockBlob.StageBlockAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The BlockBlob.StageBlockAsync Azure.Response{Azure.Storage.Blobs.Models.BlockInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.StageBlockFromUriAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Int64,System.Uri,System.String,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Stage Block operation creates a new block to be committed as part of a blob where the contents are read from a URL.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blockId">A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="sourceUri">Specify a URL to the copy source.</param>
            <param name="sourceRange">Bytes of source data in the specified range.</param>
            <param name="sourceContentHash">Specify the md5 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="sourceContentcrc64">Specify the crc64 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlockInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.StageBlockFromUriAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Int64,System.Uri,System.String,System.Byte[],System.Byte[],System.Nullable{System.Int32},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the BlockBlob.StageBlockFromUriAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blockId">A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block.</param>
            <param name="contentLength">The length of the request.</param>
            <param name="sourceUri">Specify a URL to the copy source.</param>
            <param name="sourceRange">Bytes of source data in the specified range.</param>
            <param name="sourceContentHash">Specify the md5 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="sourceContentcrc64">Specify the crc64 calculated for the range of bytes that must be read from the copy source.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The BlockBlob.StageBlockFromUriAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.StageBlockFromUriAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the BlockBlob.StageBlockFromUriAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The BlockBlob.StageBlockFromUriAsync Azure.Response{Azure.Storage.Blobs.Models.BlockInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.CommitBlockListAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.BlockLookupList,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob. In order to be written as part of a blob, a block must have been successfully written to the server in a prior Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together. You can do this by specifying whether to commit a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded version of the block, whichever list it may belong to.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blocks">A list of block IDs split between the committed block list, in the uncommitted block list, or in the uncommitted block list first and then in the committed block list.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.CommitBlockListAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.BlockLookupList,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.EncryptionAlgorithmType},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the BlockBlob.CommitBlockListAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="blocks">A list of block IDs split between the committed block list, in the uncommitted block list, or in the uncommitted block list first and then in the committed block list.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="blobCacheControl">Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentType">Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentEncoding">Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentLanguage">Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.</param>
            <param name="blobContentHash">Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</param>
            <param name="transactionalContentHash">Specify the transactional md5 for the body, to be validated by the service.</param>
            <param name="transactionalContentCrc64">Specify the transactional crc64 for the body, to be validated by the service.</param>
            <param name="metadata">Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="blobContentDisposition">Optional. Sets the blob's Content-Disposition header.</param>
            <param name="encryptionKey">Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.</param>
            <param name="encryptionKeySha256">The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="encryptionAlgorithm">The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.</param>
            <param name="tier">Optional. Indicates the tier to be set on the blob.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The BlockBlob.CommitBlockListAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.CommitBlockListAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the BlockBlob.CommitBlockListAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The BlockBlob.CommitBlockListAsync Azure.Response{Azure.Storage.Blobs.Models.BlobContentInfo}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.GetBlockListAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.BlockListType,System.String,System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block blob
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="listType">Specifies whether to return the list of committed blocks, the list of uncommitted blocks, or both lists together.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.GetBlockListOperation}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.GetBlockListAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Blobs.Models.BlockListType,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Create the BlockBlob.GetBlockListAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="listType">Specifies whether to return the list of committed blocks, the list of uncommitted blocks, or both lists together.</param>
            <param name="snapshot">The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating a Snapshot of a Blob.</a></param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The BlockBlob.GetBlockListAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.BlockBlob.GetBlockListAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the BlockBlob.GetBlockListAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The BlockBlob.GetBlockListAsync Azure.Response{Azure.Storage.Blobs.Models.GetBlockListOperation}.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobRestClient.Directory">
            <summary>
            Directory operations for Azure Blob Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.CreateAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a directory. By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).  To fail if the destination already exists, use a conditional request with If-None-Match: "*".
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="directoryProperties">Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is base64 encoded.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixUmask">Only valid if Hierarchical Namespace is enabled for the account. This umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. Otherwise the corresponding permission will be determined by the permission. A 4-digit octal notation (e.g. 0022) is supported here. If no umask was specified, a default umask - 0027 will be used.</param>
            <param name="cacheControl">Cache control for given resource</param>
            <param name="contentType">Content type for given resource</param>
            <param name="contentEncoding">Content encoding for given resource</param>
            <param name="contentLanguage">Content language for given resource</param>
            <param name="contentDisposition">Content disposition for given resource</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.DirectoryCreateResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.CreateAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Directory.CreateAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="directoryProperties">Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is base64 encoded.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixUmask">Only valid if Hierarchical Namespace is enabled for the account. This umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. Otherwise the corresponding permission will be determined by the permission. A 4-digit octal notation (e.g. 0022) is supported here. If no umask was specified, a default umask - 0027 will be used.</param>
            <param name="cacheControl">Cache control for given resource</param>
            <param name="contentType">Content type for given resource</param>
            <param name="contentEncoding">Content encoding for given resource</param>
            <param name="contentLanguage">Content language for given resource</param>
            <param name="contentDisposition">Content disposition for given resource</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Directory.CreateAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.CreateAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Directory.CreateAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Directory.CreateAsync Azure.Response{Azure.Storage.Blobs.Models.DirectoryCreateResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.RenameAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.Storage.Blobs.Models.PathRenameMode},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename a directory. By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken. This operation supports conditional HTTP requests. For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations). To fail if the destination already exists, use a conditional request with If-None-Match: "*".
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="renameSource">The file or directory to be renamed. The value must have the following format: "/{filesysystem}/{path}".  If "x-ms-properties" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="marker">When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.</param>
            <param name="pathRenameMode">Determines the behavior of the rename operation</param>
            <param name="directoryProperties">Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is base64 encoded.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixUmask">Only valid if Hierarchical Namespace is enabled for the account. This umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. Otherwise the corresponding permission will be determined by the permission. A 4-digit octal notation (e.g. 0022) is supported here. If no umask was specified, a default umask - 0027 will be used.</param>
            <param name="cacheControl">Cache control for given resource</param>
            <param name="contentType">Content type for given resource</param>
            <param name="contentEncoding">Content encoding for given resource</param>
            <param name="contentLanguage">Content language for given resource</param>
            <param name="contentDisposition">Content disposition for given resource</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="sourceLeaseId">A lease ID for the source path. If specified, the source path must have an active lease and the leaase ID must match.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.DirectoryRenameResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.RenameAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.Storage.Blobs.Models.PathRenameMode},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Directory.RenameAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="renameSource">The file or directory to be renamed. The value must have the following format: "/{filesysystem}/{path}".  If "x-ms-properties" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="marker">When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.</param>
            <param name="pathRenameMode">Determines the behavior of the rename operation</param>
            <param name="directoryProperties">Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is base64 encoded.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixUmask">Only valid if Hierarchical Namespace is enabled for the account. This umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. Otherwise the corresponding permission will be determined by the permission. A 4-digit octal notation (e.g. 0022) is supported here. If no umask was specified, a default umask - 0027 will be used.</param>
            <param name="cacheControl">Cache control for given resource</param>
            <param name="contentType">Content type for given resource</param>
            <param name="contentEncoding">Content encoding for given resource</param>
            <param name="contentLanguage">Content language for given resource</param>
            <param name="contentDisposition">Content disposition for given resource</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="sourceLeaseId">A lease ID for the source path. If specified, the source path must have an active lease and the leaase ID must match.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="sourceIfModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="sourceIfUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="sourceIfMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="sourceIfNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Directory.RenameAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.RenameAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Directory.RenameAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Directory.RenameAsync Azure.Response{Azure.Storage.Blobs.Models.DirectoryRenameResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.DeleteAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Boolean,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the directory
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="recursiveDirectoryDelete">If "true", all paths beneath the directory will be deleted. If "false" and the directory is non-empty, an error occurs.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="marker">When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.DirectoryDeleteResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.DeleteAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Boolean,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.String)">
            <summary>
            Create the Directory.DeleteAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="recursiveDirectoryDelete">If "true", all paths beneath the directory will be deleted. If "false" and the directory is non-empty, an error occurs.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="marker">When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Directory.DeleteAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.DeleteAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Directory.DeleteAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Directory.DeleteAsync Azure.Response{Azure.Storage.Blobs.Models.DirectoryDeleteResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.SetAccessControlAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Set the owner, group, permissions, or access control list for a directory.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="owner">Optional. The owner of the blob or directory.</param>
            <param name="group">Optional. The owning group of the blob or directory.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixAcl">Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.DirectorySetAccessControlResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.SetAccessControlAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Directory.SetAccessControlAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="owner">Optional. The owner of the blob or directory.</param>
            <param name="group">Optional. The owning group of the blob or directory.</param>
            <param name="posixPermissions">Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.</param>
            <param name="posixAcl">Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Directory.SetAccessControlAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.SetAccessControlAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Directory.SetAccessControlAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Directory.SetAccessControlAsync Azure.Response{Azure.Storage.Blobs.Models.DirectorySetAccessControlResult}.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.GetAccessControlAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the owner, group, permissions, or access control list for a directory.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="upn">Optional. Valid only when Hierarchical Namespace is enabled for the account. If "true", the identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If "false", the values will be returned as Azure Active Directory Object IDs. The default value is false.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult}</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.GetAccessControlAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ETag},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Create the Directory.GetAccessControlAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, container, or blob that is the targe of the desired operation.</param>
            <param name="timeout">The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a></param>
            <param name="upn">Optional. Valid only when Hierarchical Namespace is enabled for the account. If "true", the identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If "false", the values will be returned as Azure Active Directory Object IDs. The default value is false.</param>
            <param name="leaseId">If specified, the operation only succeeds if the resource's lease is active and matches this ID.</param>
            <param name="ifMatch">Specify an ETag value to operate only on blobs with a matching value.</param>
            <param name="ifNoneMatch">Specify an ETag value to operate only on blobs without a matching value.</param>
            <param name="ifModifiedSince">Specify this header value to operate only on a blob if it has been modified since the specified date/time.</param>
            <param name="ifUnmodifiedSince">Specify this header value to operate only on a blob if it has not been modified since the specified date/time.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Directory.GetAccessControlAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobRestClient.Directory.GetAccessControlAsync_CreateResponse(Azure.Response)">
            <summary>
            Create the Directory.GetAccessControlAsync response or throw a failure exception.
            </summary>
            <param name="response">The raw Response.</param>
            <returns>The Directory.GetAccessControlAsync Azure.Response{Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult}.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.AccessTier">
            <summary>
            Indicates the tier to be set on the blob.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.AccessTier._value">
            <summary>
            The AccessTier value.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> structure.
            </summary>
            <param name="value">The string value of the instance.</param>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P4">
            <summary>
            P4
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P6">
            <summary>
            P6
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P10">
            <summary>
            P10
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P15">
            <summary>
            P15
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P20">
            <summary>
            P20
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P30">
            <summary>
            P30
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P40">
            <summary>
            P40
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P50">
            <summary>
            P50
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P60">
            <summary>
            P60
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P70">
            <summary>
            P70
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.P80">
            <summary>
            P80
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.Hot">
            <summary>
            Hot
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.Cool">
            <summary>
            Cool
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccessTier.Archive">
            <summary>
            Archive
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.op_Equality(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.AccessTier)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> values are the same.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are the same; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.op_Inequality(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.AccessTier)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> values are different.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are different; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.op_Implicit(System.String)~Azure.Storage.Blobs.Models.AccessTier">
            <summary>
            Converts a string to a <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>.
            </summary>
            <param name="value">The string value to convert.</param>
            <returns>The AccessTier value.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.Equals(System.Object)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.Equals(Azure.Storage.Blobs.Models.AccessTier)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> instances are equal.
            </summary>
            <param name="other">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.GetHashCode">
            <summary>
            Get a hash code for the <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/>.
            </summary>
            <returns>Hash code for the AccessTier.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccessTier.ToString">
            <summary>
            Convert the <see cref="T:Azure.Storage.Blobs.Models.AccessTier"/> to a string.
            </summary>
            <returns>String representation of the AccessTier.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.AccountInfo">
            <summary>
            AccountInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccountInfo.SkuName">
            <summary>
            Identifies the sku name of the account
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AccountInfo.AccountKind">
            <summary>
            Identifies the account kind
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AccountInfo.#ctor">
            <summary>
            Prevent direct instantiation of AccountInfo instances.
            You can use BlobsModelFactory.AccountInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobsModelFactory">
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
            <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo(Azure.Storage.Blobs.Models.SkuName,Azure.Storage.Blobs.Models.AccountKind)">
            <summary>
            Creates a new AccountInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Creates a new BlobAppendInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobBlock(System.String,System.Int32)">
            <summary>
            Creates a new BlobBlock instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,Azure.ETag,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier})">
            <summary>
            Creates a new BlobContainerAccessPolicy instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerInfo(Azure.ETag,System.DateTimeOffset)">
            <summary>
            Creates a new BlobContainerInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerItem(System.String,Azure.Storage.Blobs.Models.BlobContainerProperties)">
            <summary>
            Creates a new BlobContainerItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new BlobContainerProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.Int64)">
            <summary>
            Creates a new BlobContentInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.CopyStatus)">
            <summary>
            Creates a new BlobCopyInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGeoReplication(Azure.Storage.Blobs.Models.BlobGeoReplicationStatus,System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new BlobGeoReplication instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo(Azure.ETag,System.DateTimeOffset)">
            <summary>
            Creates a new BlobInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem(System.String,System.Boolean,Azure.Storage.Blobs.Models.BlobItemProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new BlobItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.Uri,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new BlobItemProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobLease(Azure.ETag,System.DateTimeOffset,System.String)">
            <summary>
            Creates a new BlobLease instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.Boolean,System.String,Azure.Storage.Blobs.Models.CopyStatus,System.Int64,System.Uri,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary>
            Creates a new BlobProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics(Azure.Storage.Blobs.Models.BlobGeoReplication)">
            <summary>
            Creates a new BlobServiceStatistics instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset,System.Boolean)">
            <summary>
            Creates a new BlobSnapshotInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String)">
            <summary>
            Creates a new BlockInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList(System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock})">
            <summary>
            Creates a new BlockList instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo(Azure.ETag,System.DateTimeOffset,System.Int64)">
            <summary>
            Creates a new PageBlobInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String)">
            <summary>
            Creates a new PageInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey(System.String,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Creates a new UserDelegationKey instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem(System.String,Azure.Storage.Blobs.Models.BlobItem)">
            <summary>
            Creates a new BlobHierarchyItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)">
            <summary>
            Creates a new BlobDownloadInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange},System.Collections.Generic.IEnumerable{Azure.HttpRange})">
            <summary>
            Creates a new PageRangesInfo instance for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.AccountKind">
            <summary>
            Identifies the account kind
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.AccountKind.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.AccountKind.BlobStorage">
            <summary>
            BlobStorage
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.AccountKind.StorageV2">
            <summary>
            StorageV2
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.ArchiveStatus">
            <summary>
            ArchiveStatus values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ArchiveStatus.RehydratePendingToHot">
            <summary>
            rehydrate-pending-to-hot
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ArchiveStatus.RehydratePendingToCool">
            <summary>
            rehydrate-pending-to-cool
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobGetAccessControlResult">
            <summary>
            Blob GetAccessControlResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.LastModified">
            <summary>
            The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.XMSOwner">
            <summary>
            The owner of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.XMSGroup">
            <summary>
            The owning group of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.XMSPermissions">
            <summary>
            The POSIX access permissions for the file owner, the file owning group, and others. Included in the response if Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.XMSAcl">
            <summary>
            The POSIX access control list for the file or directory.  Included in the response only if the action is "getAccessControl" and Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobGetAccessControlResult.#ctor">
            <summary>
            Prevent direct instantiation of BlobGetAccessControlResult instances.
            You can use BlobsModelFactory.BlobGetAccessControlResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobRenameResult">
            <summary>
            Blob RenameResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobRenameResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobRenameResult.LastModified">
            <summary>
            The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobRenameResult.ContentLength">
            <summary>
            The size of the resource in bytes.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobRenameResult.#ctor">
            <summary>
            Prevent direct instantiation of BlobRenameResult instances.
            You can use BlobsModelFactory.BlobRenameResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobSetAccessControlResult">
            <summary>
            Blob SetAccessControlResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSetAccessControlResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSetAccessControlResult.LastModified">
            <summary>
            The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobSetAccessControlResult.#ctor">
            <summary>
            Prevent direct instantiation of BlobSetAccessControlResult instances.
            You can use BlobsModelFactory.BlobSetAccessControlResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobAccessPolicy">
            <summary>
            An Access policy
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.StartsOn">
            <summary>
            the date-time the policy is active
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.ExpiresOn">
            <summary>
            the date-time the policy expires
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.Permissions">
            <summary>
            the permissions for the acl policy
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAccessPolicy.#ctor">
            <summary>
            Prevent direct instantiation of BlobAccessPolicy instances.
            You can use BlobsModelFactory.BlobAccessPolicy instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAccessPolicy.ToXml(Azure.Storage.Blobs.Models.BlobAccessPolicy,System.String,System.String)">
            <summary>
            Serialize a BlobAccessPolicy instance as XML.
            </summary>
            <param name="value">The BlobAccessPolicy instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "AccessPolicy".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAccessPolicy.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobAccessPolicy instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobAccessPolicy instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobAnalyticsLogging">
            <summary>
            Azure Analytics Logging settings.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Version">
            <summary>
            The version of Storage Analytics to configure.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Delete">
            <summary>
            Indicates whether all delete requests should be logged.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Read">
            <summary>
            Indicates whether all read requests should be logged.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Write">
            <summary>
            Indicates whether all write requests should be logged.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.RetentionPolicy">
            <summary>
            the retention policy which determines how long the associated data should persist
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.#ctor">
            <summary>
            Creates a new BlobAnalyticsLogging instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobAnalyticsLogging instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.ToXml(Azure.Storage.Blobs.Models.BlobAnalyticsLogging,System.String,System.String)">
            <summary>
            Serialize a BlobAnalyticsLogging instance as XML.
            </summary>
            <param name="value">The BlobAnalyticsLogging instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "Logging".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobAnalyticsLogging instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobAnalyticsLogging instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobAppendInfo">
            <summary>
            BlobAppendInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ContentHash">
            <summary>
            If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ContentCrc64">
            <summary>
            This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.BlobAppendOffset">
            <summary>
            This response header is returned only for append operations. It returns the offset at which the block was committed, in bytes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.BlobCommittedBlockCount">
            <summary>
            The number of committed blocks present in the blob. This header is returned only for append blobs.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobAppendInfo.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned when the block was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobAppendInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlobAppendInfo instances.
            You can use BlobsModelFactory.BlobAppendInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobBatchResult">
            <summary>
            BlobBatchResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobBatchResult.ContentType">
            <summary>
            The media type of the body of the response. For batch requests, this is multipart/mixed; boundary=batchresponse_GUID
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobBatchResult.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobBatchResult.#ctor">
            <summary>
            Prevent direct instantiation of BlobBatchResult instances.
            You can use BlobsModelFactory.BlobBatchResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobBlock">
            <summary>
            Represents a single block in a block blob.  It describes the block's ID and size.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobBlock.Name">
            <summary>
            The base64 encoded block ID.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobBlock.Size">
            <summary>
            The block size in bytes.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobBlock.#ctor(System.String,System.Int32)">
            <summary>
            Prevent direct instantiation of BlobBlock instances.
            You can use BlobsModelFactory.BlobBlock instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobBlock.Equals(Azure.Storage.Blobs.Models.BlobBlock)">
            <summary>
            Check if two BlobBlock instances are equal.
            </summary>
            <param name="other">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobBlock.Equals(System.Object)">
            <summary>
            Check if two BlobBlock instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobBlock.GetHashCode">
            <summary>
            Get a hash code for the BlobBlock.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobBlock.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobBlock instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobBlock instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy">
            <summary>
            BlobContainerAccessPolicy
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.BlobPublicAccess">
            <summary>
            Indicated whether data in the container may be accessed publicly and the level of access
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.SignedIdentifiers">
            <summary>
            a collection of signed identifiers
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.#ctor">
            <summary>
            Creates a new BlobContainerAccessPolicy instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContainerInfo">
            <summary>
            BlobContainerInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlobContainerInfo instances.
            You can use BlobsModelFactory.BlobContainerInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContainerItem">
            <summary>
            An Azure Storage container
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerItem.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerItem.Properties">
            <summary>
            Properties of a container
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerItem.#ctor">
            <summary>
            Creates a new BlobContainerItem instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerItem.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobContainerItem instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerItem.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobContainerItem instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobContainerItem instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContainerProperties">
            <summary>
            Properties of a container
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LastModified">
            <summary>
            Last-Modified
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseStatus">
            <summary>
            LeaseStatus
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseState">
            <summary>
            LeaseState
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseDuration">
            <summary>
            LeaseDuration
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.PublicAccess">
            <summary>
            PublicAccess
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.HasImmutabilityPolicy">
            <summary>
            HasImmutabilityPolicy
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.HasLegalHold">
            <summary>
            HasLegalHold
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.ETag">
            <summary>
            ETag
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainerProperties.Metadata">
            <summary>
            Metadata
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerProperties.#ctor">
            <summary>
            Creates a new BlobContainerProperties instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerProperties.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobContainerProperties instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerProperties.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobContainerProperties instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobContainerProperties instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainerProperties.CustomizeFromXml(System.Xml.Linq.XElement,Azure.Storage.Blobs.Models.BlobContainerProperties)">
            <summary>
            Update the Metadata property based on the value stored
            in the parent XML node
            </summary>
            <param name="element">XML element</param>
            <param name="value">value for element</param>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContainersSegment">
            <summary>
            An enumeration of containers
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainersSegment.ServiceEndpoint">
            <summary>
            ServiceEndpoint
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainersSegment.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainersSegment.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainersSegment.MaxResults">
            <summary>
            MaxResults
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainersSegment.NextMarker">
            <summary>
            NextMarker
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContainersSegment.BlobContainerItems">
            <summary>
            BlobContainerItems
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainersSegment.#ctor">
            <summary>
            Creates a new BlobContainersSegment instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainersSegment.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobContainersSegment instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContainersSegment.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobContainersSegment instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobContainersSegment instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContentInfo">
            <summary>
            BlobContentInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContentInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContentInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContentInfo.ContentHash">
            <summary>
            If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContentInfo.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobContentInfo.BlobSequenceNumber">
            <summary>
            The current sequence number for the page blob.  This is only returned for page blobs.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobContentInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlobContentInfo instances.
            You can use BlobsModelFactory.BlobContentInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobCopyInfo">
            <summary>
            BlobCopyInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCopyInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCopyInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCopyInfo.CopyId">
            <summary>
            String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCopyInfo.CopyStatus">
            <summary>
            State of the copy operation identified by x-ms-copy-id.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobCopyInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlobCopyInfo instances.
            You can use BlobsModelFactory.BlobCopyInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobCorsRule">
            <summary>
            CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedOrigins">
            <summary>
            The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedMethods">
            <summary>
            The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedHeaders">
            <summary>
            the request headers that the origin domain may specify on the CORS request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCorsRule.ExposedHeaders">
            <summary>
            The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobCorsRule.MaxAgeInSeconds">
            <summary>
            The maximum amount time that a browser should cache the preflight OPTIONS request.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobCorsRule.#ctor">
            <summary>
            Prevent direct instantiation of BlobCorsRule instances.
            You can use BlobsModelFactory.BlobCorsRule instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobCorsRule.ToXml(Azure.Storage.Blobs.Models.BlobCorsRule,System.String,System.String)">
            <summary>
            Serialize a BlobCorsRule instance as XML.
            </summary>
            <param name="value">The BlobCorsRule instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "CorsRule".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobCorsRule.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobCorsRule instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobCorsRule instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobErrorCode">
            <summary>
            Error codes returned by the service
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobErrorCode._value">
            <summary>
            The BlobErrorCode value.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> structure.
            </summary>
            <param name="value">The string value of the instance.</param>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountAlreadyExists">
            <summary>
            AccountAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountBeingCreated">
            <summary>
            AccountBeingCreated
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountIsDisabled">
            <summary>
            AccountIsDisabled
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthenticationFailed">
            <summary>
            AuthenticationFailed
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationFailure">
            <summary>
            AuthorizationFailure
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ConditionHeadersNotSupported">
            <summary>
            ConditionHeadersNotSupported
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ConditionNotMet">
            <summary>
            ConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.EmptyMetadataKey">
            <summary>
            EmptyMetadataKey
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InsufficientAccountPermissions">
            <summary>
            InsufficientAccountPermissions
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InternalError">
            <summary>
            InternalError
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidAuthenticationInfo">
            <summary>
            InvalidAuthenticationInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidHeaderValue">
            <summary>
            InvalidHeaderValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidHttpVerb">
            <summary>
            InvalidHttpVerb
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidInput">
            <summary>
            InvalidInput
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidMd5">
            <summary>
            InvalidMd5
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidMetadata">
            <summary>
            InvalidMetadata
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidQueryParameterValue">
            <summary>
            InvalidQueryParameterValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidRange">
            <summary>
            InvalidRange
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidResourceName">
            <summary>
            InvalidResourceName
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidUri">
            <summary>
            InvalidUri
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidXmlDocument">
            <summary>
            InvalidXmlDocument
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidXmlNodeValue">
            <summary>
            InvalidXmlNodeValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.Md5Mismatch">
            <summary>
            Md5Mismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MetadataTooLarge">
            <summary>
            MetadataTooLarge
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingContentLengthHeader">
            <summary>
            MissingContentLengthHeader
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredQueryParameter">
            <summary>
            MissingRequiredQueryParameter
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredHeader">
            <summary>
            MissingRequiredHeader
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredXmlNode">
            <summary>
            MissingRequiredXmlNode
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MultipleConditionHeadersNotSupported">
            <summary>
            MultipleConditionHeadersNotSupported
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.OperationTimedOut">
            <summary>
            OperationTimedOut
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.OutOfRangeInput">
            <summary>
            OutOfRangeInput
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.OutOfRangeQueryParameterValue">
            <summary>
            OutOfRangeQueryParameterValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.RequestBodyTooLarge">
            <summary>
            RequestBodyTooLarge
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceTypeMismatch">
            <summary>
            ResourceTypeMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.RequestUrlFailedToParse">
            <summary>
            RequestUrlFailedToParse
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceAlreadyExists">
            <summary>
            ResourceAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceNotFound">
            <summary>
            ResourceNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ServerBusy">
            <summary>
            ServerBusy
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedHeader">
            <summary>
            UnsupportedHeader
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedXmlNode">
            <summary>
            UnsupportedXmlNode
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedQueryParameter">
            <summary>
            UnsupportedQueryParameter
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedHttpVerb">
            <summary>
            UnsupportedHttpVerb
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AppendPositionConditionNotMet">
            <summary>
            AppendPositionConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobAlreadyExists">
            <summary>
            BlobAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobNotFound">
            <summary>
            BlobNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobOverwritten">
            <summary>
            BlobOverwritten
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobTierInadequateForContentLength">
            <summary>
            BlobTierInadequateForContentLength
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlockCountExceedsLimit">
            <summary>
            BlockCountExceedsLimit
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlockListTooLong">
            <summary>
            BlockListTooLong
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.CannotChangeToLowerTier">
            <summary>
            CannotChangeToLowerTier
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.CannotVerifyCopySource">
            <summary>
            CannotVerifyCopySource
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerAlreadyExists">
            <summary>
            ContainerAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerBeingDeleted">
            <summary>
            ContainerBeingDeleted
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerDisabled">
            <summary>
            ContainerDisabled
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerNotFound">
            <summary>
            ContainerNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContentLengthLargerThanTierLimit">
            <summary>
            ContentLengthLargerThanTierLimit
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.CopyAcrossAccountsNotSupported">
            <summary>
            CopyAcrossAccountsNotSupported
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.CopyIdMismatch">
            <summary>
            CopyIdMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.FeatureVersionMismatch">
            <summary>
            FeatureVersionMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopyBlobMismatch">
            <summary>
            IncrementalCopyBlobMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopyOfEralierVersionSnapshotNotAllowed">
            <summary>
            IncrementalCopyOfEralierVersionSnapshotNotAllowed
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopySourceMustBeSnapshot">
            <summary>
            IncrementalCopySourceMustBeSnapshot
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InfiniteLeaseDurationRequired">
            <summary>
            InfiniteLeaseDurationRequired
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobOrBlock">
            <summary>
            InvalidBlobOrBlock
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobTier">
            <summary>
            InvalidBlobTier
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobType">
            <summary>
            InvalidBlobType
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlockId">
            <summary>
            InvalidBlockId
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlockList">
            <summary>
            InvalidBlockList
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidOperation">
            <summary>
            InvalidOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidPageRange">
            <summary>
            InvalidPageRange
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidSourceBlobType">
            <summary>
            InvalidSourceBlobType
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidSourceBlobUrl">
            <summary>
            InvalidSourceBlobUrl
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidVersionForPageBlobOperation">
            <summary>
            InvalidVersionForPageBlobOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseAlreadyPresent">
            <summary>
            LeaseAlreadyPresent
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseAlreadyBroken">
            <summary>
            LeaseAlreadyBroken
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithBlobOperation">
            <summary>
            LeaseIdMismatchWithBlobOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithContainerOperation">
            <summary>
            LeaseIdMismatchWithContainerOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithLeaseOperation">
            <summary>
            LeaseIdMismatchWithLeaseOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMissing">
            <summary>
            LeaseIdMissing
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBreakingAndCannotBeAcquired">
            <summary>
            LeaseIsBreakingAndCannotBeAcquired
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBreakingAndCannotBeChanged">
            <summary>
            LeaseIsBreakingAndCannotBeChanged
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBrokenAndCannotBeRenewed">
            <summary>
            LeaseIsBrokenAndCannotBeRenewed
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseLost">
            <summary>
            LeaseLost
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithBlobOperation">
            <summary>
            LeaseNotPresentWithBlobOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithContainerOperation">
            <summary>
            LeaseNotPresentWithContainerOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithLeaseOperation">
            <summary>
            LeaseNotPresentWithLeaseOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.MaxBlobSizeConditionNotMet">
            <summary>
            MaxBlobSizeConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.NoPendingCopyOperation">
            <summary>
            NoPendingCopyOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.OperationNotAllowedOnIncrementalCopyBlob">
            <summary>
            OperationNotAllowedOnIncrementalCopyBlob
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.PendingCopyOperation">
            <summary>
            PendingCopyOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotCannotBeNewer">
            <summary>
            PreviousSnapshotCannotBeNewer
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotNotFound">
            <summary>
            PreviousSnapshotNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotOperationNotSupported">
            <summary>
            PreviousSnapshotOperationNotSupported
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SequenceNumberConditionNotMet">
            <summary>
            SequenceNumberConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SequenceNumberIncrementTooLarge">
            <summary>
            SequenceNumberIncrementTooLarge
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnapshotCountExceeded">
            <summary>
            SnapshotCountExceeded
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnaphotOperationRateExceeded">
            <summary>
            SnaphotOperationRateExceeded
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnapshotsPresent">
            <summary>
            SnapshotsPresent
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SourceConditionNotMet">
            <summary>
            SourceConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.SystemInUse">
            <summary>
            SystemInUse
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.TargetConditionNotMet">
            <summary>
            TargetConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnauthorizedBlobOverwrite">
            <summary>
            UnauthorizedBlobOverwrite
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobBeingRehydrated">
            <summary>
            BlobBeingRehydrated
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobArchived">
            <summary>
            BlobArchived
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobNotArchived">
            <summary>
            BlobNotArchived
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationSourceIPMismatch">
            <summary>
            AuthorizationSourceIPMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationProtocolMismatch">
            <summary>
            AuthorizationProtocolMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationPermissionMismatch">
            <summary>
            AuthorizationPermissionMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationServiceMismatch">
            <summary>
            AuthorizationServiceMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationResourceTypeMismatch">
            <summary>
            AuthorizationResourceTypeMismatch
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Equality(Azure.Storage.Blobs.Models.BlobErrorCode,Azure.Storage.Blobs.Models.BlobErrorCode)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> values are the same.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are the same; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Inequality(Azure.Storage.Blobs.Models.BlobErrorCode,Azure.Storage.Blobs.Models.BlobErrorCode)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> values are different.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are different; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Implicit(System.String)~Azure.Storage.Blobs.Models.BlobErrorCode">
            <summary>
            Converts a string to a <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/>.
            </summary>
            <param name="value">The string value to convert.</param>
            <returns>The BlobErrorCode value.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.Equals(System.Object)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.Equals(Azure.Storage.Blobs.Models.BlobErrorCode)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> instances are equal.
            </summary>
            <param name="other">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.GetHashCode">
            <summary>
            Get a hash code for the <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/>.
            </summary>
            <returns>Hash code for the BlobErrorCode.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobErrorCode.ToString">
            <summary>
            Convert the <see cref="T:Azure.Storage.Blobs.Models.BlobErrorCode"/> to a string.
            </summary>
            <returns>String representation of the BlobErrorCode.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobGeoReplication">
            <summary>
            Geo-Replication information for the Secondary Storage Service
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGeoReplication.Status">
            <summary>
            The status of the secondary location
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobGeoReplication.LastSyncedOn">
            <summary>
            A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobGeoReplication.#ctor">
            <summary>
            Prevent direct instantiation of BlobGeoReplication instances.
            You can use BlobsModelFactory.BlobGeoReplication instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobGeoReplication.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobGeoReplication instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobGeoReplication instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus">
            <summary>
            The status of the secondary location
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Live">
            <summary>
            live
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Bootstrap">
            <summary>
            bootstrap
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Unavailable">
            <summary>
            unavailable
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobInfo">
            <summary>
            BlobInfo
            </summary>
            <summary>
            BlobInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobInfo.LastModified">
            <summary>
            Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlobInfo instances.
            You can use BlobsModelFactory.BlobInfo instead.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobInfo.BlobSequenceNumber">
            <summary>
            The current sequence number for a page blob. This header is not
            returned for block blobs or append blobs
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobItem">
            <summary>
            An Azure Storage blob
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItem.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItem.Deleted">
            <summary>
            Deleted
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItem.Snapshot">
            <summary>
            Snapshot
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItem.Properties">
            <summary>
            Properties of a blob
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItem.Metadata">
            <summary>
            Metadata
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobItem.#ctor">
            <summary>
            Creates a new BlobItem instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobItem.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobItem instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobItem.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobItem instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobItem instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobItemProperties">
            <summary>
            Properties of a blob
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.LastModified">
            <summary>
            Last-Modified
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentLength">
            <summary>
            Size in bytes
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentType">
            <summary>
            Content-Type
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentEncoding">
            <summary>
            Content-Encoding
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentLanguage">
            <summary>
            Content-Language
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentHash">
            <summary>
            Content-MD5
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentDisposition">
            <summary>
            Content-Disposition
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CacheControl">
            <summary>
            Cache-Control
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.BlobSequenceNumber">
            <summary>
            x-ms-blob-sequence-number
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.BlobType">
            <summary>
            BlobType
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseStatus">
            <summary>
            LeaseStatus
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseState">
            <summary>
            LeaseState
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseDuration">
            <summary>
            LeaseDuration
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyId">
            <summary>
            CopyId
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyStatus">
            <summary>
            CopyStatus
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopySource">
            <summary>
            CopySource
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyProgress">
            <summary>
            CopyProgress
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyStatusDescription">
            <summary>
            CopyStatusDescription
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ServerEncrypted">
            <summary>
            ServerEncrypted
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.IncrementalCopy">
            <summary>
            IncrementalCopy
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.DestinationSnapshot">
            <summary>
            DestinationSnapshot
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.RemainingRetentionDays">
            <summary>
            RemainingRetentionDays
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTier">
            <summary>
            AccessTier
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTierInferred">
            <summary>
            AccessTierInferred
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ArchiveStatus">
            <summary>
            ArchiveStatus
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CustomerProvidedKeySha256">
            <summary>
            CustomerProvidedKeySha256
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.ETag">
            <summary>
            ETag
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CreatedOn">
            <summary>
            CreatedOn
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyCompletedOn">
            <summary>
            CopyCompletedOn
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.DeletedOn">
            <summary>
            DeletedOn
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTierChangedOn">
            <summary>
            AccessTierChangedOn
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobItemProperties.#ctor">
            <summary>
            Prevent direct instantiation of BlobItemProperties instances.
            You can use BlobsModelFactory.BlobItemProperties instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobItemProperties.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobItemProperties instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobItemProperties instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobLease">
            <summary>
            BlobLease
            </summary>
            <summary>
            Lease
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobLease.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobLease.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobLease.LeaseId">
            <summary>
            Uniquely identifies a container's or blob's lease
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobLease.#ctor">
            <summary>
            Prevent direct instantiation of BlobLease instances.
            You can use BlobsModelFactory.BlobLease instead.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobLease.LeaseTime">
            <summary>
            Gets the approximate time remaining in the lease period, in
            seconds.  This is only provided when breaking a lease.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobMetrics">
            <summary>
            a summary of request statistics grouped by API in hour or minute aggregates for blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobMetrics.Version">
            <summary>
            The version of Storage Analytics to configure.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobMetrics.Enabled">
            <summary>
            Indicates whether metrics are enabled for the Blob service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobMetrics.RetentionPolicy">
            <summary>
            the retention policy which determines how long the associated data should persist
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobMetrics.IncludeApis">
            <summary>
            Indicates whether metrics should generate summary statistics for called API operations.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobMetrics.#ctor">
            <summary>
            Creates a new BlobMetrics instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobMetrics.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobMetrics instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobMetrics.ToXml(Azure.Storage.Blobs.Models.BlobMetrics,System.String,System.String)">
            <summary>
            Serialize a BlobMetrics instance as XML.
            </summary>
            <param name="value">The BlobMetrics instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "Metrics".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobMetrics.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobMetrics instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobMetrics instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobPrefix">
            <summary>
            BlobPrefix
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobPrefix.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobPrefix.#ctor">
            <summary>
            Prevent direct instantiation of BlobPrefix instances.
            You can use BlobsModelFactory.BlobPrefix instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobPrefix.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobPrefix instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobPrefix instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobProperties">
            <summary>
            BlobProperties
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.LastModified">
            <summary>
            Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CreatedOn">
            <summary>
            Returns the date and time the blob was created.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.Metadata">
            <summary>
            x-ms-meta
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.BlobType">
            <summary>
            The blob's type.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CopyCompletedOn">
            <summary>
            Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatusDescription">
            <summary>
            Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CopyId">
            <summary>
            String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CopyProgress">
            <summary>
            Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CopySource">
            <summary>
            URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus">
            <summary>
            State of the copy operation identified by x-ms-copy-id.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.IsIncrementalCopy">
            <summary>
            Included if the blob is incremental copy blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.DestinationSnapshot">
            <summary>
            Included if the blob is incremental copy blob or incremental copy snapshot, if x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot for this blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseDuration">
            <summary>
            When a blob is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseState">
            <summary>
            Lease state of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseStatus">
            <summary>
            The current lease status of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ContentLength">
            <summary>
            The number of bytes present in the response body.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ContentType">
            <summary>
            The content type specified for the blob. The default content type is 'application/octet-stream'
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ContentHash">
            <summary>
            If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ContentEncoding">
            <summary>
            This header returns the value that was specified for the Content-Encoding request header
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ContentDisposition">
            <summary>
            This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ContentLanguage">
            <summary>
            This header returns the value that was specified for the Content-Language request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.CacheControl">
            <summary>
            This header is returned if it was previously specified for the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.BlobSequenceNumber">
            <summary>
            The current sequence number for a page blob. This header is not returned for block blobs or append blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.AcceptRanges">
            <summary>
            Indicates that the service supports requests for partial blob content.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.BlobCommittedBlockCount">
            <summary>
            The number of committed blocks present in the blob. This header is returned only for append blobs.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only returned when the metadata was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTier">
            <summary>
            The tier of page blob on a premium storage account or tier of block blob on blob storage LRS accounts. For a list of allowed premium page blob tiers, see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage#features. For blob storage LRS accounts, valid values are Hot/Cool/Archive.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTierInferred">
            <summary>
            For page blobs on a premium storage account only. If the access tier is not explicitly set on the blob, the tier is inferred based on its content length and this header will be returned with true value.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.ArchiveStatus">
            <summary>
            For blob storage LRS accounts, valid values are rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not complete then this header is returned indicating that rehydrate is pending and also tells the destination tier.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTierChangedOn">
            <summary>
            The time the tier was changed on the object. This is only returned if the tier on the block blob was ever set.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobProperties.#ctor">
            <summary>
            Creates a new BlobProperties instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobRetentionPolicy">
            <summary>
            the retention policy which determines how long the associated data should persist
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobRetentionPolicy.Enabled">
            <summary>
            Indicates whether a retention policy is enabled for the storage service
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobRetentionPolicy.Days">
            <summary>
            Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobRetentionPolicy.#ctor">
            <summary>
            Prevent direct instantiation of BlobRetentionPolicy instances.
            You can use BlobsModelFactory.BlobRetentionPolicy instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobRetentionPolicy.ToXml(Azure.Storage.Blobs.Models.BlobRetentionPolicy,System.String,System.String)">
            <summary>
            Serialize a BlobRetentionPolicy instance as XML.
            </summary>
            <param name="value">The BlobRetentionPolicy instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "RetentionPolicy".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobRetentionPolicy.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobRetentionPolicy instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobRetentionPolicy instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobServiceProperties">
            <summary>
            Storage Service Properties.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.Logging">
            <summary>
            Azure Analytics Logging settings.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.HourMetrics">
            <summary>
            a summary of request statistics grouped by API in hour or minute aggregates for blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.MinuteMetrics">
            <summary>
            a summary of request statistics grouped by API in hour or minute aggregates for blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.Cors">
            <summary>
            The set of CORS rules.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.DefaultServiceVersion">
            <summary>
            The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.DeleteRetentionPolicy">
            <summary>
            the retention policy which determines how long the associated data should persist
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceProperties.StaticWebsite">
            <summary>
            The properties that enable an account to host a static website
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceProperties.#ctor">
            <summary>
            Creates a new BlobServiceProperties instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceProperties.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobServiceProperties instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceProperties.ToXml(Azure.Storage.Blobs.Models.BlobServiceProperties,System.String,System.String)">
            <summary>
            Serialize a BlobServiceProperties instance as XML.
            </summary>
            <param name="value">The BlobServiceProperties instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "StorageServiceProperties".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceProperties.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobServiceProperties instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobServiceProperties instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobServiceStatistics">
            <summary>
            Statistics for the storage service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobServiceStatistics.GeoReplication">
            <summary>
            Geo-Replication information for the Secondary Storage Service
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceStatistics.#ctor">
            <summary>
            Creates a new BlobServiceStatistics instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceStatistics.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobServiceStatistics instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobServiceStatistics.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobServiceStatistics instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobServiceStatistics instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobSignedIdentifier">
            <summary>
            signed identifier
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSignedIdentifier.Id">
            <summary>
            a unique id
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSignedIdentifier.AccessPolicy">
            <summary>
            An Access policy
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobSignedIdentifier.#ctor">
            <summary>
            Creates a new BlobSignedIdentifier instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobSignedIdentifier.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobSignedIdentifier instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobSignedIdentifier.ToXml(Azure.Storage.Blobs.Models.BlobSignedIdentifier,System.String,System.String)">
            <summary>
            Serialize a BlobSignedIdentifier instance as XML.
            </summary>
            <param name="value">The BlobSignedIdentifier instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "SignedIdentifier".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobSignedIdentifier.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobSignedIdentifier instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobSignedIdentifier instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobSnapshotInfo">
            <summary>
            BlobSnapshotInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.Snapshot">
            <summary>
            Uniquely identifies the snapshot and indicates the snapshot version. It may be used in subsequent requests to access the snapshot
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.IsServerEncrypted">
            <summary>
            True if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. For a snapshot request, this header is set to true when metadata was provided in the request and encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobSnapshotInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlobSnapshotInfo instances.
            You can use BlobsModelFactory.BlobSnapshotInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobStaticWebsite">
            <summary>
            The properties that enable an account to host a static website
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.Enabled">
            <summary>
            Indicates whether this account is hosting a static website
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.IndexDocument">
            <summary>
            The default name of the index page under each directory
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.ErrorDocument404Path">
            <summary>
            The absolute path of the custom 404 page
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobStaticWebsite.#ctor">
            <summary>
            Prevent direct instantiation of BlobStaticWebsite instances.
            You can use BlobsModelFactory.BlobStaticWebsite instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobStaticWebsite.ToXml(Azure.Storage.Blobs.Models.BlobStaticWebsite,System.String,System.String)">
            <summary>
            Serialize a BlobStaticWebsite instance as XML.
            </summary>
            <param name="value">The BlobStaticWebsite instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "StaticWebsite".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobStaticWebsite.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobStaticWebsite instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobStaticWebsite instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobType">
            <summary>
            BlobType values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobType.Block">
            <summary>
            BlockBlob
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobType.Page">
            <summary>
            PageBlob
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobType.Append">
            <summary>
            AppendBlob
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobsFlatSegment">
            <summary>
            An enumeration of blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.ServiceEndpoint">
            <summary>
            ServiceEndpoint
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.ContainerName">
            <summary>
            ContainerName
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.MaxResults">
            <summary>
            MaxResults
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.NextMarker">
            <summary>
            NextMarker
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsFlatSegment.BlobItems">
            <summary>
            BlobItems
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsFlatSegment.#ctor">
            <summary>
            Creates a new BlobsFlatSegment instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsFlatSegment.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobsFlatSegment instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsFlatSegment.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobsFlatSegment instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobsFlatSegment instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobsHierarchySegment">
            <summary>
            An enumeration of blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.ServiceEndpoint">
            <summary>
            ServiceEndpoint
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.ContainerName">
            <summary>
            ContainerName
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.MaxResults">
            <summary>
            MaxResults
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.Delimiter">
            <summary>
            Delimiter
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.NextMarker">
            <summary>
            NextMarker
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.BlobItems">
            <summary>
            BlobItems
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobsHierarchySegment.BlobPrefixes">
            <summary>
            BlobPrefixes
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsHierarchySegment.#ctor">
            <summary>
            Creates a new BlobsHierarchySegment instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsHierarchySegment.#ctor(System.Boolean)">
            <summary>
            Creates a new BlobsHierarchySegment instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobsHierarchySegment.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlobsHierarchySegment instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlobsHierarchySegment instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlockInfo">
            <summary>
            BlockInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockInfo.ContentHash">
            <summary>
            This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockInfo.ContentCrc64">
            <summary>
            This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockInfo.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned when the block was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlockInfo.#ctor">
            <summary>
            Prevent direct instantiation of BlockInfo instances.
            You can use BlobsModelFactory.BlockInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlockList">
            <summary>
            BlockList
            </summary>
            <summary>
            A block blob's <see cref="T:Azure.Storage.Blobs.Models.BlockList"/> returned from
            <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockList.CommittedBlocks">
            <summary>
            CommittedBlocks
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockList.UncommittedBlocks">
            <summary>
            UncommittedBlocks
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlockList.#ctor">
            <summary>
            Creates a new BlockList instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlockList.#ctor(System.Boolean)">
            <summary>
            Creates a new BlockList instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlockList.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new BlockList instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized BlockList instance.</returns>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockList.LastModified">
            <summary>
            Gets the date and time the container was last modified.  Any
            operation that modifies the blob, including an update of the
            blob's metadata or properties, changes the last-modified time of
            the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockList.ETag">
            <summary>
            The <see cref="T:Azure.ETag"/> contains a value that you can use to
            perform operations conditionally. If the request version is
            2011-08-18 or newer, the  ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockList.ContentType">
            <summary>
            The media type of the body of the response. For the
            <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)"/>
            operation this is 'application/xml'.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockList.BlobContentLength">
            <summary>
            The size of the blob, in bytes.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlockListType">
            <summary>
            Specifies whether to return the list of committed blocks, the list of uncommitted blocks, or both lists together.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlockListType.Committed">
            <summary>
            committed
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlockListType.Uncommitted">
            <summary>
            uncommitted
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlockListType.All">
            <summary>
            all
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlockLookupList">
            <summary>
            A list of block IDs split between the committed block list, in the uncommitted block list, or in the uncommitted block list first and then in the committed block list.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockLookupList.Committed">
            <summary>
            Committed
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockLookupList.Uncommitted">
            <summary>
            Uncommitted
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlockLookupList.Latest">
            <summary>
            Latest
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlockLookupList.#ctor">
            <summary>
            Creates a new BlockLookupList instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlockLookupList.ToXml(Azure.Storage.Blobs.Models.BlockLookupList,System.String,System.String)">
            <summary>
            Serialize a BlockLookupList instance as XML.
            </summary>
            <param name="value">The BlockLookupList instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "BlockList".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BrokenLease">
            <summary>
            BrokenLease
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BrokenLease.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BrokenLease.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BrokenLease.LeaseTime">
            <summary>
            Approximate time remaining in the lease period, in seconds.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BrokenLease.#ctor">
            <summary>
            Prevent direct instantiation of BrokenLease instances.
            You can use BlobsModelFactory.BrokenLease instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.ClearRange">
            <summary>
            ClearRange
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.ClearRange.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.ClearRange.End">
            <summary>
            End
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ClearRange.#ctor">
            <summary>
            Prevent direct instantiation of ClearRange instances.
            You can use BlobsModelFactory.ClearRange instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ClearRange.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new ClearRange instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized ClearRange instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.ConditionNotMetError">
            <summary>
            ConditionNotMetError
            </summary>
            <summary>
            Convert ConditionNotMetErrors into StorageRequestFailedExceptions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.ConditionNotMetError.ErrorCode">
            <summary>
            x-ms-error-code
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ConditionNotMetError.#ctor">
            <summary>
            Prevent direct instantiation of ConditionNotMetError instances.
            You can use BlobsModelFactory.ConditionNotMetError instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ConditionNotMetError.CreateException(Azure.Response)">
            <summary>
            Create an exception corresponding to the ConditionNotMetError.
            </summary>
            <param name="response">The failed response.</param>
            <returns>A RequestFailedException.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.CopyStatus">
            <summary>
            CopyStatus values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyStatus.Pending">
            <summary>
            pending
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyStatus.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyStatus.Aborted">
            <summary>
            aborted
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyStatus.Failed">
            <summary>
            failed
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DataLakeStorageError">
            <summary>
            DataLakeStorageError
            </summary>
            <summary>
            Convert DataLakeStorageError into StorageRequestFailedExceptions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DataLakeStorageError.Error">
            <summary>
            The service error response object.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DataLakeStorageError.#ctor">
            <summary>
            Creates a new DataLakeStorageError instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DataLakeStorageError.#ctor(System.Boolean)">
            <summary>
            Creates a new DataLakeStorageError instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DataLakeStorageError.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new DataLakeStorageError instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized DataLakeStorageError instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DataLakeStorageError.CreateException(Azure.Response)">
            <summary>
            Create an exception corresponding to the DataLakeStorageError.
            </summary>
            <param name="response">The failed response.</param>
            <returns>A RequestFailedException.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DeleteSnapshotsOption">
            <summary>
            Required if the blob has associated snapshots. Specify one of the following two options: include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots and not the blob itself
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots">
            <summary>
            include
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.OnlySnapshots">
            <summary>
            only
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DirectoryCreateResult">
            <summary>
            Directory CreateResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryCreateResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryCreateResult.LastModified">
            <summary>
            The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryCreateResult.ContentLength">
            <summary>
            The size of the resource in bytes.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DirectoryCreateResult.#ctor">
            <summary>
            Prevent direct instantiation of DirectoryCreateResult instances.
            You can use BlobsModelFactory.DirectoryCreateResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DirectoryDeleteResult">
            <summary>
            Directory DeleteResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryDeleteResult.Marker">
            <summary>
            When renaming a directory, the number of paths that are renamed with each invocation is limited. If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header. When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DirectoryDeleteResult.#ctor">
            <summary>
            Prevent direct instantiation of DirectoryDeleteResult instances.
            You can use BlobsModelFactory.DirectoryDeleteResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult">
            <summary>
            Directory GetAccessControlResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.LastModified">
            <summary>
            The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.XMSOwner">
            <summary>
            The owner of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.XMSGroup">
            <summary>
            The owning group of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.XMSPermissions">
            <summary>
            The POSIX access permissions for the file owner, the file owning group, and others. Included in the response if Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.XMSAcl">
            <summary>
            The POSIX access control list for the file or directory.  Included in the response only if the action is "getAccessControl" and Hierarchical Namespace is enabled for the account.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult.#ctor">
            <summary>
            Prevent direct instantiation of DirectoryGetAccessControlResult instances.
            You can use BlobsModelFactory.DirectoryGetAccessControlResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DirectoryRenameResult">
            <summary>
            Directory RenameResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryRenameResult.Marker">
            <summary>
            When renaming a directory, the number of paths that are renamed with each invocation is limited. If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header. When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryRenameResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryRenameResult.LastModified">
            <summary>
            The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectoryRenameResult.ContentLength">
            <summary>
            The size of the resource in bytes.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DirectoryRenameResult.#ctor">
            <summary>
            Prevent direct instantiation of DirectoryRenameResult instances.
            You can use BlobsModelFactory.DirectoryRenameResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.DirectorySetAccessControlResult">
            <summary>
            Directory SetAccessControlResult
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectorySetAccessControlResult.ETag">
            <summary>
            An HTTP entity tag associated with the file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.DirectorySetAccessControlResult.LastModified">
            <summary>
            The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.DirectorySetAccessControlResult.#ctor">
            <summary>
            Prevent direct instantiation of DirectorySetAccessControlResult instances.
            You can use BlobsModelFactory.DirectorySetAccessControlResult instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.EncryptionAlgorithmType">
            <summary>
            The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.EncryptionAlgorithmType.Aes256">
            <summary>
            AES256
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.FlattenedContainerItem">
            <summary>
            FlattenedContainerItem
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.Metadata">
            <summary>
            x-ms-meta
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.LeaseDuration">
            <summary>
            When a blob is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.LeaseState">
            <summary>
            Lease state of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.LeaseStatus">
            <summary>
            The current lease status of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.BlobPublicAccess">
            <summary>
            Indicated whether data in the container may be accessed publicly and the level of access
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.HasImmutabilityPolicy">
            <summary>
            Indicates whether the container has an immutability policy set on it.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedContainerItem.HasLegalHold">
            <summary>
            Indicates whether the container has a legal hold.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.FlattenedContainerItem.#ctor">
            <summary>
            Creates a new FlattenedContainerItem instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.FlattenedDownloadProperties">
            <summary>
            FlattenedDownloadProperties
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.Metadata">
            <summary>
            x-ms-meta
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentLength">
            <summary>
            The number of bytes present in the response body.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentType">
            <summary>
            The media type of the body of the response. For Download Blob this is 'application/octet-stream'
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentRange">
            <summary>
            Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentHash">
            <summary>
            If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentEncoding">
            <summary>
            This header returns the value that was specified for the Content-Encoding request header
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CacheControl">
            <summary>
            This header is returned if it was previously specified for the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentDisposition">
            <summary>
            This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentLanguage">
            <summary>
            This header returns the value that was specified for the Content-Language request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.BlobSequenceNumber">
            <summary>
            The current sequence number for a page blob. This header is not returned for block blobs or append blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.BlobType">
            <summary>
            The blob's type.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.ContentCrc64">
            <summary>
            If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to true, then the request returns a crc64 for the range, as long as the range size is less than or equal to 4 MB. If both x-ms-range-get-content-crc64 and x-ms-range-get-content-md5 is specified in the same request, it will fail with 400(Bad Request)
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CopyCompletionTime">
            <summary>
            Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CopyStatusDescription">
            <summary>
            Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CopyId">
            <summary>
            String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CopyProgress">
            <summary>
            Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CopySource">
            <summary>
            URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.CopyStatus">
            <summary>
            State of the copy operation identified by x-ms-copy-id.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.LeaseDuration">
            <summary>
            When a blob is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.LeaseState">
            <summary>
            Lease state of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.LeaseStatus">
            <summary>
            The current lease status of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.AcceptRanges">
            <summary>
            Indicates that the service supports requests for partial blob content.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.BlobCommittedBlockCount">
            <summary>
            The number of committed blocks present in the blob. This header is returned only for append blobs.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.BlobContentHash">
            <summary>
            If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.FlattenedDownloadProperties.#ctor">
            <summary>
            Creates a new FlattenedDownloadProperties instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.GetBlockListOperation">
            <summary>
            GetBlockListOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.GetBlockListOperation.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.GetBlockListOperation.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.GetBlockListOperation.ContentType">
            <summary>
            The media type of the body of the response. For Get Block List this is 'application/xml'
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.GetBlockListOperation.BlobContentLength">
            <summary>
            The size of the blob in bytes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.GetBlockListOperation.Body">
            <summary>
            Body
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.GetBlockListOperation.#ctor">
            <summary>
            Creates a new GetBlockListOperation instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.KeyInfo">
            <summary>
            Key information
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.KeyInfo.StartsOn">
            <summary>
            The date-time the key is active in ISO 8601 UTC time
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.KeyInfo.ExpiresOn">
            <summary>
            The date-time the key expires in ISO 8601 UTC time
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.KeyInfo.#ctor">
            <summary>
            Prevent direct instantiation of KeyInfo instances.
            You can use BlobsModelFactory.KeyInfo instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.KeyInfo.ToXml(Azure.Storage.Blobs.Models.KeyInfo,System.String,System.String)">
            <summary>
            Serialize a KeyInfo instance as XML.
            </summary>
            <param name="value">The KeyInfo instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "KeyInfo".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.LeaseDurationType">
            <summary>
            LeaseDurationType values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseDurationType.Infinite">
            <summary>
            infinite
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseDurationType.Fixed">
            <summary>
            fixed
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.LeaseState">
            <summary>
            LeaseState values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseState.Available">
            <summary>
            available
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseState.Leased">
            <summary>
            leased
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseState.Expired">
            <summary>
            expired
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseState.Breaking">
            <summary>
            breaking
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseState.Broken">
            <summary>
            broken
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.LeaseStatus">
            <summary>
            LeaseStatus values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseStatus.Locked">
            <summary>
            locked
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.LeaseStatus.Unlocked">
            <summary>
            unlocked
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.ListBlobContainersIncludeType">
            <summary>
            Include this parameter to specify that the container's metadata be returned as part of the response body.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ListBlobContainersIncludeType.Metadata">
            <summary>
            metadata
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.ListBlobsIncludeItem">
            <summary>
            ListBlobsIncludeItem values
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ListBlobsIncludeItem.Copy">
            <summary>
            copy
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ListBlobsIncludeItem.Deleted">
            <summary>
            deleted
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ListBlobsIncludeItem.Metadata">
            <summary>
            metadata
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ListBlobsIncludeItem.Snapshots">
            <summary>
            snapshots
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.ListBlobsIncludeItem.Uncommittedblobs">
            <summary>
            uncommittedblobs
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageBlobInfo">
            <summary>
            PageBlobInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageBlobInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageBlobInfo.LastModified">
            <summary>
            Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageBlobInfo.BlobSequenceNumber">
            <summary>
            The current sequence number for the page blob.  This is only returned for page blobs.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageBlobInfo.#ctor">
            <summary>
            Prevent direct instantiation of PageBlobInfo instances.
            You can use BlobsModelFactory.PageBlobInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageInfo">
            <summary>
            PageInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageInfo.ContentHash">
            <summary>
            If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageInfo.ContentCrc64">
            <summary>
            This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageInfo.BlobSequenceNumber">
            <summary>
            The current sequence number for the page blob.  This is only returned for page blobs.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageInfo.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the pages. This header is only returned when the pages were encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageInfo.#ctor">
            <summary>
            Prevent direct instantiation of PageInfo instances.
            You can use BlobsModelFactory.PageInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageList">
            <summary>
            the list of pages
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageList.PageRange">
            <summary>
            PageRange
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageList.ClearRange">
            <summary>
            ClearRange
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageList.#ctor">
            <summary>
            Creates a new PageList instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageList.#ctor(System.Boolean)">
            <summary>
            Creates a new PageList instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageList.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new PageList instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized PageList instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageRange">
            <summary>
            PageRange
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRange.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRange.End">
            <summary>
            End
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Prevent direct instantiation of PageRange instances.
            You can use BlobsModelFactory.PageRange instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRange.Equals(Azure.Storage.Blobs.Models.PageRange)">
            <summary>
            Check if two PageRange instances are equal.
            </summary>
            <param name="other">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRange.Equals(System.Object)">
            <summary>
            Check if two PageRange instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRange.GetHashCode">
            <summary>
            Get a hash code for the PageRange.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRange.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new PageRange instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized PageRange instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageRangesInfoInternal">
            <summary>
            PageRangesInfoInternal
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfoInternal.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfoInternal.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfoInternal.BlobContentLength">
            <summary>
            The size of the blob in bytes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfoInternal.Body">
            <summary>
            the list of pages
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRangesInfoInternal.#ctor">
            <summary>
            Creates a new PageRangesInfoInternal instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PathRenameMode">
            <summary>
            Determines the behavior of the rename operation
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.PathRenameMode.Legacy">
            <summary>
            legacy
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.PathRenameMode.Posix">
            <summary>
            posix
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PublicAccessType">
            <summary>
            Specifies whether data in the container may be accessed publicly and the level of access
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.PublicAccessType.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer">
            <summary>
            container
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob">
            <summary>
            blob
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.RehydratePriority">
            <summary>
            Optional: Indicates the priority with which to rehydrate an archived blob.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.RehydratePriority.High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.RehydratePriority.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.SequenceNumberAction">
            <summary>
            Required if the x-ms-blob-sequence-number header is set for the request. This property applies to page blobs only. This property indicates how the service should modify the blob's sequence number
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max">
            <summary>
            max
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update">
            <summary>
            update
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment">
            <summary>
            increment
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.SetHttpHeadersOperation">
            <summary>
            SetHttpHeadersOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetHttpHeadersOperation.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetHttpHeadersOperation.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetHttpHeadersOperation.BlobSequenceNumber">
            <summary>
            The current sequence number for a page blob. This header is not returned for block blobs or append blobs
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.SetHttpHeadersOperation.#ctor">
            <summary>
            Prevent direct instantiation of SetHttpHeadersOperation instances.
            You can use BlobsModelFactory.SetHttpHeadersOperation instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.SetMetadataOperation">
            <summary>
            SetMetadataOperation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetMetadataOperation.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetMetadataOperation.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetMetadataOperation.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.SetMetadataOperation.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only returned when the metadata was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.SetMetadataOperation.#ctor">
            <summary>
            Prevent direct instantiation of SetMetadataOperation instances.
            You can use BlobsModelFactory.SetMetadataOperation instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.SkuName">
            <summary>
            Identifies the sku name of the account
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SkuName.StandardLrs">
            <summary>
            Standard_LRS
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SkuName.StandardGrs">
            <summary>
            Standard_GRS
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SkuName.StandardRagrs">
            <summary>
            Standard_RAGRS
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SkuName.StandardZrs">
            <summary>
            Standard_ZRS
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.SkuName.PremiumLrs">
            <summary>
            Premium_LRS
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.StorageError">
            <summary>
            StorageError
            </summary>
            <summary>
            Convert StorageErrors into StorageRequestFailedExceptions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.StorageError.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.StorageError.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.StorageError.#ctor">
            <summary>
            Prevent direct instantiation of StorageError instances.
            You can use BlobsModelFactory.StorageError instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.StorageError.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new StorageError instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized StorageError instance.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.StorageError.CustomizeFromXml(System.Xml.Linq.XElement,Azure.Storage.Blobs.Models.StorageError)">
            <summary>
            Get any additional XML elements for the error.
            </summary>
            <param name="root">The XML element</param>
            <param name="error">The StorageError</param>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.StorageError.AdditionalInformation">
            <summary>
            Additional error information.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.StorageError.CreateException(Azure.Response)">
            <summary>
            Create an exception corresponding to the StorageError.
            </summary>
            <param name="response">The failed response.</param>
            <returns>A RequestFailedException.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.UserDelegationKey">
            <summary>
            A user delegation key
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedObjectId">
            <summary>
            The Azure Active Directory object ID in GUID format.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedTenantId">
            <summary>
            The Azure Active Directory tenant ID in GUID format
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedService">
            <summary>
            Abbreviation of the Azure Storage service that accepts the key
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedVersion">
            <summary>
            The service version that created the key
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.Value">
            <summary>
            The key as a base64 string
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedExpiresOn">
            <summary>
            The date-time the key expires
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedStartsOn">
            <summary>
            The date-time the key is active
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.UserDelegationKey.#ctor">
            <summary>
            Prevent direct instantiation of UserDelegationKey instances.
            You can use BlobsModelFactory.UserDelegationKey instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.UserDelegationKey.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new UserDelegationKey instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized UserDelegationKey instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.Error">
            <summary>
            The service error response object.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.Error.Code">
            <summary>
            The service error code.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.Error.Message">
            <summary>
            The service error message.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.Error.#ctor">
            <summary>
            Prevent direct instantiation of Error instances.
            You can use BlobsModelFactory.Error instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.Error.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new Error instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized Error instance.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions">
            <summary>
            Specifies append blob specific access conditions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.IfAppendPositionEqual">
            <summary>
            IfAppendPositionEqual ensures that the AppendBlock operation
            succeeds only if the append position is equal to a value.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.IfMaxSizeLessThanOrEqual">
            <summary>
            IfMaxSizeLessThanOrEqual ensures that the AppendBlock operation
            succeeds only if the append blob's size is less than or equal to
            a value.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.AddConditions(System.Text.StringBuilder)">
            <summary>
            Collect any request conditions.  Conditions should be separated by
            a semicolon.
            </summary>
            <param name="conditions">The collected conditions.</param>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobContainerTraits">
            <summary>
            Specifies options for listing blob containers with the
            <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobContainerTraits.None">
            <summary>
            Default flag specifying that no flags are set in <see cref="T:Azure.Storage.Blobs.Models.BlobContainerTraits"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobContainerTraits.Metadata">
            <summary>
            Flag specifying that the container's metadata should
            be included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobHierarchyItem">
            <summary>
            Either a <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix"/> or <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Blob"/> returned from
            <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix">
            <summary>
            Gets a prefix, relative to the delimiter used to get the blobs.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Blob">
            <summary>
            Gets a blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.IsPrefix">
            <summary>
            Gets a value indicating if this item represents a <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.IsBlob">
            <summary>
            Gets a value indicating if this item represents a <see cref="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Blob"/>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobHierarchyItem.#ctor(System.String,Azure.Storage.Blobs.Models.BlobItem)">
            <summary>
            Initialies a new instance of the BlobHierarchyItem class.
            </summary>
            <param name="prefix">
            A prefix, relative to the delimiter used to get the blobs.
            </param>
            <param name="blob">
            A blob.
            </param>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobHttpHeaders">
             <summary>
             Standard HTTP properties supported by containers and blobs.
             These properties are represented as standard HTTP headers use standard
             names, as specified in the Header Field Definitions section 14 of the
             HTTP/1.1 protocol specification.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-and-retrieving-properties-and-metadata-for-blob-resources" />.
             </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentType">
            <summary>
            The MIME content type of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentHash">
            <summary>
            An MD5 hash of the blob content. This hash is used to verify the
            integrity of the blob during transport.  When this header is
            specified, the storage service checks the hash that has arrived
            with the one that was sent. If the two hashes do not match, the
            operation will fail with error code 400 (Bad Request).
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentEncoding">
            <summary>
            Specifies which content encodings have been applied to the blob.
            This value is returned to the client when the Get Blob operation
            is performed on the blob resource. The client can use this value
            when returned to decode the blob content.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentLanguage">
            <summary>
            Specifies the natural languages used by this resource.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentDisposition">
            <summary>
            Conveys additional information about how to process the response
            payload, and also can be used to attach additional metadata.  For
            example, if set to attachment, it indicates that the user-agent
            should not display the response, but instead show a Save As dialog
            with a filename other than the blob name specified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.CacheControl">
            <summary>
            Specify directives for caching mechanisms.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.ToString">
            <summary>
            Creates a string representation of a
            <see cref="T:Azure.Storage.Blobs.Models.BlobHttpHeaders"/>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.Equals(System.Object)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Blobs.Models.BlobHttpHeaders"/> instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.GetHashCode">
            <summary>
            Get a hash code for the <see cref="T:Azure.Storage.Blobs.Models.BlobHttpHeaders"/>.
            </summary>
            <returns>Hash code for the <see cref="T:Azure.Storage.Blobs.Models.BlobHttpHeaders"/>.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobDownloadInfo">
            <summary>
            The details and Content returned from downloading a blob
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobDownloadInfo._flattened">
            <summary>
            Internal flattened property representation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.BlobType">
            <summary>
            The blob's type.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentLength">
            <summary>
            The number of bytes present in the response body.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentType">
            <summary>
            The media type of the body of the response. For Download Blob this is 'application/octet-stream'
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentHash">
            <summary>
            If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Details">
            <summary>
            Details returned when downloading a Blob
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobDownloadInfo.#ctor(Azure.Storage.Blobs.Models.FlattenedDownloadProperties)">
            <summary>
            Creates a new DownloadInfo backed by FlattenedDownloadProperties
            </summary>
            <param name="flattened">The FlattenedDownloadProperties returned with the request</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobDownloadInfo.Dispose">
            <summary>
            Disposes the BlobDownloadInfo by calling Dispose on the underlying Content stream.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobDownloadDetails">
            <summary>
            Details returned when downloading a Blob
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobDownloadDetails._flattened">
            <summary>
            Internal flattened property representation
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.Metadata">
            <summary>
            x-ms-meta
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentRange">
            <summary>
            Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentEncoding">
            <summary>
            This header returns the value that was specified for the Content-Encoding request header
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CacheControl">
            <summary>
            This header is returned if it was previously specified for the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentDisposition">
            <summary>
            This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentLanguage">
            <summary>
            This header returns the value that was specified for the Content-Language request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobSequenceNumber">
            <summary>
            The current sequence number for a page blob. This header is not returned for block blobs or append blobs
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyCompletedOn">
            <summary>
            Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyStatusDescription">
            <summary>
            Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyId">
            <summary>
            String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyProgress">
            <summary>
            Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopySource">
            <summary>
            URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyStatus">
            <summary>
            State of the copy operation identified by x-ms-copy-id.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseDuration">
            <summary>
            When a blob is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseState">
            <summary>
            Lease state of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseStatus">
            <summary>
            The current lease status of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.AcceptRanges">
            <summary>
            Indicates that the service supports requests for partial blob content.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobCommittedBlockCount">
            <summary>
            The number of committed blocks present in the blob. This header is returned only for append blobs.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.EncryptionKeySha256">
            <summary>
            The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobContentHash">
            <summary>
            If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobRequestConditions">
            <summary>
            Specifies blob lease access conditions for a container or blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.BlobRequestConditions.LeaseId">
            <summary>
            Optionally limit requests to resources with an active lease
            matching this Id.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobRequestConditions.ToString">
            <summary>
            Converts the value of the current RequestConditions object to
            its equivalent string representation.
            </summary>
            <returns>
            A string representation of the RequestConditions.
            </returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.BlobRequestConditions.AddConditions(System.Text.StringBuilder)">
            <summary>
            Collect any request conditions.  Conditions should be separated by
            a semicolon.
            </summary>
            <param name="conditions">The collected conditions.</param>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobStates">
            <summary>
            Specifies states to be used to determine the blobs that will be included
            when using the <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/> and
            <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>
            operations.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobStates.None">
            <summary>
            Default flag specifying that no flags are set in <see cref="T:Azure.Storage.Blobs.Models.BlobStates"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobStates.Snapshots">
            <summary>
            Flag specifying that the blob's snapshots should be
            included.  Snapshots are listed from oldest to newest.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobStates.Uncommitted">
            <summary>
            Flag specifying that blobs for which blocks have
            been uploaded, but which have not been committed using
            <see cref="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)"/> should be
            included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobStates.Deleted">
            <summary>
            Flag specifying that soft deleted blobs should be
            included in the response.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobStates.All">
            <summary>
            Flag specifying that blobs of all states should be included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlobTraits">
            <summary>
            Specifies trait information to be included when listing blobs with the
            <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)"/> and
            <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)"/>
            operations.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobTraits.None">
            <summary>
            Flag specifying only the default information for blobs
            should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobTraits.CopyStatus">
            <summary>
            Flag specifying that metadata related to any current
            or previous copy operation should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobTraits.Metadata">
            <summary>
            Flag specifying that the blob's metadata should be
            included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlobTraits.All">
            <summary>
            Flag specifying that all traits should be included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.BlockListTypes">
            <summary>
            Specifies whether to return the list of committed blocks, the list of uncommitted blocks, or both lists together.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlockListTypes.All">
            <summary>
            Flag to specify returning both committed and uncommitted blocks.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlockListTypes.Committed">
            <summary>
            Flag to specify returning the list of committed blocks.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.BlockListTypes.Uncommitted">
            <summary>
            Flag to specify returning the list of uncommitted blocks.
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.CopyFromUriOperation">
            <summary>
            An <see cref="T:Azure.Operation`1"/> for tracking the status of a
            <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)"/>
            request.  Its <see cref="P:Azure.Operation`1.Value"/> upon succesful
            completion will be the number of bytes copied.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyFromUriOperation._client">
            <summary>
            The client used to check for completion.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyFromUriOperation._cancellationToken">
            <summary>
            The CancellationToken to use for all status checking.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyFromUriOperation._hasCompleted">
            <summary>
            Whether the operation has completed.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.CopyFromUriOperation._value">
            <summary>
            Gets the number of bytes copied by the operation.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.HasCompleted">
            <summary>
            Gets a value indicating whether the operation has completed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.HasValue">
            <summary>
            Gets a value indicating whether the operation completed and
            succesfully produced a value.  The <see cref="P:Azure.Operation`1.Value"/>
            property is the number of bytes copied by the operation.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.Id">
            <inheritdoc />
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.Value">
            <summary>
            Gets the number of bytes copied by the operation.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.GetRawResponse">
            <inheritdoc />
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor">
            <summary>
            Initializes a new <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> instance for
            mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor(System.String,Azure.Storage.Blobs.Specialized.BlobBaseClient)">
            <summary>
            Initializes a new <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> instance
            </summary>
            <param name="client">
            The client used to check for completion.
            </param>
            <param name="id">The ID of this operation.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String,Azure.Response,System.Threading.CancellationToken)">
            <summary>
            Initializes a new <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation"/> instance
            </summary>
            <param name="client">
            The client used to check for completion.
            </param>
            <param name="copyId">The ID of this operation.</param>
            <param name="initialResponse">
            Either the response from initiating the operation or getting the
            status if we're creating an operation from an existing ID.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Check for the latest status of the copy operation.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>The <see cref="T:Azure.Response"/> with the status update.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Check for the latest status of the copy operation.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>The <see cref="T:Azure.Response"/> with the status update.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatusAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Check for the latest status of the copy operation.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <param name="async" />
            <returns>The <see cref="T:Azure.Response"/> with the status update.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.CustomerProvidedKey">
            <summary>
            Wrapper for an encryption key to be used with client provided key server-side encryption.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionKey">
            <summary>
            Base64 encoded string of the AES256 encryption key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionKeyHash">
            <summary>
            Base64 encoded string of the AES256 encryption key's SHA256 hash.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionAlgorithm">
            <summary>
            The algorithm for Azure Blob Storage to encrypt with.
            Azure Blob Storage only offers AES256 encryption.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.#ctor(System.String)">
            <summary>
            Creates a new CustomerProvidedKey for use in server-side encryption.
            </summary>
            <param name="key">The encryption key encoded as a base64 string.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.#ctor(System.Byte[])">
            <summary>
            Creates a new CustomerProvidedKey for use in server-side encryption.
            </summary>
            <param name="key">The encryption key bytes.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.Equals(System.Object)">
            <summary>
            Checks if two CustomerProvidedKeyInfo are equal to each other.
            </summary>
            <param name="obj">The other instance to compare to.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.GetHashCode">
            <summary>
            Get a hash code for the CustomerProvidedKeyInfo.
            </summary>
            <returns>Hash code for the CustomerProvidedKeyInfo.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.op_Equality(Azure.Storage.Blobs.Models.CustomerProvidedKey,Azure.Storage.Blobs.Models.CustomerProvidedKey)">
            <summary>
            Check if two CustomerProvidedKeyInfo instances are equal.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.op_Inequality(Azure.Storage.Blobs.Models.CustomerProvidedKey,Azure.Storage.Blobs.Models.CustomerProvidedKey)">
            <summary>
            Check if two CustomerProvidedKeyInfo instances are not equal.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>True if they're not equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.Equals(Azure.Storage.Blobs.Models.CustomerProvidedKey)">
            <summary>
            Checks if two CustomerProvidedKeyInfo are equal to each other.
            </summary>
            <param name="other">The other instance to compare to.</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.ToString">
            <summary>
            ToString
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions">
            <summary>
            Specifies page blob specific access conditions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberLessThan">
            <summary>
            IfSequenceNumberLessThan ensures that the page blob operation
            succeeds only if the blob's sequence number is less than a value.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberLessThanOrEqual">
            <summary>
            IfSequenceNumberLessThanOrEqual ensures that the page blob
            operation succeeds only if the blob's sequence number is less than
            or equal to a value.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberEqual">
            <summary>
            IfSequenceNumberEqual ensures that the page blob operation
            succeeds only if the blob's sequence number is equal to a value.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageBlobRequestConditions.AddConditions(System.Text.StringBuilder)">
            <summary>
            Collect any request conditions.  Conditions should be separated by
            a semicolon.
            </summary>
            <param name="conditions">The collected conditions.</param>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.PageRangesInfo">
            <summary>
            Contains blob page range information returned from the PageBlobClient.GetPageRanges operations.
            </summary>
        </member>
        <member name="F:Azure.Storage.Blobs.Models.PageRangesInfo._pageRangesInfo">
            <summary>
            Model type expected by the protocol layer.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfo.LastModified">
            <summary>
            Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfo.BlobContentLength">
            <summary>
            The size of the blob in bytes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfo.PageRanges">
            <summary>
            Page ranges for the blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.PageRangesInfo.ClearRanges">
            <summary>
            Clear ranges for the blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.PageRangesInfo.#ctor(Azure.Storage.Blobs.Models.PageRangesInfoInternal)">
            <summary>
            Creates a new PageRangesInfo instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo">
            <summary>
            Provides the version state of a succesfully released blob or container
            object.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations
            conditionally.  If the request version is 2011-08-18 or newer, the
            ETag value will be in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.LastModified">
            <summary>
            Returns the date and time the object was last modified. Any
            operation that modifies the blob or container, including an update
            of the object's metadata or properties, changes the last-modified
            time of the object.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.#ctor(Azure.ETag,System.DateTimeOffset)">
            <summary>
            Creates a new <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/>.
            </summary>
            <param name="eTag">
            The <see cref="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ETag"/> contains a value that you can use to perform
            operations conditionally.
            </param>
            <param name="lastModified">
            The date and time the object was last modified.
            </param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.#ctor(Azure.Storage.Blobs.Models.BlobInfo)">
            <summary>
            Creates a new <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/>.
            </summary>
            <param name="info">A released <see cref="T:Azure.Storage.Blobs.Models.BlobInfo"/>.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.#ctor(Azure.Storage.Blobs.Models.BlobContainerInfo)">
            <summary>
            Creates a new <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/>.
            </summary>
            <param name="info">A released <see cref="T:Azure.Storage.Blobs.Models.BlobContainerInfo"/>.</param>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ToString">
            <summary>
            Creates a string representation of a
            <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.Equals(System.Object)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/> instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.GetHashCode">
            <summary>
            Get a hash code for the <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/>.
            </summary>
            <returns>Hash code for the <see cref="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo"/>.</returns>
        </member>
        <member name="T:Azure.Storage.Blobs.BlobExtensions">
            <summary>
            BlobContainerTraits enum extensions
            </summary>
            <summary>
            BlobRestClient response extensions
            </summary>
            <summary>
            BlockListTypes extensions
            </summary>
            <summary>
            BlobTraits/BlobStates enum methods
            </summary>
            <summary>
            BlobRestClient response extensions
            </summary>
            <summary>
            Blob enum extensions
            </summary>
            <summary>
            Blob enum extensions.
            </summary>
            <summary>
            Blob enum extensions
            </summary>
            <summary>
            Blob enum extensions.
            </summary>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.AsIncludeType(Azure.Storage.Blobs.Models.BlobContainerTraits)">
            <summary>
            Convert the details into a ListBlobContainersIncludeType value.
            </summary>
            <returns>A ListBlobContainersIncludeType value.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToBlockList(Azure.Response{Azure.Storage.Blobs.Models.GetBlockListOperation})">
            <summary>
            Convert the internal GetBlockListOperation response into a BlockList.
            </summary>
            <param name="response">The original response.</param>
            <returns>The BlockList response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToBlockListType(Azure.Storage.Blobs.Models.BlockListTypes)">
            <summary>
            Convert the BlockListTypes into a BlockListType.
            </summary>
            <param name="options"></param>
            <returns>The BlockList response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.AsIncludeItems(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates)">
            <summary>
            Convert the details into ListBlobsIncludeItem values.
            </summary>
            <returns>ListBlobsIncludeItem values</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToLease(Azure.Response{Azure.Storage.Blobs.Models.BrokenLease})">
            <summary>
            Convert the internal BrokenLease response into a Lease.  The
            LeaseId will be empty.
            </summary>
            <param name="response">The original response.</param>
            <returns>The Lease response.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToPermissionsString(Azure.Storage.Sas.BlobAccountSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.BlobSasBuilder.Permissions"/>.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToPermissionsString(Azure.Storage.Sas.BlobContainerSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.BlobSasBuilder.Permissions"/>.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToPermissionsString(Azure.Storage.Sas.BlobSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.BlobSasBuilder.Permissions"/>.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Storage.Blobs.BlobExtensions.ToPermissionsString(Azure.Storage.Sas.SnapshotSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.BlobSasBuilder.Permissions"/>.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="T:Azure.Storage.Sas.BlobAccountSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.BlobAccountSasPermissions"/> contains the list of
            permissions that can be set for a blob account's access policy.  Use
            <see cref="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobAccountSasPermissions)"/>
            to set the permissions on the <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.Create">
            <summary>
            Indicates that Create is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.List">
            <summary>
            Indicates that List is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobAccountSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.BlobContainerSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.BlobContainerSasPermissions"/> contains the list of
            permissions that can be set for a blob's access policy.  Use
            <see cref="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobContainerSasPermissions)"/>
            to set the permissions on the <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.Create">
            <summary>
            Indicates that Create is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.List">
            <summary>
            Indicates that List is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobContainerSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.BlobSasBuilder">
            <summary>
            <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/> is used to generate a Shared Access
            Signature (SAS) for an Azure Storage container or blob.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.Version">
            <summary>
            The storage service version to use to authenticate requests made
            with this shared access signature, and the service version to use
            when handling requests made with this shared access signature.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.Protocol">
            <summary>
            The optional signed protocol field specifies the protocol
            permitted for a request made with the SAS.  Possible values are
            <see cref="F:Azure.Storage.Sas.SasProtocol.HttpsAndHttp"/>,
            <see cref="F:Azure.Storage.Sas.SasProtocol.Https"/>, and
            <see cref="F:Azure.Storage.Sas.SasProtocol.None"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.StartsOn">
            <summary>
            Optionally specify the time at which the shared access signature
            becomes valid.  If omitted when DateTimeOffset.MinValue is used,
            start time for this call is assumed to be the time when the
            storage service receives the request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.ExpiresOn">
            <summary>
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.Permissions">
            <summary>
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions. This
            field must be omitted if it has been specified in an associated
            stored access policy.  The <see cref="T:Azure.Storage.Sas.BlobSasPermissions"/>,
            <see cref="T:Azure.Storage.Sas.BlobContainerSasPermissions"/>, <see cref="T:Azure.Storage.Sas.SnapshotSasPermissions"/>,
            or <see cref="T:Azure.Storage.Sas.BlobAccountSasPermissions"/> can be used to create the
            permissions string.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.IPRange">
            <summary>
            Specifies an IP address or a range of IP addresses from which to
            accept requests. If the IP address from which the request
            originates does not match the IP address or address range
            specified on the SAS token, the request is not authenticated.
            When specifying a range of IP addresses, note that the range is
            inclusive.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.Identifier">
            <summary>
            An optional unique value up to 64 characters in length that
            correlates to an access policy specified for the container.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.BlobContainerName">
            <summary>
            The name of the blob container being made accessible.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.BlobName">
            <summary>
            The name of the blob being made accessible, or
            <see cref="F:System.String.Empty"/> for a container SAS.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.Snapshot">
            <summary>
            The name of the snapshot being made accessible, or
            <see cref="F:System.String.Empty"/> for a blob SAS.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.Resource">
             <summary>
             Specifies which resources are accessible via the shared access
             signature.
            
             Specify b if the shared resource is a blob. This grants access to
             the content and metadata of the blob.
            
             Specify c if the shared resource is a blob container. This grants
             access to the content and metadata of any blob in the container,
             and to the list of blobs in the container.
            
             Beginning in version 2018-11-09, specify bs if the shared resource
             is a blob snapshot.  This grants access to the content and
             metadata of the specific snapshot, but not the corresponding root
             blob.
             </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.CacheControl">
            <summary>
            Override the value returned for Cache-Control response header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.ContentDisposition">
            <summary>
            Override the value returned for Content-Disposition response
            header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.ContentEncoding">
            <summary>
            Override the value returned for Cache-Encoding response header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.ContentLanguage">
            <summary>
            Override the value returned for Cache-Language response header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasBuilder.ContentType">
            <summary>
            Override the value returned for Cache-Type response header.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobSasPermissions)">
            <summary>
            Sets the permissions for a blob SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.BlobSasPermissions"/> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobAccountSasPermissions)">
            <summary>
            Sets the permissions for a blob account level SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.BlobAccountSasPermissions"/> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobContainerSasPermissions)">
            <summary>
            Sets the permissions for a blob container SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.BlobContainerSasPermissions"/> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.SnapshotSasPermissions)">
            <summary>
            Sets the permissions for a Snapshot SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.SnapshotSasPermissions"/> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(System.String)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">Raw permissions string for the SAS.</param>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Storage.StorageSharedKeyCredential"/> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Storage.StorageSharedKeyCredential"/>.
            </param>
            <returns>
            The <see cref="T:Azure.Storage.Sas.BlobSasQueryParameters"/> used for authenticating
            requests.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.ToSasQueryParameters(Azure.Storage.Blobs.Models.UserDelegationKey,System.String)">
            <summary>
            Use an account's <see cref="T:Azure.Storage.Blobs.Models.UserDelegationKey"/> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="userDelegationKey">
            A <see cref="T:Azure.Storage.Blobs.Models.UserDelegationKey"/> returned from
            <see cref="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyAsync(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)"/>.
            </param>
            <param name="accountName">The name of the storage account.</param>
            <returns>
            The <see cref="T:Azure.Storage.Sas.BlobSasQueryParameters"/> used for authenticating requests.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.GetCanonicalName(System.String,System.String,System.String)">
            <summary>
            Computes the canonical name for a container or blob resource for SAS signing.
            Container: "/blob/account/containername"
            Blob: "/blob/account/containername/blobname"
            </summary>
            <param name="account">The name of the storage account.</param>
            <param name="containerName">The name of the container.</param>
            <param name="blobName">The name of the blob.</param>
            <returns>The canonical resource name.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.ComputeHMACSHA256(System.String,System.String)">
            <summary>
            ComputeHMACSHA256 generates a base-64 hash signature string for an
            HTTP request or for a SAS.
            </summary>
            <param name="userDelegationKeyValue">
            A <see cref="P:Azure.Storage.Blobs.Models.UserDelegationKey.Value"/> used to sign with a key
            representing AD credentials.
            </param>
            <param name="message">The message to sign.</param>
            <returns>The signed message.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.EnsureState">
            <summary>
            Ensure the <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>'s properties are in a
            consistent state.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.Equals(System.Object)">
            <summary>
            Check if two BlobSasBuilder instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasBuilder.GetHashCode">
            <summary>
            Get a hash code for the BlobSasBuilder.
            </summary>
            <returns>Hash code for the BlobSasBuilder.</returns>
        </member>
        <member name="T:Azure.Storage.Sas.BlobSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.BlobSasPermissions"/> contains the list of
            permissions that can be set for a blob's access policy.  Use
            <see cref="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobSasPermissions)"/>
            to set the permissions on the <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobSasPermissions.Create">
            <summary>
            Indicates that Create is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.BlobSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.BlobSasQueryParameters">
             <summary>
             A <see cref="T:Azure.Storage.Sas.BlobSasQueryParameters"/> object represents the components
             that make up an Azure Storage Shared Access Signature's query
             parameters.  You can construct a new instance using
             <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            
             For more information, <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas"/>.
             </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyObjectId">
            <summary>
            Gets the Azure Active Directory object ID in GUID format.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyTenantId">
            <summary>
            Gets the Azure Active Directory tenant ID in GUID format
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyStartsOn">
            <summary>
            Gets the time at which the key becomes valid.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyExpiresOn">
            <summary>
            Gets the time at which the key becomes expires.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyService">
            <summary>
            Gets the Storage service that accepts the key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyVersion">
            <summary>
            Gets the Storage service version that created the key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.BlobSasQueryParameters.Empty">
            <summary>
            Gets empty shared access signature query parameters.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasQueryParameters.#ctor(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
             <summary>
             Creates a new instance of the <see cref="T:Azure.Storage.Sas.BlobSasQueryParameters"/>
             type.
            
             Expects decoded values.
             </summary>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasQueryParameters.#ctor(Azure.Storage.UriQueryParamsCollection)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Sas.BlobSasQueryParameters"/>
            type based on the supplied query parameters <paramref name="values"/>.
            All SAS-related query parameters will be removed from
            <paramref name="values"/>.
            </summary>
            <param name="values">URI query parameters</param>
        </member>
        <member name="M:Azure.Storage.Sas.BlobSasQueryParameters.ToString">
            <summary>
            Convert the SAS query parameters into a URL encoded query string.
            </summary>
            <returns>
            A URL encoded query string representing the SAS.
            </returns>
        </member>
        <member name="T:Azure.Storage.Sas.SnapshotSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.SnapshotSasPermissions"/> contains the list of
            permissions that can be set for a blob's access policy.  Use
            <see cref="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.SnapshotSasPermissions)"/>
            to set the permissions on the <see cref="T:Azure.Storage.Sas.BlobSasBuilder"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.SnapshotSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.SnapshotSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.SnapshotSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.SnapshotSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Azure.BlobClientBuilderExtensions">
            <summary>
            Extension methods to add <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/> client to clients builder
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.String)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/> instance with the provided <paramref name="connectionString"/>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.Uri)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/> instance with the provided <paramref name="serviceUri"/>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/> instance with the provided <paramref name="serviceUri"/> and <paramref name="sharedKeyCredential"/>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``2(``0,``1)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Blobs.BlobServiceClient"/> instance with connection options loaded from the provided <paramref name="configuration"/> instance.
            </summary>
        </member>
    </members>
</doc>
