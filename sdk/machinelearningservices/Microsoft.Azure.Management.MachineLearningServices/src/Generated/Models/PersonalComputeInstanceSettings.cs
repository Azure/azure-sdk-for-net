// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Settings for a personal compute instance.
    /// </summary>
    public partial class PersonalComputeInstanceSettings
    {
        /// <summary>
        /// Initializes a new instance of the PersonalComputeInstanceSettings
        /// class.
        /// </summary>
        public PersonalComputeInstanceSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersonalComputeInstanceSettings
        /// class.
        /// </summary>
        /// <param name="assignedUser">Assigned User.</param>
        public PersonalComputeInstanceSettings(AssignedUser assignedUser = default(AssignedUser))
        {
            AssignedUser = assignedUser;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets assigned User.
        /// </summary>
        /// <remarks>
        /// A user explicitly assigned to a personal compute instance.
        /// </remarks>
        [JsonProperty(PropertyName = "assignedUser")]
        public AssignedUser AssignedUser { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AssignedUser != null)
            {
                AssignedUser.Validate();
            }
        }
    }
}
