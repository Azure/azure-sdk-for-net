// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The resource requirements for the container (cpu and memory).
    /// </summary>
    public partial class ContainerResourceRequirements
    {
        /// <summary>
        /// Initializes a new instance of the ContainerResourceRequirements
        /// class.
        /// </summary>
        public ContainerResourceRequirements()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerResourceRequirements
        /// class.
        /// </summary>
        /// <param name="cpu">The minimum amount of CPU cores to be used by the
        /// container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</param>
        /// <param name="cpuLimit">The maximum amount of CPU cores allowed to
        /// be used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</param>
        /// <param name="memoryInGB">The minimum amount of memory (in GB) to be
        /// used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</param>
        /// <param name="memoryInGBLimit">The maximum amount of memory (in GB)
        /// allowed to be used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/</param>
        /// <param name="gpu">The number of GPU cores in the container.</param>
        /// <param name="fpga">The number of FPGA PCIE devices exposed to the
        /// container. Must be multiple of 2.</param>
        public ContainerResourceRequirements(double? cpu = default(double?), double? cpuLimit = default(double?), double? memoryInGB = default(double?), double? memoryInGBLimit = default(double?), int? gpu = default(int?), int? fpga = default(int?))
        {
            Cpu = cpu;
            CpuLimit = cpuLimit;
            MemoryInGB = memoryInGB;
            MemoryInGBLimit = memoryInGBLimit;
            Gpu = gpu;
            Fpga = fpga;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the minimum amount of CPU cores to be used by the
        /// container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [JsonProperty(PropertyName = "cpu")]
        public double? Cpu { get; set; }

        /// <summary>
        /// Gets or sets the maximum amount of CPU cores allowed to be used by
        /// the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [JsonProperty(PropertyName = "cpuLimit")]
        public double? CpuLimit { get; set; }

        /// <summary>
        /// Gets or sets the minimum amount of memory (in GB) to be used by the
        /// container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [JsonProperty(PropertyName = "memoryInGB")]
        public double? MemoryInGB { get; set; }

        /// <summary>
        /// Gets or sets the maximum amount of memory (in GB) allowed to be
        /// used by the container. More info:
        /// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        /// </summary>
        [JsonProperty(PropertyName = "memoryInGBLimit")]
        public double? MemoryInGBLimit { get; set; }

        /// <summary>
        /// Gets or sets the number of GPU cores in the container.
        /// </summary>
        [JsonProperty(PropertyName = "gpu")]
        public int? Gpu { get; set; }

        /// <summary>
        /// Gets or sets the number of FPGA PCIE devices exposed to the
        /// container. Must be multiple of 2.
        /// </summary>
        [JsonProperty(PropertyName = "fpga")]
        public int? Fpga { get; set; }

    }
}
