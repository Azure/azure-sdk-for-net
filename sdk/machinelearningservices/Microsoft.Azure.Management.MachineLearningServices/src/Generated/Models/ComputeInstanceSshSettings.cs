// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies policy and settings for SSH access.
    /// </summary>
    public partial class ComputeInstanceSshSettings
    {
        /// <summary>
        /// Initializes a new instance of the ComputeInstanceSshSettings class.
        /// </summary>
        public ComputeInstanceSshSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputeInstanceSshSettings class.
        /// </summary>
        /// <param name="sshPublicAccess">Access policy for SSH</param>
        /// <param name="adminUserName">Describes the admin user name.</param>
        /// <param name="sshPort">Describes the port for connecting through
        /// SSH.</param>
        /// <param name="adminPublicKey">Specifies the SSH rsa public key file
        /// as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH
        /// key pairs.</param>
        public ComputeInstanceSshSettings(string sshPublicAccess = default(string), string adminUserName = default(string), int? sshPort = default(int?), string adminPublicKey = default(string))
        {
            SshPublicAccess = sshPublicAccess;
            AdminUserName = adminUserName;
            SshPort = sshPort;
            AdminPublicKey = adminPublicKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets access policy for SSH
        /// </summary>
        /// <remarks>
        /// State of the public SSH port. Possible values are: Disabled -
        /// Indicates that the public ssh port is closed on this instance.
        /// Enabled - Indicates that the public ssh port is open and accessible
        /// according to the VNet/subnet policy if applicable. Possible values
        /// include: 'Enabled', 'Disabled'
        /// </remarks>
        [JsonProperty(PropertyName = "sshPublicAccess")]
        public string SshPublicAccess { get; set; }

        /// <summary>
        /// Gets describes the admin user name.
        /// </summary>
        [JsonProperty(PropertyName = "adminUserName")]
        public string AdminUserName { get; private set; }

        /// <summary>
        /// Gets describes the port for connecting through SSH.
        /// </summary>
        [JsonProperty(PropertyName = "sshPort")]
        public int? SshPort { get; private set; }

        /// <summary>
        /// Gets or sets specifies the SSH rsa public key file as a string. Use
        /// "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
        /// </summary>
        [JsonProperty(PropertyName = "adminPublicKey")]
        public string AdminPublicKey { get; set; }

    }
}
