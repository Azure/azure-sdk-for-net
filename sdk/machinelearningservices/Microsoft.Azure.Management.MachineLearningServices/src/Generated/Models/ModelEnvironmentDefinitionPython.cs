// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using System.Linq;

    /// <summary>
    /// Settings for a Python environment.
    /// </summary>
    public partial class ModelEnvironmentDefinitionPython : ModelPythonSection
    {
        /// <summary>
        /// Initializes a new instance of the ModelEnvironmentDefinitionPython
        /// class.
        /// </summary>
        public ModelEnvironmentDefinitionPython()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ModelEnvironmentDefinitionPython
        /// class.
        /// </summary>
        /// <param name="interpreterPath">The python interpreter path to use if
        /// an environment build is not required. The path specified gets used
        /// to call the user script.</param>
        /// <param name="userManagedDependencies">True means that AzureML
        /// reuses an existing python environment; False means that AzureML
        /// will create a python environment based on the Conda dependencies
        /// specification.</param>
        /// <param name="condaDependencies">A JObject containing Conda
        /// dependencies.</param>
        public ModelEnvironmentDefinitionPython(string interpreterPath = default(string), bool? userManagedDependencies = default(bool?), object condaDependencies = default(object), string baseCondaEnvironment = default(string))
            : base(interpreterPath, userManagedDependencies, condaDependencies, baseCondaEnvironment)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

    }
}
