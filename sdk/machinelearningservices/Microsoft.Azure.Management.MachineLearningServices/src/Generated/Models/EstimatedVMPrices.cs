// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The estimated price info for using a VM.
    /// </summary>
    public partial class EstimatedVMPrices
    {
        /// <summary>
        /// Initializes a new instance of the EstimatedVMPrices class.
        /// </summary>
        public EstimatedVMPrices()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EstimatedVMPrices class.
        /// </summary>
        /// <param name="values">List of estimated VM prices.</param>
        public EstimatedVMPrices(IList<EstimatedVMPrice> values)
        {
            Values = values;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for EstimatedVMPrices class.
        /// </summary>
        static EstimatedVMPrices()
        {
            BillingCurrency = "USD";
            UnitOfMeasure = "OneHour";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of estimated VM prices.
        /// </summary>
        /// <remarks>
        /// The list of estimated prices for using a VM of a particular OS
        /// type, tier, etc.
        /// </remarks>
        [JsonProperty(PropertyName = "values")]
        public IList<EstimatedVMPrice> Values { get; set; }

        /// <summary>
        /// Three lettered code specifying the currency of the VM price.
        /// Example: USD
        /// </summary>
        [JsonProperty(PropertyName = "billingCurrency")]
        public static string BillingCurrency { get; private set; }

        /// <summary>
        /// The unit of time measurement for the specified VM price. Example:
        /// OneHour
        /// </summary>
        [JsonProperty(PropertyName = "unitOfMeasure")]
        public static string UnitOfMeasure { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Values == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Values");
            }
            if (Values != null)
            {
                foreach (var element in Values)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
