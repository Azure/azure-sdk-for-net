// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class RSectionResponse
    {
        /// <summary>
        /// Initializes a new instance of the RSectionResponse class.
        /// </summary>
        public RSectionResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RSectionResponse class.
        /// </summary>
        /// <param name="rVersion">The version of R to be installed</param>
        /// <param name="userManaged">Indicates whether the environment is
        /// managed by user or by AzureML.</param>
        /// <param name="rscriptPath">The Rscript path to use if an environment
        /// build is not required.
        /// The path specified gets used to call the user script.</param>
        /// <param name="snapshotDate">Date of MRAN snapshot to use in
        /// YYYY-MM-DD format, e.g. "2019-04-17"</param>
        /// <param name="cranPackages">The CRAN packages to use.</param>
        /// <param name="gitHubPackages">The packages directly from
        /// GitHub.</param>
        /// <param name="customUrlPackages">The packages from custom
        /// urls.</param>
        /// <param name="bioConductorPackages">The packages from
        /// Bioconductor.</param>
        public RSectionResponse(string rVersion = default(string), bool? userManaged = default(bool?), string rscriptPath = default(string), string snapshotDate = default(string), IList<RCranPackage> cranPackages = default(IList<RCranPackage>), IList<RGitHubPackageResponse> gitHubPackages = default(IList<RGitHubPackageResponse>), IList<string> customUrlPackages = default(IList<string>), IList<string> bioConductorPackages = default(IList<string>))
        {
            RVersion = rVersion;
            UserManaged = userManaged;
            RscriptPath = rscriptPath;
            SnapshotDate = snapshotDate;
            CranPackages = cranPackages;
            GitHubPackages = gitHubPackages;
            CustomUrlPackages = customUrlPackages;
            BioConductorPackages = bioConductorPackages;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the version of R to be installed
        /// </summary>
        [JsonProperty(PropertyName = "rVersion")]
        public string RVersion { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the environment is managed by user
        /// or by AzureML.
        /// </summary>
        [JsonProperty(PropertyName = "userManaged")]
        public bool? UserManaged { get; set; }

        /// <summary>
        /// Gets or sets the Rscript path to use if an environment build is not
        /// required.
        /// The path specified gets used to call the user script.
        /// </summary>
        [JsonProperty(PropertyName = "rscriptPath")]
        public string RscriptPath { get; set; }

        /// <summary>
        /// Gets or sets date of MRAN snapshot to use in YYYY-MM-DD format,
        /// e.g. "2019-04-17"
        /// </summary>
        [JsonProperty(PropertyName = "snapshotDate")]
        public string SnapshotDate { get; set; }

        /// <summary>
        /// Gets or sets the CRAN packages to use.
        /// </summary>
        [JsonProperty(PropertyName = "cranPackages")]
        public IList<RCranPackage> CranPackages { get; set; }

        /// <summary>
        /// Gets or sets the packages directly from GitHub.
        /// </summary>
        [JsonProperty(PropertyName = "gitHubPackages")]
        public IList<RGitHubPackageResponse> GitHubPackages { get; set; }

        /// <summary>
        /// Gets or sets the packages from custom urls.
        /// </summary>
        [JsonProperty(PropertyName = "customUrlPackages")]
        public IList<string> CustomUrlPackages { get; set; }

        /// <summary>
        /// Gets or sets the packages from Bioconductor.
        /// </summary>
        [JsonProperty(PropertyName = "bioConductorPackages")]
        public IList<string> BioConductorPackages { get; set; }

    }
}
