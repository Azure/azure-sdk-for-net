// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Compute Instance properties
    /// </summary>
    public partial class ComputeInstanceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ComputeInstanceProperties class.
        /// </summary>
        public ComputeInstanceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputeInstanceProperties class.
        /// </summary>
        /// <param name="vmSize">Virtual Machine Size</param>
        /// <param name="subnet">Subnet.</param>
        /// <param name="applicationSharingPolicy">Sharing policy for
        /// applications on this compute instance</param>
        /// <param name="sshSettings">Specifies policy and settings for SSH
        /// access.</param>
        /// <param name="connectivityEndpoints">Describes all connectivity
        /// endpoints available for this ComputeInstance.</param>
        /// <param name="applications">Describes available applications and
        /// their endpoints on this ComputeInstance.</param>
        /// <param name="createdBy">Describes information on user who created
        /// this ComputeInstance.</param>
        /// <param name="errors">Errors.</param>
        /// <param name="state">The current state of this ComputeInstance.
        /// Possible values include: 'Creating', 'CreateFailed', 'Deleting',
        /// 'Running', 'Restarting', 'JobRunning', 'SettingUp', 'SetupFailed',
        /// 'Starting', 'Stopped', 'Stopping', 'UserSettingUp',
        /// 'UserSetupFailed', 'Unknown', 'Unusable'</param>
        /// <param name="computeInstanceAuthorizationType">Compute Instance
        /// Authorization type.</param>
        /// <param name="personalComputeInstanceSettings">Personal Compute
        /// Instance settings.</param>
        /// <param name="setupScripts">Details of customized scripts to execute
        /// for setting up the cluster.</param>
        /// <param name="lastOperation">The last operation on
        /// ComputeInstance.</param>
        /// <param name="schedules">The list of schedules to be applied on the
        /// compute instance.</param>
        public ComputeInstanceProperties(string vmSize = default(string), ResourceId subnet = default(ResourceId), string applicationSharingPolicy = default(string), ComputeInstanceSshSettings sshSettings = default(ComputeInstanceSshSettings), ComputeInstanceConnectivityEndpoints connectivityEndpoints = default(ComputeInstanceConnectivityEndpoints), IList<ComputeInstanceApplication> applications = default(IList<ComputeInstanceApplication>), ComputeInstanceCreatedBy createdBy = default(ComputeInstanceCreatedBy), IList<ErrorResponse> errors = default(IList<ErrorResponse>), string state = default(string), string computeInstanceAuthorizationType = default(string), PersonalComputeInstanceSettings personalComputeInstanceSettings = default(PersonalComputeInstanceSettings), SetupScripts setupScripts = default(SetupScripts), ComputeInstanceLastOperation lastOperation = default(ComputeInstanceLastOperation), ComputeSchedules schedules = default(ComputeSchedules))
        {
            VmSize = vmSize;
            Subnet = subnet;
            ApplicationSharingPolicy = applicationSharingPolicy;
            SshSettings = sshSettings;
            ConnectivityEndpoints = connectivityEndpoints;
            Applications = applications;
            CreatedBy = createdBy;
            Errors = errors;
            State = state;
            ComputeInstanceAuthorizationType = computeInstanceAuthorizationType;
            PersonalComputeInstanceSettings = personalComputeInstanceSettings;
            SetupScripts = setupScripts;
            LastOperation = lastOperation;
            Schedules = schedules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets virtual Machine Size
        /// </summary>
        [JsonProperty(PropertyName = "vmSize")]
        public string VmSize { get; set; }

        /// <summary>
        /// Gets or sets subnet.
        /// </summary>
        /// <remarks>
        /// Virtual network subnet resource ID the compute nodes belong to.
        /// </remarks>
        [JsonProperty(PropertyName = "subnet")]
        public ResourceId Subnet { get; set; }

        /// <summary>
        /// Gets or sets sharing policy for applications on this compute
        /// instance
        /// </summary>
        /// <remarks>
        /// Policy for sharing applications on this compute instance among
        /// users of parent workspace. If Personal, only the creator can access
        /// applications on this compute instance. When Shared, any workspace
        /// user can access applications on this instance depending on his/her
        /// assigned role. Possible values include: 'Personal', 'Shared'
        /// </remarks>
        [JsonProperty(PropertyName = "applicationSharingPolicy")]
        public string ApplicationSharingPolicy { get; set; }

        /// <summary>
        /// Gets or sets specifies policy and settings for SSH access.
        /// </summary>
        [JsonProperty(PropertyName = "sshSettings")]
        public ComputeInstanceSshSettings SshSettings { get; set; }

        /// <summary>
        /// Gets describes all connectivity endpoints available for this
        /// ComputeInstance.
        /// </summary>
        [JsonProperty(PropertyName = "connectivityEndpoints")]
        public ComputeInstanceConnectivityEndpoints ConnectivityEndpoints { get; private set; }

        /// <summary>
        /// Gets describes available applications and their endpoints on this
        /// ComputeInstance.
        /// </summary>
        [JsonProperty(PropertyName = "applications")]
        public IList<ComputeInstanceApplication> Applications { get; private set; }

        /// <summary>
        /// Gets describes information on user who created this
        /// ComputeInstance.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public ComputeInstanceCreatedBy CreatedBy { get; private set; }

        /// <summary>
        /// Gets errors.
        /// </summary>
        /// <remarks>
        /// Collection of errors encountered on this ComputeInstance.
        /// </remarks>
        [JsonProperty(PropertyName = "errors")]
        public IList<ErrorResponse> Errors { get; private set; }

        /// <summary>
        /// Gets the current state of this ComputeInstance. Possible values
        /// include: 'Creating', 'CreateFailed', 'Deleting', 'Running',
        /// 'Restarting', 'JobRunning', 'SettingUp', 'SetupFailed', 'Starting',
        /// 'Stopped', 'Stopping', 'UserSettingUp', 'UserSetupFailed',
        /// 'Unknown', 'Unusable'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets or sets compute Instance Authorization type.
        /// </summary>
        /// <remarks>
        /// The Compute Instance Authorization type. Available values are
        /// personal (default). Possible values include: 'personal'
        /// </remarks>
        [JsonProperty(PropertyName = "computeInstanceAuthorizationType")]
        public string ComputeInstanceAuthorizationType { get; set; }

        /// <summary>
        /// Gets or sets personal Compute Instance settings.
        /// </summary>
        /// <remarks>
        /// Settings for a personal compute instance.
        /// </remarks>
        [JsonProperty(PropertyName = "personalComputeInstanceSettings")]
        public PersonalComputeInstanceSettings PersonalComputeInstanceSettings { get; set; }

        /// <summary>
        /// Gets or sets details of customized scripts to execute for setting
        /// up the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "setupScripts")]
        public SetupScripts SetupScripts { get; set; }

        /// <summary>
        /// Gets the last operation on ComputeInstance.
        /// </summary>
        [JsonProperty(PropertyName = "lastOperation")]
        public ComputeInstanceLastOperation LastOperation { get; private set; }

        /// <summary>
        /// Gets or sets the list of schedules to be applied on the compute
        /// instance.
        /// </summary>
        [JsonProperty(PropertyName = "schedules")]
        public ComputeSchedules Schedules { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Subnet != null)
            {
                Subnet.Validate();
            }
            if (PersonalComputeInstanceSettings != null)
            {
                PersonalComputeInstanceSettings.Validate();
            }
        }
    }
}
