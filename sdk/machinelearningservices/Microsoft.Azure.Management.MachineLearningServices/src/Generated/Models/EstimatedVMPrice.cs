// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The estimated price info for using a VM of a particular OS type, tier,
    /// etc.
    /// </summary>
    public partial class EstimatedVMPrice
    {
        /// <summary>
        /// Initializes a new instance of the EstimatedVMPrice class.
        /// </summary>
        public EstimatedVMPrice()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EstimatedVMPrice class.
        /// </summary>
        /// <param name="retailPrice">Retail price</param>
        /// <param name="osType">OS type</param>
        /// <param name="vmTier">VM tier</param>
        public EstimatedVMPrice(double retailPrice, string osType, string vmTier)
        {
            RetailPrice = retailPrice;
            OsType = osType;
            VmTier = vmTier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets retail price
        /// </summary>
        /// <remarks>
        /// The price charged for using the VM.
        /// </remarks>
        [JsonProperty(PropertyName = "retailPrice")]
        public double RetailPrice { get; set; }

        /// <summary>
        /// Gets or sets OS type
        /// </summary>
        /// <remarks>
        /// Operating system type used by the VM. Possible values include:
        /// 'Linux', 'Windows'
        /// </remarks>
        [JsonProperty(PropertyName = "osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets or sets VM tier
        /// </summary>
        /// <remarks>
        /// The type of the VM. Possible values include: 'Standard',
        /// 'LowPriority', 'Spot'
        /// </remarks>
        [JsonProperty(PropertyName = "vmTier")]
        public string VmTier { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OsType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OsType");
            }
            if (VmTier == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VmTier");
            }
        }
    }
}
