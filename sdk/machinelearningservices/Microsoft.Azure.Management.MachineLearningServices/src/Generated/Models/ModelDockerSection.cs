// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ModelDockerSection
    {
        /// <summary>
        /// Initializes a new instance of the ModelDockerSection class.
        /// </summary>
        public ModelDockerSection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ModelDockerSection class.
        /// </summary>
        /// <param name="baseImage">Base image used for Docker-based runs.
        /// Mutually exclusive with BaseDockerfile.</param>
        /// <param name="baseDockerfile">Base Dockerfile used for Docker-based
        /// runs. Mutually exclusive with BaseImage.</param>
        /// <param name="baseImageRegistry">Image registry that contains the
        /// base image.</param>
        public ModelDockerSection(string baseImage = default(string), string baseDockerfile = default(string), ModelDockerSectionBaseImageRegistry baseImageRegistry = default(ModelDockerSectionBaseImageRegistry))
        {
            BaseImage = baseImage;
            BaseDockerfile = baseDockerfile;
            BaseImageRegistry = baseImageRegistry;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets base image used for Docker-based runs. Mutually
        /// exclusive with BaseDockerfile.
        /// </summary>
        [JsonProperty(PropertyName = "baseImage")]
        public string BaseImage { get; set; }

        /// <summary>
        /// Gets or sets base Dockerfile used for Docker-based runs. Mutually
        /// exclusive with BaseImage.
        /// </summary>
        [JsonProperty(PropertyName = "baseDockerfile")]
        public string BaseDockerfile { get; set; }

        /// <summary>
        /// Gets or sets image registry that contains the base image.
        /// </summary>
        [JsonProperty(PropertyName = "baseImageRegistry")]
        public ModelDockerSectionBaseImageRegistry BaseImageRegistry { get; set; }

    }
}
