// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Reference to an asset via its path in a datastore.
    /// </summary>
    [Newtonsoft.Json.JsonObject("DataPath")]
    public partial class DataPathAssetReference : AssetReferenceBase
    {
        /// <summary>
        /// Initializes a new instance of the DataPathAssetReference class.
        /// </summary>
        public DataPathAssetReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataPathAssetReference class.
        /// </summary>
        /// <param name="datastoreId">ARM resource ID of the datastore where
        /// the asset is located.</param>
        /// <param name="path">The path of the file/directory in the
        /// datastore.</param>
        public DataPathAssetReference(string datastoreId = default(string), string path = default(string))
        {
            DatastoreId = datastoreId;
            Path = path;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ARM resource ID of the datastore where the asset is
        /// located.
        /// </summary>
        [JsonProperty(PropertyName = "datastoreId")]
        public string DatastoreId { get; set; }

        /// <summary>
        /// Gets or sets the path of the file/directory in the datastore.
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

    }
}
