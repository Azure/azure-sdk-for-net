// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Script reference
    /// </summary>
    public partial class ScriptReference
    {
        /// <summary>
        /// Initializes a new instance of the ScriptReference class.
        /// </summary>
        public ScriptReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScriptReference class.
        /// </summary>
        /// <param name="scriptSource">The storage source of the script:
        /// inline, workspace.</param>
        /// <param name="scriptData">The location of scripts in the mounted
        /// volume.</param>
        /// <param name="scriptArguments">Optional command line arguments
        /// passed to the script to run.</param>
        /// <param name="timeout">Optional time period passed to timeout
        /// command.</param>
        public ScriptReference(string scriptSource = default(string), string scriptData = default(string), string scriptArguments = default(string), string timeout = default(string))
        {
            ScriptSource = scriptSource;
            ScriptData = scriptData;
            ScriptArguments = scriptArguments;
            Timeout = timeout;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the storage source of the script: inline, workspace.
        /// </summary>
        [JsonProperty(PropertyName = "scriptSource")]
        public string ScriptSource { get; set; }

        /// <summary>
        /// Gets or sets the location of scripts in the mounted volume.
        /// </summary>
        [JsonProperty(PropertyName = "scriptData")]
        public string ScriptData { get; set; }

        /// <summary>
        /// Gets or sets optional command line arguments passed to the script
        /// to run.
        /// </summary>
        [JsonProperty(PropertyName = "scriptArguments")]
        public string ScriptArguments { get; set; }

        /// <summary>
        /// Gets or sets optional time period passed to timeout command.
        /// </summary>
        [JsonProperty(PropertyName = "timeout")]
        public string Timeout { get; set; }

    }
}
