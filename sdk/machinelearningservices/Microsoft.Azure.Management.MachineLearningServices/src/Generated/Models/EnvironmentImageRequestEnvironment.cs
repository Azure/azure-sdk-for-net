// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The details of the AZURE ML environment.
    /// </summary>
    public partial class EnvironmentImageRequestEnvironment : ModelEnvironmentDefinition
    {
        /// <summary>
        /// Initializes a new instance of the
        /// EnvironmentImageRequestEnvironment class.
        /// </summary>
        public EnvironmentImageRequestEnvironment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// EnvironmentImageRequestEnvironment class.
        /// </summary>
        /// <param name="name">The name of the environment.</param>
        /// <param name="version">The environment version.</param>
        /// <param name="python">Settings for a Python environment.</param>
        /// <param name="environmentVariables">Definition of environment
        /// variables to be defined in the environment.</param>
        /// <param name="docker">The definition of a Docker container.</param>
        /// <param name="spark">The configuration for a Spark
        /// environment.</param>
        /// <param name="r">Settings for a R environment.</param>
        /// <param name="inferencingStackVersion">The inferencing stack version
        /// added to the image. To avoid adding an inferencing stack, do not
        /// set this value. Valid values: "latest".</param>
        public EnvironmentImageRequestEnvironment(string name = default(string), string version = default(string), ModelEnvironmentDefinitionPython python = default(ModelEnvironmentDefinitionPython), IDictionary<string, string> environmentVariables = default(IDictionary<string, string>), ModelEnvironmentDefinitionDocker docker = default(ModelEnvironmentDefinitionDocker), ModelEnvironmentDefinitionSpark spark = default(ModelEnvironmentDefinitionSpark), ModelEnvironmentDefinitionR r = default(ModelEnvironmentDefinitionR), string inferencingStackVersion = default(string))
            : base(name, version, python, environmentVariables, docker, spark, r, inferencingStackVersion)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

    }
}
