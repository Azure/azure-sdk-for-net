// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Online endpoint configuration
    /// </summary>
    public partial class OnlineEndpoint
    {
        /// <summary>
        /// Initializes a new instance of the OnlineEndpoint class.
        /// </summary>
        public OnlineEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OnlineEndpoint class.
        /// </summary>
        /// <param name="authMode">Inference endpoint authentication mode type.
        /// Possible values include: 'AMLToken', 'Key', 'AADToken'</param>
        /// <param name="description">Description of the inference
        /// endpoint.</param>
        /// <param name="keys">EndpointAuthKeys to set initially on an
        /// Endpoint.
        /// This property will always be returned as null. AuthKey values must
        /// be retrieved using the ListKeys API.</param>
        /// <param name="properties">Property dictionary. Properties can be
        /// added, but not removed or altered.</param>
        /// <param name="provisioningState">State of endpoint provisioning.
        /// Possible values include: 'Creating', 'Deleting', 'Succeeded',
        /// 'Failed', 'Updating', 'Canceled'</param>
        /// <param name="scoringUri">Endpoint URI.</param>
        /// <param name="swaggerUri">Endpoint Swagger URI.</param>
        /// <param name="target">ARM resource ID of the compute if it exists.
        /// optional</param>
        /// <param name="traffic">Traffic rules on how the traffic will be
        /// routed across deployments.</param>
        public OnlineEndpoint(string authMode, string description = default(string), EndpointAuthKeys keys = default(EndpointAuthKeys), IDictionary<string, string> properties = default(IDictionary<string, string>), string provisioningState = default(string), string scoringUri = default(string), string swaggerUri = default(string), string target = default(string), IDictionary<string, int?> traffic = default(IDictionary<string, int?>))
        {
            AuthMode = authMode;
            Description = description;
            Keys = keys;
            Properties = properties;
            ProvisioningState = provisioningState;
            ScoringUri = scoringUri;
            SwaggerUri = swaggerUri;
            Target = target;
            Traffic = traffic;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets inference endpoint authentication mode type. Possible
        /// values include: 'AMLToken', 'Key', 'AADToken'
        /// </summary>
        [JsonProperty(PropertyName = "authMode")]
        public string AuthMode { get; set; }

        /// <summary>
        /// Gets or sets description of the inference endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets endpointAuthKeys to set initially on an Endpoint.
        /// This property will always be returned as null. AuthKey values must
        /// be retrieved using the ListKeys API.
        /// </summary>
        [JsonProperty(PropertyName = "keys")]
        public EndpointAuthKeys Keys { get; set; }

        /// <summary>
        /// Gets or sets property dictionary. Properties can be added, but not
        /// removed or altered.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets state of endpoint provisioning. Possible values include:
        /// 'Creating', 'Deleting', 'Succeeded', 'Failed', 'Updating',
        /// 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets endpoint URI.
        /// </summary>
        [JsonProperty(PropertyName = "scoringUri")]
        public string ScoringUri { get; private set; }

        /// <summary>
        /// Gets endpoint Swagger URI.
        /// </summary>
        [JsonProperty(PropertyName = "swaggerUri")]
        public string SwaggerUri { get; private set; }

        /// <summary>
        /// Gets or sets ARM resource ID of the compute if it exists.
        /// optional
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

        /// <summary>
        /// Gets or sets traffic rules on how the traffic will be routed across
        /// deployments.
        /// </summary>
        [JsonProperty(PropertyName = "traffic")]
        public IDictionary<string, int?> Traffic { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AuthMode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AuthMode");
            }
        }
    }
}
