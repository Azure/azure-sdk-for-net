// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Objective
    {
        /// <summary>
        /// Initializes a new instance of the Objective class.
        /// </summary>
        public Objective()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Objective class.
        /// </summary>
        /// <param name="goal">Defines supported metric goals for
        /// hyperparameter tuning. Possible values include: 'Minimize',
        /// 'Maximize'</param>
        public Objective(string goal, string primaryMetric)
        {
            Goal = goal;
            PrimaryMetric = primaryMetric;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets defines supported metric goals for hyperparameter
        /// tuning. Possible values include: 'Minimize', 'Maximize'
        /// </summary>
        [JsonProperty(PropertyName = "goal")]
        public string Goal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "primaryMetric")]
        public string PrimaryMetric { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Goal == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Goal");
            }
            if (PrimaryMetric == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PrimaryMetric");
            }
            if (PrimaryMetric != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(PrimaryMetric, "[a-zA-Z0-9_]"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "PrimaryMetric", "[a-zA-Z0-9_]");
                }
            }
        }
    }
}
