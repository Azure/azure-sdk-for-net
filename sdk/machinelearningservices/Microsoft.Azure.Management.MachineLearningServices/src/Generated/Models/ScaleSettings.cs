// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// scale settings for AML Compute
    /// </summary>
    public partial class ScaleSettings
    {
        /// <summary>
        /// Initializes a new instance of the ScaleSettings class.
        /// </summary>
        public ScaleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScaleSettings class.
        /// </summary>
        /// <param name="maxNodeCount">Max number of nodes to use</param>
        /// <param name="minNodeCount">Min number of nodes to use</param>
        /// <param name="nodeIdleTimeBeforeScaleDown">Node Idle Time before
        /// scaling down amlCompute. This string needs to be in the RFC
        /// Format.</param>
        public ScaleSettings(int maxNodeCount, int? minNodeCount = default(int?), System.TimeSpan? nodeIdleTimeBeforeScaleDown = default(System.TimeSpan?))
        {
            MaxNodeCount = maxNodeCount;
            MinNodeCount = minNodeCount;
            NodeIdleTimeBeforeScaleDown = nodeIdleTimeBeforeScaleDown;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets max number of nodes to use
        /// </summary>
        [JsonProperty(PropertyName = "maxNodeCount")]
        public int MaxNodeCount { get; set; }

        /// <summary>
        /// Gets or sets min number of nodes to use
        /// </summary>
        [JsonProperty(PropertyName = "minNodeCount")]
        public int? MinNodeCount { get; set; }

        /// <summary>
        /// Gets or sets node Idle Time before scaling down amlCompute. This
        /// string needs to be in the RFC Format.
        /// </summary>
        [JsonProperty(PropertyName = "nodeIdleTimeBeforeScaleDown")]
        public System.TimeSpan? NodeIdleTimeBeforeScaleDown { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
