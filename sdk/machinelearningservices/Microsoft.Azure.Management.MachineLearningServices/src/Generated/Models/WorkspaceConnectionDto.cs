// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// object used for creating workspace connection.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkspaceConnectionDto
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceConnectionDto class.
        /// </summary>
        public WorkspaceConnectionDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceConnectionDto class.
        /// </summary>
        /// <param name="name">Friendly name of the workspace
        /// connection</param>
        /// <param name="category">Category of the workspace
        /// connection.</param>
        /// <param name="target">Target of the workspace connection.</param>
        /// <param name="authType">Authorization type of the workspace
        /// connection.</param>
        /// <param name="value">Value details of the workspace
        /// connection.</param>
        /// <param name="valueFormat">format for the workspace connection
        /// value. Possible values include: 'JSON'</param>
        public WorkspaceConnectionDto(string name = default(string), string category = default(string), string target = default(string), string authType = default(string), string value = default(string), string valueFormat = default(string))
        {
            Name = name;
            Category = category;
            Target = target;
            AuthType = authType;
            Value = value;
            ValueFormat = valueFormat;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets friendly name of the workspace connection
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets category of the workspace connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets target of the workspace connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.target")]
        public string Target { get; set; }

        /// <summary>
        /// Gets or sets authorization type of the workspace connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.authType")]
        public string AuthType { get; set; }

        /// <summary>
        /// Gets or sets value details of the workspace connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets format for the workspace connection value. Possible
        /// values include: 'JSON'
        /// </summary>
        [JsonProperty(PropertyName = "properties.valueFormat")]
        public string ValueFormat { get; set; }

    }
}
