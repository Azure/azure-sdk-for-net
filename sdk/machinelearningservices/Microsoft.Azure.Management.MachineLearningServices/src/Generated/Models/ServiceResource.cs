// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Machine Learning service object wrapped into ARM resource envelope.
    /// </summary>
    public partial class ServiceResource : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ServiceResource class.
        /// </summary>
        public ServiceResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceResource class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="properties">Service properties</param>
        /// <param name="identity">The identity of the resource.</param>
        /// <param name="location">Specifies the location of the
        /// resource.</param>
        /// <param name="tags">Contains resource tags defined as key/value
        /// pairs.</param>
        /// <param name="sku">The sku of the workspace.</param>
        public ServiceResource(string id = default(string), string name = default(string), string type = default(string), ServiceResponseBase properties = default(ServiceResponseBase), Identity identity = default(Identity), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Sku sku = default(Sku), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Properties = properties;
            Identity = identity;
            Location = location;
            Tags = tags;
            Sku = sku;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets service properties
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public ServiceResponseBase Properties { get; set; }

        /// <summary>
        /// Gets or sets the identity of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }

        /// <summary>
        /// Gets or sets specifies the location of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets contains resource tags defined as key/value pairs.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the sku of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

    }
}
