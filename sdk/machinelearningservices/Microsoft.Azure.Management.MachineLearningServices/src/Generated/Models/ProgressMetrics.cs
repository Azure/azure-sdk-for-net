// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Progress metrics definition
    /// </summary>
    public partial class ProgressMetrics
    {
        /// <summary>
        /// Initializes a new instance of the ProgressMetrics class.
        /// </summary>
        public ProgressMetrics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProgressMetrics class.
        /// </summary>
        /// <param name="completedDatapointCount">The completed datapoint
        /// count.</param>
        /// <param name="incrementalDatasetLastRefreshTime">The time of last
        /// successful incremental dataset refresh in UTC.</param>
        /// <param name="skippedDatapointCount">The skipped datapoint
        /// count.</param>
        /// <param name="totalDatapointCount">The total datapoint
        /// count.</param>
        public ProgressMetrics(long? completedDatapointCount = default(long?), System.DateTime? incrementalDatasetLastRefreshTime = default(System.DateTime?), long? skippedDatapointCount = default(long?), long? totalDatapointCount = default(long?))
        {
            CompletedDatapointCount = completedDatapointCount;
            IncrementalDatasetLastRefreshTime = incrementalDatasetLastRefreshTime;
            SkippedDatapointCount = skippedDatapointCount;
            TotalDatapointCount = totalDatapointCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the completed datapoint count.
        /// </summary>
        [JsonProperty(PropertyName = "completedDatapointCount")]
        public long? CompletedDatapointCount { get; private set; }

        /// <summary>
        /// Gets the time of last successful incremental dataset refresh in
        /// UTC.
        /// </summary>
        [JsonProperty(PropertyName = "incrementalDatasetLastRefreshTime")]
        public System.DateTime? IncrementalDatasetLastRefreshTime { get; private set; }

        /// <summary>
        /// Gets the skipped datapoint count.
        /// </summary>
        [JsonProperty(PropertyName = "skippedDatapointCount")]
        public long? SkippedDatapointCount { get; private set; }

        /// <summary>
        /// Gets the total datapoint count.
        /// </summary>
        [JsonProperty(PropertyName = "totalDatapointCount")]
        public long? TotalDatapointCount { get; private set; }

    }
}
