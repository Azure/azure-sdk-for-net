// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines headers for Update operation.
    /// </summary>
    public partial class OnlineDeploymentsUpdateHeaders
    {
        /// <summary>
        /// Initializes a new instance of the OnlineDeploymentsUpdateHeaders
        /// class.
        /// </summary>
        public OnlineDeploymentsUpdateHeaders()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OnlineDeploymentsUpdateHeaders
        /// class.
        /// </summary>
        /// <param name="xMsAsyncOperationTimeout">Timeout for the client to
        /// use when polling the asynchronous operation.</param>
        /// <param name="location">URI to poll for asynchronous operation
        /// result.</param>
        /// <param name="retryAfter">Duration the client should wait between
        /// requests, in seconds.</param>
        public OnlineDeploymentsUpdateHeaders(System.TimeSpan? xMsAsyncOperationTimeout = default(System.TimeSpan?), string location = default(string), int? retryAfter = default(int?))
        {
            XMsAsyncOperationTimeout = xMsAsyncOperationTimeout;
            Location = location;
            RetryAfter = retryAfter;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets timeout for the client to use when polling the
        /// asynchronous operation.
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-async-operation-timeout")]
        public System.TimeSpan? XMsAsyncOperationTimeout { get; set; }

        /// <summary>
        /// Gets or sets URI to poll for asynchronous operation result.
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets duration the client should wait between requests, in
        /// seconds.
        /// </summary>
        [JsonProperty(PropertyName = "Retry-After")]
        public int? RetryAfter { get; set; }

    }
}
