// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EncryptionProperty
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionProperty class.
        /// </summary>
        public EncryptionProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionProperty class.
        /// </summary>
        /// <param name="status">Indicates whether or not the encryption is
        /// enabled for the workspace. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="keyVaultProperties">Customer Key vault
        /// properties.</param>
        /// <param name="identity">The identity that will be used to access the
        /// key vault for encryption at rest.</param>
        public EncryptionProperty(string status, KeyVaultProperties keyVaultProperties, IdentityForCmk identity = default(IdentityForCmk))
        {
            Status = status;
            Identity = identity;
            KeyVaultProperties = keyVaultProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether or not the encryption is enabled for
        /// the workspace. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the identity that will be used to access the key vault
        /// for encryption at rest.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public IdentityForCmk Identity { get; set; }

        /// <summary>
        /// Gets or sets customer Key vault properties.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultProperties")]
        public KeyVaultProperties KeyVaultProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (KeyVaultProperties == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVaultProperties");
            }
            if (KeyVaultProperties != null)
            {
                KeyVaultProperties.Validate();
            }
        }
    }
}
