// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Labeling job definition
    /// </summary>
    public partial class LabelingJob
    {
        /// <summary>
        /// Initializes a new instance of the LabelingJob class.
        /// </summary>
        public LabelingJob()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LabelingJob class.
        /// </summary>
        /// <param name="jobType">Specifies the type of job. This field should
        /// always be set to "Labeling". Possible values include: 'Command',
        /// 'Sweep', 'Labeling'</param>
        /// <param name="createdTimeUtc">Created time of the job in UTC
        /// timezone.</param>
        /// <param name="datasetConfiguration">Configuration of dataset used in
        /// the job.</param>
        /// <param name="description">The asset description text.</param>
        /// <param name="interactionEndpoints">List of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of
        /// FileStreamObject.</param>
        /// <param name="jobInstructions">Labeling instructions of the
        /// job.</param>
        /// <param name="labelCategories">Label categories of the job.</param>
        /// <param name="labelingJobMediaProperties">Media type specific
        /// properties in the job.</param>
        /// <param name="mlAssistConfiguration">Configuration of MLAssist
        /// feature in the job.</param>
        /// <param name="progressMetrics">Progress metrics of the job.</param>
        /// <param name="projectId">Internal id of the job(Previously called
        /// project).</param>
        /// <param name="properties">The asset property dictionary.</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Failed', 'Canceled', 'InProgress'</param>
        /// <param name="status">Status of the job. Possible values include:
        /// 'NotStarted', 'Starting', 'Provisioning', 'Preparing', 'Queued',
        /// 'Running', 'Finalizing', 'CancelRequested', 'Completed', 'Failed',
        /// 'Canceled', 'NotResponding', 'Paused', 'Unknown'</param>
        /// <param name="statusMessages">Status messages of the job.</param>
        /// <param name="tags">Tag dictionary. Tags can be added, removed, and
        /// updated.</param>
        public LabelingJob(string jobType, System.DateTime? createdTimeUtc = default(System.DateTime?), LabelingDatasetConfiguration datasetConfiguration = default(LabelingDatasetConfiguration), string description = default(string), IDictionary<string, JobEndpoint> interactionEndpoints = default(IDictionary<string, JobEndpoint>), LabelingJobInstructions jobInstructions = default(LabelingJobInstructions), IDictionary<string, LabelCategory> labelCategories = default(IDictionary<string, LabelCategory>), LabelingJobMediaProperties labelingJobMediaProperties = default(LabelingJobMediaProperties), MLAssistConfiguration mlAssistConfiguration = default(MLAssistConfiguration), ProgressMetrics progressMetrics = default(ProgressMetrics), System.Guid? projectId = default(System.Guid?), IDictionary<string, string> properties = default(IDictionary<string, string>), string provisioningState = default(string), string status = default(string), IList<StatusMessage> statusMessages = default(IList<StatusMessage>), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            CreatedTimeUtc = createdTimeUtc;
            DatasetConfiguration = datasetConfiguration;
            Description = description;
            InteractionEndpoints = interactionEndpoints;
            JobInstructions = jobInstructions;
            JobType = jobType;
            LabelCategories = labelCategories;
            LabelingJobMediaProperties = labelingJobMediaProperties;
            MlAssistConfiguration = mlAssistConfiguration;
            ProgressMetrics = progressMetrics;
            ProjectId = projectId;
            Properties = properties;
            ProvisioningState = provisioningState;
            Status = status;
            StatusMessages = statusMessages;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets created time of the job in UTC timezone.
        /// </summary>
        [JsonProperty(PropertyName = "createdTimeUtc")]
        public System.DateTime? CreatedTimeUtc { get; private set; }

        /// <summary>
        /// Gets or sets configuration of dataset used in the job.
        /// </summary>
        [JsonProperty(PropertyName = "datasetConfiguration")]
        public LabelingDatasetConfiguration DatasetConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the asset description text.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets list of JobEndpoints.
        /// For local jobs, a job endpoint will have an endpoint value of
        /// FileStreamObject.
        /// </summary>
        [JsonProperty(PropertyName = "interactionEndpoints")]
        public IDictionary<string, JobEndpoint> InteractionEndpoints { get; private set; }

        /// <summary>
        /// Gets or sets labeling instructions of the job.
        /// </summary>
        [JsonProperty(PropertyName = "jobInstructions")]
        public LabelingJobInstructions JobInstructions { get; set; }

        /// <summary>
        /// Gets or sets specifies the type of job. This field should always be
        /// set to "Labeling". Possible values include: 'Command', 'Sweep',
        /// 'Labeling'
        /// </summary>
        [JsonProperty(PropertyName = "jobType")]
        public string JobType { get; set; }

        /// <summary>
        /// Gets or sets label categories of the job.
        /// </summary>
        [JsonProperty(PropertyName = "labelCategories")]
        public IDictionary<string, LabelCategory> LabelCategories { get; set; }

        /// <summary>
        /// Gets or sets media type specific properties in the job.
        /// </summary>
        [JsonProperty(PropertyName = "labelingJobMediaProperties")]
        public LabelingJobMediaProperties LabelingJobMediaProperties { get; set; }

        /// <summary>
        /// Gets or sets configuration of MLAssist feature in the job.
        /// </summary>
        [JsonProperty(PropertyName = "mlAssistConfiguration")]
        public MLAssistConfiguration MlAssistConfiguration { get; set; }

        /// <summary>
        /// Gets progress metrics of the job.
        /// </summary>
        [JsonProperty(PropertyName = "progressMetrics")]
        public ProgressMetrics ProgressMetrics { get; private set; }

        /// <summary>
        /// Gets internal id of the job(Previously called project).
        /// </summary>
        [JsonProperty(PropertyName = "projectId")]
        public System.Guid? ProjectId { get; private set; }

        /// <summary>
        /// Gets or sets the asset property dictionary.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Failed', 'Canceled',
        /// 'InProgress'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets status of the job. Possible values include: 'NotStarted',
        /// 'Starting', 'Provisioning', 'Preparing', 'Queued', 'Running',
        /// 'Finalizing', 'CancelRequested', 'Completed', 'Failed', 'Canceled',
        /// 'NotResponding', 'Paused', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets status messages of the job.
        /// </summary>
        [JsonProperty(PropertyName = "statusMessages")]
        public IList<StatusMessage> StatusMessages { get; private set; }

        /// <summary>
        /// Gets or sets tag dictionary. Tags can be added, removed, and
        /// updated.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (JobType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "JobType");
            }
        }
    }
}
