// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class VirtualMachineProperties
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineProperties class.
        /// </summary>
        public VirtualMachineProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineProperties class.
        /// </summary>
        /// <param name="virtualMachineSize">Virtual Machine size</param>
        /// <param name="sshPort">Port open for ssh connections.</param>
        /// <param name="address">Public IP address of the virtual
        /// machine.</param>
        /// <param name="administratorAccount">Admin credentials for virtual
        /// machine</param>
        /// <param name="isNotebookInstanceCompute">Indicates whether this
        /// compute will be used for running notebooks.</param>
        public VirtualMachineProperties(string virtualMachineSize = default(string), int? sshPort = default(int?), string address = default(string), VirtualMachineSshCredentials administratorAccount = default(VirtualMachineSshCredentials), bool? isNotebookInstanceCompute = default(bool?))
        {
            VirtualMachineSize = virtualMachineSize;
            SshPort = sshPort;
            Address = address;
            AdministratorAccount = administratorAccount;
            IsNotebookInstanceCompute = isNotebookInstanceCompute;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets virtual Machine size
        /// </summary>
        [JsonProperty(PropertyName = "virtualMachineSize")]
        public string VirtualMachineSize { get; set; }

        /// <summary>
        /// Gets or sets port open for ssh connections.
        /// </summary>
        [JsonProperty(PropertyName = "sshPort")]
        public int? SshPort { get; set; }

        /// <summary>
        /// Gets or sets public IP address of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// Gets or sets admin credentials for virtual machine
        /// </summary>
        [JsonProperty(PropertyName = "administratorAccount")]
        public VirtualMachineSshCredentials AdministratorAccount { get; set; }

        /// <summary>
        /// Gets or sets indicates whether this compute will be used for
        /// running notebooks.
        /// </summary>
        [JsonProperty(PropertyName = "isNotebookInstanceCompute")]
        public bool? IsNotebookInstanceCompute { get; set; }

    }
}
