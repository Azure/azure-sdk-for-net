// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An object that represents a machine learning workspace.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Workspace : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        public Workspace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        /// <param name="id">Specifies the resource ID.</param>
        /// <param name="name">Specifies the name of the resource.</param>
        /// <param name="identity">The identity of the resource.</param>
        /// <param name="location">Specifies the location of the
        /// resource.</param>
        /// <param name="type">Specifies the type of the resource.</param>
        /// <param name="tags">Contains resource tags defined as key/value
        /// pairs.</param>
        /// <param name="sku">The sku of the workspace.</param>
        /// <param name="workspaceId">The immutable id associated with this
        /// workspace.</param>
        /// <param name="description">The description of this
        /// workspace.</param>
        /// <param name="friendlyName">The friendly name for this workspace.
        /// This name in mutable</param>
        /// <param name="creationTime">The creation time of the machine
        /// learning workspace in ISO8601 format.</param>
        /// <param name="keyVault">ARM id of the key vault associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created</param>
        /// <param name="applicationInsights">ARM id of the application
        /// insights associated with this workspace. This cannot be changed
        /// once the workspace has been created</param>
        /// <param name="containerRegistry">ARM id of the container registry
        /// associated with this workspace. This cannot be changed once the
        /// workspace has been created</param>
        /// <param name="storageAccount">ARM id of the storage account
        /// associated with this workspace. This cannot be changed once the
        /// workspace has been created</param>
        /// <param name="discoveryUrl">Url for the discovery service to
        /// identify regional endpoints for machine learning experimentation
        /// services</param>
        /// <param name="provisioningState">The current deployment state of
        /// workspace resource. The provisioningState is to indicate states for
        /// resource provisioning. Possible values include: 'Unknown',
        /// 'Updating', 'Creating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled'</param>
        /// <param name="encryption">The encryption settings of Azure ML
        /// workspace.</param>
        /// <param name="hbiWorkspace">The flag to signal HBI data in the
        /// workspace and reduce diagnostic data collected by the
        /// service</param>
        public Workspace(string id = default(string), string name = default(string), Identity identity = default(Identity), string location = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Sku sku = default(Sku), string workspaceId = default(string), string description = default(string), string friendlyName = default(string), System.DateTime? creationTime = default(System.DateTime?), string keyVault = default(string), string applicationInsights = default(string), string containerRegistry = default(string), string storageAccount = default(string), string discoveryUrl = default(string), string provisioningState = default(string), EncryptionProperty encryption = default(EncryptionProperty), bool? hbiWorkspace = default(bool?))
            : base(id, name, identity, location, type, tags, sku)
        {
            WorkspaceId = workspaceId;
            Description = description;
            FriendlyName = friendlyName;
            CreationTime = creationTime;
            KeyVault = keyVault;
            ApplicationInsights = applicationInsights;
            ContainerRegistry = containerRegistry;
            StorageAccount = storageAccount;
            DiscoveryUrl = discoveryUrl;
            ProvisioningState = provisioningState;
            Encryption = encryption;
            HbiWorkspace = hbiWorkspace;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the immutable id associated with this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceId")]
        public string WorkspaceId { get; private set; }

        /// <summary>
        /// Gets or sets the description of this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the friendly name for this workspace. This name in
        /// mutable
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets the creation time of the machine learning workspace in ISO8601
        /// format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationTime")]
        public System.DateTime? CreationTime { get; private set; }

        /// <summary>
        /// Gets or sets ARM id of the key vault associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyVault")]
        public string KeyVault { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the application insights associated with
        /// this workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationInsights")]
        public string ApplicationInsights { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the container registry associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.containerRegistry")]
        public string ContainerRegistry { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the storage account associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccount")]
        public string StorageAccount { get; set; }

        /// <summary>
        /// Gets or sets url for the discovery service to identify regional
        /// endpoints for machine learning experimentation services
        /// </summary>
        [JsonProperty(PropertyName = "properties.discoveryUrl")]
        public string DiscoveryUrl { get; set; }

        /// <summary>
        /// Gets the current deployment state of workspace resource. The
        /// provisioningState is to indicate states for resource provisioning.
        /// Possible values include: 'Unknown', 'Updating', 'Creating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the encryption settings of Azure ML workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryption")]
        public EncryptionProperty Encryption { get; set; }

        /// <summary>
        /// Gets or sets the flag to signal HBI data in the workspace and
        /// reduce diagnostic data collected by the service
        /// </summary>
        [JsonProperty(PropertyName = "properties.hbiWorkspace")]
        public bool? HbiWorkspace { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Encryption != null)
            {
                Encryption.Validate();
            }
        }
    }
}
