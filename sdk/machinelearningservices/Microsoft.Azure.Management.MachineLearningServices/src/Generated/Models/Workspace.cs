// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An object that represents a machine learning workspace.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Workspace : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        public Workspace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="workspaceId">The immutable id associated with this
        /// workspace.</param>
        /// <param name="description">The description of this
        /// workspace.</param>
        /// <param name="friendlyName">The friendly name for this workspace.
        /// This name in mutable</param>
        /// <param name="keyVault">ARM id of the key vault associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created</param>
        /// <param name="applicationInsights">ARM id of the application
        /// insights associated with this workspace. This cannot be changed
        /// once the workspace has been created</param>
        /// <param name="containerRegistry">ARM id of the container registry
        /// associated with this workspace. This cannot be changed once the
        /// workspace has been created</param>
        /// <param name="storageAccount">ARM id of the storage account
        /// associated with this workspace. This cannot be changed once the
        /// workspace has been created</param>
        /// <param name="discoveryUrl">Url for the discovery service to
        /// identify regional endpoints for machine learning experimentation
        /// services</param>
        /// <param name="provisioningState">The current deployment state of
        /// workspace resource. The provisioningState is to indicate states for
        /// resource provisioning. Possible values include: 'Unknown',
        /// 'Updating', 'Creating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled'</param>
        /// <param name="encryption">The encryption settings of Azure ML
        /// workspace.</param>
        /// <param name="hbiWorkspace">The flag to signal HBI data in the
        /// workspace and reduce diagnostic data collected by the
        /// service</param>
        /// <param name="serviceProvisionedResourceGroup">The name of the
        /// managed resource group created by workspace RP in customer
        /// subscription if the workspace is CMK workspace</param>
        /// <param name="privateLinkCount">Count of private connections in the
        /// workspace</param>
        /// <param name="imageBuildCompute">The compute name for image
        /// build</param>
        /// <param name="allowPublicAccessWhenBehindVnet">The flag to indicate
        /// whether to allow public access when behind VNet.</param>
        /// <param name="privateEndpointConnections">The list of private
        /// endpoint connections in the workspace.</param>
        /// <param name="sharedPrivateLinkResources">The list of shared private
        /// link resources in this workspace.</param>
        /// <param name="notebookInfo">The notebook info of Azure ML
        /// workspace.</param>
        /// <param name="serviceManagedResourcesSettings">The service managed
        /// resource settings.</param>
        /// <param name="primaryUserAssignedIdentity">The user assigned
        /// identity resource id that represents the workspace
        /// identity.</param>
        /// <param name="tenantId">The tenant id associated with this
        /// workspace.</param>
        /// <param name="identity">The identity of the resource.</param>
        /// <param name="location">Specifies the location of the
        /// resource.</param>
        /// <param name="tags">Contains resource tags defined as key/value
        /// pairs.</param>
        /// <param name="sku">The sku of the workspace.</param>
        public Workspace(string id = default(string), string name = default(string), string type = default(string), string workspaceId = default(string), string description = default(string), string friendlyName = default(string), string keyVault = default(string), string applicationInsights = default(string), string containerRegistry = default(string), string storageAccount = default(string), string discoveryUrl = default(string), string provisioningState = default(string), EncryptionProperty encryption = default(EncryptionProperty), bool? hbiWorkspace = default(bool?), string serviceProvisionedResourceGroup = default(string), int? privateLinkCount = default(int?), string imageBuildCompute = default(string), bool? allowPublicAccessWhenBehindVnet = default(bool?), IList<PrivateEndpointConnection> privateEndpointConnections = default(IList<PrivateEndpointConnection>), IList<SharedPrivateLinkResource> sharedPrivateLinkResources = default(IList<SharedPrivateLinkResource>), NotebookResourceInfo notebookInfo = default(NotebookResourceInfo), ServiceManagedResourcesSettings serviceManagedResourcesSettings = default(ServiceManagedResourcesSettings), string primaryUserAssignedIdentity = default(string), string tenantId = default(string), Identity identity = default(Identity), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Sku sku = default(Sku), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            WorkspaceId = workspaceId;
            Description = description;
            FriendlyName = friendlyName;
            KeyVault = keyVault;
            ApplicationInsights = applicationInsights;
            ContainerRegistry = containerRegistry;
            StorageAccount = storageAccount;
            DiscoveryUrl = discoveryUrl;
            ProvisioningState = provisioningState;
            Encryption = encryption;
            HbiWorkspace = hbiWorkspace;
            ServiceProvisionedResourceGroup = serviceProvisionedResourceGroup;
            PrivateLinkCount = privateLinkCount;
            ImageBuildCompute = imageBuildCompute;
            AllowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            PrivateEndpointConnections = privateEndpointConnections;
            SharedPrivateLinkResources = sharedPrivateLinkResources;
            NotebookInfo = notebookInfo;
            ServiceManagedResourcesSettings = serviceManagedResourcesSettings;
            PrimaryUserAssignedIdentity = primaryUserAssignedIdentity;
            TenantId = tenantId;
            Identity = identity;
            Location = location;
            Tags = tags;
            Sku = sku;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the immutable id associated with this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceId")]
        public string WorkspaceId { get; private set; }

        /// <summary>
        /// Gets or sets the description of this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the friendly name for this workspace. This name in
        /// mutable
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the key vault associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyVault")]
        public string KeyVault { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the application insights associated with
        /// this workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationInsights")]
        public string ApplicationInsights { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the container registry associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.containerRegistry")]
        public string ContainerRegistry { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the storage account associated with this
        /// workspace. This cannot be changed once the workspace has been
        /// created
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccount")]
        public string StorageAccount { get; set; }

        /// <summary>
        /// Gets or sets url for the discovery service to identify regional
        /// endpoints for machine learning experimentation services
        /// </summary>
        [JsonProperty(PropertyName = "properties.discoveryUrl")]
        public string DiscoveryUrl { get; set; }

        /// <summary>
        /// Gets the current deployment state of workspace resource. The
        /// provisioningState is to indicate states for resource provisioning.
        /// Possible values include: 'Unknown', 'Updating', 'Creating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the encryption settings of Azure ML workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryption")]
        public EncryptionProperty Encryption { get; set; }

        /// <summary>
        /// Gets or sets the flag to signal HBI data in the workspace and
        /// reduce diagnostic data collected by the service
        /// </summary>
        [JsonProperty(PropertyName = "properties.hbiWorkspace")]
        public bool? HbiWorkspace { get; set; }

        /// <summary>
        /// Gets the name of the managed resource group created by workspace RP
        /// in customer subscription if the workspace is CMK workspace
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProvisionedResourceGroup")]
        public string ServiceProvisionedResourceGroup { get; private set; }

        /// <summary>
        /// Gets count of private connections in the workspace
        /// </summary>
        [JsonProperty(PropertyName = "properties.privateLinkCount")]
        public int? PrivateLinkCount { get; private set; }

        /// <summary>
        /// Gets or sets the compute name for image build
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageBuildCompute")]
        public string ImageBuildCompute { get; set; }

        /// <summary>
        /// Gets or sets the flag to indicate whether to allow public access
        /// when behind VNet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.allowPublicAccessWhenBehindVnet")]
        public bool? AllowPublicAccessWhenBehindVnet { get; set; }

        /// <summary>
        /// Gets the list of private endpoint connections in the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.privateEndpointConnections")]
        public IList<PrivateEndpointConnection> PrivateEndpointConnections { get; private set; }

        /// <summary>
        /// Gets or sets the list of shared private link resources in this
        /// workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sharedPrivateLinkResources")]
        public IList<SharedPrivateLinkResource> SharedPrivateLinkResources { get; set; }

        /// <summary>
        /// Gets the notebook info of Azure ML workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.notebookInfo")]
        public NotebookResourceInfo NotebookInfo { get; private set; }

        /// <summary>
        /// Gets or sets the service managed resource settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceManagedResourcesSettings")]
        public ServiceManagedResourcesSettings ServiceManagedResourcesSettings { get; set; }

        /// <summary>
        /// Gets or sets the user assigned identity resource id that represents
        /// the workspace identity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.primaryUserAssignedIdentity")]
        public string PrimaryUserAssignedIdentity { get; set; }

        /// <summary>
        /// Gets the tenant id associated with this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; private set; }

        /// <summary>
        /// Gets or sets the identity of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }

        /// <summary>
        /// Gets or sets specifies the location of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets contains resource tags defined as key/value pairs.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the sku of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Encryption != null)
            {
                Encryption.Validate();
            }
            if (PrivateEndpointConnections != null)
            {
                foreach (var element in PrivateEndpointConnections)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
