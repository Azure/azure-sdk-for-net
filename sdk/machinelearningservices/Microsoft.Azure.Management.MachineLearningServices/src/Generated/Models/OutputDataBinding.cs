// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OutputDataBinding
    {
        /// <summary>
        /// Initializes a new instance of the OutputDataBinding class.
        /// </summary>
        public OutputDataBinding()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OutputDataBinding class.
        /// </summary>
        /// <param name="datastoreId">ARM resource ID of the datastore where
        /// the data output will be stored.</param>
        /// <param name="mode">Mechanism for data movement to datastore.
        /// Possible values include: 'Mount', 'Download', 'Upload'</param>
        /// <param name="pathOnCompute">Location of data inside the container
        /// process.</param>
        /// <param name="pathOnDatastore">Path within the datastore to the
        /// data.</param>
        public OutputDataBinding(string datastoreId = default(string), string mode = default(string), string pathOnCompute = default(string), string pathOnDatastore = default(string))
        {
            DatastoreId = datastoreId;
            Mode = mode;
            PathOnCompute = pathOnCompute;
            PathOnDatastore = pathOnDatastore;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ARM resource ID of the datastore where the data output
        /// will be stored.
        /// </summary>
        [JsonProperty(PropertyName = "datastoreId")]
        public string DatastoreId { get; set; }

        /// <summary>
        /// Gets or sets mechanism for data movement to datastore. Possible
        /// values include: 'Mount', 'Download', 'Upload'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Gets or sets location of data inside the container process.
        /// </summary>
        [JsonProperty(PropertyName = "pathOnCompute")]
        public string PathOnCompute { get; set; }

        /// <summary>
        /// Gets or sets path within the datastore to the data.
        /// </summary>
        [JsonProperty(PropertyName = "pathOnDatastore")]
        public string PathOnDatastore { get; set; }

    }
}
