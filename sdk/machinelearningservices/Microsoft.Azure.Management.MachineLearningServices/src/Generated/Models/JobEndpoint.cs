// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Job endpoint definition
    /// </summary>
    public partial class JobEndpoint
    {
        /// <summary>
        /// Initializes a new instance of the JobEndpoint class.
        /// </summary>
        public JobEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobEndpoint class.
        /// </summary>
        /// <param name="endpoint">Url for endpoint.</param>
        /// <param name="jobEndpointType">Endpoint type.</param>
        /// <param name="port">Port for endpoint.</param>
        public JobEndpoint(string endpoint = default(string), string jobEndpointType = default(string), int? port = default(int?), IDictionary<string, string> properties = default(IDictionary<string, string>))
        {
            Endpoint = endpoint;
            JobEndpointType = jobEndpointType;
            Port = port;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets url for endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "endpoint")]
        public string Endpoint { get; set; }

        /// <summary>
        /// Gets or sets endpoint type.
        /// </summary>
        [JsonProperty(PropertyName = "jobEndpointType")]
        public string JobEndpointType { get; set; }

        /// <summary>
        /// Gets or sets port for endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int? Port { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

    }
}
