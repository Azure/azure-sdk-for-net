// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for OnlineEndpointsOperations.
    /// </summary>
    public static partial class OnlineEndpointsOperationsExtensions
    {
            /// <summary>
            /// List Online Endpoints.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='name'>
            /// Name of the endpoint.
            /// </param>
            /// <param name='count'>
            /// Number of endpoints to be retrieved in a page of results.
            /// </param>
            /// <param name='computeType'>
            /// EndpointComputeType to be filtered by. Possible values include: 'Managed',
            /// 'K8S', 'AzureMLCompute'
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='tags'>
            /// A set of tags with which to filter the returned models. It is a comma
            /// separated string of tags key or tags key=value. Example:
            /// tagKey1,tagKey2,tagKey3=value3 .
            /// </param>
            /// <param name='properties'>
            /// A set of properties with which to filter the returned models. It is a comma
            /// separated string of properties key and/or properties key=value Example:
            /// propKey1,propKey2,propKey3=value3 .
            /// </param>
            /// <param name='orderBy'>
            /// The option to order the response. Possible values include: 'CreatedAtDesc',
            /// 'CreatedAtAsc', 'UpdatedAtDesc', 'UpdatedAtAsc'
            /// </param>
            public static IPage<OnlineEndpointTrackedResource> List(this IOnlineEndpointsOperations operations, string resourceGroupName, string workspaceName, string name = default(string), int? count = default(int?), string computeType = default(string), string skip = default(string), string tags = default(string), string properties = default(string), string orderBy = default(string))
            {
                return operations.ListAsync(resourceGroupName, workspaceName, name, count, computeType, skip, tags, properties, orderBy).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List Online Endpoints.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='name'>
            /// Name of the endpoint.
            /// </param>
            /// <param name='count'>
            /// Number of endpoints to be retrieved in a page of results.
            /// </param>
            /// <param name='computeType'>
            /// EndpointComputeType to be filtered by. Possible values include: 'Managed',
            /// 'K8S', 'AzureMLCompute'
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='tags'>
            /// A set of tags with which to filter the returned models. It is a comma
            /// separated string of tags key or tags key=value. Example:
            /// tagKey1,tagKey2,tagKey3=value3 .
            /// </param>
            /// <param name='properties'>
            /// A set of properties with which to filter the returned models. It is a comma
            /// separated string of properties key and/or properties key=value Example:
            /// propKey1,propKey2,propKey3=value3 .
            /// </param>
            /// <param name='orderBy'>
            /// The option to order the response. Possible values include: 'CreatedAtDesc',
            /// 'CreatedAtAsc', 'UpdatedAtDesc', 'UpdatedAtAsc'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<OnlineEndpointTrackedResource>> ListAsync(this IOnlineEndpointsOperations operations, string resourceGroupName, string workspaceName, string name = default(string), int? count = default(int?), string computeType = default(string), string skip = default(string), string tags = default(string), string properties = default(string), string orderBy = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, name, count, computeType, skip, tags, properties, orderBy, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static OnlineEndpointsDeleteHeaders Delete(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName)
            {
                return operations.DeleteAsync(endpointName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointsDeleteHeaders> DeleteAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Get Online Endpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static OnlineEndpointTrackedResource Get(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName)
            {
                return operations.GetAsync(endpointName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Online Endpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointTrackedResource> GetAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            public static OnlineEndpointTrackedResource Update(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, PartialOnlineEndpointPartialTrackedResource body)
            {
                return operations.UpdateAsync(endpointName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointTrackedResource> UpdateAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, PartialOnlineEndpointPartialTrackedResource body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            public static OnlineEndpointTrackedResource CreateOrUpdate(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, OnlineEndpointTrackedResource body)
            {
                return operations.CreateOrUpdateAsync(endpointName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointTrackedResource> CreateOrUpdateAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, OnlineEndpointTrackedResource body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List EndpointAuthKeys for an Endpoint using Key-based authentication.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static EndpointAuthKeys ListKeys(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName)
            {
                return operations.ListKeysAsync(endpointName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List EndpointAuthKeys for an Endpoint using Key-based authentication.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EndpointAuthKeys> ListKeysAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListKeysWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication
            /// (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// RegenerateKeys request .
            /// </param>
            public static OnlineEndpointsRegenerateKeysHeaders RegenerateKeys(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, RegenerateEndpointKeysRequest body)
            {
                return operations.RegenerateKeysAsync(endpointName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication
            /// (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// RegenerateKeys request .
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointsRegenerateKeysHeaders> RegenerateKeysAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, RegenerateEndpointKeysRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RegenerateKeysWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Retrieve a valid AAD token for an Endpoint using AMLToken-based
            /// authentication.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static EndpointAuthToken GetToken(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName)
            {
                return operations.GetTokenAsync(endpointName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a valid AAD token for an Endpoint using AMLToken-based
            /// authentication.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EndpointAuthToken> GetTokenAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTokenWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static OnlineEndpointsDeleteHeaders BeginDelete(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName)
            {
                return operations.BeginDeleteAsync(endpointName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointsDeleteHeaders> BeginDeleteAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            public static OnlineEndpointTrackedResource BeginUpdate(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, PartialOnlineEndpointPartialTrackedResource body)
            {
                return operations.BeginUpdateAsync(endpointName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointTrackedResource> BeginUpdateAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, PartialOnlineEndpointPartialTrackedResource body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            public static OnlineEndpointTrackedResource BeginCreateOrUpdate(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, OnlineEndpointTrackedResource body)
            {
                return operations.BeginCreateOrUpdateAsync(endpointName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update Online Endpoint (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Online Endpoint entity to apply during operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointTrackedResource> BeginCreateOrUpdateAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, OnlineEndpointTrackedResource body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication
            /// (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// RegenerateKeys request .
            /// </param>
            public static OnlineEndpointsRegenerateKeysHeaders BeginRegenerateKeys(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, RegenerateEndpointKeysRequest body)
            {
                return operations.BeginRegenerateKeysAsync(endpointName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication
            /// (asynchronous).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Online Endpoint name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// RegenerateKeys request .
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OnlineEndpointsRegenerateKeysHeaders> BeginRegenerateKeysAsync(this IOnlineEndpointsOperations operations, string endpointName, string resourceGroupName, string workspaceName, RegenerateEndpointKeysRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginRegenerateKeysWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// List Online Endpoints.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<OnlineEndpointTrackedResource> ListNext(this IOnlineEndpointsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List Online Endpoints.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<OnlineEndpointTrackedResource>> ListNextAsync(this IOnlineEndpointsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
