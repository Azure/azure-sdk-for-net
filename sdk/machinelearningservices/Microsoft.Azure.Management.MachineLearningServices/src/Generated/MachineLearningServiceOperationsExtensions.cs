// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for MachineLearningServiceOperations.
    /// </summary>
    public static partial class MachineLearningServiceOperationsExtensions
    {
            /// <summary>
            /// Gets services in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='modelId'>
            /// The Model Id.
            /// </param>
            /// <param name='modelName'>
            /// The Model name.
            /// </param>
            /// <param name='tag'>
            /// The object tag.
            /// </param>
            /// <param name='tags'>
            /// A set of tags with which to filter the returned services. It is a comma
            /// separated string of tags key or tags key=value Example:
            /// tagKey1,tagKey2,tagKey3=value3 .
            /// </param>
            /// <param name='properties'>
            /// A set of properties with which to filter the returned services. It is a
            /// comma separated string of properties key and/or properties key=value
            /// Example: propKey1,propKey2,propKey3=value3 .
            /// </param>
            /// <param name='runId'>
            /// runId for model associated with service.
            /// </param>
            /// <param name='expand'>
            /// Set to True to include Model details.
            /// </param>
            /// <param name='orderby'>
            /// The option to order the response. Possible values include: 'CreatedAtDesc',
            /// 'CreatedAtAsc', 'UpdatedAtDesc', 'UpdatedAtAsc'
            /// </param>
            public static IPage<ServiceResource> ListByWorkspace(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string skip = default(string), string modelId = default(string), string modelName = default(string), string tag = default(string), string tags = default(string), string properties = default(string), string runId = default(string), bool? expand = default(bool?), string orderby = default(string))
            {
                return operations.ListByWorkspaceAsync(resourceGroupName, workspaceName, skip, modelId, modelName, tag, tags, properties, runId, expand, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets services in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='modelId'>
            /// The Model Id.
            /// </param>
            /// <param name='modelName'>
            /// The Model name.
            /// </param>
            /// <param name='tag'>
            /// The object tag.
            /// </param>
            /// <param name='tags'>
            /// A set of tags with which to filter the returned services. It is a comma
            /// separated string of tags key or tags key=value Example:
            /// tagKey1,tagKey2,tagKey3=value3 .
            /// </param>
            /// <param name='properties'>
            /// A set of properties with which to filter the returned services. It is a
            /// comma separated string of properties key and/or properties key=value
            /// Example: propKey1,propKey2,propKey3=value3 .
            /// </param>
            /// <param name='runId'>
            /// runId for model associated with service.
            /// </param>
            /// <param name='expand'>
            /// Set to True to include Model details.
            /// </param>
            /// <param name='orderby'>
            /// The option to order the response. Possible values include: 'CreatedAtDesc',
            /// 'CreatedAtAsc', 'UpdatedAtDesc', 'UpdatedAtAsc'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServiceResource>> ListByWorkspaceAsync(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string skip = default(string), string modelId = default(string), string modelName = default(string), string tag = default(string), string tags = default(string), string properties = default(string), string runId = default(string), bool? expand = default(bool?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByWorkspaceWithHttpMessagesAsync(resourceGroupName, workspaceName, skip, modelId, modelName, tag, tags, properties, runId, expand, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a Service by name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='expand'>
            /// Set to True to include Model details.
            /// </param>
            public static ServiceResource Get(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, bool? expand = false)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, serviceName, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a Service by name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='expand'>
            /// Set to True to include Model details.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceResource> GetAsync(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, bool? expand = false, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, serviceName, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a specific Service..
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            public static void Delete(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, serviceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a specific Service..
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, serviceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Creates or updates service. This call will update a service if it exists.
            /// This is a nonrecoverable operation. If your intent is to create a new
            /// service, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='properties'>
            /// The payload that is used to create or update the Service.
            /// </param>
            public static ServiceResource CreateOrUpdate(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, CreateServiceRequest properties)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, serviceName, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates service. This call will update a service if it exists.
            /// This is a nonrecoverable operation. If your intent is to create a new
            /// service, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='properties'>
            /// The payload that is used to create or update the Service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceResource> CreateOrUpdateAsync(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, CreateServiceRequest properties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, serviceName, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates service. This call will update a service if it exists.
            /// This is a nonrecoverable operation. If your intent is to create a new
            /// service, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='properties'>
            /// The payload that is used to create or update the Service.
            /// </param>
            public static ServiceResource BeginCreateOrUpdate(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, CreateServiceRequest properties)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, workspaceName, serviceName, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates service. This call will update a service if it exists.
            /// This is a nonrecoverable operation. If your intent is to create a new
            /// service, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='serviceName'>
            /// Name of the Azure Machine Learning service.
            /// </param>
            /// <param name='properties'>
            /// The payload that is used to create or update the Service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceResource> BeginCreateOrUpdateAsync(this IMachineLearningServiceOperations operations, string resourceGroupName, string workspaceName, string serviceName, CreateServiceRequest properties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, serviceName, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets services in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ServiceResource> ListByWorkspaceNext(this IMachineLearningServiceOperations operations, string nextPageLink)
            {
                return operations.ListByWorkspaceNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets services in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServiceResource>> ListByWorkspaceNextAsync(this IMachineLearningServiceOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByWorkspaceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
