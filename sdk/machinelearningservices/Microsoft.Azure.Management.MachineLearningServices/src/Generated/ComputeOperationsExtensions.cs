// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ComputeOperations.
    /// </summary>
    public static partial class ComputeOperationsExtensions
    {
            /// <summary>
            /// Gets computes in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            public static IPage<ComputeResource> List(this IComputeOperations operations, string resourceGroupName, string workspaceName, string skip = default(string))
            {
                return operations.ListAsync(resourceGroupName, workspaceName, skip).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets computes in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ComputeResource>> ListAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string skip = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, skip, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets compute definition by its name. Any secrets (storage keys, service
            /// credentials, etc) are not returned - use 'keys' nested resource to get
            /// them.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static ComputeResource Get(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets compute definition by its name. Any secrets (storage keys, service
            /// credentials, etc) are not returned - use 'keys' nested resource to get
            /// them.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeResource> GetAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation. If your intent is to create a
            /// new compute, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Payload with Machine Learning compute definition.
            /// </param>
            public static ComputeResource CreateOrUpdate(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ComputeResource parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, computeName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation. If your intent is to create a
            /// new compute, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Payload with Machine Learning compute definition.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeResource> CreateOrUpdateAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ComputeResource parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates properties of a compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Additional parameters for cluster update.
            /// </param>
            public static ComputeResource Update(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ClusterUpdateParameters parameters)
            {
                return operations.UpdateAsync(resourceGroupName, workspaceName, computeName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates properties of a compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Additional parameters for cluster update.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeResource> UpdateAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ClusterUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes specified Machine Learning compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='underlyingResourceAction'>
            /// Delete the underlying compute if 'Delete', or detach the underlying compute
            /// from workspace if 'Detach'. Possible values include: 'Delete', 'Detach'
            /// </param>
            public static ComputeDeleteHeaders Delete(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, string underlyingResourceAction)
            {
                return operations.DeleteAsync(resourceGroupName, workspaceName, computeName, underlyingResourceAction).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes specified Machine Learning compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='underlyingResourceAction'>
            /// Delete the underlying compute if 'Delete', or detach the underlying compute
            /// from workspace if 'Detach'. Possible values include: 'Delete', 'Detach'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeDeleteHeaders> DeleteAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, string underlyingResourceAction, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, underlyingResourceAction, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Get the details (e.g IP address, port etc) of all the compute nodes in the
            /// compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static IPage<AmlComputeNodeInformation> ListNodes(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                return operations.ListNodesAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the details (e.g IP address, port etc) of all the compute nodes in the
            /// compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AmlComputeNodeInformation>> ListNodesAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNodesWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets secrets related to Machine Learning compute (storage keys, service
            /// credentials, etc).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static ComputeSecrets ListKeys(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                return operations.ListKeysAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets secrets related to Machine Learning compute (storage keys, service
            /// credentials, etc).
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeSecrets> ListKeysAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListKeysWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Posts a start action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static void Start(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                operations.StartAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts a start action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task StartAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.StartWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Posts a stop action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static void Stop(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                operations.StopAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts a stop action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task StopAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.StopWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Posts a restart action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static void Restart(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                operations.RestartAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts a restart action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task RestartAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.RestartWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates schedules of a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// The object for updating schedules of specified ComputeInstance.
            /// </param>
            public static void UpdateSchedules(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ComputeSchedules parameters = default(ComputeSchedules))
            {
                operations.UpdateSchedulesAsync(resourceGroupName, workspaceName, computeName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates schedules of a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// The object for updating schedules of specified ComputeInstance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateSchedulesAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ComputeSchedules parameters = default(ComputeSchedules), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateSchedulesWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, parameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Creates or updates compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation. If your intent is to create a
            /// new compute, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Payload with Machine Learning compute definition.
            /// </param>
            public static ComputeResource BeginCreateOrUpdate(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ComputeResource parameters)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, workspaceName, computeName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation. If your intent is to create a
            /// new compute, do a GET first to verify that it does not exist yet.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Payload with Machine Learning compute definition.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeResource> BeginCreateOrUpdateAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ComputeResource parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates properties of a compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Additional parameters for cluster update.
            /// </param>
            public static ComputeResource BeginUpdate(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ClusterUpdateParameters parameters)
            {
                return operations.BeginUpdateAsync(resourceGroupName, workspaceName, computeName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates properties of a compute. This call will overwrite a compute if it
            /// exists. This is a nonrecoverable operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='parameters'>
            /// Additional parameters for cluster update.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeResource> BeginUpdateAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, ClusterUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes specified Machine Learning compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='underlyingResourceAction'>
            /// Delete the underlying compute if 'Delete', or detach the underlying compute
            /// from workspace if 'Detach'. Possible values include: 'Delete', 'Detach'
            /// </param>
            public static ComputeDeleteHeaders BeginDelete(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, string underlyingResourceAction)
            {
                return operations.BeginDeleteAsync(resourceGroupName, workspaceName, computeName, underlyingResourceAction).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes specified Machine Learning compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='underlyingResourceAction'>
            /// Delete the underlying compute if 'Delete', or detach the underlying compute
            /// from workspace if 'Detach'. Possible values include: 'Delete', 'Detach'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ComputeDeleteHeaders> BeginDeleteAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, string underlyingResourceAction, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, underlyingResourceAction, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Posts a start action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static void BeginStart(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                operations.BeginStartAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts a start action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginStartAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginStartWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Posts a stop action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            public static void BeginStop(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName)
            {
                operations.BeginStopAsync(resourceGroupName, workspaceName, computeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts a stop action to a compute instance
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='computeName'>
            /// Name of the Azure Machine Learning compute.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginStopAsync(this IComputeOperations operations, string resourceGroupName, string workspaceName, string computeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginStopWithHttpMessagesAsync(resourceGroupName, workspaceName, computeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets computes in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ComputeResource> ListNext(this IComputeOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets computes in specified workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ComputeResource>> ListNextAsync(this IComputeOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the details (e.g IP address, port etc) of all the compute nodes in the
            /// compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<AmlComputeNodeInformation> ListNodesNext(this IComputeOperations operations, string nextPageLink)
            {
                return operations.ListNodesNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the details (e.g IP address, port etc) of all the compute nodes in the
            /// compute.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AmlComputeNodeInformation>> ListNodesNextAsync(this IComputeOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNodesNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
