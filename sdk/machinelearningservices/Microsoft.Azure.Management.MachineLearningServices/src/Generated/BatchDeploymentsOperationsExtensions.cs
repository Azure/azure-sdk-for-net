// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BatchDeploymentsOperations.
    /// </summary>
    public static partial class BatchDeploymentsOperationsExtensions
    {
            /// <summary>
            /// Lists Batch inference deployments in the workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Endpoint name
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='orderBy'>
            /// Ordering of list.
            /// </param>
            /// <param name='top'>
            /// Top of list.
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            public static IPage<BatchDeploymentTrackedResource> List(this IBatchDeploymentsOperations operations, string endpointName, string resourceGroupName, string workspaceName, string orderBy = default(string), int? top = default(int?), string skip = default(string))
            {
                return operations.ListAsync(endpointName, resourceGroupName, workspaceName, orderBy, top, skip).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists Batch inference deployments in the workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Endpoint name
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='orderBy'>
            /// Ordering of list.
            /// </param>
            /// <param name='top'>
            /// Top of list.
            /// </param>
            /// <param name='skip'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BatchDeploymentTrackedResource>> ListAsync(this IBatchDeploymentsOperations operations, string endpointName, string resourceGroupName, string workspaceName, string orderBy = default(string), int? top = default(int?), string skip = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(endpointName, resourceGroupName, workspaceName, orderBy, top, skip, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Batch Inference deployment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// Inference deployment identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static void Delete(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName)
            {
                operations.DeleteAsync(endpointName, deploymentName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Batch Inference deployment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// Inference deployment identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(endpointName, deploymentName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets a batch inference deployment by id.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// The identifier for the Batch deployments.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static BatchDeploymentTrackedResource Get(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName)
            {
                return operations.GetAsync(endpointName, deploymentName, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a batch inference deployment by id.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// The identifier for the Batch deployments.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BatchDeploymentTrackedResource> GetAsync(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(endpointName, deploymentName, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update a batch inference deployment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Inference endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// The identifier for the Batch inference deployment.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Batch inference deployment definition object.
            /// </param>
            public static BatchDeploymentTrackedResource Update(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName, PartialBatchDeploymentPartialTrackedResource body)
            {
                return operations.UpdateAsync(endpointName, deploymentName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a batch inference deployment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Inference endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// The identifier for the Batch inference deployment.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Batch inference deployment definition object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BatchDeploymentTrackedResource> UpdateAsync(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName, PartialBatchDeploymentPartialTrackedResource body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(endpointName, deploymentName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates/updates a batch inference deployment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Inference endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// The identifier for the Batch inference deployment.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Batch inference deployment definition object.
            /// </param>
            public static BatchDeploymentTrackedResource CreateOrUpdate(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName, BatchDeploymentTrackedResource body)
            {
                return operations.CreateOrUpdateAsync(endpointName, deploymentName, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates/updates a batch inference deployment.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='endpointName'>
            /// Inference endpoint name
            /// </param>
            /// <param name='deploymentName'>
            /// The identifier for the Batch inference deployment.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='body'>
            /// Batch inference deployment definition object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BatchDeploymentTrackedResource> CreateOrUpdateAsync(this IBatchDeploymentsOperations operations, string endpointName, string deploymentName, string resourceGroupName, string workspaceName, BatchDeploymentTrackedResource body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(endpointName, deploymentName, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists Batch inference deployments in the workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BatchDeploymentTrackedResource> ListNext(this IBatchDeploymentsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists Batch inference deployments in the workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BatchDeploymentTrackedResource>> ListNextAsync(this IBatchDeploymentsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
