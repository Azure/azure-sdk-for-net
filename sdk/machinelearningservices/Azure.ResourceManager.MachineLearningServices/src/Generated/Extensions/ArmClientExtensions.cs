// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager;

namespace Azure.ResourceManager.MachineLearningServices
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Workspace
        /// <summary> Gets an object representing a Workspace along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Workspace" /> object. </returns>
        public static Workspace GetWorkspace(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Workspace(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ComputeResource
        /// <summary> Gets an object representing a ComputeResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComputeResource" /> object. </returns>
        public static ComputeResource GetComputeResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ComputeResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PrivateEndpointConnection
        /// <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnection" /> object. </returns>
        public static PrivateEndpointConnection GetPrivateEndpointConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateEndpointConnection(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region WorkspaceConnection
        /// <summary> Gets an object representing a WorkspaceConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceConnection" /> object. </returns>
        public static WorkspaceConnection GetWorkspaceConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new WorkspaceConnection(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BatchEndpointTrackedResource
        /// <summary> Gets an object representing a BatchEndpointTrackedResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BatchEndpointTrackedResource" /> object. </returns>
        public static BatchEndpointTrackedResource GetBatchEndpointTrackedResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BatchEndpointTrackedResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BatchDeploymentTrackedResource
        /// <summary> Gets an object representing a BatchDeploymentTrackedResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BatchDeploymentTrackedResource" /> object. </returns>
        public static BatchDeploymentTrackedResource GetBatchDeploymentTrackedResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BatchDeploymentTrackedResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CodeContainerResource
        /// <summary> Gets an object representing a CodeContainerResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CodeContainerResource" /> object. </returns>
        public static CodeContainerResource GetCodeContainerResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CodeContainerResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CodeVersionResource
        /// <summary> Gets an object representing a CodeVersionResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CodeVersionResource" /> object. </returns>
        public static CodeVersionResource GetCodeVersionResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CodeVersionResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ComponentContainerResource
        /// <summary> Gets an object representing a ComponentContainerResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentContainerResource" /> object. </returns>
        public static ComponentContainerResource GetComponentContainerResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ComponentContainerResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ComponentVersionResource
        /// <summary> Gets an object representing a ComponentVersionResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentVersionResource" /> object. </returns>
        public static ComponentVersionResource GetComponentVersionResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ComponentVersionResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DatasetContainerResource
        /// <summary> Gets an object representing a DatasetContainerResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatasetContainerResource" /> object. </returns>
        public static DatasetContainerResource GetDatasetContainerResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DatasetContainerResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DatasetVersionResource
        /// <summary> Gets an object representing a DatasetVersionResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatasetVersionResource" /> object. </returns>
        public static DatasetVersionResource GetDatasetVersionResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DatasetVersionResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DatastoreResource
        /// <summary> Gets an object representing a DatastoreResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatastoreResource" /> object. </returns>
        public static DatastoreResource GetDatastoreResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DatastoreResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EnvironmentContainerResource
        /// <summary> Gets an object representing a EnvironmentContainerResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EnvironmentContainerResource" /> object. </returns>
        public static EnvironmentContainerResource GetEnvironmentContainerResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EnvironmentContainerResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EnvironmentVersionResource
        /// <summary> Gets an object representing a EnvironmentVersionResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EnvironmentVersionResource" /> object. </returns>
        public static EnvironmentVersionResource GetEnvironmentVersionResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EnvironmentVersionResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region JobBaseResource
        /// <summary> Gets an object representing a JobBaseResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="JobBaseResource" /> object. </returns>
        public static JobBaseResource GetJobBaseResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new JobBaseResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ModelContainerResource
        /// <summary> Gets an object representing a ModelContainerResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ModelContainerResource" /> object. </returns>
        public static ModelContainerResource GetModelContainerResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ModelContainerResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ModelVersionResource
        /// <summary> Gets an object representing a ModelVersionResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ModelVersionResource" /> object. </returns>
        public static ModelVersionResource GetModelVersionResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ModelVersionResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region OnlineEndpointTrackedResource
        /// <summary> Gets an object representing a OnlineEndpointTrackedResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnlineEndpointTrackedResource" /> object. </returns>
        public static OnlineEndpointTrackedResource GetOnlineEndpointTrackedResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new OnlineEndpointTrackedResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region OnlineDeploymentTrackedResource
        /// <summary> Gets an object representing a OnlineDeploymentTrackedResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnlineDeploymentTrackedResource" /> object. </returns>
        public static OnlineDeploymentTrackedResource GetOnlineDeploymentTrackedResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new OnlineDeploymentTrackedResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}
