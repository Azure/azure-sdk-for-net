// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    internal static class DeploymentProvisioningStateExtensions
    {
        public static string ToSerialString(this DeploymentProvisioningState value) => value switch
        {
            DeploymentProvisioningState.Creating => "Creating",
            DeploymentProvisioningState.Deleting => "Deleting",
            DeploymentProvisioningState.Scaling => "Scaling",
            DeploymentProvisioningState.Updating => "Updating",
            DeploymentProvisioningState.Succeeded => "Succeeded",
            DeploymentProvisioningState.Failed => "Failed",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DeploymentProvisioningState value.")
        };

        public static DeploymentProvisioningState ToDeploymentProvisioningState(this string value)
        {
            if (string.Equals(value, "Creating", StringComparison.InvariantCultureIgnoreCase)) return DeploymentProvisioningState.Creating;
            if (string.Equals(value, "Deleting", StringComparison.InvariantCultureIgnoreCase)) return DeploymentProvisioningState.Deleting;
            if (string.Equals(value, "Scaling", StringComparison.InvariantCultureIgnoreCase)) return DeploymentProvisioningState.Scaling;
            if (string.Equals(value, "Updating", StringComparison.InvariantCultureIgnoreCase)) return DeploymentProvisioningState.Updating;
            if (string.Equals(value, "Succeeded", StringComparison.InvariantCultureIgnoreCase)) return DeploymentProvisioningState.Succeeded;
            if (string.Equals(value, "Failed", StringComparison.InvariantCultureIgnoreCase)) return DeploymentProvisioningState.Failed;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DeploymentProvisioningState value.");
        }
    }
}
