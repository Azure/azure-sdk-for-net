// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary>
    /// Data Transfer Object (DTO) for an Execution Environment Specification. Name and
    /// 
    /// version should default to the AzureML-Minimal environment version tested with the
    /// 
    /// current SDK client version as this is a main use-case.
    /// 
    /// &lt;see href=&quot;https://repo2docker.readthedocs.io/en/latest/specification.html&quot; /&gt;.
    /// </summary>
    public partial class EnvironmentSpecificationVersion
    {
        /// <summary> Initializes a new instance of EnvironmentSpecificationVersion. </summary>
        public EnvironmentSpecificationVersion()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
            Properties = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of EnvironmentSpecificationVersion. </summary>
        /// <param name="type">
        /// Environment specification is either user managed or curated by the Azure ML service
        /// 
        /// &lt;see href=&quot;https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments&quot; /&gt;.
        /// </param>
        /// <param name="docker"> Class to represent configuration settings for Docker. </param>
        /// <param name="condaFile">
        /// Standard configuration file used by conda that lets you install any kind of package, including Python, R, and C/C++ packages
        /// 
        /// &lt;see href=&quot;https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment&quot; /&gt;.
        /// </param>
        /// <param name="datastoreId"> The asset datastoreId. </param>
        /// <param name="assetPath"> Details of an AssetUri. </param>
        /// <param name="description"> The asset description text. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        internal EnvironmentSpecificationVersion(EnvironmentSpecificationType? type, DockerSpecification docker, string condaFile, string datastoreId, AssetPath assetPath, string description, IDictionary<string, string> tags, IDictionary<string, string> properties)
        {
            Type = type;
            Docker = docker;
            CondaFile = condaFile;
            DatastoreId = datastoreId;
            AssetPath = assetPath;
            Description = description;
            Tags = tags;
            Properties = properties;
        }

        /// <summary>
        /// Environment specification is either user managed or curated by the Azure ML service
        /// 
        /// &lt;see href=&quot;https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments&quot; /&gt;.
        /// </summary>
        public EnvironmentSpecificationType? Type { get; }
        /// <summary> Class to represent configuration settings for Docker. </summary>
        public DockerSpecification Docker { get; set; }
        /// <summary>
        /// Standard configuration file used by conda that lets you install any kind of package, including Python, R, and C/C++ packages
        /// 
        /// &lt;see href=&quot;https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment&quot; /&gt;.
        /// </summary>
        public string CondaFile { get; set; }
        /// <summary> The asset datastoreId. </summary>
        public string DatastoreId { get; set; }
        /// <summary> Details of an AssetUri. </summary>
        public AssetPath AssetPath { get; set; }
        /// <summary> The asset description text. </summary>
        public string Description { get; set; }
        /// <summary> Tag dictionary. Tags can be added, removed, and updated. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The asset property dictionary. </summary>
        public IDictionary<string, string> Properties { get; }
    }
}
