// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> The DeploymentConfigurationBase. </summary>
    public partial class DeploymentConfigurationBase
    {
        /// <summary> Initializes a new instance of DeploymentConfigurationBase. </summary>
        public DeploymentConfigurationBase()
        {
        }

        /// <summary> Initializes a new instance of DeploymentConfigurationBase. </summary>
        /// <param name="endpointComputeType"> . </param>
        /// <param name="appInsightsEnabled"> . </param>
        /// <param name="maxConcurrentRequestsPerInstance"> . </param>
        /// <param name="maxQueueWaitMs"> . </param>
        /// <param name="scoringTimeoutMs"> . </param>
        /// <param name="containerResourceRequirements"> The resource requirements for the container (cpu and memory). </param>
        /// <param name="livenessProbeRequirements"> The liveness probe requirements. </param>
        internal DeploymentConfigurationBase(EndpointComputeType endpointComputeType, bool? appInsightsEnabled, int? maxConcurrentRequestsPerInstance, int? maxQueueWaitMs, int? scoringTimeoutMs, ContainerResourceRequirements containerResourceRequirements, LivenessProbeRequirements livenessProbeRequirements)
        {
            EndpointComputeType = endpointComputeType;
            AppInsightsEnabled = appInsightsEnabled;
            MaxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
            MaxQueueWaitMs = maxQueueWaitMs;
            ScoringTimeoutMs = scoringTimeoutMs;
            ContainerResourceRequirements = containerResourceRequirements;
            LivenessProbeRequirements = livenessProbeRequirements;
        }

        internal EndpointComputeType EndpointComputeType { get; set; }
        public bool? AppInsightsEnabled { get; set; }
        public int? MaxConcurrentRequestsPerInstance { get; set; }
        public int? MaxQueueWaitMs { get; set; }
        public int? ScoringTimeoutMs { get; set; }
        /// <summary> The resource requirements for the container (cpu and memory). </summary>
        public ContainerResourceRequirements ContainerResourceRequirements { get; set; }
        /// <summary> The liveness probe requirements. </summary>
        public LivenessProbeRequirements LivenessProbeRequirements { get; set; }
    }
}
