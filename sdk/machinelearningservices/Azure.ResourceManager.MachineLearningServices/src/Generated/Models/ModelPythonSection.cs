// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> The ModelPythonSection. </summary>
    public partial class ModelPythonSection
    {
        /// <summary> Initializes a new instance of ModelPythonSection. </summary>
        public ModelPythonSection()
        {
        }

        /// <summary> Initializes a new instance of ModelPythonSection. </summary>
        /// <param name="interpreterPath"> The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script. </param>
        /// <param name="userManagedDependencies"> True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification. </param>
        /// <param name="condaDependencies"> A JObject containing Conda dependencies. </param>
        /// <param name="baseCondaEnvironment"> . </param>
        internal ModelPythonSection(string interpreterPath, bool? userManagedDependencies, object condaDependencies, string baseCondaEnvironment)
        {
            InterpreterPath = interpreterPath;
            UserManagedDependencies = userManagedDependencies;
            CondaDependencies = condaDependencies;
            BaseCondaEnvironment = baseCondaEnvironment;
        }

        /// <summary> The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script. </summary>
        public string InterpreterPath { get; set; }
        /// <summary> True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification. </summary>
        public bool? UserManagedDependencies { get; set; }
        /// <summary> A JObject containing Conda dependencies. </summary>
        public object CondaDependencies { get; set; }
        public string BaseCondaEnvironment { get; set; }
    }
}
