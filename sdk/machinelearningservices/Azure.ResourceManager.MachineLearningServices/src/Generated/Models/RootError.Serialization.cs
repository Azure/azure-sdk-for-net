// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class RootError : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Code))
            {
                writer.WritePropertyName("code");
                writer.WriteStringValue(Code);
            }
            if (Optional.IsDefined(Severity))
            {
                writer.WritePropertyName("severity");
                writer.WriteNumberValue(Severity.Value);
            }
            if (Optional.IsDefined(Message))
            {
                writer.WritePropertyName("message");
                writer.WriteStringValue(Message);
            }
            if (Optional.IsDefined(MessageFormat))
            {
                writer.WritePropertyName("messageFormat");
                writer.WriteStringValue(MessageFormat);
            }
            if (Optional.IsCollectionDefined(MessageParameters))
            {
                writer.WritePropertyName("messageParameters");
                writer.WriteStartObject();
                foreach (var item in MessageParameters)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(ReferenceCode))
            {
                writer.WritePropertyName("referenceCode");
                writer.WriteStringValue(ReferenceCode);
            }
            if (Optional.IsDefined(DetailsUri))
            {
                writer.WritePropertyName("detailsUri");
                writer.WriteStringValue(DetailsUri);
            }
            if (Optional.IsDefined(Target))
            {
                writer.WritePropertyName("target");
                writer.WriteStringValue(Target);
            }
            if (Optional.IsCollectionDefined(Details))
            {
                writer.WritePropertyName("details");
                writer.WriteStartArray();
                foreach (var item in Details)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(InnerError))
            {
                writer.WritePropertyName("innerError");
                writer.WriteObjectValue(InnerError);
            }
            writer.WriteEndObject();
        }

        internal static RootError DeserializeRootError(JsonElement element)
        {
            Optional<string> code = default;
            Optional<int> severity = default;
            Optional<string> message = default;
            Optional<string> messageFormat = default;
            Optional<IDictionary<string, string>> messageParameters = default;
            Optional<string> referenceCode = default;
            Optional<string> detailsUri = default;
            Optional<string> target = default;
            Optional<IList<RootError>> details = default;
            Optional<InnerErrorResponse> innerError = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("code"))
                {
                    code = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("severity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    severity = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("message"))
                {
                    message = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("messageFormat"))
                {
                    messageFormat = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("messageParameters"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    messageParameters = dictionary;
                    continue;
                }
                if (property.NameEquals("referenceCode"))
                {
                    referenceCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("detailsUri"))
                {
                    detailsUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("target"))
                {
                    target = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("details"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RootError> array = new List<RootError>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DeserializeRootError(item));
                    }
                    details = array;
                    continue;
                }
                if (property.NameEquals("innerError"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    innerError = InnerErrorResponse.DeserializeInnerErrorResponse(property.Value);
                    continue;
                }
            }
            return new RootError(code.Value, Optional.ToNullable(severity), message.Value, messageFormat.Value, Optional.ToDictionary(messageParameters), referenceCode.Value, detailsUri.Value, target.Value, Optional.ToList(details), innerError.Value);
        }
    }
}
