// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MachineLearningServices
{
    /// <summary> State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled. </summary>
    public readonly partial struct RemoteLoginPortPublicAccess : IEquatable<RemoteLoginPortPublicAccess>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="RemoteLoginPortPublicAccess"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RemoteLoginPortPublicAccess(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string EnabledValue = "Enabled";
        private const string DisabledValue = "Disabled";
        private const string NotSpecifiedValue = "NotSpecified";

        /// <summary> Enabled. </summary>
        public static RemoteLoginPortPublicAccess Enabled { get; } = new RemoteLoginPortPublicAccess(EnabledValue);
        /// <summary> Disabled. </summary>
        public static RemoteLoginPortPublicAccess Disabled { get; } = new RemoteLoginPortPublicAccess(DisabledValue);
        /// <summary> NotSpecified. </summary>
        public static RemoteLoginPortPublicAccess NotSpecified { get; } = new RemoteLoginPortPublicAccess(NotSpecifiedValue);
        /// <summary> Determines if two <see cref="RemoteLoginPortPublicAccess"/> values are the same. </summary>
        public static bool operator ==(RemoteLoginPortPublicAccess left, RemoteLoginPortPublicAccess right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RemoteLoginPortPublicAccess"/> values are not the same. </summary>
        public static bool operator !=(RemoteLoginPortPublicAccess left, RemoteLoginPortPublicAccess right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RemoteLoginPortPublicAccess"/>. </summary>
        public static implicit operator RemoteLoginPortPublicAccess(string value) => new RemoteLoginPortPublicAccess(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RemoteLoginPortPublicAccess other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RemoteLoginPortPublicAccess other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
