// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.MachineLearningServices
{
    /// <summary> Describes the properties of a VM size. </summary>
    public partial class VirtualMachineSize
    {
        /// <summary> Initializes a new instance of VirtualMachineSize. </summary>
        internal VirtualMachineSize()
        {
        }

        /// <summary> Initializes a new instance of VirtualMachineSize. </summary>
        /// <param name="name"> The name of the virtual machine size. </param>
        /// <param name="family"> The family name of the virtual machine size. </param>
        /// <param name="vCPUs"> The number of vCPUs supported by the virtual machine size. </param>
        /// <param name="gpus"> The number of gPUs supported by the virtual machine size. </param>
        /// <param name="osVhdSizeMB"> The OS VHD disk size, in MB, allowed by the virtual machine size. </param>
        /// <param name="maxResourceVolumeMB"> The resource volume size, in MB, allowed by the virtual machine size. </param>
        /// <param name="memoryGB"> The amount of memory, in GB, supported by the virtual machine size. </param>
        /// <param name="lowPriorityCapable"> Specifies if the virtual machine size supports low priority VMs. </param>
        /// <param name="premiumIO"> Specifies if the virtual machine size supports premium IO. </param>
        /// <param name="estimatedVMPrices"> The estimated price information for using a VM. </param>
        internal VirtualMachineSize(string name, string family, int? vCPUs, int? gpus, int? osVhdSizeMB, int? maxResourceVolumeMB, double? memoryGB, bool? lowPriorityCapable, bool? premiumIO, EstimatedVMPrices estimatedVMPrices)
        {
            Name = name;
            Family = family;
            VCPUs = vCPUs;
            Gpus = gpus;
            OsVhdSizeMB = osVhdSizeMB;
            MaxResourceVolumeMB = maxResourceVolumeMB;
            MemoryGB = memoryGB;
            LowPriorityCapable = lowPriorityCapable;
            PremiumIO = premiumIO;
            EstimatedVMPrices = estimatedVMPrices;
        }

        /// <summary> The name of the virtual machine size. </summary>
        public string Name { get; }
        /// <summary> The family name of the virtual machine size. </summary>
        public string Family { get; }
        /// <summary> The number of vCPUs supported by the virtual machine size. </summary>
        public int? VCPUs { get; }
        /// <summary> The number of gPUs supported by the virtual machine size. </summary>
        public int? Gpus { get; }
        /// <summary> The OS VHD disk size, in MB, allowed by the virtual machine size. </summary>
        public int? OsVhdSizeMB { get; }
        /// <summary> The resource volume size, in MB, allowed by the virtual machine size. </summary>
        public int? MaxResourceVolumeMB { get; }
        /// <summary> The amount of memory, in GB, supported by the virtual machine size. </summary>
        public double? MemoryGB { get; }
        /// <summary> Specifies if the virtual machine size supports low priority VMs. </summary>
        public bool? LowPriorityCapable { get; }
        /// <summary> Specifies if the virtual machine size supports premium IO. </summary>
        public bool? PremiumIO { get; }
        /// <summary> The estimated price information for using a VM. </summary>
        public EstimatedVMPrices EstimatedVMPrices { get; }
    }
}
