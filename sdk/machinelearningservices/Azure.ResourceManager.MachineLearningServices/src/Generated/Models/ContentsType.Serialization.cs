// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    internal static class ContentsTypeExtensions
    {
        public static string ToSerialString(this ContentsType value) => value switch
        {
            ContentsType.AzureBlob => "AzureBlob",
            ContentsType.AzureDataLake => "AzureDataLake",
            ContentsType.AzureDataLakeGen2 => "AzureDataLakeGen2",
            ContentsType.AzureFile => "AzureFile",
            ContentsType.AzureMySql => "AzureMySql",
            ContentsType.AzurePostgreSql => "AzurePostgreSql",
            ContentsType.AzureSqlDatabase => "AzureSqlDatabase",
            ContentsType.GlusterFs => "GlusterFs",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ContentsType value.")
        };

        public static ContentsType ToContentsType(this string value)
        {
            if (string.Equals(value, "AzureBlob", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzureBlob;
            if (string.Equals(value, "AzureDataLake", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzureDataLake;
            if (string.Equals(value, "AzureDataLakeGen2", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzureDataLakeGen2;
            if (string.Equals(value, "AzureFile", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzureFile;
            if (string.Equals(value, "AzureMySql", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzureMySql;
            if (string.Equals(value, "AzurePostgreSql", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzurePostgreSql;
            if (string.Equals(value, "AzureSqlDatabase", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.AzureSqlDatabase;
            if (string.Equals(value, "GlusterFs", StringComparison.InvariantCultureIgnoreCase)) return ContentsType.GlusterFs;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ContentsType value.");
        }
    }
}
