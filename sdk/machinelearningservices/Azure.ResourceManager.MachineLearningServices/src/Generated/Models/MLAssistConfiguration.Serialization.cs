// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class MLAssistConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(InferencingComputeBinding))
            {
                writer.WritePropertyName("inferencingComputeBinding");
                writer.WriteObjectValue(InferencingComputeBinding);
            }
            if (Optional.IsDefined(TrainingComputeBinding))
            {
                writer.WritePropertyName("trainingComputeBinding");
                writer.WriteObjectValue(TrainingComputeBinding);
            }
            if (Optional.IsDefined(MlAssistEnabled))
            {
                writer.WritePropertyName("mlAssistEnabled");
                writer.WriteBooleanValue(MlAssistEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static MLAssistConfiguration DeserializeMLAssistConfiguration(JsonElement element)
        {
            Optional<ComputeBinding> inferencingComputeBinding = default;
            Optional<ComputeBinding> trainingComputeBinding = default;
            Optional<bool> mlAssistEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("inferencingComputeBinding"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    inferencingComputeBinding = ComputeBinding.DeserializeComputeBinding(property.Value);
                    continue;
                }
                if (property.NameEquals("trainingComputeBinding"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    trainingComputeBinding = ComputeBinding.DeserializeComputeBinding(property.Value);
                    continue;
                }
                if (property.NameEquals("mlAssistEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    mlAssistEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new MLAssistConfiguration(inferencingComputeBinding.Value, trainingComputeBinding.Value, Optional.ToNullable(mlAssistEnabled));
        }
    }
}
