// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> Compute job base definition. </summary>
    public partial class ComputeJobBase : JobBase
    {
        /// <summary> Initializes a new instance of ComputeJobBase. </summary>
        /// <param name="computeBinding"> Compute binding definition. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="computeBinding"/> is null. </exception>
        public ComputeJobBase(ComputeBinding computeBinding)
        {
            if (computeBinding == null)
            {
                throw new ArgumentNullException(nameof(computeBinding));
            }

            ComputeBinding = computeBinding;
            JobType = new JobType("ComputeJobBase");
        }

        /// <summary> Initializes a new instance of ComputeJobBase. </summary>
        /// <param name="jobType"> Specifies the type of job. </param>
        /// <param name="interactionEndpoints">
        /// Dictonary of endpoint URIs, keyed by enumerated job endpoints.
        /// 
        /// For local jobs, a job endpoint will have a value of FileStreamObject.
        /// </param>
        /// <param name="description"> The asset description text. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="experimentName"> The name of the experiment the job belongs to. If not set, the job is placed in the &quot;Default&quot; experiment. </param>
        /// <param name="computeBinding"> Compute binding definition. </param>
        /// <param name="output"> . </param>
        internal ComputeJobBase(JobType jobType, JobBaseInteractionEndpoints interactionEndpoints, string description, IDictionary<string, string> tags, IDictionary<string, string> properties, string experimentName, ComputeBinding computeBinding, JobOutput output) : base(jobType, interactionEndpoints, description, tags, properties)
        {
            ExperimentName = experimentName;
            ComputeBinding = computeBinding;
            Output = output;
            JobType = jobType;
        }

        /// <summary> The name of the experiment the job belongs to. If not set, the job is placed in the &quot;Default&quot; experiment. </summary>
        public string ExperimentName { get; set; }
        /// <summary> Compute binding definition. </summary>
        public ComputeBinding ComputeBinding { get; set; }
        public JobOutput Output { get; set; }
    }
}
