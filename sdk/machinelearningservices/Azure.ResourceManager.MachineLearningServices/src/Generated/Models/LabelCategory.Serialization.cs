// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class LabelCategory : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DisplayName))
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            if (Optional.IsDefined(AllowMultiSelect))
            {
                writer.WritePropertyName("allowMultiSelect");
                writer.WriteBooleanValue(AllowMultiSelect.Value);
            }
            if (Optional.IsCollectionDefined(Classes))
            {
                writer.WritePropertyName("classes");
                writer.WriteStartObject();
                foreach (var item in Classes)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static LabelCategory DeserializeLabelCategory(JsonElement element)
        {
            Optional<string> displayName = default;
            Optional<bool> allowMultiSelect = default;
            Optional<IDictionary<string, LabelClass>> classes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayName"))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("allowMultiSelect"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    allowMultiSelect = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("classes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, LabelClass> dictionary = new Dictionary<string, LabelClass>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, LabelClass.DeserializeLabelClass(property0.Value));
                    }
                    classes = dictionary;
                    continue;
                }
            }
            return new LabelCategory(displayName.Value, Optional.ToNullable(allowMultiSelect), Optional.ToDictionary(classes));
        }
    }
}
