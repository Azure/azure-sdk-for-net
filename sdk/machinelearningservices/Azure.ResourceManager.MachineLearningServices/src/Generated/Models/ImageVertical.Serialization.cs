// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    internal partial class ImageVertical : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("dataSettings");
            writer.WriteObjectValue(DataSettings);
            writer.WritePropertyName("limitSettings");
            writer.WriteObjectValue(LimitSettings);
            if (Optional.IsDefined(SweepSettings))
            {
                if (SweepSettings != null)
                {
                    writer.WritePropertyName("sweepSettings");
                    writer.WriteObjectValue(SweepSettings);
                }
                else
                {
                    writer.WriteNull("sweepSettings");
                }
            }
            writer.WriteEndObject();
        }

        internal static ImageVertical DeserializeImageVertical(JsonElement element)
        {
            ImageDataSettings dataSettings = default;
            ImageLimitSettings limitSettings = default;
            Optional<ImageSweepSettings> sweepSettings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dataSettings"))
                {
                    dataSettings = ImageDataSettings.DeserializeImageDataSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("limitSettings"))
                {
                    limitSettings = ImageLimitSettings.DeserializeImageLimitSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("sweepSettings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        sweepSettings = null;
                        continue;
                    }
                    sweepSettings = ImageSweepSettings.DeserializeImageSweepSettings(property.Value);
                    continue;
                }
            }
            return new ImageVertical(dataSettings, limitSettings, sweepSettings.Value);
        }
    }
}
