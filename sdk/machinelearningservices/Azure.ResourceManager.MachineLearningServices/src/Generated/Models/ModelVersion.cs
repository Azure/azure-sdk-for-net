// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> Model asset version details. </summary>
    public partial class ModelVersion : AssetBase
    {
        /// <summary> Initializes a new instance of ModelVersion. </summary>
        /// <param name="modelUri"> The URI path to the model contents. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="modelUri"/> is null. </exception>
        public ModelVersion(string modelUri)
        {
            if (modelUri == null)
            {
                throw new ArgumentNullException(nameof(modelUri));
            }

            Flavors = new ChangeTrackingDictionary<string, FlavorData>();
            ModelUri = modelUri;
        }

        /// <summary> Initializes a new instance of ModelVersion. </summary>
        /// <param name="description"> The asset description text. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="isAnonymous"> If the name version are system generated (anonymous registration). </param>
        /// <param name="flavors"> Mapping of model flavors to their properties. </param>
        /// <param name="jobName"> Name of the training job which produced this model. </param>
        /// <param name="modelFormat"> The storage format for this entity. Used for NCD. </param>
        /// <param name="modelUri"> The URI path to the model contents. </param>
        internal ModelVersion(string description, IDictionary<string, string> properties, IDictionary<string, string> tags, bool? isAnonymous, IDictionary<string, FlavorData> flavors, string jobName, ModelFormat? modelFormat, string modelUri) : base(description, properties, tags, isAnonymous)
        {
            Flavors = flavors;
            JobName = jobName;
            ModelFormat = modelFormat;
            ModelUri = modelUri;
        }

        /// <summary> Mapping of model flavors to their properties. </summary>
        public IDictionary<string, FlavorData> Flavors { get; set; }
        /// <summary> Name of the training job which produced this model. </summary>
        public string JobName { get; set; }
        /// <summary> The storage format for this entity. Used for NCD. </summary>
        public ModelFormat? ModelFormat { get; set; }
        /// <summary> The URI path to the model contents. </summary>
        public string ModelUri { get; set; }
    }
}
