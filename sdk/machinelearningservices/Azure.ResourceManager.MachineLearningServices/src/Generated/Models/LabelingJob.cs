// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> Labeling job definition. </summary>
    public partial class LabelingJob : JobBase
    {
        /// <summary> Initializes a new instance of LabelingJob. </summary>
        public LabelingJob()
        {
            LabelCategories = new ChangeTrackingDictionary<string, LabelCategory>();
            StatusMessages = new ChangeTrackingList<StatusMessage>();
            JobType = JobType.Labeling;
        }

        /// <summary> Initializes a new instance of LabelingJob. </summary>
        /// <param name="jobType"> Specifies the type of job. </param>
        /// <param name="interactionEndpoints">
        /// Dictonary of endpoint URIs, keyed by enumerated job endpoints.
        /// 
        /// For local jobs, a job endpoint will have a value of FileStreamObject.
        /// </param>
        /// <param name="description"> The asset description text. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="labelCategories"> Label categories of the job. </param>
        /// <param name="jobInstructions"> Instructions for labeling job. </param>
        /// <param name="datasetConfiguration"> Labeling dataset configuration definition. </param>
        /// <param name="mlAssistConfiguration"> Labeling MLAssist configuration definition. </param>
        /// <param name="labelingJobMediaProperties"> Properties of a labeling job. </param>
        /// <param name="projectId"> Internal id of the job(Previously called project). </param>
        /// <param name="status"> Status of the job. </param>
        /// <param name="progressMetrics"> Progress metrics definition. </param>
        /// <param name="statusMessages"> Status messages of the job. </param>
        /// <param name="createdTimeUtc"> Created time of the job in UTC timezone. </param>
        internal LabelingJob(JobType jobType, JobBaseInteractionEndpoints interactionEndpoints, string description, IDictionary<string, string> tags, IDictionary<string, string> properties, IDictionary<string, LabelCategory> labelCategories, LabelingJobInstructions jobInstructions, LabelingDatasetConfiguration datasetConfiguration, MLAssistConfiguration mlAssistConfiguration, LabelingJobMediaProperties labelingJobMediaProperties, Guid? projectId, JobStatus? status, ProgressMetrics progressMetrics, IList<StatusMessage> statusMessages, DateTimeOffset? createdTimeUtc) : base(jobType, interactionEndpoints, description, tags, properties)
        {
            LabelCategories = labelCategories;
            JobInstructions = jobInstructions;
            DatasetConfiguration = datasetConfiguration;
            MlAssistConfiguration = mlAssistConfiguration;
            LabelingJobMediaProperties = labelingJobMediaProperties;
            ProjectId = projectId;
            Status = status;
            ProgressMetrics = progressMetrics;
            StatusMessages = statusMessages;
            CreatedTimeUtc = createdTimeUtc;
            JobType = jobType;
        }

        /// <summary> Label categories of the job. </summary>
        public IDictionary<string, LabelCategory> LabelCategories { get; }
        /// <summary> Instructions for labeling job. </summary>
        public LabelingJobInstructions JobInstructions { get; set; }
        /// <summary> Labeling dataset configuration definition. </summary>
        public LabelingDatasetConfiguration DatasetConfiguration { get; set; }
        /// <summary> Labeling MLAssist configuration definition. </summary>
        public MLAssistConfiguration MlAssistConfiguration { get; set; }
        /// <summary> Properties of a labeling job. </summary>
        public LabelingJobMediaProperties LabelingJobMediaProperties { get; set; }
        /// <summary> Internal id of the job(Previously called project). </summary>
        public Guid? ProjectId { get; set; }
        /// <summary> Status of the job. </summary>
        public JobStatus? Status { get; set; }
        /// <summary> Progress metrics definition. </summary>
        public ProgressMetrics ProgressMetrics { get; set; }
        /// <summary> Status messages of the job. </summary>
        public IList<StatusMessage> StatusMessages { get; }
        /// <summary> Created time of the job in UTC timezone. </summary>
        public DateTimeOffset? CreatedTimeUtc { get; set; }
    }
}
