// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class ComputeBinding : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ComputeId))
            {
                writer.WritePropertyName("computeId");
                writer.WriteStringValue(ComputeId);
            }
            if (Optional.IsDefined(NodeCount))
            {
                writer.WritePropertyName("nodeCount");
                writer.WriteNumberValue(NodeCount.Value);
            }
            if (Optional.IsDefined(IsLocal))
            {
                writer.WritePropertyName("isLocal");
                writer.WriteBooleanValue(IsLocal.Value);
            }
            writer.WriteEndObject();
        }

        internal static ComputeBinding DeserializeComputeBinding(JsonElement element)
        {
            Optional<string> computeId = default;
            Optional<int> nodeCount = default;
            Optional<bool> isLocal = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("computeId"))
                {
                    computeId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    nodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("isLocal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isLocal = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ComputeBinding(computeId.Value, Optional.ToNullable(nodeCount), Optional.ToNullable(isLocal));
        }
    }
}
