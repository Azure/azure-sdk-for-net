// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.MachineLearningServices
{
    /// <summary> Azure Data Lake Gen1 datastore configuration. </summary>
    public partial class AzureDataLakeGen1Contents : DatastoreContents
    {
        /// <summary> Initializes a new instance of AzureDataLakeGen1Contents. </summary>
        /// <param name="credentials"> Account credentials. </param>
        /// <param name="storeName"> Azure Data Lake store name. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credentials"/> or <paramref name="storeName"/> is null. </exception>
        public AzureDataLakeGen1Contents(DatastoreCredentials credentials, string storeName)
        {
            if (credentials == null)
            {
                throw new ArgumentNullException(nameof(credentials));
            }
            if (storeName == null)
            {
                throw new ArgumentNullException(nameof(storeName));
            }

            Credentials = credentials;
            StoreName = storeName;
            ContentsType = ContentsType.AzureDataLakeGen1;
        }

        /// <summary> Initializes a new instance of AzureDataLakeGen1Contents. </summary>
        /// <param name="contentsType"> Storage type backing the datastore. </param>
        /// <param name="credentials"> Account credentials. </param>
        /// <param name="storeName"> Azure Data Lake store name. </param>
        internal AzureDataLakeGen1Contents(ContentsType contentsType, DatastoreCredentials credentials, string storeName) : base(contentsType)
        {
            Credentials = credentials;
            StoreName = storeName;
            ContentsType = contentsType;
        }

        /// <summary> Account credentials. </summary>
        public DatastoreCredentials Credentials { get; set; }
        /// <summary> Azure Data Lake store name. </summary>
        public string StoreName { get; set; }
    }
}
