// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices
{
    /// <summary> Command job definition. </summary>
    public partial class CommandJob : JobBase
    {
        /// <summary> Initializes a new instance of CommandJob. </summary>
        /// <param name="command"> The command to execute on startup of the job. eg. &quot;python train.py&quot;. </param>
        /// <param name="compute"> Compute binding for the job. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="command"/> or <paramref name="compute"/> is null. </exception>
        public CommandJob(string command, ComputeConfiguration compute)
        {
            if (command == null)
            {
                throw new ArgumentNullException(nameof(command));
            }
            if (compute == null)
            {
                throw new ArgumentNullException(nameof(compute));
            }

            Command = command;
            Compute = compute;
            EnvironmentVariables = new ChangeTrackingDictionary<string, string>();
            InputDataBindings = new ChangeTrackingDictionary<string, InputDataBinding>();
            OutputDataBindings = new ChangeTrackingDictionary<string, OutputDataBinding>();
            Parameters = new ChangeTrackingDictionary<string, object>();
            JobType = JobType.Command;
        }

        /// <summary> Initializes a new instance of CommandJob. </summary>
        /// <param name="description"> The asset description text. </param>
        /// <param name="interactionEndpoints">
        /// List of JobEndpoints.
        /// 
        /// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
        /// </param>
        /// <param name="jobType"> Specifies the type of job. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="provisioningState"> . </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="codeId"> ARM resource ID of the code asset. </param>
        /// <param name="command"> The command to execute on startup of the job. eg. &quot;python train.py&quot;. </param>
        /// <param name="compute"> Compute binding for the job. </param>
        /// <param name="distribution"> Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null. </param>
        /// <param name="environmentId"> The ARM resource ID of the Environment specification for the job. </param>
        /// <param name="environmentVariables"> Environment variables included in the job. </param>
        /// <param name="experimentName"> The name of the experiment the job belongs to. If not set, the job is placed in the &quot;Default&quot; experiment. </param>
        /// <param name="identity">
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
        /// 
        /// Defaults to AmlToken if null.
        /// </param>
        /// <param name="inputDataBindings"> Mapping of input data bindings used in the job. </param>
        /// <param name="output"> Location of the job output logs and artifacts. </param>
        /// <param name="outputDataBindings"> Mapping of output data bindings used in the job. </param>
        /// <param name="parameters"> Input parameters. </param>
        /// <param name="priority">
        /// Job priority for scheduling policy. Only applies to AMLCompute.
        /// 
        /// Private preview feature and only available to users on the allow list.
        /// </param>
        /// <param name="status"> Status of the job. </param>
        /// <param name="timeout"> The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds. </param>
        internal CommandJob(string description, IReadOnlyDictionary<string, JobEndpoint> interactionEndpoints, JobType jobType, IDictionary<string, string> properties, JobProvisioningState? provisioningState, IDictionary<string, string> tags, string codeId, string command, ComputeConfiguration compute, DistributionConfiguration distribution, string environmentId, IDictionary<string, string> environmentVariables, string experimentName, IdentityConfiguration identity, IDictionary<string, InputDataBinding> inputDataBindings, JobOutput output, IDictionary<string, OutputDataBinding> outputDataBindings, IReadOnlyDictionary<string, object> parameters, int? priority, JobStatus? status, TimeSpan? timeout) : base(description, interactionEndpoints, jobType, properties, provisioningState, tags)
        {
            CodeId = codeId;
            Command = command;
            Compute = compute;
            Distribution = distribution;
            EnvironmentId = environmentId;
            EnvironmentVariables = environmentVariables;
            ExperimentName = experimentName;
            Identity = identity;
            InputDataBindings = inputDataBindings;
            Output = output;
            OutputDataBindings = outputDataBindings;
            Parameters = parameters;
            Priority = priority;
            Status = status;
            Timeout = timeout;
            JobType = jobType;
        }

        /// <summary> ARM resource ID of the code asset. </summary>
        public string CodeId { get; set; }
        /// <summary> The command to execute on startup of the job. eg. &quot;python train.py&quot;. </summary>
        public string Command { get; set; }
        /// <summary> Compute binding for the job. </summary>
        public ComputeConfiguration Compute { get; set; }
        /// <summary> Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null. </summary>
        public DistributionConfiguration Distribution { get; set; }
        /// <summary> The ARM resource ID of the Environment specification for the job. </summary>
        public string EnvironmentId { get; set; }
        /// <summary> Environment variables included in the job. </summary>
        public IDictionary<string, string> EnvironmentVariables { get; }
        /// <summary> The name of the experiment the job belongs to. If not set, the job is placed in the &quot;Default&quot; experiment. </summary>
        public string ExperimentName { get; set; }
        /// <summary>
        /// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
        /// 
        /// Defaults to AmlToken if null.
        /// </summary>
        public IdentityConfiguration Identity { get; set; }
        /// <summary> Mapping of input data bindings used in the job. </summary>
        public IDictionary<string, InputDataBinding> InputDataBindings { get; }
        /// <summary> Location of the job output logs and artifacts. </summary>
        public JobOutput Output { get; }
        /// <summary> Mapping of output data bindings used in the job. </summary>
        public IDictionary<string, OutputDataBinding> OutputDataBindings { get; }
        /// <summary> Input parameters. </summary>
        public IReadOnlyDictionary<string, object> Parameters { get; }
        /// <summary>
        /// Job priority for scheduling policy. Only applies to AMLCompute.
        /// 
        /// Private preview feature and only available to users on the allow list.
        /// </summary>
        public int? Priority { get; set; }
        /// <summary> Status of the job. </summary>
        public JobStatus? Status { get; }
        /// <summary> The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds. </summary>
        public TimeSpan? Timeout { get; set; }
    }
}
