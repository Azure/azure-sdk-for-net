// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> Code Job definition. </summary>
    public partial class CommandJob : ComputeJobBase
    {
        /// <summary> Initializes a new instance of CommandJob. </summary>
        /// <param name="computeBinding"> Compute binding definition. </param>
        /// <param name="codeConfiguration"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="computeBinding"/> or <paramref name="codeConfiguration"/> is null. </exception>
        public CommandJob(ComputeBinding computeBinding, CodeConfiguration codeConfiguration) : base(computeBinding)
        {
            if (computeBinding == null)
            {
                throw new ArgumentNullException(nameof(computeBinding));
            }
            if (codeConfiguration == null)
            {
                throw new ArgumentNullException(nameof(codeConfiguration));
            }

            CodeConfiguration = codeConfiguration;
            DataBindings = new ChangeTrackingDictionary<string, DataBinding>();
            JobType = JobType.Command;
        }

        /// <summary> Initializes a new instance of CommandJob. </summary>
        /// <param name="jobType"> Specifies the type of job. </param>
        /// <param name="interactionEndpoints">
        /// Dictonary of endpoint URIs, keyed by enumerated job endpoints.
        /// 
        /// For local jobs, a job endpoint will have a value of FileStreamObject.
        /// </param>
        /// <param name="description"> The asset description text. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="experimentName"> The name of the experiment the job belongs to. If not set, the job is placed in the &quot;Default&quot; experiment. </param>
        /// <param name="computeBinding"> Compute binding definition. </param>
        /// <param name="output"> . </param>
        /// <param name="status"> Status of the job. </param>
        /// <param name="maxRunDurationSeconds"> The max run duration in seconds, after which the job will be cancelled. </param>
        /// <param name="codeConfiguration"> . </param>
        /// <param name="environmentId"> Environment specification of the job. </param>
        /// <param name="dataBindings"> Mapping of data bindings used in the job. </param>
        /// <param name="distributionConfiguration"> . </param>
        internal CommandJob(JobType jobType, JobBaseInteractionEndpoints interactionEndpoints, string description, IDictionary<string, string> tags, IDictionary<string, string> properties, string experimentName, ComputeBinding computeBinding, JobOutput output, JobStatus? status, long? maxRunDurationSeconds, CodeConfiguration codeConfiguration, string environmentId, IDictionary<string, DataBinding> dataBindings, DistributionConfiguration distributionConfiguration) : base(jobType, interactionEndpoints, description, tags, properties, experimentName, computeBinding, output)
        {
            Status = status;
            MaxRunDurationSeconds = maxRunDurationSeconds;
            CodeConfiguration = codeConfiguration;
            EnvironmentId = environmentId;
            DataBindings = dataBindings;
            DistributionConfiguration = distributionConfiguration;
            JobType = jobType;
        }

        /// <summary> Status of the job. </summary>
        public JobStatus? Status { get; set; }
        /// <summary> The max run duration in seconds, after which the job will be cancelled. </summary>
        public long? MaxRunDurationSeconds { get; set; }
        public CodeConfiguration CodeConfiguration { get; set; }
        /// <summary> Environment specification of the job. </summary>
        public string EnvironmentId { get; set; }
        /// <summary> Mapping of data bindings used in the job. </summary>
        public IDictionary<string, DataBinding> DataBindings { get; }
        public DistributionConfiguration DistributionConfiguration { get; set; }
    }
}
