// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class TrialComponent : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(CodeConfiguration))
            {
                writer.WritePropertyName("codeConfiguration");
                writer.WriteObjectValue(CodeConfiguration);
            }
            if (Optional.IsDefined(EnvironmentId))
            {
                writer.WritePropertyName("environmentId");
                writer.WriteStringValue(EnvironmentId);
            }
            if (Optional.IsCollectionDefined(DataBindings))
            {
                writer.WritePropertyName("dataBindings");
                writer.WriteStartObject();
                foreach (var item in DataBindings)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(DistributionConfiguration))
            {
                writer.WritePropertyName("distributionConfiguration");
                writer.WriteObjectValue(DistributionConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static TrialComponent DeserializeTrialComponent(JsonElement element)
        {
            Optional<CodeConfiguration> codeConfiguration = default;
            Optional<string> environmentId = default;
            Optional<IDictionary<string, DataBinding>> dataBindings = default;
            Optional<DistributionConfiguration> distributionConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("codeConfiguration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    codeConfiguration = CodeConfiguration.DeserializeCodeConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("environmentId"))
                {
                    environmentId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dataBindings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, DataBinding> dictionary = new Dictionary<string, DataBinding>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, DataBinding.DeserializeDataBinding(property0.Value));
                    }
                    dataBindings = dictionary;
                    continue;
                }
                if (property.NameEquals("distributionConfiguration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    distributionConfiguration = DistributionConfiguration.DeserializeDistributionConfiguration(property.Value);
                    continue;
                }
            }
            return new TrialComponent(codeConfiguration.Value, environmentId.Value, Optional.ToDictionary(dataBindings), distributionConfiguration.Value);
        }
    }
}
