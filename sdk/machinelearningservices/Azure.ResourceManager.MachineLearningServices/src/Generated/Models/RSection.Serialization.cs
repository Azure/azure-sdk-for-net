// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class RSection : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RVersion))
            {
                writer.WritePropertyName("rVersion");
                writer.WriteStringValue(RVersion);
            }
            if (Optional.IsDefined(UserManaged))
            {
                writer.WritePropertyName("userManaged");
                writer.WriteBooleanValue(UserManaged.Value);
            }
            if (Optional.IsDefined(RscriptPath))
            {
                writer.WritePropertyName("rscriptPath");
                writer.WriteStringValue(RscriptPath);
            }
            if (Optional.IsDefined(SnapshotDate))
            {
                writer.WritePropertyName("snapshotDate");
                writer.WriteStringValue(SnapshotDate);
            }
            if (Optional.IsCollectionDefined(CranPackages))
            {
                writer.WritePropertyName("cranPackages");
                writer.WriteStartArray();
                foreach (var item in CranPackages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(GitHubPackages))
            {
                writer.WritePropertyName("gitHubPackages");
                writer.WriteStartArray();
                foreach (var item in GitHubPackages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(CustomUrlPackages))
            {
                writer.WritePropertyName("customUrlPackages");
                writer.WriteStartArray();
                foreach (var item in CustomUrlPackages)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(BioConductorPackages))
            {
                writer.WritePropertyName("bioConductorPackages");
                writer.WriteStartArray();
                foreach (var item in BioConductorPackages)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
