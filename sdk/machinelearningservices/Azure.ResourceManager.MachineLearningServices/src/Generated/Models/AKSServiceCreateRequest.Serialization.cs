// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class AKSServiceCreateRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(NumReplicas))
            {
                writer.WritePropertyName("numReplicas");
                writer.WriteNumberValue(NumReplicas.Value);
            }
            if (Optional.IsDefined(DataCollection))
            {
                writer.WritePropertyName("dataCollection");
                writer.WriteObjectValue(DataCollection);
            }
            if (Optional.IsDefined(ComputeName))
            {
                writer.WritePropertyName("computeName");
                writer.WriteStringValue(ComputeName);
            }
            if (Optional.IsDefined(AppInsightsEnabled))
            {
                writer.WritePropertyName("appInsightsEnabled");
                writer.WriteBooleanValue(AppInsightsEnabled.Value);
            }
            if (Optional.IsDefined(AutoScaler))
            {
                writer.WritePropertyName("autoScaler");
                writer.WriteObjectValue(AutoScaler);
            }
            if (Optional.IsDefined(ContainerResourceRequirements))
            {
                writer.WritePropertyName("containerResourceRequirements");
                writer.WriteObjectValue(ContainerResourceRequirements);
            }
            if (Optional.IsDefined(MaxConcurrentRequestsPerContainer))
            {
                writer.WritePropertyName("maxConcurrentRequestsPerContainer");
                writer.WriteNumberValue(MaxConcurrentRequestsPerContainer.Value);
            }
            if (Optional.IsDefined(MaxQueueWaitMs))
            {
                writer.WritePropertyName("maxQueueWaitMs");
                writer.WriteNumberValue(MaxQueueWaitMs.Value);
            }
            if (Optional.IsDefined(Namespace))
            {
                writer.WritePropertyName("namespace");
                writer.WriteStringValue(Namespace);
            }
            if (Optional.IsDefined(ScoringTimeoutMs))
            {
                writer.WritePropertyName("scoringTimeoutMs");
                writer.WriteNumberValue(ScoringTimeoutMs.Value);
            }
            if (Optional.IsDefined(AuthEnabled))
            {
                writer.WritePropertyName("authEnabled");
                writer.WriteBooleanValue(AuthEnabled.Value);
            }
            if (Optional.IsDefined(LivenessProbeRequirements))
            {
                writer.WritePropertyName("livenessProbeRequirements");
                writer.WriteObjectValue(LivenessProbeRequirements);
            }
            if (Optional.IsDefined(AadAuthEnabled))
            {
                writer.WritePropertyName("aadAuthEnabled");
                writer.WriteBooleanValue(AadAuthEnabled.Value);
            }
            if (Optional.IsDefined(IsDefault))
            {
                writer.WritePropertyName("isDefault");
                writer.WriteBooleanValue(IsDefault.Value);
            }
            if (Optional.IsDefined(TrafficPercentile))
            {
                writer.WritePropertyName("trafficPercentile");
                writer.WriteNumberValue(TrafficPercentile.Value);
            }
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type.Value.ToString());
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsCollectionDefined(KvTags))
            {
                writer.WritePropertyName("kvTags");
                writer.WriteStartObject();
                foreach (var item in KvTags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(Properties))
            {
                writer.WritePropertyName("properties");
                writer.WriteStartObject();
                foreach (var item in Properties)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(Keys))
            {
                writer.WritePropertyName("keys");
                writer.WriteObjectValue(Keys);
            }
            writer.WritePropertyName("computeType");
            writer.WriteStringValue(ComputeType.ToString());
            if (Optional.IsDefined(EnvironmentImageRequest))
            {
                writer.WritePropertyName("environmentImageRequest");
                writer.WriteObjectValue(EnvironmentImageRequest);
            }
            if (Optional.IsDefined(Location))
            {
                writer.WritePropertyName("location");
                writer.WriteStringValue(Location);
            }
            writer.WriteEndObject();
        }
    }
}
