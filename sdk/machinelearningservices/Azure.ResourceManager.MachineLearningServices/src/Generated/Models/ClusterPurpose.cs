// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MachineLearningServices
{
    /// <summary> Intended usage of the cluster. </summary>
    public readonly partial struct ClusterPurpose : IEquatable<ClusterPurpose>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ClusterPurpose"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ClusterPurpose(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FastProdValue = "FastProd";
        private const string DenseProdValue = "DenseProd";
        private const string DevTestValue = "DevTest";

        /// <summary> FastProd. </summary>
        public static ClusterPurpose FastProd { get; } = new ClusterPurpose(FastProdValue);
        /// <summary> DenseProd. </summary>
        public static ClusterPurpose DenseProd { get; } = new ClusterPurpose(DenseProdValue);
        /// <summary> DevTest. </summary>
        public static ClusterPurpose DevTest { get; } = new ClusterPurpose(DevTestValue);
        /// <summary> Determines if two <see cref="ClusterPurpose"/> values are the same. </summary>
        public static bool operator ==(ClusterPurpose left, ClusterPurpose right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ClusterPurpose"/> values are not the same. </summary>
        public static bool operator !=(ClusterPurpose left, ClusterPurpose right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ClusterPurpose"/>. </summary>
        public static implicit operator ClusterPurpose(string value) => new ClusterPurpose(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ClusterPurpose other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ClusterPurpose other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
