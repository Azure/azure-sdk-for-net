// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    /// <summary> The response for an ACI service. </summary>
    public partial class ACIServiceResponse : ServiceResponseBase
    {
        /// <summary> Initializes a new instance of ACIServiceResponse. </summary>
        public ACIServiceResponse()
        {
            ModelConfigMap = new ChangeTrackingDictionary<string, object>();
            Models = new ChangeTrackingList<Model>();
            ComputeType = ComputeEnvironmentType.ACI;
        }

        /// <summary> Initializes a new instance of ACIServiceResponse. </summary>
        /// <param name="description"> The service description. </param>
        /// <param name="kvTags"> The service tag dictionary. Tags are mutable. </param>
        /// <param name="properties"> The service property dictionary. Properties are immutable. </param>
        /// <param name="state"> The current state of the service. </param>
        /// <param name="error"> The error details. </param>
        /// <param name="computeType"> The compute environment type for the service. </param>
        /// <param name="deploymentType"> The deployment type for the service. </param>
        /// <param name="containerResourceRequirements"> The container resource requirements. </param>
        /// <param name="scoringUri"> The Uri for sending scoring requests. </param>
        /// <param name="location"> The name of the Azure location/region. </param>
        /// <param name="authEnabled"> Whether or not authentication is enabled on the service. </param>
        /// <param name="sslEnabled"> Whether or not SSL is enabled. </param>
        /// <param name="appInsightsEnabled"> Whether or not Application Insights is enabled. </param>
        /// <param name="dataCollection"> Details of the data collection options specified. </param>
        /// <param name="sslCertificate"> The public SSL certificate in PEM format to use if SSL is enabled. </param>
        /// <param name="sslKey"> The public SSL key in PEM format for the certificate. </param>
        /// <param name="cname"> The CName for the service. </param>
        /// <param name="publicIp"> The public IP address for the service. </param>
        /// <param name="publicFqdn"> The public Fqdn for the service. </param>
        /// <param name="swaggerUri"> The Uri for sending swagger requests. </param>
        /// <param name="modelConfigMap"> Details on the models and configurations. </param>
        /// <param name="models"> The list of models. </param>
        /// <param name="environmentImageRequest"> The Environment, models and assets used for inferencing. </param>
        /// <param name="vnetConfiguration"> The virtual network configuration. </param>
        /// <param name="encryptionProperties"> The encryption properties. </param>
        internal ACIServiceResponse(string description, IDictionary<string, string> kvTags, IDictionary<string, string> properties, WebServiceState? state, ServiceResponseBaseError error, ComputeEnvironmentType computeType, DeploymentType? deploymentType, ContainerResourceRequirements containerResourceRequirements, string scoringUri, string location, bool? authEnabled, bool? sslEnabled, bool? appInsightsEnabled, ACIServiceResponseDataCollection dataCollection, string sslCertificate, string sslKey, string cname, string publicIp, string publicFqdn, string swaggerUri, IReadOnlyDictionary<string, object> modelConfigMap, IList<Model> models, ACIServiceResponseEnvironmentImageRequest environmentImageRequest, ACIServiceResponseVnetConfiguration vnetConfiguration, ACIServiceResponseEncryptionProperties encryptionProperties) : base(description, kvTags, properties, state, error, computeType, deploymentType)
        {
            ContainerResourceRequirements = containerResourceRequirements;
            ScoringUri = scoringUri;
            Location = location;
            AuthEnabled = authEnabled;
            SslEnabled = sslEnabled;
            AppInsightsEnabled = appInsightsEnabled;
            DataCollection = dataCollection;
            SslCertificate = sslCertificate;
            SslKey = sslKey;
            Cname = cname;
            PublicIp = publicIp;
            PublicFqdn = publicFqdn;
            SwaggerUri = swaggerUri;
            ModelConfigMap = modelConfigMap;
            Models = models;
            EnvironmentImageRequest = environmentImageRequest;
            VnetConfiguration = vnetConfiguration;
            EncryptionProperties = encryptionProperties;
            ComputeType = computeType;
        }

        /// <summary> The container resource requirements. </summary>
        public ContainerResourceRequirements ContainerResourceRequirements { get; set; }
        /// <summary> The Uri for sending scoring requests. </summary>
        public string ScoringUri { get; }
        /// <summary> The name of the Azure location/region. </summary>
        public string Location { get; set; }
        /// <summary> Whether or not authentication is enabled on the service. </summary>
        public bool? AuthEnabled { get; set; }
        /// <summary> Whether or not SSL is enabled. </summary>
        public bool? SslEnabled { get; set; }
        /// <summary> Whether or not Application Insights is enabled. </summary>
        public bool? AppInsightsEnabled { get; set; }
        /// <summary> Details of the data collection options specified. </summary>
        public ACIServiceResponseDataCollection DataCollection { get; set; }
        /// <summary> The public SSL certificate in PEM format to use if SSL is enabled. </summary>
        public string SslCertificate { get; set; }
        /// <summary> The public SSL key in PEM format for the certificate. </summary>
        public string SslKey { get; set; }
        /// <summary> The CName for the service. </summary>
        public string Cname { get; set; }
        /// <summary> The public IP address for the service. </summary>
        public string PublicIp { get; set; }
        /// <summary> The public Fqdn for the service. </summary>
        public string PublicFqdn { get; set; }
        /// <summary> The Uri for sending swagger requests. </summary>
        public string SwaggerUri { get; }
        /// <summary> Details on the models and configurations. </summary>
        public IReadOnlyDictionary<string, object> ModelConfigMap { get; }
        /// <summary> The list of models. </summary>
        public IList<Model> Models { get; }
        /// <summary> The Environment, models and assets used for inferencing. </summary>
        public ACIServiceResponseEnvironmentImageRequest EnvironmentImageRequest { get; set; }
        /// <summary> The virtual network configuration. </summary>
        public ACIServiceResponseVnetConfiguration VnetConfiguration { get; set; }
        /// <summary> The encryption properties. </summary>
        public ACIServiceResponseEncryptionProperties EncryptionProperties { get; set; }
    }
}
