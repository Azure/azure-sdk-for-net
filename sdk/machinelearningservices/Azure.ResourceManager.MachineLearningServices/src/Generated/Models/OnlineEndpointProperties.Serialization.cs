// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class OnlineEndpointProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsCollectionDefined(Properties))
            {
                writer.WritePropertyName("properties");
                writer.WriteStartObject();
                foreach (var item in Properties)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(TrafficRules))
            {
                writer.WritePropertyName("trafficRules");
                writer.WriteStartObject();
                foreach (var item in TrafficRules)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteNumberValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(ComputeConfiguration))
            {
                writer.WritePropertyName("computeConfiguration");
                writer.WriteObjectValue(ComputeConfiguration);
            }
            writer.WritePropertyName("authMode");
            writer.WriteStringValue(AuthMode.ToSerialString());
            if (Optional.IsDefined(Keys))
            {
                writer.WritePropertyName("keys");
                writer.WriteObjectValue(Keys);
            }
            if (Optional.IsDefined(Error))
            {
                writer.WritePropertyName("error");
                writer.WriteObjectValue(Error);
            }
            writer.WriteEndObject();
        }

        internal static OnlineEndpointProperties DeserializeOnlineEndpointProperties(JsonElement element)
        {
            Optional<string> description = default;
            Optional<IDictionary<string, string>> properties = default;
            Optional<IDictionary<string, int>> trafficRules = default;
            Optional<ComputeConfiguration> computeConfiguration = default;
            Optional<EndpointProvisioningState> provisioningState = default;
            Optional<string> endpoint = default;
            Optional<string> swaggerEndpoint = default;
            EndpointAuthModeType authMode = default;
            Optional<AuthKeys> keys = default;
            Optional<RootError> error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    properties = dictionary;
                    continue;
                }
                if (property.NameEquals("trafficRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, int> dictionary = new Dictionary<string, int>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetInt32());
                    }
                    trafficRules = dictionary;
                    continue;
                }
                if (property.NameEquals("computeConfiguration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    computeConfiguration = ComputeConfiguration.DeserializeComputeConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = property.Value.GetString().ToEndpointProvisioningState();
                    continue;
                }
                if (property.NameEquals("endpoint"))
                {
                    endpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("swaggerEndpoint"))
                {
                    swaggerEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("authMode"))
                {
                    authMode = property.Value.GetString().ToEndpointAuthModeType();
                    continue;
                }
                if (property.NameEquals("keys"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    keys = AuthKeys.DeserializeAuthKeys(property.Value);
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = RootError.DeserializeRootError(property.Value);
                    continue;
                }
            }
            return new OnlineEndpointProperties(description.Value, Optional.ToDictionary(properties), Optional.ToDictionary(trafficRules), computeConfiguration.Value, Optional.ToNullable(provisioningState), endpoint.Value, swaggerEndpoint.Value, authMode, keys.Value, error.Value);
        }
    }
}
