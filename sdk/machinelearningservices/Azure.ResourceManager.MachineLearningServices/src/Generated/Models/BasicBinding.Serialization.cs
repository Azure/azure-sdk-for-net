// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices.Models
{
    public partial class BasicBinding : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Destination))
            {
                if (Destination != null)
                {
                    writer.WritePropertyName("destination");
                    writer.WriteStringValue(Destination);
                }
                else
                {
                    writer.WriteNull("destination");
                }
            }
            if (Optional.IsDefined(Source))
            {
                if (Source != null)
                {
                    writer.WritePropertyName("source");
                    writer.WriteStringValue(Source);
                }
                else
                {
                    writer.WriteNull("source");
                }
            }
            writer.WritePropertyName("bindingType");
            writer.WriteStringValue(BindingType.ToString());
            writer.WriteEndObject();
        }

        internal static BasicBinding DeserializeBasicBinding(JsonElement element)
        {
            Optional<string> destination = default;
            Optional<string> source = default;
            BindingType bindingType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("destination"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        destination = null;
                        continue;
                    }
                    destination = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        source = null;
                        continue;
                    }
                    source = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("bindingType"))
                {
                    bindingType = new BindingType(property.Value.GetString());
                    continue;
                }
            }
            return new BasicBinding(bindingType, destination.Value, source.Value);
        }
    }
}
