// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearningServices
{
    public partial class LabelingDatasetConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AssetName))
            {
                writer.WritePropertyName("assetName");
                writer.WriteStringValue(AssetName);
            }
            if (Optional.IsDefined(DatasetVersion))
            {
                writer.WritePropertyName("datasetVersion");
                writer.WriteStringValue(DatasetVersion);
            }
            if (Optional.IsDefined(IncrementalDatasetRefreshEnabled))
            {
                writer.WritePropertyName("incrementalDatasetRefreshEnabled");
                writer.WriteBooleanValue(IncrementalDatasetRefreshEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static LabelingDatasetConfiguration DeserializeLabelingDatasetConfiguration(JsonElement element)
        {
            Optional<string> assetName = default;
            Optional<string> datasetVersion = default;
            Optional<bool> incrementalDatasetRefreshEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assetName"))
                {
                    assetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("datasetVersion"))
                {
                    datasetVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("incrementalDatasetRefreshEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    incrementalDatasetRefreshEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new LabelingDatasetConfiguration(assetName.Value, datasetVersion.Value, Optional.ToNullable(incrementalDatasetRefreshEnabled));
        }
    }
}
