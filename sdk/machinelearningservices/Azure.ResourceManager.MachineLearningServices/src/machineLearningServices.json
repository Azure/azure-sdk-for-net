{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "version": "2021-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.MachineLearningServices/operations": {
      "get": {
        "tags": [
          "Operation"
        ],
        "description": "Lists all of the available Azure Machine Learning Workspaces REST API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified machine learning workspace.",
        "operationId": "Workspaces_Get",
        "x-ms-examples": {
          "Get Workspace": {
            "$ref": "./examples/getWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Workspace": {
            "$ref": "./examples/createWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for creating or updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a machine learning workspace.",
        "operationId": "Workspaces_Delete",
        "x-ms-examples": {
          "Delete Workspace": {
            "$ref": "./examples/deleteWorkspace.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was accepted; the request was well-formed and received properly."
          },
          "204": {
            "description": "The machine learning workspace does not exist in the subscription."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "description": "Updates a machine learning workspace with the specified parameters.",
        "operationId": "Workspaces_Update",
        "x-ms-examples": {
          "Update Workspace": {
            "$ref": "./examples/updateWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/features": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all enabled features for a workspace",
        "operationId": "WorkspaceFeatures_List",
        "x-ms-examples": {
          "List Workspace features": {
            "$ref": "./examples/ListWorkspaceFeatures.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListAmlUserFeatureResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "$ref": "./examples/getWorkspacesByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ListKeys",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/listWorkspaceKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ResyncKeys",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Resync Workspace Keys": {
            "$ref": "./examples/resyncWorkspaceKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was accepted; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usage"
        ],
        "operationId": "Usages_List",
        "description": "Gets the current usage information as well as limits for AML resources for given subscription and location.",
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Usages": {
            "$ref": "./examples/ListUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes": {
      "get": {
        "tags": [
          "VirtualMachineSizes"
        ],
        "operationId": "VirtualMachineSizes_List",
        "description": "Returns supported VM Sizes in a location",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location upon which virtual-machine-sizes is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          }
        },
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/ListVMSizesResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas": {
      "post": {
        "tags": [
          "Quota"
        ],
        "operationId": "Quotas_Update",
        "description": "Update quota for each VM family in workspace.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for update quota is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaUpdateParameters"
            },
            "description": "Quota update parameters."
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UpdateWorkspaceQuotasResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-examples": {
          "update quotas": {
            "$ref": "./examples/updateQuota.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas": {
      "get": {
        "tags": [
          "Quota"
        ],
        "operationId": "Quotas_List",
        "description": "Gets the currently assigned Workspace Quotas based on VMFamily.",
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceQuotas"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List workspace quotas by VMFamily": {
            "$ref": "./examples/ListWorkspaceQuotasByVMFamily.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "x-ms-examples": {
          "Get Workspaces by subscription": {
            "$ref": "./examples/getWorkspacesBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes": {
      "get": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningCompute_ListByWorkspace",
        "description": "Gets computes in specified workspace.",
        "x-ms-examples": {
          "Get Computes": {
            "$ref": "./examples/getComputes.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/.",
            "schema": {
              "$ref": "#/definitions/PaginatedComputeResourcesList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}": {
      "get": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_Get",
        "description": "Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.",
        "x-ms-examples": {
          "Get a AKS Compute": {
            "$ref": "./examples/getAKSCompute.json"
          },
          "Get a AML Compute": {
            "$ref": "./examples/getAmlCompute.json"
          },
          "Get an ComputeInstance": {
            "$ref": "./examples/getComputeInstance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_CreateOrUpdate",
        "description": "Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create a AML Compute": {
            "$ref": "./examples/createBasicAmlCompute.json"
          },
          "Create an ComputeInstance Compute with minimal inputs": {
            "$ref": "./examples/createComputeInstanceMinimal.json"
          },
          "Create an ComputeInstance Compute": {
            "$ref": "./examples/createComputeInstance.json"
          },
          "Create AKS Compute": {
            "$ref": "./examples/createBasicAKSCompute.json"
          },
          "Create a DataFactory Compute": {
            "$ref": "./examples/createBasicDataFactoryCompute.json"
          },
          "Update a AML Compute": {
            "$ref": "./examples/updateAmlCompute.json"
          },
          "Update a AKS Compute": {
            "$ref": "./examples/updateAKSCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/ComputeDefinitionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Compute creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "201": {
            "description": "Compute creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_Update",
        "description": "Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a AmlCompute Compute": {
            "$ref": "./examples/patchAmlCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdateParameters"
            },
            "description": "Additional parameters for cluster update."
          }
        ],
        "responses": {
          "200": {
            "description": "Compute update initiated.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_Delete",
        "description": "Deletes specified Machine Learning compute.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Compute": {
            "$ref": "./examples/deleteCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/UnderlyingResourceActionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "Compute deletion initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes": {
      "post": {
        "tags": [
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_ListNodes",
        "description": "Get the details (e.g IP address, port etc) of all the compute nodes in the compute.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains the list of IP addresses.",
            "schema": {
              "$ref": "#/definitions/AmlComputeNodesInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "nodes"
        },
        "x-ms-examples": {
          "Get compute nodes information for a compute": {
            "$ref": "./examples/amlComputeListNodes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "return notebook access token and refresh token",
        "operationId": "Workspaces_ListNotebookAccessToken",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/listNotebookAccessToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookAccessTokenResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_ListKeys",
        "description": "Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).",
        "x-ms-examples": {
          "List AKS Compute Keys": {
            "$ref": "./examples/listKeysAKSCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ComputeSecrets"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/start": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_Start",
        "description": "Posts a start action to a compute instance",
        "x-ms-examples": {
          "Start ComputeInstance Compute": {
            "$ref": "./examples/startComputeInstance.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/stop": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_Stop",
        "description": "Posts a stop action to a compute instance",
        "x-ms-examples": {
          "Stop ComputeInstance Compute": {
            "$ref": "./examples/stopComputeInstance.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/restart": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "MachineLearningCompute_Restart",
        "description": "Posts a restart action to a compute instance",
        "x-ms-examples": {
          "Restart ComputeInstance Compute": {
            "$ref": "./examples/restartComputeInstance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces/skus": {
      "get": {
        "tags": [
          "WorkspaceSkus"
        ],
        "description": "Lists all skus with associated features",
        "operationId": "Workspace_ListSkus",
        "x-ms-examples": {
          "List Skus": {
            "$ref": "./examples/ListSkus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/SkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspaceGetPrivateEndpointConnection": {
            "$ref": "./examples/workspaceGetPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Put",
        "description": "Update the state of specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/workspacePutPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspaceDeletePrivateEndpointConnection": {
            "$ref": "./examples/workspaceDeletePrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByWorkspace",
        "description": "Gets the private link resources that need to be created for a workspace.",
        "x-ms-examples": {
          "WorkspaceListPrivateLinkResources": {
            "$ref": "./examples/workspaceListPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/services": {
      "get": {
        "tags": [
          "MachineLearningServices"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningService_ListByWorkspace",
        "description": "Gets services in specified workspace.",
        "x-ms-examples": {
          "Get Services": {
            "$ref": "./examples/getServices.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "$ref": "#/parameters/ModelIdParameter"
          },
          {
            "$ref": "#/parameters/ModelNameParameter"
          },
          {
            "$ref": "#/parameters/WebServiceTagParameter"
          },
          {
            "$ref": "#/parameters/WebServiceTagsParameter"
          },
          {
            "$ref": "#/parameters/WebServicePropertiesParameter"
          },
          {
            "$ref": "#/parameters/WebServiceRunIdParameter"
          },
          {
            "$ref": "#/parameters/WebServiceExpandParameter"
          },
          {
            "$ref": "#/parameters/WebServiceOrderByParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning services and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/.",
            "schema": {
              "$ref": "#/definitions/PaginatedServiceList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/services/{serviceName}": {
      "get": {
        "tags": [
          "MachineLearningServices"
        ],
        "operationId": "MachineLearningService_Get",
        "description": "Get a Service by name.",
        "x-ms-examples": {
          "Get Service": {
            "$ref": "./examples/getService.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "Set to True to include Model details.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineLearningServices"
        ],
        "operationId": "MachineLearningService_Delete",
        "description": "Delete a specific Service..",
        "x-ms-examples": {
          "Delete Service": {
            "$ref": "./examples/deleteService.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineLearningServices"
        ],
        "description": "Creates or updates service. This call will update a service if it exists. This is a nonrecoverable operation. If your intent is to create a new service, do a GET first to verify that it does not exist yet.",
        "operationId": "MachineLearningService_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Or Update service": {
            "$ref": "./examples/createOrUpdateService.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to create or update the Service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "201": {
            "description": "Service creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Notebooks_Prepare",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Prepare Notebook": {
            "$ref": "./examples/workspacePrepareNotebook.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotebookResourceInfo"
            }
          },
          "202": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "StorageAccount_ListKeys",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/listStorageAccountKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListStorageAccountKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Notebooks_ListKeys",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/listNotebookKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListNotebookKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections": {
      "get": {
        "tags": [
          "WorkspaceConnections"
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ListWorkspaceConnections": {
            "$ref": "./examples/listWorkspaceConnections.json"
          }
        },
        "operationId": "WorkspaceConnections_List",
        "description": "List all connections under a AML workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetParameter"
          },
          {
            "$ref": "#/parameters/CategoryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Workspace connections and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/.",
            "schema": {
              "$ref": "#/definitions/PaginatedWorkspaceConnectionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}": {
      "put": {
        "tags": [
          "WorkspaceConnections"
        ],
        "operationId": "WorkspaceConnections_Create",
        "description": "Add a new workspace connection.",
        "x-ms-examples": {
          "CreateWorkspaceConnection": {
            "$ref": "./examples/createWorkspaceConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The object for creating or updating a new workspace connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the workspace connection.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "WorkspaceConnections"
        ],
        "operationId": "WorkspaceConnections_Get",
        "description": "Get the detail of a workspace connection.",
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/getWorkspaceConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the detail of the linked workspace.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspaceConnections"
        ],
        "operationId": "WorkspaceConnections_Delete",
        "description": "Delete a workspace connection.",
        "x-ms-examples": {
          "DeleteWorkspaceConnection": {
            "$ref": "./examples/deleteWorkspaceConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the workspace connection."
          },
          "204": {
            "description": "Specific workspace connection not found."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "Azure subscription identifier.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "Name of the resource group in which workspace is located.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ComputeNameParameter": {
      "name": "computeName",
      "description": "Name of the Azure Machine Learning compute.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "AsyncOperationIdParameter": {
      "name": "asyncOperationId",
      "description": "Identifier of an asynchronous Azure Machine Learning compute operation.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "description": "The name of the Azure location/region.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "APIVersionParameter": {
      "in": "query",
      "name": "api-version",
      "type": "string",
      "description": "Version of Azure Machine Learning resource provider API.",
      "required": true
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skip",
      "type": "string",
      "description": "Continuation token for pagination.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "ComputeDefinitionParameter": {
      "in": "body",
      "name": "parameters",
      "description": "Payload with Machine Learning compute definition.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ComputeResource"
      },
      "x-ms-parameter-location": "method"
    },
    "ComputeTypeParameter": {
      "in": "query",
      "name": "compute-type",
      "type": "string",
      "description": "Type of compute to filter by.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "UnderlyingResourceActionParameter": {
      "in": "query",
      "name": "underlyingResourceAction",
      "type": "string",
      "description": "Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.",
      "required": true,
      "enum": [
        "Delete",
        "Detach"
      ],
      "x-ms-enum": {
        "name": "UnderlyingResourceAction",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection associated with the workspace",
      "x-ms-parameter-location": "method"
    },
    "ModelIdParameter": {
      "in": "query",
      "name": "modelId",
      "type": "string",
      "description": "The Model Id.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "ModelNameParameter": {
      "in": "query",
      "name": "modelName",
      "type": "string",
      "description": "The Model name.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServiceNameParameter": {
      "name": "serviceName",
      "description": "Name of the Azure Machine Learning service.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "WebServiceTagParameter": {
      "in": "query",
      "name": "tag",
      "type": "string",
      "description": "The object tag.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServiceCountParameter": {
      "in": "query",
      "name": "count",
      "type": "integer",
      "format": "int32",
      "description": "The number of items to retrieve in a page.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServiceTagsParameter": {
      "in": "query",
      "name": "tags",
      "type": "string",
      "description": "A set of tags with which to filter the returned services. It is a comma separated string of tags key or tags key=value Example: tagKey1,tagKey2,tagKey3=value3 .",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServicePropertiesParameter": {
      "in": "query",
      "name": "properties",
      "type": "string",
      "description": "A set of properties with which to filter the returned services. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServiceRunIdParameter": {
      "in": "query",
      "name": "runId",
      "type": "string",
      "description": "runId for model associated with service.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServiceExpandParameter": {
      "in": "query",
      "name": "expand",
      "type": "boolean",
      "description": "Set to True to include Model details.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "WebServiceOrderByParameter": {
      "in": "query",
      "name": "orderby",
      "type": "string",
      "description": "The option to order the response.",
      "required": false,
      "default": "UpdatedAtDesc",
      "enum": [
        "CreatedAtDesc",
        "CreatedAtAsc",
        "UpdatedAtDesc",
        "UpdatedAtAsc"
      ],
      "x-ms-enum": {
        "name": "OrderString",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "ConnectionName": {
      "name": "connectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Friendly name of the workspace connection",
      "x-ms-parameter-location": "method"
    },
    "TargetParameter": {
      "in": "query",
      "name": "target",
      "type": "string",
      "description": "Target of the workspace connection.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "CategoryParameter": {
      "in": "query",
      "name": "category",
      "type": "string",
      "description": "Category of the workspace connection.",
      "required": false,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Operation": {
      "description": "Azure Machine Learning workspace REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display name of operation",
          "properties": {
            "provider": {
              "description": "The resource provider name: Microsoft.MachineLearningExperimentation",
              "type": "string"
            },
            "resource": {
              "description": "The resource on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "The operation that users can perform.",
              "type": "string"
            },
            "description": {
              "description": "The description for the operation.",
              "type": "string"
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "An array of operations supported by the resource provider.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of AML workspace operations supported by the AML workspace resource provider."
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "An object that represents a machine learning workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the machine learning workspace.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "The properties of a machine learning workspace.",
      "properties": {
        "workspaceId": {
          "description": "The immutable id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty",
          "description": "The encryption settings of Azure ML workspace."
        },
        "hbiWorkspace": {
          "type": "boolean",
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
          "default": false
        },
        "serviceProvisionedResourceGroup": {
          "type": "string",
          "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace",
          "readOnly": true
        },
        "privateLinkCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of private connections in the workspace",
          "readOnly": true
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "allowPublicAccessWhenBehindVnet": {
          "type": "boolean",
          "description": "The flag to indicate whether to allow public access when behind VNet.",
          "default": false
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "The list of private endpoint connections in the workspace."
        },
        "sharedPrivateLinkResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "description": "The list of shared private link resources in this workspace."
        },
        "notebookInfo": {
          "readOnly": true,
          "$ref": "#/definitions/NotebookResourceInfo",
          "description": "The notebook info of Azure ML workspace."
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant id associated with this workspace.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "description": "The parameters for updating a machine learning workspace.",
      "properties": {
        "tags": {
          "description": "The resource tags for the machine learning workspace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the workspace."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePropertiesUpdateParameters",
          "description": "The properties that the machine learning workspace will be updated with.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspacePropertiesUpdateParameters": {
      "description": "The parameters for updating the properties of a machine learning workspace.",
      "properties": {
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace.",
          "type": "string"
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        }
      }
    },
    "AmlUserFeature": {
      "description": "Features enabled for a workspace",
      "type": "object",
      "properties": {
        "id": {
          "description": "Specifies the feature ID",
          "type": "string"
        },
        "displayName": {
          "description": "Specifies the feature name ",
          "type": "string"
        },
        "description": {
          "description": "Describes the feature for user experience",
          "type": "string"
        }
      }
    },
    "ListAmlUserFeatureResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmlUserFeature"
          },
          "description": "The list of AML user facing features."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information."
        }
      },
      "description": "The List Aml user feature operation response."
    },
    "UsageName": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "amlWorkspaceLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Region of the AML workspace in the id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of usage measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "currentValue": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The current usage of the resource."
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The maximum permitted usage of the resource."
        },
        "name": {
          "readOnly": true,
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "description": "Describes AML Resource Usage."
    },
    "ListUsagesResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list of AML resource usages."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information."
        }
      },
      "description": "The List Usages operation response."
    },
    "VirtualMachineSize": {
      "properties": {
        "name": {
          "type": "string",
          "title": "Virtual Machine size name",
          "description": "The name of the virtual machine size.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "title": "Virtual Machine family name",
          "description": "The family name of the virtual machine size.",
          "readOnly": true
        },
        "vCPUs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of vPUs",
          "description": "The number of vCPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "gpus": {
          "type": "integer",
          "format": "int32",
          "title": "Number of gPUs",
          "description": "The number of gPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "osVhdSizeMB": {
          "type": "integer",
          "format": "int32",
          "title": "OS VHD Disk size",
          "description": "The OS VHD disk size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "maxResourceVolumeMB": {
          "type": "integer",
          "format": "int32",
          "title": "Resource volume size",
          "description": "The resource volume size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "memoryGB": {
          "type": "number",
          "format": "double",
          "title": "Memory size",
          "description": "The amount of memory, in GB, supported by the virtual machine size.",
          "readOnly": true
        },
        "lowPriorityCapable": {
          "type": "boolean",
          "title": "Low priority capable",
          "description": "Specifies if the virtual machine size supports low priority VMs.",
          "readOnly": true
        },
        "premiumIO": {
          "type": "boolean",
          "title": "Premium IO supported",
          "description": "Specifies if the virtual machine size supports premium IO.",
          "readOnly": true
        },
        "estimatedVMPrices": {
          "title": "Estimated VM prices",
          "description": "The estimated price information for using a VM.",
          "$ref": "#/definitions/EstimatedVMPrices"
        }
      },
      "description": "Describes the properties of a VM size."
    },
    "EstimatedVMPrices": {
      "properties": {
        "billingCurrency": {
          "type": "string",
          "title": "Billing currency",
          "description": "Three lettered code specifying the currency of the VM price. Example: USD",
          "enum": [
            "USD"
          ],
          "x-ms-enum": {
            "name": "BillingCurrency",
            "modelAsString": true
          }
        },
        "unitOfMeasure": {
          "type": "string",
          "title": "Unit of time measure",
          "description": "The unit of time measurement for the specified VM price. Example: OneHour",
          "enum": [
            "OneHour"
          ],
          "x-ms-enum": {
            "name": "UnitOfMeasure",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstimatedVMPrice"
          },
          "title": "List of estimated VM prices.",
          "description": "The list of estimated prices for using a VM of a particular OS type, tier, etc."
        }
      },
      "required": [
        "billingCurrency",
        "unitOfMeasure",
        "values"
      ],
      "description": "The estimated price info for using a VM."
    },
    "EstimatedVMPrice": {
      "properties": {
        "retailPrice": {
          "type": "number",
          "format": "double",
          "title": "Retail price",
          "description": "The price charged for using the VM."
        },
        "osType": {
          "type": "string",
          "title": "OS type",
          "description": "Operating system type used by the VM.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "VMPriceOSType",
            "modelAsString": true
          }
        },
        "vmTier": {
          "type": "string",
          "title": "VM tier",
          "description": "The type of the VM.",
          "enum": [
            "Standard",
            "LowPriority",
            "Spot"
          ],
          "x-ms-enum": {
            "name": "VMTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "retailPrice",
        "osType",
        "vmTier"
      ],
      "description": "The estimated price info for using a VM of a particular OS type, tier, etc."
    },
    "VirtualMachineSizeListResult": {
      "properties": {
        "amlCompute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineSize"
          },
          "description": "The list of virtual machine sizes supported by AmlCompute."
        }
      },
      "description": "The List Virtual Machine size operation response."
    },
    "WorkspaceListResult": {
      "description": "The result of a request to list machine learning workspaces.",
      "properties": {
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of machine learning workspaces.",
          "type": "string"
        }
      }
    },
    "QuotaBaseProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "type": "string",
          "description": "Specifies the resource type."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      },
      "description": "The properties for Quota update or retrieval."
    },
    "QuotaUpdateParameters": {
      "properties": {
        "value": {
          "description": "The list for update quota.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaBaseProperties"
          }
        },
        "location": {
          "description": "Region of workspace quota to be updated.",
          "type": "string"
        }
      },
      "description": "Quota update parameters."
    },
    "UpdateWorkspaceQuotasResult": {
      "properties": {
        "value": {
          "description": "The list of workspace quota update result.",
          "items": {
            "$ref": "#/definitions/UpdateWorkspaceQuotas"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextLink": {
          "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The result of update workspace quota."
    },
    "UpdateWorkspaceQuotas": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "readOnly": false,
          "title": "Update Workspace Quota Status.",
          "description": "Status of update workspace quota.",
          "enum": [
            "Undefined",
            "Success",
            "Failure",
            "InvalidQuotaBelowClusterMinimum",
            "InvalidQuotaExceedsSubscriptionLimit",
            "InvalidVMFamilyName",
            "OperationNotSupportedForSku",
            "OperationNotEnabledForRegion"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        }
      },
      "description": "The properties for update Quota response."
    },
    "ResourceName": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Resource Name."
    },
    "ResourceQuota": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "amlWorkspaceLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Region of the AML workspace in the id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "name": {
          "$ref": "#/definitions/ResourceName",
          "description": "Name of the resource.",
          "readOnly": true
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      },
      "description": "The quota assigned to a resource."
    },
    "ListWorkspaceQuotas": {
      "properties": {
        "value": {
          "description": "The list of Workspace Quotas by VM Family",
          "items": {
            "$ref": "#/definitions/ResourceQuota"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextLink": {
          "description": "The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The List WorkspaceQuotasByVMFamily operation response."
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned",
            "SystemAssigned,UserAssigned",
            "UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentities",
          "description": "The user assigned identities associated with the resource."
        }
      },
      "description": "Identity for the resource."
    },
    "UserAssignedIdentities": {
      "description": "dictionary containing all the user assigned identities, with resourceId of the UAI as key.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedIdentity"
      }
    },
    "UserAssignedIdentity": {
      "description": "User Assigned Identity",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of the user assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of the user assigned identity."
        },
        "clientId": {
          "readOnly": true,
          "type": "string",
          "description": "The clientId(aka appId) of the user assigned identity."
        }
      }
    },
    "Resource": {
      "description": "Azure Resource Manager resource envelope.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the workspace."
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "readOnly": true
        }
      }
    },
    "ResourceId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource"
        }
      },
      "required": [
        "id"
      ],
      "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
      "x-ms-azure-resource": true
    },
    "ListWorkspaceKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "userStorageResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "appInsightsInstrumentationKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "containerRegistryCredentials": {
          "readOnly": true,
          "$ref": "#/definitions/RegistryListCredentialsResult"
        },
        "notebookAccessKeys": {
          "readOnly": true,
          "$ref": "#/definitions/ListNotebookKeysResult"
        }
      }
    },
    "NotebookAccessTokenResult": {
      "type": "object",
      "properties": {
        "notebookResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "hostName": {
          "readOnly": true,
          "type": "string"
        },
        "publicDns": {
          "readOnly": true,
          "type": "string"
        },
        "accessToken": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "tokenType": {
          "readOnly": true,
          "type": "string"
        },
        "expiresIn": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "scope": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string"
        },
        "username": {
          "readOnly": true,
          "type": "string"
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Password"
          }
        }
      }
    },
    "Password": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PaginatedComputeResourcesList": {
      "type": "object",
      "description": "Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of Machine Learning compute objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "description": "Machine Learning compute object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "Compute properties",
              "$ref": "#/definitions/Compute"
            }
          }
        }
      ]
    },
    "Compute": {
      "type": "object",
      "description": "Machine Learning compute object.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        },
        "computeLocation": {
          "description": "Location for the underlying compute",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the Machine Learning compute."
        },
        "createdOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the compute was created."
        },
        "modifiedOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the compute was last modified."
        },
        "resourceId": {
          "type": "string",
          "description": "ARM resource id of the underlying compute"
        },
        "provisioningErrors": {
          "type": "array",
          "description": "Errors during provisioning",
          "items": {
            "$ref": "#/definitions/MachineLearningServiceError"
          },
          "readOnly": true
        },
        "isAttachedCompute": {
          "type": "boolean",
          "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication."
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AKS": {
      "description": "A Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "description": "AKS properties",
              "properties": {
                "clusterFqdn": {
                  "description": "Cluster full qualified domain name",
                  "type": "string"
                },
                "systemServices": {
                  "type": "array",
                  "description": "System services",
                  "items": {
                    "$ref": "#/definitions/SystemService"
                  },
                  "readOnly": true
                },
                "agentCount": {
                  "description": "Number of agents",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "agentVmSize": {
                  "description": "Agent virtual machine size",
                  "type": "string"
                },
                "clusterPurpose": {
                  "description": "Intended usage of the cluster",
                  "type": "string",
                  "default": "FastProd",
                  "enum": [
                    "FastProd",
                    "DenseProd",
                    "DevTest"
                  ],
                  "x-ms-enum": {
                    "name": "ClusterPurpose",
                    "modelAsString": true
                  }
                },
                "sslConfiguration": {
                  "description": "SSL configuration",
                  "$ref": "#/definitions/SslConfiguration"
                },
                "aksNetworkingConfiguration": {
                  "description": "AKS networking configuration for vnet",
                  "$ref": "#/definitions/AksNetworkingConfiguration"
                },
                "loadBalancerType": {
                  "description": "Load Balancer Type",
                  "type": "string",
                  "default": "PublicIp",
                  "enum": [
                    "PublicIp",
                    "InternalLoadBalancer"
                  ],
                  "x-ms-enum": {
                    "name": "LoadBalancerType",
                    "modelAsString": true
                  }
                },
                "loadBalancerSubnet": {
                  "description": "Load Balancer Subnet",
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AmlCompute": {
      "description": "An Azure Machine Learning compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "description": "AML Compute properties",
              "properties": {
                "osType": {
                  "description": "Compute OS Type",
                  "type": "string",
                  "default": "Linux",
                  "enum": [
                    "Linux",
                    "Windows"
                  ],
                  "x-ms-enum": {
                    "name": "OsType",
                    "modelAsString": true
                  }
                },
                "vmSize": {
                  "description": "Virtual Machine Size",
                  "type": "string"
                },
                "vmPriority": {
                  "description": "Virtual Machine priority",
                  "type": "string",
                  "enum": [
                    "Dedicated",
                    "LowPriority"
                  ],
                  "x-ms-enum": {
                    "name": "VmPriority",
                    "modelAsString": true
                  }
                },
                "virtualMachineImage": {
                  "description": "Virtual Machine image for AML Compute - windows only",
                  "$ref": "#/definitions/VirtualMachineImage"
                },
                "isolatedNetwork": {
                  "description": "Network is isolated or not",
                  "type": "boolean"
                },
                "scaleSettings": {
                  "description": "Scale settings for AML Compute",
                  "$ref": "#/definitions/ScaleSettings"
                },
                "userAccountCredentials": {
                  "title": "User account credentials.",
                  "description": "Credentials for an administrator user account that will be created on each compute node.",
                  "$ref": "#/definitions/UserAccountCredentials"
                },
                "subnet": {
                  "title": "Subnet.",
                  "description": "Virtual network subnet resource ID the compute nodes belong to.",
                  "$ref": "#/definitions/ResourceId"
                },
                "remoteLoginPortPublicAccess": {
                  "type": "string",
                  "default": "NotSpecified",
                  "title": "Close remote Login Access Port",
                  "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.",
                  "enum": [
                    "Enabled",
                    "Disabled",
                    "NotSpecified"
                  ],
                  "x-ms-enum": {
                    "name": "remoteLoginPortPublicAccess",
                    "modelAsString": true
                  }
                },
                "allocationState": {
                  "type": "string",
                  "readOnly": true,
                  "title": "Allocation state.",
                  "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.",
                  "enum": [
                    "Steady",
                    "Resizing"
                  ],
                  "x-ms-enum": {
                    "name": "AllocationState",
                    "modelAsString": true
                  }
                },
                "allocationStateTransitionTime": {
                  "type": "string",
                  "readOnly": true,
                  "format": "date-time",
                  "title": "Allocation state transition time.",
                  "description": "The time at which the compute entered its current allocation state."
                },
                "errors": {
                  "readOnly": true,
                  "title": "Errors.",
                  "description": "Collection of errors encountered by various compute nodes during node setup.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MachineLearningServiceError"
                  }
                },
                "currentNodeCount": {
                  "type": "integer",
                  "readOnly": true,
                  "format": "int32",
                  "title": "Current node count.",
                  "description": "The number of compute nodes currently assigned to the compute."
                },
                "targetNodeCount": {
                  "type": "integer",
                  "readOnly": true,
                  "format": "int32",
                  "title": "Target node count.",
                  "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation."
                },
                "nodeStateCounts": {
                  "title": "Node state counts.",
                  "description": "Counts of various node states on the compute.",
                  "readOnly": true,
                  "$ref": "#/definitions/NodeStateCounts"
                },
                "enableNodePublicIp": {
                  "type": "boolean",
                  "default": true,
                  "title": "Enable node public IP.",
                  "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "ComputeInstance": {
      "description": "An Azure Machine Learning compute instance.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "Compute Instance properties",
              "type": "object",
              "properties": {
                "vmSize": {
                  "description": "Virtual Machine Size",
                  "type": "string"
                },
                "subnet": {
                  "title": "Subnet.",
                  "description": "Virtual network subnet resource ID the compute nodes belong to.",
                  "$ref": "#/definitions/ResourceId"
                },
                "applicationSharingPolicy": {
                  "type": "string",
                  "default": "Shared",
                  "title": "Sharing policy for applications on this compute instance",
                  "description": "Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.",
                  "enum": [
                    "Personal",
                    "Shared"
                  ],
                  "x-ms-enum": {
                    "name": "applicationSharingPolicy",
                    "modelAsString": true
                  }
                },
                "sshSettings": {
                  "description": "Specifies policy and settings for SSH access.",
                  "$ref": "#/definitions/ComputeInstanceSshSettings"
                },
                "connectivityEndpoints": {
                  "readOnly": true,
                  "description": "Describes all connectivity endpoints available for this ComputeInstance.",
                  "$ref": "#/definitions/ComputeInstanceConnectivityEndpoints"
                },
                "applications": {
                  "type": "array",
                  "readOnly": true,
                  "description": "Describes available applications and their endpoints on this ComputeInstance.",
                  "items": {
                    "$ref": "#/definitions/ComputeInstanceApplication"
                  }
                },
                "createdBy": {
                  "readOnly": true,
                  "description": "Describes information on user who created this ComputeInstance.",
                  "$ref": "#/definitions/ComputeInstanceCreatedBy"
                },
                "errors": {
                  "readOnly": true,
                  "title": "Errors.",
                  "description": "Collection of errors encountered on this ComputeInstance.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MachineLearningServiceError"
                  }
                },
                "state": {
                  "description": "The current state of this ComputeInstance.",
                  "$ref": "#/definitions/ComputeInstanceState",
                  "readOnly": true
                },
                "computeInstanceAuthorizationType": {
                  "type": "string",
                  "title": "Compute Instance Authorization type.",
                  "description": "The Compute Instance Authorization type. Available values are personal (default).",
                  "default": "personal",
                  "enum": [
                    "personal"
                  ],
                  "x-ms-enum": {
                    "name": "ComputeInstanceAuthorizationType",
                    "modelAsString": true
                  }
                },
                "personalComputeInstanceSettings": {
                  "title": "Personal Compute Instance settings.",
                  "description": "Settings for a personal compute instance.",
                  "$ref": "#/definitions/PersonalComputeInstanceSettings"
                },
                "setupScripts": {
                  "description": "Details of customized scripts to execute for setting up the cluster.",
                  "$ref": "#/definitions/SetupScripts"
                },
                "lastOperation": {
                  "description": "The last operation on ComputeInstance.",
                  "$ref": "#/definitions/ComputeInstanceLastOperation",
                  "readOnly": true
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "ComputeInstance"
    },
    "VirtualMachine": {
      "description": "A Machine Learning compute based on Azure Virtual Machines.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "virtualMachineSize": {
                  "description": "Virtual Machine size",
                  "type": "string"
                },
                "sshPort": {
                  "description": "Port open for ssh connections.",
                  "type": "integer",
                  "format": "int32"
                },
                "address": {
                  "description": "Public IP address of the virtual machine.",
                  "type": "string"
                },
                "administratorAccount": {
                  "description": "Admin credentials for virtual machine",
                  "$ref": "#/definitions/VirtualMachineSshCredentials"
                },
                "isNotebookInstanceCompute": {
                  "description": "Indicates whether this compute will be used for running notebooks.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "HDInsight": {
      "description": "A HDInsight compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "sshPort": {
                  "description": "Port open for ssh connections on the master node of the cluster.",
                  "type": "integer",
                  "format": "int32"
                },
                "address": {
                  "description": "Public IP address of the master node of the cluster.",
                  "type": "string"
                },
                "administratorAccount": {
                  "description": "Admin credentials for master node of the cluster",
                  "$ref": "#/definitions/VirtualMachineSshCredentials"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "HDInsight"
    },
    "DataFactory": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "DataFactory"
    },
    "Databricks": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "databricksAccessToken": {
                  "description": "Databricks access token",
                  "type": "string"
                },
                "workspaceUrl": {
                  "description": "Workspace Url",
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "DataLakeAnalytics": {
      "description": "A DataLakeAnalytics compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "dataLakeStoreAccountName": {
                  "description": "DataLake Store Account Name",
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "DataLakeAnalytics"
    },
    "SynapseSpark": {
      "description": "A SynapseSpark compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/SynapseSparkPoolProperties"
        }
      ],
      "x-ms-discriminator-value": "SynapseSpark"
    },
    "ServicePrincipalCredentials": {
      "type": "object",
      "description": "Service principal credentials.",
      "properties": {
        "clientId": {
          "description": "Client Id",
          "type": "string"
        },
        "clientSecret": {
          "description": "Client secret",
          "type": "string"
        }
      },
      "required": [
        "clientId",
        "clientSecret"
      ]
    },
    "SystemService": {
      "type": "object",
      "description": "A system service running on a compute.",
      "properties": {
        "systemServiceType": {
          "description": "The type of this system service.",
          "readOnly": true,
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address",
          "readOnly": true
        },
        "version": {
          "description": "The version for this type.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SslConfiguration": {
      "type": "object",
      "description": "The ssl configuration for scoring",
      "properties": {
        "status": {
          "description": "Enable or disable ssl for scoring",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Auto"
          ]
        },
        "cert": {
          "description": "Cert data",
          "type": "string"
        },
        "key": {
          "description": "Key data",
          "type": "string"
        },
        "cname": {
          "description": "CNAME of the cert",
          "type": "string"
        },
        "leafDomainLabel": {
          "description": "Leaf domain label of public endpoint",
          "type": "string"
        },
        "overwriteExistingDomain": {
          "description": "Indicates whether to overwrite existing domain label.",
          "type": "boolean"
        }
      }
    },
    "AksNetworkingConfiguration": {
      "type": "object",
      "description": "Advance configuration for AKS networking",
      "properties": {
        "subnetId": {
          "description": "Virtual network subnet resource ID the compute nodes belong to",
          "type": "string"
        },
        "serviceCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "type": "string"
        },
        "dnsServiceIP": {
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "type": "string"
        },
        "dockerBridgeCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
          "type": "string"
        }
      }
    },
    "UserAccountCredentials": {
      "properties": {
        "adminUserName": {
          "type": "string",
          "title": "User name.",
          "description": "Name of the administrator user account which can be used to SSH to nodes."
        },
        "adminUserSshPublicKey": {
          "type": "string",
          "title": "SSH public key.",
          "description": "SSH public key of the administrator user account."
        },
        "adminUserPassword": {
          "type": "string",
          "title": "Password.",
          "description": "Password of the administrator user account."
        }
      },
      "required": [
        "adminUserName"
      ],
      "description": "Settings for user account that gets created on each on the nodes of a compute."
    },
    "ScaleSettings": {
      "type": "object",
      "description": "scale settings for AML Compute",
      "properties": {
        "maxNodeCount": {
          "description": "Max number of nodes to use",
          "type": "integer",
          "format": "int32"
        },
        "minNodeCount": {
          "description": "Min number of nodes to use",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "nodeIdleTimeBeforeScaleDown": {
          "type": "string",
          "format": "duration",
          "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format."
        }
      },
      "required": [
        "maxNodeCount"
      ]
    },
    "VirtualMachineImage": {
      "type": "object",
      "description": "Virtual Machine image for Windows AML Compute",
      "properties": {
        "id": {
          "description": "Virtual Machine image path",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "NodeStateCounts": {
      "properties": {
        "idleNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Idle node count.",
          "description": "Number of compute nodes in idle state."
        },
        "runningNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Running node count.",
          "description": "Number of compute nodes which are running jobs."
        },
        "preparingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preparing node count.",
          "description": "Number of compute nodes which are being prepared."
        },
        "unusableNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Unusable node count.",
          "description": "Number of compute nodes which are in unusable state."
        },
        "leavingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Leaving node count.",
          "description": "Number of compute nodes which are leaving the amlCompute."
        },
        "preemptedNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preempted node count.",
          "description": "Number of compute nodes which are in preempted state."
        }
      },
      "description": "Counts of various compute node states on the amlCompute."
    },
    "ClusterUpdateProperties": {
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings",
          "title": "Scale settings.",
          "description": "Desired scale settings for the amlCompute."
        }
      },
      "description": "The properties of a amlCompute that need to be updated."
    },
    "ClusterUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterUpdateProperties",
          "description": "The properties of the amlCompute."
        }
      },
      "description": "AmlCompute update parameters."
    },
    "ComputeNodesInformation": {
      "type": "object",
      "description": "Compute nodes information related to a Machine Learning compute. Might differ for every type of compute.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The continuation token."
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AmlComputeNodesInformation": {
      "description": "Compute node information related to a AmlCompute.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeNodesInformation"
        },
        {
          "type": "object",
          "properties": {
            "nodes": {
              "readOnly": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AmlComputeNodeInformation"
              },
              "description": "The collection of returned AmlCompute nodes details."
            },
            "nextLink": {
              "readOnly": true,
              "type": "string",
              "description": "The continuation token."
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "AmlComputeNodeInformation": {
      "description": "Compute node information related to a AmlCompute.",
      "properties": {
        "nodeId": {
          "readOnly": true,
          "type": "string",
          "title": "Node ID.",
          "description": "ID of the compute node."
        },
        "privateIpAddress": {
          "readOnly": true,
          "type": "string",
          "title": "Private IP address.",
          "description": "Private IP address of the compute node."
        },
        "publicIpAddress": {
          "readOnly": true,
          "type": "string",
          "title": "Public IP address.",
          "description": "Public IP address of the compute node."
        },
        "port": {
          "readOnly": true,
          "type": "number",
          "format": "int32",
          "title": "Port.",
          "description": "SSH port number of the node."
        },
        "nodeState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "idle",
            "running",
            "preparing",
            "unusable",
            "leaving",
            "preempted"
          ],
          "description": "State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.",
          "x-ms-enum": {
            "name": "nodeState",
            "modelAsString": true
          }
        },
        "runId": {
          "readOnly": true,
          "type": "string",
          "title": "Run ID.",
          "description": "ID of the Experiment running on the node, if any else null."
        }
      },
      "x-ms-discriminator-value": "AmlCompute"
    },
    "VirtualMachineSshCredentials": {
      "type": "object",
      "description": "Admin credentials for virtual machine",
      "properties": {
        "username": {
          "description": "Username of admin account",
          "type": "string"
        },
        "password": {
          "description": "Password of admin account",
          "type": "string"
        },
        "publicKeyData": {
          "description": "Public key data",
          "type": "string"
        },
        "privateKeyData": {
          "description": "Private key data",
          "type": "string"
        }
      }
    },
    "ComputeSecrets": {
      "type": "object",
      "description": "Secrets related to a Machine Learning compute. Might differ for every type of compute.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "type": "object",
          "properties": {
            "userKubeConfig": {
              "type": "string",
              "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
            },
            "adminKubeConfig": {
              "type": "string",
              "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
            },
            "imagePullSecretName": {
              "type": "string",
              "description": "Image registry pull secret."
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "VirtualMachineSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "type": "object",
          "properties": {
            "administratorAccount": {
              "description": "Admin credentials for virtual machine.",
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "DatabricksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on Databricks.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "type": "object",
          "properties": {
            "databricksAccessToken": {
              "description": "access token for databricks account.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "ComputeType": {
      "type": "string",
      "description": "The type of compute",
      "enum": [
        "AKS",
        "AmlCompute",
        "ComputeInstance",
        "DataFactory",
        "VirtualMachine",
        "HDInsight",
        "Databricks",
        "DataLakeAnalytics",
        "SynapseSpark"
      ],
      "x-ms-enum": {
        "name": "ComputeType",
        "modelAsString": true
      }
    },
    "MachineLearningServiceError": {
      "type": "object",
      "description": "Wrapper for error response to follow ARM guidelines.",
      "properties": {
        "error": {
          "description": "The error response.",
          "$ref": "#/definitions/ErrorResponse",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of error detail objects.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "Error detail information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "SKUCapability": {
      "description": "Features/user capabilities associated with the sku",
      "type": "object",
      "properties": {
        "name": {
          "description": "Capability/Feature ID",
          "type": "string"
        },
        "value": {
          "description": "Details about the feature/capability",
          "type": "string"
        }
      }
    },
    "ResourceSkuLocationInfo": {
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Location of the SKU"
        },
        "zones": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of availability zones where the SKU is supported."
        },
        "zoneDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSkuZoneDetails"
          },
          "description": "Details of capabilities available to a SKU in specific zones."
        }
      }
    },
    "ResourceSkuZoneDetails": {
      "properties": {
        "name": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The set of zones that the SKU is available in with the specified capabilities."
        },
        "capabilities": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SKUCapability"
          },
          "description": "A list of capabilities that are available for the SKU in the specified list of zones."
        }
      },
      "description": "Describes The zonal capabilities of a SKU."
    },
    "WorkspaceSku": {
      "description": "Describes Workspace Sku details and features",
      "type": "object",
      "properties": {
        "locations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.)."
        },
        "locationInfo": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceSkuLocationInfo"
          },
          "description": "A list of locations and availability zones in those locations where the SKU is available."
        },
        "tier": {
          "description": "Sku Tier like Basic or Enterprise",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "capabilities": {
          "description": "List of features/user capabilities associated with the sku",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SKUCapability"
          },
          "readOnly": true
        },
        "restrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Restriction"
          },
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      }
    },
    "Restriction": {
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of restrictions. As of now only possible value for this is location."
        },
        "values": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
        },
        "reasonCode": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "NotAvailableForRegion",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ReasonCode",
            "modelAsString": true
          },
          "description": "The reason for the restriction."
        }
      },
      "description": "The restriction because of which SKU cannot be used."
    },
    "SkuListResult": {
      "description": "List of skus with features",
      "type": "object",
      "properties": {
        "value": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceSku"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Workspace Skus. Call ListNext() with this URI to fetch the next page of Workspace Skus"
        }
      }
    },
    "Sku": {
      "description": "Sku of the resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the sku",
          "type": "string"
        },
        "tier": {
          "description": "Tier of the sku like Basic or Enterprise",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnection": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateEndpoint": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Private Endpoint"
        },
        "subnetArmId": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Subnet resource that private endpoint links to"
        }
      },
      "description": "The Private Endpoint resource."
    },
    "PrivateLinkServiceConnectionState": {
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources"
    },
    "PrivateLinkResource": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link resource."
    },
    "SharedPrivateLinkResource": {
      "properties": {
        "name": {
          "description": "Unique name of the private link.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperty",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "properties": {
        "privateLinkResourceId": {
          "description": "The resource id that private link links to.",
          "type": "string"
        },
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requestMessage": {
          "description": "Request message.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "Properties of a shared private link resource."
    },
    "EncryptionProperty": {
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for the workspace.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "identity": {
          "$ref": "#/definitions/IdentityForCmk",
          "description": "The identity that will be used to access the key vault for encryption at rest."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Customer Key vault properties."
        }
      },
      "required": [
        "status",
        "keyVaultProperties"
      ],
      "type": "object"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyVaultArmId": {
          "description": "The ArmId of the keyVault where the customer owned encryption key is present.",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identityClientId": {
          "description": "For future use - The client id of the identity which will be used to access key vault.",
          "type": "string"
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ],
      "type": "object"
    },
    "IdentityForCmk": {
      "description": "Identity that will be used to access key vault for encryption at rest",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "description": "The ArmId of the user assigned identity that will be used to access the customer managed key vault",
          "type": "string"
        }
      }
    },
    "ServiceResource": {
      "type": "object",
      "description": "Machine Learning service object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "Service properties",
              "$ref": "#/definitions/ServiceResponseBase"
            }
          }
        }
      ]
    },
    "SystemData": {
      "description": "Read only system data",
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "An identifier for the identity that created the resource"
        },
        "createdByType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity that created the resource"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "An identifier for the identity that last modified the resource"
        },
        "lastModifiedByType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity that last modified the resource"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "IdentityType": {
      "description": "The type of identity that creates/modifies resources",
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "ServiceResponseBase": {
      "description": "The base service response. The correct inherited response based on computeType will be returned (ex. ACIServiceResponse)",
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "The service description.",
          "type": "string"
        },
        "kvTags": {
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The service property dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "The current state of the service.",
          "enum": [
            "Transitioning",
            "Healthy",
            "Unhealthy",
            "Failed",
            "Unschedulable"
          ],
          "type": "string",
          "example": "Healthy",
          "x-ms-enum": {
            "name": "WebServiceState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "error": {
          "description": "The error details.",
          "allOf": [
            {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          ],
          "readOnly": true
        },
        "computeType": {
          "description": "The compute environment type for the service.",
          "enum": [
            "ACI",
            "AKS"
          ],
          "type": "string",
          "example": "AKS",
          "x-ms-enum": {
            "name": "ComputeEnvironmentType",
            "modelAsString": true
          }
        },
        "deploymentType": {
          "description": "The deployment type for the service.",
          "enum": [
            "GRPCRealtimeEndpoint",
            "HttpRealtimeEndpoint",
            "Batch"
          ],
          "type": "string",
          "example": "HttpRealtimeEndpoint",
          "x-ms-enum": {
            "name": "DeploymentType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "computeType"
    },
    "PaginatedServiceList": {
      "type": "object",
      "description": "Paginated list of Machine Learning service objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "description": "An array of Machine Learning compute objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/ServiceResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "ACIServiceResponse": {
      "description": "The response for an ACI service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "containerResourceRequirements": {
              "description": "The container resource requirements.",
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            "scoringUri": {
              "description": "The Uri for sending scoring requests.",
              "type": "string",
              "readOnly": true
            },
            "location": {
              "description": "The name of the Azure location/region.",
              "type": "string"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled on the service.",
              "type": "boolean"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "dataCollection": {
              "description": "Details of the data collection options specified.",
              "allOf": [
                {
                  "$ref": "#/definitions/ModelDataCollection"
                }
              ]
            },
            "sslCertificate": {
              "description": "The public SSL certificate in PEM format to use if SSL is enabled.",
              "type": "string"
            },
            "sslKey": {
              "description": "The public SSL key in PEM format for the certificate.",
              "type": "string"
            },
            "cname": {
              "description": "The CName for the service.",
              "type": "string"
            },
            "publicIp": {
              "description": "The public IP address for the service.",
              "type": "string"
            },
            "publicFqdn": {
              "description": "The public Fqdn for the service.",
              "type": "string"
            },
            "swaggerUri": {
              "description": "The Uri for sending swagger requests.",
              "type": "string",
              "readOnly": true
            },
            "modelConfigMap": {
              "description": "Details on the models and configurations.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "readOnly": true
            },
            "models": {
              "description": "The list of models.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            },
            "environmentImageRequest": {
              "description": "The Environment, models and assets used for inferencing.",
              "allOf": [
                {
                  "$ref": "#/definitions/EnvironmentImageResponse"
                }
              ]
            },
            "vnetConfiguration": {
              "description": "The virtual network configuration.",
              "allOf": [
                {
                  "$ref": "#/definitions/VnetConfiguration"
                }
              ]
            },
            "encryptionProperties": {
              "description": "The encryption properties.",
              "allOf": [
                {
                  "$ref": "#/definitions/EncryptionProperties"
                }
              ]
            }
          }
        }
      ],
      "x-ms-discriminator-value": "ACI"
    },
    "ContainerResourceRequirements": {
      "description": "The resource requirements for the container (cpu and memory).",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "The minimum amount of CPU cores to be used by the container. More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 4
        },
        "cpuLimit": {
          "format": "double",
          "description": "The maximum amount of CPU cores allowed to be used by the container. More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 4
        },
        "memoryInGB": {
          "format": "double",
          "description": "The minimum amount of memory (in GB) to be used by the container. More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 64
        },
        "memoryInGBLimit": {
          "format": "double",
          "description": "The maximum amount of memory (in GB) allowed to be used by the container. More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 64
        },
        "gpu": {
          "format": "int32",
          "description": "The number of GPU cores in the container.",
          "type": "integer"
        },
        "fpga": {
          "format": "int32",
          "description": "The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.",
          "type": "integer"
        }
      }
    },
    "ModelDataCollection": {
      "description": "The Model data collection properties.",
      "type": "object",
      "properties": {
        "eventHubEnabled": {
          "description": "Option for enabling/disabling Event Hub.",
          "type": "boolean"
        },
        "storageEnabled": {
          "description": "Option for enabling/disabling storage.",
          "type": "boolean"
        }
      }
    },
    "VnetConfiguration": {
      "type": "object",
      "properties": {
        "vnetName": {
          "description": "The name of the virtual network.",
          "type": "string"
        },
        "subnetName": {
          "description": "The name of the virtual network subnet.",
          "type": "string"
        }
      }
    },
    "EncryptionProperties": {
      "type": "object",
      "properties": {
        "vaultBaseUrl": {
          "description": "vault base Url",
          "type": "string"
        },
        "keyName": {
          "description": "Encryption Key name",
          "type": "string"
        },
        "keyVersion": {
          "description": "Encryption Key Version",
          "type": "string"
        }
      },
      "required": [
        "vaultBaseUrl",
        "keyName",
        "keyVersion"
      ]
    },
    "Model": {
      "description": "An Azure Machine Learning Model.",
      "required": [
        "mimeType",
        "name",
        "url"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The Model Id.",
          "type": "string",
          "example": "sklearn_mnist:1"
        },
        "name": {
          "description": "The Model name.",
          "type": "string",
          "example": "sklearn_mnist"
        },
        "framework": {
          "description": "The Model framework.",
          "type": "string"
        },
        "frameworkVersion": {
          "description": "The Model framework version.",
          "type": "string"
        },
        "version": {
          "format": "int64",
          "description": "The Model version assigned by Model Management Service.",
          "type": "integer",
          "example": 1
        },
        "datasets": {
          "description": "The list of datasets associated with the model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        },
        "url": {
          "description": "The URL of the Model. Usually a SAS URL.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml",
          "type": "string"
        },
        "description": {
          "description": "The Model description text.",
          "type": "string",
          "example": "A mnist model, first version."
        },
        "createdTime": {
          "format": "date-time",
          "description": "The Model creation time (UTC).",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "The Model last modified time (UTC).",
          "type": "string"
        },
        "unpack": {
          "description": "Indicates whether we need to unpack the Model during docker Image creation.",
          "type": "boolean"
        },
        "parentModelId": {
          "description": "The Parent Model Id.",
          "type": "string",
          "example": "sklearn_mnist_root:1"
        },
        "runId": {
          "description": "The RunId that created this model.",
          "type": "string"
        },
        "experimentName": {
          "description": "The name of the experiment where this model was created.",
          "type": "string"
        },
        "kvTags": {
          "description": "The Model tag dictionary. Items are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The Model property dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "derivedModelIds": {
          "description": "Models derived from this model",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleInputData": {
          "description": "Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}",
          "type": "string"
        },
        "sampleOutputData": {
          "description": "Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}",
          "type": "string"
        },
        "resourceRequirements": {
          "description": "Resource requirements for the model",
          "$ref": "#/definitions/ContainerResourceRequirements"
        }
      }
    },
    "EnvironmentImageRequest": {
      "description": "Request to create a Docker image based on Environment.",
      "type": "object",
      "properties": {
        "driverProgram": {
          "description": "The name of the driver file.",
          "type": "string"
        },
        "assets": {
          "description": "The list of assets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageAsset"
          }
        },
        "modelIds": {
          "description": "The list of model Ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "models": {
          "description": "The list of models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        },
        "environment": {
          "description": "The details of the AZURE ML environment.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelEnvironmentDefinition"
            }
          ]
        },
        "environmentReference": {
          "description": "The unique identifying details of the AZURE ML environment.",
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentReference"
            }
          ]
        }
      }
    },
    "EnvironmentImageResponse": {
      "description": "Request to create a Docker image based on Environment.",
      "type": "object",
      "properties": {
        "driverProgram": {
          "description": "The name of the driver file.",
          "type": "string"
        },
        "assets": {
          "description": "The list of assets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageAsset"
          }
        },
        "modelIds": {
          "description": "The list of model Ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "models": {
          "description": "The list of models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        },
        "environment": {
          "description": "The details of the AZURE ML environment.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelEnvironmentDefinitionResponse"
            }
          ]
        },
        "environmentReference": {
          "description": "The unique identifying details of the AZURE ML environment.",
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentReference"
            }
          ]
        }
      }
    },
    "ImageAsset": {
      "description": "An Image asset.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Asset Id.",
          "type": "string"
        },
        "mimeType": {
          "description": "The mime type.",
          "type": "string"
        },
        "url": {
          "description": "The Url of the Asset.",
          "type": "string"
        },
        "unpack": {
          "description": "Whether the Asset is unpacked.",
          "type": "boolean"
        }
      }
    },
    "ModelEnvironmentDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the environment.",
          "type": "string",
          "example": "mydevenvironment"
        },
        "version": {
          "description": "The environment version.",
          "type": "string",
          "example": "1"
        },
        "python": {
          "description": "Settings for a Python environment.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelPythonSection"
            }
          ]
        },
        "environmentVariables": {
          "description": "Definition of environment variables to be defined in the environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "docker": {
          "description": "The definition of a Docker container.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelDockerSection"
            }
          ]
        },
        "spark": {
          "description": "The configuration for a Spark environment.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelSparkSection"
            }
          ]
        },
        "r": {
          "description": "Settings for a R environment.",
          "allOf": [
            {
              "$ref": "#/definitions/RSection"
            }
          ]
        },
        "inferencingStackVersion": {
          "description": "The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: \"latest\".",
          "type": "string",
          "example": "latest"
        }
      }
    },
    "ModelEnvironmentDefinitionResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the environment.",
          "type": "string",
          "example": "mydevenvironment"
        },
        "version": {
          "description": "The environment version.",
          "type": "string",
          "example": "1"
        },
        "python": {
          "description": "Settings for a Python environment.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelPythonSection"
            }
          ]
        },
        "environmentVariables": {
          "description": "Definition of environment variables to be defined in the environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "docker": {
          "description": "The definition of a Docker container.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelDockerSectionResponse"
            }
          ]
        },
        "spark": {
          "description": "The configuration for a Spark environment.",
          "allOf": [
            {
              "$ref": "#/definitions/ModelSparkSection"
            }
          ]
        },
        "r": {
          "description": "Settings for a R environment.",
          "allOf": [
            {
              "$ref": "#/definitions/RSectionResponse"
            }
          ]
        },
        "inferencingStackVersion": {
          "description": "The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: \"latest\".",
          "type": "string",
          "example": "latest"
        }
      }
    },
    "EnvironmentReference": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the environment.",
          "type": "string"
        },
        "version": {
          "description": "Version of the environment.",
          "type": "string"
        }
      }
    },
    "ModelPythonSection": {
      "type": "object",
      "properties": {
        "interpreterPath": {
          "description": "The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.",
          "type": "string"
        },
        "userManagedDependencies": {
          "description": "True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.",
          "type": "boolean"
        },
        "condaDependencies": {
          "description": "A JObject containing Conda dependencies.",
          "type": "object"
        },
        "baseCondaEnvironment": {
          "type": "string"
        }
      }
    },
    "ContainerRegistry": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "x-ms-secret": true
        },
        "password": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ContainerRegistryResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "ModelDockerSection": {
      "type": "object",
      "properties": {
        "baseImage": {
          "description": "Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.",
          "type": "string",
          "example": "ubuntu:latest"
        },
        "baseDockerfile": {
          "description": "Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.",
          "type": "string",
          "example": "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
        },
        "baseImageRegistry": {
          "description": "Image registry that contains the base image.",
          "allOf": [
            {
              "$ref": "#/definitions/ContainerRegistry"
            }
          ]
        }
      }
    },
    "ModelDockerSectionResponse": {
      "type": "object",
      "properties": {
        "baseImage": {
          "description": "Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.",
          "type": "string",
          "example": "ubuntu:latest"
        },
        "baseDockerfile": {
          "description": "Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.",
          "type": "string",
          "example": "FROM ubuntu:latest\r\nRUN echo \"Hello world!\""
        },
        "baseImageRegistry": {
          "description": "Image registry that contains the base image.",
          "allOf": [
            {
              "$ref": "#/definitions/ContainerRegistryResponse"
            }
          ]
        }
      }
    },
    "SparkMavenPackage": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "artifact": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ModelSparkSection": {
      "type": "object",
      "properties": {
        "repositories": {
          "description": "The list of spark repositories.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "packages": {
          "description": "The Spark packages to use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SparkMavenPackage"
          }
        },
        "precachePackages": {
          "description": "Whether to precache the packages.",
          "type": "boolean"
        }
      }
    },
    "RCranPackage": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The package name.",
          "type": "string"
        },
        "repository": {
          "description": "The repository name.",
          "type": "string"
        }
      }
    },
    "RGitHubPackage": {
      "type": "object",
      "properties": {
        "repository": {
          "description": "Repository address in the format username/repo[/subdir][@ref|#pull].",
          "type": "string"
        },
        "authToken": {
          "description": "Personal access token to install from a private repo",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "RGitHubPackageResponse": {
      "type": "object",
      "properties": {
        "repository": {
          "description": "Repository address in the format username/repo[/subdir][@ref|#pull].",
          "type": "string"
        }
      }
    },
    "RSection": {
      "type": "object",
      "properties": {
        "rVersion": {
          "description": "The version of R to be installed",
          "type": "string"
        },
        "userManaged": {
          "description": "Indicates whether the environment is managed by user or by AzureML.",
          "type": "boolean"
        },
        "rscriptPath": {
          "description": "The Rscript path to use if an environment build is not required.\r\nThe path specified gets used to call the user script.",
          "type": "string"
        },
        "snapshotDate": {
          "description": "Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. \"2019-04-17\"",
          "type": "string"
        },
        "cranPackages": {
          "description": "The CRAN packages to use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RCranPackage"
          }
        },
        "gitHubPackages": {
          "description": "The packages directly from GitHub.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RGitHubPackage"
          }
        },
        "customUrlPackages": {
          "description": "The packages from custom urls.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bioConductorPackages": {
          "description": "The packages from Bioconductor.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RSectionResponse": {
      "type": "object",
      "properties": {
        "rVersion": {
          "description": "The version of R to be installed",
          "type": "string"
        },
        "userManaged": {
          "description": "Indicates whether the environment is managed by user or by AzureML.",
          "type": "boolean"
        },
        "rscriptPath": {
          "description": "The Rscript path to use if an environment build is not required.\r\nThe path specified gets used to call the user script.",
          "type": "string"
        },
        "snapshotDate": {
          "description": "Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. \"2019-04-17\"",
          "type": "string"
        },
        "cranPackages": {
          "description": "The CRAN packages to use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RCranPackage"
          }
        },
        "gitHubPackages": {
          "description": "The packages directly from GitHub.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RGitHubPackageResponse"
          }
        },
        "customUrlPackages": {
          "description": "The packages from custom urls.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bioConductorPackages": {
          "description": "The packages from Bioconductor.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DatasetReference": {
      "description": "The dataset reference object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the dataset reference.",
          "type": "string"
        },
        "id": {
          "description": "The id of the dataset reference.",
          "type": "string"
        }
      }
    },
    "AKSVariantResponse": {
      "description": "The response for an AKS variant.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "isDefault": {
              "description": "Is this the default variant.",
              "type": "boolean"
            },
            "trafficPercentile": {
              "format": "float",
              "description": "The amount of traffic variant receives.",
              "type": "number",
              "example": 100
            },
            "type": {
              "description": "The type of the variant.",
              "enum": [
                "Control",
                "Treatment"
              ],
              "type": "string",
              "example": "Control",
              "x-ms-enum": {
                "name": "VariantType",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "AutoScaler": {
      "description": "The Auto Scaler properties.",
      "type": "object",
      "properties": {
        "autoscaleEnabled": {
          "description": "Option to enable/disable auto scaling.",
          "type": "boolean"
        },
        "minReplicas": {
          "format": "int32",
          "description": "The minimum number of replicas to scale down to.",
          "type": "integer",
          "example": 1
        },
        "maxReplicas": {
          "format": "int32",
          "description": "The maximum number of replicas in the cluster.",
          "type": "integer",
          "example": 3
        },
        "targetUtilization": {
          "format": "int32",
          "description": "The target utilization percentage to use for determining whether to scale the cluster.",
          "type": "integer",
          "example": 70
        },
        "refreshPeriodInSeconds": {
          "format": "int32",
          "description": "The amount of seconds to wait between auto scale updates.",
          "type": "integer",
          "example": 120
        }
      }
    },
    "AKSReplicaStatus": {
      "type": "object",
      "properties": {
        "desiredReplicas": {
          "format": "int32",
          "description": "The desired number of replicas.",
          "type": "integer",
          "example": 2
        },
        "updatedReplicas": {
          "format": "int32",
          "description": "The number of updated replicas.",
          "type": "integer",
          "example": 1
        },
        "availableReplicas": {
          "format": "int32",
          "description": "The number of available replicas.",
          "type": "integer",
          "example": 1
        },
        "error": {
          "description": "The error details.",
          "allOf": [
            {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          ]
        }
      }
    },
    "LivenessProbeRequirements": {
      "description": "The liveness probe requirements.",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "format": "int32",
          "description": "The number of failures to allow before returning an unhealthy status.",
          "type": "integer"
        },
        "successThreshold": {
          "format": "int32",
          "description": "The number of successful probes before returning a healthy status.",
          "type": "integer"
        },
        "timeoutSeconds": {
          "format": "int32",
          "description": "The probe timeout in seconds.",
          "type": "integer"
        },
        "periodSeconds": {
          "format": "int32",
          "description": "The length of time between probes in seconds.",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "description": "The delay before the first probe in seconds.",
          "type": "integer"
        }
      }
    },
    "AKSServiceResponse": {
      "description": "The response for an AKS service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AKSVariantResponse"
        },
        {
          "type": "object",
          "properties": {
            "models": {
              "description": "The list of models.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            },
            "containerResourceRequirements": {
              "description": "The container resource requirements.",
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            "maxConcurrentRequestsPerContainer": {
              "format": "int32",
              "description": "The maximum number of concurrent requests per container.",
              "type": "integer",
              "example": 100
            },
            "maxQueueWaitMs": {
              "format": "int32",
              "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)",
              "type": "integer",
              "example": 250
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The Kubernetes namespace of the deployment.",
              "type": "string",
              "example": "default"
            },
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas on the cluster.",
              "type": "integer",
              "example": 1
            },
            "dataCollection": {
              "description": "Details of the data collection options specified.",
              "allOf": [
                {
                  "$ref": "#/definitions/ModelDataCollection"
                }
              ]
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "autoScaler": {
              "description": "The auto scaler properties.",
              "allOf": [
                {
                  "$ref": "#/definitions/AutoScaler"
                }
              ]
            },
            "scoringUri": {
              "description": "The Uri for sending scoring requests.",
              "type": "string",
              "readOnly": true
            },
            "deploymentStatus": {
              "description": "The deployment status.",
              "readOnly": true,
              "allOf": [
                {
                  "$ref": "#/definitions/AKSReplicaStatus"
                }
              ]
            },
            "scoringTimeoutMs": {
              "format": "int32",
              "description": "The scoring timeout in milliseconds.",
              "type": "integer",
              "example": 100
            },
            "livenessProbeRequirements": {
              "description": "The liveness probe requirements.",
              "allOf": [
                {
                  "$ref": "#/definitions/LivenessProbeRequirements"
                }
              ]
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "aadAuthEnabled": {
              "description": "Whether or not AAD authentication is enabled.",
              "type": "boolean"
            },
            "swaggerUri": {
              "description": "The Uri for sending swagger requests.",
              "type": "string",
              "readOnly": true
            },
            "modelConfigMap": {
              "description": "Details on the models and configurations.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "readOnly": true
            },
            "environmentImageRequest": {
              "description": "The Environment, models and assets used for inferencing.",
              "allOf": [
                {
                  "$ref": "#/definitions/EnvironmentImageResponse"
                }
              ]
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AuthKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        }
      }
    },
    "CreateServiceRequest": {
      "description": "The base class for creating a service.",
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the service.",
          "type": "string"
        },
        "kvTags": {
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The service properties dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "keys": {
          "description": "The authentication keys.",
          "allOf": [
            {
              "$ref": "#/definitions/AuthKeys"
            }
          ]
        },
        "computeType": {
          "description": "The compute environment type for the service.",
          "enum": [
            "ACI",
            "AKS"
          ],
          "type": "string",
          "example": "AKS",
          "x-ms-enum": {
            "name": "ComputeEnvironmentType",
            "modelAsString": true
          }
        },
        "environmentImageRequest": {
          "description": "The Environment, models and assets needed for inferencing.",
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentImageRequest"
            }
          ]
        },
        "location": {
          "description": "The name of the Azure location/region.",
          "type": "string"
        }
      },
      "discriminator": "computeType"
    },
    "ACIServiceCreateRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "containerResourceRequirements": {
              "description": "The container resource requirements.",
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled on the service.",
              "default": false,
              "type": "boolean"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "default": false,
              "type": "boolean"
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "default": false,
              "type": "boolean"
            },
            "dataCollection": {
              "description": "Details of the data collection options specified.",
              "allOf": [
                {
                  "$ref": "#/definitions/ModelDataCollection"
                }
              ]
            },
            "sslCertificate": {
              "description": "The public SSL certificate in PEM format to use if SSL is enabled.",
              "type": "string"
            },
            "sslKey": {
              "description": "The public SSL key in PEM format for the certificate.",
              "type": "string"
            },
            "cname": {
              "description": "The CName for the service.",
              "type": "string"
            },
            "dnsNameLabel": {
              "description": "The Dns label for the service.",
              "type": "string"
            },
            "vnetConfiguration": {
              "description": "The virtual network configuration.",
              "allOf": [
                {
                  "$ref": "#/definitions/VnetConfiguration"
                }
              ]
            },
            "encryptionProperties": {
              "description": "The encryption properties.",
              "allOf": [
                {
                  "$ref": "#/definitions/EncryptionProperties"
                }
              ]
            }
          }
        }
      ],
      "x-ms-discriminator-value": "ACI"
    },
    "AKSServiceCreateRequest": {
      "description": "The request to create an AKS service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateEndpointVariantRequest"
        },
        {
          "type": "object",
          "properties": {
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas on the cluster.",
              "type": "integer",
              "example": 1
            },
            "dataCollection": {
              "description": "Details of the data collection options specified.",
              "allOf": [
                {
                  "$ref": "#/definitions/ModelDataCollection"
                }
              ]
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "autoScaler": {
              "description": "The auto scaler properties.",
              "allOf": [
                {
                  "$ref": "#/definitions/AutoScaler"
                }
              ]
            },
            "containerResourceRequirements": {
              "description": "The container resource requirements.",
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            "maxConcurrentRequestsPerContainer": {
              "format": "int32",
              "description": "The maximum number of concurrent requests per container.",
              "type": "integer",
              "example": 100
            },
            "maxQueueWaitMs": {
              "format": "int32",
              "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)",
              "type": "integer",
              "example": 250
            },
            "namespace": {
              "description": "Kubernetes namespace for the service.",
              "type": "string",
              "example": "default"
            },
            "scoringTimeoutMs": {
              "format": "int32",
              "description": "The scoring timeout in milliseconds.",
              "type": "integer",
              "example": 100
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "livenessProbeRequirements": {
              "description": "The liveness probe requirements.",
              "allOf": [
                {
                  "$ref": "#/definitions/LivenessProbeRequirements"
                }
              ]
            },
            "aadAuthEnabled": {
              "description": "Whether or not AAD authentication is enabled.",
              "type": "boolean"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "CreateEndpointVariantRequest": {
      "description": "The Variant properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "isDefault": {
              "description": "Is this the default variant.",
              "type": "boolean"
            },
            "trafficPercentile": {
              "format": "float",
              "description": "The amount of traffic variant receives.",
              "type": "number",
              "example": 100
            },
            "type": {
              "description": "The type of the variant.",
              "enum": [
                "Control",
                "Treatment"
              ],
              "type": "string",
              "example": "Control",
              "x-ms-enum": {
                "name": "VariantType",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "ComputeInstanceSshSettings": {
      "type": "object",
      "description": "Specifies policy and settings for SSH access.",
      "properties": {
        "sshPublicAccess": {
          "type": "string",
          "default": "Disabled",
          "title": "Access policy for SSH",
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "sshPublicAccess",
            "modelAsString": true
          }
        },
        "adminUserName": {
          "type": "string",
          "readOnly": true,
          "description": "Describes the admin user name."
        },
        "sshPort": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Describes the port for connecting through SSH."
        },
        "adminPublicKey": {
          "type": "string",
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        }
      }
    },
    "ComputeInstanceState": {
      "type": "string",
      "description": "Current state of an ComputeInstance.",
      "enum": [
        "Creating",
        "CreateFailed",
        "Deleting",
        "Running",
        "Restarting",
        "JobRunning",
        "SettingUp",
        "SetupFailed",
        "Starting",
        "Stopped",
        "Stopping",
        "UserSettingUp",
        "UserSetupFailed",
        "Unknown",
        "Unusable"
      ],
      "x-ms-enum": {
        "name": "ComputeInstanceState",
        "modelAsString": true
      }
    },
    "ComputeInstanceLastOperation": {
      "type": "object",
      "description": "The last operation on ComputeInstance.",
      "properties": {
        "operationName": {
          "type": "string",
          "description": "Name of the last operation.",
          "enum": [
            "Create",
            "Start",
            "Stop",
            "Restart",
            "Reimage",
            "Delete"
          ],
          "x-ms-enum": {
            "name": "OperationName",
            "modelAsString": true
          }
        },
        "operationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the last operation."
        },
        "operationStatus": {
          "type": "string",
          "description": "Operation status.",
          "enum": [
            "InProgress",
            "Succeeded",
            "CreateFailed",
            "StartFailed",
            "StopFailed",
            "RestartFailed",
            "ReimageFailed",
            "DeleteFailed"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceApplication": {
      "type": "object",
      "description": "Defines an Aml Instance application and its connectivity endpoint URI.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of the ComputeInstance application."
        },
        "endpointUri": {
          "type": "string",
          "description": "Application' endpoint URI."
        }
      }
    },
    "ComputeInstanceConnectivityEndpoints": {
      "type": "object",
      "readOnly": true,
      "description": "Defines all connectivity endpoints and properties for an ComputeInstance.",
      "properties": {
        "publicIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Public IP Address of this ComputeInstance."
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed)."
        }
      }
    },
    "ComputeInstanceCreatedBy": {
      "type": "object",
      "readOnly": true,
      "description": "Describes information on user who created this ComputeInstance.",
      "properties": {
        "userName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the user."
        },
        "userOrgId": {
          "type": "string",
          "readOnly": true,
          "description": "Uniquely identifies user' Azure Active Directory organization."
        },
        "userId": {
          "type": "string",
          "readOnly": true,
          "description": "Uniquely identifies the user within his/her organization."
        }
      }
    },
    "PersonalComputeInstanceSettings": {
      "type": "object",
      "properties": {
        "assignedUser": {
          "$ref": "#/definitions/AssignedUser",
          "title": "Assigned User.",
          "description": "A user explicitly assigned to a personal compute instance."
        }
      },
      "description": "Settings for a personal compute instance."
    },
    "AssignedUser": {
      "type": "object",
      "description": "A user that can be assigned to a compute instance.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "User’s AAD Object Id."
        },
        "tenantId": {
          "type": "string",
          "description": "User’s AAD Tenant Id."
        }
      },
      "required": [
        "objectId",
        "tenantId"
      ]
    },
    "ServiceManagedResourcesSettings": {
      "type": "object",
      "properties": {
        "cosmosDb": {
          "$ref": "#/definitions/CosmosDbSettings",
          "description": "The settings for the service managed cosmosdb account."
        }
      }
    },
    "CosmosDbSettings": {
      "type": "object",
      "properties": {
        "collectionsThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "The throughput of the collections in cosmosdb database"
        }
      }
    },
    "NotebookResourceInfo": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string"
        },
        "resourceId": {
          "type": "string",
          "description": "the data plane resourceId that used to initialize notebook component"
        },
        "notebookPreparationError": {
          "$ref": "#/definitions/NotebookPreparationError",
          "description": "The error that occurs when preparing notebook."
        }
      }
    },
    "NotebookPreparationError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListNotebookKeysResult": {
      "type": "object",
      "properties": {
        "primaryAccessKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "secondaryAccessKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ListStorageAccountKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "PaginatedWorkspaceConnectionsList": {
      "type": "object",
      "description": "Paginated list of Workspace connection objects.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of Workspace connection objects.",
          "items": {
            "$ref": "#/definitions/WorkspaceConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "WorkspaceConnection": {
      "x-ms-azure-resource": true,
      "description": "Workspace connection.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ResourceId of the workspace connection.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Friendly name of the workspace connection.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type of workspace connection.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "description": "Properties of workspace connection.",
          "$ref": "#/definitions/WorkspaceConnectionProps",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspaceConnectionDto": {
      "type": "object",
      "description": "object used for creating workspace connection.",
      "properties": {
        "name": {
          "description": "Friendly name of the workspace connection",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "description": "Properties of workspace connection.",
          "$ref": "#/definitions/WorkspaceConnectionProps",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspaceConnectionProps": {
      "type": "object",
      "description": "Workspace Connection specific properties.",
      "properties": {
        "category": {
          "description": "Category of the workspace connection.",
          "type": "string"
        },
        "target": {
          "description": "Target of the workspace connection.",
          "type": "string"
        },
        "authType": {
          "description": "Authorization type of the workspace connection.",
          "type": "string"
        },
        "value": {
          "description": "Value details of the workspace connection.",
          "type": "string"
        },
        "valueFormat": {
          "description": "format for the workspace connection value",
          "type": "string",
          "enum": [
            "JSON"
          ],
          "x-ms-enum": {
            "name": "ValueFormat",
            "modelAsString": true
          }
        }
      }
    },
    "SetupScripts": {
      "type": "object",
      "description": "Details of customized scripts to execute for setting up the cluster.",
      "properties": {
        "scripts": {
          "description": "Customized setup scripts",
          "$ref": "#/definitions/ScriptsToExecute"
        }
      }
    },
    "ScriptsToExecute": {
      "type": "object",
      "description": "Customized setup scripts",
      "properties": {
        "startupScript": {
          "description": "Script that's run every time the machine starts.",
          "$ref": "#/definitions/ScriptReference"
        },
        "creationScript": {
          "description": "Script that's run only once during provision of the compute.",
          "$ref": "#/definitions/ScriptReference"
        }
      }
    },
    "ScriptReference": {
      "type": "object",
      "description": "Script reference",
      "properties": {
        "scriptSource": {
          "description": "The storage source of the script: inline, workspace.",
          "type": "string"
        },
        "scriptData": {
          "description": "The location of scripts in the mounted volume.",
          "type": "string"
        },
        "scriptArguments": {
          "description": "Optional command line arguments passed to the script to run.",
          "type": "string"
        },
        "timeout": {
          "description": "Optional time period passed to timeout command.",
          "type": "string"
        }
      }
    },
    "AutoScaleProperties": {
      "type": "object",
      "description": "Auto scale properties",
      "properties": {
        "minNodeCount": {
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "maxNodeCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AutoPauseProperties": {
      "type": "object",
      "description": "Auto pause properties",
      "properties": {
        "delayInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "SynapseSparkPoolProperties": {
      "type": "object",
      "description": "Properties specific to Synapse Spark pools.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "AKS properties",
          "properties": {
            "autoScaleProperties": {
              "description": "Auto scale properties.",
              "$ref": "#/definitions/AutoScaleProperties"
            },
            "autoPauseProperties": {
              "description": "Auto pause properties.",
              "$ref": "#/definitions/AutoPauseProperties"
            },
            "sparkVersion": {
              "description": "Spark version.",
              "type": "string"
            },
            "nodeCount": {
              "description": "The number of compute nodes currently assigned to the compute.",
              "type": "integer",
              "format": "int32"
            },
            "nodeSize": {
              "description": "Node size.",
              "type": "string"
            },
            "nodeSizeFamily": {
              "description": "Node size family.",
              "type": "string"
            },
            "subscriptionId": {
              "description": "Azure subscription identifier.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Name of the resource group in which workspace is located.",
              "type": "string"
            },
            "workspaceName": {
              "description": "Name of Azure Machine Learning workspace.",
              "type": "string"
            },
            "poolName": {
              "description": "Pool name.",
              "type": "string"
            }
          }
        }
      }
    }
  }
}
