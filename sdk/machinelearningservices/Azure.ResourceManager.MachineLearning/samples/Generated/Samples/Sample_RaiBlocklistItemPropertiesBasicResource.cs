// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.MachineLearning.Models;

namespace Azure.ResourceManager.MachineLearning.Samples
{
    public partial class Sample_RaiBlocklistItemPropertiesBasicResource
    {
        // Delete RaiBlocklist Item
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteRaiBlocklistItem()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/WorkspaceConnection/RaiBlocklistItem/delete.json
            // this example is just showing the usage of "ConnectionRaiBlocklistItem_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RaiBlocklistItemPropertiesBasicResource created on azure
            // for more information of creating RaiBlocklistItemPropertiesBasicResource, please refer to the document of RaiBlocklistItemPropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string connectionName = "testConnection";
            string raiBlocklistName = "raiBlocklistName";
            string raiBlocklistItemName = "raiBlocklistItemName";
            ResourceIdentifier raiBlocklistItemPropertiesBasicResourceId = RaiBlocklistItemPropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, connectionName, raiBlocklistName, raiBlocklistItemName);
            RaiBlocklistItemPropertiesBasicResource raiBlocklistItemPropertiesBasicResource = client.GetRaiBlocklistItemPropertiesBasicResource(raiBlocklistItemPropertiesBasicResourceId);

            // invoke the operation
            await raiBlocklistItemPropertiesBasicResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Get Rai RaiBlocklist Item
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetRaiRaiBlocklistItem()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/WorkspaceConnection/RaiBlocklistItem/get.json
            // this example is just showing the usage of "ConnectionRaiBlocklistItem_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RaiBlocklistItemPropertiesBasicResource created on azure
            // for more information of creating RaiBlocklistItemPropertiesBasicResource, please refer to the document of RaiBlocklistItemPropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string connectionName = "testConnection";
            string raiBlocklistName = "raiBlocklistName";
            string raiBlocklistItemName = "raiBlocklistItemName";
            ResourceIdentifier raiBlocklistItemPropertiesBasicResourceId = RaiBlocklistItemPropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, connectionName, raiBlocklistName, raiBlocklistItemName);
            RaiBlocklistItemPropertiesBasicResource raiBlocklistItemPropertiesBasicResource = client.GetRaiBlocklistItemPropertiesBasicResource(raiBlocklistItemPropertiesBasicResourceId);

            // invoke the operation
            RaiBlocklistItemPropertiesBasicResource result = await raiBlocklistItemPropertiesBasicResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RaiBlocklistItemPropertiesBasicResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create RaiBlocklist Item
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateRaiBlocklistItem()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/WorkspaceConnection/RaiBlocklistItem/create.json
            // this example is just showing the usage of "ConnectionRaiBlocklistItem_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RaiBlocklistItemPropertiesBasicResource created on azure
            // for more information of creating RaiBlocklistItemPropertiesBasicResource, please refer to the document of RaiBlocklistItemPropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string connectionName = "testConnection";
            string raiBlocklistName = "raiBlocklistName";
            string raiBlocklistItemName = "raiBlocklistItemName";
            ResourceIdentifier raiBlocklistItemPropertiesBasicResourceId = RaiBlocklistItemPropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, connectionName, raiBlocklistName, raiBlocklistItemName);
            RaiBlocklistItemPropertiesBasicResource raiBlocklistItemPropertiesBasicResource = client.GetRaiBlocklistItemPropertiesBasicResource(raiBlocklistItemPropertiesBasicResourceId);

            // invoke the operation
            RaiBlocklistItemPropertiesBasicResourceData data = new RaiBlocklistItemPropertiesBasicResourceData(new RaiBlocklistItemProperties()
            {
                IsRegex = false,
                Pattern = "Pattern To Block",
            });
            ArmOperation<RaiBlocklistItemPropertiesBasicResource> lro = await raiBlocklistItemPropertiesBasicResource.UpdateAsync(WaitUntil.Completed, data);
            RaiBlocklistItemPropertiesBasicResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RaiBlocklistItemPropertiesBasicResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
