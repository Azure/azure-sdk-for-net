// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.MachineLearning.Models;

namespace Azure.ResourceManager.MachineLearning.Samples
{
    public partial class Sample_WorkspaceEndpointDeploymentResource
    {
        // Delete Endpoint Deployment
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteEndpointDeployment()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/Deployment/delete.json
            // this example is just showing the usage of "EndpointDeployment_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceEndpointDeploymentResource created on azure
            // for more information of creating WorkspaceEndpointDeploymentResource, please refer to the document of WorkspaceEndpointDeploymentResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string endpointName = "Azure.OpenAI";
            string deploymentName = "testDeploymentName";
            ResourceIdentifier workspaceEndpointDeploymentResourceId = WorkspaceEndpointDeploymentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName, deploymentName);
            WorkspaceEndpointDeploymentResource workspaceEndpointDeployment = client.GetWorkspaceEndpointDeploymentResource(workspaceEndpointDeploymentResourceId);

            // invoke the operation
            await workspaceEndpointDeployment.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Get Endpoint Deployment
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetEndpointDeployment()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/Deployment/get.json
            // this example is just showing the usage of "EndpointDeployment_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceEndpointDeploymentResource created on azure
            // for more information of creating WorkspaceEndpointDeploymentResource, please refer to the document of WorkspaceEndpointDeploymentResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "resourceGroup-1";
            string workspaceName = "testworkspace";
            string endpointName = "Azure.OpenAI";
            string deploymentName = "text-davinci-003";
            ResourceIdentifier workspaceEndpointDeploymentResourceId = WorkspaceEndpointDeploymentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName, deploymentName);
            WorkspaceEndpointDeploymentResource workspaceEndpointDeployment = client.GetWorkspaceEndpointDeploymentResource(workspaceEndpointDeploymentResourceId);

            // invoke the operation
            WorkspaceEndpointDeploymentResource result = await workspaceEndpointDeployment.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EndpointDeploymentResourcePropertiesBasicResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create Endpoint Deployment
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateEndpointDeployment()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/Deployment/create.json
            // this example is just showing the usage of "EndpointDeployment_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceEndpointDeploymentResource created on azure
            // for more information of creating WorkspaceEndpointDeploymentResource, please refer to the document of WorkspaceEndpointDeploymentResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "resourceGroup-1";
            string workspaceName = "testworkspace";
            string endpointName = "Azure.OpenAI";
            string deploymentName = "text-davinci-003";
            ResourceIdentifier workspaceEndpointDeploymentResourceId = WorkspaceEndpointDeploymentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName, deploymentName);
            WorkspaceEndpointDeploymentResource workspaceEndpointDeployment = client.GetWorkspaceEndpointDeploymentResource(workspaceEndpointDeploymentResourceId);

            // invoke the operation
            EndpointDeploymentResourcePropertiesBasicResourceData data = new EndpointDeploymentResourcePropertiesBasicResourceData(new OpenAIEndpointDeploymentResourceProperties(new EndpointDeploymentModel()
            {
                Format = "OpenAI",
                Name = "text-davinci-003",
                Version = "1",
            })
            {
                VersionUpgradeOption = DeploymentModelVersionUpgradeOption.OnceNewDefaultVersionAvailable,
            });
            ArmOperation<WorkspaceEndpointDeploymentResource> lro = await workspaceEndpointDeployment.UpdateAsync(WaitUntil.Completed, data);
            WorkspaceEndpointDeploymentResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EndpointDeploymentResourcePropertiesBasicResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
