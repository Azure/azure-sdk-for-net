// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.MachineLearning.Models;

namespace Azure.ResourceManager.MachineLearning.Samples
{
    public partial class Sample_WorkspaceEndpointRaiPolicyCollection
    {
        // List Rai policies
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListRaiPolicies()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/RaiPolicy/list.json
            // this example is just showing the usage of "RaiPolicies_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EndpointResourcePropertiesBasicResource created on azure
            // for more information of creating EndpointResourcePropertiesBasicResource, please refer to the document of EndpointResourcePropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string endpointName = "Azure.OpenAI";
            ResourceIdentifier endpointResourcePropertiesBasicResourceId = EndpointResourcePropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName);
            EndpointResourcePropertiesBasicResource endpointResourcePropertiesBasicResource = client.GetEndpointResourcePropertiesBasicResource(endpointResourcePropertiesBasicResourceId);

            // get the collection of this WorkspaceEndpointRaiPolicyResource
            WorkspaceEndpointRaiPolicyCollection collection = endpointResourcePropertiesBasicResource.GetWorkspaceEndpointRaiPolicies();

            // invoke the operation and iterate over the result
            await foreach (WorkspaceEndpointRaiPolicyResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                RaiPolicyPropertiesBasicResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Get Rai policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetRaiPolicy()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/RaiPolicy/get.json
            // this example is just showing the usage of "RaiPolicy_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EndpointResourcePropertiesBasicResource created on azure
            // for more information of creating EndpointResourcePropertiesBasicResource, please refer to the document of EndpointResourcePropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string endpointName = "Azure.OpenAI";
            ResourceIdentifier endpointResourcePropertiesBasicResourceId = EndpointResourcePropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName);
            EndpointResourcePropertiesBasicResource endpointResourcePropertiesBasicResource = client.GetEndpointResourcePropertiesBasicResource(endpointResourcePropertiesBasicResourceId);

            // get the collection of this WorkspaceEndpointRaiPolicyResource
            WorkspaceEndpointRaiPolicyCollection collection = endpointResourcePropertiesBasicResource.GetWorkspaceEndpointRaiPolicies();

            // invoke the operation
            string raiPolicyName = "raiPolicyName";
            WorkspaceEndpointRaiPolicyResource result = await collection.GetAsync(raiPolicyName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RaiPolicyPropertiesBasicResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get Rai policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetRaiPolicy()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/RaiPolicy/get.json
            // this example is just showing the usage of "RaiPolicy_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EndpointResourcePropertiesBasicResource created on azure
            // for more information of creating EndpointResourcePropertiesBasicResource, please refer to the document of EndpointResourcePropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string endpointName = "Azure.OpenAI";
            ResourceIdentifier endpointResourcePropertiesBasicResourceId = EndpointResourcePropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName);
            EndpointResourcePropertiesBasicResource endpointResourcePropertiesBasicResource = client.GetEndpointResourcePropertiesBasicResource(endpointResourcePropertiesBasicResourceId);

            // get the collection of this WorkspaceEndpointRaiPolicyResource
            WorkspaceEndpointRaiPolicyCollection collection = endpointResourcePropertiesBasicResource.GetWorkspaceEndpointRaiPolicies();

            // invoke the operation
            string raiPolicyName = "raiPolicyName";
            bool result = await collection.ExistsAsync(raiPolicyName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Get Rai policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_GetRaiPolicy()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/RaiPolicy/get.json
            // this example is just showing the usage of "RaiPolicy_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EndpointResourcePropertiesBasicResource created on azure
            // for more information of creating EndpointResourcePropertiesBasicResource, please refer to the document of EndpointResourcePropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string endpointName = "Azure.OpenAI";
            ResourceIdentifier endpointResourcePropertiesBasicResourceId = EndpointResourcePropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName);
            EndpointResourcePropertiesBasicResource endpointResourcePropertiesBasicResource = client.GetEndpointResourcePropertiesBasicResource(endpointResourcePropertiesBasicResourceId);

            // get the collection of this WorkspaceEndpointRaiPolicyResource
            WorkspaceEndpointRaiPolicyCollection collection = endpointResourcePropertiesBasicResource.GetWorkspaceEndpointRaiPolicies();

            // invoke the operation
            string raiPolicyName = "raiPolicyName";
            NullableResponse<WorkspaceEndpointRaiPolicyResource> response = await collection.GetIfExistsAsync(raiPolicyName);
            WorkspaceEndpointRaiPolicyResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                RaiPolicyPropertiesBasicResourceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // Create Rai policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateRaiPolicy()
        {
            // Generated from example definition: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-07-01-preview/examples/Endpoint/RaiPolicy/create.json
            // this example is just showing the usage of "RaiPolicy_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EndpointResourcePropertiesBasicResource created on azure
            // for more information of creating EndpointResourcePropertiesBasicResource, please refer to the document of EndpointResourcePropertiesBasicResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "test-rg";
            string workspaceName = "aml-workspace-name";
            string endpointName = "Azure.OpenAI";
            ResourceIdentifier endpointResourcePropertiesBasicResourceId = EndpointResourcePropertiesBasicResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, endpointName);
            EndpointResourcePropertiesBasicResource endpointResourcePropertiesBasicResource = client.GetEndpointResourcePropertiesBasicResource(endpointResourcePropertiesBasicResourceId);

            // get the collection of this WorkspaceEndpointRaiPolicyResource
            WorkspaceEndpointRaiPolicyCollection collection = endpointResourcePropertiesBasicResource.GetWorkspaceEndpointRaiPolicies();

            // invoke the operation
            string raiPolicyName = "raiPolicyName";
            RaiPolicyPropertiesBasicResourceData data = new RaiPolicyPropertiesBasicResourceData(new RaiPolicyProperties()
            {
                BasePolicyName = "112",
                CompletionBlocklists =
{
new RaiBlocklistConfig()
{
Blocking = false,
BlocklistName = "blocklistName",
}
},
                ContentFilters =
{
new RaiPolicyContentFilter()
{
AllowedContentLevel = AllowedContentLevel.Low,
Blocking = false,
Enabled = false,
Name = "policyName",
Source = RaiPolicyContentSource.Prompt,
}
},
                Mode = RaiPolicyMode.Blocking,
                PromptBlocklists =
{
new RaiBlocklistConfig()
{
Blocking = false,
BlocklistName = "blocklistName",
}
},
                PolicyType = RaiPolicyType.SystemManaged,
            });
            ArmOperation<WorkspaceEndpointRaiPolicyResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, raiPolicyName, data);
            WorkspaceEndpointRaiPolicyResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RaiPolicyPropertiesBasicResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
