// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.MachineLearning.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.MachineLearning
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.MachineLearning. </summary>
    public static partial class MachineLearningExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Lists all the available machine learning workspaces under the specified subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces
        /// Operation Id: Workspaces_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="skip"> Continuation token for pagination. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="MachineLearningWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MachineLearningWorkspaceResource> GetMachineLearningWorkspacesAsync(this SubscriptionResource subscriptionResource, string skip = null, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetMachineLearningWorkspacesAsync(skip, cancellationToken);
        }

        /// <summary>
        /// Lists all the available machine learning workspaces under the specified subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces
        /// Operation Id: Workspaces_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="skip"> Continuation token for pagination. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="MachineLearningWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MachineLearningWorkspaceResource> GetMachineLearningWorkspaces(this SubscriptionResource subscriptionResource, string skip = null, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetMachineLearningWorkspaces(skip, cancellationToken);
        }

        /// <summary>
        /// Gets the current usage information as well as limits for AML resources for given subscription and location.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages
        /// Operation Id: Usages_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="MachineLearningUsage" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MachineLearningUsage> GetUsagesAsync(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetUsagesAsync(location, cancellationToken);
        }

        /// <summary>
        /// Gets the current usage information as well as limits for AML resources for given subscription and location.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages
        /// Operation Id: Usages_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="MachineLearningUsage" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MachineLearningUsage> GetUsages(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetUsages(location, cancellationToken);
        }

        /// <summary>
        /// Returns supported VM Sizes in a location
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes
        /// Operation Id: VirtualMachineSizes_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location upon which virtual-machine-sizes is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="VirtualMachineSize" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<VirtualMachineSize> GetVirtualMachineSizesAsync(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetVirtualMachineSizesAsync(location, cancellationToken);
        }

        /// <summary>
        /// Returns supported VM Sizes in a location
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes
        /// Operation Id: VirtualMachineSizes_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location upon which virtual-machine-sizes is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="VirtualMachineSize" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<VirtualMachineSize> GetVirtualMachineSizes(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetVirtualMachineSizes(location, cancellationToken);
        }

        /// <summary>
        /// Update quota for each VM family in workspace.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas
        /// Operation Id: Quotas_Update
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for update quota is queried. </param>
        /// <param name="content"> Quota update parameters. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <returns> An async collection of <see cref="UpdateWorkspaceQuotas" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<UpdateWorkspaceQuotas> UpdateAllQuotaAsync(this SubscriptionResource subscriptionResource, AzureLocation location, QuotaUpdateContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).UpdateAllQuotaAsync(location, content, cancellationToken);
        }

        /// <summary>
        /// Update quota for each VM family in workspace.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas
        /// Operation Id: Quotas_Update
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for update quota is queried. </param>
        /// <param name="content"> Quota update parameters. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <returns> A collection of <see cref="UpdateWorkspaceQuotas" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<UpdateWorkspaceQuotas> UpdateAllQuota(this SubscriptionResource subscriptionResource, AzureLocation location, QuotaUpdateContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).UpdateAllQuota(location, content, cancellationToken);
        }

        /// <summary>
        /// Gets the currently assigned Workspace Quotas based on VMFamily.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas
        /// Operation Id: Quotas_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ResourceQuota> GetAllQuotaAsync(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetAllQuotaAsync(location, cancellationToken);
        }

        /// <summary>
        /// Gets the currently assigned Workspace Quotas based on VMFamily.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas
        /// Operation Id: Quotas_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ResourceQuota> GetAllQuota(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetAllQuota(location, cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of MachineLearningWorkspaceResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of MachineLearningWorkspaceResources and their operations over a MachineLearningWorkspaceResource. </returns>
        public static MachineLearningWorkspaceCollection GetMachineLearningWorkspaces(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetMachineLearningWorkspaces();
        }

        /// <summary>
        /// Gets the properties of the specified machine learning workspace.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}
        /// Operation Id: Workspaces_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="workspaceName"> Name of Azure Machine Learning workspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<MachineLearningWorkspaceResource>> GetMachineLearningWorkspaceAsync(this ResourceGroupResource resourceGroupResource, string workspaceName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetMachineLearningWorkspaces().GetAsync(workspaceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the properties of the specified machine learning workspace.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}
        /// Operation Id: Workspaces_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="workspaceName"> Name of Azure Machine Learning workspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<MachineLearningWorkspaceResource> GetMachineLearningWorkspace(this ResourceGroupResource resourceGroupResource, string workspaceName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetMachineLearningWorkspaces().Get(workspaceName, cancellationToken);
        }

        #region MachineLearningWorkspaceResource
        /// <summary>
        /// Gets an object representing a <see cref="MachineLearningWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineLearningWorkspaceResource.CreateResourceIdentifier" /> to create a <see cref="MachineLearningWorkspaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineLearningWorkspaceResource" /> object. </returns>
        public static MachineLearningWorkspaceResource GetMachineLearningWorkspaceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MachineLearningWorkspaceResource.ValidateResourceId(id);
                return new MachineLearningWorkspaceResource(client, id);
            }
            );
        }
        #endregion

        #region MachineLearningComputeResource
        /// <summary>
        /// Gets an object representing a <see cref="MachineLearningComputeResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineLearningComputeResource.CreateResourceIdentifier" /> to create a <see cref="MachineLearningComputeResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineLearningComputeResource" /> object. </returns>
        public static MachineLearningComputeResource GetMachineLearningComputeResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MachineLearningComputeResource.ValidateResourceId(id);
                return new MachineLearningComputeResource(client, id);
            }
            );
        }
        #endregion

        #region MachineLearningPrivateEndpointConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="MachineLearningPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineLearningPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="MachineLearningPrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineLearningPrivateEndpointConnectionResource" /> object. </returns>
        public static MachineLearningPrivateEndpointConnectionResource GetMachineLearningPrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MachineLearningPrivateEndpointConnectionResource.ValidateResourceId(id);
                return new MachineLearningPrivateEndpointConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region WorkspaceConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspaceConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspaceConnectionResource.CreateResourceIdentifier" /> to create a <see cref="WorkspaceConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceConnectionResource" /> object. </returns>
        public static WorkspaceConnectionResource GetWorkspaceConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspaceConnectionResource.ValidateResourceId(id);
                return new WorkspaceConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region BatchEndpointResource
        /// <summary>
        /// Gets an object representing a <see cref="BatchEndpointResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BatchEndpointResource.CreateResourceIdentifier" /> to create a <see cref="BatchEndpointResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BatchEndpointResource" /> object. </returns>
        public static BatchEndpointResource GetBatchEndpointResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BatchEndpointResource.ValidateResourceId(id);
                return new BatchEndpointResource(client, id);
            }
            );
        }
        #endregion

        #region BatchDeploymentResource
        /// <summary>
        /// Gets an object representing a <see cref="BatchDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BatchDeploymentResource.CreateResourceIdentifier" /> to create a <see cref="BatchDeploymentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BatchDeploymentResource" /> object. </returns>
        public static BatchDeploymentResource GetBatchDeploymentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BatchDeploymentResource.ValidateResourceId(id);
                return new BatchDeploymentResource(client, id);
            }
            );
        }
        #endregion

        #region CodeContainerResource
        /// <summary>
        /// Gets an object representing a <see cref="CodeContainerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CodeContainerResource.CreateResourceIdentifier" /> to create a <see cref="CodeContainerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CodeContainerResource" /> object. </returns>
        public static CodeContainerResource GetCodeContainerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CodeContainerResource.ValidateResourceId(id);
                return new CodeContainerResource(client, id);
            }
            );
        }
        #endregion

        #region CodeVersionResource
        /// <summary>
        /// Gets an object representing a <see cref="CodeVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CodeVersionResource.CreateResourceIdentifier" /> to create a <see cref="CodeVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CodeVersionResource" /> object. </returns>
        public static CodeVersionResource GetCodeVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CodeVersionResource.ValidateResourceId(id);
                return new CodeVersionResource(client, id);
            }
            );
        }
        #endregion

        #region ComponentContainerResource
        /// <summary>
        /// Gets an object representing a <see cref="ComponentContainerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ComponentContainerResource.CreateResourceIdentifier" /> to create a <see cref="ComponentContainerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentContainerResource" /> object. </returns>
        public static ComponentContainerResource GetComponentContainerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ComponentContainerResource.ValidateResourceId(id);
                return new ComponentContainerResource(client, id);
            }
            );
        }
        #endregion

        #region ComponentVersionResource
        /// <summary>
        /// Gets an object representing a <see cref="ComponentVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ComponentVersionResource.CreateResourceIdentifier" /> to create a <see cref="ComponentVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentVersionResource" /> object. </returns>
        public static ComponentVersionResource GetComponentVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ComponentVersionResource.ValidateResourceId(id);
                return new ComponentVersionResource(client, id);
            }
            );
        }
        #endregion

        #region DataContainerResource
        /// <summary>
        /// Gets an object representing a <see cref="DataContainerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataContainerResource.CreateResourceIdentifier" /> to create a <see cref="DataContainerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataContainerResource" /> object. </returns>
        public static DataContainerResource GetDataContainerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataContainerResource.ValidateResourceId(id);
                return new DataContainerResource(client, id);
            }
            );
        }
        #endregion

        #region DataVersionResource
        /// <summary>
        /// Gets an object representing a <see cref="DataVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataVersionResource.CreateResourceIdentifier" /> to create a <see cref="DataVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataVersionResource" /> object. </returns>
        public static DataVersionResource GetDataVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataVersionResource.ValidateResourceId(id);
                return new DataVersionResource(client, id);
            }
            );
        }
        #endregion

        #region DatastoreResource
        /// <summary>
        /// Gets an object representing a <see cref="DatastoreResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DatastoreResource.CreateResourceIdentifier" /> to create a <see cref="DatastoreResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatastoreResource" /> object. </returns>
        public static DatastoreResource GetDatastoreResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DatastoreResource.ValidateResourceId(id);
                return new DatastoreResource(client, id);
            }
            );
        }
        #endregion

        #region EnvironmentContainerResource
        /// <summary>
        /// Gets an object representing an <see cref="EnvironmentContainerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EnvironmentContainerResource.CreateResourceIdentifier" /> to create an <see cref="EnvironmentContainerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EnvironmentContainerResource" /> object. </returns>
        public static EnvironmentContainerResource GetEnvironmentContainerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                EnvironmentContainerResource.ValidateResourceId(id);
                return new EnvironmentContainerResource(client, id);
            }
            );
        }
        #endregion

        #region EnvironmentVersionResource
        /// <summary>
        /// Gets an object representing an <see cref="EnvironmentVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EnvironmentVersionResource.CreateResourceIdentifier" /> to create an <see cref="EnvironmentVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EnvironmentVersionResource" /> object. </returns>
        public static EnvironmentVersionResource GetEnvironmentVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                EnvironmentVersionResource.ValidateResourceId(id);
                return new EnvironmentVersionResource(client, id);
            }
            );
        }
        #endregion

        #region MachineLearningJobResource
        /// <summary>
        /// Gets an object representing a <see cref="MachineLearningJobResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineLearningJobResource.CreateResourceIdentifier" /> to create a <see cref="MachineLearningJobResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineLearningJobResource" /> object. </returns>
        public static MachineLearningJobResource GetMachineLearningJobResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MachineLearningJobResource.ValidateResourceId(id);
                return new MachineLearningJobResource(client, id);
            }
            );
        }
        #endregion

        #region ModelContainerResource
        /// <summary>
        /// Gets an object representing a <see cref="ModelContainerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ModelContainerResource.CreateResourceIdentifier" /> to create a <see cref="ModelContainerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ModelContainerResource" /> object. </returns>
        public static ModelContainerResource GetModelContainerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ModelContainerResource.ValidateResourceId(id);
                return new ModelContainerResource(client, id);
            }
            );
        }
        #endregion

        #region ModelVersionResource
        /// <summary>
        /// Gets an object representing a <see cref="ModelVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ModelVersionResource.CreateResourceIdentifier" /> to create a <see cref="ModelVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ModelVersionResource" /> object. </returns>
        public static ModelVersionResource GetModelVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ModelVersionResource.ValidateResourceId(id);
                return new ModelVersionResource(client, id);
            }
            );
        }
        #endregion

        #region OnlineEndpointResource
        /// <summary>
        /// Gets an object representing an <see cref="OnlineEndpointResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OnlineEndpointResource.CreateResourceIdentifier" /> to create an <see cref="OnlineEndpointResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnlineEndpointResource" /> object. </returns>
        public static OnlineEndpointResource GetOnlineEndpointResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OnlineEndpointResource.ValidateResourceId(id);
                return new OnlineEndpointResource(client, id);
            }
            );
        }
        #endregion

        #region OnlineDeploymentResource
        /// <summary>
        /// Gets an object representing an <see cref="OnlineDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OnlineDeploymentResource.CreateResourceIdentifier" /> to create an <see cref="OnlineDeploymentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnlineDeploymentResource" /> object. </returns>
        public static OnlineDeploymentResource GetOnlineDeploymentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OnlineDeploymentResource.ValidateResourceId(id);
                return new OnlineDeploymentResource(client, id);
            }
            );
        }
        #endregion
    }
}
