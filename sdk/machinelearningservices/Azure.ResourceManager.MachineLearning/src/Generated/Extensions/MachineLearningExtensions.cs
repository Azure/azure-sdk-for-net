// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.MachineLearning.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.MachineLearning
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.MachineLearning. </summary>
    public static partial class MachineLearningExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Lists all the available machine learning workspaces under the specified subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces
        /// Operation Id: Workspaces_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="skip"> Continuation token for pagination. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="WorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<WorkspaceResource> GetWorkspacesAsync(this SubscriptionResource subscriptionResource, string skip = null, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetWorkspacesAsync(skip, cancellationToken);
        }

        /// <summary>
        /// Lists all the available machine learning workspaces under the specified subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces
        /// Operation Id: Workspaces_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="skip"> Continuation token for pagination. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="WorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<WorkspaceResource> GetWorkspaces(this SubscriptionResource subscriptionResource, string skip = null, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetWorkspaces(skip, cancellationToken);
        }

        /// <summary>
        /// Gets the current usage information as well as limits for AML resources for given subscription and location.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages
        /// Operation Id: Usages_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        /// <returns> An async collection of <see cref="MachineLearningUsage" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MachineLearningUsage> GetUsagesAsync(this SubscriptionResource subscriptionResource, string location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));

            return GetExtensionClient(subscriptionResource).GetUsagesAsync(location, cancellationToken);
        }

        /// <summary>
        /// Gets the current usage information as well as limits for AML resources for given subscription and location.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages
        /// Operation Id: Usages_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        /// <returns> A collection of <see cref="MachineLearningUsage" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MachineLearningUsage> GetUsages(this SubscriptionResource subscriptionResource, string location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));

            return GetExtensionClient(subscriptionResource).GetUsages(location, cancellationToken);
        }

        /// <summary>
        /// Returns supported VM Sizes in a location
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes
        /// Operation Id: VirtualMachineSizes_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location upon which virtual-machine-sizes is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        /// <returns> An async collection of <see cref="VirtualMachineSize" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<VirtualMachineSize> GetVirtualMachineSizesAsync(this SubscriptionResource subscriptionResource, string location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));

            return GetExtensionClient(subscriptionResource).GetVirtualMachineSizesAsync(location, cancellationToken);
        }

        /// <summary>
        /// Returns supported VM Sizes in a location
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes
        /// Operation Id: VirtualMachineSizes_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location upon which virtual-machine-sizes is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        /// <returns> A collection of <see cref="VirtualMachineSize" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<VirtualMachineSize> GetVirtualMachineSizes(this SubscriptionResource subscriptionResource, string location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));

            return GetExtensionClient(subscriptionResource).GetVirtualMachineSizes(location, cancellationToken);
        }

        /// <summary>
        /// Update quota for each VM family in workspace.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas
        /// Operation Id: Quotas_Update
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for update quota is queried. </param>
        /// <param name="content"> Quota update parameters. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> or <paramref name="content"/> is null. </exception>
        /// <returns> An async collection of <see cref="UpdateWorkspaceQuotas" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<UpdateWorkspaceQuotas> UpdateQuotasAsync(this SubscriptionResource subscriptionResource, string location, QuotaUpdateContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).UpdateQuotasAsync(location, content, cancellationToken);
        }

        /// <summary>
        /// Update quota for each VM family in workspace.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas
        /// Operation Id: Quotas_Update
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for update quota is queried. </param>
        /// <param name="content"> Quota update parameters. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> or <paramref name="content"/> is null. </exception>
        /// <returns> A collection of <see cref="UpdateWorkspaceQuotas" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<UpdateWorkspaceQuotas> UpdateQuotas(this SubscriptionResource subscriptionResource, string location, QuotaUpdateContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).UpdateQuotas(location, content, cancellationToken);
        }

        /// <summary>
        /// Gets the currently assigned Workspace Quotas based on VMFamily.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas
        /// Operation Id: Quotas_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        /// <returns> An async collection of <see cref="ResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ResourceQuota> GetQuotasAsync(this SubscriptionResource subscriptionResource, string location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));

            return GetExtensionClient(subscriptionResource).GetQuotasAsync(location, cancellationToken);
        }

        /// <summary>
        /// Gets the currently assigned Workspace Quotas based on VMFamily.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas
        /// Operation Id: Quotas_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location for which resource usage is queried. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        /// <returns> A collection of <see cref="ResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ResourceQuota> GetQuotas(this SubscriptionResource subscriptionResource, string location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNullOrEmpty(location, nameof(location));

            return GetExtensionClient(subscriptionResource).GetQuotas(location, cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of WorkspaceResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of WorkspaceResources and their operations over a WorkspaceResource. </returns>
        public static WorkspaceCollection GetWorkspaces(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetWorkspaces();
        }

        /// <summary>
        /// Gets the properties of the specified machine learning workspace.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}
        /// Operation Id: Workspaces_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="workspaceName"> Name of Azure Machine Learning workspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<WorkspaceResource>> GetWorkspaceAsync(this ResourceGroupResource resourceGroupResource, string workspaceName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetWorkspaces().GetAsync(workspaceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the properties of the specified machine learning workspace.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}
        /// Operation Id: Workspaces_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="workspaceName"> Name of Azure Machine Learning workspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<WorkspaceResource> GetWorkspace(this ResourceGroupResource resourceGroupResource, string workspaceName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetWorkspaces().Get(workspaceName, cancellationToken);
        }

        #region WorkspaceResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspaceResource.CreateResourceIdentifier" /> to create a <see cref="WorkspaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceResource" /> object. </returns>
        public static WorkspaceResource GetWorkspaceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspaceResource.ValidateResourceId(id);
                return new WorkspaceResource(client, id);
            }
            );
        }
        #endregion

        #region ComputeResource
        /// <summary>
        /// Gets an object representing a <see cref="ComputeResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ComputeResource.CreateResourceIdentifier" /> to create a <see cref="ComputeResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComputeResource" /> object. </returns>
        public static ComputeResource GetComputeResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ComputeResource.ValidateResourceId(id);
                return new ComputeResource(client, id);
            }
            );
        }
        #endregion

        #region MachineLearningPrivateEndpointConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="MachineLearningPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineLearningPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="MachineLearningPrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineLearningPrivateEndpointConnectionResource" /> object. </returns>
        public static MachineLearningPrivateEndpointConnectionResource GetMachineLearningPrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MachineLearningPrivateEndpointConnectionResource.ValidateResourceId(id);
                return new MachineLearningPrivateEndpointConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region WorkspaceConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspaceConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspaceConnectionResource.CreateResourceIdentifier" /> to create a <see cref="WorkspaceConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceConnectionResource" /> object. </returns>
        public static WorkspaceConnectionResource GetWorkspaceConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspaceConnectionResource.ValidateResourceId(id);
                return new WorkspaceConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region BatchEndpointDataResource
        /// <summary>
        /// Gets an object representing a <see cref="BatchEndpointDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BatchEndpointDataResource.CreateResourceIdentifier" /> to create a <see cref="BatchEndpointDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BatchEndpointDataResource" /> object. </returns>
        public static BatchEndpointDataResource GetBatchEndpointDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BatchEndpointDataResource.ValidateResourceId(id);
                return new BatchEndpointDataResource(client, id);
            }
            );
        }
        #endregion

        #region BatchDeploymentDataResource
        /// <summary>
        /// Gets an object representing a <see cref="BatchDeploymentDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BatchDeploymentDataResource.CreateResourceIdentifier" /> to create a <see cref="BatchDeploymentDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BatchDeploymentDataResource" /> object. </returns>
        public static BatchDeploymentDataResource GetBatchDeploymentDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BatchDeploymentDataResource.ValidateResourceId(id);
                return new BatchDeploymentDataResource(client, id);
            }
            );
        }
        #endregion

        #region CodeContainerDataResource
        /// <summary>
        /// Gets an object representing a <see cref="CodeContainerDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CodeContainerDataResource.CreateResourceIdentifier" /> to create a <see cref="CodeContainerDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CodeContainerDataResource" /> object. </returns>
        public static CodeContainerDataResource GetCodeContainerDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CodeContainerDataResource.ValidateResourceId(id);
                return new CodeContainerDataResource(client, id);
            }
            );
        }
        #endregion

        #region CodeVersionDataResource
        /// <summary>
        /// Gets an object representing a <see cref="CodeVersionDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CodeVersionDataResource.CreateResourceIdentifier" /> to create a <see cref="CodeVersionDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CodeVersionDataResource" /> object. </returns>
        public static CodeVersionDataResource GetCodeVersionDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CodeVersionDataResource.ValidateResourceId(id);
                return new CodeVersionDataResource(client, id);
            }
            );
        }
        #endregion

        #region ComponentContainerDataResource
        /// <summary>
        /// Gets an object representing a <see cref="ComponentContainerDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ComponentContainerDataResource.CreateResourceIdentifier" /> to create a <see cref="ComponentContainerDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentContainerDataResource" /> object. </returns>
        public static ComponentContainerDataResource GetComponentContainerDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ComponentContainerDataResource.ValidateResourceId(id);
                return new ComponentContainerDataResource(client, id);
            }
            );
        }
        #endregion

        #region ComponentVersionDataResource
        /// <summary>
        /// Gets an object representing a <see cref="ComponentVersionDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ComponentVersionDataResource.CreateResourceIdentifier" /> to create a <see cref="ComponentVersionDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ComponentVersionDataResource" /> object. </returns>
        public static ComponentVersionDataResource GetComponentVersionDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ComponentVersionDataResource.ValidateResourceId(id);
                return new ComponentVersionDataResource(client, id);
            }
            );
        }
        #endregion

        #region DataContainerDataResource
        /// <summary>
        /// Gets an object representing a <see cref="DataContainerDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataContainerDataResource.CreateResourceIdentifier" /> to create a <see cref="DataContainerDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataContainerDataResource" /> object. </returns>
        public static DataContainerDataResource GetDataContainerDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataContainerDataResource.ValidateResourceId(id);
                return new DataContainerDataResource(client, id);
            }
            );
        }
        #endregion

        #region DataVersionBaseDataResource
        /// <summary>
        /// Gets an object representing a <see cref="DataVersionBaseDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataVersionBaseDataResource.CreateResourceIdentifier" /> to create a <see cref="DataVersionBaseDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataVersionBaseDataResource" /> object. </returns>
        public static DataVersionBaseDataResource GetDataVersionBaseDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataVersionBaseDataResource.ValidateResourceId(id);
                return new DataVersionBaseDataResource(client, id);
            }
            );
        }
        #endregion

        #region DatastoreDataResource
        /// <summary>
        /// Gets an object representing a <see cref="DatastoreDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DatastoreDataResource.CreateResourceIdentifier" /> to create a <see cref="DatastoreDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatastoreDataResource" /> object. </returns>
        public static DatastoreDataResource GetDatastoreDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DatastoreDataResource.ValidateResourceId(id);
                return new DatastoreDataResource(client, id);
            }
            );
        }
        #endregion

        #region EnvironmentContainerDataResource
        /// <summary>
        /// Gets an object representing an <see cref="EnvironmentContainerDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EnvironmentContainerDataResource.CreateResourceIdentifier" /> to create an <see cref="EnvironmentContainerDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EnvironmentContainerDataResource" /> object. </returns>
        public static EnvironmentContainerDataResource GetEnvironmentContainerDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                EnvironmentContainerDataResource.ValidateResourceId(id);
                return new EnvironmentContainerDataResource(client, id);
            }
            );
        }
        #endregion

        #region EnvironmentVersionDataResource
        /// <summary>
        /// Gets an object representing an <see cref="EnvironmentVersionDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EnvironmentVersionDataResource.CreateResourceIdentifier" /> to create an <see cref="EnvironmentVersionDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EnvironmentVersionDataResource" /> object. </returns>
        public static EnvironmentVersionDataResource GetEnvironmentVersionDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                EnvironmentVersionDataResource.ValidateResourceId(id);
                return new EnvironmentVersionDataResource(client, id);
            }
            );
        }
        #endregion

        #region JobBaseDataResource
        /// <summary>
        /// Gets an object representing a <see cref="JobBaseDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="JobBaseDataResource.CreateResourceIdentifier" /> to create a <see cref="JobBaseDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="JobBaseDataResource" /> object. </returns>
        public static JobBaseDataResource GetJobBaseDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                JobBaseDataResource.ValidateResourceId(id);
                return new JobBaseDataResource(client, id);
            }
            );
        }
        #endregion

        #region ModelContainerDataResource
        /// <summary>
        /// Gets an object representing a <see cref="ModelContainerDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ModelContainerDataResource.CreateResourceIdentifier" /> to create a <see cref="ModelContainerDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ModelContainerDataResource" /> object. </returns>
        public static ModelContainerDataResource GetModelContainerDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ModelContainerDataResource.ValidateResourceId(id);
                return new ModelContainerDataResource(client, id);
            }
            );
        }
        #endregion

        #region ModelVersionDataResource
        /// <summary>
        /// Gets an object representing a <see cref="ModelVersionDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ModelVersionDataResource.CreateResourceIdentifier" /> to create a <see cref="ModelVersionDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ModelVersionDataResource" /> object. </returns>
        public static ModelVersionDataResource GetModelVersionDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ModelVersionDataResource.ValidateResourceId(id);
                return new ModelVersionDataResource(client, id);
            }
            );
        }
        #endregion

        #region OnlineEndpointDataResource
        /// <summary>
        /// Gets an object representing an <see cref="OnlineEndpointDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OnlineEndpointDataResource.CreateResourceIdentifier" /> to create an <see cref="OnlineEndpointDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnlineEndpointDataResource" /> object. </returns>
        public static OnlineEndpointDataResource GetOnlineEndpointDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OnlineEndpointDataResource.ValidateResourceId(id);
                return new OnlineEndpointDataResource(client, id);
            }
            );
        }
        #endregion

        #region OnlineDeploymentDataResource
        /// <summary>
        /// Gets an object representing an <see cref="OnlineDeploymentDataResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OnlineDeploymentDataResource.CreateResourceIdentifier" /> to create an <see cref="OnlineDeploymentDataResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnlineDeploymentDataResource" /> object. </returns>
        public static OnlineDeploymentDataResource GetOnlineDeploymentDataResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OnlineDeploymentDataResource.ValidateResourceId(id);
                return new OnlineDeploymentDataResource(client, id);
            }
            );
        }
        #endregion
    }
}
