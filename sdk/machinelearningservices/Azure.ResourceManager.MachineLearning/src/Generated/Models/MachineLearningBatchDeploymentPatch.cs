// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Strictly used in update requests. </summary>
    public partial class MachineLearningBatchDeploymentPatch
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MachineLearningBatchDeploymentPatch"/>. </summary>
        public MachineLearningBatchDeploymentPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="MachineLearningBatchDeploymentPatch"/>. </summary>
        /// <param name="properties"> Additional attributes of the entity. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MachineLearningBatchDeploymentPatch(PartialBatchDeployment properties, IDictionary<string, string> tags, Dictionary<string, BinaryData> rawData)
        {
            Properties = properties;
            Tags = tags;
            _rawData = rawData;
        }

        /// <summary> Additional attributes of the entity. </summary>
        internal PartialBatchDeployment Properties { get; set; }
        /// <summary> Description of the endpoint deployment. </summary>
        public string PartialBatchDeploymentDescription
        {
            get => Properties is null ? default : Properties.Description;
            set
            {
                if (Properties is null)
                    Properties = new PartialBatchDeployment();
                Properties.Description = value;
            }
        }

        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
    }
}
