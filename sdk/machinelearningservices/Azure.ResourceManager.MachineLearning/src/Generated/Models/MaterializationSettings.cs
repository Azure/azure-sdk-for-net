// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The MaterializationSettings. </summary>
    public partial class MaterializationSettings
    {
        /// <summary> Initializes a new instance of <see cref="MaterializationSettings"/>. </summary>
        public MaterializationSettings()
        {
            SparkConfiguration = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="MaterializationSettings"/>. </summary>
        /// <param name="notification"> Specifies the notification details. </param>
        /// <param name="resource"> Specifies the compute resource settings. </param>
        /// <param name="schedule"> Specifies the schedule details. </param>
        /// <param name="sparkConfiguration"> Specifies the spark compute settings. </param>
        /// <param name="storeType"> Specifies the stores to which materialization should happen. </param>
        internal MaterializationSettings(NotificationSetting notification, MaterializationComputeResource resource, MachineLearningRecurrenceTrigger schedule, IDictionary<string, string> sparkConfiguration, MaterializationStoreType? storeType)
        {
            Notification = notification;
            Resource = resource;
            Schedule = schedule;
            SparkConfiguration = sparkConfiguration;
            StoreType = storeType;
        }

        /// <summary> Specifies the notification details. </summary>
        public NotificationSetting Notification { get; set; }
        /// <summary> Specifies the compute resource settings. </summary>
        internal MaterializationComputeResource Resource { get; set; }
        /// <summary> Specifies the instance type. </summary>
        public string ResourceInstanceType
        {
            get => Resource is null ? default : Resource.InstanceType;
            set
            {
                if (Resource is null)
                    Resource = new MaterializationComputeResource();
                Resource.InstanceType = value;
            }
        }

        /// <summary> Specifies the schedule details. </summary>
        public MachineLearningRecurrenceTrigger Schedule { get; set; }
        /// <summary> Specifies the spark compute settings. </summary>
        public IDictionary<string, string> SparkConfiguration { get; set; }
        /// <summary> Specifies the stores to which materialization should happen. </summary>
        public MaterializationStoreType? StoreType { get; set; }
    }
}
