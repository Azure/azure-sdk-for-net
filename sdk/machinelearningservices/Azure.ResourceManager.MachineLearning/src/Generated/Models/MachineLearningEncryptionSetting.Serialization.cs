// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningEncryptionSetting : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(CosmosDBResourceId))
            {
                writer.WritePropertyName("cosmosDbResourceId"u8);
                writer.WriteStringValue(CosmosDBResourceId);
            }
            if (Optional.IsDefined(Identity))
            {
                writer.WritePropertyName("identity"u8);
                writer.WriteObjectValue(Identity);
            }
            writer.WritePropertyName("keyVaultProperties"u8);
            writer.WriteObjectValue(KeyVaultProperties);
            if (Optional.IsDefined(SearchAccountResourceId))
            {
                writer.WritePropertyName("searchAccountResourceId"u8);
                writer.WriteStringValue(SearchAccountResourceId);
            }
            writer.WritePropertyName("status"u8);
            writer.WriteStringValue(Status.ToString());
            if (Optional.IsDefined(StorageAccountResourceId))
            {
                writer.WritePropertyName("storageAccountResourceId"u8);
                writer.WriteStringValue(StorageAccountResourceId);
            }
            writer.WriteEndObject();
        }

        internal static MachineLearningEncryptionSetting DeserializeMachineLearningEncryptionSetting(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ResourceIdentifier> cosmosDbResourceId = default;
            Optional<MachineLearningCmkIdentity> identity = default;
            MachineLearningEncryptionKeyVaultProperties keyVaultProperties = default;
            Optional<ResourceIdentifier> searchAccountResourceId = default;
            MachineLearningEncryptionStatus status = default;
            Optional<ResourceIdentifier> storageAccountResourceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("cosmosDbResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cosmosDbResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("identity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    identity = MachineLearningCmkIdentity.DeserializeMachineLearningCmkIdentity(property.Value);
                    continue;
                }
                if (property.NameEquals("keyVaultProperties"u8))
                {
                    keyVaultProperties = MachineLearningEncryptionKeyVaultProperties.DeserializeMachineLearningEncryptionKeyVaultProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("searchAccountResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    searchAccountResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = new MachineLearningEncryptionStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("storageAccountResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storageAccountResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
            }
            return new MachineLearningEncryptionSetting(cosmosDbResourceId.Value, identity.Value, keyVaultProperties, searchAccountResourceId.Value, status, storageAccountResourceId.Value);
        }
    }
}
