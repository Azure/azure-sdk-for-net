// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Base definition of a schedule. </summary>
    public partial class ScheduleProperties : ResourceBase
    {
        /// <summary> Initializes a new instance of ScheduleProperties. </summary>
        /// <param name="action">
        /// [Required] Specifies the action of the schedule
        /// Please note <see cref="ScheduleActionBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="JobScheduleAction"/> and <see cref="EndpointScheduleAction"/>.
        /// </param>
        /// <param name="trigger">
        /// [Required] Specifies the trigger details
        /// Please note <see cref="TriggerBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CronTrigger"/> and <see cref="RecurrenceTrigger"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="action"/> or <paramref name="trigger"/> is null. </exception>
        public ScheduleProperties(ScheduleActionBase action, TriggerBase trigger)
        {
            Argument.AssertNotNull(action, nameof(action));
            Argument.AssertNotNull(trigger, nameof(trigger));

            Action = action;
            Trigger = trigger;
        }

        /// <summary> Initializes a new instance of ScheduleProperties. </summary>
        /// <param name="description"> The asset description text. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="action">
        /// [Required] Specifies the action of the schedule
        /// Please note <see cref="ScheduleActionBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="JobScheduleAction"/> and <see cref="EndpointScheduleAction"/>.
        /// </param>
        /// <param name="displayName"> Display name of schedule. </param>
        /// <param name="isEnabled"> Is the schedule enabled?. </param>
        /// <param name="provisioningState"> Provisioning state for the schedule. </param>
        /// <param name="trigger">
        /// [Required] Specifies the trigger details
        /// Please note <see cref="TriggerBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CronTrigger"/> and <see cref="RecurrenceTrigger"/>.
        /// </param>
        internal ScheduleProperties(string description, IDictionary<string, string> properties, IDictionary<string, string> tags, ScheduleActionBase action, string displayName, bool? isEnabled, ScheduleProvisioningStatus? provisioningState, TriggerBase trigger) : base(description, properties, tags)
        {
            Action = action;
            DisplayName = displayName;
            IsEnabled = isEnabled;
            ProvisioningState = provisioningState;
            Trigger = trigger;
        }

        /// <summary>
        /// [Required] Specifies the action of the schedule
        /// Please note <see cref="ScheduleActionBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="JobScheduleAction"/> and <see cref="EndpointScheduleAction"/>.
        /// </summary>
        public ScheduleActionBase Action { get; set; }
        /// <summary> Display name of schedule. </summary>
        public string DisplayName { get; set; }
        /// <summary> Is the schedule enabled?. </summary>
        public bool? IsEnabled { get; set; }
        /// <summary> Provisioning state for the schedule. </summary>
        public ScheduleProvisioningStatus? ProvisioningState { get; }
        /// <summary>
        /// [Required] Specifies the trigger details
        /// Please note <see cref="TriggerBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CronTrigger"/> and <see cref="RecurrenceTrigger"/>.
        /// </summary>
        public TriggerBase Trigger { get; set; }
    }
}
