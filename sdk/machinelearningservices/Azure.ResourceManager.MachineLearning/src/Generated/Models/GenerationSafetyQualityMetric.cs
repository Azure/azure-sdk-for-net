// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Generation safety quality metric enum. </summary>
    public readonly partial struct GenerationSafetyQualityMetric : IEquatable<GenerationSafetyQualityMetric>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="GenerationSafetyQualityMetric"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public GenerationSafetyQualityMetric(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AcceptableGroundednessScorePerInstanceValue = "AcceptableGroundednessScorePerInstance";
        private const string AggregatedGroundednessPassRateValue = "AggregatedGroundednessPassRate";
        private const string AcceptableCoherenceScorePerInstanceValue = "AcceptableCoherenceScorePerInstance";
        private const string AggregatedCoherencePassRateValue = "AggregatedCoherencePassRate";
        private const string AcceptableFluencyScorePerInstanceValue = "AcceptableFluencyScorePerInstance";
        private const string AggregatedFluencyPassRateValue = "AggregatedFluencyPassRate";
        private const string AcceptableSimilarityScorePerInstanceValue = "AcceptableSimilarityScorePerInstance";
        private const string AggregatedSimilarityPassRateValue = "AggregatedSimilarityPassRate";
        private const string AcceptableRelevanceScorePerInstanceValue = "AcceptableRelevanceScorePerInstance";
        private const string AggregatedRelevancePassRateValue = "AggregatedRelevancePassRate";

        /// <summary> AcceptableGroundednessScorePerInstance. </summary>
        public static GenerationSafetyQualityMetric AcceptableGroundednessScorePerInstance { get; } = new GenerationSafetyQualityMetric(AcceptableGroundednessScorePerInstanceValue);
        /// <summary> AggregatedGroundednessPassRate. </summary>
        public static GenerationSafetyQualityMetric AggregatedGroundednessPassRate { get; } = new GenerationSafetyQualityMetric(AggregatedGroundednessPassRateValue);
        /// <summary> AcceptableCoherenceScorePerInstance. </summary>
        public static GenerationSafetyQualityMetric AcceptableCoherenceScorePerInstance { get; } = new GenerationSafetyQualityMetric(AcceptableCoherenceScorePerInstanceValue);
        /// <summary> AggregatedCoherencePassRate. </summary>
        public static GenerationSafetyQualityMetric AggregatedCoherencePassRate { get; } = new GenerationSafetyQualityMetric(AggregatedCoherencePassRateValue);
        /// <summary> AcceptableFluencyScorePerInstance. </summary>
        public static GenerationSafetyQualityMetric AcceptableFluencyScorePerInstance { get; } = new GenerationSafetyQualityMetric(AcceptableFluencyScorePerInstanceValue);
        /// <summary> AggregatedFluencyPassRate. </summary>
        public static GenerationSafetyQualityMetric AggregatedFluencyPassRate { get; } = new GenerationSafetyQualityMetric(AggregatedFluencyPassRateValue);
        /// <summary> AcceptableSimilarityScorePerInstance. </summary>
        public static GenerationSafetyQualityMetric AcceptableSimilarityScorePerInstance { get; } = new GenerationSafetyQualityMetric(AcceptableSimilarityScorePerInstanceValue);
        /// <summary> AggregatedSimilarityPassRate. </summary>
        public static GenerationSafetyQualityMetric AggregatedSimilarityPassRate { get; } = new GenerationSafetyQualityMetric(AggregatedSimilarityPassRateValue);
        /// <summary> AcceptableRelevanceScorePerInstance. </summary>
        public static GenerationSafetyQualityMetric AcceptableRelevanceScorePerInstance { get; } = new GenerationSafetyQualityMetric(AcceptableRelevanceScorePerInstanceValue);
        /// <summary> AggregatedRelevancePassRate. </summary>
        public static GenerationSafetyQualityMetric AggregatedRelevancePassRate { get; } = new GenerationSafetyQualityMetric(AggregatedRelevancePassRateValue);
        /// <summary> Determines if two <see cref="GenerationSafetyQualityMetric"/> values are the same. </summary>
        public static bool operator ==(GenerationSafetyQualityMetric left, GenerationSafetyQualityMetric right) => left.Equals(right);
        /// <summary> Determines if two <see cref="GenerationSafetyQualityMetric"/> values are not the same. </summary>
        public static bool operator !=(GenerationSafetyQualityMetric left, GenerationSafetyQualityMetric right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="GenerationSafetyQualityMetric"/>. </summary>
        public static implicit operator GenerationSafetyQualityMetric(string value) => new GenerationSafetyQualityMetric(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is GenerationSafetyQualityMetric other && Equals(other);
        /// <inheritdoc />
        public bool Equals(GenerationSafetyQualityMetric other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
