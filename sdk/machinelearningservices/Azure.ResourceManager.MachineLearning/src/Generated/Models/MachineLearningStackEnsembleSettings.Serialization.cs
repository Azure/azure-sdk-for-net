// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningStackEnsembleSettings : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(StackMetaLearnerKWargs))
            {
                if (StackMetaLearnerKWargs != null)
                {
                    writer.WritePropertyName("stackMetaLearnerKWargs"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(StackMetaLearnerKWargs);
#else
                    JsonSerializer.Serialize(writer, JsonDocument.Parse(StackMetaLearnerKWargs.ToString()).RootElement);
#endif
                }
                else
                {
                    writer.WriteNull("stackMetaLearnerKWargs");
                }
            }
            if (Core.Optional.IsDefined(StackMetaLearnerTrainPercentage))
            {
                writer.WritePropertyName("stackMetaLearnerTrainPercentage"u8);
                writer.WriteNumberValue(StackMetaLearnerTrainPercentage.Value);
            }
            if (Core.Optional.IsDefined(StackMetaLearnerType))
            {
                writer.WritePropertyName("stackMetaLearnerType"u8);
                writer.WriteStringValue(StackMetaLearnerType.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static MachineLearningStackEnsembleSettings DeserializeMachineLearningStackEnsembleSettings(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<BinaryData> stackMetaLearnerKWargs = default;
            Core.Optional<double> stackMetaLearnerTrainPercentage = default;
            Core.Optional<MachineLearningStackMetaLearnerType> stackMetaLearnerType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("stackMetaLearnerKWargs"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        stackMetaLearnerKWargs = null;
                        continue;
                    }
                    stackMetaLearnerKWargs = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("stackMetaLearnerTrainPercentage"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    stackMetaLearnerTrainPercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("stackMetaLearnerType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    stackMetaLearnerType = new MachineLearningStackMetaLearnerType(property.Value.GetString());
                    continue;
                }
            }
            return new MachineLearningStackEnsembleSettings(stackMetaLearnerKWargs.Value, Core.Optional.ToNullable(stackMetaLearnerTrainPercentage), Core.Optional.ToNullable(stackMetaLearnerType));
        }
    }
}
