// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MonitoringTarget : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DeploymentId))
            {
                if (DeploymentId != null)
                {
                    writer.WritePropertyName("deploymentId"u8);
                    writer.WriteStringValue(DeploymentId);
                }
                else
                {
                    writer.WriteNull("deploymentId");
                }
            }
            if (Optional.IsDefined(ModelId))
            {
                if (ModelId != null)
                {
                    writer.WritePropertyName("modelId"u8);
                    writer.WriteStringValue(ModelId);
                }
                else
                {
                    writer.WriteNull("modelId");
                }
            }
            writer.WritePropertyName("taskType"u8);
            writer.WriteStringValue(TaskType.ToString());
            writer.WriteEndObject();
        }

        internal static MonitoringTarget DeserializeMonitoringTarget(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> deploymentId = default;
            Optional<string> modelId = default;
            ModelTaskType taskType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deploymentId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deploymentId = null;
                        continue;
                    }
                    deploymentId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("modelId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        modelId = null;
                        continue;
                    }
                    modelId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("taskType"u8))
                {
                    taskType = new ModelTaskType(property.Value.GetString());
                    continue;
                }
            }
            return new MonitoringTarget(deploymentId.Value, modelId.Value, taskType);
        }
    }
}
