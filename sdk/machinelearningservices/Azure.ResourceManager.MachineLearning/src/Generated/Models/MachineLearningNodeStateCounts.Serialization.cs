// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningNodeStateCounts
    {
        internal static MachineLearningNodeStateCounts DeserializeMachineLearningNodeStateCounts(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<int> idleNodeCount = default;
            Optional<int> runningNodeCount = default;
            Optional<int> preparingNodeCount = default;
            Optional<int> unusableNodeCount = default;
            Optional<int> leavingNodeCount = default;
            Optional<int> preemptedNodeCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("idleNodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    idleNodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("runningNodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    runningNodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("preparingNodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preparingNodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("unusableNodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    unusableNodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("leavingNodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    leavingNodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("preemptedNodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preemptedNodeCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new MachineLearningNodeStateCounts(Optional.ToNullable(idleNodeCount), Optional.ToNullable(runningNodeCount), Optional.ToNullable(preparingNodeCount), Optional.ToNullable(unusableNodeCount), Optional.ToNullable(leavingNodeCount), Optional.ToNullable(preemptedNodeCount));
        }
    }
}
