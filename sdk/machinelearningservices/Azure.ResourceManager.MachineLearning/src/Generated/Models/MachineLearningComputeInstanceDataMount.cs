// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// Defines an Aml Instance DataMount.
    /// Serialized Name: ComputeInstanceDataMount
    /// </summary>
    public partial class MachineLearningComputeInstanceDataMount
    {
        /// <summary> Initializes a new instance of MachineLearningComputeInstanceDataMount. </summary>
        internal MachineLearningComputeInstanceDataMount()
        {
        }

        /// <summary> Initializes a new instance of MachineLearningComputeInstanceDataMount. </summary>
        /// <param name="source">
        /// Source of the ComputeInstance data mount.
        /// Serialized Name: ComputeInstanceDataMount.source
        /// </param>
        /// <param name="sourceType">
        /// Data source type.
        /// Serialized Name: ComputeInstanceDataMount.sourceType
        /// </param>
        /// <param name="mountName">
        /// name of the ComputeInstance data mount.
        /// Serialized Name: ComputeInstanceDataMount.mountName
        /// </param>
        /// <param name="mountAction">
        /// Mount Action.
        /// Serialized Name: ComputeInstanceDataMount.mountAction
        /// </param>
        /// <param name="createdBy">
        /// who this data mount created by.
        /// Serialized Name: ComputeInstanceDataMount.createdBy
        /// </param>
        /// <param name="mountPath">
        /// Path of this data mount.
        /// Serialized Name: ComputeInstanceDataMount.mountPath
        /// </param>
        /// <param name="mountState">
        /// Mount state.
        /// Serialized Name: ComputeInstanceDataMount.mountState
        /// </param>
        /// <param name="mountedOn">
        /// The time when the disk mounted.
        /// Serialized Name: ComputeInstanceDataMount.mountedOn
        /// </param>
        /// <param name="error">
        /// Error of this data mount.
        /// Serialized Name: ComputeInstanceDataMount.error
        /// </param>
        internal MachineLearningComputeInstanceDataMount(string source, MachineLearningSourceType? sourceType, string mountName, MachineLearningMountAction? mountAction, string createdBy, string mountPath, MachineLearningMountState? mountState, DateTimeOffset? mountedOn, string error)
        {
            Source = source;
            SourceType = sourceType;
            MountName = mountName;
            MountAction = mountAction;
            CreatedBy = createdBy;
            MountPath = mountPath;
            MountState = mountState;
            MountedOn = mountedOn;
            Error = error;
        }

        /// <summary>
        /// Source of the ComputeInstance data mount.
        /// Serialized Name: ComputeInstanceDataMount.source
        /// </summary>
        public string Source { get; }
        /// <summary>
        /// Data source type.
        /// Serialized Name: ComputeInstanceDataMount.sourceType
        /// </summary>
        public MachineLearningSourceType? SourceType { get; }
        /// <summary>
        /// name of the ComputeInstance data mount.
        /// Serialized Name: ComputeInstanceDataMount.mountName
        /// </summary>
        public string MountName { get; }
        /// <summary>
        /// Mount Action.
        /// Serialized Name: ComputeInstanceDataMount.mountAction
        /// </summary>
        public MachineLearningMountAction? MountAction { get; }
        /// <summary>
        /// who this data mount created by.
        /// Serialized Name: ComputeInstanceDataMount.createdBy
        /// </summary>
        public string CreatedBy { get; }
        /// <summary>
        /// Path of this data mount.
        /// Serialized Name: ComputeInstanceDataMount.mountPath
        /// </summary>
        public string MountPath { get; }
        /// <summary>
        /// Mount state.
        /// Serialized Name: ComputeInstanceDataMount.mountState
        /// </summary>
        public MachineLearningMountState? MountState { get; }
        /// <summary>
        /// The time when the disk mounted.
        /// Serialized Name: ComputeInstanceDataMount.mountedOn
        /// </summary>
        public DateTimeOffset? MountedOn { get; }
        /// <summary>
        /// Error of this data mount.
        /// Serialized Name: ComputeInstanceDataMount.error
        /// </summary>
        public string Error { get; }
    }
}
