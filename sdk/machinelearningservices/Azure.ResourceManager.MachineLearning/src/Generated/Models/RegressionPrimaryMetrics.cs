// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Primary metrics for Regression task. </summary>
    public readonly partial struct RegressionPrimaryMetrics : IEquatable<RegressionPrimaryMetrics>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RegressionPrimaryMetrics"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RegressionPrimaryMetrics(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SpearmanCorrelationValue = "SpearmanCorrelation";
        private const string NormalizedRootMeanSquaredErrorValue = "NormalizedRootMeanSquaredError";
        private const string R2ScoreValue = "R2Score";
        private const string NormalizedMeanAbsoluteErrorValue = "NormalizedMeanAbsoluteError";

        /// <summary> The Spearman&apos;s rank coefficient of correlation is a nonparametric measure of rank correlation. </summary>
        public static RegressionPrimaryMetrics SpearmanCorrelation { get; } = new RegressionPrimaryMetrics(SpearmanCorrelationValue);
        /// <summary> The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales. </summary>
        public static RegressionPrimaryMetrics NormalizedRootMeanSquaredError { get; } = new RegressionPrimaryMetrics(NormalizedRootMeanSquaredErrorValue);
        /// <summary> The R2 score is one of the performance evaluation measures for forecasting-based machine learning models. </summary>
        public static RegressionPrimaryMetrics R2Score { get; } = new RegressionPrimaryMetrics(R2ScoreValue);
        /// <summary> The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales. </summary>
        public static RegressionPrimaryMetrics NormalizedMeanAbsoluteError { get; } = new RegressionPrimaryMetrics(NormalizedMeanAbsoluteErrorValue);
        /// <summary> Determines if two <see cref="RegressionPrimaryMetrics"/> values are the same. </summary>
        public static bool operator ==(RegressionPrimaryMetrics left, RegressionPrimaryMetrics right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RegressionPrimaryMetrics"/> values are not the same. </summary>
        public static bool operator !=(RegressionPrimaryMetrics left, RegressionPrimaryMetrics right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RegressionPrimaryMetrics"/>. </summary>
        public static implicit operator RegressionPrimaryMetrics(string value) => new RegressionPrimaryMetrics(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RegressionPrimaryMetrics other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RegressionPrimaryMetrics other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
