// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Trial component definition. </summary>
    public partial class TrialComponent
    {
        /// <summary> Initializes a new instance of TrialComponent. </summary>
        /// <param name="command"> [Required] The command to execute on startup of the job. eg. &quot;python train.py&quot;. </param>
        /// <param name="environmentId"> [Required] The ARM resource ID of the Environment specification for the job. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="command"/> or <paramref name="environmentId"/> is null. </exception>
        public TrialComponent(string command, string environmentId)
        {
            if (command == null)
            {
                throw new ArgumentNullException(nameof(command));
            }
            if (environmentId == null)
            {
                throw new ArgumentNullException(nameof(environmentId));
            }

            Command = command;
            EnvironmentId = environmentId;
            EnvironmentVariables = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of TrialComponent. </summary>
        /// <param name="codeId"> ARM resource ID of the code asset. </param>
        /// <param name="command"> [Required] The command to execute on startup of the job. eg. &quot;python train.py&quot;. </param>
        /// <param name="distribution">
        /// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
        /// Please note <see cref="DistributionConfiguration"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="Mpi"/>, <see cref="PyTorch"/> and <see cref="TensorFlow"/>.
        /// </param>
        /// <param name="environmentId"> [Required] The ARM resource ID of the Environment specification for the job. </param>
        /// <param name="environmentVariables"> Environment variables included in the job. </param>
        /// <param name="resources"> Compute Resource configuration for the job. </param>
        internal TrialComponent(string codeId, string command, DistributionConfiguration distribution, string environmentId, IDictionary<string, string> environmentVariables, ResourceConfiguration resources)
        {
            CodeId = codeId;
            Command = command;
            Distribution = distribution;
            EnvironmentId = environmentId;
            EnvironmentVariables = environmentVariables;
            Resources = resources;
        }

        /// <summary> ARM resource ID of the code asset. </summary>
        public string CodeId { get; set; }
        /// <summary> [Required] The command to execute on startup of the job. eg. &quot;python train.py&quot;. </summary>
        public string Command { get; set; }
        /// <summary>
        /// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
        /// Please note <see cref="DistributionConfiguration"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="Mpi"/>, <see cref="PyTorch"/> and <see cref="TensorFlow"/>.
        /// </summary>
        public DistributionConfiguration Distribution { get; set; }
        /// <summary> [Required] The ARM resource ID of the Environment specification for the job. </summary>
        public string EnvironmentId { get; set; }
        /// <summary> Environment variables included in the job. </summary>
        public IDictionary<string, string> EnvironmentVariables { get; set; }
        /// <summary> Compute Resource configuration for the job. </summary>
        public ResourceConfiguration Resources { get; set; }
    }
}
