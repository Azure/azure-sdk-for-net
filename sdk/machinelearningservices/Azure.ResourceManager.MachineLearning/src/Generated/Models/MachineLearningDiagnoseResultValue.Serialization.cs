// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningDiagnoseResultValue
    {
        internal static MachineLearningDiagnoseResultValue DeserializeMachineLearningDiagnoseResultValue(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> userDefinedRouteResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> networkSecurityRuleResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> resourceLockResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> dnsResolutionResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> storageAccountResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> keyVaultResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> containerRegistryResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> applicationInsightsResults = default;
            Core.Optional<IReadOnlyList<MachineLearningDiagnoseResult>> otherResults = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("userDefinedRouteResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    userDefinedRouteResults = array;
                    continue;
                }
                if (property.NameEquals("networkSecurityRuleResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    networkSecurityRuleResults = array;
                    continue;
                }
                if (property.NameEquals("resourceLockResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    resourceLockResults = array;
                    continue;
                }
                if (property.NameEquals("dnsResolutionResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    dnsResolutionResults = array;
                    continue;
                }
                if (property.NameEquals("storageAccountResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    storageAccountResults = array;
                    continue;
                }
                if (property.NameEquals("keyVaultResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    keyVaultResults = array;
                    continue;
                }
                if (property.NameEquals("containerRegistryResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    containerRegistryResults = array;
                    continue;
                }
                if (property.NameEquals("applicationInsightsResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    applicationInsightsResults = array;
                    continue;
                }
                if (property.NameEquals("otherResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MachineLearningDiagnoseResult> array = new List<MachineLearningDiagnoseResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MachineLearningDiagnoseResult.DeserializeMachineLearningDiagnoseResult(item));
                    }
                    otherResults = array;
                    continue;
                }
            }
            return new MachineLearningDiagnoseResultValue(Core.Optional.ToList(userDefinedRouteResults), Core.Optional.ToList(networkSecurityRuleResults), Core.Optional.ToList(resourceLockResults), Core.Optional.ToList(dnsResolutionResults), Core.Optional.ToList(storageAccountResults), Core.Optional.ToList(keyVaultResults), Core.Optional.ToList(containerRegistryResults), Core.Optional.ToList(applicationInsightsResults), Core.Optional.ToList(otherResults));
        }
    }
}
