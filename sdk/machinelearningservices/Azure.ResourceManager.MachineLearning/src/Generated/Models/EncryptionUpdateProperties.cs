// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The EncryptionUpdateProperties. </summary>
    public partial class EncryptionUpdateProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EncryptionUpdateProperties"/>. </summary>
        /// <param name="keyVaultProperties"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyVaultProperties"/> is null. </exception>
        public EncryptionUpdateProperties(EncryptionKeyVaultUpdateProperties keyVaultProperties)
        {
            Argument.AssertNotNull(keyVaultProperties, nameof(keyVaultProperties));

            KeyVaultProperties = keyVaultProperties;
        }

        /// <summary> Initializes a new instance of <see cref="EncryptionUpdateProperties"/>. </summary>
        /// <param name="keyVaultProperties"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EncryptionUpdateProperties(EncryptionKeyVaultUpdateProperties keyVaultProperties, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyVaultProperties = keyVaultProperties;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="EncryptionUpdateProperties"/> for deserialization. </summary>
        internal EncryptionUpdateProperties()
        {
        }

        /// <summary> Gets the key vault properties. </summary>
        internal EncryptionKeyVaultUpdateProperties KeyVaultProperties { get; }
        /// <summary> Gets the key identifier. </summary>
        public string KeyIdentifier
        {
            get => KeyVaultProperties?.KeyIdentifier;
        }
    }
}
