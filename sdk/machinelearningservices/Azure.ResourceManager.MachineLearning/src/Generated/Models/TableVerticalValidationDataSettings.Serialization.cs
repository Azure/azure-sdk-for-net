// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class TableVerticalValidationDataSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(CvSplitColumnNames))
            {
                if (CvSplitColumnNames != null)
                {
                    writer.WritePropertyName("cvSplitColumnNames");
                    writer.WriteStartArray();
                    foreach (var item in CvSplitColumnNames)
                    {
                        writer.WriteStringValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("cvSplitColumnNames");
                }
            }
            if (Optional.IsDefined(NCrossValidations))
            {
                if (NCrossValidations != null)
                {
                    writer.WritePropertyName("nCrossValidations");
                    writer.WriteObjectValue(NCrossValidations);
                }
                else
                {
                    writer.WriteNull("nCrossValidations");
                }
            }
            if (Optional.IsDefined(Data))
            {
                if (Data != null)
                {
                    writer.WritePropertyName("data");
                    writer.WriteObjectValue(Data);
                }
                else
                {
                    writer.WriteNull("data");
                }
            }
            if (Optional.IsDefined(ValidationDataSize))
            {
                if (ValidationDataSize != null)
                {
                    writer.WritePropertyName("validationDataSize");
                    writer.WriteNumberValue(ValidationDataSize.Value);
                }
                else
                {
                    writer.WriteNull("validationDataSize");
                }
            }
            writer.WriteEndObject();
        }

        internal static TableVerticalValidationDataSettings DeserializeTableVerticalValidationDataSettings(JsonElement element)
        {
            Optional<IList<string>> cvSplitColumnNames = default;
            Optional<NCrossValidations> nCrossValidations = default;
            Optional<MLTableJobInput> data = default;
            Optional<double?> validationDataSize = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("cvSplitColumnNames"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        cvSplitColumnNames = null;
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    cvSplitColumnNames = array;
                    continue;
                }
                if (property.NameEquals("nCrossValidations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nCrossValidations = null;
                        continue;
                    }
                    nCrossValidations = NCrossValidations.DeserializeNCrossValidations(property.Value);
                    continue;
                }
                if (property.NameEquals("data"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        data = null;
                        continue;
                    }
                    data = MLTableJobInput.DeserializeMLTableJobInput(property.Value);
                    continue;
                }
                if (property.NameEquals("validationDataSize"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        validationDataSize = null;
                        continue;
                    }
                    validationDataSize = property.Value.GetDouble();
                    continue;
                }
            }
            return new TableVerticalValidationDataSettings(data.Value, Optional.ToNullable(validationDataSize), Optional.ToList(cvSplitColumnNames), nCrossValidations.Value);
        }
    }
}
