// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class PrivateEndpointDestination : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ServiceResourceId))
            {
                writer.WritePropertyName("serviceResourceId"u8);
                writer.WriteStringValue(ServiceResourceId);
            }
            if (Optional.IsDefined(SparkEnabled))
            {
                writer.WritePropertyName("sparkEnabled"u8);
                writer.WriteBooleanValue(SparkEnabled.Value);
            }
            if (Optional.IsDefined(SparkStatus))
            {
                writer.WritePropertyName("sparkStatus"u8);
                writer.WriteStringValue(SparkStatus.Value.ToString());
            }
            if (Optional.IsDefined(SubresourceTarget))
            {
                writer.WritePropertyName("subresourceTarget"u8);
                writer.WriteStringValue(SubresourceTarget);
            }
            writer.WriteEndObject();
        }

        internal static PrivateEndpointDestination DeserializePrivateEndpointDestination(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> serviceResourceId = default;
            Optional<bool> sparkEnabled = default;
            Optional<OutboundRuleStatus> sparkStatus = default;
            Optional<string> subresourceTarget = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("serviceResourceId"u8))
                {
                    serviceResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sparkEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sparkEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("sparkStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sparkStatus = new OutboundRuleStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("subresourceTarget"u8))
                {
                    subresourceTarget = property.Value.GetString();
                    continue;
                }
            }
            return new PrivateEndpointDestination(serviceResourceId.Value, Optional.ToNullable(sparkEnabled), Optional.ToNullable(sparkStatus), subresourceTarget.Value);
        }
    }
}
