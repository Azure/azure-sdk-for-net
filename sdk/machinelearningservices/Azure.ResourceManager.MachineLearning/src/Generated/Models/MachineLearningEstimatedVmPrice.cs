// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The estimated price info for using a VM of a particular OS type, tier, etc. </summary>
    public partial class MachineLearningEstimatedVmPrice
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MachineLearningEstimatedVmPrice"/>. </summary>
        /// <param name="retailPrice"> The price charged for using the VM. </param>
        /// <param name="osType"> Operating system type used by the VM. </param>
        /// <param name="vmTier"> The type of the VM. </param>
        internal MachineLearningEstimatedVmPrice(double retailPrice, MachineLearningVmPriceOSType osType, MachineLearningVmTier vmTier)
        {
            RetailPrice = retailPrice;
            OSType = osType;
            VmTier = vmTier;
        }

        /// <summary> Initializes a new instance of <see cref="MachineLearningEstimatedVmPrice"/>. </summary>
        /// <param name="retailPrice"> The price charged for using the VM. </param>
        /// <param name="osType"> Operating system type used by the VM. </param>
        /// <param name="vmTier"> The type of the VM. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MachineLearningEstimatedVmPrice(double retailPrice, MachineLearningVmPriceOSType osType, MachineLearningVmTier vmTier, Dictionary<string, BinaryData> rawData)
        {
            RetailPrice = retailPrice;
            OSType = osType;
            VmTier = vmTier;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="MachineLearningEstimatedVmPrice"/> for deserialization. </summary>
        internal MachineLearningEstimatedVmPrice()
        {
        }

        /// <summary> The price charged for using the VM. </summary>
        public double RetailPrice { get; }
        /// <summary> Operating system type used by the VM. </summary>
        public MachineLearningVmPriceOSType OSType { get; }
        /// <summary> The type of the VM. </summary>
        public MachineLearningVmTier VmTier { get; }
    }
}
