// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class ImageSweepLimitSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MaxConcurrentTrials))
            {
                if (MaxConcurrentTrials != null)
                {
                    writer.WritePropertyName("maxConcurrentTrials");
                    writer.WriteNumberValue(MaxConcurrentTrials.Value);
                }
                else
                {
                    writer.WriteNull("maxConcurrentTrials");
                }
            }
            if (Optional.IsDefined(MaxTrials))
            {
                if (MaxTrials != null)
                {
                    writer.WritePropertyName("maxTrials");
                    writer.WriteNumberValue(MaxTrials.Value);
                }
                else
                {
                    writer.WriteNull("maxTrials");
                }
            }
            writer.WriteEndObject();
        }

        internal static ImageSweepLimitSettings DeserializeImageSweepLimitSettings(JsonElement element)
        {
            Optional<int?> maxConcurrentTrials = default;
            Optional<int?> maxTrials = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maxConcurrentTrials"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        maxConcurrentTrials = null;
                        continue;
                    }
                    maxConcurrentTrials = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxTrials"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        maxTrials = null;
                        continue;
                    }
                    maxTrials = property.Value.GetInt32();
                    continue;
                }
            }
            return new ImageSweepLimitSettings(Optional.ToNullable(maxConcurrentTrials), Optional.ToNullable(maxTrials));
        }
    }
}
