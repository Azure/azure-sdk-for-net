// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The ManagedOnlineEndpointResourceProperties. </summary>
    public partial class ManagedOnlineEndpointResourceProperties : EndpointResourceProperties
    {
        /// <summary> Initializes a new instance of <see cref="ManagedOnlineEndpointResourceProperties"/>. </summary>
        public ManagedOnlineEndpointResourceProperties()
        {
            MirrorTraffic = new ChangeTrackingDictionary<string, int>();
            Traffic = new ChangeTrackingDictionary<string, int>();
            EndpointType = EndpointType.ManagedOnlineEndpoint;
        }

        /// <summary> Initializes a new instance of <see cref="ManagedOnlineEndpointResourceProperties"/>. </summary>
        /// <param name="associatedResourceId"> Byo resource id for creating the built-in model service endpoints. </param>
        /// <param name="deployments"> Deployments info. </param>
        /// <param name="endpointType"> Type of the endpoint. </param>
        /// <param name="endpointUri"> Uri of the endpoint. </param>
        /// <param name="failureReason"> The failure reason if the creation failed. </param>
        /// <param name="location">
        /// Location of the endpoint.
        /// Since input dto and when parse endpoint resource share the same contract
        /// this Location field is just for parse the endpoint resource info
        /// we won't let customer specify the endpoint resource location since we will create it the same location as workspace
        /// </param>
        /// <param name="name"> Name of the endpoint. </param>
        /// <param name="provisioningState"> Read-only provision state status property. </param>
        /// <param name="shouldCreateAiServicesEndpoint"> Whether the proxy (non-byo) endpoint is a regular endpoint or a OneKeyV2 AI services account endpoint. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="authMode"> Enum to determine endpoint authentication mode. </param>
        /// <param name="compute"></param>
        /// <param name="description"></param>
        /// <param name="mirrorTraffic"> Dictionary of &lt;integer&gt;. </param>
        /// <param name="scoringUri"></param>
        /// <param name="traffic"> Dictionary of &lt;integer&gt;. </param>
        internal ManagedOnlineEndpointResourceProperties(ResourceIdentifier associatedResourceId, IList<EndpointDeploymentResourcePropertiesBasicResourceData> deployments, EndpointType endpointType, Uri endpointUri, string failureReason, AzureLocation? location, string name, DefaultResourceProvisioningState? provisioningState, bool? shouldCreateAiServicesEndpoint, IDictionary<string, BinaryData> serializedAdditionalRawData, MachineLearningEndpointAuthMode? authMode, string compute, string description, IDictionary<string, int> mirrorTraffic, Uri scoringUri, IDictionary<string, int> traffic) : base(associatedResourceId, deployments, endpointType, endpointUri, failureReason, location, name, provisioningState, shouldCreateAiServicesEndpoint, serializedAdditionalRawData)
        {
            AuthMode = authMode;
            Compute = compute;
            Description = description;
            MirrorTraffic = mirrorTraffic;
            ScoringUri = scoringUri;
            Traffic = traffic;
            EndpointType = endpointType;
        }

        /// <summary> Enum to determine endpoint authentication mode. </summary>
        public MachineLearningEndpointAuthMode? AuthMode { get; set; }
        /// <summary> Gets or sets the compute. </summary>
        public string Compute { get; set; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Dictionary of &lt;integer&gt;. </summary>
        public IDictionary<string, int> MirrorTraffic { get; }
        /// <summary> Gets or sets the scoring uri. </summary>
        public Uri ScoringUri { get; set; }
        /// <summary> Dictionary of &lt;integer&gt;. </summary>
        public IDictionary<string, int> Traffic { get; }
    }
}
