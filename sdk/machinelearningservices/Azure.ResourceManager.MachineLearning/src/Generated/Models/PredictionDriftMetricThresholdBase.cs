// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// The PredictionDriftMetricThresholdBase.
    /// Please note <see cref="PredictionDriftMetricThresholdBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="CategoricalPredictionDriftMetricThreshold"/> and <see cref="NumericalPredictionDriftMetricThreshold"/>.
    /// </summary>
    public abstract partial class PredictionDriftMetricThresholdBase
    {
        /// <summary> Initializes a new instance of <see cref="PredictionDriftMetricThresholdBase"/>. </summary>
        protected PredictionDriftMetricThresholdBase()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PredictionDriftMetricThresholdBase"/>. </summary>
        /// <param name="dataType"> [Required] Specifies the data type of the metric threshold. </param>
        /// <param name="threshold"> The threshold value. If null, a default value will be set depending on the selected metric. </param>
        internal PredictionDriftMetricThresholdBase(MonitoringFeatureDataType dataType, MonitoringThreshold threshold)
        {
            DataType = dataType;
            Threshold = threshold;
        }

        /// <summary> [Required] Specifies the data type of the metric threshold. </summary>
        internal MonitoringFeatureDataType DataType { get; set; }
        /// <summary> The threshold value. If null, a default value will be set depending on the selected metric. </summary>
        internal MonitoringThreshold Threshold { get; set; }
        /// <summary> The threshold value. If null, the set default is dependent on the metric type. </summary>
        public double? ThresholdValue
        {
            get => Threshold is null ? default : Threshold.Value;
            set
            {
                if (Threshold is null)
                    Threshold = new MonitoringThreshold();
                Threshold.Value = value;
            }
        }
    }
}
