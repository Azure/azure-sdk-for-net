// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Online deployment scoring requests configuration. </summary>
    public partial class MachineLearningOnlineRequestSettings
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MachineLearningOnlineRequestSettings"/>. </summary>
        public MachineLearningOnlineRequestSettings()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MachineLearningOnlineRequestSettings"/>. </summary>
        /// <param name="maxConcurrentRequestsPerInstance"> The number of maximum concurrent requests per node allowed per deployment. Defaults to 1. </param>
        /// <param name="maxQueueWait">
        /// The maximum amount of time a request will stay in the queue in ISO 8601 format.
        /// Defaults to 500ms.
        /// </param>
        /// <param name="requestTimeout">
        /// The scoring timeout in ISO 8601 format.
        /// Defaults to 5000ms.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MachineLearningOnlineRequestSettings(int? maxConcurrentRequestsPerInstance, TimeSpan? maxQueueWait, TimeSpan? requestTimeout, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MaxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
            MaxQueueWait = maxQueueWait;
            RequestTimeout = requestTimeout;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The number of maximum concurrent requests per node allowed per deployment. Defaults to 1. </summary>
        public int? MaxConcurrentRequestsPerInstance { get; set; }
        /// <summary>
        /// The maximum amount of time a request will stay in the queue in ISO 8601 format.
        /// Defaults to 500ms.
        /// </summary>
        public TimeSpan? MaxQueueWait { get; set; }
        /// <summary>
        /// The scoring timeout in ISO 8601 format.
        /// Defaults to 5000ms.
        /// </summary>
        public TimeSpan? RequestTimeout { get; set; }
    }
}
