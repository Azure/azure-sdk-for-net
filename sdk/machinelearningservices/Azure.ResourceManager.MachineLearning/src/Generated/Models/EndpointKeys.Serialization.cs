// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
    public partial class AnonymousAccessCredential : IUtf8JsonSerializable, IJsonModel<AnonymousAccessCredential>
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IJsonModel<AnonymousAccessCredential>)this).Write(writer, ModelSerializationExtensions.WireOptions);

        void IJsonModel<AnonymousAccessCredential>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<AnonymousAccessCredential>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(AnonymousAccessCredential)} does not support writing '{format}' format.");
            }

            writer.WriteStartObject();
            writer.WritePropertyName("credentialType"u8);
            writer.WriteStringValue(CredentialType.ToString());
========
    public partial class EndpointKeys : IUtf8JsonSerializable, IJsonModel<EndpointKeys>
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IJsonModel<EndpointKeys>)this).Write(writer, ModelSerializationExtensions.WireOptions);

        void IJsonModel<EndpointKeys>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<EndpointKeys>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(EndpointKeys)} does not support writing '{format}' format.");
            }

            writer.WriteStartObject();
            if (Optional.IsDefined(Keys))
            {
                writer.WritePropertyName("keys"u8);
                writer.WriteObjectValue(Keys, options);
            }
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs
            if (options.Format != "W" && _serializedAdditionalRawData != null)
            {
                foreach (var item in _serializedAdditionalRawData)
                {
                    writer.WritePropertyName(item.Key);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(item.Value);
#else
                    using (JsonDocument document = JsonDocument.Parse(item.Value))
                    {
                        JsonSerializer.Serialize(writer, document.RootElement);
                    }
#endif
                }
            }
            writer.WriteEndObject();
        }

<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
        AnonymousAccessCredential IJsonModel<AnonymousAccessCredential>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<AnonymousAccessCredential>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(AnonymousAccessCredential)} does not support reading '{format}' format.");
            }

            using JsonDocument document = JsonDocument.ParseValue(ref reader);
            return DeserializeAnonymousAccessCredential(document.RootElement, options);
        }

        internal static AnonymousAccessCredential DeserializeAnonymousAccessCredential(JsonElement element, ModelReaderWriterOptions options = null)
========
        EndpointKeys IJsonModel<EndpointKeys>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<EndpointKeys>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(EndpointKeys)} does not support reading '{format}' format.");
            }

            using JsonDocument document = JsonDocument.ParseValue(ref reader);
            return DeserializeEndpointKeys(document.RootElement, options);
        }

        internal static EndpointKeys DeserializeEndpointKeys(JsonElement element, ModelReaderWriterOptions options = null)
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs
        {
            options ??= ModelSerializationExtensions.WireOptions;

            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
            DataReferenceCredentialType credentialType = default;
========
            AccountApiKeys keys = default;
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs
            IDictionary<string, BinaryData> serializedAdditionalRawData = default;
            Dictionary<string, BinaryData> rawDataDictionary = new Dictionary<string, BinaryData>();
            foreach (var property in element.EnumerateObject())
            {
<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
                if (property.NameEquals("credentialType"u8))
                {
                    credentialType = new DataReferenceCredentialType(property.Value.GetString());
========
                if (property.NameEquals("keys"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    keys = AccountApiKeys.DeserializeAccountApiKeys(property.Value, options);
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs
                    continue;
                }
                if (options.Format != "W")
                {
                    rawDataDictionary.Add(property.Name, BinaryData.FromString(property.Value.GetRawText()));
                }
            }
            serializedAdditionalRawData = rawDataDictionary;
<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
            return new AnonymousAccessCredential(credentialType, serializedAdditionalRawData);
        }

        BinaryData IPersistableModel<AnonymousAccessCredential>.Write(ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<AnonymousAccessCredential>)this).GetFormatFromOptions(options) : options.Format;
========
            return new EndpointKeys(keys, serializedAdditionalRawData);
        }

        BinaryData IPersistableModel<EndpointKeys>.Write(ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<EndpointKeys>)this).GetFormatFromOptions(options) : options.Format;
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs

            switch (format)
            {
                case "J":
                    return ModelReaderWriter.Write(this, options);
                default:
<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
                    throw new FormatException($"The model {nameof(AnonymousAccessCredential)} does not support writing '{options.Format}' format.");
            }
        }

        AnonymousAccessCredential IPersistableModel<AnonymousAccessCredential>.Create(BinaryData data, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<AnonymousAccessCredential>)this).GetFormatFromOptions(options) : options.Format;
========
                    throw new FormatException($"The model {nameof(EndpointKeys)} does not support writing '{options.Format}' format.");
            }
        }

        EndpointKeys IPersistableModel<EndpointKeys>.Create(BinaryData data, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<EndpointKeys>)this).GetFormatFromOptions(options) : options.Format;
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs

            switch (format)
            {
                case "J":
                    {
                        using JsonDocument document = JsonDocument.Parse(data);
<<<<<<<< HEAD:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/AnonymousAccessCredential.Serialization.cs
                        return DeserializeAnonymousAccessCredential(document.RootElement, options);
                    }
                default:
                    throw new FormatException($"The model {nameof(AnonymousAccessCredential)} does not support reading '{options.Format}' format.");
            }
        }

        string IPersistableModel<AnonymousAccessCredential>.GetFormatFromOptions(ModelReaderWriterOptions options) => "J";
========
                        return DeserializeEndpointKeys(document.RootElement, options);
                    }
                default:
                    throw new FormatException($"The model {nameof(EndpointKeys)} does not support reading '{options.Format}' format.");
            }
        }

        string IPersistableModel<EndpointKeys>.GetFormatFromOptions(ModelReaderWriterOptions options) => "J";
>>>>>>>> 3f8cf30a3ebe61cfdd08f1bbe8fa5494eda0e9f7:sdk/machinelearningservices/Azure.ResourceManager.MachineLearning/src/Generated/Models/EndpointKeys.Serialization.cs
    }
}
