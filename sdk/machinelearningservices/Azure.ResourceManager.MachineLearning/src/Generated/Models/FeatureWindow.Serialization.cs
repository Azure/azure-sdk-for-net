// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class FeatureWindow : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(FeatureWindowEnd))
            {
                if (FeatureWindowEnd != null)
                {
                    writer.WritePropertyName("featureWindowEnd"u8);
                    writer.WriteStringValue(FeatureWindowEnd.Value, "O");
                }
                else
                {
                    writer.WriteNull("featureWindowEnd");
                }
            }
            if (Optional.IsDefined(FeatureWindowStart))
            {
                if (FeatureWindowStart != null)
                {
                    writer.WritePropertyName("featureWindowStart"u8);
                    writer.WriteStringValue(FeatureWindowStart.Value, "O");
                }
                else
                {
                    writer.WriteNull("featureWindowStart");
                }
            }
            writer.WriteEndObject();
        }

        internal static FeatureWindow DeserializeFeatureWindow(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DateTimeOffset?> featureWindowEnd = default;
            Optional<DateTimeOffset?> featureWindowStart = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("featureWindowEnd"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        featureWindowEnd = null;
                        continue;
                    }
                    featureWindowEnd = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("featureWindowStart"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        featureWindowStart = null;
                        continue;
                    }
                    featureWindowStart = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new FeatureWindow(Optional.ToNullable(featureWindowEnd), Optional.ToNullable(featureWindowStart));
        }
    }
}
