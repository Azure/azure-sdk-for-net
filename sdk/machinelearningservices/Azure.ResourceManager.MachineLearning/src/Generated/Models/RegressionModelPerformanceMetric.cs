// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The RegressionModelPerformanceMetric. </summary>
    public readonly partial struct RegressionModelPerformanceMetric : IEquatable<RegressionModelPerformanceMetric>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RegressionModelPerformanceMetric"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RegressionModelPerformanceMetric(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MeanAbsoluteErrorValue = "MeanAbsoluteError";
        private const string RootMeanSquaredErrorValue = "RootMeanSquaredError";
        private const string MeanSquaredErrorValue = "MeanSquaredError";

        /// <summary> The Mean Absolute Error (MAE) metric. </summary>
        public static RegressionModelPerformanceMetric MeanAbsoluteError { get; } = new RegressionModelPerformanceMetric(MeanAbsoluteErrorValue);
        /// <summary> The Root Mean Squared Error (RMSE) metric. </summary>
        public static RegressionModelPerformanceMetric RootMeanSquaredError { get; } = new RegressionModelPerformanceMetric(RootMeanSquaredErrorValue);
        /// <summary> The Mean Squared Error (MSE) metric. </summary>
        public static RegressionModelPerformanceMetric MeanSquaredError { get; } = new RegressionModelPerformanceMetric(MeanSquaredErrorValue);
        /// <summary> Determines if two <see cref="RegressionModelPerformanceMetric"/> values are the same. </summary>
        public static bool operator ==(RegressionModelPerformanceMetric left, RegressionModelPerformanceMetric right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RegressionModelPerformanceMetric"/> values are not the same. </summary>
        public static bool operator !=(RegressionModelPerformanceMetric left, RegressionModelPerformanceMetric right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RegressionModelPerformanceMetric"/>. </summary>
        public static implicit operator RegressionModelPerformanceMetric(string value) => new RegressionModelPerformanceMetric(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RegressionModelPerformanceMetric other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RegressionModelPerformanceMetric other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
