// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningKubernetesProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RelayConnectionString))
            {
                if (RelayConnectionString != null)
                {
                    writer.WritePropertyName("relayConnectionString"u8);
                    writer.WriteStringValue(RelayConnectionString);
                }
                else
                {
                    writer.WriteNull("relayConnectionString");
                }
            }
            if (Optional.IsDefined(ServiceBusConnectionString))
            {
                if (ServiceBusConnectionString != null)
                {
                    writer.WritePropertyName("serviceBusConnectionString"u8);
                    writer.WriteStringValue(ServiceBusConnectionString);
                }
                else
                {
                    writer.WriteNull("serviceBusConnectionString");
                }
            }
            if (Optional.IsDefined(ExtensionPrincipalId))
            {
                if (ExtensionPrincipalId != null)
                {
                    writer.WritePropertyName("extensionPrincipalId"u8);
                    writer.WriteStringValue(ExtensionPrincipalId);
                }
                else
                {
                    writer.WriteNull("extensionPrincipalId");
                }
            }
            if (Optional.IsDefined(ExtensionInstanceReleaseTrain))
            {
                writer.WritePropertyName("extensionInstanceReleaseTrain"u8);
                writer.WriteStringValue(ExtensionInstanceReleaseTrain);
            }
            if (Optional.IsDefined(VcName))
            {
                writer.WritePropertyName("vcName"u8);
                writer.WriteStringValue(VcName);
            }
            if (Optional.IsDefined(Namespace))
            {
                writer.WritePropertyName("namespace"u8);
                writer.WriteStringValue(Namespace);
            }
            if (Optional.IsDefined(DefaultInstanceType))
            {
                writer.WritePropertyName("defaultInstanceType"u8);
                writer.WriteStringValue(DefaultInstanceType);
            }
            if (Optional.IsCollectionDefined(InstanceTypes))
            {
                writer.WritePropertyName("instanceTypes"u8);
                writer.WriteStartObject();
                foreach (var item in InstanceTypes)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static MachineLearningKubernetesProperties DeserializeMachineLearningKubernetesProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> relayConnectionString = default;
            Optional<string> serviceBusConnectionString = default;
            Optional<string> extensionPrincipalId = default;
            Optional<string> extensionInstanceReleaseTrain = default;
            Optional<string> vcName = default;
            Optional<string> @namespace = default;
            Optional<string> defaultInstanceType = default;
            Optional<IDictionary<string, MachineLearningInstanceTypeSchema>> instanceTypes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("relayConnectionString"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        relayConnectionString = null;
                        continue;
                    }
                    relayConnectionString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serviceBusConnectionString"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        serviceBusConnectionString = null;
                        continue;
                    }
                    serviceBusConnectionString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("extensionPrincipalId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        extensionPrincipalId = null;
                        continue;
                    }
                    extensionPrincipalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("extensionInstanceReleaseTrain"u8))
                {
                    extensionInstanceReleaseTrain = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vcName"u8))
                {
                    vcName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("namespace"u8))
                {
                    @namespace = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("defaultInstanceType"u8))
                {
                    defaultInstanceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("instanceTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, MachineLearningInstanceTypeSchema> dictionary = new Dictionary<string, MachineLearningInstanceTypeSchema>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, MachineLearningInstanceTypeSchema.DeserializeMachineLearningInstanceTypeSchema(property0.Value));
                    }
                    instanceTypes = dictionary;
                    continue;
                }
            }
            return new MachineLearningKubernetesProperties(relayConnectionString.Value, serviceBusConnectionString.Value, extensionPrincipalId.Value, extensionInstanceReleaseTrain.Value, vcName.Value, @namespace.Value, defaultInstanceType.Value, Optional.ToDictionary(instanceTypes));
        }
    }
}
