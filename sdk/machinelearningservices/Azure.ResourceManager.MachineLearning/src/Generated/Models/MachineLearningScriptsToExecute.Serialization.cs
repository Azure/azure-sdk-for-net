// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningScriptsToExecute : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(StartupScript))
            {
                writer.WritePropertyName("startupScript"u8);
                writer.WriteObjectValue(StartupScript);
            }
            if (Optional.IsDefined(CreationScript))
            {
                writer.WritePropertyName("creationScript"u8);
                writer.WriteObjectValue(CreationScript);
            }
            writer.WriteEndObject();
        }

        internal static MachineLearningScriptsToExecute DeserializeMachineLearningScriptsToExecute(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<MachineLearningScriptReference> startupScript = default;
            Optional<MachineLearningScriptReference> creationScript = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("startupScript"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startupScript = MachineLearningScriptReference.DeserializeMachineLearningScriptReference(property.Value);
                    continue;
                }
                if (property.NameEquals("creationScript"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    creationScript = MachineLearningScriptReference.DeserializeMachineLearningScriptReference(property.Value);
                    continue;
                }
            }
            return new MachineLearningScriptsToExecute(startupScript.Value, creationScript.Value);
        }
    }
}
