// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class ComputeInstanceDataMount
    {
        internal static ComputeInstanceDataMount DeserializeComputeInstanceDataMount(JsonElement element)
        {
            Optional<string> source = default;
            Optional<SourceType> sourceType = default;
            Optional<string> mountName = default;
            Optional<MountAction> mountAction = default;
            Optional<string> createdBy = default;
            Optional<string> mountPath = default;
            Optional<MountState> mountState = default;
            Optional<DateTimeOffset> mountedOn = default;
            Optional<string> error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("source"))
                {
                    source = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sourceType = new SourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("mountName"))
                {
                    mountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mountAction"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    mountAction = new MountAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("createdBy"))
                {
                    createdBy = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mountPath"))
                {
                    mountPath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mountState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    mountState = new MountState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("mountedOn"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    mountedOn = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    error = property.Value.GetString();
                    continue;
                }
            }
            return new ComputeInstanceDataMount(source.Value, Optional.ToNullable(sourceType), mountName.Value, Optional.ToNullable(mountAction), createdBy.Value, mountPath.Value, Optional.ToNullable(mountState), Optional.ToNullable(mountedOn), error.Value);
        }
    }
}
