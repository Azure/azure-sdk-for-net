// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningAssistEnabledConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("inferencingComputeBinding"u8);
            writer.WriteStringValue(InferencingComputeBinding);
            writer.WritePropertyName("trainingComputeBinding"u8);
            writer.WriteStringValue(TrainingComputeBinding);
            writer.WritePropertyName("mlAssist"u8);
            writer.WriteStringValue(MlAssist.ToString());
            writer.WriteEndObject();
        }

        internal static MachineLearningAssistEnabledConfiguration DeserializeMachineLearningAssistEnabledConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string inferencingComputeBinding = default;
            string trainingComputeBinding = default;
            MLAssistConfigurationType mlAssist = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("inferencingComputeBinding"u8))
                {
                    inferencingComputeBinding = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("trainingComputeBinding"u8))
                {
                    trainingComputeBinding = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mlAssist"u8))
                {
                    mlAssist = new MLAssistConfigurationType(property.Value.GetString());
                    continue;
                }
            }
            return new MachineLearningAssistEnabledConfiguration(mlAssist, inferencingComputeBinding, trainingComputeBinding);
        }
    }
}
