// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The KerberosPasswordCredentials. </summary>
    public partial class KerberosPasswordCredentials : MachineLearningDatastoreCredentials
    {
        /// <summary> Initializes a new instance of <see cref="KerberosPasswordCredentials"/>. </summary>
        /// <param name="secrets"> [Required] Kerberos password secrets. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="secrets"/> is null. </exception>
        public KerberosPasswordCredentials(KerberosPasswordSecrets secrets)
        {
            Argument.AssertNotNull(secrets, nameof(secrets));

            Secrets = secrets;
            CredentialsType = CredentialsType.KerberosPassword;
        }

        /// <summary> Initializes a new instance of <see cref="KerberosPasswordCredentials"/>. </summary>
        /// <param name="credentialsType"> [Required] Credential type used to authentication with storage. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="secrets"> [Required] Kerberos password secrets. </param>
        internal KerberosPasswordCredentials(CredentialsType credentialsType, IDictionary<string, BinaryData> serializedAdditionalRawData, KerberosPasswordSecrets secrets) : base(credentialsType, serializedAdditionalRawData)
        {
            Secrets = secrets;
            CredentialsType = credentialsType;
        }

        /// <summary> Initializes a new instance of <see cref="KerberosPasswordCredentials"/> for deserialization. </summary>
        internal KerberosPasswordCredentials()
        {
        }

        /// <summary> [Required] Kerberos password secrets. </summary>
        public KerberosPasswordSecrets Secrets { get; set; }
    }
}
