// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningHDInsightProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(SshPort))
            {
                writer.WritePropertyName("sshPort"u8);
                writer.WriteNumberValue(SshPort.Value);
            }
            if (Core.Optional.IsDefined(Address))
            {
                writer.WritePropertyName("address"u8);
                writer.WriteStringValue(Address.ToString());
            }
            if (Core.Optional.IsDefined(AdministratorAccount))
            {
                if (AdministratorAccount != null)
                {
                    writer.WritePropertyName("administratorAccount"u8);
                    writer.WriteObjectValue(AdministratorAccount);
                }
                else
                {
                    writer.WriteNull("administratorAccount");
                }
            }
            writer.WriteEndObject();
        }

        internal static MachineLearningHDInsightProperties DeserializeMachineLearningHDInsightProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> sshPort = default;
            Core.Optional<IPAddress> address = default;
            Core.Optional<MachineLearningVmSshCredentials> administratorAccount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sshPort"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sshPort = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("address"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    address = IPAddress.Parse(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("administratorAccount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        administratorAccount = null;
                        continue;
                    }
                    administratorAccount = MachineLearningVmSshCredentials.DeserializeMachineLearningVmSshCredentials(property.Value);
                    continue;
                }
            }
            return new MachineLearningHDInsightProperties(Core.Optional.ToNullable(sshPort), address.Value, administratorAccount.Value);
        }
    }
}
