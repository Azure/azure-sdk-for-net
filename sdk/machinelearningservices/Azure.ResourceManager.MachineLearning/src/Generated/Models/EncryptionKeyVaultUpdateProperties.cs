// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The EncryptionKeyVaultUpdateProperties. </summary>
    public partial class EncryptionKeyVaultUpdateProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EncryptionKeyVaultUpdateProperties"/>. </summary>
        /// <param name="keyIdentifier"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyIdentifier"/> is null. </exception>
        public EncryptionKeyVaultUpdateProperties(string keyIdentifier)
        {
            Argument.AssertNotNull(keyIdentifier, nameof(keyIdentifier));

            KeyIdentifier = keyIdentifier;
        }

        /// <summary> Initializes a new instance of <see cref="EncryptionKeyVaultUpdateProperties"/>. </summary>
        /// <param name="keyIdentifier"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EncryptionKeyVaultUpdateProperties(string keyIdentifier, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyIdentifier = keyIdentifier;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="EncryptionKeyVaultUpdateProperties"/> for deserialization. </summary>
        internal EncryptionKeyVaultUpdateProperties()
        {
        }

        /// <summary> Gets the key identifier. </summary>
        public string KeyIdentifier { get; }
    }
}
