// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// Compute Instance properties
    /// Serialized Name: ComputeInstanceProperties
    /// </summary>
    public partial class MachineLearningComputeInstanceProperties
    {
        /// <summary> Initializes a new instance of MachineLearningComputeInstanceProperties. </summary>
        public MachineLearningComputeInstanceProperties()
        {
            Applications = new ChangeTrackingList<MachineLearningComputeInstanceApplication>();
            Errors = new ChangeTrackingList<MachineLearningError>();
            Containers = new ChangeTrackingList<MachineLearningComputeInstanceContainer>();
            DataDisks = new ChangeTrackingList<MachineLearningComputeInstanceDataDisk>();
            DataMounts = new ChangeTrackingList<MachineLearningComputeInstanceDataMount>();
        }

        /// <summary> Initializes a new instance of MachineLearningComputeInstanceProperties. </summary>
        /// <param name="vmSize">
        /// Virtual Machine Size
        /// Serialized Name: ComputeInstanceProperties.vmSize
        /// </param>
        /// <param name="subnet">
        /// Virtual network subnet resource ID the compute nodes belong to.
        /// Serialized Name: ComputeInstanceProperties.subnet
        /// </param>
        /// <param name="applicationSharingPolicy">
        /// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
        /// Serialized Name: ComputeInstanceProperties.applicationSharingPolicy
        /// </param>
        /// <param name="sshSettings">
        /// Specifies policy and settings for SSH access.
        /// Serialized Name: ComputeInstanceProperties.sshSettings
        /// </param>
        /// <param name="connectivityEndpoints">
        /// Describes all connectivity endpoints available for this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.connectivityEndpoints
        /// </param>
        /// <param name="applications">
        /// Describes available applications and their endpoints on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.applications
        /// </param>
        /// <param name="createdBy">
        /// Describes information on user who created this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.createdBy
        /// </param>
        /// <param name="errors">
        /// Collection of errors encountered on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.errors
        /// </param>
        /// <param name="state">
        /// The current state of this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.state
        /// </param>
        /// <param name="computeInstanceAuthorizationType">
        /// The Compute Instance Authorization type. Available values are personal (default).
        /// Serialized Name: ComputeInstanceProperties.computeInstanceAuthorizationType
        /// </param>
        /// <param name="personalComputeInstanceSettings">
        /// Settings for a personal compute instance.
        /// Serialized Name: ComputeInstanceProperties.personalComputeInstanceSettings
        /// </param>
        /// <param name="setupScriptsSettings">
        /// Details of customized scripts to execute for setting up the cluster.
        /// Serialized Name: ComputeInstanceProperties.setupScripts
        /// </param>
        /// <param name="lastOperation">
        /// The last operation on ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.lastOperation
        /// </param>
        /// <param name="schedules">
        /// The list of schedules to be applied on the computes.
        /// Serialized Name: ComputeInstanceProperties.schedules
        /// </param>
        /// <param name="enableNodePublicIP">
        /// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
        /// Serialized Name: ComputeInstanceProperties.enableNodePublicIp
        /// </param>
        /// <param name="containers">
        /// Describes informations of containers on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.containers
        /// </param>
        /// <param name="dataDisks">
        /// Describes informations of dataDisks on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.dataDisks
        /// </param>
        /// <param name="dataMounts">
        /// Describes informations of dataMounts on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.dataMounts
        /// </param>
        /// <param name="versions">
        /// ComputeInstance version.
        /// Serialized Name: ComputeInstanceProperties.versions
        /// </param>
        internal MachineLearningComputeInstanceProperties(string vmSize, ResourceId subnet, MachineLearningApplicationSharingPolicy? applicationSharingPolicy, MachineLearningComputeInstanceSshSettings sshSettings, MachineLearningComputeInstanceConnectivityEndpoints connectivityEndpoints, IReadOnlyList<MachineLearningComputeInstanceApplication> applications, MachineLearningComputeInstanceCreatedBy createdBy, IReadOnlyList<MachineLearningError> errors, MachineLearningComputeInstanceState? state, MachineLearningComputeInstanceAuthorizationType? computeInstanceAuthorizationType, PersonalComputeInstanceSettings personalComputeInstanceSettings, SetupScripts setupScriptsSettings, MachineLearningComputeInstanceLastOperation lastOperation, ComputeSchedules schedules, bool? enableNodePublicIP, IReadOnlyList<MachineLearningComputeInstanceContainer> containers, IReadOnlyList<MachineLearningComputeInstanceDataDisk> dataDisks, IReadOnlyList<MachineLearningComputeInstanceDataMount> dataMounts, ComputeInstanceVersion versions)
        {
            VmSize = vmSize;
            Subnet = subnet;
            ApplicationSharingPolicy = applicationSharingPolicy;
            SshSettings = sshSettings;
            ConnectivityEndpoints = connectivityEndpoints;
            Applications = applications;
            CreatedBy = createdBy;
            Errors = errors;
            State = state;
            ComputeInstanceAuthorizationType = computeInstanceAuthorizationType;
            PersonalComputeInstanceSettings = personalComputeInstanceSettings;
            SetupScriptsSettings = setupScriptsSettings;
            LastOperation = lastOperation;
            Schedules = schedules;
            EnableNodePublicIP = enableNodePublicIP;
            Containers = containers;
            DataDisks = dataDisks;
            DataMounts = dataMounts;
            Versions = versions;
        }

        /// <summary>
        /// Virtual Machine Size
        /// Serialized Name: ComputeInstanceProperties.vmSize
        /// </summary>
        public string VmSize { get; set; }
        /// <summary>
        /// Virtual network subnet resource ID the compute nodes belong to.
        /// Serialized Name: ComputeInstanceProperties.subnet
        /// </summary>
        internal ResourceId Subnet { get; set; }
        /// <summary>
        /// The ID of the resource
        /// Serialized Name: ResourceId.id
        /// </summary>
        public string SubnetId
        {
            get => Subnet is null ? default : Subnet.Id;
            set => Subnet = new ResourceId(value);
        }

        /// <summary>
        /// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
        /// Serialized Name: ComputeInstanceProperties.applicationSharingPolicy
        /// </summary>
        public MachineLearningApplicationSharingPolicy? ApplicationSharingPolicy { get; set; }
        /// <summary>
        /// Specifies policy and settings for SSH access.
        /// Serialized Name: ComputeInstanceProperties.sshSettings
        /// </summary>
        public MachineLearningComputeInstanceSshSettings SshSettings { get; set; }
        /// <summary>
        /// Describes all connectivity endpoints available for this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.connectivityEndpoints
        /// </summary>
        public MachineLearningComputeInstanceConnectivityEndpoints ConnectivityEndpoints { get; }
        /// <summary>
        /// Describes available applications and their endpoints on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.applications
        /// </summary>
        public IReadOnlyList<MachineLearningComputeInstanceApplication> Applications { get; }
        /// <summary>
        /// Describes information on user who created this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.createdBy
        /// </summary>
        public MachineLearningComputeInstanceCreatedBy CreatedBy { get; }
        /// <summary>
        /// Collection of errors encountered on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.errors
        /// </summary>
        public IReadOnlyList<MachineLearningError> Errors { get; }
        /// <summary>
        /// The current state of this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.state
        /// </summary>
        public MachineLearningComputeInstanceState? State { get; }
        /// <summary>
        /// The Compute Instance Authorization type. Available values are personal (default).
        /// Serialized Name: ComputeInstanceProperties.computeInstanceAuthorizationType
        /// </summary>
        public MachineLearningComputeInstanceAuthorizationType? ComputeInstanceAuthorizationType { get; set; }
        /// <summary>
        /// Settings for a personal compute instance.
        /// Serialized Name: ComputeInstanceProperties.personalComputeInstanceSettings
        /// </summary>
        internal PersonalComputeInstanceSettings PersonalComputeInstanceSettings { get; set; }
        /// <summary>
        /// A user explicitly assigned to a personal compute instance.
        /// Serialized Name: PersonalComputeInstanceSettings.assignedUser
        /// </summary>
        public MachineLearningComputeInstanceAssignedUser PersonalComputeInstanceAssignedUser
        {
            get => PersonalComputeInstanceSettings is null ? default : PersonalComputeInstanceSettings.AssignedUser;
            set
            {
                if (PersonalComputeInstanceSettings is null)
                    PersonalComputeInstanceSettings = new PersonalComputeInstanceSettings();
                PersonalComputeInstanceSettings.AssignedUser = value;
            }
        }

        /// <summary>
        /// Details of customized scripts to execute for setting up the cluster.
        /// Serialized Name: ComputeInstanceProperties.setupScripts
        /// </summary>
        internal SetupScripts SetupScriptsSettings { get; set; }
        /// <summary>
        /// Customized setup scripts
        /// Serialized Name: SetupScripts.scripts
        /// </summary>
        public MachineLearningScriptsToExecute Scripts
        {
            get => SetupScriptsSettings is null ? default : SetupScriptsSettings.Scripts;
            set
            {
                if (SetupScriptsSettings is null)
                    SetupScriptsSettings = new SetupScripts();
                SetupScriptsSettings.Scripts = value;
            }
        }

        /// <summary>
        /// The last operation on ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.lastOperation
        /// </summary>
        public MachineLearningComputeInstanceLastOperation LastOperation { get; }
        /// <summary>
        /// The list of schedules to be applied on the computes.
        /// Serialized Name: ComputeInstanceProperties.schedules
        /// </summary>
        internal ComputeSchedules Schedules { get; }
        /// <summary>
        /// The list of compute start stop schedules to be applied.
        /// Serialized Name: ComputeSchedules.computeStartStop
        /// </summary>
        public IReadOnlyList<MachineLearningComputeStartStopSchedule> SchedulesComputeStartStop
        {
            get => Schedules?.ComputeStartStop;
        }

        /// <summary>
        /// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
        /// Serialized Name: ComputeInstanceProperties.enableNodePublicIp
        /// </summary>
        public bool? EnableNodePublicIP { get; set; }
        /// <summary>
        /// Describes informations of containers on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.containers
        /// </summary>
        public IReadOnlyList<MachineLearningComputeInstanceContainer> Containers { get; }
        /// <summary>
        /// Describes informations of dataDisks on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.dataDisks
        /// </summary>
        public IReadOnlyList<MachineLearningComputeInstanceDataDisk> DataDisks { get; }
        /// <summary>
        /// Describes informations of dataMounts on this ComputeInstance.
        /// Serialized Name: ComputeInstanceProperties.dataMounts
        /// </summary>
        public IReadOnlyList<MachineLearningComputeInstanceDataMount> DataMounts { get; }
        /// <summary>
        /// ComputeInstance version.
        /// Serialized Name: ComputeInstanceProperties.versions
        /// </summary>
        internal ComputeInstanceVersion Versions { get; }
        /// <summary>
        /// Runtime of compute instance.
        /// Serialized Name: ComputeInstanceVersion.runtime
        /// </summary>
        public string VersionsRuntime
        {
            get => Versions?.Runtime;
        }
    }
}
