// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class BlobReferenceForConsumptionDto
    {
        internal static BlobReferenceForConsumptionDto DeserializeBlobReferenceForConsumptionDto(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<Uri> blobUri = default;
            Optional<PendingUploadCredentialDto> credential = default;
            Optional<ResourceIdentifier> storageAccountArmId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("blobUri"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        blobUri = null;
                        continue;
                    }
                    blobUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("credential"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        credential = null;
                        continue;
                    }
                    credential = PendingUploadCredentialDto.DeserializePendingUploadCredentialDto(property.Value);
                    continue;
                }
                if (property.NameEquals("storageAccountArmId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        storageAccountArmId = null;
                        continue;
                    }
                    storageAccountArmId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
            }
            return new BlobReferenceForConsumptionDto(blobUri.Value, credential.Value, storageAccountArmId.Value);
        }
    }
}
