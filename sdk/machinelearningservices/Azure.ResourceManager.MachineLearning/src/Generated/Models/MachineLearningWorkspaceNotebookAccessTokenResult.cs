// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// The MachineLearningWorkspaceNotebookAccessTokenResult.
    /// Serialized Name: NotebookAccessTokenResult
    /// </summary>
    public partial class MachineLearningWorkspaceNotebookAccessTokenResult
    {
        /// <summary> Initializes a new instance of MachineLearningWorkspaceNotebookAccessTokenResult. </summary>
        internal MachineLearningWorkspaceNotebookAccessTokenResult()
        {
        }

        /// <summary> Initializes a new instance of MachineLearningWorkspaceNotebookAccessTokenResult. </summary>
        /// <param name="notebookResourceId"> Serialized Name: NotebookAccessTokenResult.notebookResourceId. </param>
        /// <param name="hostName"> Serialized Name: NotebookAccessTokenResult.hostName. </param>
        /// <param name="publicDns"> Serialized Name: NotebookAccessTokenResult.publicDns. </param>
        /// <param name="accessToken"> Serialized Name: NotebookAccessTokenResult.accessToken. </param>
        /// <param name="tokenType"> Serialized Name: NotebookAccessTokenResult.tokenType. </param>
        /// <param name="expiresIn"> Serialized Name: NotebookAccessTokenResult.expiresIn. </param>
        /// <param name="refreshToken"> Serialized Name: NotebookAccessTokenResult.refreshToken. </param>
        /// <param name="scope"> Serialized Name: NotebookAccessTokenResult.scope. </param>
        internal MachineLearningWorkspaceNotebookAccessTokenResult(string notebookResourceId, string hostName, string publicDns, string accessToken, string tokenType, int? expiresIn, string refreshToken, string scope)
        {
            NotebookResourceId = notebookResourceId;
            HostName = hostName;
            PublicDns = publicDns;
            AccessToken = accessToken;
            TokenType = tokenType;
            ExpiresIn = expiresIn;
            RefreshToken = refreshToken;
            Scope = scope;
        }

        /// <summary> Serialized Name: NotebookAccessTokenResult.notebookResourceId. </summary>
        public string NotebookResourceId { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.hostName. </summary>
        public string HostName { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.publicDns. </summary>
        public string PublicDns { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.accessToken. </summary>
        public string AccessToken { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.tokenType. </summary>
        public string TokenType { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.expiresIn. </summary>
        public int? ExpiresIn { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.refreshToken. </summary>
        public string RefreshToken { get; }
        /// <summary> Serialized Name: NotebookAccessTokenResult.scope. </summary>
        public string Scope { get; }
    }
}
