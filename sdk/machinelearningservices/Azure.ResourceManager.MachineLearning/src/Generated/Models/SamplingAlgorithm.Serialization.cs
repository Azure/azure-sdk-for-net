// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class SamplingAlgorithm : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IUtf8JsonSerializable)this).Write(writer, new SerializableOptions());

        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer, SerializableOptions options)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("samplingAlgorithmType"u8);
            writer.WriteStringValue(SamplingAlgorithmType.ToString());
            writer.WriteEndObject();
        }

        internal static SamplingAlgorithm DeserializeSamplingAlgorithm(JsonElement element, SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            if (element.TryGetProperty("samplingAlgorithmType", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "Bayesian": return BayesianSamplingAlgorithm.DeserializeBayesianSamplingAlgorithm(element);
                    case "Grid": return GridSamplingAlgorithm.DeserializeGridSamplingAlgorithm(element);
                    case "Random": return RandomSamplingAlgorithm.DeserializeRandomSamplingAlgorithm(element);
                }
            }
            return UnknownSamplingAlgorithm.DeserializeUnknownSamplingAlgorithm(element);
        }
    }
}
