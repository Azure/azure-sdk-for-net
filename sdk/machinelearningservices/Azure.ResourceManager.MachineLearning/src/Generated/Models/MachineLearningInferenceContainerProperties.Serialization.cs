// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningInferenceContainerProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(LivenessRoute))
            {
                writer.WritePropertyName("livenessRoute"u8);
                writer.WriteObjectValue(LivenessRoute);
            }
            if (Optional.IsDefined(ReadinessRoute))
            {
                writer.WritePropertyName("readinessRoute"u8);
                writer.WriteObjectValue(ReadinessRoute);
            }
            if (Optional.IsDefined(ScoringRoute))
            {
                writer.WritePropertyName("scoringRoute"u8);
                writer.WriteObjectValue(ScoringRoute);
            }
            writer.WriteEndObject();
        }

        internal static MachineLearningInferenceContainerProperties DeserializeMachineLearningInferenceContainerProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<MachineLearningInferenceContainerRoute> livenessRoute = default;
            Optional<MachineLearningInferenceContainerRoute> readinessRoute = default;
            Optional<MachineLearningInferenceContainerRoute> scoringRoute = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("livenessRoute"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    livenessRoute = MachineLearningInferenceContainerRoute.DeserializeMachineLearningInferenceContainerRoute(property.Value);
                    continue;
                }
                if (property.NameEquals("readinessRoute"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    readinessRoute = MachineLearningInferenceContainerRoute.DeserializeMachineLearningInferenceContainerRoute(property.Value);
                    continue;
                }
                if (property.NameEquals("scoringRoute"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scoringRoute = MachineLearningInferenceContainerRoute.DeserializeMachineLearningInferenceContainerRoute(property.Value);
                    continue;
                }
            }
            return new MachineLearningInferenceContainerProperties(livenessRoute.Value, readinessRoute.Value, scoringRoute.Value);
        }
    }
}
