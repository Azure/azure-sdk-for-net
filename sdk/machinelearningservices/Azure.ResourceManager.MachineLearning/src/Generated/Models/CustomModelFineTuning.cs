// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> The CustomModelFineTuning. </summary>
    public partial class CustomModelFineTuning : FineTuningVertical
    {
        /// <summary> Initializes a new instance of <see cref="CustomModelFineTuning"/>. </summary>
        /// <param name="taskType"> [Required] Fine tuning task type. </param>
        /// <param name="trainingData">
        /// [Required] Training data for fine tuning.
        /// Please note <see cref="MachineLearningJobInput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="MachineLearningCustomModelJobInput"/>, <see cref="MachineLearningLiteralJobInput"/>, <see cref="MachineLearningFlowModelJobInput"/>, <see cref="MachineLearningTableJobInput"/>, <see cref="MachineLearningTritonModelJobInput"/>, <see cref="MachineLearningUriFileJobInput"/> and <see cref="MachineLearningUriFolderJobInput"/>.
        /// </param>
        /// <param name="model"> [Required] Input model for fine tuning. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="trainingData"/> or <paramref name="model"/> is null. </exception>
        public CustomModelFineTuning(FineTuningTaskType taskType, MachineLearningJobInput trainingData, MachineLearningFlowModelJobInput model) : base(taskType, trainingData, model)
        {
            Argument.AssertNotNull(trainingData, nameof(trainingData));
            Argument.AssertNotNull(model, nameof(model));

            HyperParameters = new ChangeTrackingDictionary<string, string>();
            ModelProvider = ModelProvider.Custom;
        }

        /// <summary> Initializes a new instance of <see cref="CustomModelFineTuning"/>. </summary>
        /// <param name="modelProvider"> [Required] Enum to determine the type of fine tuning. </param>
        /// <param name="taskType"> [Required] Fine tuning task type. </param>
        /// <param name="trainingData">
        /// [Required] Training data for fine tuning.
        /// Please note <see cref="MachineLearningJobInput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="MachineLearningCustomModelJobInput"/>, <see cref="MachineLearningLiteralJobInput"/>, <see cref="MachineLearningFlowModelJobInput"/>, <see cref="MachineLearningTableJobInput"/>, <see cref="MachineLearningTritonModelJobInput"/>, <see cref="MachineLearningUriFileJobInput"/> and <see cref="MachineLearningUriFolderJobInput"/>.
        /// </param>
        /// <param name="validationData">
        /// Validation data for fine tuning.
        /// Please note <see cref="MachineLearningJobInput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="MachineLearningCustomModelJobInput"/>, <see cref="MachineLearningLiteralJobInput"/>, <see cref="MachineLearningFlowModelJobInput"/>, <see cref="MachineLearningTableJobInput"/>, <see cref="MachineLearningTritonModelJobInput"/>, <see cref="MachineLearningUriFileJobInput"/> and <see cref="MachineLearningUriFolderJobInput"/>.
        /// </param>
        /// <param name="model"> [Required] Input model for fine tuning. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="hyperParameters"> HyperParameters for fine tuning custom model. </param>
        internal CustomModelFineTuning(ModelProvider modelProvider, FineTuningTaskType taskType, MachineLearningJobInput trainingData, MachineLearningJobInput validationData, MachineLearningFlowModelJobInput model, IDictionary<string, BinaryData> serializedAdditionalRawData, IDictionary<string, string> hyperParameters) : base(modelProvider, taskType, trainingData, validationData, model, serializedAdditionalRawData)
        {
            HyperParameters = hyperParameters;
            ModelProvider = modelProvider;
        }

        /// <summary> Initializes a new instance of <see cref="CustomModelFineTuning"/> for deserialization. </summary>
        internal CustomModelFineTuning()
        {
        }

        /// <summary> HyperParameters for fine tuning custom model. </summary>
        public IDictionary<string, string> HyperParameters { get; set; }
    }
}
