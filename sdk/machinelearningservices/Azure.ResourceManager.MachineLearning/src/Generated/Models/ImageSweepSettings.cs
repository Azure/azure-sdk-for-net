// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Model sweeping and hyperparameter sweeping related settings. </summary>
    public partial class ImageSweepSettings
    {
        /// <summary> Initializes a new instance of ImageSweepSettings. </summary>
        /// <param name="limits"> [Required] Limit settings for model sweeping and hyperparameter sweeping. </param>
        /// <param name="samplingAlgorithm"> [Required] Type of the hyperparameter sampling algorithms. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="limits"/> is null. </exception>
        public ImageSweepSettings(ImageSweepLimitSettings limits, SamplingAlgorithmType samplingAlgorithm)
        {
            if (limits == null)
            {
                throw new ArgumentNullException(nameof(limits));
            }

            Limits = limits;
            SamplingAlgorithm = samplingAlgorithm;
        }

        /// <summary> Initializes a new instance of ImageSweepSettings. </summary>
        /// <param name="earlyTermination"> Type of early termination policy. </param>
        /// <param name="limits"> [Required] Limit settings for model sweeping and hyperparameter sweeping. </param>
        /// <param name="samplingAlgorithm"> [Required] Type of the hyperparameter sampling algorithms. </param>
        internal ImageSweepSettings(EarlyTerminationPolicy earlyTermination, ImageSweepLimitSettings limits, SamplingAlgorithmType samplingAlgorithm)
        {
            EarlyTermination = earlyTermination;
            Limits = limits;
            SamplingAlgorithm = samplingAlgorithm;
        }

        /// <summary> Type of early termination policy. </summary>
        public EarlyTerminationPolicy EarlyTermination { get; set; }
        /// <summary> [Required] Limit settings for model sweeping and hyperparameter sweeping. </summary>
        public ImageSweepLimitSettings Limits { get; set; }
        /// <summary> [Required] Type of the hyperparameter sampling algorithms. </summary>
        public SamplingAlgorithmType SamplingAlgorithm { get; set; }
    }
}
