// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class RandomSamplingAlgorithm : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Rule))
            {
                writer.WritePropertyName("rule");
                writer.WriteStringValue(Rule.Value.ToString());
            }
            if (Optional.IsDefined(Seed))
            {
                if (Seed != null)
                {
                    writer.WritePropertyName("seed");
                    writer.WriteNumberValue(Seed.Value);
                }
                else
                {
                    writer.WriteNull("seed");
                }
            }
            writer.WritePropertyName("samplingAlgorithmType");
            writer.WriteStringValue(SamplingAlgorithmType.ToString());
            writer.WriteEndObject();
        }

        internal static RandomSamplingAlgorithm DeserializeRandomSamplingAlgorithm(JsonElement element)
        {
            Optional<RandomSamplingAlgorithmRule> rule = default;
            Optional<int?> seed = default;
            SamplingAlgorithmType samplingAlgorithmType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("rule"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rule = new RandomSamplingAlgorithmRule(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("seed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        seed = null;
                        continue;
                    }
                    seed = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("samplingAlgorithmType"))
                {
                    samplingAlgorithmType = new SamplingAlgorithmType(property.Value.GetString());
                    continue;
                }
            }
            return new RandomSamplingAlgorithm(samplingAlgorithmType, Optional.ToNullable(rule), Optional.ToNullable(seed));
        }
    }
}
