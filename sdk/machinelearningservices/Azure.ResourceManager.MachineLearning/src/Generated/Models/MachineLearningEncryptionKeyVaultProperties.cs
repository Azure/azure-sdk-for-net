// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// The MachineLearningEncryptionKeyVaultProperties.
    /// Serialized Name: EncryptionKeyVaultProperties
    /// </summary>
    public partial class MachineLearningEncryptionKeyVaultProperties
    {
        /// <summary> Initializes a new instance of MachineLearningEncryptionKeyVaultProperties. </summary>
        /// <param name="keyVaultArmId">
        /// The ArmId of the keyVault where the customer owned encryption key is present.
        /// Serialized Name: EncryptionKeyVaultProperties.keyVaultArmId
        /// </param>
        /// <param name="keyIdentifier">
        /// Key vault uri to access the encryption key.
        /// Serialized Name: EncryptionKeyVaultProperties.keyIdentifier
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyVaultArmId"/> or <paramref name="keyIdentifier"/> is null. </exception>
        public MachineLearningEncryptionKeyVaultProperties(ResourceIdentifier keyVaultArmId, string keyIdentifier)
        {
            Argument.AssertNotNull(keyVaultArmId, nameof(keyVaultArmId));
            Argument.AssertNotNull(keyIdentifier, nameof(keyIdentifier));

            KeyVaultArmId = keyVaultArmId;
            KeyIdentifier = keyIdentifier;
        }

        /// <summary> Initializes a new instance of MachineLearningEncryptionKeyVaultProperties. </summary>
        /// <param name="keyVaultArmId">
        /// The ArmId of the keyVault where the customer owned encryption key is present.
        /// Serialized Name: EncryptionKeyVaultProperties.keyVaultArmId
        /// </param>
        /// <param name="keyIdentifier">
        /// Key vault uri to access the encryption key.
        /// Serialized Name: EncryptionKeyVaultProperties.keyIdentifier
        /// </param>
        /// <param name="identityClientId">
        /// For future use - The client id of the identity which will be used to access key vault.
        /// Serialized Name: EncryptionKeyVaultProperties.identityClientId
        /// </param>
        internal MachineLearningEncryptionKeyVaultProperties(ResourceIdentifier keyVaultArmId, string keyIdentifier, string identityClientId)
        {
            KeyVaultArmId = keyVaultArmId;
            KeyIdentifier = keyIdentifier;
            IdentityClientId = identityClientId;
        }

        /// <summary>
        /// The ArmId of the keyVault where the customer owned encryption key is present.
        /// Serialized Name: EncryptionKeyVaultProperties.keyVaultArmId
        /// </summary>
        public ResourceIdentifier KeyVaultArmId { get; set; }
        /// <summary>
        /// Key vault uri to access the encryption key.
        /// Serialized Name: EncryptionKeyVaultProperties.keyIdentifier
        /// </summary>
        public string KeyIdentifier { get; set; }
        /// <summary>
        /// For future use - The client id of the identity which will be used to access key vault.
        /// Serialized Name: EncryptionKeyVaultProperties.identityClientId
        /// </summary>
        public string IdentityClientId { get; set; }
    }
}
