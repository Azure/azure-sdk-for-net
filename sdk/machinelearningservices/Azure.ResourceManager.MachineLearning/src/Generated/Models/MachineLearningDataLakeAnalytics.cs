// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// A DataLakeAnalytics compute.
    /// Serialized Name: DataLakeAnalytics
    /// </summary>
    public partial class MachineLearningDataLakeAnalytics : MachineLearningComputeProperties
    {
        /// <summary> Initializes a new instance of MachineLearningDataLakeAnalytics. </summary>
        public MachineLearningDataLakeAnalytics()
        {
            ComputeType = ComputeType.DataLakeAnalytics;
        }

        /// <summary> Initializes a new instance of MachineLearningDataLakeAnalytics. </summary>
        /// <param name="computeType">
        /// The type of compute
        /// Serialized Name: Compute.computeType
        /// </param>
        /// <param name="computeLocation">
        /// Location for the underlying compute
        /// Serialized Name: Compute.computeLocation
        /// </param>
        /// <param name="provisioningState">
        /// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
        /// Serialized Name: Compute.provisioningState
        /// </param>
        /// <param name="description">
        /// The description of the Machine Learning compute.
        /// Serialized Name: Compute.description
        /// </param>
        /// <param name="createdOn">
        /// The time at which the compute was created.
        /// Serialized Name: Compute.createdOn
        /// </param>
        /// <param name="modifiedOn">
        /// The time at which the compute was last modified.
        /// Serialized Name: Compute.modifiedOn
        /// </param>
        /// <param name="resourceId">
        /// ARM resource id of the underlying compute
        /// Serialized Name: Compute.resourceId
        /// </param>
        /// <param name="provisioningErrors">
        /// Errors during provisioning
        /// Serialized Name: Compute.provisioningErrors
        /// </param>
        /// <param name="isAttachedCompute">
        /// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
        /// Serialized Name: Compute.isAttachedCompute
        /// </param>
        /// <param name="disableLocalAuth">
        /// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
        /// Serialized Name: Compute.disableLocalAuth
        /// </param>
        /// <param name="properties"> Serialized Name: DataLakeAnalyticsSchema.properties. </param>
        internal MachineLearningDataLakeAnalytics(ComputeType computeType, string computeLocation, MachineLearningProvisioningState? provisioningState, string description, DateTimeOffset? createdOn, DateTimeOffset? modifiedOn, ResourceIdentifier resourceId, IReadOnlyList<MachineLearningError> provisioningErrors, bool? isAttachedCompute, bool? disableLocalAuth, MachineLearningDataLakeAnalyticsProperties properties) : base(computeType, computeLocation, provisioningState, description, createdOn, modifiedOn, resourceId, provisioningErrors, isAttachedCompute, disableLocalAuth)
        {
            Properties = properties;
            ComputeType = computeType;
        }

        /// <summary> Serialized Name: DataLakeAnalyticsSchema.properties. </summary>
        internal MachineLearningDataLakeAnalyticsProperties Properties { get; set; }
        /// <summary>
        /// DataLake Store Account Name
        /// Serialized Name: DataLakeAnalyticsSchemaProperties.dataLakeStoreAccountName
        /// </summary>
        public string DataLakeStoreAccountName
        {
            get => Properties is null ? default : Properties.DataLakeStoreAccountName;
            set
            {
                if (Properties is null)
                    Properties = new MachineLearningDataLakeAnalyticsProperties();
                Properties.DataLakeStoreAccountName = value;
            }
        }
    }
}
