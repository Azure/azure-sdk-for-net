// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace. </summary>
    public partial class ServiceTagDestination
    {
        /// <summary> Initializes a new instance of <see cref="ServiceTagDestination"/>. </summary>
        public ServiceTagDestination()
        {
            AddressPrefixes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="ServiceTagDestination"/>. </summary>
        /// <param name="action"> The action enum for networking rule. </param>
        /// <param name="addressPrefixes"> Optional, if provided, the ServiceTag property will be ignored. </param>
        /// <param name="portRanges"></param>
        /// <param name="protocol"></param>
        /// <param name="serviceTag"></param>
        internal ServiceTagDestination(NetworkingRuleAction? action, IReadOnlyList<string> addressPrefixes, string portRanges, string protocol, string serviceTag)
        {
            Action = action;
            AddressPrefixes = addressPrefixes;
            PortRanges = portRanges;
            Protocol = protocol;
            ServiceTag = serviceTag;
        }

        /// <summary> The action enum for networking rule. </summary>
        public NetworkingRuleAction? Action { get; set; }
        /// <summary> Optional, if provided, the ServiceTag property will be ignored. </summary>
        public IReadOnlyList<string> AddressPrefixes { get; }
        /// <summary> Gets or sets the port ranges. </summary>
        public string PortRanges { get; set; }
        /// <summary> Gets or sets the protocol. </summary>
        public string Protocol { get; set; }
        /// <summary> Gets or sets the service tag. </summary>
        public string ServiceTag { get; set; }
    }
}
