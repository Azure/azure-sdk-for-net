// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary>
    /// The MachineLearningTargetUtilizationScaleSettings.
    /// Serialized Name: TargetUtilizationScaleSettings
    /// </summary>
    public partial class MachineLearningTargetUtilizationScaleSettings : MachineLearningOnlineScaleSettings
    {
        /// <summary> Initializes a new instance of MachineLearningTargetUtilizationScaleSettings. </summary>
        public MachineLearningTargetUtilizationScaleSettings()
        {
            ScaleType = ScaleType.TargetUtilization;
        }

        /// <summary> Initializes a new instance of MachineLearningTargetUtilizationScaleSettings. </summary>
        /// <param name="scaleType">
        /// [Required] Type of deployment scaling algorithm
        /// Serialized Name: OnlineScaleSettings.scaleType
        /// </param>
        /// <param name="maxInstances">
        /// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
        /// Serialized Name: TargetUtilizationScaleSettings.maxInstances
        /// </param>
        /// <param name="minInstances">
        /// The minimum number of instances to always be present.
        /// Serialized Name: TargetUtilizationScaleSettings.minInstances
        /// </param>
        /// <param name="pollingInterval">
        /// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
        /// Serialized Name: TargetUtilizationScaleSettings.pollingInterval
        /// </param>
        /// <param name="targetUtilizationPercentage">
        /// Target CPU usage for the autoscaler.
        /// Serialized Name: TargetUtilizationScaleSettings.targetUtilizationPercentage
        /// </param>
        internal MachineLearningTargetUtilizationScaleSettings(ScaleType scaleType, int? maxInstances, int? minInstances, TimeSpan? pollingInterval, int? targetUtilizationPercentage) : base(scaleType)
        {
            MaxInstances = maxInstances;
            MinInstances = minInstances;
            PollingInterval = pollingInterval;
            TargetUtilizationPercentage = targetUtilizationPercentage;
            ScaleType = scaleType;
        }

        /// <summary>
        /// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
        /// Serialized Name: TargetUtilizationScaleSettings.maxInstances
        /// </summary>
        public int? MaxInstances { get; set; }
        /// <summary>
        /// The minimum number of instances to always be present.
        /// Serialized Name: TargetUtilizationScaleSettings.minInstances
        /// </summary>
        public int? MinInstances { get; set; }
        /// <summary>
        /// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
        /// Serialized Name: TargetUtilizationScaleSettings.pollingInterval
        /// </summary>
        public TimeSpan? PollingInterval { get; set; }
        /// <summary>
        /// Target CPU usage for the autoscaler.
        /// Serialized Name: TargetUtilizationScaleSettings.targetUtilizationPercentage
        /// </summary>
        public int? TargetUtilizationPercentage { get; set; }
    }
}
