// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MountBindOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Propagation))
            {
                if (Propagation != null)
                {
                    writer.WritePropertyName("propagation"u8);
                    writer.WriteStringValue(Propagation);
                }
                else
                {
                    writer.WriteNull("propagation");
                }
            }
            if (Optional.IsDefined(DoesCreateHostPath))
            {
                if (DoesCreateHostPath != null)
                {
                    writer.WritePropertyName("createHostPath"u8);
                    writer.WriteBooleanValue(DoesCreateHostPath.Value);
                }
                else
                {
                    writer.WriteNull("createHostPath");
                }
            }
            if (Optional.IsDefined(Selinux))
            {
                if (Selinux != null)
                {
                    writer.WritePropertyName("selinux"u8);
                    writer.WriteStringValue(Selinux);
                }
                else
                {
                    writer.WriteNull("selinux");
                }
            }
            writer.WriteEndObject();
        }

        internal static MountBindOptions DeserializeMountBindOptions(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> propagation = default;
            Optional<bool?> createHostPath = default;
            Optional<string> selinux = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("propagation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        propagation = null;
                        continue;
                    }
                    propagation = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createHostPath"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        createHostPath = null;
                        continue;
                    }
                    createHostPath = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("selinux"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        selinux = null;
                        continue;
                    }
                    selinux = property.Value.GetString();
                    continue;
                }
            }
            return new MountBindOptions(propagation.Value, Optional.ToNullable(createHostPath), selinux.Value);
        }
    }
}
