// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MachineLearning.Models
{
    /// <summary> Enum to determine the type of data. </summary>
    internal readonly partial struct DataImportSourceType : IEquatable<DataImportSourceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataImportSourceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataImportSourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DatabaseValue = "database";
        private const string FileSystemValue = "file_system";

        /// <summary> database. </summary>
        public static DataImportSourceType Database { get; } = new DataImportSourceType(DatabaseValue);
        /// <summary> file_system. </summary>
        public static DataImportSourceType FileSystem { get; } = new DataImportSourceType(FileSystemValue);
        /// <summary> Determines if two <see cref="DataImportSourceType"/> values are the same. </summary>
        public static bool operator ==(DataImportSourceType left, DataImportSourceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataImportSourceType"/> values are not the same. </summary>
        public static bool operator !=(DataImportSourceType left, DataImportSourceType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DataImportSourceType"/>. </summary>
        public static implicit operator DataImportSourceType(string value) => new DataImportSourceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataImportSourceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataImportSourceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
