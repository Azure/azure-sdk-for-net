// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class OnlineInferenceConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Configurations))
            {
                if (Configurations != null)
                {
                    writer.WritePropertyName("configurations"u8);
                    writer.WriteStartObject();
                    foreach (var item in Configurations)
                    {
                        writer.WritePropertyName(item.Key);
                        writer.WriteStringValue(item.Value);
                    }
                    writer.WriteEndObject();
                }
                else
                {
                    writer.WriteNull("configurations");
                }
            }
            if (Optional.IsDefined(EntryScript))
            {
                if (EntryScript != null)
                {
                    writer.WritePropertyName("entryScript"u8);
                    writer.WriteStringValue(EntryScript);
                }
                else
                {
                    writer.WriteNull("entryScript");
                }
            }
            if (Optional.IsDefined(LivenessRoute))
            {
                if (LivenessRoute != null)
                {
                    writer.WritePropertyName("livenessRoute"u8);
                    writer.WriteObjectValue(LivenessRoute);
                }
                else
                {
                    writer.WriteNull("livenessRoute");
                }
            }
            if (Optional.IsDefined(ReadinessRoute))
            {
                if (ReadinessRoute != null)
                {
                    writer.WritePropertyName("readinessRoute"u8);
                    writer.WriteObjectValue(ReadinessRoute);
                }
                else
                {
                    writer.WriteNull("readinessRoute");
                }
            }
            if (Optional.IsDefined(ScoringRoute))
            {
                if (ScoringRoute != null)
                {
                    writer.WritePropertyName("scoringRoute"u8);
                    writer.WriteObjectValue(ScoringRoute);
                }
                else
                {
                    writer.WriteNull("scoringRoute");
                }
            }
            writer.WriteEndObject();
        }

        internal static OnlineInferenceConfiguration DeserializeOnlineInferenceConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IDictionary<string, string>> configurations = default;
            Optional<string> entryScript = default;
            Optional<MachineLearningInferenceContainerRoute> livenessRoute = default;
            Optional<MachineLearningInferenceContainerRoute> readinessRoute = default;
            Optional<MachineLearningInferenceContainerRoute> scoringRoute = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("configurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        configurations = null;
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    configurations = dictionary;
                    continue;
                }
                if (property.NameEquals("entryScript"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        entryScript = null;
                        continue;
                    }
                    entryScript = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("livenessRoute"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        livenessRoute = null;
                        continue;
                    }
                    livenessRoute = MachineLearningInferenceContainerRoute.DeserializeMachineLearningInferenceContainerRoute(property.Value);
                    continue;
                }
                if (property.NameEquals("readinessRoute"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        readinessRoute = null;
                        continue;
                    }
                    readinessRoute = MachineLearningInferenceContainerRoute.DeserializeMachineLearningInferenceContainerRoute(property.Value);
                    continue;
                }
                if (property.NameEquals("scoringRoute"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        scoringRoute = null;
                        continue;
                    }
                    scoringRoute = MachineLearningInferenceContainerRoute.DeserializeMachineLearningInferenceContainerRoute(property.Value);
                    continue;
                }
            }
            return new OnlineInferenceConfiguration(Optional.ToDictionary(configurations), entryScript.Value, livenessRoute.Value, readinessRoute.Value, scoringRoute.Value);
        }
    }
}
