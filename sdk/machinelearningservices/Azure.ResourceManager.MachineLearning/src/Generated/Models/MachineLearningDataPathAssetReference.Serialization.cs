// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MachineLearning.Models
{
    public partial class MachineLearningDataPathAssetReference : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DatastoreId))
            {
                if (DatastoreId != null)
                {
                    writer.WritePropertyName("datastoreId"u8);
                    writer.WriteStringValue(DatastoreId);
                }
                else
                {
                    writer.WriteNull("datastoreId");
                }
            }
            if (Optional.IsDefined(Path))
            {
                if (Path != null)
                {
                    writer.WritePropertyName("path"u8);
                    writer.WriteStringValue(Path);
                }
                else
                {
                    writer.WriteNull("path");
                }
            }
            writer.WritePropertyName("referenceType"u8);
            writer.WriteStringValue(ReferenceType.ToString());
            writer.WriteEndObject();
        }

        internal static MachineLearningDataPathAssetReference DeserializeMachineLearningDataPathAssetReference(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> datastoreId = default;
            Optional<string> path = default;
            ReferenceType referenceType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("datastoreId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        datastoreId = null;
                        continue;
                    }
                    datastoreId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("path"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        path = null;
                        continue;
                    }
                    path = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("referenceType"u8))
                {
                    referenceType = new ReferenceType(property.Value.GetString());
                    continue;
                }
            }
            return new MachineLearningDataPathAssetReference(referenceType, datastoreId.Value, path.Value);
        }
    }
}
