// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_DeviceRegistryNamespaceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetNamespace()
        {
            // Generated from example definition: 2025-10-01/Get_Namespace.json
            // this example is just showing the usage of "Namespace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceResource created on azure
            // for more information of creating DeviceRegistryNamespaceResource, please refer to the document of DeviceRegistryNamespaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "adr-namespace-gbk0925-n01";
            ResourceIdentifier deviceRegistryNamespaceResourceId = DeviceRegistryNamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            DeviceRegistryNamespaceResource deviceRegistryNamespace = client.GetDeviceRegistryNamespaceResource(deviceRegistryNamespaceResourceId);

            // invoke the operation
            DeviceRegistryNamespaceResource result = await deviceRegistryNamespace.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteNamespace()
        {
            // Generated from example definition: 2025-10-01/Delete_Namespace.json
            // this example is just showing the usage of "Namespace_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceResource created on azure
            // for more information of creating DeviceRegistryNamespaceResource, please refer to the document of DeviceRegistryNamespaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "adr-namespace-gbk0925-n01";
            ResourceIdentifier deviceRegistryNamespaceResourceId = DeviceRegistryNamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            DeviceRegistryNamespaceResource deviceRegistryNamespace = client.GetDeviceRegistryNamespaceResource(deviceRegistryNamespaceResourceId);

            // invoke the operation
            await deviceRegistryNamespace.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateNamespaceEndpoints()
        {
            // Generated from example definition: 2025-10-01/Update_Namespace_Endpoints.json
            // this example is just showing the usage of "Namespace_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceResource created on azure
            // for more information of creating DeviceRegistryNamespaceResource, please refer to the document of DeviceRegistryNamespaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "adr-namespace-gbk0925-n01";
            ResourceIdentifier deviceRegistryNamespaceResourceId = DeviceRegistryNamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            DeviceRegistryNamespaceResource deviceRegistryNamespace = client.GetDeviceRegistryNamespaceResource(deviceRegistryNamespaceResourceId);

            // invoke the operation
            DeviceRegistryNamespacePatch patch = new DeviceRegistryNamespacePatch
            {
                MessagingEndpoints =
{
["eventGridEndpoint"] = new MessagingEndpoint("https://myeventgridtopic.westeurope-1.eventgrid.azure.net/api/events")
{
EndpointType = "Microsoft.Devices/IoTHubs",
}
},
            };
            ArmOperation<DeviceRegistryNamespaceResource> lro = await deviceRegistryNamespace.UpdateAsync(WaitUntil.Completed, patch);
            DeviceRegistryNamespaceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Migrate_NamespaceMigrate()
        {
            // Generated from example definition: 2025-10-01/Migrate_Assets_Namespace.json
            // this example is just showing the usage of "Namespaces_Migrate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceResource created on azure
            // for more information of creating DeviceRegistryNamespaceResource, please refer to the document of DeviceRegistryNamespaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            ResourceIdentifier deviceRegistryNamespaceResourceId = DeviceRegistryNamespaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName);
            DeviceRegistryNamespaceResource deviceRegistryNamespace = client.GetDeviceRegistryNamespaceResource(deviceRegistryNamespaceResourceId);

            // invoke the operation
            NamespaceMigrateContent content = new NamespaceMigrateContent
            {
                Scope = Scope.Resources,
                ResourceIds = { "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.DeviceRegistry/assets/my-asset-1", "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.DeviceRegistry/assets/my-asset-2", "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.DeviceRegistry/assets/my-asset-3" },
            };
            await deviceRegistryNamespace.MigrateAsync(WaitUntil.Completed, content);

            Console.WriteLine("Succeeded");
        }
    }
}
