// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_DeviceRegistryNamespaceDeviceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetNamespaceDevice()
        {
            // Generated from example definition: 2025-10-01/Get_NamespaceDevice.json
            // this example is just showing the usage of "NamespaceDevice_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDeviceResource, please refer to the document of DeviceRegistryNamespaceDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string deviceName = "my-device-name";
            ResourceIdentifier deviceRegistryNamespaceDeviceResourceId = DeviceRegistryNamespaceDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, deviceName);
            DeviceRegistryNamespaceDeviceResource deviceRegistryNamespaceDevice = client.GetDeviceRegistryNamespaceDeviceResource(deviceRegistryNamespaceDeviceResourceId);

            // invoke the operation
            DeviceRegistryNamespaceDeviceResource result = await deviceRegistryNamespaceDevice.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetNamespaceDeviceWithEndpointErrorStatus()
        {
            // Generated from example definition: 2025-10-01/Get_NamespaceDeviceWithEndpointErrorStatus.json
            // this example is just showing the usage of "NamespaceDevice_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDeviceResource, please refer to the document of DeviceRegistryNamespaceDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string deviceName = "my-device-name";
            ResourceIdentifier deviceRegistryNamespaceDeviceResourceId = DeviceRegistryNamespaceDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, deviceName);
            DeviceRegistryNamespaceDeviceResource deviceRegistryNamespaceDevice = client.GetDeviceRegistryNamespaceDeviceResource(deviceRegistryNamespaceDeviceResourceId);

            // invoke the operation
            DeviceRegistryNamespaceDeviceResource result = await deviceRegistryNamespaceDevice.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteNamespaceDevice()
        {
            // Generated from example definition: 2025-10-01/Delete_NamespaceDevice.json
            // this example is just showing the usage of "NamespaceDevice_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDeviceResource, please refer to the document of DeviceRegistryNamespaceDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "adr-namespace-gbk0925-n01";
            string deviceName = "adr-device-gbk0925-n01";
            ResourceIdentifier deviceRegistryNamespaceDeviceResourceId = DeviceRegistryNamespaceDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, deviceName);
            DeviceRegistryNamespaceDeviceResource deviceRegistryNamespaceDevice = client.GetDeviceRegistryNamespaceDeviceResource(deviceRegistryNamespaceDeviceResourceId);

            // invoke the operation
            await deviceRegistryNamespaceDevice.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateNamespaceDevices()
        {
            // Generated from example definition: 2025-10-01/Update_NamespaceDevice.json
            // this example is just showing the usage of "NamespaceDevice_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDeviceResource, please refer to the document of DeviceRegistryNamespaceDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "adr-namespace-gbk0925-n01";
            string deviceName = "dev-namespace-gbk0925-n01";
            ResourceIdentifier deviceRegistryNamespaceDeviceResourceId = DeviceRegistryNamespaceDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, deviceName);
            DeviceRegistryNamespaceDeviceResource deviceRegistryNamespaceDevice = client.GetDeviceRegistryNamespaceDeviceResource(deviceRegistryNamespaceDeviceResourceId);

            // invoke the operation
            DeviceRegistryNamespaceDevicePatch patch = new DeviceRegistryNamespaceDevicePatch
            {
                Properties = new NamespaceDeviceUpdateProperties
                {
                    Endpoints = new MessagingEndpoints
                    {
                        Outbound = new OutboundEndpoints(new Dictionary<string, DeviceMessagingEndpoint>
                        {
                            ["eventGridEndpoint"] = new DeviceMessagingEndpoint("https://myeventgridtopic.westeurope-1.eventgrid.azure.net/api/events")
                            {
                                EndpointType = "Microsoft.Devices/IoTHubs",
                            }
                        }),
                    },
                    Attributes =
{
["deviceType"] = BinaryData.FromObjectAsJson("sensor"),
["deviceOwner"] = BinaryData.FromObjectAsJson("IT"),
["deviceCategory"] = BinaryData.FromObjectAsJson(16)
},
                    Enabled = true,
                },
            };
            ArmOperation<DeviceRegistryNamespaceDeviceResource> lro = await deviceRegistryNamespaceDevice.UpdateAsync(WaitUntil.Completed, patch);
            DeviceRegistryNamespaceDeviceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
