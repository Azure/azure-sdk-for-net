// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_NamespaceDiscoveredAssetResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetNamespaceDiscoveredAsset()
        {
            // Generated from example definition: 2025-10-01/Get_NamespaceDiscoveredAsset.json
            // this example is just showing the usage of "NamespaceDiscoveredAsset_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceDiscoveredAssetResource created on azure
            // for more information of creating NamespaceDiscoveredAssetResource, please refer to the document of NamespaceDiscoveredAssetResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string discoveredAssetName = "my-discoveredasset-1";
            ResourceIdentifier namespaceDiscoveredAssetResourceId = NamespaceDiscoveredAssetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, discoveredAssetName);
            NamespaceDiscoveredAssetResource namespaceDiscoveredAsset = client.GetNamespaceDiscoveredAssetResource(namespaceDiscoveredAssetResourceId);

            // invoke the operation
            NamespaceDiscoveredAssetResource result = await namespaceDiscoveredAsset.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NamespaceDiscoveredAssetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteNamespaceDiscoveredAsset()
        {
            // Generated from example definition: 2025-10-01/Delete_NamespaceDiscoveredAsset.json
            // this example is just showing the usage of "NamespaceDiscoveredAsset_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceDiscoveredAssetResource created on azure
            // for more information of creating NamespaceDiscoveredAssetResource, please refer to the document of NamespaceDiscoveredAssetResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string discoveredAssetName = "my-discoveredasset-1";
            ResourceIdentifier namespaceDiscoveredAssetResourceId = NamespaceDiscoveredAssetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, discoveredAssetName);
            NamespaceDiscoveredAssetResource namespaceDiscoveredAsset = client.GetNamespaceDiscoveredAssetResource(namespaceDiscoveredAssetResourceId);

            // invoke the operation
            await namespaceDiscoveredAsset.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateNamespaceDiscoveredAsset()
        {
            // Generated from example definition: 2025-10-01/Update_NamespaceDiscoveredAsset.json
            // this example is just showing the usage of "NamespaceDiscoveredAsset_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceDiscoveredAssetResource created on azure
            // for more information of creating NamespaceDiscoveredAssetResource, please refer to the document of NamespaceDiscoveredAssetResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string discoveredAssetName = "my-discoveredasset-1";
            ResourceIdentifier namespaceDiscoveredAssetResourceId = NamespaceDiscoveredAssetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, discoveredAssetName);
            NamespaceDiscoveredAssetResource namespaceDiscoveredAsset = client.GetNamespaceDiscoveredAssetResource(namespaceDiscoveredAssetResourceId);

            // invoke the operation
            NamespaceDiscoveredAssetPatch patch = new NamespaceDiscoveredAssetPatch
            {
                Properties = new NamespaceDiscoveredAssetUpdateProperties
                {
                    DocumentationUri = "https://www.example.com/manual-2",
                },
            };
            ArmOperation<NamespaceDiscoveredAssetResource> lro = await namespaceDiscoveredAsset.UpdateAsync(WaitUntil.Completed, patch);
            NamespaceDiscoveredAssetResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NamespaceDiscoveredAssetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
