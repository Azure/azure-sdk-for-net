// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_DeviceRegistryNamespaceDiscoveredDeviceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetNamespaceDiscoveredDevice()
        {
            // Generated from example definition: 2025-10-01/Get_NamespaceDiscoveredDevice.json
            // this example is just showing the usage of "NamespaceDiscoveredDevice_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDiscoveredDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDiscoveredDeviceResource, please refer to the document of DeviceRegistryNamespaceDiscoveredDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string discoveredDeviceName = "my-discovereddevice-1";
            ResourceIdentifier deviceRegistryNamespaceDiscoveredDeviceResourceId = DeviceRegistryNamespaceDiscoveredDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, discoveredDeviceName);
            DeviceRegistryNamespaceDiscoveredDeviceResource deviceRegistryNamespaceDiscoveredDevice = client.GetDeviceRegistryNamespaceDiscoveredDeviceResource(deviceRegistryNamespaceDiscoveredDeviceResourceId);

            // invoke the operation
            DeviceRegistryNamespaceDiscoveredDeviceResource result = await deviceRegistryNamespaceDiscoveredDevice.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceDiscoveredDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteNamespaceDiscoveredDevice()
        {
            // Generated from example definition: 2025-10-01/Delete_NamespaceDiscoveredDevice.json
            // this example is just showing the usage of "NamespaceDiscoveredDevice_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDiscoveredDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDiscoveredDeviceResource, please refer to the document of DeviceRegistryNamespaceDiscoveredDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string discoveredDeviceName = "my-discovereddevice-1";
            ResourceIdentifier deviceRegistryNamespaceDiscoveredDeviceResourceId = DeviceRegistryNamespaceDiscoveredDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, discoveredDeviceName);
            DeviceRegistryNamespaceDiscoveredDeviceResource deviceRegistryNamespaceDiscoveredDevice = client.GetDeviceRegistryNamespaceDiscoveredDeviceResource(deviceRegistryNamespaceDiscoveredDeviceResourceId);

            // invoke the operation
            await deviceRegistryNamespaceDiscoveredDevice.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateNamespaceDiscoveredDevice()
        {
            // Generated from example definition: 2025-10-01/Update_NamespaceDiscoveredDevice.json
            // this example is just showing the usage of "NamespaceDiscoveredDevice_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryNamespaceDiscoveredDeviceResource created on azure
            // for more information of creating DeviceRegistryNamespaceDiscoveredDeviceResource, please refer to the document of DeviceRegistryNamespaceDiscoveredDeviceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string namespaceName = "my-namespace-1";
            string discoveredDeviceName = "my-discovereddevice-1";
            ResourceIdentifier deviceRegistryNamespaceDiscoveredDeviceResourceId = DeviceRegistryNamespaceDiscoveredDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, discoveredDeviceName);
            DeviceRegistryNamespaceDiscoveredDeviceResource deviceRegistryNamespaceDiscoveredDevice = client.GetDeviceRegistryNamespaceDiscoveredDeviceResource(deviceRegistryNamespaceDiscoveredDeviceResourceId);

            // invoke the operation
            DeviceRegistryNamespaceDiscoveredDevicePatch patch = new DeviceRegistryNamespaceDiscoveredDevicePatch
            {
                Properties = new NamespaceDiscoveredDeviceUpdateProperties
                {
                    Endpoints = new DiscoveredMessagingEndpoints
                    {
                        OutboundAssigned =
{
["newEventGridEndpoint"] = new DeviceMessagingEndpoint("https://myneweventgridtopic.westeurope-1.eventgrid.azure.net/api/events")
{
EndpointType = "Microsoft.Devices/IoTHubs",
}
},
                    },
                },
            };
            ArmOperation<DeviceRegistryNamespaceDiscoveredDeviceResource> lro = await deviceRegistryNamespaceDiscoveredDevice.UpdateAsync(WaitUntil.Completed, patch);
            DeviceRegistryNamespaceDiscoveredDeviceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryNamespaceDiscoveredDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
