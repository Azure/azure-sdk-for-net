// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> The type for a MQTT broker state store destination. </summary>
    public partial class DatasetBrokerStateStoreDestination : DatasetDestination
    {
        /// <summary> Initializes a new instance of <see cref="DatasetBrokerStateStoreDestination"/>. </summary>
        /// <param name="configuration"> The MQTT broker state store destination configuration. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="configuration"/> is null. </exception>
        public DatasetBrokerStateStoreDestination(BrokerStateStoreDestinationConfiguration configuration)
        {
            Argument.AssertNotNull(configuration, nameof(configuration));

            Configuration = configuration;
            Target = DatasetDestinationTarget.BrokerStateStore;
        }

        /// <summary> Initializes a new instance of <see cref="DatasetBrokerStateStoreDestination"/>. </summary>
        /// <param name="target"> Target destination. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="configuration"> The MQTT broker state store destination configuration. </param>
        internal DatasetBrokerStateStoreDestination(DatasetDestinationTarget? target, IDictionary<string, BinaryData> serializedAdditionalRawData, BrokerStateStoreDestinationConfiguration configuration) : base(target, serializedAdditionalRawData)
        {
            Configuration = configuration;
            Target = target;
        }

        /// <summary> Initializes a new instance of <see cref="DatasetBrokerStateStoreDestination"/> for deserialization. </summary>
        internal DatasetBrokerStateStoreDestination()
        {
        }

        /// <summary> The MQTT broker state store destination configuration. </summary>
        internal BrokerStateStoreDestinationConfiguration Configuration { get; set; }
        /// <summary> The MQTT broker state store destination key. </summary>
        public string Key
        {
            get => Configuration is null ? default : Configuration.Key;
            set => Configuration = new BrokerStateStoreDestinationConfiguration(value);
        }
    }
}
