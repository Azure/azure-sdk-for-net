// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the asset status action properties. </summary>
    public partial class DeviceRegistryNamespaceAssetStatusManagementAction
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryNamespaceAssetStatusManagementAction"/>. </summary>
        /// <param name="name"> The name of the action. Must be unique within the status.actions array. This name is used to correlate between the spec and status event information. </param>
        internal DeviceRegistryNamespaceAssetStatusManagementAction(string name)
        {
            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryNamespaceAssetStatusManagementAction"/>. </summary>
        /// <param name="name"> The name of the action. Must be unique within the status.actions array. This name is used to correlate between the spec and status event information. </param>
        /// <param name="requestMessageSchemaReference"> The request message schema reference object for the action. </param>
        /// <param name="responseMessageSchemaReference"> The response message schema reference object for the action. </param>
        /// <param name="error"> Object to transfer and persist errors that originate from the edge. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistryNamespaceAssetStatusManagementAction(string name, DeviceRegistryNamespaceMessageSchemaReference requestMessageSchemaReference, DeviceRegistryNamespaceMessageSchemaReference responseMessageSchemaReference, DeviceRegistryStatusError error, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            RequestMessageSchemaReference = requestMessageSchemaReference;
            ResponseMessageSchemaReference = responseMessageSchemaReference;
            Error = error;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryNamespaceAssetStatusManagementAction"/> for deserialization. </summary>
        internal DeviceRegistryNamespaceAssetStatusManagementAction()
        {
        }

        /// <summary> The name of the action. Must be unique within the status.actions array. This name is used to correlate between the spec and status event information. </summary>
        public string Name { get; }
        /// <summary> The request message schema reference object for the action. </summary>
        public DeviceRegistryNamespaceMessageSchemaReference RequestMessageSchemaReference { get; }
        /// <summary> The response message schema reference object for the action. </summary>
        public DeviceRegistryNamespaceMessageSchemaReference ResponseMessageSchemaReference { get; }
        /// <summary> Object to transfer and persist errors that originate from the edge. </summary>
        public DeviceRegistryStatusError Error { get; }
    }
}
