// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the discovered device properties. </summary>
    public partial class NamespaceDiscoveredDeviceProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NamespaceDiscoveredDeviceProperties"/>. </summary>
        /// <param name="discoveryId"> Identifier used to detect changes in the discovered device. </param>
        /// <param name="version"> An integer that is incremented each time the resource is modified. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="discoveryId"/> is null. </exception>
        public NamespaceDiscoveredDeviceProperties(string discoveryId, long version)
        {
            Argument.AssertNotNull(discoveryId, nameof(discoveryId));

            Attributes = new ChangeTrackingDictionary<string, BinaryData>();
            DiscoveryId = discoveryId;
            Version = version;
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceDiscoveredDeviceProperties"/>. </summary>
        /// <param name="externalDeviceId"> A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant. </param>
        /// <param name="endpoints"> Endpoints for discovered devices. </param>
        /// <param name="manufacturer"> Device manufacturer. </param>
        /// <param name="model"> Device model. </param>
        /// <param name="operatingSystem"> Device operating system name. </param>
        /// <param name="operatingSystemVersion"> Device operating system version. </param>
        /// <param name="attributes"> A set of key-value pairs that contain custom attributes. </param>
        /// <param name="discoveryId"> Identifier used to detect changes in the discovered device. </param>
        /// <param name="version"> An integer that is incremented each time the resource is modified. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NamespaceDiscoveredDeviceProperties(string externalDeviceId, DiscoveredMessagingEndpoints endpoints, string manufacturer, string model, string operatingSystem, string operatingSystemVersion, IDictionary<string, BinaryData> attributes, string discoveryId, long version, DeviceRegistryProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ExternalDeviceId = externalDeviceId;
            Endpoints = endpoints;
            Manufacturer = manufacturer;
            Model = model;
            OperatingSystem = operatingSystem;
            OperatingSystemVersion = operatingSystemVersion;
            Attributes = attributes;
            DiscoveryId = discoveryId;
            Version = version;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceDiscoveredDeviceProperties"/> for deserialization. </summary>
        internal NamespaceDiscoveredDeviceProperties()
        {
        }

        /// <summary> A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant. </summary>
        public string ExternalDeviceId { get; set; }
        /// <summary> Endpoints for discovered devices. </summary>
        public DiscoveredMessagingEndpoints Endpoints { get; set; }
        /// <summary> Device manufacturer. </summary>
        public string Manufacturer { get; set; }
        /// <summary> Device model. </summary>
        public string Model { get; set; }
        /// <summary> Device operating system name. </summary>
        public string OperatingSystem { get; set; }
        /// <summary> Device operating system version. </summary>
        public string OperatingSystemVersion { get; set; }
        /// <summary>
        /// A set of key-value pairs that contain custom attributes.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IDictionary<string, BinaryData> Attributes { get; }
        /// <summary> Identifier used to detect changes in the discovered device. </summary>
        public string DiscoveryId { get; set; }
        /// <summary> An integer that is incremented each time the resource is modified. </summary>
        public long Version { get; set; }
        /// <summary> Provisioning state of the resource. </summary>
        public DeviceRegistryProvisioningState? ProvisioningState { get; }
    }
}
