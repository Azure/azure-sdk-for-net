// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Property bag contains the device's outbound endpoints. </summary>
    public partial class OutboundEndpoints
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OutboundEndpoints"/>. </summary>
        /// <param name="assigned"> Endpoints the device can connect to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="assigned"/> is null. </exception>
        public OutboundEndpoints(IDictionary<string, DeviceMessagingEndpoint> assigned)
        {
            Argument.AssertNotNull(assigned, nameof(assigned));

            Assigned = assigned;
            Unassigned = new ChangeTrackingDictionary<string, DeviceMessagingEndpoint>();
        }

        /// <summary> Initializes a new instance of <see cref="OutboundEndpoints"/>. </summary>
        /// <param name="assigned"> Endpoints the device can connect to. </param>
        /// <param name="unassigned"> Set of most recently removed endpoints. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OutboundEndpoints(IDictionary<string, DeviceMessagingEndpoint> assigned, IDictionary<string, DeviceMessagingEndpoint> unassigned, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Assigned = assigned;
            Unassigned = unassigned;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="OutboundEndpoints"/> for deserialization. </summary>
        internal OutboundEndpoints()
        {
        }

        /// <summary> Endpoints the device can connect to. </summary>
        public IDictionary<string, DeviceMessagingEndpoint> Assigned { get; }
        /// <summary> Set of most recently removed endpoints. </summary>
        public IDictionary<string, DeviceMessagingEndpoint> Unassigned { get; }
    }
}
