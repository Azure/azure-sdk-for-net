// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_DeviceRegistryDiscoveredAssetResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetDeviceRegistryDiscoveredAssets_ListDiscoveredAssetsSubscription()
        {
            // Generated from example definition: specification/deviceregistry/resource-manager/Microsoft.DeviceRegistry/preview/2024-09-01-preview/examples/List_DiscoveredAssets_Subscription.json
            // this example is just showing the usage of "DiscoveredAssets_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (DeviceRegistryDiscoveredAssetResource item in subscriptionResource.GetDeviceRegistryDiscoveredAssetsAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DeviceRegistryDiscoveredAssetData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetDiscoveredAsset()
        {
            // Generated from example definition: specification/deviceregistry/resource-manager/Microsoft.DeviceRegistry/preview/2024-09-01-preview/examples/Get_DiscoveredAsset.json
            // this example is just showing the usage of "DiscoveredAssets_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryDiscoveredAssetResource created on azure
            // for more information of creating DeviceRegistryDiscoveredAssetResource, please refer to the document of DeviceRegistryDiscoveredAssetResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string discoveredAssetName = "my-discoveredasset";
            ResourceIdentifier deviceRegistryDiscoveredAssetResourceId = DeviceRegistryDiscoveredAssetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveredAssetName);
            DeviceRegistryDiscoveredAssetResource deviceRegistryDiscoveredAsset = client.GetDeviceRegistryDiscoveredAssetResource(deviceRegistryDiscoveredAssetResourceId);

            // invoke the operation
            DeviceRegistryDiscoveredAssetResource result = await deviceRegistryDiscoveredAsset.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryDiscoveredAssetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateDiscoveredAsset()
        {
            // Generated from example definition: specification/deviceregistry/resource-manager/Microsoft.DeviceRegistry/preview/2024-09-01-preview/examples/Update_DiscoveredAsset.json
            // this example is just showing the usage of "DiscoveredAssets_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryDiscoveredAssetResource created on azure
            // for more information of creating DeviceRegistryDiscoveredAssetResource, please refer to the document of DeviceRegistryDiscoveredAssetResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string discoveredAssetName = "my-discoveredasset";
            ResourceIdentifier deviceRegistryDiscoveredAssetResourceId = DeviceRegistryDiscoveredAssetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveredAssetName);
            DeviceRegistryDiscoveredAssetResource deviceRegistryDiscoveredAsset = client.GetDeviceRegistryDiscoveredAssetResource(deviceRegistryDiscoveredAssetResourceId);

            // invoke the operation
            DeviceRegistryDiscoveredAssetPatch patch = new DeviceRegistryDiscoveredAssetPatch()
            {
                Properties = new DiscoveredAssetUpdateProperties()
                {
                    DocumentationUri = new Uri("https://www.example.com/manual-2"),
                    DefaultTopic = new TopicUpdate()
                    {
                        Path = "/path/defaultTopic",
                        Retain = TopicRetainType.Never,
                    },
                },
            };
            ArmOperation<DeviceRegistryDiscoveredAssetResource> lro = await deviceRegistryDiscoveredAsset.UpdateAsync(WaitUntil.Completed, patch);
            DeviceRegistryDiscoveredAssetResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryDiscoveredAssetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteDiscoveredAsset()
        {
            // Generated from example definition: specification/deviceregistry/resource-manager/Microsoft.DeviceRegistry/preview/2024-09-01-preview/examples/Delete_DiscoveredAsset.json
            // this example is just showing the usage of "DiscoveredAssets_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistryDiscoveredAssetResource created on azure
            // for more information of creating DeviceRegistryDiscoveredAssetResource, please refer to the document of DeviceRegistryDiscoveredAssetResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string discoveredAssetName = "my-discoveredasset";
            ResourceIdentifier deviceRegistryDiscoveredAssetResourceId = DeviceRegistryDiscoveredAssetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveredAssetName);
            DeviceRegistryDiscoveredAssetResource deviceRegistryDiscoveredAsset = client.GetDeviceRegistryDiscoveredAssetResource(deviceRegistryDiscoveredAssetResourceId);

            // invoke the operation
            await deviceRegistryDiscoveredAsset.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }
    }
}
