// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_DeviceRegistrySchemaRegistryResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetSchemaRegistry()
        {
            // Generated from example definition: 2024-09-01-preview/Get_SchemaRegistry.json
            // this example is just showing the usage of "SchemaRegistry_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistrySchemaRegistryResource created on azure
            // for more information of creating DeviceRegistrySchemaRegistryResource, please refer to the document of DeviceRegistrySchemaRegistryResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string schemaRegistryName = "my-schema-registry";
            ResourceIdentifier deviceRegistrySchemaRegistryResourceId = DeviceRegistrySchemaRegistryResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, schemaRegistryName);
            DeviceRegistrySchemaRegistryResource deviceRegistrySchemaRegistry = client.GetDeviceRegistrySchemaRegistryResource(deviceRegistrySchemaRegistryResourceId);

            // invoke the operation
            DeviceRegistrySchemaRegistryResource result = await deviceRegistrySchemaRegistry.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistrySchemaRegistryData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteSchemaRegistry()
        {
            // Generated from example definition: 2024-09-01-preview/Delete_SchemaRegistry.json
            // this example is just showing the usage of "SchemaRegistry_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistrySchemaRegistryResource created on azure
            // for more information of creating DeviceRegistrySchemaRegistryResource, please refer to the document of DeviceRegistrySchemaRegistryResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string schemaRegistryName = "my-schema-registry";
            ResourceIdentifier deviceRegistrySchemaRegistryResourceId = DeviceRegistrySchemaRegistryResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, schemaRegistryName);
            DeviceRegistrySchemaRegistryResource deviceRegistrySchemaRegistry = client.GetDeviceRegistrySchemaRegistryResource(deviceRegistrySchemaRegistryResourceId);

            // invoke the operation
            await deviceRegistrySchemaRegistry.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateSchemaRegistry()
        {
            // Generated from example definition: 2024-09-01-preview/Update_SchemaRegistry.json
            // this example is just showing the usage of "SchemaRegistry_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceRegistrySchemaRegistryResource created on azure
            // for more information of creating DeviceRegistrySchemaRegistryResource, please refer to the document of DeviceRegistrySchemaRegistryResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string schemaRegistryName = "my-schema-registry";
            ResourceIdentifier deviceRegistrySchemaRegistryResourceId = DeviceRegistrySchemaRegistryResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, schemaRegistryName);
            DeviceRegistrySchemaRegistryResource deviceRegistrySchemaRegistry = client.GetDeviceRegistrySchemaRegistryResource(deviceRegistrySchemaRegistryResourceId);

            // invoke the operation
            DeviceRegistrySchemaRegistryPatch patch = new DeviceRegistrySchemaRegistryPatch
            {
                Tags = { },
                Properties = new SchemaRegistryUpdateProperties
                {
                    DisplayName = "Schema Registry namespace 001",
                    Description = "This is a sample Schema Registry",
                },
            };
            ArmOperation<DeviceRegistrySchemaRegistryResource> lro = await deviceRegistrySchemaRegistry.UpdateAsync(WaitUntil.Completed, patch);
            DeviceRegistrySchemaRegistryResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistrySchemaRegistryData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
