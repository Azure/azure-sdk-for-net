// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceRegistry.Models;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceRegistry.Samples
{
    public partial class Sample_DeviceRegistryDiscoveredAssetEndpointProfileCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CreateDiscoveredAssetEndpointProfile()
        {
            // Generated from example definition: 2024-09-01-preview/Create_DiscoveredAssetEndpointProfile.json
            // this example is just showing the usage of "DiscoveredAssetEndpointProfile_CreateOrReplace" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this DeviceRegistryDiscoveredAssetEndpointProfileResource
            DeviceRegistryDiscoveredAssetEndpointProfileCollection collection = resourceGroupResource.GetDeviceRegistryDiscoveredAssetEndpointProfiles();

            // invoke the operation
            string discoveredAssetEndpointProfileName = "my-discoveredassetendpointprofile";
            DeviceRegistryDiscoveredAssetEndpointProfileData data = new DeviceRegistryDiscoveredAssetEndpointProfileData(new AzureLocation("West Europe"), new DeviceRegistryExtendedLocation("CustomLocation", "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.extendedlocation/customlocations/location1"))
            {
                Properties = new DiscoveredAssetEndpointProfileProperties(new Uri("https://www.example.com/myTargetAddress"), "myEndpointProfileType", "11111111-1111-1111-1111-111111111111", 73766L)
                {
                    AdditionalConfiguration = "{\"foo\": \"bar\"}",
                    SupportedAuthenticationMethods = { AuthenticationMethod.Anonymous, AuthenticationMethod.Certificate, AuthenticationMethod.UsernamePassword },
                },
                Tags =
{
["site"] = "building-1"
},
            };
            ArmOperation<DeviceRegistryDiscoveredAssetEndpointProfileResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, discoveredAssetEndpointProfileName, data);
            DeviceRegistryDiscoveredAssetEndpointProfileResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryDiscoveredAssetEndpointProfileData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetDiscoveredAssetEndpointProfile()
        {
            // Generated from example definition: 2024-09-01-preview/Get_DiscoveredAssetEndpointProfile.json
            // this example is just showing the usage of "DiscoveredAssetEndpointProfile_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this DeviceRegistryDiscoveredAssetEndpointProfileResource
            DeviceRegistryDiscoveredAssetEndpointProfileCollection collection = resourceGroupResource.GetDeviceRegistryDiscoveredAssetEndpointProfiles();

            // invoke the operation
            string discoveredAssetEndpointProfileName = "my-discoveredassetendpointprofile";
            DeviceRegistryDiscoveredAssetEndpointProfileResource result = await collection.GetAsync(discoveredAssetEndpointProfileName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceRegistryDiscoveredAssetEndpointProfileData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ListDiscoveredAssetEndpointProfilesResourceGroup()
        {
            // Generated from example definition: 2024-09-01-preview/List_DiscoveredAssetEndpointProfiles_ResourceGroup.json
            // this example is just showing the usage of "DiscoveredAssetEndpointProfile_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this DeviceRegistryDiscoveredAssetEndpointProfileResource
            DeviceRegistryDiscoveredAssetEndpointProfileCollection collection = resourceGroupResource.GetDeviceRegistryDiscoveredAssetEndpointProfiles();

            // invoke the operation and iterate over the result
            await foreach (DeviceRegistryDiscoveredAssetEndpointProfileResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DeviceRegistryDiscoveredAssetEndpointProfileData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetDiscoveredAssetEndpointProfile()
        {
            // Generated from example definition: 2024-09-01-preview/Get_DiscoveredAssetEndpointProfile.json
            // this example is just showing the usage of "DiscoveredAssetEndpointProfile_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this DeviceRegistryDiscoveredAssetEndpointProfileResource
            DeviceRegistryDiscoveredAssetEndpointProfileCollection collection = resourceGroupResource.GetDeviceRegistryDiscoveredAssetEndpointProfiles();

            // invoke the operation
            string discoveredAssetEndpointProfileName = "my-discoveredassetendpointprofile";
            bool result = await collection.ExistsAsync(discoveredAssetEndpointProfileName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetDiscoveredAssetEndpointProfile()
        {
            // Generated from example definition: 2024-09-01-preview/Get_DiscoveredAssetEndpointProfile.json
            // this example is just showing the usage of "DiscoveredAssetEndpointProfile_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this DeviceRegistryDiscoveredAssetEndpointProfileResource
            DeviceRegistryDiscoveredAssetEndpointProfileCollection collection = resourceGroupResource.GetDeviceRegistryDiscoveredAssetEndpointProfiles();

            // invoke the operation
            string discoveredAssetEndpointProfileName = "my-discoveredassetendpointprofile";
            NullableResponse<DeviceRegistryDiscoveredAssetEndpointProfileResource> response = await collection.GetIfExistsAsync(discoveredAssetEndpointProfileName);
            DeviceRegistryDiscoveredAssetEndpointProfileResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DeviceRegistryDiscoveredAssetEndpointProfileData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
