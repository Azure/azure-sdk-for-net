// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> Represents a GeoJSON Point geometry. </summary>
    public partial class GeoJsonPoint : GeoJsonGeometry
    {
        /// <summary> Initializes a new instance of <see cref="GeoJsonPoint"/>. </summary>
        /// <param name="coordinates"> The coordinates of the point as [longitude, latitude]. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="coordinates"/> is null. </exception>
        public GeoJsonPoint(string coordinates) : base(GeometryType.Point)
        {
            Argument.AssertNotNull(coordinates, nameof(coordinates));

            Coordinates = coordinates;
        }

        /// <summary> Initializes a new instance of <see cref="GeoJsonPoint"/>. </summary>
        /// <param name="type"> The type of the geometry. </param>
        /// <param name="bbox"> Optional bounding box of the geometry. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="coordinates"> The coordinates of the point as [longitude, latitude]. </param>
        internal GeoJsonPoint(GeometryType @type, IList<double> bbox, IDictionary<string, BinaryData> additionalBinaryDataProperties, string coordinates) : base(@type, bbox, additionalBinaryDataProperties)
        {
            Coordinates = coordinates;
        }

        /// <summary> The coordinates of the point as [longitude, latitude]. </summary>
        public string Coordinates { get; set; }
    }
}
