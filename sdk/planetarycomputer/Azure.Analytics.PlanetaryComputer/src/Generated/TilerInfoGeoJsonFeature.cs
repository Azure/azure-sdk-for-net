// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> GeoJSON Feature object containing rio-tiler model information. </summary>
    public partial class TilerInfoGeoJsonFeature
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="TilerInfoGeoJsonFeature"/>. </summary>
        /// <param name="type"> GeoJSON type identifier. </param>
        /// <param name="geometry"> Geometry object defining the feature's shape. </param>
        /// <param name="properties"> Properties. </param>
        internal TilerInfoGeoJsonFeature(FeatureType @type, GeoJsonGeometry geometry, IDictionary<string, TilerInfo> properties)
        {
            Type = @type;
            Geometry = geometry;
            Properties = properties;
        }

        /// <summary> Initializes a new instance of <see cref="TilerInfoGeoJsonFeature"/>. </summary>
        /// <param name="type"> GeoJSON type identifier. </param>
        /// <param name="geometry"> Geometry object defining the feature's shape. </param>
        /// <param name="properties"> Properties. </param>
        /// <param name="id"> Unique identifier for the feature. </param>
        /// <param name="bbox"> Bounding box coordinates for the feature. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal TilerInfoGeoJsonFeature(FeatureType @type, GeoJsonGeometry geometry, IDictionary<string, TilerInfo> properties, string id, double? bbox, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            Geometry = geometry;
            Properties = properties;
            Id = id;
            Bbox = bbox;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> GeoJSON type identifier. </summary>
        public FeatureType Type { get; }

        /// <summary> Geometry object defining the feature's shape. </summary>
        public GeoJsonGeometry Geometry { get; }

        /// <summary> Properties. </summary>
        public IDictionary<string, TilerInfo> Properties { get; }

        /// <summary> Unique identifier for the feature. </summary>
        public string Id { get; }

        /// <summary> Bounding box coordinates for the feature. </summary>
        public double? Bbox { get; }
    }
}
