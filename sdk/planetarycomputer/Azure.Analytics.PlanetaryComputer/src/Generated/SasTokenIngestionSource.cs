// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> SAS Token ingestion source. </summary>
    public partial class SasTokenIngestionSource : IngestionSource
    {
        /// <summary> Initializes a new instance of <see cref="SasTokenIngestionSource"/>. </summary>
        /// <param name="id"> Ingestion source id. </param>
        /// <param name="connectionInfo"> SAS token connection information. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="connectionInfo"/> is null. </exception>
        public SasTokenIngestionSource(Guid id, SasTokenConnection connectionInfo) : base(id, IngestionSourceType.SasToken)
        {
            Argument.AssertNotNull(connectionInfo, nameof(connectionInfo));

            ConnectionInfo = connectionInfo;
        }

        /// <summary> Initializes a new instance of <see cref="SasTokenIngestionSource"/>. </summary>
        /// <param name="id"> Ingestion source id. </param>
        /// <param name="created"> Created time in UTC format. </param>
        /// <param name="kind"> Discriminator for the ingestion source. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="connectionInfo"> SAS token connection information. </param>
        internal SasTokenIngestionSource(Guid id, DateTimeOffset created, IngestionSourceType kind, IDictionary<string, BinaryData> additionalBinaryDataProperties, SasTokenConnection connectionInfo) : base(id, created, kind, additionalBinaryDataProperties)
        {
            ConnectionInfo = connectionInfo;
        }

        /// <summary> SAS token connection information. </summary>
        public SasTokenConnection ConnectionInfo { get; set; }
    }
}
