// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> Represents a MultiLineString. </summary>
    public partial class MultiLineString : GeoJsonGeometry
    {
        /// <summary> Initializes a new instance of <see cref="MultiLineString"/>. </summary>
        /// <param name="coordinates"> The coordinates of the multilinestring. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="coordinates"/> is null. </exception>
        public MultiLineString(IEnumerable<IList<double>> coordinates) : base(GeometryType.MultiLineString)
        {
            Argument.AssertNotNull(coordinates, nameof(coordinates));

            Coordinates = coordinates.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="MultiLineString"/>. </summary>
        /// <param name="type"> The type of the geometry. </param>
        /// <param name="bbox"> Optional bounding box of the geometry. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="coordinates"> The coordinates of the multilinestring. </param>
        internal MultiLineString(GeometryType @type, IList<double> bbox, IDictionary<string, BinaryData> additionalBinaryDataProperties, IList<IList<double>> coordinates) : base(@type, bbox, additionalBinaryDataProperties)
        {
            Coordinates = coordinates;
        }

        /// <summary> The coordinates of the multilinestring. </summary>
        public IList<IList<double>> Coordinates { get; }
    }
}
