// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> Statistical information about a data band. </summary>
    public partial class BandStatistics
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BandStatistics"/>. </summary>
        /// <param name="min"> Minimum value in the band. </param>
        /// <param name="max"> Maximum value in the band. </param>
        /// <param name="mean"> Mean value of the band. </param>
        /// <param name="count"> Count of pixels in the band. </param>
        /// <param name="sum"> Sum of all pixel values in the band. </param>
        /// <param name="std"> Standard deviation of pixel values in the band. </param>
        /// <param name="median"> Median value of the band. </param>
        /// <param name="majority"> Most common value in the band. </param>
        /// <param name="minority"> Least common value in the band. </param>
        /// <param name="unique"> Count of unique values in the band. </param>
        /// <param name="histogram"> Histogram of pixel values in the band. </param>
        /// <param name="validPercent"> Percentage of valid (non-masked) pixels. </param>
        /// <param name="maskedPixels"> Count of masked pixels in the band. </param>
        /// <param name="validPixels"> Count of valid (non-masked) pixels in the band. </param>
        /// <param name="percentile2">
        /// Percentile 2
        /// The 2nd percentile value.
        /// </param>
        /// <param name="percentile98">
        /// Percentile 98
        /// The 98th percentile value.
        /// </param>
        internal BandStatistics(float min, float max, float mean, float count, float sum, float std, float median, float majority, float minority, float unique, IEnumerable<IList<float>> histogram, float validPercent, float maskedPixels, float validPixels, float percentile2, float percentile98)
        {
            Min = min;
            Max = max;
            Mean = mean;
            Count = count;
            Sum = sum;
            Std = std;
            Median = median;
            Majority = majority;
            Minority = minority;
            Unique = unique;
            Histogram = histogram.ToList();
            ValidPercent = validPercent;
            MaskedPixels = maskedPixels;
            ValidPixels = validPixels;
            Percentile2 = percentile2;
            Percentile98 = percentile98;
        }

        /// <summary> Initializes a new instance of <see cref="BandStatistics"/>. </summary>
        /// <param name="min"> Minimum value in the band. </param>
        /// <param name="max"> Maximum value in the band. </param>
        /// <param name="mean"> Mean value of the band. </param>
        /// <param name="count"> Count of pixels in the band. </param>
        /// <param name="sum"> Sum of all pixel values in the band. </param>
        /// <param name="std"> Standard deviation of pixel values in the band. </param>
        /// <param name="median"> Median value of the band. </param>
        /// <param name="majority"> Most common value in the band. </param>
        /// <param name="minority"> Least common value in the band. </param>
        /// <param name="unique"> Count of unique values in the band. </param>
        /// <param name="histogram"> Histogram of pixel values in the band. </param>
        /// <param name="validPercent"> Percentage of valid (non-masked) pixels. </param>
        /// <param name="maskedPixels"> Count of masked pixels in the band. </param>
        /// <param name="validPixels"> Count of valid (non-masked) pixels in the band. </param>
        /// <param name="percentile2">
        /// Percentile 2
        /// The 2nd percentile value.
        /// </param>
        /// <param name="percentile98">
        /// Percentile 98
        /// The 98th percentile value.
        /// </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BandStatistics(float min, float max, float mean, float count, float sum, float std, float median, float majority, float minority, float unique, IList<IList<float>> histogram, float validPercent, float maskedPixels, float validPixels, float percentile2, float percentile98, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Min = min;
            Max = max;
            Mean = mean;
            Count = count;
            Sum = sum;
            Std = std;
            Median = median;
            Majority = majority;
            Minority = minority;
            Unique = unique;
            Histogram = histogram;
            ValidPercent = validPercent;
            MaskedPixels = maskedPixels;
            ValidPixels = validPixels;
            Percentile2 = percentile2;
            Percentile98 = percentile98;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Minimum value in the band. </summary>
        public float Min { get; }

        /// <summary> Maximum value in the band. </summary>
        public float Max { get; }

        /// <summary> Mean value of the band. </summary>
        public float Mean { get; }

        /// <summary> Count of pixels in the band. </summary>
        public float Count { get; }

        /// <summary> Sum of all pixel values in the band. </summary>
        public float Sum { get; }

        /// <summary> Standard deviation of pixel values in the band. </summary>
        public float Std { get; }

        /// <summary> Median value of the band. </summary>
        public float Median { get; }

        /// <summary> Most common value in the band. </summary>
        public float Majority { get; }

        /// <summary> Least common value in the band. </summary>
        public float Minority { get; }

        /// <summary> Count of unique values in the band. </summary>
        public float Unique { get; }

        /// <summary> Histogram of pixel values in the band. </summary>
        public IList<IList<float>> Histogram { get; }

        /// <summary> Percentage of valid (non-masked) pixels. </summary>
        public float ValidPercent { get; }

        /// <summary> Count of masked pixels in the band. </summary>
        public float MaskedPixels { get; }

        /// <summary> Count of valid (non-masked) pixels in the band. </summary>
        public float ValidPixels { get; }

        /// <summary>
        /// Percentile 2
        /// The 2nd percentile value.
        /// </summary>
        public float Percentile2 { get; }

        /// <summary>
        /// Percentile 98
        /// The 98th percentile value.
        /// </summary>
        public float Percentile98 { get; }
    }
}
