// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> SAS Token connection information. </summary>
    public partial class SharedAccessSignatureTokenConnection
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="SharedAccessSignatureTokenConnection"/>. </summary>
        /// <param name="containerUri"> Azure Blob Storage container URL. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="containerUri"/> is null. </exception>
        public SharedAccessSignatureTokenConnection(Uri containerUri)
        {
            Argument.AssertNotNull(containerUri, nameof(containerUri));

            ContainerUri = containerUri;
        }

        /// <summary> Initializes a new instance of <see cref="SharedAccessSignatureTokenConnection"/>. </summary>
        /// <param name="containerUri"> Azure Blob Storage container URL. </param>
        /// <param name="sharedAccessSignatureToken"> SAS token. </param>
        /// <param name="expiration"> Azure Blob Storage SAS token expiration in UTC format. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal SharedAccessSignatureTokenConnection(Uri containerUri, string sharedAccessSignatureToken, DateTimeOffset? expiration, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ContainerUri = containerUri;
            SharedAccessSignatureToken = sharedAccessSignatureToken;
            Expiration = expiration;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Azure Blob Storage container URL. </summary>
        public Uri ContainerUri { get; set; }

        /// <summary> SAS token. </summary>
        public string SharedAccessSignatureToken { get; set; }

        /// <summary> Azure Blob Storage SAS token expiration in UTC format. </summary>
        public DateTimeOffset? Expiration { get; }
    }
}
