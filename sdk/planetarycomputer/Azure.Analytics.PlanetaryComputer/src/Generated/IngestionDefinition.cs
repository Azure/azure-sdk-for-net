// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> Microsoft Planetary Computer Pro geo-catalog ingestion creation model. </summary>
    public partial class IngestionDefinition
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="IngestionDefinition"/>. </summary>
        /// <param name="importType"> Ingestion type. </param>
        public IngestionDefinition(IngestionType importType)
        {
            ImportType = importType;
        }

        /// <summary> Initializes a new instance of <see cref="IngestionDefinition"/>. </summary>
        /// <param name="id"> Ingestion id. </param>
        /// <param name="importType"> Ingestion type. </param>
        /// <param name="displayName"> Ingestion name. </param>
        /// <param name="sourceCatalogUrl"> Source catalog URL. Required for StaticCatalog ingestion type. </param>
        /// <param name="skipExistingItems"> Skip processing existing items in the catalog. </param>
        /// <param name="keepOriginalAssets"> Keep original source assets. </param>
        /// <param name="creationTime"> Ingestion creation time. </param>
        /// <param name="status"> Ingestion status. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal IngestionDefinition(Guid id, IngestionType importType, string displayName, Uri sourceCatalogUrl, bool? skipExistingItems, bool? keepOriginalAssets, DateTimeOffset creationTime, IngestionStatus status, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            ImportType = importType;
            DisplayName = displayName;
            SourceCatalogUrl = sourceCatalogUrl;
            SkipExistingItems = skipExistingItems;
            KeepOriginalAssets = keepOriginalAssets;
            CreationTime = creationTime;
            Status = status;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Ingestion id. </summary>
        public Guid Id { get; }

        /// <summary> Ingestion type. </summary>
        public IngestionType ImportType { get; set; }

        /// <summary> Ingestion name. </summary>
        public string DisplayName { get; set; }

        /// <summary> Source catalog URL. Required for StaticCatalog ingestion type. </summary>
        public Uri SourceCatalogUrl { get; set; }

        /// <summary> Skip processing existing items in the catalog. </summary>
        public bool? SkipExistingItems { get; set; }

        /// <summary> Keep original source assets. </summary>
        public bool? KeepOriginalAssets { get; set; }

        /// <summary> Ingestion creation time. </summary>
        public DateTimeOffset CreationTime { get; }

        /// <summary> Ingestion status. </summary>
        public IngestionStatus Status { get; }
    }
}
