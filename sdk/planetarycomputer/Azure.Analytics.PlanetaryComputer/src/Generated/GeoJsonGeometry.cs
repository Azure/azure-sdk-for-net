// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary>
    /// Represents a GeoJSON geometry object as defined by RFC 7946.
    /// 
    /// Supported geometry types include:
    /// - **Point**: A single geographic coordinate.
    /// - **LineString**: A sequence of geographic coordinates forming a line.
    /// - **Polygon**: A closed shape defined by linear rings.
    /// - **MultiPoint**: A collection of Points.
    /// - **MultiLineString**: A collection of LineStrings.
    /// - **MultiPolygon**: A collection of Polygons.
    /// 
    /// Used for spatial filtering in STAC.
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="PointGeometry"/>, <see cref="PolygonGeometry"/>, <see cref="MultiPolygon"/>, <see cref="MultiLineString"/>, <see cref="LineString"/>, and <see cref="MultiPoint"/>.
    /// </summary>
    public abstract partial class GeoJsonGeometry
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="GeoJsonGeometry"/>. </summary>
        /// <param name="type"> Discriminator property for GeoJsonGeometry. </param>
        private protected GeoJsonGeometry(GeometryType @type)
        {
            Type = @type;
            BoundingBox = new ChangeTrackingList<float>();
        }

        /// <summary> Initializes a new instance of <see cref="GeoJsonGeometry"/>. </summary>
        /// <param name="type"> Discriminator property for GeoJsonGeometry. </param>
        /// <param name="boundingBox"> Optional bounding box of the geometry. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal GeoJsonGeometry(GeometryType @type, IList<float> boundingBox, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            BoundingBox = boundingBox;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Discriminator property for GeoJsonGeometry. </summary>
        internal GeometryType Type { get; set; }

        /// <summary> Optional bounding box of the geometry. </summary>
        public IList<float> BoundingBox { get; }
    }
}
