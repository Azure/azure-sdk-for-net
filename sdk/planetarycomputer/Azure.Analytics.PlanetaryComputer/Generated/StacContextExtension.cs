// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary>
    /// https://github.com/radiantearth/stac-api-spec/tree/master/extensions/context#context-extension-specification
    /// 
    /// Context information for a search response including pagination details.
    /// </summary>
    public partial class StacContextExtension
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StacContextExtension"/>. </summary>
        /// <param name="returned"> Number of items returned in the response. </param>
        public StacContextExtension(int returned)
        {
            Returned = returned;
        }

        /// <summary> Initializes a new instance of <see cref="StacContextExtension"/>. </summary>
        /// <param name="returned"> Number of items returned in the response. </param>
        /// <param name="limit"> Maximum number of items requested. </param>
        /// <param name="matched"> Total number of items matching the query. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StacContextExtension(int returned, int? limit, int? matched, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Returned = returned;
            Limit = limit;
            Matched = matched;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Number of items returned in the response. </summary>
        public int Returned { get; set; }

        /// <summary> Maximum number of items requested. </summary>
        public int? Limit { get; set; }

        /// <summary> Total number of items matching the query. </summary>
        public int? Matched { get; set; }
    }
}
