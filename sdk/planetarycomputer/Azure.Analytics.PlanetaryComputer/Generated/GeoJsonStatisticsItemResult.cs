// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> STAC Item representing a spatiotemporal asset with statistical information. </summary>
    public partial class GeoJsonStatisticsItemResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="GeoJsonStatisticsItemResult"/>. </summary>
        /// <param name="geometry"> Geometry object defining the feature's shape. </param>
        /// <param name="boundingBox"> Bounding box coordinates for the feature. </param>
        /// <param name="id"> Unique identifier for the feature. </param>
        /// <param name="type"> GeoJSON type identifier for Feature. </param>
        /// <param name="properties"> Properties. </param>
        internal GeoJsonStatisticsItemResult(GeoJsonGeometry geometry, IEnumerable<float> boundingBox, string id, FeatureType @type, StacItemProperties properties)
        {
            Geometry = geometry;
            BoundingBox = boundingBox.ToList();
            Id = id;
            Type = @type;
            Properties = properties;
            StacExtensions = new ChangeTrackingList<Uri>();
        }

        /// <summary> Initializes a new instance of <see cref="GeoJsonStatisticsItemResult"/>. </summary>
        /// <param name="geometry"> Geometry object defining the feature's shape. </param>
        /// <param name="boundingBox"> Bounding box coordinates for the feature. </param>
        /// <param name="id"> Unique identifier for the feature. </param>
        /// <param name="type"> GeoJSON type identifier for Feature. </param>
        /// <param name="createdOn"> MSFT Created. </param>
        /// <param name="updatedOn"> MSFT Updated. </param>
        /// <param name="shortDescription"> MSFT Short Description. </param>
        /// <param name="stacVersion"> Stac Version. </param>
        /// <param name="collection"> ID of the STAC collection this item belongs to. </param>
        /// <param name="properties"> Properties. </param>
        /// <param name="timestamp"> MSFT Timestamp. </param>
        /// <param name="eTag"> MSFT ETag. </param>
        /// <param name="stacExtensions"> List of STAC extension URLs used by this item. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal GeoJsonStatisticsItemResult(GeoJsonGeometry geometry, IList<float> boundingBox, string id, FeatureType @type, string createdOn, string updatedOn, string shortDescription, string stacVersion, string collection, StacItemProperties properties, string timestamp, string eTag, IList<Uri> stacExtensions, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Geometry = geometry;
            BoundingBox = boundingBox;
            Id = id;
            Type = @type;
            CreatedOn = createdOn;
            UpdatedOn = updatedOn;
            ShortDescription = shortDescription;
            StacVersion = stacVersion;
            Collection = collection;
            Properties = properties;
            Timestamp = timestamp;
            ETag = eTag;
            StacExtensions = stacExtensions;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Geometry object defining the feature's shape. </summary>
        public GeoJsonGeometry Geometry { get; }

        /// <summary> Bounding box coordinates for the feature. </summary>
        public IList<float> BoundingBox { get; }

        /// <summary> Unique identifier for the feature. </summary>
        public string Id { get; }

        /// <summary> GeoJSON type identifier for Feature. </summary>
        public FeatureType Type { get; }

        /// <summary> MSFT Created. </summary>
        public string CreatedOn { get; }

        /// <summary> MSFT Updated. </summary>
        public string UpdatedOn { get; }

        /// <summary> MSFT Short Description. </summary>
        public string ShortDescription { get; }

        /// <summary> Stac Version. </summary>
        public string StacVersion { get; }

        /// <summary> ID of the STAC collection this item belongs to. </summary>
        public string Collection { get; }

        /// <summary> Properties. </summary>
        public StacItemProperties Properties { get; }

        /// <summary> MSFT Timestamp. </summary>
        public string Timestamp { get; }

        /// <summary> MSFT ETag. </summary>
        public string ETag { get; }

        /// <summary> List of STAC extension URLs used by this item. </summary>
        public IList<Uri> StacExtensions { get; }
    }
}
