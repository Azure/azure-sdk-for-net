// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.PlanetaryComputer
{
    /// <summary> Response from a successful mosaic registration with search ID and related links. </summary>
    public partial class TilerMosaicSearchRegistrationResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="TilerMosaicSearchRegistrationResult"/>. </summary>
        /// <param name="searchId"> Unique identifier for the registered search. </param>
        internal TilerMosaicSearchRegistrationResult(string searchId)
        {
            SearchId = searchId;
            Links = new ChangeTrackingList<StacLink>();
        }

        /// <summary> Initializes a new instance of <see cref="TilerMosaicSearchRegistrationResult"/>. </summary>
        /// <param name="searchId"> Unique identifier for the registered search. </param>
        /// <param name="links"> Related links for the registered mosaic. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal TilerMosaicSearchRegistrationResult(string searchId, IList<StacLink> links, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            SearchId = searchId;
            Links = links;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Unique identifier for the registered search. </summary>
        public string SearchId { get; }

        /// <summary> Related links for the registered mosaic. </summary>
        public IList<StacLink> Links { get; }
    }
}
