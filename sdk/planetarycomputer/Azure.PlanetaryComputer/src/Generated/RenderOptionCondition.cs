// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PlanetaryComputer
{
    /// <summary> Defines a condition for enabling a render option. </summary>
    public partial class RenderOptionCondition
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="RenderOptionCondition"/>. </summary>
        /// <param name="property"> Property name to check in the active CQL filter. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="property"/> is null. </exception>
        public RenderOptionCondition(string @property)
        {
            Argument.AssertNotNull(@property, nameof(@property));

            Property = @property;
        }

        /// <summary> Initializes a new instance of <see cref="RenderOptionCondition"/>. </summary>
        /// <param name="property"> Property name to check in the active CQL filter. </param>
        /// <param name="value"> Value that the property must equal. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal RenderOptionCondition(string @property, string value, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Property = @property;
            Value = value;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Property name to check in the active CQL filter. </summary>
        public string Property { get; set; }

        /// <summary> Value that the property must equal. </summary>
        public string Value { get; set; }
    }
}
