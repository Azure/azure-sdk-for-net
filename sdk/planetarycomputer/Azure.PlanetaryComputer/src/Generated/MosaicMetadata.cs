// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PlanetaryComputer
{
    /// <summary> Metadata information for mosaic or search results. </summary>
    public partial class MosaicMetadata
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="MosaicMetadata"/>. </summary>
        public MosaicMetadata()
        {
            Assets = new ChangeTrackingList<string>();
            Defaults = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="MosaicMetadata"/>. </summary>
        /// <param name="type"> Type of metadata resource. </param>
        /// <param name="bounds"> Geographic bounding box in [west, south, east, north] format. </param>
        /// <param name="minzoom"> Minimum zoom level supported. </param>
        /// <param name="maxzoom"> Maximum zoom level supported. </param>
        /// <param name="name"> Human-readable name for the resource. </param>
        /// <param name="assets"> List of asset identifiers included in the resource. </param>
        /// <param name="defaults"> Defaults. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal MosaicMetadata(MetadataType? @type, string bounds, int? minzoom, int? maxzoom, string name, IList<string> assets, IDictionary<string, string> defaults, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            Bounds = bounds;
            Minzoom = minzoom;
            Maxzoom = maxzoom;
            Name = name;
            Assets = assets;
            Defaults = defaults;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Type of metadata resource. </summary>
        public MetadataType? Type { get; set; }

        /// <summary> Geographic bounding box in [west, south, east, north] format. </summary>
        public string Bounds { get; set; }

        /// <summary> Minimum zoom level supported. </summary>
        public int? Minzoom { get; set; }

        /// <summary> Maximum zoom level supported. </summary>
        public int? Maxzoom { get; set; }

        /// <summary> Human-readable name for the resource. </summary>
        public string Name { get; set; }

        /// <summary> List of asset identifiers included in the resource. </summary>
        public IList<string> Assets { get; }

        /// <summary> Defaults. </summary>
        public IDictionary<string, string> Defaults { get; }
    }
}
