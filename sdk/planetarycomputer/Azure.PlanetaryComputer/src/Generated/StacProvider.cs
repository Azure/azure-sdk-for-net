// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PlanetaryComputer
{
    /// <summary>
    /// https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#provider-object
    /// 
    /// Represents information about a data provider for STAC collections and items.
    /// </summary>
    public partial class StacProvider
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StacProvider"/>. </summary>
        /// <param name="name"> Name of the provider organization or individual. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public StacProvider(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            Roles = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="StacProvider"/>. </summary>
        /// <param name="name"> Name of the provider organization or individual. </param>
        /// <param name="description"> Description of the provider. </param>
        /// <param name="roles"> Roles played by the provider (e.g., producer, processor, host). </param>
        /// <param name="url"> URL to the provider's website. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StacProvider(string name, string description, IList<string> roles, string url, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Description = description;
            Roles = roles;
            Url = url;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the provider organization or individual. </summary>
        public string Name { get; set; }

        /// <summary> Description of the provider. </summary>
        public string Description { get; set; }

        /// <summary> Roles played by the provider (e.g., producer, processor, host). </summary>
        public IList<string> Roles { get; }

        /// <summary> URL to the provider's website. </summary>
        public string Url { get; set; }
    }
}
