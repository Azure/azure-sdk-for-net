// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PlanetaryComputer
{
    /// <summary>
    /// https://github.com/radiantearth/stac-api-spec/tree/master/extensions/sort#sort-api-extension
    /// 
    /// Represents a sort specification for STAC API queries.
    /// </summary>
    public partial class SortExtension
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="SortExtension"/>. </summary>
        /// <param name="field"> The field name to sort by. </param>
        /// <param name="direction"> The sort direction (ascending or descending). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="field"/> is null. </exception>
        public SortExtension(string @field, SortDirections direction)
        {
            Argument.AssertNotNull(@field, nameof(@field));

            Field = @field;
            Direction = direction;
        }

        /// <summary> Initializes a new instance of <see cref="SortExtension"/>. </summary>
        /// <param name="field"> The field name to sort by. </param>
        /// <param name="direction"> The sort direction (ascending or descending). </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal SortExtension(string @field, SortDirections direction, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Field = @field;
            Direction = direction;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The field name to sort by. </summary>
        public string Field { get; }

        /// <summary> The sort direction (ascending or descending). </summary>
        public SortDirections Direction { get; }
    }
}
