// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.PlanetaryComputer
{
    /// <summary> Defines a named mosaic with filtering criteria. </summary>
    public partial class StacMosaic
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StacMosaic"/>. </summary>
        /// <param name="id"> Unique identifier for the mosaic. </param>
        /// <param name="name"> Short descriptive name for the mosaic. </param>
        /// <param name="cql"> A list of valid CQL2-JSON expressions used to filter the collection to moasic. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="name"/> or <paramref name="cql"/> is null. </exception>
        public StacMosaic(string id, string name, IEnumerable<CqlFilter> cql)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(cql, nameof(cql));

            Id = id;
            Name = name;
            Cql = cql.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="StacMosaic"/>. </summary>
        /// <param name="id"> Unique identifier for the mosaic. </param>
        /// <param name="name"> Short descriptive name for the mosaic. </param>
        /// <param name="description"> Detailed description of the mosaic. </param>
        /// <param name="cql"> A list of valid CQL2-JSON expressions used to filter the collection to moasic. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StacMosaic(string id, string name, string description, IList<CqlFilter> cql, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            Name = name;
            Description = description;
            Cql = cql;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Unique identifier for the mosaic. </summary>
        public string Id { get; set; }

        /// <summary> Short descriptive name for the mosaic. </summary>
        public string Name { get; set; }

        /// <summary> Detailed description of the mosaic. </summary>
        public string Description { get; set; }

        /// <summary> A list of valid CQL2-JSON expressions used to filter the collection to moasic. </summary>
        public IList<CqlFilter> Cql { get; }
    }
}
