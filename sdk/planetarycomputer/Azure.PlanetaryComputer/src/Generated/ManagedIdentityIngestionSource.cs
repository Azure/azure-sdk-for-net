// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.PlanetaryComputer
{
    /// <summary> Managed Identity ingestion source. </summary>
    public partial class ManagedIdentityIngestionSource : IngestionSource
    {
        /// <summary> Initializes a new instance of <see cref="ManagedIdentityIngestionSource"/>. </summary>
        /// <param name="id"> Ingestion source id. </param>
        /// <param name="connectionInfo"> Managed identity connection information. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="connectionInfo"/> is null. </exception>
        public ManagedIdentityIngestionSource(Guid id, ManagedIdentityConnection connectionInfo) : base(id)
        {
            Argument.AssertNotNull(connectionInfo, nameof(connectionInfo));

            Kind = IngestionSourceType.BlobManagedIdentity;
            ConnectionInfo = connectionInfo;
        }

        /// <summary> Initializes a new instance of <see cref="ManagedIdentityIngestionSource"/>. </summary>
        /// <param name="id"> Ingestion source id. </param>
        /// <param name="created"> Created time in UTC format. </param>
        /// <param name="kind"> Discriminator for the ingestion source. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="connectionInfo"> Managed identity connection information. </param>
        internal ManagedIdentityIngestionSource(Guid id, DateTimeOffset created, IngestionSourceType kind, IDictionary<string, BinaryData> serializedAdditionalRawData, ManagedIdentityConnection connectionInfo) : base(id, created, kind, serializedAdditionalRawData)
        {
            ConnectionInfo = connectionInfo;
        }

        /// <summary> Initializes a new instance of <see cref="ManagedIdentityIngestionSource"/> for deserialization. </summary>
        internal ManagedIdentityIngestionSource()
        {
        }

        /// <summary> Managed identity connection information. </summary>
        public ManagedIdentityConnection ConnectionInfo { get; set; }
    }
}
