// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Diagnostics.CodeAnalysis;
using Azure.Core.Extensions;
using Customizations;
using Microsoft.PlanetaryComputer;

namespace Microsoft.Extensions.Azure
{
    /// <summary> Extension methods to add clients to <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
    public static partial class MicrosoftPlanetaryComputerClientBuilderExtensions
    {
        /// <summary> Registers a <see cref="IngestionManagementClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<IngestionManagementClient, IngestionManagementClientOptions> AddIngestionManagementClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<IngestionManagementClient, IngestionManagementClientOptions>((options, credential) => new IngestionManagementClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="IngestionManagementClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<IngestionManagementClient, IngestionManagementClientOptions> AddIngestionManagementClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<IngestionManagementClient, IngestionManagementClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="IngestionSourcesClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<IngestionSourcesClient, IngestionSourcesClientOptions> AddIngestionSourcesClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<IngestionSourcesClient, IngestionSourcesClientOptions>((options, credential) => new IngestionSourcesClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="IngestionSourcesClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<IngestionSourcesClient, IngestionSourcesClientOptions> AddIngestionSourcesClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<IngestionSourcesClient, IngestionSourcesClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="StacApiClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<StacApiClient, StacApiClientOptions> AddStacApiClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<StacApiClient, StacApiClientOptions>((options, credential) => new StacApiClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="StacApiClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<StacApiClient, StacApiClientOptions> AddStacApiClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<StacApiClient, StacApiClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="StacCollectionConfigurationClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<StacCollectionConfigurationClient, StacCollectionConfigurationClientOptions> AddStacCollectionConfigurationClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<StacCollectionConfigurationClient, StacCollectionConfigurationClientOptions>((options, credential) => new StacCollectionConfigurationClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="StacCollectionConfigurationClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<StacCollectionConfigurationClient, StacCollectionConfigurationClientOptions> AddStacCollectionConfigurationClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<StacCollectionConfigurationClient, StacCollectionConfigurationClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="GeocatalogClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<GeocatalogClient, GeocatalogClientOptions> AddGeocatalogClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<GeocatalogClient, GeocatalogClientOptions>((options, credential) => new GeocatalogClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="GeocatalogClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<GeocatalogClient, GeocatalogClientOptions> AddGeocatalogClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<GeocatalogClient, GeocatalogClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="ImageExportsClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<ImageExportsClient, ImageExportsClientOptions> AddImageExportsClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<ImageExportsClient, ImageExportsClientOptions>((options, credential) => new ImageExportsClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="ImageExportsClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<ImageExportsClient, ImageExportsClientOptions> AddImageExportsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ImageExportsClient, ImageExportsClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="StacItemTilerClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<StacItemTilerClient, StacItemTilerClientOptions> AddStacItemTilerClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<StacItemTilerClient, StacItemTilerClientOptions>((options, credential) => new StacItemTilerClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="StacItemTilerClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<StacItemTilerClient, StacItemTilerClientOptions> AddStacItemTilerClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<StacItemTilerClient, StacItemTilerClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="MapLegendsClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<MapLegendsClient, MapLegendsClientOptions> AddMapLegendsClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<MapLegendsClient, MapLegendsClientOptions>((options, credential) => new MapLegendsClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="MapLegendsClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<MapLegendsClient, MapLegendsClientOptions> AddMapLegendsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<MapLegendsClient, MapLegendsClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="MosaicTilerClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<MosaicTilerClient, MosaicTilerClientOptions> AddMosaicTilerClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<MosaicTilerClient, MosaicTilerClientOptions>((options, credential) => new MosaicTilerClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="MosaicTilerClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<MosaicTilerClient, MosaicTilerClientOptions> AddMosaicTilerClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<MosaicTilerClient, MosaicTilerClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="TileMatrixSetsClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<TileMatrixSetsClient, TileMatrixSetsClientOptions> AddTileMatrixSetsClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<TileMatrixSetsClient, TileMatrixSetsClientOptions>((options, credential) => new TileMatrixSetsClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="TileMatrixSetsClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<TileMatrixSetsClient, TileMatrixSetsClientOptions> AddTileMatrixSetsClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<TileMatrixSetsClient, TileMatrixSetsClientOptions>(configuration);
        }

        /// <summary> Registers a <see cref="SharedAccessSignatureClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public static IAzureClientBuilder<SharedAccessSignatureClient, SharedAccessSignatureClientOptions> AddSharedAccessSignatureClient<TBuilder>(this TBuilder builder, Uri endpoint)
            where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            return builder.RegisterClientFactory<SharedAccessSignatureClient, SharedAccessSignatureClientOptions>((options, credential) => new SharedAccessSignatureClient(endpoint, credential, options));
        }

        /// <summary> Registers a <see cref="SharedAccessSignatureClient"/> client with the specified <see cref="IAzureClientBuilder{TClient,TOptions}"/>. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration to use for the client. </param>
        [RequiresUnreferencedCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        [RequiresDynamicCode("Requires unreferenced code until we opt into EnableConfigurationBindingGenerator.")]
        public static IAzureClientBuilder<SharedAccessSignatureClient, SharedAccessSignatureClientOptions> AddSharedAccessSignatureClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<SharedAccessSignatureClient, SharedAccessSignatureClientOptions>(configuration);
        }
    }
}
