// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PlanetaryComputer
{
    /// <summary> Definition of a queryable field for STAC API filtering. </summary>
    public partial class QueryableProperty
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="QueryableProperty"/>. </summary>
        /// <param name="name"> Name of the queryable field. </param>
        /// <param name="definition"> Metadata for the queryable field. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="definition"/> is null. </exception>
        public QueryableProperty(string name, QueryableDefinitionType definition)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(definition, nameof(definition));

            Name = name;
            Definition = definition;
        }

        /// <summary> Initializes a new instance of <see cref="QueryableProperty"/>. </summary>
        /// <param name="name"> Name of the queryable field. </param>
        /// <param name="definition"> Metadata for the queryable field. </param>
        /// <param name="createIndex"> Whether to create a database index for this field. </param>
        /// <param name="dataType"> Data type of the queryable field. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal QueryableProperty(string name, QueryableDefinitionType definition, bool? createIndex, QueryableDefinitionDataType? dataType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Definition = definition;
            CreateIndex = createIndex;
            DataType = dataType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the queryable field. </summary>
        public string Name { get; set; }

        /// <summary> Metadata for the queryable field. </summary>
        public QueryableDefinitionType Definition { get; set; }

        /// <summary> Whether to create a database index for this field. </summary>
        public bool? CreateIndex { get; set; }

        /// <summary> Data type of the queryable field. </summary>
        public QueryableDefinitionDataType? DataType { get; set; }
    }
}
