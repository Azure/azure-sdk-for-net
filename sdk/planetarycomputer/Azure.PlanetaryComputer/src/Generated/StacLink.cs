// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;

namespace Microsoft.PlanetaryComputer
{
    /// <summary>
    /// Link model.
    /// 
    /// Ref:
    /// http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/schemas/link.yaml
    /// 
    /// Represents a link.
    /// </summary>
    public partial class StacLink
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StacLink"/>. </summary>
        /// <param name="href"> The URL of the link. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="href"/> is null. </exception>
        public StacLink(string href)
        {
            Argument.AssertNotNull(href, nameof(href));

            Href = href;
            Headers = new ChangeTrackingDictionary<string, string>();
            Body = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="StacLink"/>. </summary>
        /// <param name="rel"> The relationship type of the link. </param>
        /// <param name="title"> The title of the link. </param>
        /// <param name="type"> The MIME type of the linked resource. </param>
        /// <param name="href"> The URL of the link. </param>
        /// <param name="hreflang"> The language of the linked resource. </param>
        /// <param name="length"> The length of the linked resource. </param>
        /// <param name="method">
        /// Specifies the HTTP method that the resource expects.
        /// Default: GET.
        /// </param>
        /// <param name="headers">
        /// Object key-value pairs that map to headers.
        /// Example: { "Accept": "application/json" }.
        /// </param>
        /// <param name="body"> For POST requests, the resource can specify the HTTP body as a JSON object. </param>
        /// <param name="merge">
        /// Indicates whether the client is expected to merge the body value into the current request body before following the link.
        /// This is only valid when the server is responding to a POST request.
        /// Default: false.
        /// </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StacLink(string rel, string title, LinkType? @type, string href, string hreflang, int? length, LinkMethod? @method, IDictionary<string, string> headers, IDictionary<string, BinaryData> body, bool? merge, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Rel = rel;
            Title = title;
            Type = @type;
            Href = href;
            Hreflang = hreflang;
            Length = length;
            Method = @method;
            Headers = headers;
            Body = body;
            Merge = merge;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The relationship type of the link. </summary>
        public string Rel { get; set; }

        /// <summary> The title of the link. </summary>
        public string Title { get; set; }

        /// <summary> The MIME type of the linked resource. </summary>
        public LinkType? Type { get; set; }

        /// <summary> The URL of the link. </summary>
        public string Href { get; set; }

        /// <summary> The language of the linked resource. </summary>
        public string Hreflang { get; set; }

        /// <summary> The length of the linked resource. </summary>
        public int? Length { get; set; }

        /// <summary>
        /// Specifies the HTTP method that the resource expects.
        /// Default: GET.
        /// </summary>
        public LinkMethod? Method { get; set; }

        /// <summary>
        /// Object key-value pairs that map to headers.
        /// Example: { "Accept": "application/json" }.
        /// </summary>
        public IDictionary<string, string> Headers { get; }

        /// <summary>
        /// For POST requests, the resource can specify the HTTP body as a JSON object.
        /// <para> To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, JsonSerializerOptions?)"/>. </para>
        /// <para> To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>. </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term> BinaryData.FromObjectAsJson("foo"). </term>
        /// <description> Creates a payload of "foo". </description>
        /// </item>
        /// <item>
        /// <term> BinaryData.FromString("\"foo\""). </term>
        /// <description> Creates a payload of "foo". </description>
        /// </item>
        /// <item>
        /// <term> BinaryData.FromObjectAsJson(new { key = "value" }). </term>
        /// <description> Creates a payload of { "key": "value" }. </description>
        /// </item>
        /// <item>
        /// <term> BinaryData.FromString("{\"key\": \"value\"}"). </term>
        /// <description> Creates a payload of { "key": "value" }. </description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IDictionary<string, BinaryData> Body { get; }

        /// <summary>
        /// Indicates whether the client is expected to merge the body value into the current request body before following the link.
        /// This is only valid when the server is responding to a POST request.
        /// Default: false.
        /// </summary>
        public bool? Merge { get; set; }
    }
}
