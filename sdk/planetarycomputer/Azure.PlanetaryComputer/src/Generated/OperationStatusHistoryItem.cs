// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.PlanetaryComputer
{
    /// <summary> Operation status history item. </summary>
    public partial class OperationStatusHistoryItem
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="OperationStatusHistoryItem"/>. </summary>
        /// <param name="timestamp"> The UTC time at which the status was set. </param>
        /// <param name="status"> The status of the operation. </param>
        internal OperationStatusHistoryItem(DateTimeOffset timestamp, OperationStatus status)
        {
            Timestamp = timestamp;
            Status = status;
        }

        /// <summary> Initializes a new instance of <see cref="OperationStatusHistoryItem"/>. </summary>
        /// <param name="timestamp"> The UTC time at which the status was set. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="errorCode"> If the status is failed, the error code. </param>
        /// <param name="errorMessage"> If the status is failed, the error message. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal OperationStatusHistoryItem(DateTimeOffset timestamp, OperationStatus status, string errorCode, string errorMessage, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Timestamp = timestamp;
            Status = status;
            ErrorCode = errorCode;
            ErrorMessage = errorMessage;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The UTC time at which the status was set. </summary>
        public DateTimeOffset Timestamp { get; }

        /// <summary> The status of the operation. </summary>
        public OperationStatus Status { get; }

        /// <summary> If the status is failed, the error code. </summary>
        public string ErrorCode { get; }

        /// <summary> If the status is failed, the error message. </summary>
        public string ErrorMessage { get; }
    }
}
