// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.PlanetaryComputer
{
    /// <summary> Geographic extent of the tile matrix set expressed in the specified coordinate reference system. </summary>
    public partial class TileMatrixSetBoundingBox
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="TileMatrixSetBoundingBox"/>. </summary>
        /// <param name="lowerLeft"> Lower-left corner coordinates [x, y] of bounding box. </param>
        /// <param name="upperRight"> Upper-right corner coordinates [x, y] of bounding box. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="lowerLeft"/> or <paramref name="upperRight"/> is null. </exception>
        internal TileMatrixSetBoundingBox(IEnumerable<string> lowerLeft, IEnumerable<string> upperRight)
        {
            Argument.AssertNotNull(lowerLeft, nameof(lowerLeft));
            Argument.AssertNotNull(upperRight, nameof(upperRight));

            LowerLeft = lowerLeft.ToList();
            UpperRight = upperRight.ToList();
            OrderedAxes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="TileMatrixSetBoundingBox"/>. </summary>
        /// <param name="lowerLeft"> Lower-left corner coordinates [x, y] of bounding box. </param>
        /// <param name="upperRight"> Upper-right corner coordinates [x, y] of bounding box. </param>
        /// <param name="crs"> Coordinate reference system identifier. </param>
        /// <param name="orderedAxes"> Explicit axis order for the CRS coordinates (e.g., ['x', 'y']). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal TileMatrixSetBoundingBox(IReadOnlyList<string> lowerLeft, IReadOnlyList<string> upperRight, string crs, IReadOnlyList<string> orderedAxes, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LowerLeft = lowerLeft;
            UpperRight = upperRight;
            Crs = crs;
            OrderedAxes = orderedAxes;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="TileMatrixSetBoundingBox"/> for deserialization. </summary>
        internal TileMatrixSetBoundingBox()
        {
        }

        /// <summary> Lower-left corner coordinates [x, y] of bounding box. </summary>
        public IReadOnlyList<string> LowerLeft { get; }
        /// <summary> Upper-right corner coordinates [x, y] of bounding box. </summary>
        public IReadOnlyList<string> UpperRight { get; }
        /// <summary> Coordinate reference system identifier. </summary>
        public string Crs { get; }
        /// <summary> Explicit axis order for the CRS coordinates (e.g., ['x', 'y']). </summary>
        public IReadOnlyList<string> OrderedAxes { get; }
    }
}
