<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetIngestionsAsync(string,long?,long?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionDefinitionsPagedResult> response = await client.GetIngestionsAsync("collectionId");
]]></code></example>
    </member>
    <member name="GetIngestions(string,long?,long?,CancellationToken)">
      <example>
This sample shows how to call GetIngestions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionDefinitionsPagedResult> response = client.GetIngestions("collectionId");
]]></code></example>
    </member>
    <member name="GetIngestionsAsync(string,long?,long?,RequestContext)">
      <example>
This sample shows how to call GetIngestionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.GetIngestionsAsync("collectionId", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetIngestions(string,long?,long?,RequestContext)">
      <example>
This sample shows how to call GetIngestions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.GetIngestions("collectionId", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="CreateIngestionAsync(string,IngestionConfiguration,CancellationToken)">
      <example>
This sample shows how to call CreateIngestionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

IngestionConfiguration definition = new IngestionConfiguration(IngestionType.StaticCatalog)
{
    SourceCatalogUrl = new Uri("https://sample.blob.core.windows.net/sample.json"),
    SkipExistingItems = false,
    KeepOriginalAssets = false,
};
Response<IngestionConfiguration> response = await client.CreateIngestionAsync("collectionId", definition);
]]></code></example>
    </member>
    <member name="CreateIngestion(string,IngestionConfiguration,CancellationToken)">
      <example>
This sample shows how to call CreateIngestion.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

IngestionConfiguration definition = new IngestionConfiguration(IngestionType.StaticCatalog)
{
    SourceCatalogUrl = new Uri("https://sample.blob.core.windows.net/sample.json"),
    SkipExistingItems = false,
    KeepOriginalAssets = false,
};
Response<IngestionConfiguration> response = client.CreateIngestion("collectionId", definition);
]]></code></example>
    </member>
    <member name="CreateIngestionAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateIngestionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    importType = "StaticCatalog",
    sourceCatalogUrl = "https://sample.blob.core.windows.net/sample.json",
    skipExistingItems = false,
    keepOriginalAssets = false,
});
Response response = await client.CreateIngestionAsync("collectionId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="CreateIngestion(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateIngestion and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    importType = "StaticCatalog",
    sourceCatalogUrl = "https://sample.blob.core.windows.net/sample.json",
    skipExistingItems = false,
    keepOriginalAssets = false,
});
Response response = client.CreateIngestion("collectionId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetIngestionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionConfiguration> response = await client.GetIngestionAsync("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78");
]]></code></example>
    </member>
    <member name="GetIngestion(string,string,CancellationToken)">
      <example>
This sample shows how to call GetIngestion.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionConfiguration> response = client.GetIngestion("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78");
]]></code></example>
    </member>
    <member name="GetIngestionAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetIngestionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.GetIngestionAsync("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetIngestion(string,string,RequestContext)">
      <example>
This sample shows how to call GetIngestion and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.GetIngestion("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="UpdateIngestionAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateIngestionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    displayName = "test-ingestion1",
    keepOriginalAssets = false,
    skipExistingItems = false,
    sourceCatalogUrl = "https://uksouthdatazoo.blob.core.windows.net/impactobservatory",
});
Response response = await client.UpdateIngestionAsync("potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="UpdateIngestion(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateIngestion and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    displayName = "test-ingestion1",
    keepOriginalAssets = false,
    skipExistingItems = false,
    sourceCatalogUrl = "https://uksouthdatazoo.blob.core.windows.net/impactobservatory",
});
Response response = client.UpdateIngestion("potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("importType").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionRunsAsync(string,string,long?,long?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionRunsPagedResult> response = await client.GetIngestionRunsAsync("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a");
]]></code></example>
    </member>
    <member name="GetIngestionRuns(string,string,long?,long?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionRuns.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionRunsPagedResult> response = client.GetIngestionRuns("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a");
]]></code></example>
    </member>
    <member name="GetIngestionRunsAsync(string,string,long?,long?,RequestContext)">
      <example>
This sample shows how to call GetIngestionRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.GetIngestionRunsAsync("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalPendingItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalFailedItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionRuns(string,string,long?,long?,RequestContext)">
      <example>
This sample shows how to call GetIngestionRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.GetIngestionRuns("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalPendingItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalFailedItems").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
]]></code></example>
    </member>
    <member name="CreateIngestionRunAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call CreateIngestionRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionRun> response = await client.CreateIngestionRunAsync("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4");
]]></code></example>
    </member>
    <member name="CreateIngestionRun(string,string,CancellationToken)">
      <example>
This sample shows how to call CreateIngestionRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionRun> response = client.CreateIngestionRun("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4");
]]></code></example>
    </member>
    <member name="CreateIngestionRunAsync(string,string,RequestContext)">
      <example>
This sample shows how to call CreateIngestionRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.CreateIngestionRunAsync("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
]]></code></example>
    </member>
    <member name="CreateIngestionRun(string,string,RequestContext)">
      <example>
This sample shows how to call CreateIngestionRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.CreateIngestionRun("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionRunAsync(string,string,Guid,CancellationToken)">
      <example>
This sample shows how to call GetIngestionRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionRun> response = await client.GetIngestionRunAsync("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"));
]]></code></example>
    </member>
    <member name="GetIngestionRun(string,string,Guid,CancellationToken)">
      <example>
This sample shows how to call GetIngestionRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<IngestionRun> response = client.GetIngestionRun("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"));
]]></code></example>
    </member>
    <member name="GetIngestionRunAsync(string,string,Guid,RequestContext)">
      <example>
This sample shows how to call GetIngestionRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.GetIngestionRunAsync("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionRun(string,string,Guid,RequestContext)">
      <example>
This sample shows how to call GetIngestionRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.GetIngestionRun("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionOperationsAsync(long?,long?,string,OperationStatus?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionOperationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<OperationsPagedResult> response = await client.GetIngestionOperationsAsync();
]]></code></example>
    </member>
    <member name="GetIngestionOperations(long?,long?,string,OperationStatus?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionOperations.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<OperationsPagedResult> response = client.GetIngestionOperations();
]]></code></example>
    </member>
    <member name="GetIngestionOperationsAsync(long?,long?,string,string,RequestContext)">
      <example>
This sample shows how to call GetIngestionOperationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.GetIngestionOperationsAsync(null, null, "c1007ec2-3ddc-4335-9edd-b1c26b1b4c92", null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionOperations(long?,long?,string,string,RequestContext)">
      <example>
This sample shows how to call GetIngestionOperations and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.GetIngestionOperations(null, null, "c1007ec2-3ddc-4335-9edd-b1c26b1b4c92", null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="DeleteAllIngestionOperationsAsync(RequestContext)">
      <example>
This sample shows how to call DeleteAllIngestionOperationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.DeleteAllIngestionOperationsAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteAllIngestionOperations(RequestContext)">
      <example>
This sample shows how to call DeleteAllIngestionOperations.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.DeleteAllIngestionOperations();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetIngestionOperationAsync(Guid,CancellationToken)">
      <example>
This sample shows how to call GetIngestionOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<OperationInfo> response = await client.GetIngestionOperationAsync(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"));
]]></code></example>
    </member>
    <member name="GetIngestionOperation(Guid,CancellationToken)">
      <example>
This sample shows how to call GetIngestionOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response<OperationInfo> response = client.GetIngestionOperation(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"));
]]></code></example>
    </member>
    <member name="GetIngestionOperationAsync(Guid,RequestContext)">
      <example>
This sample shows how to call GetIngestionOperationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.GetIngestionOperationAsync(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionOperation(Guid,RequestContext)">
      <example>
This sample shows how to call GetIngestionOperation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.GetIngestionOperation(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("creationTime").ToString());
Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="DeleteIngestionOperationAsync(Guid,RequestContext)">
      <example>
This sample shows how to call DeleteIngestionOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = await client.DeleteIngestionOperationAsync(Guid.Parse("9bb31abd-91d6-4649-9c6f-beadbec7c622"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteIngestionOperation(Guid,RequestContext)">
      <example>
This sample shows how to call DeleteIngestionOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Response response = client.DeleteIngestionOperation(Guid.Parse("9bb31abd-91d6-4649-9c6f-beadbec7c622"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteIngestionAsync(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteIngestionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Operation operation = await client.DeleteIngestionAsync(WaitUntil.Completed, "potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635");
]]></code></example>
    </member>
    <member name="DeleteIngestion(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteIngestion.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

Operation operation = client.DeleteIngestion(WaitUntil.Completed, "potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635");
]]></code></example>
    </member>
  </members>
</doc>