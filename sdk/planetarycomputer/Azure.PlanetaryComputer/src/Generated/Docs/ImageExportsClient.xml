<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateStaticImageAsync(string,string,ImageContent,CancellationToken)">
      <example>
This sample shows how to call CreateStaticImageAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

ImageContent body = new ImageContent(new CqlFilter(), "assets=image&asset_bidx=image|1,2,3&collection=naip", 1080, 1080)
{
    Geometry = new GeoJsonPolygon(new IList<IList<double>>[]
    {
        new IList<double>[]
        {
            new double[]{-79.09062791441062, 43.08554661560049},
            new double[]{-79.0629876337021, 43.08554661560049},
            new double[]{-79.0629876337021, 43.067969831431895},
            new double[]{-79.09062791441062, 43.067969831431895},
            new double[]{-79.09062791441062, 43.08554661560049}
        }
    }),
    ShowBranding = true,
};
Response<BinaryData> response = await client.CreateStaticImageAsync("collectionId-23", null, body);
]]></code></example>
    </member>
    <member name="CreateStaticImage(string,string,ImageContent,CancellationToken)">
      <example>
This sample shows how to call CreateStaticImage.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

ImageContent body = new ImageContent(new CqlFilter(), "assets=image&asset_bidx=image|1,2,3&collection=naip", 1080, 1080)
{
    Geometry = new GeoJsonPolygon(new IList<IList<double>>[]
    {
        new IList<double>[]
        {
            new double[]{-79.09062791441062, 43.08554661560049},
            new double[]{-79.0629876337021, 43.08554661560049},
            new double[]{-79.0629876337021, 43.067969831431895},
            new double[]{-79.09062791441062, 43.067969831431895},
            new double[]{-79.09062791441062, 43.08554661560049}
        }
    }),
    ShowBranding = true,
};
Response<BinaryData> response = client.CreateStaticImage("collectionId-23", null, body);
]]></code></example>
    </member>
    <member name="CreateStaticImageAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateStaticImageAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    geometry = new
    {
        type = "Polygon",
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    -79.09062791441062,
                    43.08554661560049
                },
                new object[]
                {
                    -79.0629876337021,
                    43.08554661560049
                },
                new object[]
                {
                    -79.0629876337021,
                    43.067969831431895
                },
                new object[]
                {
                    -79.09062791441062,
                    43.067969831431895
                },
                new object[]
                {
                    -79.09062791441062,
                    43.08554661560049
                }
            }
        },
    },
    cql = new object(),
    render_params = "assets=image&asset_bidx=image|1,2,3&collection=naip",
    cols = 1080,
    rows = 1080,
    showBranding = true,
});
Response response = await client.CreateStaticImageAsync("collectionId-23", null, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="CreateStaticImage(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateStaticImage and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    geometry = new
    {
        type = "Polygon",
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    -79.09062791441062,
                    43.08554661560049
                },
                new object[]
                {
                    -79.0629876337021,
                    43.08554661560049
                },
                new object[]
                {
                    -79.0629876337021,
                    43.067969831431895
                },
                new object[]
                {
                    -79.09062791441062,
                    43.067969831431895
                },
                new object[]
                {
                    -79.09062791441062,
                    43.08554661560049
                }
            }
        },
    },
    cql = new object(),
    render_params = "assets=image&asset_bidx=image|1,2,3&collection=naip",
    cols = 1080,
    rows = 1080,
    showBranding = true,
});
Response response = client.CreateStaticImage("collectionId-23", null, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetStaticImageAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetStaticImageAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

Response<BinaryData> response = await client.GetStaticImageAsync("collectionId-23", "id-23");
]]></code></example>
    </member>
    <member name="GetStaticImage(string,string,CancellationToken)">
      <example>
This sample shows how to call GetStaticImage.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

Response<BinaryData> response = client.GetStaticImage("collectionId-23", "id-23");
]]></code></example>
    </member>
    <member name="GetStaticImageAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetStaticImageAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

Response response = await client.GetStaticImageAsync("collectionId-23", "id-23", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetStaticImage(string,string,RequestContext)">
      <example>
This sample shows how to call GetStaticImage and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ImageExportsClient client = new ImageExportsClient(endpoint, credential);

Response response = client.GetStaticImage("collectionId-23", "id-23", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
  </members>
</doc>