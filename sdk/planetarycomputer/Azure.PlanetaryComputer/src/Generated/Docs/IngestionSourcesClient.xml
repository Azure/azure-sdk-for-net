<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetIngestionSourcesAsync(long?,long?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionSourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response<IngestionSourcesPagedResult> response = await client.GetIngestionSourcesAsync();
]]></code></example>
    </member>
    <member name="GetIngestionSources(long?,long?,CancellationToken)">
      <example>
This sample shows how to call GetIngestionSources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response<IngestionSourcesPagedResult> response = client.GetIngestionSources();
]]></code></example>
    </member>
    <member name="GetIngestionSourcesAsync(long?,long?,RequestContext)">
      <example>
This sample shows how to call GetIngestionSourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = await client.GetIngestionSourcesAsync(10L, 0L, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("created").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionSources(long?,long?,RequestContext)">
      <example>
This sample shows how to call GetIngestionSources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = client.GetIngestionSources(10L, 0L, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("created").ToString());
]]></code></example>
    </member>
    <member name="CreateIngestionSourceAsync(IngestionSource,CancellationToken)">
      <example>
This sample shows how to call CreateIngestionSourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

IngestionSource ingestionSource = new SasTokenIngestionSource(Guid.Parse("36fcb8da-9b15-49e0-b400-0d2e751e2061"), new SasTokenConnection(new Uri("https://sample.blob.core.windows.net/sample"))
{
    SasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
});
Response<IngestionSource> response = await client.CreateIngestionSourceAsync(ingestionSource);
]]></code></example>
    </member>
    <member name="CreateIngestionSource(IngestionSource,CancellationToken)">
      <example>
This sample shows how to call CreateIngestionSource.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

IngestionSource ingestionSource = new SasTokenIngestionSource(Guid.Parse("36fcb8da-9b15-49e0-b400-0d2e751e2061"), new SasTokenConnection(new Uri("https://sample.blob.core.windows.net/sample"))
{
    SasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
});
Response<IngestionSource> response = client.CreateIngestionSource(ingestionSource);
]]></code></example>
    </member>
    <member name="CreateIngestionSourceAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateIngestionSourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    id = "36fcb8da-9b15-49e0-b400-0d2e751e2061",
    kind = "SasToken",
    connectionInfo = new
    {
        containerUrl = "https://sample.blob.core.windows.net/sample",
        sasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
    },
});
Response response = await client.CreateIngestionSourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="CreateIngestionSource(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateIngestionSource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    id = "36fcb8da-9b15-49e0-b400-0d2e751e2061",
    kind = "SasToken",
    connectionInfo = new
    {
        containerUrl = "https://sample.blob.core.windows.net/sample",
        sasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
    },
});
Response response = client.CreateIngestionSource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionSourceAsync(Guid,CancellationToken)">
      <example>
This sample shows how to call GetIngestionSourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response<IngestionSource> response = await client.GetIngestionSourceAsync(Guid.Parse("c1007ec2-3ddc-4335-9edd-b1c26b1b4c92"));
]]></code></example>
    </member>
    <member name="GetIngestionSource(Guid,CancellationToken)">
      <example>
This sample shows how to call GetIngestionSource.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response<IngestionSource> response = client.GetIngestionSource(Guid.Parse("c1007ec2-3ddc-4335-9edd-b1c26b1b4c92"));
]]></code></example>
    </member>
    <member name="GetIngestionSourceAsync(Guid,RequestContext)">
      <example>
This sample shows how to call GetIngestionSourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = await client.GetIngestionSourceAsync(Guid.Parse("c1007ec2-3ddc-4335-9edd-b1c26b1b4c92"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="GetIngestionSource(Guid,RequestContext)">
      <example>
This sample shows how to call GetIngestionSource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = client.GetIngestionSource(Guid.Parse("c1007ec2-3ddc-4335-9edd-b1c26b1b4c92"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceIngestionSourceAsync(string,IngestionSource,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceIngestionSourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

IngestionSource ingestionSource = new SasTokenIngestionSource(Guid.Parse("36fcb8da-9b15-49e0-b400-0d2e751e2061"), new SasTokenConnection(new Uri("https://sample.blob.core.windows.net/sample2"))
{
    SasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
});
Response<IngestionSource> response = await client.CreateOrReplaceIngestionSourceAsync("36fcb8da-9b15-49e0-b400-0d2e751e2061", ingestionSource);
]]></code></example>
    </member>
    <member name="CreateOrReplaceIngestionSource(string,IngestionSource,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceIngestionSource.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

IngestionSource ingestionSource = new SasTokenIngestionSource(Guid.Parse("36fcb8da-9b15-49e0-b400-0d2e751e2061"), new SasTokenConnection(new Uri("https://sample.blob.core.windows.net/sample2"))
{
    SasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
});
Response<IngestionSource> response = client.CreateOrReplaceIngestionSource("36fcb8da-9b15-49e0-b400-0d2e751e2061", ingestionSource);
]]></code></example>
    </member>
    <member name="CreateOrReplaceIngestionSourceAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceIngestionSourceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    id = "36fcb8da-9b15-49e0-b400-0d2e751e2061",
    kind = "SasToken",
    connectionInfo = new
    {
        containerUrl = "https://sample.blob.core.windows.net/sample2",
        sasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
    },
});
Response response = await client.CreateOrReplaceIngestionSourceAsync("36fcb8da-9b15-49e0-b400-0d2e751e2061", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceIngestionSource(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceIngestionSource and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    id = "36fcb8da-9b15-49e0-b400-0d2e751e2061",
    kind = "SasToken",
    connectionInfo = new
    {
        containerUrl = "https://sample.blob.core.windows.net/sample2",
        sasToken = "sp=r&st=2024-03-26T10:20:15Z&se=2025-08-29T17:20:15Z&spr=https&sv=2022-11-02&sr=c&sig=EVICTED",
    },
});
Response response = client.CreateOrReplaceIngestionSource("36fcb8da-9b15-49e0-b400-0d2e751e2061", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
]]></code></example>
    </member>
    <member name="DeleteIngestionSourceAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteIngestionSourceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = await client.DeleteIngestionSourceAsync("c1007ec2-3ddc-4335-9edd-b1c26b1b4c92");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteIngestionSource(string,RequestContext)">
      <example>
This sample shows how to call DeleteIngestionSource.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = client.DeleteIngestionSource("c1007ec2-3ddc-4335-9edd-b1c26b1b4c92");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetManagedIdentitiesAsync(CancellationToken)">
      <example>
This sample shows how to call GetManagedIdentitiesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response<ManagedIdentitiesPagedResult> response = await client.GetManagedIdentitiesAsync();
]]></code></example>
    </member>
    <member name="GetManagedIdentities(CancellationToken)">
      <example>
This sample shows how to call GetManagedIdentities.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response<ManagedIdentitiesPagedResult> response = client.GetManagedIdentities();
]]></code></example>
    </member>
    <member name="GetManagedIdentitiesAsync(RequestContext)">
      <example>
This sample shows how to call GetManagedIdentitiesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = await client.GetManagedIdentitiesAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("objectId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("resourceId").ToString());
]]></code></example>
    </member>
    <member name="GetManagedIdentities(RequestContext)">
      <example>
This sample shows how to call GetManagedIdentities and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
IngestionSourcesClient client = new IngestionSourcesClient(endpoint, credential);

Response response = client.GetManagedIdentities(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("objectId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("resourceId").ToString());
]]></code></example>
    </member>
  </members>
</doc>