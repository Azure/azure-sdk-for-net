// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.PlanetaryComputer.Samples
{
    public partial class Samples_MosaicTilerClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTile_MosaicsTilesGetZxyScalexFormat()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetTile("search-0df36a74d7ed", 12F, 47.6062F, 17F, 1F, "png", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTile_MosaicsTilesGetZxyScalexFormat_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetTileAsync("search-0df36a74d7ed", 12F, 47.6062F, 17F, 1F, "png", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTile_MosaicsTilesGetZxyScalexFormat_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<BinaryData> response = client.GetTile("search-0df36a74d7ed", 12F, 47.6062F, 17F, 1F, "png", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTile_MosaicsTilesGetZxyScalexFormat_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<BinaryData> response = await client.GetTileAsync("search-0df36a74d7ed", 12F, 47.6062F, 17F, 1F, "png", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTileWithMatrixSet_MosaicsTileMatrixSetsGetZxyScalexFormat()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetTileWithMatrixSet("search-0df36a74d7ed", "WebMercatorQuad", 12F, 47.6062F, 17F, 1F, "png", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTileWithMatrixSet_MosaicsTileMatrixSetsGetZxyScalexFormat_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetTileWithMatrixSetAsync("search-0df36a74d7ed", "WebMercatorQuad", 12F, 47.6062F, 17F, 1F, "png", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTileWithMatrixSet_MosaicsTileMatrixSetsGetZxyScalexFormat_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<BinaryData> response = client.GetTileWithMatrixSet("search-0df36a74d7ed", "WebMercatorQuad", 12F, 47.6062F, 17F, 1F, "png", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTileWithMatrixSet_MosaicsTileMatrixSetsGetZxyScalexFormat_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<BinaryData> response = await client.GetTileWithMatrixSetAsync("search-0df36a74d7ed", "WebMercatorQuad", 12F, 47.6062F, 17F, 1F, "png", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTileJson_MosaicsTileJsonOperationsGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetTileJson("searchid-0df36a74d7ed", new string[] { "B04" }, null, null, null, 1F, null, null, null, null, null, null, null, "png", 2, 9, null, null, "Gamma RGB 3.2 Saturation 0.8 Sigmoidal RGB 25 0.35", "sentinel-2-l2a-tutorial-7", null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tiles")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTileJson_MosaicsTileJsonOperationsGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetTileJsonAsync("searchid-0df36a74d7ed", new string[] { "B04" }, null, null, null, 1F, null, null, null, null, null, null, null, "png", 2, 9, null, null, "Gamma RGB 3.2 Saturation 0.8 Sigmoidal RGB 25 0.35", "sentinel-2-l2a-tutorial-7", null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tiles")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTileJson_MosaicsTileJsonOperationsGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<TileJsonResult> response = client.GetTileJson("searchid-0df36a74d7ed");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTileJson_MosaicsTileJsonOperationsGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<TileJsonResult> response = await client.GetTileJsonAsync("searchid-0df36a74d7ed");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTileJsonWithMatrixSet_MosaicsTileMatrixSetsTileJsonGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetTileJsonWithMatrixSet("search-0df36a74d7ed", "WebMercatorQuad", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tiles")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTileJsonWithMatrixSet_MosaicsTileMatrixSetsTileJsonGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetTileJsonWithMatrixSetAsync("search-0df36a74d7ed", "WebMercatorQuad", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("tiles")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetTileJsonWithMatrixSet_MosaicsTileMatrixSetsTileJsonGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<TileJsonResult> response = client.GetTileJsonWithMatrixSet("search-0df36a74d7ed", "WebMercatorQuad");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetTileJsonWithMatrixSet_MosaicsTileMatrixSetsTileJsonGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<TileJsonResult> response = await client.GetTileJsonWithMatrixSetAsync("search-0df36a74d7ed", "WebMercatorQuad");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetWmtsCapabilities_MosaicsWmtsMosaicsGetCapabilitiesXml()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetWmtsCapabilities("search-0df36a74d7ed", null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetWmtsCapabilities_MosaicsWmtsMosaicsGetCapabilitiesXml_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetWmtsCapabilitiesAsync("search-0df36a74d7ed", null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetWmtsCapabilities_MosaicsWmtsMosaicsGetCapabilitiesXml_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<string> response = client.GetWmtsCapabilities("search-0df36a74d7ed");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetWmtsCapabilities_MosaicsWmtsMosaicsGetCapabilitiesXml_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<string> response = await client.GetWmtsCapabilitiesAsync("search-0df36a74d7ed");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetWmtsCapabilitiesWithMatrixSet_MosaicsWmtsMosaicsTileMatrixSetsGetCapabilitiesXml()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetWmtsCapabilitiesWithMatrixSet("searchid-0df36a74d7ed", "WebMercatorQuad", null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetWmtsCapabilitiesWithMatrixSet_MosaicsWmtsMosaicsTileMatrixSetsGetCapabilitiesXml_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetWmtsCapabilitiesWithMatrixSetAsync("searchid-0df36a74d7ed", "WebMercatorQuad", null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetWmtsCapabilitiesWithMatrixSet_MosaicsWmtsMosaicsTileMatrixSetsGetCapabilitiesXml_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<string> response = client.GetWmtsCapabilitiesWithMatrixSet("searchid-0df36a74d7ed", "WebMercatorQuad");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetWmtsCapabilitiesWithMatrixSet_MosaicsWmtsMosaicsTileMatrixSetsGetCapabilitiesXml_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<string> response = await client.GetWmtsCapabilitiesWithMatrixSetAsync("searchid-0df36a74d7ed", "WebMercatorQuad");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_RegisterSearch_MosaicsRegisterSearchRegister()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new Dictionary<string, object>
            {
                ["filter-lang"] = "cql2-json",
                ["sortby"] = new object[]
            {
new
{
field = "datetime",
direction = "desc",
}
            }
            });
            Response response = client.RegisterSearch(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("searchId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_RegisterSearch_MosaicsRegisterSearchRegister_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new Dictionary<string, object>
            {
                ["filter-lang"] = "cql2-json",
                ["sortby"] = new object[]
            {
new
{
field = "datetime",
direction = "desc",
}
            }
            });
            Response response = await client.RegisterSearchAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("searchId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_RegisterSearch_MosaicsRegisterSearchRegister_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<RegisterResult> response = client.RegisterSearch();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_RegisterSearch_MosaicsRegisterSearchRegister_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<RegisterResult> response = await client.RegisterSearchAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetSearchInfo_MosaicsInfoSearchGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetSearchInfo("e32e0b12176246816953d75e3356d613", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("search").GetProperty("hash").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("search").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("_where").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("orderby").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("lastused").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("usecount").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("metadata").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetSearchInfo_MosaicsInfoSearchGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetSearchInfoAsync("e32e0b12176246816953d75e3356d613", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("search").GetProperty("hash").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("search").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("_where").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("orderby").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("lastused").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("usecount").ToString());
            Console.WriteLine(result.GetProperty("search").GetProperty("metadata").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetSearchInfo_MosaicsInfoSearchGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<TitilerPgstacModelInfo> response = client.GetSearchInfo("e32e0b12176246816953d75e3356d613");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetSearchInfo_MosaicsInfoSearchGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<TitilerPgstacModelInfo> response = await client.GetSearchInfoAsync("e32e0b12176246816953d75e3356d613");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetAssetsForTile_MosaicsAssetsForTilesGetZxyAssets()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetAssetsForTile("e32e0b12176246816953d75e3356d613", 12F, 47.6062F, 17F, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetAssetsForTile_MosaicsAssetsForTilesGetZxyAssets_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetAssetsForTileAsync("e32e0b12176246816953d75e3356d613", 12F, 47.6062F, 17F, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetAssetsForTile_MosaicsAssetsForTilesGetZxyAssets_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<IReadOnlyList<BinaryData>> response = client.GetAssetsForTile("e32e0b12176246816953d75e3356d613", 12F, 47.6062F, 17F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetAssetsForTile_MosaicsAssetsForTilesGetZxyAssets_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<IReadOnlyList<BinaryData>> response = await client.GetAssetsForTileAsync("e32e0b12176246816953d75e3356d613", 12F, 47.6062F, 17F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetAssetsForTileWithMatrixSet_MosaicsAssetsForTileMatrixSetsGetZxyAssets()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetAssetsForTileWithMatrixSet("e32e0b12176246816953d75e3356d613", "WebMercatorQuad", 12F, 47.6062F, 17F, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetAssetsForTileWithMatrixSet_MosaicsAssetsForTileMatrixSetsGetZxyAssets_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetAssetsForTileWithMatrixSetAsync("e32e0b12176246816953d75e3356d613", "WebMercatorQuad", 12F, 47.6062F, 17F, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetAssetsForTileWithMatrixSet_MosaicsAssetsForTileMatrixSetsGetZxyAssets_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<IReadOnlyList<BinaryData>> response = client.GetAssetsForTileWithMatrixSet("e32e0b12176246816953d75e3356d613", "WebMercatorQuad", 12F, 47.6062F, 17F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetAssetsForTileWithMatrixSet_MosaicsAssetsForTileMatrixSetsGetZxyAssets_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<IReadOnlyList<BinaryData>> response = await client.GetAssetsForTileWithMatrixSetAsync("e32e0b12176246816953d75e3356d613", "WebMercatorQuad", 12F, 47.6062F, 17F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetAssetsForPoint_MosaicsAssetsForPointsGetLonLatAssets()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = client.GetAssetsForPoint("e32e0b12176246816953d75e3356d613", -122.3321F, 47.6062F, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetAssetsForPoint_MosaicsAssetsForPointsGetLonLatAssets_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response response = await client.GetAssetsForPointAsync("e32e0b12176246816953d75e3356d613", -122.3321F, 47.6062F, null, null, null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MosaicTilerClient_GetAssetsForPoint_MosaicsAssetsForPointsGetLonLatAssets_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<IReadOnlyList<BinaryData>> response = client.GetAssetsForPoint("e32e0b12176246816953d75e3356d613", -122.3321F, 47.6062F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MosaicTilerClient_GetAssetsForPoint_MosaicsAssetsForPointsGetLonLatAssets_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            MosaicTilerClient client = new MosaicTilerClient(endpoint, credential);

            Response<IReadOnlyList<BinaryData>> response = await client.GetAssetsForPointAsync("e32e0b12176246816953d75e3356d613", -122.3321F, 47.6062F);
        }
    }
}
