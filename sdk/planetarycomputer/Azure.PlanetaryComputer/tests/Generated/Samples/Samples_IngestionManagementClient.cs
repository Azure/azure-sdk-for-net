// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.PlanetaryComputer.Samples
{
    public partial class Samples_IngestionManagementClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestions_IngestionsListAll()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.GetIngestions("collectionId", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestions_IngestionsListAll_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.GetIngestionsAsync("collectionId", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestions_IngestionsListAll_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionDefinitionsPagedResult> response = client.GetIngestions("collectionId");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestions_IngestionsListAll_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionDefinitionsPagedResult> response = await client.GetIngestionsAsync("collectionId");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_CreateIngestion_IngestionsCreate()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                importType = "StaticCatalog",
                sourceCatalogUrl = "https://sample.blob.core.windows.net/sample.json",
                skipExistingItems = false,
                keepOriginalAssets = false,
            });
            Response response = client.CreateIngestion("collectionId", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_CreateIngestion_IngestionsCreate_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                importType = "StaticCatalog",
                sourceCatalogUrl = "https://sample.blob.core.windows.net/sample.json",
                skipExistingItems = false,
                keepOriginalAssets = false,
            });
            Response response = await client.CreateIngestionAsync("collectionId", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_CreateIngestion_IngestionsCreate_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            IngestionConfiguration definition = new IngestionConfiguration(IngestionType.StaticCatalog)
            {
                SourceCatalogUrl = new Uri("https://sample.blob.core.windows.net/sample.json"),
                SkipExistingItems = false,
                KeepOriginalAssets = false,
            };
            Response<IngestionConfiguration> response = client.CreateIngestion("collectionId", definition);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_CreateIngestion_IngestionsCreate_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            IngestionConfiguration definition = new IngestionConfiguration(IngestionType.StaticCatalog)
            {
                SourceCatalogUrl = new Uri("https://sample.blob.core.windows.net/sample.json"),
                SkipExistingItems = false,
                KeepOriginalAssets = false,
            };
            Response<IngestionConfiguration> response = await client.CreateIngestionAsync("collectionId", definition);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestion_IngestionsGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.GetIngestion("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestion_IngestionsGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.GetIngestionAsync("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestion_IngestionsGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionConfiguration> response = client.GetIngestion("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestion_IngestionsGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionConfiguration> response = await client.GetIngestionAsync("collectionId", "24a8a15d-61bd-453f-ac67-b9cec532ed78");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_UpdateIngestion_IngestionsUpdate()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                displayName = "test-ingestion1",
                keepOriginalAssets = false,
                skipExistingItems = false,
                sourceCatalogUrl = "https://uksouthdatazoo.blob.core.windows.net/impactobservatory",
            });
            Response response = client.UpdateIngestion("potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_UpdateIngestion_IngestionsUpdate_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                displayName = "test-ingestion1",
                keepOriginalAssets = false,
                skipExistingItems = false,
                sourceCatalogUrl = "https://uksouthdatazoo.blob.core.windows.net/impactobservatory",
            });
            Response response = await client.UpdateIngestionAsync("potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("importType").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionRuns_IngestionRunsListAll()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.GetIngestionRuns("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalPendingItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalFailedItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionRuns_IngestionRunsListAll_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.GetIngestionRunsAsync("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalPendingItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("operation").GetProperty("totalFailedItems").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionRuns_IngestionRunsListAll_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionRunsPagedResult> response = client.GetIngestionRuns("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionRuns_IngestionRunsListAll_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionRunsPagedResult> response = await client.GetIngestionRunsAsync("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_CreateIngestionRun_IngestionRunsCreate()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.CreateIngestionRun("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_CreateIngestionRun_IngestionRunsCreate_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.CreateIngestionRunAsync("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_CreateIngestionRun_IngestionRunsCreate_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionRun> response = client.CreateIngestionRun("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_CreateIngestionRun_IngestionRunsCreate_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionRun> response = await client.CreateIngestionRunAsync("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionRun_IngestionRunsGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.GetIngestionRun("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionRun_IngestionRunsGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.GetIngestionRunAsync("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("statusHistory")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalPendingItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalSuccessfulItems").ToString());
            Console.WriteLine(result.GetProperty("operation").GetProperty("totalFailedItems").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionRun_IngestionRunsGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionRun> response = client.GetIngestionRun("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionRun_IngestionRunsGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<IngestionRun> response = await client.GetIngestionRunAsync("weather-sample", "94659cc0-538e-4688-9d01-8c7f464b885b", Guid.Parse("23e710f1-d004-4dbc-84b0-259398ef7bab"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionOperations_IngestionOperationsListAll()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.GetIngestionOperations(null, null, "c1007ec2-3ddc-4335-9edd-b1c26b1b4c92", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionOperations_IngestionOperationsListAll_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.GetIngestionOperationsAsync(null, null, "c1007ec2-3ddc-4335-9edd-b1c26b1b4c92", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("statusHistory")[0].GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionOperations_IngestionOperationsListAll_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<OperationsPagedResult> response = client.GetIngestionOperations();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionOperations_IngestionOperationsListAll_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<OperationsPagedResult> response = await client.GetIngestionOperationsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_DeleteAllIngestionOperations_IngestionOperationsDeleteAll()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.DeleteAllIngestionOperations();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_DeleteAllIngestionOperations_IngestionOperationsDeleteAll_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.DeleteAllIngestionOperationsAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionOperation_IngestionOperationsGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.GetIngestionOperation(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionOperation_IngestionOperationsGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.GetIngestionOperationAsync(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("creationTime").ToString());
            Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("timestamp").ToString());
            Console.WriteLine(result.GetProperty("statusHistory")[0].GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_GetIngestionOperation_IngestionOperationsGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<OperationInfo> response = client.GetIngestionOperation(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_GetIngestionOperation_IngestionOperationsGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response<OperationInfo> response = await client.GetIngestionOperationAsync(Guid.Parse("59c757bb-01fc-4196-8036-11e3ee0c08b8"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_DeleteIngestionOperation_IngestionOperationsDelete()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = client.DeleteIngestionOperation(Guid.Parse("9bb31abd-91d6-4649-9c6f-beadbec7c622"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_DeleteIngestionOperation_IngestionOperationsDelete_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Response response = await client.DeleteIngestionOperationAsync(Guid.Parse("9bb31abd-91d6-4649-9c6f-beadbec7c622"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_IngestionManagementClient_DeleteIngestion_IngestionsDelete()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Operation operation = client.DeleteIngestion(WaitUntil.Completed, "potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_IngestionManagementClient_DeleteIngestion_IngestionsDelete_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            IngestionManagementClient client = new IngestionManagementClient(endpoint, credential);

            Operation operation = await client.DeleteIngestionAsync(WaitUntil.Completed, "potsdam-stacforge", "5e961a4c-7c3e-40ca-b151-2e574bae1635");
        }
    }
}
