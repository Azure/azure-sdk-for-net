// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.PlanetaryComputer.Samples
{
    public partial class Samples_TileMatrixSetsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TileMatrixSetsClient_GetTileMatrixList_TileMatrixListGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response response = client.GetTileMatrixList(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TileMatrixSetsClient_GetTileMatrixList_TileMatrixListGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response response = await client.GetTileMatrixListAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TileMatrixSetsClient_GetTileMatrixList_TileMatrixListGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response<IReadOnlyList<string>> response = client.GetTileMatrixList();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TileMatrixSetsClient_GetTileMatrixList_TileMatrixListGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response<IReadOnlyList<string>> response = await client.GetTileMatrixListAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TileMatrixSetsClient_GetTileMatrixDefinitions_TileMatrixDefinitionsGet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response response = client.GetTileMatrixDefinitions("WebMercatorQuad", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("crs").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("scaleDenominator").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("cellSize").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("pointOfOrigin")[0].ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("tileWidth").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("tileHeight").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("matrixWidth").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("matrixHeight").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TileMatrixSetsClient_GetTileMatrixDefinitions_TileMatrixDefinitionsGet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response response = await client.GetTileMatrixDefinitionsAsync("WebMercatorQuad", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("crs").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("scaleDenominator").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("cellSize").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("pointOfOrigin")[0].ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("tileWidth").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("tileHeight").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("matrixWidth").ToString());
            Console.WriteLine(result.GetProperty("tileMatrices")[0].GetProperty("matrixHeight").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TileMatrixSetsClient_GetTileMatrixDefinitions_TileMatrixDefinitionsGet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response<TileMatrixSet> response = client.GetTileMatrixDefinitions("WebMercatorQuad");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TileMatrixSetsClient_GetTileMatrixDefinitions_TileMatrixDefinitionsGet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            TileMatrixSetsClient client = new TileMatrixSetsClient(endpoint, credential);

            Response<TileMatrixSet> response = await client.GetTileMatrixDefinitionsAsync("WebMercatorQuad");
        }
    }
}
