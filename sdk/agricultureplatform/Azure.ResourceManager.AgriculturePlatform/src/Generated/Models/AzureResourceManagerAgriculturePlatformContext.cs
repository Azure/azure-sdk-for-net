// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using Azure.ResourceManager.AgriculturePlatform.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AgriculturePlatform
{
    /// <summary>
    /// Context class which will be filled in by the System.ClientModel.SourceGeneration.
    /// For more information <see href='https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/System.ClientModel/src/docs/ModelReaderWriterContext.md' />
    /// </summary>
    [ModelReaderWriterBuildable(typeof(AgriculturePlatformSku))]
    [ModelReaderWriterBuildable(typeof(AgricultureServiceConfig))]
    [ModelReaderWriterBuildable(typeof(AgricultureServiceData))]
    [ModelReaderWriterBuildable(typeof(AgricultureServicePatch))]
    [ModelReaderWriterBuildable(typeof(AgricultureServiceProperties))]
    [ModelReaderWriterBuildable(typeof(AgricultureServiceResource))]
    [ModelReaderWriterBuildable(typeof(AgricultureSolution))]
    [ModelReaderWriterBuildable(typeof(AgriServiceResourceListResult))]
    [ModelReaderWriterBuildable(typeof(AgriServiceResourceUpdateProperties))]
    [ModelReaderWriterBuildable(typeof(AvailableAgriSolutionListResult))]
    [ModelReaderWriterBuildable(typeof(DataConnectorCredentialMap))]
    [ModelReaderWriterBuildable(typeof(DataConnectorCredentials))]
    [ModelReaderWriterBuildable(typeof(DataManagerForAgricultureSolution))]
    [ModelReaderWriterBuildable(typeof(InstalledSolutionMap))]
    [ModelReaderWriterBuildable(typeof(ManagedOnBehalfOfConfiguration))]
    [ModelReaderWriterBuildable(typeof(ManagedServiceIdentity))]
    [ModelReaderWriterBuildable(typeof(MarketPlaceOfferDetails))]
    [ModelReaderWriterBuildable(typeof(MoboBrokerResource))]
    [ModelReaderWriterBuildable(typeof(SystemData))]
    [ModelReaderWriterBuildable(typeof(UserAssignedIdentity))]
    public partial class AzureResourceManagerAgriculturePlatformContext : ModelReaderWriterContext
    {
    }
}
