// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AgriculturePlatform.Models
{
    /// <summary> Config of the AgriService resource instance. </summary>
    public partial class AgricultureServiceConfig
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AgricultureServiceConfig"/>. </summary>
        public AgricultureServiceConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AgricultureServiceConfig"/>. </summary>
        /// <param name="instanceUri"> Instance URI of the AgriService instance. </param>
        /// <param name="version"> Version of AgriService instance. </param>
        /// <param name="appServiceResourceId"> App service resource Id. </param>
        /// <param name="cosmosDBResourceId"> Cosmos Db resource Id. </param>
        /// <param name="storageAccountResourceId"> Storage account resource Id. </param>
        /// <param name="keyVaultResourceId"> Key vault resource Id. </param>
        /// <param name="redisCacheResourceId"> Redis cache resource Id. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AgricultureServiceConfig(string instanceUri, string version, ResourceIdentifier appServiceResourceId, ResourceIdentifier cosmosDBResourceId, ResourceIdentifier storageAccountResourceId, ResourceIdentifier keyVaultResourceId, ResourceIdentifier redisCacheResourceId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            InstanceUri = instanceUri;
            Version = version;
            AppServiceResourceId = appServiceResourceId;
            CosmosDBResourceId = cosmosDBResourceId;
            StorageAccountResourceId = storageAccountResourceId;
            KeyVaultResourceId = keyVaultResourceId;
            RedisCacheResourceId = redisCacheResourceId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Instance URI of the AgriService instance. </summary>
        public string InstanceUri { get; }

        /// <summary> Version of AgriService instance. </summary>
        public string Version { get; }

        /// <summary> App service resource Id. </summary>
        public ResourceIdentifier AppServiceResourceId { get; }

        /// <summary> Cosmos Db resource Id. </summary>
        public ResourceIdentifier CosmosDBResourceId { get; }

        /// <summary> Storage account resource Id. </summary>
        public ResourceIdentifier StorageAccountResourceId { get; }

        /// <summary> Key vault resource Id. </summary>
        public ResourceIdentifier KeyVaultResourceId { get; }

        /// <summary> Redis cache resource Id. </summary>
        public ResourceIdentifier RedisCacheResourceId { get; }
    }
}
