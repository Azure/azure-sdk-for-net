// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ComputeRecommender.Models;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.ComputeRecommender.Samples
{
    public partial class Sample_SubscriptionResourceExtensions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetSpotPlacementScore_GetsTheMetadataOfSpotPlacementScores()
        {
            // Generated from example definition: 2025-06-05/GetSpotPlacementScores.json
            // this example is just showing the usage of "ComputeDiagnosticBase_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            AzureLocation location = new AzureLocation("eastus");
            ComputeDiagnosticBase result = await subscriptionResource.GetSpotPlacementScoreAsync(location);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task PostSpotPlacementScore_ReturnsSpotVMPlacementScoresForGivenConfigurations()
        {
            // Generated from example definition: 2025-06-05/GenerateSpotPlacementScores.json
            // this example is just showing the usage of "ComputeDiagnosticBases_Post" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            AzureLocation location = new AzureLocation("eastus");
            SpotPlacementScoresContent content = new SpotPlacementScoresContent
            {
                DesiredLocations = { "eastus", "eastus2" },
                DesiredSizes = {new ResourceSize
{
Sku = "Standard_D2_v2",
}},
                DesiredCount = 1,
                AvailabilityZones = true,
            };
            SpotPlacementScoresResult result = await subscriptionResource.PostSpotPlacementScoreAsync(location, content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
