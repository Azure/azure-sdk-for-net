// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Compute.Recommender;

namespace Azure.ResourceManager.Compute.Recommender.Models
{
    /// <summary> SpotPlacementScores API Input. </summary>
    public partial class ComputeRecommenderGenerateContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ComputeRecommenderGenerateContent"/>. </summary>
        public ComputeRecommenderGenerateContent()
        {
            DesiredLocations = new ChangeTrackingList<AzureLocation>();
            DesiredSizes = new ChangeTrackingList<ComputeRecommenderResourceSize>();
        }

        /// <summary> Initializes a new instance of <see cref="ComputeRecommenderGenerateContent"/>. </summary>
        /// <param name="desiredLocations"> The desired regions. </param>
        /// <param name="desiredSizes"> The desired virtual machine SKU sizes. </param>
        /// <param name="desiredCount"> Desired instance count per region/zone based on the scope. </param>
        /// <param name="availabilityZones"> Defines if the scope is zonal or regional. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ComputeRecommenderGenerateContent(IList<AzureLocation> desiredLocations, IList<ComputeRecommenderResourceSize> desiredSizes, int? desiredCount, bool? availabilityZones, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DesiredLocations = desiredLocations;
            DesiredSizes = desiredSizes;
            DesiredCount = desiredCount;
            AvailabilityZones = availabilityZones;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The desired regions. </summary>
        public IList<AzureLocation> DesiredLocations { get; }

        /// <summary> The desired virtual machine SKU sizes. </summary>
        public IList<ComputeRecommenderResourceSize> DesiredSizes { get; }

        /// <summary> Desired instance count per region/zone based on the scope. </summary>
        public int? DesiredCount { get; set; }

        /// <summary> Defines if the scope is zonal or regional. </summary>
        public bool? AvailabilityZones { get; set; }
    }
}
