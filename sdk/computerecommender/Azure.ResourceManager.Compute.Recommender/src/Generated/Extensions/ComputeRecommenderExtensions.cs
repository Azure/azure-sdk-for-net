// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.ResourceManager.ComputeRecommender.Mocking;
using Azure.ResourceManager.ComputeRecommender.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ComputeRecommender
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ComputeRecommender. </summary>
    public static partial class ComputeRecommenderExtensions
    {
        private static MockableComputeRecommenderSubscriptionResource GetMockableComputeRecommenderSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableComputeRecommenderSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets Spot Placement Scores metadata.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComputeDiagnosticBase_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-05</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableComputeRecommenderSubscriptionResource.GetSpotPlacementScore(AzureLocation,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The name of the Azure region. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        public static async Task<Response<ComputeDiagnosticBase>> GetSpotPlacementScoreAsync(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return await GetMockableComputeRecommenderSubscriptionResource(subscriptionResource).GetSpotPlacementScoreAsync(location, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets Spot Placement Scores metadata.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComputeDiagnosticBase_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-05</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableComputeRecommenderSubscriptionResource.GetSpotPlacementScore(AzureLocation,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The name of the Azure region. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        public static Response<ComputeDiagnosticBase> GetSpotPlacementScore(this SubscriptionResource subscriptionResource, AzureLocation location, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableComputeRecommenderSubscriptionResource(subscriptionResource).GetSpotPlacementScore(location, cancellationToken);
        }

        /// <summary>
        /// Generates placement scores for Spot VM skus.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot/generate</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComputeDiagnosticBases_Post</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-05</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableComputeRecommenderSubscriptionResource.PostSpotPlacementScore(AzureLocation,SpotPlacementScoresContent,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The name of the Azure region. </param>
        /// <param name="content"> SpotPlacementScores object supplied in the body of the Post spot placement scores operation. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> or <paramref name="content"/> is null. </exception>
        public static async Task<Response<SpotPlacementScoresResult>> PostSpotPlacementScoreAsync(this SubscriptionResource subscriptionResource, AzureLocation location, SpotPlacementScoresContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return await GetMockableComputeRecommenderSubscriptionResource(subscriptionResource).PostSpotPlacementScoreAsync(location, content, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Generates placement scores for Spot VM skus.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot/generate</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComputeDiagnosticBases_Post</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-05</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableComputeRecommenderSubscriptionResource.PostSpotPlacementScore(AzureLocation,SpotPlacementScoresContent,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The name of the Azure region. </param>
        /// <param name="content"> SpotPlacementScores object supplied in the body of the Post spot placement scores operation. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> or <paramref name="content"/> is null. </exception>
        public static Response<SpotPlacementScoresResult> PostSpotPlacementScore(this SubscriptionResource subscriptionResource, AzureLocation location, SpotPlacementScoresContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableComputeRecommenderSubscriptionResource(subscriptionResource).PostSpotPlacementScore(location, content, cancellationToken);
        }
    }
}
