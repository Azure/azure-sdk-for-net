// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Recommender.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Compute.Recommender
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Compute.Recommender. </summary>
    public static partial class ComputeRecommenderExtensions
    {
        /// <param name="client"></param>
        private static MockableComputeRecommenderArmClient GetMockableComputeRecommenderArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableComputeRecommenderArmClient(client0, ResourceIdentifier.Root));
        }

        /// <param name="subscriptionResource"></param>
        private static MockableComputeRecommenderSubscriptionResource GetMockableComputeRecommenderSubscriptionResource(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient(client => new MockableComputeRecommenderSubscriptionResource(client, subscriptionResource.Id));
        }

        /// <summary> Gets an object representing a <see cref="ComputeDiagnosticBaseResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient"/> the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="ComputeDiagnosticBaseResource"/> object. </returns>
        public static ComputeDiagnosticBaseResource GetComputeDiagnosticBaseResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableComputeRecommenderArmClient(client).GetComputeDiagnosticBaseResource(id);
        }

        /// <summary> Gets an object representing a <see cref="ComputeDiagnosticBaseResource"/> along with the instance operations that can be performed on it in the <see cref="SubscriptionResource"/>. </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource"/> the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> Returns a <see cref="ComputeDiagnosticBaseResource"/> object. </returns>
        public static ComputeDiagnosticBaseResource GetComputeDiagnosticBase(this SubscriptionResource subscriptionResource)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableComputeRecommenderSubscriptionResource(subscriptionResource).GetComputeDiagnosticBase();
        }
    }
}
