// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Compute.Recommender.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Compute.Recommender
{
    /// <summary> Contains metadata of a diagnostic type. </summary>
    public partial class ComputeDiagnosticBaseData : ResourceData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ComputeDiagnosticBaseData"/>. </summary>
        internal ComputeDiagnosticBaseData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ComputeDiagnosticBaseData"/>. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="properties"> Contains additional properties of a diagnostic. </param>
        internal ComputeDiagnosticBaseData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, BinaryData> additionalBinaryDataProperties, DiagnosticProperties properties) : base(id, name, resourceType, systemData)
        {
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
            Properties = properties;
        }

        /// <summary> Contains additional properties of a diagnostic. </summary>
        internal DiagnosticProperties Properties { get; }

        /// <summary> Describes what are the supported resource types for a diagnostic. </summary>
        public IList<string> DiagnosticSupportedResourceTypes
        {
            get
            {
                return Properties.SupportedResourceTypes;
            }
        }
    }
}
