// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.TrafficManager;
using Azure.ResourceManager.TrafficManager.Models;

namespace Azure.ResourceManager.TrafficManager.Samples
{
    public partial class Sample_TrafficManagerEndpointCollection
    {
        // Endpoint-GET-External-WithGeoMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_EndpointGETExternalWithGeoMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithGeoMapping.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            TrafficManagerEndpointResource result = await collection.GetAsync(endpointType, endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-GET-External-WithGeoMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_EndpointGETExternalWithGeoMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithGeoMapping.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            bool result = await collection.ExistsAsync(endpointType, endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Endpoint-GET-External-WithGeoMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_EndpointGETExternalWithGeoMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithGeoMapping.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            NullableResponse<TrafficManagerEndpointResource> response = await collection.GetIfExistsAsync(endpointType, endpointName);
            TrafficManagerEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                TrafficManagerEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // Endpoint-GET-External-WithLocation
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_EndpointGETExternalWithLocation()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithLocation.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager1421";
            string profileName = "azsmnet6386";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "azsmnet7187";
            TrafficManagerEndpointResource result = await collection.GetAsync(endpointType, endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-GET-External-WithLocation
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_EndpointGETExternalWithLocation()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithLocation.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager1421";
            string profileName = "azsmnet6386";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "azsmnet7187";
            bool result = await collection.ExistsAsync(endpointType, endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Endpoint-GET-External-WithLocation
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_EndpointGETExternalWithLocation()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithLocation.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager1421";
            string profileName = "azsmnet6386";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "azsmnet7187";
            NullableResponse<TrafficManagerEndpointResource> response = await collection.GetIfExistsAsync(endpointType, endpointName);
            TrafficManagerEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                TrafficManagerEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // Endpoint-GET-External-WithSubnetMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_EndpointGETExternalWithSubnetMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithSubnetMapping.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            TrafficManagerEndpointResource result = await collection.GetAsync(endpointType, endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-GET-External-WithSubnetMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_EndpointGETExternalWithSubnetMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithSubnetMapping.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            bool result = await collection.ExistsAsync(endpointType, endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Endpoint-GET-External-WithSubnetMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_EndpointGETExternalWithSubnetMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-GET-External-WithSubnetMapping.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            NullableResponse<TrafficManagerEndpointResource> response = await collection.GetIfExistsAsync(endpointType, endpointName);
            TrafficManagerEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                TrafficManagerEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // Endpoint-PUT-External-WithAlwaysServe
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EndpointPUTExternalWithAlwaysServe()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-PUT-External-WithAlwaysServe.json
            // this example is just showing the usage of "Endpoints_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager1421";
            string profileName = "azsmnet6386";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "azsmnet7187";
            TrafficManagerEndpointData data = new TrafficManagerEndpointData()
            {
                Target = "foobar.contoso.com",
                EndpointStatus = TrafficManagerEndpointStatus.Enabled,
                EndpointLocation = "North Europe",
                AlwaysServe = TrafficManagerEndpointAlwaysServeStatus.Enabled,
                Name = "azsmnet7187",
                ResourceType = new ResourceType("Microsoft.network/TrafficManagerProfiles/ExternalEndpoints"),
            };
            ArmOperation<TrafficManagerEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointType, endpointName, data);
            TrafficManagerEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-PUT-External-WithCustomHeaders
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EndpointPUTExternalWithCustomHeaders()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-PUT-External-WithCustomHeaders.json
            // this example is just showing the usage of "Endpoints_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager1421";
            string profileName = "azsmnet6386";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "azsmnet7187";
            TrafficManagerEndpointData data = new TrafficManagerEndpointData()
            {
                Target = "foobar.contoso.com",
                EndpointStatus = TrafficManagerEndpointStatus.Enabled,
                EndpointLocation = "North Europe",
                CustomHeaders =
{
new TrafficManagerEndpointCustomHeaderInfo()
{
Name = "header-1",
Value = "value-1",
},new TrafficManagerEndpointCustomHeaderInfo()
{
Name = "header-2",
Value = "value-2",
}
},
                Name = "azsmnet7187",
                ResourceType = new ResourceType("Microsoft.network/TrafficManagerProfiles/ExternalEndpoints"),
            };
            ArmOperation<TrafficManagerEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointType, endpointName, data);
            TrafficManagerEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-PUT-External-WithGeoMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EndpointPUTExternalWithGeoMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-PUT-External-WithGeoMapping.json
            // this example is just showing the usage of "Endpoints_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            TrafficManagerEndpointData data = new TrafficManagerEndpointData()
            {
                Target = "foobar.contoso.com",
                EndpointStatus = TrafficManagerEndpointStatus.Enabled,
                GeoMapping =
{
"GEO-AS","GEO-AF"
},
                Name = "My external endpoint",
                ResourceType = new ResourceType("Microsoft.network/TrafficManagerProfiles/ExternalEndpoints"),
            };
            ArmOperation<TrafficManagerEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointType, endpointName, data);
            TrafficManagerEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-PUT-External-WithLocation
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EndpointPUTExternalWithLocation()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-PUT-External-WithLocation.json
            // this example is just showing the usage of "Endpoints_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager1421";
            string profileName = "azsmnet6386";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "azsmnet7187";
            TrafficManagerEndpointData data = new TrafficManagerEndpointData()
            {
                Target = "foobar.contoso.com",
                EndpointStatus = TrafficManagerEndpointStatus.Enabled,
                EndpointLocation = "North Europe",
                Name = "azsmnet7187",
                ResourceType = new ResourceType("Microsoft.network/TrafficManagerProfiles/ExternalEndpoints"),
            };
            ArmOperation<TrafficManagerEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointType, endpointName, data);
            TrafficManagerEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoint-PUT-External-WithSubnetMapping
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EndpointPUTExternalWithSubnetMapping()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/Endpoint-PUT-External-WithSubnetMapping.json
            // this example is just showing the usage of "Endpoints_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TrafficManagerProfileResource created on azure
            // for more information of creating TrafficManagerProfileResource, please refer to the document of TrafficManagerProfileResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "azuresdkfornetautoresttrafficmanager2191";
            string profileName = "azuresdkfornetautoresttrafficmanager8224";
            ResourceIdentifier trafficManagerProfileResourceId = TrafficManagerProfileResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, profileName);
            TrafficManagerProfileResource trafficManagerProfile = client.GetTrafficManagerProfileResource(trafficManagerProfileResourceId);

            // get the collection of this TrafficManagerEndpointResource
            TrafficManagerEndpointCollection collection = trafficManagerProfile.GetTrafficManagerEndpoints();

            // invoke the operation
            string endpointType = "ExternalEndpoints";
            string endpointName = "My%20external%20endpoint";
            TrafficManagerEndpointData data = new TrafficManagerEndpointData()
            {
                Target = "foobar.contoso.com",
                EndpointStatus = TrafficManagerEndpointStatus.Enabled,
                Subnets =
{
new TrafficManagerEndpointSubnetInfo()
{
First = IPAddress.Parse("1.2.3.0"),
Scope = 24,
},new TrafficManagerEndpointSubnetInfo()
{
First = IPAddress.Parse("25.26.27.28"),
Last = IPAddress.Parse("29.30.31.32"),
}
},
                Name = "My external endpoint",
                ResourceType = new ResourceType("Microsoft.network/TrafficManagerProfiles/ExternalEndpoints"),
            };
            ArmOperation<TrafficManagerEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointType, endpointName, data);
            TrafficManagerEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
