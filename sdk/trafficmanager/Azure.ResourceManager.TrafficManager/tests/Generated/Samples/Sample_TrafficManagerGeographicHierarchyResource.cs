// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;

namespace Azure.ResourceManager.TrafficManager
{
    public partial class Sample_TrafficManagerGeographicHierarchyResource
    {
        // GeographicHierarchy-GET-default
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GeographicHierarchyGETDefault()
        {
            // Generated from example definition: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2018-08-01/examples/GeographicHierarchy-GET-default.json
            // this example is just showing the usage of "GeographicHierarchies_GetDefault" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this TrafficManagerGeographicHierarchyResource created on azure
            // for more information of creating TrafficManagerGeographicHierarchyResource, please refer to the document of TrafficManagerGeographicHierarchyResource
            ResourceIdentifier trafficManagerGeographicHierarchyResourceId = TrafficManagerGeographicHierarchyResource.CreateResourceIdentifier();
            TrafficManagerGeographicHierarchyResource trafficManagerGeographicHierarchy = client.GetTrafficManagerGeographicHierarchyResource(trafficManagerGeographicHierarchyResourceId);

            // invoke the operation
            TrafficManagerGeographicHierarchyResource result = await trafficManagerGeographicHierarchy.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TrafficManagerGeographicHierarchyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
