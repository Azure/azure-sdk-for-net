// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.TrafficManager.Models
{
    public partial class TrafficManagerDnsConfig : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(RelativeName))
            {
                writer.WritePropertyName("relativeName"u8);
                writer.WriteStringValue(RelativeName);
            }
            if (Core.Optional.IsDefined(Ttl))
            {
                writer.WritePropertyName("ttl"u8);
                writer.WriteNumberValue(Ttl.Value);
            }
            writer.WriteEndObject();
        }

        internal static TrafficManagerDnsConfig DeserializeTrafficManagerDnsConfig(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> relativeName = default;
            Core.Optional<string> fqdn = default;
            Core.Optional<long> ttl = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("relativeName"u8))
                {
                    relativeName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fqdn"u8))
                {
                    fqdn = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ttl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ttl = property.Value.GetInt64();
                    continue;
                }
            }
            return new TrafficManagerDnsConfig(relativeName.Value, fqdn.Value, Core.Optional.ToNullable(ttl));
        }
    }
}
