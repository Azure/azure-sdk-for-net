// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.TrafficManager.Models
{
    public partial class QueryExperience : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("endpointId");
            writer.WriteNumberValue(EndpointId);
            writer.WritePropertyName("queryCount");
            writer.WriteNumberValue(QueryCount);
            if (Optional.IsDefined(Latency))
            {
                writer.WritePropertyName("latency");
                writer.WriteNumberValue(Latency.Value);
            }
            writer.WriteEndObject();
        }

        internal static QueryExperience DeserializeQueryExperience(JsonElement element)
        {
            int endpointId = default;
            int queryCount = default;
            Optional<double> latency = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("endpointId"))
                {
                    endpointId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("queryCount"))
                {
                    queryCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("latency"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    latency = property.Value.GetDouble();
                    continue;
                }
            }
            return new QueryExperience(endpointId, queryCount, Optional.ToNullable(latency));
        }
    }
}
