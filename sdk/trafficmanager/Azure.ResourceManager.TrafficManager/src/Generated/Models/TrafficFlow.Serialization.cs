// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.TrafficManager.Models
{
    public partial class TrafficFlow : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SourceIP))
            {
                writer.WritePropertyName("sourceIp");
                writer.WriteStringValue(SourceIP);
            }
            if (Optional.IsDefined(Latitude))
            {
                writer.WritePropertyName("latitude");
                writer.WriteNumberValue(Latitude.Value);
            }
            if (Optional.IsDefined(Longitude))
            {
                writer.WritePropertyName("longitude");
                writer.WriteNumberValue(Longitude.Value);
            }
            if (Optional.IsCollectionDefined(QueryExperiences))
            {
                writer.WritePropertyName("queryExperiences");
                writer.WriteStartArray();
                foreach (var item in QueryExperiences)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static TrafficFlow DeserializeTrafficFlow(JsonElement element)
        {
            Optional<string> sourceIP = default;
            Optional<double> latitude = default;
            Optional<double> longitude = default;
            Optional<IList<QueryExperience>> queryExperiences = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sourceIp"))
                {
                    sourceIP = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("latitude"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    latitude = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("longitude"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    longitude = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("queryExperiences"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<QueryExperience> array = new List<QueryExperience>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(QueryExperience.DeserializeQueryExperience(item));
                    }
                    queryExperiences = array;
                    continue;
                }
            }
            return new TrafficFlow(sourceIP.Value, Optional.ToNullable(latitude), Optional.ToNullable(longitude), Optional.ToList(queryExperiences));
        }
    }
}
