// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Text.Json;

namespace Azure.ResourceManager.TrafficManager
{
    public partial class TrafficManagerHeatMapResource : IJsonModel<TrafficManagerHeatMapData>
    {
        private static TrafficManagerHeatMapData s_dataDeserializationInstance;
        private static TrafficManagerHeatMapData DataDeserializationInstance => s_dataDeserializationInstance ??= new();

        void IJsonModel<TrafficManagerHeatMapData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options) => ((IJsonModel<TrafficManagerHeatMapData>)Data).Write(writer, options);

        TrafficManagerHeatMapData IJsonModel<TrafficManagerHeatMapData>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => ((IJsonModel<TrafficManagerHeatMapData>)DataDeserializationInstance).Create(ref reader, options);

        BinaryData IPersistableModel<TrafficManagerHeatMapData>.Write(ModelReaderWriterOptions options) => ModelReaderWriter.Write<TrafficManagerHeatMapData>(Data, options, AzureResourceManagerTrafficManagerContext.Default);

        TrafficManagerHeatMapData IPersistableModel<TrafficManagerHeatMapData>.Create(BinaryData data, ModelReaderWriterOptions options) => ModelReaderWriter.Read<TrafficManagerHeatMapData>(data, options, AzureResourceManagerTrafficManagerContext.Default);

        string IPersistableModel<TrafficManagerHeatMapData>.GetFormatFromOptions(ModelReaderWriterOptions options) => ((IPersistableModel<TrafficManagerHeatMapData>)DataDeserializationInstance).GetFormatFromOptions(options);
    }
}
