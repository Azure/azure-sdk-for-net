// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> A representation of a log output emitted by a code interpreter tool in response to a tool call by the model. </summary>
    public partial class CodeInterpreterLogOutput : CodeInterpreterToolCallOutput
    {
        /// <summary> Initializes a new instance of <see cref="CodeInterpreterLogOutput"/>. </summary>
        /// <param name="logs"> The serialized log output emitted by the code interpreter. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="logs"/> is null. </exception>
        internal CodeInterpreterLogOutput(string logs)
        {
            Argument.AssertNotNull(logs, nameof(logs));

            Type = "logs";
            Logs = logs;
        }

        /// <summary> Initializes a new instance of <see cref="CodeInterpreterLogOutput"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="logs"> The serialized log output emitted by the code interpreter. </param>
        internal CodeInterpreterLogOutput(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string logs) : base(type, serializedAdditionalRawData)
        {
            Logs = logs;
        }

        /// <summary> Initializes a new instance of <see cref="CodeInterpreterLogOutput"/> for deserialization. </summary>
        internal CodeInterpreterLogOutput()
        {
        }

        /// <summary> The serialized log output emitted by the code interpreter. </summary>
        public string Logs { get; }
    }
}
