// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> Possible API response formats. </summary>
    internal readonly partial struct ApiResponseFormat : IEquatable<ApiResponseFormat>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ApiResponseFormat"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ApiResponseFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TextValue = "text";
        private const string JsonObjectValue = "json_object";
        private const string JsonSchemaValue = "json_schema";

        /// <summary> `text` format should be used for requests involving any sort of ToolCall. </summary>
        public static ApiResponseFormat Text { get; } = new ApiResponseFormat(TextValue);
        /// <summary> Using `json_object` format will limit the usage of ToolCall to only functions. </summary>
        public static ApiResponseFormat JsonObject { get; } = new ApiResponseFormat(JsonObjectValue);
        /// <summary> Using `json_schema` format will ensure the model matches the supplied JSON schema. </summary>
        public static ApiResponseFormat JsonSchema { get; } = new ApiResponseFormat(JsonSchemaValue);
        /// <summary> Determines if two <see cref="ApiResponseFormat"/> values are the same. </summary>
        public static bool operator ==(ApiResponseFormat left, ApiResponseFormat right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ApiResponseFormat"/> values are not the same. </summary>
        public static bool operator !=(ApiResponseFormat left, ApiResponseFormat right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ApiResponseFormat"/>. </summary>
        public static implicit operator ApiResponseFormat(string value) => new ApiResponseFormat(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ApiResponseFormat other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ApiResponseFormat other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
