// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.OpenAI
{
    /// <summary> Embedding dependency types for vector search. </summary>
    internal readonly partial struct OnYourDataEmbeddingDependencyType : IEquatable<OnYourDataEmbeddingDependencyType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="OnYourDataEmbeddingDependencyType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public OnYourDataEmbeddingDependencyType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string EndpointValue = "Endpoint";
        private const string DeploymentNameValue = "DeploymentName";
        private const string ModelIdValue = "ModelId";

        /// <summary> Azure OpenAI Embedding endpoint URL. </summary>
        public static OnYourDataEmbeddingDependencyType Endpoint { get; } = new OnYourDataEmbeddingDependencyType(EndpointValue);
        /// <summary> Azure OpenAI Embedding deployment name. </summary>
        public static OnYourDataEmbeddingDependencyType DeploymentName { get; } = new OnYourDataEmbeddingDependencyType(DeploymentNameValue);
        /// <summary> The embedding model id defined in the search service. Currently only supported by Elasticsearch. </summary>
        public static OnYourDataEmbeddingDependencyType ModelId { get; } = new OnYourDataEmbeddingDependencyType(ModelIdValue);
        /// <summary> Determines if two <see cref="OnYourDataEmbeddingDependencyType"/> values are the same. </summary>
        public static bool operator ==(OnYourDataEmbeddingDependencyType left, OnYourDataEmbeddingDependencyType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="OnYourDataEmbeddingDependencyType"/> values are not the same. </summary>
        public static bool operator !=(OnYourDataEmbeddingDependencyType left, OnYourDataEmbeddingDependencyType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="OnYourDataEmbeddingDependencyType"/>. </summary>
        public static implicit operator OnYourDataEmbeddingDependencyType(string value) => new OnYourDataEmbeddingDependencyType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is OnYourDataEmbeddingDependencyType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(OnYourDataEmbeddingDependencyType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
