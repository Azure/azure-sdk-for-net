// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.OpenAI
{
    /// <summary> Preset values to control how the mode; responds to function calls. </summary>
    public readonly partial struct FunctionCallPreset : IEquatable<FunctionCallPreset>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="FunctionCallPreset"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public FunctionCallPreset(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AutoValue = "auto";
        private const string NoneValue = "none";

        /// <summary> Means the model can pick between an end-user or calling a function. </summary>
        public static FunctionCallPreset Auto { get; } = new FunctionCallPreset(AutoValue);
        /// <summary> Means the model does not call a function, and responds to the end-user. </summary>
        public static FunctionCallPreset None { get; } = new FunctionCallPreset(NoneValue);
        /// <summary> Determines if two <see cref="FunctionCallPreset"/> values are the same. </summary>
        public static bool operator ==(FunctionCallPreset left, FunctionCallPreset right) => left.Equals(right);
        /// <summary> Determines if two <see cref="FunctionCallPreset"/> values are not the same. </summary>
        public static bool operator !=(FunctionCallPreset left, FunctionCallPreset right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="FunctionCallPreset"/>. </summary>
        public static implicit operator FunctionCallPreset(string value) => new FunctionCallPreset(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is FunctionCallPreset other && Equals(other);
        /// <inheritdoc />
        public bool Equals(FunctionCallPreset other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
