// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    /// <summary> Model for the representation of a streaming delta for a single prompt completion. </summary>
    public partial class ChoiceChunk
    {
        /// <summary> Initializes a new instance of ChoiceChunk. </summary>
        /// <param name="text"> The generated text for a given completions prompt. </param>
        /// <param name="index"> The ordered index associated with this completions choice. </param>
        /// <param name="logProbabilityModel"> The log probabilities model for tokens associated with this completions choice. </param>
        /// <param name="finishReason"> Reason for finishing. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        internal ChoiceChunk(string text, int index, CompletionsLogProbabilityModel logProbabilityModel, CompletionsFinishReason? finishReason)
        {
            Argument.AssertNotNull(text, nameof(text));

            Text = text;
            Index = index;
            LogProbabilityModel = logProbabilityModel;
            FinishReason = finishReason;
        }

        /// <summary> Initializes a new instance of ChoiceChunk. </summary>
        /// <param name="text"> The generated text for a given completions prompt. </param>
        /// <param name="index"> The ordered index associated with this completions choice. </param>
        /// <param name="contentFilterResults">
        /// Information about the content filtering category (hate, sexual, violence, self_harm), if it
        /// has been detected, as well as the severity level (very_low, low, medium, high-scale that
        /// determines the intensity and risk level of harmful content) and if it has been filtered or not.
        /// </param>
        /// <param name="logProbabilityModel"> The log probabilities model for tokens associated with this completions choice. </param>
        /// <param name="finishReason"> Reason for finishing. </param>
        internal ChoiceChunk(string text, int index, ContentFilterResults contentFilterResults, CompletionsLogProbabilityModel logProbabilityModel, CompletionsFinishReason? finishReason)
        {
            Text = text;
            Index = index;
            ContentFilterResults = contentFilterResults;
            LogProbabilityModel = logProbabilityModel;
            FinishReason = finishReason;
        }

        /// <summary> The generated text for a given completions prompt. </summary>
        public string Text { get; }
        /// <summary> The ordered index associated with this completions choice. </summary>
        public int Index { get; }
        /// <summary>
        /// Information about the content filtering category (hate, sexual, violence, self_harm), if it
        /// has been detected, as well as the severity level (very_low, low, medium, high-scale that
        /// determines the intensity and risk level of harmful content) and if it has been filtered or not.
        /// </summary>
        public ContentFilterResults ContentFilterResults { get; }
        /// <summary> The log probabilities model for tokens associated with this completions choice. </summary>
        public CompletionsLogProbabilityModel LogProbabilityModel { get; }
        /// <summary> Reason for finishing. </summary>
        public CompletionsFinishReason? FinishReason { get; }
    }
}
