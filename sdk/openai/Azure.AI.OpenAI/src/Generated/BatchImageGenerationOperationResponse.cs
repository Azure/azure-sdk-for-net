// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    /// <summary> A polling status update or final response payload for an image operation. </summary>
    internal partial class BatchImageGenerationOperationResponse
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="BatchImageGenerationOperationResponse"/>. </summary>
        /// <param name="id"> The ID of the operation. </param>
        /// <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
        /// <param name="status"> The status of the operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        internal BatchImageGenerationOperationResponse(string id, DateTimeOffset created, AzureOpenAIOperationState status)
        {
            Argument.AssertNotNull(id, nameof(id));

            Id = id;
            Created = created;
            Status = status;
            _serializedAdditionalRawData = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="BatchImageGenerationOperationResponse"/>. </summary>
        /// <param name="id"> The ID of the operation. </param>
        /// <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
        /// <param name="expires"> A timestamp when this operation and its associated images expire and will be deleted (in unix epochs). </param>
        /// <param name="result"> The result of the operation if the operation succeeded. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="error"> The error if the operation failed. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal BatchImageGenerationOperationResponse(string id, DateTimeOffset created, long? expires, ImageGenerations result, AzureOpenAIOperationState status, ResponseError error, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            Created = created;
            Expires = expires;
            Result = result;
            Status = status;
            Error = error;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="BatchImageGenerationOperationResponse"/> for deserialization. </summary>
        internal BatchImageGenerationOperationResponse()
        {
        }

        /// <summary> The ID of the operation. </summary>
        public string Id { get; }
        /// <summary> A timestamp when this job or item was created (in unix epochs). </summary>
        public DateTimeOffset Created { get; }
        /// <summary> A timestamp when this operation and its associated images expire and will be deleted (in unix epochs). </summary>
        public long? Expires { get; }
        /// <summary> The result of the operation if the operation succeeded. </summary>
        public ImageGenerations Result { get; }
        /// <summary> The status of the operation. </summary>
        public AzureOpenAIOperationState Status { get; }
        /// <summary> The error if the operation failed. </summary>
        public ResponseError Error { get; }
    }
}
