// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    public partial class ChatChoiceChunk
    {
        internal static ChatChoiceChunk DeserializeChatChoiceChunk(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int index = default;
            Optional<ContentFilterResults> contentFilterResults = default;
            ChatMessageDelta delta = default;
            CompletionsFinishReason? finishReason = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("index"u8))
                {
                    index = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("content_filter_results"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    contentFilterResults = ContentFilterResults.DeserializeContentFilterResults(property.Value);
                    continue;
                }
                if (property.NameEquals("delta"u8))
                {
                    delta = ChatMessageDelta.DeserializeChatMessageDelta(property.Value);
                    continue;
                }
                if (property.NameEquals("finish_reason"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        finishReason = null;
                        continue;
                    }
                    finishReason = new CompletionsFinishReason(property.Value.GetString());
                    continue;
                }
            }
            return new ChatChoiceChunk(index, contentFilterResults.Value, delta, finishReason);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ChatChoiceChunk FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeChatChoiceChunk(document.RootElement);
        }
    }
}
