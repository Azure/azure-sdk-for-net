<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetEmbeddingsAsync(string,EmbeddingsOptions,CancellationToken)">
<example>
This sample shows how to call GetEmbeddingsAsync with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var embeddingsOptions = new EmbeddingsOptions(new string[] 
{
    "<null>"
})
{
    User = "<User>",
};
var result = await client.GetEmbeddingsAsync("<deploymentId>", embeddingsOptions);
]]></code>
</example>
    </member>
    <member name="GetEmbeddings(string,EmbeddingsOptions,CancellationToken)">
<example>
This sample shows how to call GetEmbeddings with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var embeddingsOptions = new EmbeddingsOptions(new string[] 
{
    "<null>"
})
{
    User = "<User>",
};
var result = client.GetEmbeddings("<deploymentId>", embeddingsOptions);
]]></code>
</example>
    </member>
    <member name="GetEmbeddingsAsync(string,RequestContent,RequestContext)">
    </member>
    <member name="GetEmbeddings(string,RequestContent,RequestContext)">
    </member>
    <member name="GetCompletionsAsync(string,CompletionsOptions,CancellationToken)">
<example>
This sample shows how to call GetCompletionsAsync with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var completionsOptions = new CompletionsOptions(new string[] 
{
    "<null>"
})
{
    MaxTokens = 1234,
    Temperature = 3.14f,
    NucleusSamplingFactor = 3.14f,
    User = "<User>",
    ChoicesPerPrompt = 1234,
    LogProbabilityCount = 1234,
    Echo = true,
    StopSequences = 
{
        "<null>"
    },
    PresencePenalty = 3.14f,
    FrequencyPenalty = 3.14f,
    GenerationSampleCount = 1234,
};
var result = await client.GetCompletionsAsync("<deploymentId>", completionsOptions);
]]></code>
</example>
    </member>
    <member name="GetCompletions(string,CompletionsOptions,CancellationToken)">
<example>
This sample shows how to call GetCompletions with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var completionsOptions = new CompletionsOptions(new string[] 
{
    "<null>"
})
{
    MaxTokens = 1234,
    Temperature = 3.14f,
    NucleusSamplingFactor = 3.14f,
    User = "<User>",
    ChoicesPerPrompt = 1234,
    LogProbabilityCount = 1234,
    Echo = true,
    StopSequences = 
{
        "<null>"
    },
    PresencePenalty = 3.14f,
    FrequencyPenalty = 3.14f,
    GenerationSampleCount = 1234,
};
var result = client.GetCompletions("<deploymentId>", completionsOptions);
]]></code>
</example>
    </member>
    <member name="GetCompletionsAsync(string,RequestContent,RequestContext)">
    </member>
    <member name="GetCompletions(string,RequestContent,RequestContext)">
    </member>
    <member name="GetChatCompletionsAsync(string,ChatCompletionsOptions,CancellationToken)">
<example>
This sample shows how to call GetChatCompletionsAsync with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var chatCompletionsOptions = new ChatCompletionsOptions(new ChatMessage[] 
{
    new ChatMessage(ChatRole.System)
{
        Content = "<Content>",
    }
})
{
    MaxTokens = 1234,
    Temperature = 3.14f,
    NucleusSamplingFactor = 3.14f,
    User = "<User>",
    ChoiceCount = 1234,
    StopSequences = 
{
        "<null>"
    },
    PresencePenalty = 3.14f,
    FrequencyPenalty = 3.14f,
};
var result = await client.GetChatCompletionsAsync("<deploymentId>", chatCompletionsOptions);
]]></code>
</example>
    </member>
    <member name="GetChatCompletions(string,ChatCompletionsOptions,CancellationToken)">
<example>
This sample shows how to call GetChatCompletions with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var chatCompletionsOptions = new ChatCompletionsOptions(new ChatMessage[] 
{
    new ChatMessage(ChatRole.System)
{
        Content = "<Content>",
    }
})
{
    MaxTokens = 1234,
    Temperature = 3.14f,
    NucleusSamplingFactor = 3.14f,
    User = "<User>",
    ChoiceCount = 1234,
    StopSequences = 
{
        "<null>"
    },
    PresencePenalty = 3.14f,
    FrequencyPenalty = 3.14f,
};
var result = client.GetChatCompletions("<deploymentId>", chatCompletionsOptions);
]]></code>
</example>
    </member>
    <member name="GetChatCompletionsAsync(string,RequestContent,RequestContext)">
    </member>
    <member name="GetChatCompletions(string,RequestContent,RequestContext)">
    </member>
    <member name="StartGenerateImageAsync(WaitUntil,ImageGenerationOptions,CancellationToken)">
<example>
This sample shows how to call StartGenerateImageAsync with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var imageGenerationOptions = new ImageGenerationOptions("<prompt>")
{
    N = 1234,
    Size = ImageSize.Size256x256,
    User = "<User>",
};
var operation = await client.StartGenerateImageAsync(WaitUntil.Completed, imageGenerationOptions);
]]></code>
</example>
    </member>
    <member name="StartGenerateImage(WaitUntil,ImageGenerationOptions,CancellationToken)">
<example>
This sample shows how to call StartGenerateImage with required parameters.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var imageGenerationOptions = new ImageGenerationOptions("<prompt>")
{
    N = 1234,
    Size = ImageSize.Size256x256,
    User = "<User>",
};
var operation = client.StartGenerateImage(WaitUntil.Completed, imageGenerationOptions);
]]></code>
</example>
    </member>
    <member name="StartGenerateImageAsync(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call StartGenerateImageAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var data = new {
    prompt = "<prompt>",
};

var operation = await client.StartGenerateImageAsync(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call StartGenerateImageAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var data = new {
    prompt = "<prompt>",
    n = 1234,
    size = "256x256",
    user = "<user>",
};

var operation = await client.StartGenerateImageAsync(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("expires").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code>
</example>
    </member>
    <member name="StartGenerateImage(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call StartGenerateImage with required parameters and request content, and how to parse the result.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var data = new {
    prompt = "<prompt>",
};

var operation = client.StartGenerateImage(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call StartGenerateImage with all parameters and request content, and how to parse the result.
<code><![CDATA[
var client = new OpenAIClient("<openAIApiKey>");

var data = new {
    prompt = "<prompt>",
    n = 1234,
    size = "256x256",
    user = "<user>",
};

var operation = client.StartGenerateImage(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("expires").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("created").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("data")[0].GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>