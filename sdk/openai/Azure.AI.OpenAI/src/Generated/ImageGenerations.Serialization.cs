// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure;
using System.ServiceModel.Rest;
using System.ServiceModel.Rest.Shared.Core.Serialization;
using System.Text.Json;

namespace Platform.OpenAI
{
    internal partial class ImageGenerations
    {
        internal static ImageGenerations DeserializeImageGenerations(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DateTimeOffset created = default;
            object data = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("created"u8))
                {
                    created = DateTimeOffset.FromUnixTimeSeconds(property.Value.GetInt64());
                    continue;
                }
                if (property.NameEquals("data"u8))
                {
                    data = property.Value.GetObject();
                    continue;
                }
            }
            return new ImageGenerations(created, data);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ImageGenerations FromResponse(Result response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeImageGenerations(document.RootElement);
        }
    }
}
