// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.AI.OpenAI;

namespace Azure.AI.OpenAI.Chat
{
    /// <summary>
    /// An additional property, added to chat completion response messages, produced by the Azure OpenAI service when using
    /// extension behavior. This includes intent and citation information from the On Your Data feature.
    /// </summary>
    public partial class ChatMessageContext
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ChatMessageContext"/>. </summary>
        internal ChatMessageContext() : this(null, null, null, null)
        {
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageContext"/>. </summary>
        /// <param name="intent"> The detected intent from the chat history, which is used to carry conversation context between interactions. </param>
        /// <param name="citations"> The citations produced by the data retrieval. </param>
        /// <param name="retrievedDocuments"> Summary information about documents retrieved by the data retrieval operation. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ChatMessageContext(string intent, IList<ChatCitation> citations, ChatRetrievedDocument retrievedDocuments, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            // Plugin customization: ensure initialization of collections
            Intent = intent;
            Citations = citations ?? new ChangeTrackingList<ChatCitation>();
            RetrievedDocuments = retrievedDocuments;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The detected intent from the chat history, which is used to carry conversation context between interactions. </summary>
        public string Intent { get; }

        /// <summary> The citations produced by the data retrieval. </summary>
        public IList<ChatCitation> Citations { get; }

        /// <summary></summary>
        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
