// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.OpenAI.Models
{
    /// <summary> Post body schema to create a prompt completion from a deployment. </summary>
    public partial class CompletionsOptions
    {
        /// <summary> Initializes a new instance of CompletionsOptions. </summary>
        public CompletionsOptions()
        {
            Prompt = new ChangeTrackingList<string>();
            LogitBias = new ChangeTrackingDictionary<string, int>();
            Stop = new ChangeTrackingList<string>();
        }

        /// <summary> Gets the prompt. </summary>
        public IList<string> Prompt { get; }
        /// <summary> Gets or sets the max tokens. </summary>
        public int? MaxTokens { get; set; }
        /// <summary> Gets or sets the temperature. </summary>
        public float? Temperature { get; set; }
        /// <summary> Gets or sets the top p. </summary>
        public float? TopP { get; set; }
        /// <summary> Gets the logit bias. </summary>
        public IDictionary<string, int> LogitBias { get; }
        /// <summary> Gets or sets the user. </summary>
        public string User { get; set; }
        /// <summary> Gets or sets the n. </summary>
        public int? N { get; set; }
        /// <summary> Gets or sets the logprobs. </summary>
        public int? Logprobs { get; set; }
        /// <summary> Gets or sets the model. </summary>
        public string Model { get; set; }
        /// <summary> Gets or sets the echo. </summary>
        public bool? Echo { get; set; }
        /// <summary> Gets the stop. </summary>
        public IList<string> Stop { get; }
        /// <summary> Gets or sets the completion config. </summary>
        public string CompletionConfig { get; set; }
        /// <summary> Gets or sets the cache level. </summary>
        public int? CacheLevel { get; set; }
        /// <summary> Gets or sets the presence penalty. </summary>
        public float? PresencePenalty { get; set; }
        /// <summary> Gets or sets the frequency penalty. </summary>
        public float? FrequencyPenalty { get; set; }
        /// <summary> Gets or sets the best of. </summary>
        public int? BestOf { get; set; }
    }
}
