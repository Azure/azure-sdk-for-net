// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using Azure.AI.OpenAI;

namespace Azure.AI.OpenAI.Chat
{
    internal readonly partial struct InternalAzureChatDataSourceKind : IEquatable<InternalAzureChatDataSourceKind>
    {
        private readonly string _value;
        private const string AzureSearchValue = "azure_search";
        private const string AzureCosmosDbValue = "azure_cosmos_db";
        private const string ElasticsearchValue = "elasticsearch";
        private const string PineconeValue = "pinecone";
        private const string MongoDbValue = "mongo_db";

        /// <summary> Initializes a new instance of <see cref="InternalAzureChatDataSourceKind"/>. </summary>
        /// <param name="value"> The value. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public InternalAzureChatDataSourceKind(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        /// <summary> Gets or sets the AzureSearch. </summary>
        internal static InternalAzureChatDataSourceKind AzureSearch { get; set; } = new InternalAzureChatDataSourceKind(AzureSearchValue);

        /// <summary> Gets or sets the AzureCosmosDb. </summary>
        internal static InternalAzureChatDataSourceKind AzureCosmosDb { get; set; } = new InternalAzureChatDataSourceKind(AzureCosmosDbValue);

        /// <summary> Gets or sets the Elasticsearch. </summary>
        internal static InternalAzureChatDataSourceKind Elasticsearch { get; set; } = new InternalAzureChatDataSourceKind(ElasticsearchValue);

        /// <summary> Gets or sets the Pinecone. </summary>
        internal static InternalAzureChatDataSourceKind Pinecone { get; set; } = new InternalAzureChatDataSourceKind(PineconeValue);

        /// <summary> Gets or sets the MongoDb. </summary>
        internal static InternalAzureChatDataSourceKind MongoDb { get; set; } = new InternalAzureChatDataSourceKind(MongoDbValue);

        /// <summary> Determines if two <see cref="InternalAzureChatDataSourceKind"/> values are the same. </summary>
        /// <param name="left"> The left value to compare. </param>
        /// <param name="right"> The right value to compare. </param>
        public static bool operator ==(InternalAzureChatDataSourceKind left, InternalAzureChatDataSourceKind right) => left.Equals(right);

        /// <summary> Determines if two <see cref="InternalAzureChatDataSourceKind"/> values are not the same. </summary>
        /// <param name="left"> The left value to compare. </param>
        /// <param name="right"> The right value to compare. </param>
        public static bool operator !=(InternalAzureChatDataSourceKind left, InternalAzureChatDataSourceKind right) => !left.Equals(right);

        /// <summary> Converts a string to a <see cref="InternalAzureChatDataSourceKind"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator InternalAzureChatDataSourceKind(string value) => new InternalAzureChatDataSourceKind(value);

        /// <inheritdoc/>
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalAzureChatDataSourceKind other && Equals(other);

        /// <inheritdoc/>
        public bool Equals(InternalAzureChatDataSourceKind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc/>
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        /// <inheritdoc/>
        public override string ToString() => _value;
    }
}
