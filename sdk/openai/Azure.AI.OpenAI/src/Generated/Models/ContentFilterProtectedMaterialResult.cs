// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    /// <summary> The ContentFilterProtectedMaterialResult. </summary>
    public partial class ContentFilterProtectedMaterialResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ContentFilterProtectedMaterialResult"/>. </summary>
        /// <param name="filtered"> Whether the content detection resulted in a content filtering action. </param>
        /// <param name="detected"> Whether the labeled content category was detected in the content. </param>
        internal ContentFilterProtectedMaterialResult(bool filtered, bool detected)
        {
            Filtered = filtered;
            Detected = detected;
        }

        /// <summary> Initializes a new instance of <see cref="ContentFilterProtectedMaterialResult"/>. </summary>
        /// <param name="filtered"> Whether the content detection resulted in a content filtering action. </param>
        /// <param name="detected"> Whether the labeled content category was detected in the content. </param>
        /// <param name="citation"> If available, the citation details describing the associated license and its location. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ContentFilterProtectedMaterialResult(bool filtered, bool detected, ContentFilterProtectedMaterialCitationResult citation, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Filtered = filtered;
            Detected = detected;
            Citation = citation;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Whether the content detection resulted in a content filtering action. </summary>
        public bool Filtered { get; }

        /// <summary> Whether the labeled content category was detected in the content. </summary>
        public bool Detected { get; }

        /// <summary> If available, the citation details describing the associated license and its location. </summary>
        public ContentFilterProtectedMaterialCitationResult Citation { get; }

        /// <summary></summary>
        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
