// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI.Chat
{
    /// <summary>
    /// A representation of a data vectorization source usable as an embedding resource with a data source.
    /// Please note this is the abstract base class. The derived classes available for instantiation are: 
    /// </summary>
    public abstract partial class DataSourceVectorizer
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DataSourceVectorizer"/>. </summary>
        /// <param name="kind"> The differentiating identifier for the concrete vectorization source. </param>
        private protected DataSourceVectorizer(InternalAzureChatDataSourceVectorizationSourceType kind)
        {
            Kind = kind;
        }

        /// <summary> Initializes a new instance of <see cref="DataSourceVectorizer"/>. </summary>
        /// <param name="kind"> The differentiating identifier for the concrete vectorization source. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DataSourceVectorizer(InternalAzureChatDataSourceVectorizationSourceType kind, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Kind = kind;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The differentiating identifier for the concrete vectorization source. </summary>
        internal InternalAzureChatDataSourceVectorizationSourceType Kind { get; set; }

        /// <summary></summary>
        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
