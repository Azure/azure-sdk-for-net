// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    public partial class AudioTranscription
    {
        internal static AudioTranscription DeserializeAudioTranscription(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<AudioTranscriptionTask> task = default;
            string text = default;
            Optional<string> language = default;
            Optional<TimeSpan> duration = default;
            Optional<IReadOnlyList<AudioTranscriptionSegment>> segments = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("task"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    task = new AudioTranscriptionTask(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("text"u8))
                {
                    text = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("language"u8))
                {
                    language = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("duration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    duration = TimeSpan.FromSeconds(property.Value.GetDouble());
                    continue;
                }
                if (property.NameEquals("segments"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AudioTranscriptionSegment> array = new List<AudioTranscriptionSegment>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AudioTranscriptionSegment.DeserializeAudioTranscriptionSegment(item));
                    }
                    segments = array;
                    continue;
                }
            }
            return new AudioTranscription(Optional.ToNullable(task), text, language.Value, Optional.ToNullable(duration), Optional.ToList(segments));
        }
    }
}
