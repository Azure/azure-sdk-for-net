// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    /// <summary> Expected response schema to completion request. </summary>
    public partial class Completions
    {
        /// <summary> Initializes a new instance of Completions. </summary>
        /// <param name="usage"> Usage counts for tokens input using the completions API. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="usage"/> is null. </exception>
        internal Completions(CompletionsUsage usage)
        {
            Argument.AssertNotNull(usage, nameof(usage));

            Choices = new ChangeTrackingList<Choice>();
            Usage = usage;
        }

        /// <summary> Initializes a new instance of Completions. </summary>
        /// <param name="id"> Id for completion response. </param>
        /// <param name="created"> Created time for completion response. </param>
        /// <param name="model"> Model used for completion response. </param>
        /// <param name="choices"> Array of choices returned containing text completions to prompts sent. </param>
        /// <param name="usage"> Usage counts for tokens input using the completions API. </param>
        internal Completions(string id, int? created, string model, IReadOnlyList<Choice> choices, CompletionsUsage usage)
        {
            Id = id;
            Created = created;
            Model = model;
            Choices = choices.ToList();
            Usage = usage;
        }

        /// <summary> Id for completion response. </summary>
        public string Id { get; }
        /// <summary> Object for completion response. </summary>
        internal string Object { get; } = "text_completion";

        /// <summary> Created time for completion response. </summary>
        public int? Created { get; }
        /// <summary> Model used for completion response. </summary>
        public string Model { get; }
        /// <summary> Array of choices returned containing text completions to prompts sent. </summary>
        public IReadOnlyList<Choice> Choices { get; }
        /// <summary> Usage counts for tokens input using the completions API. </summary>
        public CompletionsUsage Usage { get; }
    }
}
