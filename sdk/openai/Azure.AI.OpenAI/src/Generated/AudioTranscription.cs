// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    /// <summary> Transcription response. </summary>
    public partial class AudioTranscription
    {
        /// <summary> Initializes a new instance of AudioTranscription. </summary>
        /// <param name="text"> Transcribed text. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        internal AudioTranscription(string text)
        {
            Argument.AssertNotNull(text, nameof(text));

            Text = text;
            Segments = new ChangeTrackingList<AudioTranscriptionSegment>();
        }

        /// <summary> Initializes a new instance of AudioTranscription. </summary>
        /// <param name="task"> Audio transcription task. </param>
        /// <param name="text"> Transcribed text. </param>
        /// <param name="language"> Language detected in the source audio file. </param>
        /// <param name="duration"> Duration. </param>
        /// <param name="segments"> Segments. </param>
        internal AudioTranscription(AudioTranscriptionTask? task, string text, string language, TimeSpan? duration, IReadOnlyList<AudioTranscriptionSegment> segments)
        {
            Task = task;
            Text = text;
            Language = language;
            Duration = duration;
            Segments = segments;
        }
        /// <summary> Transcribed text. </summary>
        public string Text { get; }
        /// <summary> Language detected in the source audio file. </summary>
        public string Language { get; }
        /// <summary> Duration. </summary>
        public TimeSpan? Duration { get; }
        /// <summary> Segments. </summary>
        public IReadOnlyList<AudioTranscriptionSegment> Segments { get; }
    }
}
