// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.OpenAI
{
    internal static partial class SpeechVoiceExtensions
    {
        public static string ToSerialString(this SpeechVoice value) => value switch
        {
            SpeechVoice.Alloy => "alloy",
            SpeechVoice.Echo => "echo",
            SpeechVoice.Fable => "fable",
            SpeechVoice.Onyx => "onyx",
            SpeechVoice.Nova => "nova",
            SpeechVoice.Shimmer => "shimmer",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SpeechVoice value.")
        };

        public static SpeechVoice ToSpeechVoice(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "alloy")) return SpeechVoice.Alloy;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "echo")) return SpeechVoice.Echo;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "fable")) return SpeechVoice.Fable;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "onyx")) return SpeechVoice.Onyx;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "nova")) return SpeechVoice.Nova;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "shimmer")) return SpeechVoice.Shimmer;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SpeechVoice value.");
        }
    }
}
