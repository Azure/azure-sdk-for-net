// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    public partial class ChatChoice
    {
        internal static ChatChoice DeserializeChatChoice(JsonElement element)
        {
            ChatMessage message = default;
            ChatMessage streamingDeltaMessage = default;
            Optional<int?> index = default;
            Optional<string> finishReason = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("message"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    message = ChatMessage.DeserializeChatMessage(property.Value);
                    continue;
                }
                if (property.NameEquals("delta"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    streamingDeltaMessage = ChatMessage.DeserializeChatMessage(property.Value);
                    continue;
                }
                if (property.NameEquals("index"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        index = null;
                        continue;
                    }
                    index = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("finish_reason"u8))
                {
                    finishReason = property.Value.GetString();
                    continue;
                }
            }
            return new ChatChoice(message, streamingDeltaMessage, Optional.ToNullable(index), finishReason);
        }
    }
}
