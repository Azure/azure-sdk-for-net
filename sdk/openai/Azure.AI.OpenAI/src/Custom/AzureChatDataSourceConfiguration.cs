// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.OpenAI
{
    /// <summary>
    ///   A representation of configuration data for a single Azure OpenAI data source as used with chat extensions to
    ///   augment the behavior of a chat completions request. The use of this configuration is compatible only with
    ///   Azure OpenAI.
    /// </summary>
    public partial class AzureChatDataSourceConfiguration
    {
        /// <summary> Initializes a new instance of AzureChatDataSourceConfiguration. </summary>
        public AzureChatDataSourceConfiguration()
        {
        }

        /// <summary>  The label for the type of an Azure chat extension data source, corresponding to a matching Azure resource. </summary>
        public string Type { get; set; }
        /// <summary>
        ///   The configuration payload used for the data source, with structure and payload details specific to the data source
        ///   being specified.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Parameters { get; set; }
    }
}
