// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    [CodeGenSuppress("global::Azure.Core.IUtf8JsonSerializable.Write", typeof(Utf8JsonWriter))]
    public partial class ChatMessage : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("role"u8);
            writer.WriteStringValue(Role.ToString().ToLowerInvariant());
            writer.WritePropertyName("content"u8);
            writer.WriteStringValue(Content);
            writer.WriteEndObject();
        }

        internal static ChatMessage DeserializeChatMessage(JsonElement element)
        {
            ChatMessage result = new ChatMessage();
            foreach (JsonProperty property in element.EnumerateObject())
            {
                if (property.NameEquals("role"u8))
                {
                    result.Role = new ChatRole(property.Value.GetString());
                }
                else if (property.NameEquals("content"u8))
                {
                    result.Content = property.Value.GetString();
                }
            }
            return result;
        }
    }
}
