// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    /// <summary> Model factory for models. </summary>
    [CodeGenModel("AIOpenAIModelFactory")]
    public static partial class AzureOpenAIModelFactory
    {
        /// <summary> Initializes a new instance of ChatChoice. </summary>
        /// <param name="message"> The chat message associated with this chat completions choice </param>
        /// <param name="index"> The ordered index associated with this chat completions choice. </param>
        /// <param name="finishReason"> The reason that this chat completions choice completed its generated. </param>
        /// <param name="contentFilterResults"> The category annotations for this chat choice's content filtering </param>
        /// <returns> A new <see cref="OpenAI.ChatChoice"/> instance for mocking. </returns>
        public static ChatChoice ChatChoice(
            ChatMessage message = null,
            int index = default,
            ContentFilterResults contentFilterResults = null,
            CompletionsFinishReason finishReason = default)
        {
            return new ChatChoice(index, contentFilterResults, message, finishReason);
        }

        /// <summary>
        /// Initializes a new instance of StreamingCompletions for tests and mocking.
        /// </summary>
        /// <param name="baseCompletions"> The non-streaming completions to base this streaming representation on </param>
        /// <returns> A new instance of StreamingCompletions </returns>
        public static StreamingCompletions StreamingCompletions(
            CompletionsChunk baseCompletions = null)
        {
            return new StreamingCompletions(baseCompletions);
        }

        /// <summary>
        /// Initializes a new instance of StreamingChatCompletions for tests and mocking.
        /// </summary>
        /// <param name="baseChatCompletions"> The non-streaming completions to base this streaming representation on </param>
        /// <returns> A new instance of StreamingChatCompletions </returns>
        public static StreamingChatCompletions StreamingChatCompletions(
            ChatCompletionsChunk baseChatCompletions = null)
        {
            return new StreamingChatCompletions(baseChatCompletions);
        }
    }
}
