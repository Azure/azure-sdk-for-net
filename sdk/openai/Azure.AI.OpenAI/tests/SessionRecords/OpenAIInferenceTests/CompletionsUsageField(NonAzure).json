{
  "Entries": [
    {
      "RequestUri": "https://api.openai.com/v1/completions",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "107",
        "Content-Type": "application/json",
        "traceparent": "00-3cd6c0cd5434173c620e4eb3599af938-320e7dea8397a0a8-00",
        "User-Agent": "azsdk-net-AI.OpenAI/1.0.0-alpha.20230710.1 (.NET 6.0.18; Microsoft Windows 10.0.25393)",
        "x-ms-client-request-id": "3c73d9bf0a7e4501ef03d58138d3992f",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "prompt": [
          "Hello world",
          "This is a test"
        ],
        "max_tokens": 1024,
        "n": 3,
        "logprobs": 1,
        "model": "text-davinci-002"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Origin": "*",
        "Alt-Svc": "h3=\u0022:443\u0022",
        "Cache-Control": "must-revalidate, no-cache",
        "CF-Cache-Status": "DYNAMIC",
        "CF-RAY": "7e52313608eec388-SEA",
        "Connection": "keep-alive",
        "Content-Length": "47616",
        "Content-Type": "application/json",
        "Date": "Tue, 11 Jul 2023 15:48:46 GMT",
        "openai-model": "text-davinci-002",
        "openai-organization": "msft-finetuning-2",
        "openai-processing-ms": "4264",
        "openai-version": "2020-10-01",
        "Server": "cloudflare",
        "Strict-Transport-Security": "max-age=15724800; includeSubDomains",
        "x-ratelimit-limit-requests": "3000",
        "x-ratelimit-limit-tokens": "250000",
        "x-ratelimit-remaining-requests": "2999",
        "x-ratelimit-remaining-tokens": "243855",
        "x-ratelimit-reset-requests": "20ms",
        "x-ratelimit-reset-tokens": "1.474s",
        "X-Request-ID": "553fa3ef446d9b0971c03d726f2abe19"
      },
      "ResponseBody": {
        "id": "cmpl-7b9tS1auGF38S2n3mCG2jKGUwOddF",
        "object": "text_completion",
        "created": 1689090522,
        "model": "text-davinci-002",
        "choices": [
          {
            "text": "!\n\nI am here to learn and share my knowledge with others.",
            "index": 0,
            "logprobs": {
              "tokens": [
                "!",
                "\n",
                "\n",
                "I",
                " am",
                " here",
                " to",
                " learn",
                " and",
                " share",
                " my",
                " knowledge",
                " with",
                " others",
                "."
              ],
              "token_logprobs": [
                -1.6994733,
                -0.26401898,
                -0.2705745,
                -1.4739064,
                -0.23328787,
                -0.9614035,
                -0.009717579,
                -0.78502315,
                -0.7590569,
                -1.9782223,
                -0.26291218,
                -0.18450391,
                -0.7585954,
                -0.5180773,
                -0.10419704
              ],
              "top_logprobs": [
                {
                  "\n": -1.4576105
                },
                {
                  "\n": -0.26401898
                },
                {
                  "\n": -0.2705745
                },
                {
                  "My": -1.2935636
                },
                {
                  " am": -0.23328787
                },
                {
                  " here": -0.9614035
                },
                {
                  " to": -0.009717579
                },
                {
                  " learn": -0.78502315
                },
                {
                  " and": -0.7590569
                },
                {
                  " explore": -0.8538841
                },
                {
                  " my": -0.26291218
                },
                {
                  " knowledge": -0.18450391
                },
                {
                  " with": -0.7585954
                },
                {
                  " others": -0.5180773
                },
                {
                  ".": -0.10419704
                }
              ],
              "text_offset": [
                11,
                12,
                13,
                14,
                15,
                18,
                23,
                26,
                32,
                36,
                42,
                45,
                55,
                60,
                67
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": "!\n\nI am here to learn and explore new things with all of you!",
            "index": 1,
            "logprobs": {
              "tokens": [
                "!",
                "\n",
                "\n",
                "I",
                " am",
                " here",
                " to",
                " learn",
                " and",
                " explore",
                " new",
                " things",
                " with",
                " all",
                " of",
                " you",
                "!"
              ],
              "token_logprobs": [
                -1.6994733,
                -0.26301214,
                -0.27224424,
                -1.4751668,
                -0.23236246,
                -0.9529816,
                -0.009560806,
                -0.7864073,
                -0.7604131,
                -0.85330147,
                -1.3794104,
                -0.06047017,
                -3.876745,
                -0.7885679,
                -0.00013633883,
                -0.00025205011,
                -0.7310928
              ],
              "top_logprobs": [
                {
                  "\n": -1.4576105
                },
                {
                  "\n": -0.26301214
                },
                {
                  "\n": -0.27224424
                },
                {
                  "My": -1.2933983
                },
                {
                  " am": -0.23236246
                },
                {
                  " here": -0.9529816
                },
                {
                  " to": -0.009560806
                },
                {
                  " learn": -0.7864073
                },
                {
                  " and": -0.7604131
                },
                {
                  " explore": -0.85330147
                },
                {
                  ".": -1.1099275
                },
                {
                  " things": -0.06047017
                },
                {
                  ".": -0.36431977
                },
                {
                  " all": -0.7885679
                },
                {
                  " of": -0.00013633883
                },
                {
                  " you": -0.00025205011
                },
                {
                  ".": -0.6741851
                }
              ],
              "text_offset": [
                11,
                12,
                13,
                14,
                15,
                18,
                23,
                26,
                32,
                36,
                44,
                48,
                55,
                60,
                64,
                67,
                71
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": "\u0022 Test\n\nThis is a test\n\nThis is only a test.",
            "index": 2,
            "logprobs": {
              "tokens": [
                "\u0022",
                " Test",
                "\n",
                "\n",
                "This",
                " is",
                " a",
                " test",
                "\n",
                "\n",
                "This",
                " is",
                " only",
                " a",
                " test",
                "."
              ],
              "token_logprobs": [
                -2.9596384,
                -9.636658,
                -2.1268623,
                -0.6696782,
                -1.9230908,
                -0.2508704,
                -0.38059774,
                -0.40096888,
                -2.7479465,
                -0.041591357,
                -1.9773088,
                -0.006628182,
                -2.2451525,
                -0.000058725527,
                -0.00018462398,
                -1.0225209
              ],
              "top_logprobs": [
                {
                  "\n": -1.4576105
                },
                {
                  "\n": -0.5767316
                },
                {
                  "\n": -2.1268623
                },
                {
                  "\n": -0.6696782
                },
                {
                  "Hello": -1.7353086
                },
                {
                  " is": -0.2508704
                },
                {
                  " a": -0.38059774
                },
                {
                  " test": -0.40096888
                },
                {
                  ".": -1.169713
                },
                {
                  "\n": -0.041591357
                },
                {
                  "Hello": -0.35048342
                },
                {
                  " is": -0.006628182
                },
                {
                  " a": -0.13831308
                },
                {
                  " a": -0.000058725527
                },
                {
                  " test": -0.00018462398
                },
                {
                  "\u003C|endoftext|\u003E": -0.7228906
                }
              ],
              "text_offset": [
                11,
                12,
                17,
                18,
                19,
                23,
                26,
                28,
                33,
                34,
                35,
                39,
                42,
                47,
                49,
                54
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": "\n\nThis is a test.",
            "index": 3,
            "logprobs": {
              "tokens": [
                "\n",
                "\n",
                "This",
                " is",
                " a",
                " test",
                "."
              ],
              "token_logprobs": [
                -1.911686,
                -0.066857085,
                -0.036560018,
                -0.010175223,
                -0.11933109,
                -0.0028973063,
                -0.22401844
              ],
              "top_logprobs": [
                {
                  ".\u0022)": -0.8853279
                },
                {
                  "\n": -0.066857085
                },
                {
                  "This": -0.036560018
                },
                {
                  " is": -0.010175223
                },
                {
                  " a": -0.11933109
                },
                {
                  " test": -0.0028973063
                },
                {
                  ".": -0.22401844
                }
              ],
              "text_offset": [
                14,
                15,
                16,
                20,
                23,
                25,
                30
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": ".\u0022\ntxt.word_counts\n\n# returns a dictionary of words as keys with the # of\n# occurances as the values.\n\n# =\u003E {\u0022This\u0022=\u003E1, \u0022is\u0022=\u003E1, \u0022a\u0022=\u003E1, \u0022test\u0022=\u003E1}\n\u0060\u0060\u0060\n\n### String#sentence_count\n\n\u0060\u0060\u0060ruby\ntxt = \u0022This is a test.\u0022\ntxt.sentence_count\n\n# It counts the sentences. The definition of a sentence is pretty loose.\n# One could get the same result by calling \u0027#lines\u0027 on a file though.\n\n# =\u003E 1\n\u0060\u0060\u0060\n\n### Question represents a question that can be answered.\n\n\u0060\u0060\u0060ruby\nquestion = Question.new(\u0022How many days are in a year?\u0022, [\u0022365\u0022], \u0022Science\u0022)\nquestion.answer_list\n\n# =\u003E [365] \nquestion.category\n\n# =\u003E \u0022Science\u0022\nquestion.ask\n\n# returns a String, if the input is right, \u0022Right!\u0022 if not, \u0022Wrong!\u0022\nquestion.ask!\n\n# returns true if the input is right, false if not.\n\u0060\u0060\u0060",
            "index": 4,
            "logprobs": {
              "tokens": [
                ".\u0022",
                "\n",
                "txt",
                ".",
                "word",
                "_",
                "count",
                "s",
                "\n",
                "\n",
                "#",
                " returns",
                " a",
                " dictionary",
                " of",
                " words",
                " as",
                " keys",
                " with",
                " the",
                " #",
                " of",
                "\n",
                "#",
                " occur",
                "ances",
                " as",
                " the",
                " values",
                ".",
                "\n",
                "\n",
                "#",
                " =\u003E",
                " {\u0022",
                "This",
                "\u0022",
                "=\u003E",
                "1",
                ",",
                " \u0022",
                "is",
                "\u0022",
                "=\u003E",
                "1",
                ",",
                " \u0022",
                "a",
                "\u0022",
                "=\u003E",
                "1",
                ",",
                " \u0022",
                "test",
                "\u0022",
                "=\u003E",
                "1",
                "}",
                "\n",
                "\u0060\u0060",
                "\u0060",
                "\n",
                "\n",
                "###",
                " String",
                "#",
                "sent",
                "ence",
                "_",
                "count",
                "\n",
                "\n",
                "\u0060\u0060",
                "\u0060",
                "ruby",
                "\n",
                "txt",
                " =",
                " \u0022",
                "This",
                " is",
                " a",
                " test",
                ".\u0022",
                "\n",
                "txt",
                ".",
                "sent",
                "ence",
                "_",
                "count",
                "\n",
                "\n",
                "#",
                " It",
                " counts",
                " the",
                " sentences",
                ".",
                " The",
                " definition",
                " of",
                " a",
                " sentence",
                " is",
                " pretty",
                " loose",
                ".",
                "\n",
                "#",
                " One",
                " could",
                " get",
                " the",
                " same",
                " result",
                " by",
                " calling",
                " \u0027",
                "#",
                "lines",
                "\u0027",
                " on",
                " a",
                " file",
                " though",
                ".",
                "\n",
                "\n",
                "#",
                " =\u003E",
                " 1",
                "\n",
                "\u0060\u0060",
                "\u0060",
                "\n",
                "\n",
                "###",
                " Question",
                " represents",
                " a",
                " question",
                " that",
                " can",
                " be",
                " answered",
                ".",
                "\n",
                "\n",
                "\u0060\u0060",
                "\u0060",
                "ruby",
                "\n",
                "question",
                " =",
                " Question",
                ".",
                "new",
                "(\u0022",
                "How",
                " many",
                " days",
                " are",
                " in",
                " a",
                " year",
                "?\u0022,",
                " [\u0022",
                "365",
                "\u0022],",
                " \u0022",
                "Science",
                "\u0022)",
                "\n",
                "question",
                ".",
                "answer",
                "_",
                "list",
                "\n",
                "\n",
                "#",
                " =\u003E",
                " [",
                "365",
                "]",
                " ",
                "\n",
                "question",
                ".",
                "category",
                "\n",
                "\n",
                "#",
                " =\u003E",
                " \u0022",
                "Science",
                "\u0022",
                "\n",
                "question",
                ".",
                "ask",
                "\n",
                "\n",
                "#",
                " returns",
                " a",
                " String",
                ",",
                " if",
                " the",
                " input",
                " is",
                " right",
                ",",
                " \u0022",
                "Right",
                "!\u0022",
                " if",
                " not",
                ",",
                " \u0022",
                "Wr",
                "ong",
                "!\u0022",
                "\n",
                "question",
                ".",
                "ask",
                "!",
                "\n",
                "\n",
                "#",
                " returns",
                " true",
                " if",
                " the",
                " input",
                " is",
                " right",
                ",",
                " false",
                " if",
                " not",
                ".",
                "\n",
                "\u0060\u0060",
                "\u0060"
              ],
              "token_logprobs": [
                -4.033905,
                -1.1747295,
                -9.10472,
                -1.2425492,
                -6.2744823,
                -0.051542655,
                -0.06865795,
                -2.141143,
                -0.5386681,
                -1.0677464,
                -0.34416714,
                -5.2933,
                -0.3786177,
                -2.7791007,
                -0.3545755,
                -0.8185704,
                -3.3780375,
                -0.2504505,
                -2.6765125,
                -1.1270705,
                -4.5150666,
                -0.04489656,
                -4.071861,
                -0.012925744,
                -3.4972441,
                -0.067474395,
                -0.33064574,
                -1.1871406,
                -0.81677,
                -1.3207992,
                -0.19402187,
                -0.59523,
                -1.3361763,
                -2.041828,
                -0.17916362,
                -3.1399252,
                -0.16208123,
                -0.31290072,
                -0.0020851304,
                -0.009840967,
                -0.010744892,
                -0.02322197,
                -0.0000800667,
                -0.0010630885,
                -0.002499502,
                -0.00049479277,
                -0.00060941797,
                -0.123039715,
                -0.000059201422,
                -0.00021956058,
                -0.0007443922,
                -0.00045072404,
                -0.0011133307,
                -0.0015878917,
                -0.7713793,
                -0.000042153635,
                -0.00041154944,
                -0.0024563589,
                -0.19977075,
                -0.8974354,
                -0.0004368883,
                -0.085627414,
                -0.05864246,
                -1.2761606,
                -3.5344982,
                -0.20620532,
                -2.8638968,
                -0.6090097,
                -0.018681278,
                -0.021527302,
                -0.7925362,
                -0.21396925,
                -1.4079971,
                -0.0001895134,
                -0.07218681,
                -0.0010864197,
                -0.17221399,
                -0.018845137,
                -0.02734619,
                -0.07548403,
                -0.025160795,
                -0.051510647,
                -0.035379067,
                -0.91879684,
                -0.0014030179,
                -0.014722881,
                -0.0005435153,
                -0.0052361037,
                -0.0123419175,
                -0.00003881579,
                -0.00014408647,
                -0.021900818,
                -0.090860344,
                -0.008112069,
                -7.0595465,
                -2.178505,
                -0.81024456,
                -1.4664983,
                -2.0045438,
                -4.3777084,
                -2.7096634,
                -0.07049352,
                -0.15026094,
                -0.097504355,
                -1.0275383,
                -3.558295,
                -2.6151671,
                -0.7841482,
                -0.20911139,
                -0.40486252,
                -6.6697006,
                -1.9510157,
                -3.4257548,
                -5.0903683,
                -0.6850245,
                -0.69599444,
                -0.8070628,
                -2.222551,
                -5.633123,
                -3.684754,
                -3.3842192,
                -1.0064373,
                -1.0528096,
                -1.3824759,
                -3.9221103,
                -8.123069,
                -0.28432006,
                -0.019033505,
                -0.34619844,
                -0.01588204,
                -0.089756005,
                -0.024079386,
                -0.008756138,
                -0.0689454,
                -0.000079946556,
                -0.031195968,
                -0.0038934066,
                -0.06278139,
                -11.870233,
                -12.244246,
                -0.2869504,
                -0.72227496,
                -3.5273435,
                -0.8646307,
                -0.104209416,
                -2.15384,
                -0.9533824,
                -0.07494681,
                -0.025492504,
                -0.9690605,
                -0.000082807564,
                -0.010137768,
                -0.0010883289,
                -1.1313335,
                -0.05528517,
                -0.32238623,
                -0.013741633,
                -0.03831069,
                -0.62435186,
                -2.569511,
                -0.62910193,
                -2.984145,
                -0.42522717,
                -0.14148644,
                -0.17372033,
                -0.7323108,
                -1.4430718,
                -2.386168,
                -0.30687243,
                -3.267327,
                -0.5523805,
                -3.1927443,
                -0.24127443,
                -0.004442087,
                -0.53442425,
                -0.0068383883,
                -2.386103,
                -1.681784,
                -4.572673,
                -0.42462748,
                -0.47732437,
                -0.013665192,
                -0.5974909,
                -2.5518935,
                -1.5235674,
                -0.09526939,
                -6.0770087,
                -0.5273301,
                -1.9766432,
                -0.0020488768,
                -1.5917951,
                -0.043463413,
                -0.055148806,
                -0.0007807199,
                -0.018128498,
                -0.24098863,
                -0.004860011,
                -0.0052630655,
                -0.095692754,
                -0.8931948,
                -0.0015494456,
                -1.5069032,
                -0.25126773,
                -0.056546412,
                -0.007702594,
                -3.9023728,
                -0.8534832,
                -4.013321,
                -3.4272761,
                -6.206314,
                -0.71345705,
                -1.6713074,
                -0.73808295,
                -4.7669034,
                -1.0029892,
                -4.060667,
                -2.5984209,
                -0.78768057,
                -2.3870103,
                -0.6610996,
                -0.37208724,
                -0.23436497,
                -0.2609993,
                -0.00006015603,
                -0.52446294,
                -0.04373182,
                -3.1579418,
                -0.015016592,
                -0.92656595,
                -3.2683651,
                -0.06068752,
                -0.018604279,
                -0.001339691,
                -0.51767766,
                -0.91234344,
                -0.5277693,
                -0.36614692,
                -0.17589627,
                -0.14886317,
                -0.24785006,
                -0.11784146,
                -0.32291183,
                -0.23581295,
                -0.12079685,
                -0.5925684,
                -0.056034427,
                -0.31701145,
                -0.00014408647
              ],
              "top_logprobs": [
                {
                  ".\u0022)": -0.8853279
                },
                {
                  "\n": -1.1747295
                },
                {
                  "\n": -0.754772
                },
                {
                  " =": -1.0739871
                },
                {
                  "split": -1.6684152
                },
                {
                  "_": -0.051542655
                },
                {
                  "count": -0.06865795
                },
                {
                  "\n": -0.620869
                },
                {
                  "\n": -0.5386681
                },
                {
                  "#": -0.7214825
                },
                {
                  "#": -0.34416714
                },
                {
                  "=\u003E": -0.86321175
                },
                {
                  " a": -0.3786177
                },
                {
                  " hash": -0.24016123
                },
                {
                  " of": -0.3545755
                },
                {
                  " words": -0.8185704
                },
                {
                  " and": -0.14524029
                },
                {
                  " keys": -0.2504505
                },
                {
                  " and": -0.23087963
                },
                {
                  " their": -0.81176096
                },
                {
                  " number": -0.96433425
                },
                {
                  " of": -0.04489656
                },
                {
                  " times": -0.63210326
                },
                {
                  "#": -0.012925744
                },
                {
                  " times": -0.5721689
                },
                {
                  "ances": -0.067474395
                },
                {
                  " as": -0.33064574
                },
                {
                  " values": -0.5067608
                },
                {
                  " values": -0.81677
                },
                {
                  "\n": -0.4564337
                },
                {
                  "\n": -0.19402187
                },
                {
                  "\n": -0.59523
                },
                {
                  "#": -1.3361763
                },
                {
                  " {": -1.6381569
                },
                {
                  " {\u0022": -0.17916362
                },
                {
                  "this": -0.2892965
                },
                {
                  "\u0022": -0.16208123
                },
                {
                  "=\u003E": -0.31290072
                },
                {
                  "1": -0.0020851304
                },
                {
                  ",": -0.009840967
                },
                {
                  " \u0022": -0.010744892
                },
                {
                  "is": -0.02322197
                },
                {
                  "\u0022": -0.0000800667
                },
                {
                  "=\u003E": -0.0010630885
                },
                {
                  "1": -0.002499502
                },
                {
                  ",": -0.00049479277
                },
                {
                  " \u0022": -0.00060941797
                },
                {
                  "a": -0.123039715
                },
                {
                  "\u0022": -0.000059201422
                },
                {
                  "=\u003E": -0.00021956058
                },
                {
                  "1": -0.0007443922
                },
                {
                  ",": -0.00045072404
                },
                {
                  " \u0022": -0.0011133307
                },
                {
                  "test": -0.0015878917
                },
                {
                  ".\u0022": -0.62158763
                },
                {
                  "=\u003E": -0.000042153635
                },
                {
                  "1": -0.00041154944
                },
                {
                  "}": -0.0024563589
                },
                {
                  "\n": -0.19977075
                },
                {
                  "\n": -0.77638924
                },
                {
                  "\u0060": -0.0004368883
                },
                {
                  "\n": -0.085627414
                },
                {
                  "\n": -0.05864246
                },
                {
                  "##": -1.1239151
                },
                {
                  " \u0060": -1.8535385
                },
                {
                  "#": -0.20620532
                },
                {
                  "word": -1.8545852
                },
                {
                  "ence": -0.6090097
                },
                {
                  "_": -0.018681278
                },
                {
                  "count": -0.021527302
                },
                {
                  "s": -0.63282347
                },
                {
                  "\n": -0.21396925
                },
                {
                  "Returns": -1.2297164
                },
                {
                  "\u0060": -0.0001895134
                },
                {
                  "ruby": -0.07218681
                },
                {
                  "\n": -0.0010864197
                },
                {
                  "txt": -0.17221399
                },
                {
                  " =": -0.018845137
                },
                {
                  " \u0022": -0.02734619
                },
                {
                  "This": -0.07548403
                },
                {
                  " is": -0.025160795
                },
                {
                  " a": -0.051510647
                },
                {
                  " test": -0.035379067
                },
                {
                  ".": -0.58248556
                },
                {
                  "\n": -0.0014030179
                },
                {
                  "txt": -0.014722881
                },
                {
                  ".": -0.0005435153
                },
                {
                  "sent": -0.0052361037
                },
                {
                  "ence": -0.0123419175
                },
                {
                  "_": -0.00003881579
                },
                {
                  "count": -0.00014408647
                },
                {
                  "\n": -0.021900818
                },
                {
                  "\n": -0.090860344
                },
                {
                  "#": -0.008112069
                },
                {
                  " returns": -0.28102994
                },
                {
                  " returns": -1.4693488
                },
                {
                  " the": -0.81024456
                },
                {
                  " number": -0.5045243
                },
                {
                  " in": -0.8207582
                },
                {
                  "\n": -0.5840468
                },
                {
                  " sentences": -2.461665
                },
                {
                  " of": -0.07049352
                },
                {
                  " a": -0.15026094
                },
                {
                  " sentence": -0.097504355
                },
                {
                  "\n": -0.7968197
                },
                {
                  "\n": -0.84546125
                },
                {
                  "\n": -0.60384995
                },
                {
                  ".": -0.7841482
                },
                {
                  "\n": -0.20911139
                },
                {
                  "#": -0.40486252
                },
                {
                  " It": -0.96319866
                },
                {
                  " or": -1.4147217
                },
                {
                  " argue": -0.9098529
                },
                {
                  " pretty": -1.3963372
                },
                {
                  " same": -0.6850245
                },
                {
                  " result": -0.69599444
                },
                {
                  " by": -0.8070628
                },
                {
                  " splitting": -1.5497673
                },
                {
                  " t": -0.79497135
                },
                {
                  "txt": -0.52711177
                },
                {
                  "split": -0.44329363
                },
                {
                  "\u0027": -1.0064373
                },
                {
                  " on": -1.0528096
                },
                {
                  " the": -0.34148687
                },
                {
                  " string": -0.30787927
                },
                {
                  ".": -1.2649305
                },
                {
                  ".": -0.28432006
                },
                {
                  "\n": -0.019033505
                },
                {
                  "\n": -0.34619844
                },
                {
                  "#": -0.01588204
                },
                {
                  " =\u003E": -0.089756005
                },
                {
                  " 1": -0.024079386
                },
                {
                  "\n": -0.008756138
                },
                {
                  "\u0060\u0060": -0.0689454
                },
                {
                  "\u0060": -0.000079946556
                },
                {
                  "\n": -0.031195968
                },
                {
                  "\n": -0.0038934066
                },
                {
                  "###": -0.06278139
                },
                {
                  " String": -0.024532404
                },
                {
                  "#": -1.4702294
                },
                {
                  " a": -0.2869504
                },
                {
                  " question": -0.72227496
                },
                {
                  "\n": -1.7724422
                },
                {
                  " can": -0.8646307
                },
                {
                  " be": -0.104209416
                },
                {
                  " asked": -0.47204697
                },
                {
                  ".": -0.9533824
                },
                {
                  "\n": -0.07494681
                },
                {
                  "\n": -0.025492504
                },
                {
                  "\u0060\u0060": -0.9690605
                },
                {
                  "\u0060": -0.000082807564
                },
                {
                  "ruby": -0.010137768
                },
                {
                  "\n": -0.0010883289
                },
                {
                  "q": -1.0788909
                },
                {
                  " =": -0.05528517
                },
                {
                  " Question": -0.32238623
                },
                {
                  ".": -0.013741633
                },
                {
                  "new": -0.03831069
                },
                {
                  "(\u0022": -0.62435186
                },
                {
                  "What": -0.82370126
                },
                {
                  " many": -0.62910193
                },
                {
                  " states": -2.0506403
                },
                {
                  " are": -0.42522717
                },
                {
                  " in": -0.14148644
                },
                {
                  " a": -0.17372033
                },
                {
                  " year": -0.7323108
                },
                {
                  "?\u0022": -0.36388913
                },
                {
                  " \u0022": -0.5607305
                },
                {
                  "365": -0.30687243
                },
                {
                  "\u0022,": -0.38964254
                },
                {
                  " \u0022": -0.5523805
                },
                {
                  "365": -1.2547982
                },
                {
                  "\u0022)": -0.24127443
                },
                {
                  "\n": -0.004442087
                },
                {
                  "question": -0.53442425
                },
                {
                  ".": -0.0068383883
                },
                {
                  "ask": -1.4642813
                },
                {
                  "\n": -0.892116
                },
                {
                  "correct": -0.9062655
                },
                {
                  "\n": -0.42462748
                },
                {
                  "\n": -0.47732437
                },
                {
                  "#": -0.013665192
                },
                {
                  " =\u003E": -0.5974909
                },
                {
                  " [\u0022": -0.15057291
                },
                {
                  "[\u0022": -1.3098004
                },
                {
                  "]": -0.09526939
                },
                {
                  "\n": -0.025193559
                },
                {
                  "\n": -0.5273301
                },
                {
                  "\u0060\u0060": -0.6594322
                },
                {
                  ".": -0.0020488768
                },
                {
                  "question": -1.3429012
                },
                {
                  "\n": -0.043463413
                },
                {
                  "\n": -0.055148806
                },
                {
                  "#": -0.0007807199
                },
                {
                  " =\u003E": -0.018128498
                },
                {
                  " \u0022": -0.24098863
                },
                {
                  "Science": -0.004860011
                },
                {
                  "\u0022": -0.0052630655
                },
                {
                  "\n": -0.095692754
                },
                {
                  "\u0060\u0060": -0.74564236
                },
                {
                  ".": -0.0015494456
                },
                {
                  "ask": -1.5069032
                },
                {
                  "\n": -0.25126773
                },
                {
                  "\n": -0.056546412
                },
                {
                  "#": -0.007702594
                },
                {
                  " =\u003E": -0.77442485
                },
                {
                  " a": -0.8534832
                },
                {
                  " string": -0.9004084
                },
                {
                  " that": -1.5879999
                },
                {
                  " the": -1.3362855
                },
                {
                  " the": -0.71345705
                },
                {
                  " input": -1.6713074
                },
                {
                  " is": -0.73808295
                },
                {
                  " correct": -1.5769681
                },
                {
                  ",": -1.0029892
                },
                {
                  " it": -0.9024392
                },
                {
                  "Correct": -0.7488839
                },
                {
                  "!\u0022": -0.78768057
                },
                {
                  " is": -1.1557509
                },
                {
                  " not": -0.6610996
                },
                {
                  ",": -0.37208724
                },
                {
                  " \u0022": -0.23436497
                },
                {
                  "Wr": -0.2609993
                },
                {
                  "ong": -0.00006015603
                },
                {
                  "!\u0022": -0.52446294
                },
                {
                  "\n": -0.04373182
                },
                {
                  "\u0060\u0060": -0.63299096
                },
                {
                  ".": -0.015016592
                },
                {
                  "ask": -0.92656595
                },
                {
                  "(\u0022": -1.1199385
                },
                {
                  "\n": -0.06068752
                },
                {
                  "\n": -0.018604279
                },
                {
                  "#": -0.001339691
                },
                {
                  " returns": -0.51767766
                },
                {
                  " true": -0.91234344
                },
                {
                  " if": -0.5277693
                },
                {
                  " the": -0.36614692
                },
                {
                  " input": -0.17589627
                },
                {
                  " is": -0.14886317
                },
                {
                  " right": -0.24785006
                },
                {
                  ",": -0.11784146
                },
                {
                  " false": -0.32291183
                },
                {
                  " if": -0.23581295
                },
                {
                  " not": -0.12079685
                },
                {
                  ".": -0.5925684
                },
                {
                  "\n": -0.056034427
                },
                {
                  "\u0060\u0060": -0.31701145
                },
                {
                  "\u0060": -0.00014408647
                }
              ],
              "text_offset": [
                14,
                16,
                17,
                20,
                21,
                25,
                26,
                31,
                32,
                33,
                34,
                35,
                43,
                45,
                56,
                59,
                65,
                68,
                73,
                78,
                82,
                84,
                87,
                88,
                89,
                95,
                100,
                103,
                107,
                114,
                115,
                116,
                117,
                118,
                121,
                124,
                128,
                129,
                131,
                132,
                133,
                135,
                137,
                138,
                140,
                141,
                142,
                144,
                145,
                146,
                148,
                149,
                150,
                152,
                156,
                157,
                159,
                160,
                161,
                162,
                164,
                165,
                166,
                167,
                170,
                177,
                178,
                182,
                186,
                187,
                192,
                193,
                194,
                196,
                197,
                201,
                202,
                205,
                207,
                209,
                213,
                216,
                218,
                223,
                225,
                226,
                229,
                230,
                234,
                238,
                239,
                244,
                245,
                246,
                247,
                250,
                257,
                261,
                271,
                272,
                276,
                287,
                290,
                292,
                301,
                304,
                311,
                317,
                318,
                319,
                320,
                324,
                330,
                334,
                338,
                343,
                350,
                353,
                361,
                363,
                364,
                369,
                370,
                373,
                375,
                380,
                387,
                388,
                389,
                390,
                391,
                394,
                396,
                397,
                399,
                400,
                401,
                402,
                405,
                414,
                425,
                427,
                436,
                441,
                445,
                448,
                457,
                458,
                459,
                460,
                462,
                463,
                467,
                468,
                476,
                478,
                487,
                488,
                491,
                493,
                496,
                501,
                506,
                510,
                513,
                515,
                520,
                523,
                526,
                529,
                532,
                534,
                541,
                543,
                544,
                552,
                553,
                559,
                560,
                564,
                565,
                566,
                567,
                570,
                572,
                575,
                576,
                577,
                578,
                586,
                587,
                595,
                596,
                597,
                598,
                601,
                603,
                610,
                611,
                612,
                620,
                621,
                624,
                625,
                626,
                627,
                635,
                637,
                644,
                645,
                648,
                652,
                658,
                661,
                667,
                668,
                670,
                675,
                677,
                680,
                684,
                685,
                687,
                689,
                692,
                694,
                695,
                703,
                704,
                707,
                708,
                709,
                710,
                711,
                719,
                724,
                727,
                731,
                737,
                740,
                746,
                747,
                753,
                756,
                760,
                761,
                762,
                764
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": ".\u0027, \u0027This\u0027, \u0027is\u0027)\n\nprint find_word(\u0027This is a test.\u0027, \u0027is\u0027, \u0027a\u0027)\n\nprint find_word(\u0027This is a test.\u0027, \u0027test.\u0027, \u0027a\u0027)\n\nprint find_word(\u0027This is a test.\u0027, \u0027This is a test.\u0027, \u0027test.\u0027)\n\nprint find_word(\u0027This is a test.\u0027, \u0027This is a test.\u0027, \u0027This is a test.\u0027)",
            "index": 5,
            "logprobs": {
              "tokens": [
                ".\u0027",
                ",",
                " \u0027",
                "This",
                "\u0027,",
                " \u0027",
                "is",
                "\u0027)",
                "\n",
                "\n",
                "print",
                " find",
                "_",
                "word",
                "(\u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ",",
                " \u0027",
                "is",
                "\u0027,",
                " \u0027",
                "a",
                "\u0027)",
                "\n",
                "\n",
                "print",
                " find",
                "_",
                "word",
                "(\u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ",",
                " \u0027",
                "test",
                ".\u0027",
                ",",
                " \u0027",
                "a",
                "\u0027)",
                "\n",
                "\n",
                "print",
                " find",
                "_",
                "word",
                "(\u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ",",
                " \u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ",",
                " \u0027",
                "test",
                ".\u0027",
                ")",
                "\n",
                "\n",
                "print",
                " find",
                "_",
                "word",
                "(\u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ",",
                " \u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ",",
                " \u0027",
                "This",
                " is",
                " a",
                " test",
                ".\u0027",
                ")"
              ],
              "token_logprobs": [
                -4.12804,
                -2.1105857,
                -1.2293347,
                -0.8009371,
                -2.0652947,
                -0.13076438,
                -0.272515,
                -3.5081315,
                -0.78854686,
                -1.1288832,
                -3.0688148,
                -3.6100583,
                -0.25656214,
                -1.0797808,
                -0.6657781,
                -0.37096226,
                -0.008385395,
                -0.003968324,
                -0.016559854,
                -0.016671002,
                -0.005435231,
                -0.00897996,
                -1.2228004,
                -0.019359542,
                -0.024625259,
                -0.13836326,
                -0.0066967662,
                -0.23103365,
                -0.035682373,
                -0.031334087,
                -0.011650361,
                -0.00104143,
                -0.018925313,
                -0.013070847,
                -0.1371292,
                -0.0013877978,
                -0.0016625172,
                -0.0096132215,
                -0.0035391096,
                -0.0017603181,
                -0.0017036555,
                -0.04071624,
                -0.2056065,
                -0.062906556,
                -0.48907542,
                -2.9280798,
                -0.0015932017,
                -0.30813822,
                -0.036994122,
                -0.027650071,
                -0.007391083,
                -0.00042222187,
                -0.0034770828,
                -0.006263622,
                -0.011649637,
                -0.0012555382,
                -0.0010209638,
                -0.0071610715,
                -0.0022749705,
                -0.0026335393,
                -0.0011462107,
                -0.37406263,
                -0.5246878,
                -0.0058255694,
                -0.011548873,
                -0.0023273039,
                -0.0027100984,
                -0.03060987,
                -1.6069539,
                -0.06725909,
                -0.001203261,
                -0.33994013,
                -0.05650825,
                -0.08117928,
                -0.039917935,
                -0.0007071137,
                -0.008985254,
                -0.011526626,
                -0.1947871,
                -0.002153526,
                -0.0012230111,
                -0.004193296,
                -0.0037551904,
                -0.0016304567,
                -0.0023395515,
                -0.29616198,
                -0.018395713,
                -0.0060727852,
                -0.0056609525,
                -0.0058798264,
                -0.0043139127,
                -0.024011614,
                -0.72523165,
                -0.08772963,
                -0.004993826,
                -0.006390006,
                -0.0024552841,
                -0.0013618319
              ],
              "top_logprobs": [
                {
                  ".\u0022)": -0.8853279
                },
                {
                  ")": -1.3566045
                },
                {
                  "\n": -0.9657684
                },
                {
                  "This": -0.8009371
                },
                {
                  " is": -0.2757394
                },
                {
                  " \u0027": -0.13076438
                },
                {
                  "is": -0.272515
                },
                {
                  "\u0027,": -0.19581
                },
                {
                  "\n": -0.78854686
                },
                {
                  "\n": -1.1288832
                },
                {
                  "This": -1.5231
                },
                {
                  "(": -0.9775082
                },
                {
                  "_": -0.25656214
                },
                {
                  "word": -1.0797808
                },
                {
                  "(\u0027": -0.6657781
                },
                {
                  "This": -0.37096226
                },
                {
                  " is": -0.008385395
                },
                {
                  " a": -0.003968324
                },
                {
                  " test": -0.016559854
                },
                {
                  ".\u0027": -0.016671002
                },
                {
                  ",": -0.005435231
                },
                {
                  " \u0027": -0.00897996
                },
                {
                  "is": -1.2228004
                },
                {
                  "\u0027,": -0.019359542
                },
                {
                  " \u0027": -0.024625259
                },
                {
                  "a": -0.13836326
                },
                {
                  "\u0027)": -0.0066967662
                },
                {
                  "\n": -0.23103365
                },
                {
                  "\n": -0.035682373
                },
                {
                  "print": -0.031334087
                },
                {
                  " find": -0.011650361
                },
                {
                  "_": -0.00104143
                },
                {
                  "word": -0.018925313
                },
                {
                  "(\u0027": -0.013070847
                },
                {
                  "This": -0.1371292
                },
                {
                  " is": -0.0013877978
                },
                {
                  " a": -0.0016625172
                },
                {
                  " test": -0.0096132215
                },
                {
                  ".\u0027": -0.0035391096
                },
                {
                  ",": -0.0017603181
                },
                {
                  " \u0027": -0.0017036555
                },
                {
                  "test": -0.04071624
                },
                {
                  ".\u0027": -0.2056065
                },
                {
                  ",": -0.062906556
                },
                {
                  " \u0027": -0.48907542
                },
                {
                  "This": -0.08182158
                },
                {
                  "\u0027)": -0.0015932017
                },
                {
                  "\n": -0.30813822
                },
                {
                  "\n": -0.036994122
                },
                {
                  "print": -0.027650071
                },
                {
                  " find": -0.007391083
                },
                {
                  "_": -0.00042222187
                },
                {
                  "word": -0.0034770828
                },
                {
                  "(\u0027": -0.006263622
                },
                {
                  "This": -0.011649637
                },
                {
                  " is": -0.0012555382
                },
                {
                  " a": -0.0010209638
                },
                {
                  " test": -0.0071610715
                },
                {
                  ".\u0027": -0.0022749705
                },
                {
                  ",": -0.0026335393
                },
                {
                  " \u0027": -0.0011462107
                },
                {
                  "This": -0.37406263
                },
                {
                  " is": -0.5246878
                },
                {
                  " a": -0.0058255694
                },
                {
                  " test": -0.011548873
                },
                {
                  ".\u0027": -0.0023273039
                },
                {
                  ",": -0.0027100984
                },
                {
                  " \u0027": -0.03060987
                },
                {
                  "a": -0.34296924
                },
                {
                  ".\u0027": -0.06725909
                },
                {
                  ")": -0.001203261
                },
                {
                  "\n": -0.33994013
                },
                {
                  "\n": -0.05650825
                },
                {
                  "print": -0.08117928
                },
                {
                  " find": -0.039917935
                },
                {
                  "_": -0.0007071137
                },
                {
                  "word": -0.008985254
                },
                {
                  "(\u0027": -0.011526626
                },
                {
                  "This": -0.1947871
                },
                {
                  " is": -0.002153526
                },
                {
                  " a": -0.0012230111
                },
                {
                  " test": -0.004193296
                },
                {
                  ".\u0027": -0.0037551904
                },
                {
                  ",": -0.0016304567
                },
                {
                  " \u0027": -0.0023395515
                },
                {
                  "This": -0.29616198
                },
                {
                  " is": -0.018395713
                },
                {
                  " a": -0.0060727852
                },
                {
                  " test": -0.0056609525
                },
                {
                  ".\u0027": -0.0058798264
                },
                {
                  ",": -0.0043139127
                },
                {
                  " \u0027": -0.024011614
                },
                {
                  "This": -0.72523165
                },
                {
                  " is": -0.08772963
                },
                {
                  " a": -0.004993826
                },
                {
                  " test": -0.006390006
                },
                {
                  ".\u0027": -0.0024552841
                },
                {
                  ")": -0.0013618319
                }
              ],
              "text_offset": [
                14,
                16,
                17,
                19,
                23,
                25,
                27,
                29,
                31,
                32,
                33,
                38,
                43,
                44,
                48,
                50,
                54,
                57,
                59,
                64,
                66,
                67,
                69,
                71,
                73,
                75,
                76,
                78,
                79,
                80,
                85,
                90,
                91,
                95,
                97,
                101,
                104,
                106,
                111,
                113,
                114,
                116,
                120,
                122,
                123,
                125,
                126,
                128,
                129,
                130,
                135,
                140,
                141,
                145,
                147,
                151,
                154,
                156,
                161,
                163,
                164,
                166,
                170,
                173,
                175,
                180,
                182,
                183,
                185,
                189,
                191,
                192,
                193,
                194,
                199,
                204,
                205,
                209,
                211,
                215,
                218,
                220,
                225,
                227,
                228,
                230,
                234,
                237,
                239,
                244,
                246,
                247,
                249,
                253,
                256,
                258,
                263,
                265
              ]
            },
            "finish_reason": "stop"
          }
        ],
        "usage": {
          "prompt_tokens": 6,
          "completion_tokens": 401,
          "total_tokens": 407
        }
      }
    },
    {
      "RequestUri": "https://api.openai.com/v1/completions",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "107",
        "Content-Type": "application/json",
        "traceparent": "00-3cd6c0cd5434173c620e4eb3599af938-320e7dea8397a0a8-00",
        "User-Agent": "azsdk-net-AI.OpenAI/1.0.0-alpha.20230710.1 (.NET 6.0.18; Microsoft Windows 10.0.25393)",
        "x-ms-client-request-id": "3c73d9bf0a7e4501ef03d58138d3992f",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "prompt": [
          "Hello world",
          "This is a test"
        ],
        "max_tokens": 1024,
        "n": 3,
        "logprobs": 1,
        "model": "text-davinci-002"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Origin": "*",
        "Alt-Svc": "h3=\u0022:443\u0022",
        "Cache-Control": "must-revalidate, no-cache",
        "CF-Cache-Status": "DYNAMIC",
        "CF-RAY": "7e523151e93cc388-SEA",
        "Connection": "keep-alive",
        "Content-Length": "68278",
        "Content-Type": "application/json",
        "Date": "Tue, 11 Jul 2023 15:48:50 GMT",
        "openai-model": "text-davinci-002",
        "openai-organization": "msft-finetuning-2",
        "openai-processing-ms": "3642",
        "openai-version": "2020-10-01",
        "Server": "cloudflare",
        "Strict-Transport-Security": "max-age=15724800; includeSubDomains",
        "x-ratelimit-limit-requests": "3000",
        "x-ratelimit-limit-tokens": "250000",
        "x-ratelimit-remaining-requests": "2999",
        "x-ratelimit-remaining-tokens": "243855",
        "x-ratelimit-reset-requests": "20ms",
        "x-ratelimit-reset-tokens": "1.474s",
        "X-Request-ID": "ef684b74bea7e3d68e94e8f7b0c1a4f3"
      },
      "ResponseBody": {
        "id": "cmpl-7b9tXUJGglspticQ5HgFA3EbSysCE",
        "object": "text_completion",
        "created": 1689090527,
        "model": "text-davinci-002",
        "choices": [
          {
            "text": " it\u0027s me\u0022 do\n\u002B    \u0022Hello world, it\u0027s me!\u0022\n\u002B  end\n\u002Bend\n",
            "index": 0,
            "logprobs": {
              "tokens": [
                " it",
                "\u0027s",
                " me",
                "\u0022",
                " do",
                "\n",
                "\u002B",
                "   ",
                " \u0022",
                "Hello",
                " world",
                ",",
                " it",
                "\u0027s",
                " me",
                "!\u0022",
                "\n",
                "\u002B",
                " ",
                " end",
                "\n",
                "\u002B",
                "end",
                "\n"
              ],
              "token_logprobs": [
                -8.086022,
                -0.39499065,
                -1.1966162,
                -3.5825076,
                -6.057645,
                -0.034228563,
                -1.6730746,
                -0.65382415,
                -3.6566982,
                -0.10223918,
                -0.26246387,
                -0.97051865,
                -0.022226388,
                -0.003055372,
                -0.19485967,
                -1.6001427,
                -0.006252825,
                -0.031103425,
                -0.03777877,
                -0.00038554877,
                -0.004290087,
                -0.05687646,
                -0.59396666,
                -0.004622374
              ],
              "top_logprobs": [
                {
                  "\n": -1.4572629
                },
                {
                  "\u0027s": -0.39499065
                },
                {
                  " me": -1.1966162
                },
                {
                  "\n": -1.3920949
                },
                {
                  "\n": -0.25602394
                },
                {
                  "\n": -0.034228563
                },
                {
                  "   ": -1.0148667
                },
                {
                  "   ": -0.65382415
                },
                {
                  " assert": -1.1789302
                },
                {
                  "Hello": -0.10223918
                },
                {
                  " world": -0.26246387
                },
                {
                  " it": -0.77852875
                },
                {
                  " it": -0.022226388
                },
                {
                  "\u0027s": -0.003055372
                },
                {
                  " me": -0.19485967
                },
                {
                  ".\u0022": -0.847708
                },
                {
                  "\n": -0.006252825
                },
                {
                  "\u002B": -0.031103425
                },
                {
                  " ": -0.03777877
                },
                {
                  " end": -0.00038554877
                },
                {
                  "\n": -0.004290087
                },
                {
                  "\u002B": -0.05687646
                },
                {
                  "end": -0.59396666
                },
                {
                  "\n": -0.004622374
                }
              ],
              "text_offset": [
                11,
                14,
                16,
                19,
                20,
                23,
                24,
                25,
                28,
                30,
                35,
                41,
                42,
                45,
                47,
                50,
                52,
                53,
                54,
                55,
                59,
                60,
                61,
                64
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": ",\n\nWelcome to the awesome world of programming! We are excited to have you here.\n\nIn this world, there are many different languages to learn, each with their own syntax and quirks. But don\u0027t worry, with a bit of practice, you will be writing code like a pro in no time.\n\nThere are also many different IDEs (Integrated Development Environments) to choose from depending on your operating system and preferences. Some IDEs are more sophisticated than others, but they all essentially serve the same purpose: to provide a text editor and other tools to help you write and run your code.\n\nSo what are you waiting for? Let\u0027s get started!",
            "index": 1,
            "logprobs": {
              "tokens": [
                ",",
                "\n",
                "\n",
                "Welcome",
                " to",
                " the",
                " awesome",
                " world",
                " of",
                " programming",
                "!",
                " We",
                " are",
                " excited",
                " to",
                " have",
                " you",
                " here",
                ".",
                "\n",
                "\n",
                "In",
                " this",
                " world",
                ",",
                " there",
                " are",
                " many",
                " different",
                " languages",
                " to",
                " learn",
                ",",
                " each",
                " with",
                " their",
                " own",
                " syntax",
                " and",
                " quirks",
                ".",
                " But",
                " don",
                "\u0027t",
                " worry",
                ",",
                " with",
                " a",
                " bit",
                " of",
                " practice",
                ",",
                " you",
                " will",
                " be",
                " writing",
                " code",
                " like",
                " a",
                " pro",
                " in",
                " no",
                " time",
                ".",
                "\n",
                "\n",
                "There",
                " are",
                " also",
                " many",
                " different",
                " ID",
                "Es",
                " (",
                "Integ",
                "rated",
                " Development",
                " En",
                "vironments",
                ")",
                " to",
                " choose",
                " from",
                " depending",
                " on",
                " your",
                " operating",
                " system",
                " and",
                " preferences",
                ".",
                " Some",
                " ID",
                "Es",
                " are",
                " more",
                " sophisticated",
                " than",
                " others",
                ",",
                " but",
                " they",
                " all",
                " essentially",
                " serve",
                " the",
                " same",
                " purpose",
                ":",
                " to",
                " provide",
                " a",
                " text",
                " editor",
                " and",
                " other",
                " tools",
                " to",
                " help",
                " you",
                " write",
                " and",
                " run",
                " your",
                " code",
                ".",
                "\n",
                "\n",
                "So",
                " what",
                " are",
                " you",
                " waiting",
                " for",
                "?",
                " Let",
                "\u0027s",
                " get",
                " started",
                "!"
              ],
              "token_logprobs": [
                -3.6606529,
                -1.7689342,
                -0.04528465,
                -2.2590818,
                -0.016678518,
                -2.392762,
                -9.44306,
                -0.028341373,
                -0.002788694,
                -0.42932212,
                -0.48075297,
                -2.5911863,
                -0.3894857,
                -0.33293575,
                -0.049763028,
                -0.014101613,
                -0.00018939328,
                -0.2672459,
                -0.90051115,
                -0.57377774,
                -5.79217e-6,
                -1.455435,
                -0.27993557,
                -0.012076434,
                -4.9586424e-6,
                -0.40431526,
                -0.113951586,
                -0.02743808,
                -0.54992205,
                -0.61455345,
                -2.0746086,
                -2.8936648,
                -0.41513985,
                -0.5304233,
                -0.005083623,
                -0.15858398,
                -7.1062755e-6,
                -5.0166097,
                -0.057259306,
                -1.2113489,
                -6.5092986e-6,
                -0.57864934,
                -0.0040758057,
                -0.00006408898,
                -0.745304,
                -9.251094e-6,
                -0.91246957,
                -0.05744154,
                -4.117169,
                -6.827632e-8,
                -0.060286563,
                -0.004215862,
                -0.0023087843,
                -0.83395725,
                -0.010247179,
                -1.5483351,
                -0.011958556,
                -0.005072842,
                -6.827632e-8,
                -0.000027371756,
                -1.7400124e-6,
                0.0,
                0.0,
                -0.019649701,
                -0.000015327929,
                -9.846204e-6,
                -1.8228476,
                -0.051318005,
                -0.28003225,
                -0.0031695126,
                -0.0016352325,
                -1.4655361,
                -0.0001226242,
                -0.00035227832,
                -0.29756397,
                -6.827632e-8,
                -0.00012918444,
                -0.007076789,
                -6.6619094e-7,
                -0.0028035194,
                -1.3357763,
                -0.006613003,
                -5.460492e-7,
                -4.536296,
                0.0,
                -0.051675897,
                -0.1579351,
                -1.8841804e-7,
                -0.006205204,
                -0.86330265,
                -3.883893e-6,
                -0.16633825,
                -3.6563842,
                -0.00011583212,
                -0.00052031653,
                -0.6142808,
                -5.7311745,
                -0.00012024191,
                -6.827632e-8,
                -0.39641327,
                -0.08318481,
                -0.09253399,
                -5.197998e-6,
                -0.8127199,
                -0.22273703,
                0.0,
                -1.8841804e-7,
                -0.000037863996,
                -0.103775814,
                -0.0008354827,
                -0.47598627,
                -0.7907281,
                -0.9812867,
                -0.000026060465,
                -0.050190113,
                -1.1444184,
                -0.0069102254,
                -0.005629183,
                -0.013896584,
                -0.0088592,
                -0.00021252633,
                -0.06088755,
                -0.19400059,
                -0.42265192,
                -0.0021530474,
                -0.00002045765,
                -0.000022126573,
                -6.6294406e-6,
                -0.5635124,
                -0.43123785,
                -0.00006373136,
                -1.8841804e-7,
                -5.79217e-6,
                0.0,
                -5.460492e-7,
                -4.625419,
                -6.827632e-8,
                -0.0011950243,
                -0.0015751148,
                -0.0011288456
              ],
              "top_logprobs": [
                {
                  "\n": -1.4572629
                },
                {
                  "\n": -1.7689342
                },
                {
                  "\n": -0.04528465
                },
                {
                  "I": -0.8824006
                },
                {
                  " to": -0.016678518
                },
                {
                  " my": -0.7406041
                },
                {
                  " world": -0.6301803
                },
                {
                  " world": -0.028341373
                },
                {
                  " of": -0.002788694
                },
                {
                  " programming": -0.42932212
                },
                {
                  "!": -0.48075297
                },
                {
                  "\u003C|endoftext|\u003E": -1.3628072
                },
                {
                  " are": -0.3894857
                },
                {
                  " excited": -0.33293575
                },
                {
                  " to": -0.049763028
                },
                {
                  " have": -0.014101613
                },
                {
                  " you": -0.00018939328
                },
                {
                  " here": -0.2672459
                },
                {
                  ".": -0.90051115
                },
                {
                  "\n": -0.57377774
                },
                {
                  "\n": -5.79217e-6
                },
                {
                  "This": -1.0375787
                },
                {
                  " this": -0.27993557
                },
                {
                  " world": -0.012076434
                },
                {
                  ",": -4.9586424e-6
                },
                {
                  " there": -0.40431526
                },
                {
                  " are": -0.113951586
                },
                {
                  " many": -0.02743808
                },
                {
                  " different": -0.54992205
                },
                {
                  " languages": -0.61455345
                },
                {
                  " that": -0.20800853
                },
                {
                  " choose": -0.057780847
                },
                {
                  ",": -0.41513985
                },
                {
                  " each": -0.5304233
                },
                {
                  " with": -0.005083623
                },
                {
                  " their": -0.15858398
                },
                {
                  " own": -7.1062755e-6
                },
                {
                  " unique": -0.47378594
                },
                {
                  " and": -0.057259306
                },
                {
                  " rules": -1.0465521
                },
                {
                  ".": -6.5092986e-6
                },
                {
                  " But": -0.57864934
                },
                {
                  " don": -0.0040758057
                },
                {
                  "\u0027t": -0.00006408898
                },
                {
                  " let": -0.6452291
                },
                {
                  ",": -9.251094e-6
                },
                {
                  " with": -0.91246957
                },
                {
                  " a": -0.05744154
                },
                {
                  " little": -0.016434118
                },
                {
                  " of": -6.827632e-8
                },
                {
                  " practice": -0.060286563
                },
                {
                  ",": -0.004215862
                },
                {
                  " you": -0.0023087843
                },
                {
                  "\u0027ll": -0.5697552
                },
                {
                  " be": -0.010247179
                },
                {
                  " able": -0.26758486
                },
                {
                  " code": -0.011958556
                },
                {
                  " like": -0.005072842
                },
                {
                  " a": -6.827632e-8
                },
                {
                  " pro": -0.000027371756
                },
                {
                  " in": -1.7400124e-6
                },
                {
                  " no": 0.0
                },
                {
                  " time": 0.0
                },
                {
                  ".": -0.019649701
                },
                {
                  "\n": -0.000015327929
                },
                {
                  "\n": -9.846204e-6
                },
                {
                  "One": -0.98448783
                },
                {
                  " are": -0.051318005
                },
                {
                  " also": -0.28003225
                },
                {
                  " many": -0.0031695126
                },
                {
                  " different": -0.0016352325
                },
                {
                  " ways": -1.1033813
                },
                {
                  "Es": -0.0001226242
                },
                {
                  " (": -0.00035227832
                },
                {
                  "Integ": -0.29756397
                },
                {
                  "rated": -6.827632e-8
                },
                {
                  " Development": -0.00012918444
                },
                {
                  " En": -0.007076789
                },
                {
                  "vironments": -6.6619094e-7
                },
                {
                  ")": -0.0028035194
                },
                {
                  " that": -1.3294057
                },
                {
                  " choose": -0.006613003
                },
                {
                  " from": -5.460492e-7
                },
                {
                  ",": -0.5224258
                },
                {
                  " on": 0.0
                },
                {
                  " your": -0.051675897
                },
                {
                  " operating": -0.1579351
                },
                {
                  " system": -1.8841804e-7
                },
                {
                  " and": -0.006205204
                },
                {
                  " what": -0.6464829
                },
                {
                  ".": -3.883893e-6
                },
                {
                  " Some": -0.16633825
                },
                {
                  " popular": -0.15750591
                },
                {
                  "Es": -0.00011583212
                },
                {
                  " are": -0.00052031653
                },
                {
                  " more": -0.6142808
                },
                {
                  " feature": -0.7147176
                },
                {
                  " than": -0.00012024191
                },
                {
                  " others": -6.827632e-8
                },
                {
                  ",": -0.39641327
                },
                {
                  " but": -0.08318481
                },
                {
                  " they": -0.09253399
                },
                {
                  " all": -5.197998e-6
                },
                {
                  " essentially": -0.8127199
                },
                {
                  " serve": -0.22273703
                },
                {
                  " the": 0.0
                },
                {
                  " same": -1.8841804e-7
                },
                {
                  " purpose": -0.000037863996
                },
                {
                  ":": -0.103775814
                },
                {
                  " to": -0.0008354827
                },
                {
                  " provide": -0.47598627
                },
                {
                  " you": -0.605082
                },
                {
                  " text": -0.9812867
                },
                {
                  " editor": -0.000026060465
                },
                {
                  " and": -0.050190113
                },
                {
                  " other": -1.1444184
                },
                {
                  " tools": -0.0069102254
                },
                {
                  " to": -0.005629183
                },
                {
                  " help": -0.013896584
                },
                {
                  " you": -0.0088592
                },
                {
                  " write": -0.00021252633
                },
                {
                  " and": -0.06088755
                },
                {
                  " run": -0.19400059
                },
                {
                  " your": -0.42265192
                },
                {
                  " code": -0.0021530474
                },
                {
                  ".": -0.00002045765
                },
                {
                  "\n": -0.000022126573
                },
                {
                  "\n": -6.6294406e-6
                },
                {
                  "So": -0.5635124
                },
                {
                  " what": -0.43123785
                },
                {
                  " are": -0.00006373136
                },
                {
                  " you": -1.8841804e-7
                },
                {
                  " waiting": -5.79217e-6
                },
                {
                  " for": 0.0
                },
                {
                  "?": -5.460492e-7
                },
                {
                  " Start": -0.40930337
                },
                {
                  "\u0027s": -6.827632e-8
                },
                {
                  " get": -0.0011950243
                },
                {
                  " started": -0.0015751148
                },
                {
                  "!": -0.0011288456
                }
              ],
              "text_offset": [
                11,
                12,
                13,
                14,
                21,
                24,
                28,
                36,
                42,
                45,
                57,
                58,
                61,
                65,
                73,
                76,
                81,
                85,
                90,
                91,
                92,
                93,
                95,
                100,
                106,
                107,
                113,
                117,
                122,
                132,
                142,
                145,
                151,
                152,
                157,
                162,
                168,
                172,
                179,
                183,
                190,
                191,
                195,
                199,
                201,
                207,
                208,
                213,
                215,
                219,
                222,
                231,
                232,
                236,
                241,
                244,
                252,
                257,
                262,
                264,
                268,
                271,
                274,
                279,
                280,
                281,
                282,
                287,
                291,
                296,
                301,
                311,
                314,
                316,
                318,
                323,
                328,
                340,
                343,
                353,
                354,
                357,
                364,
                369,
                379,
                382,
                387,
                397,
                404,
                408,
                420,
                421,
                426,
                429,
                431,
                435,
                440,
                454,
                459,
                466,
                467,
                471,
                476,
                480,
                492,
                498,
                502,
                507,
                515,
                516,
                519,
                527,
                529,
                534,
                541,
                545,
                551,
                557,
                560,
                565,
                569,
                575,
                579,
                583,
                588,
                593,
                594,
                595,
                596,
                598,
                603,
                607,
                611,
                619,
                623,
                624,
                628,
                630,
                634,
                642
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": "\n\nhello!\n\nI am just testing this out.",
            "index": 2,
            "logprobs": {
              "tokens": [
                "\n",
                "\n",
                "hello",
                "!",
                "\n",
                "\n",
                "I",
                " am",
                " just",
                " testing",
                " this",
                " out",
                "."
              ],
              "token_logprobs": [
                -1.4572629,
                -0.117962375,
                -4.084417,
                -3.7258577,
                -0.62228966,
                -0.011449871,
                -1.4650759,
                -0.15567389,
                -3.6838062,
                -2.5698552,
                -0.15871592,
                -0.0016607271,
                -0.37564474
              ],
              "top_logprobs": [
                {
                  "\n": -1.4572629
                },
                {
                  "\n": -0.117962375
                },
                {
                  "Hello": -1.2856894
                },
                {
                  " world": -1.3358872
                },
                {
                  "\n": -0.62228966
                },
                {
                  "\n": -0.011449871
                },
                {
                  "I": -1.4650759
                },
                {
                  " am": -0.15567389
                },
                {
                  " here": -0.31614023
                },
                {
                  " here": -1.1653256
                },
                {
                  " this": -0.15871592
                },
                {
                  " out": -0.0016607271
                },
                {
                  ".": -0.37564474
                }
              ],
              "text_offset": [
                11,
                12,
                13,
                18,
                19,
                20,
                21,
                22,
                25,
                30,
                38,
                43,
                47
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": ".\u0022)\n  \u0022Hello, 37. You are reading a test.\u0022)\n\n(ert-info (\u0022Go To Definition tests\u0022))\n(write-region session-header \u0022#include \u003Cstdio.h\u003E\\nint main(void) {\u0022)\n(write-region \u0022int input = 5;\u0022 \u0027point-max test-file-c)\n(let ((cdb (compdb-guess-project-root (current-buffer))))\n  (compdb-unload-db cdb)\n  (compdb-load-db cdb\n\t\t  (list\n\t\t   (format \u0022%s --cflags --cflags-after=\u0027-Iinclude\u0027 --libs -o /dev/null\u0022 gcc-executable)))\n\n  (with-current-buffer test-file-c\n    (should (and (search-forward \u0022fprintf\u0022)\n\t\t (gotodev-goto-definition)))\n    (should (not (search-forward \u0022fprintf\u0022)\n\t\t (gotodev-goto-definition)))\n    (should (search-forward \u0022input\u0022)\n\t    (gotodev-goto-definition))))",
            "index": 3,
            "logprobs": {
              "tokens": [
                ".\u0022)",
                "\n",
                " ",
                " \u0022",
                "Hello",
                ",",
                " 37",
                ".",
                " You",
                " are",
                " reading",
                " a",
                " test",
                ".\u0022)",
                "\n",
                "\n",
                "(",
                "ert",
                "-",
                "info",
                " (\u0022",
                "Go",
                " To",
                " Definition",
                " tests",
                "\u0022))",
                "\n",
                "(",
                "write",
                "-",
                "region",
                " session",
                "-",
                "header",
                " \u0022#",
                "include",
                " \u003C",
                "std",
                "io",
                ".",
                "h",
                "\u003E",
                "\\",
                "n",
                "int",
                " main",
                "(",
                "void",
                ")",
                " {",
                "\u0022)",
                "\n",
                "(",
                "write",
                "-",
                "region",
                " \u0022",
                "int",
                " input",
                " =",
                " 5",
                ";\u0022",
                " \u0027",
                "point",
                "-",
                "max",
                " test",
                "-",
                "file",
                "-",
                "c",
                ")",
                "\n",
                "(",
                "let",
                " ((",
                "c",
                "db",
                " (",
                "comp",
                "db",
                "-",
                "gu",
                "ess",
                "-",
                "project",
                "-",
                "root",
                " (",
                "current",
                "-",
                "buffer",
                "))))",
                "\n",
                " ",
                " (",
                "comp",
                "db",
                "-",
                "un",
                "load",
                "-",
                "db",
                " c",
                "db",
                ")",
                "\n",
                " ",
                " (",
                "comp",
                "db",
                "-",
                "load",
                "-",
                "db",
                " c",
                "db",
                "\n",
                "\t",
                "\t",
                " ",
                " (",
                "list",
                "\n",
                "\t",
                "\t",
                "  ",
                " (",
                "format",
                " \u0022%",
                "s",
                " --",
                "c",
                "flags",
                " --",
                "c",
                "flags",
                "-",
                "after",
                "=\u0027",
                "-",
                "I",
                "include",
                "\u0027",
                " --",
                "lib",
                "s",
                " -",
                "o",
                " /",
                "dev",
                "/",
                "null",
                "\u0022",
                " gcc",
                "-",
                "exec",
                "utable",
                ")))",
                "\n\n",
                " ",
                " (",
                "with",
                "-",
                "current",
                "-",
                "buffer",
                " test",
                "-",
                "file",
                "-",
                "c",
                "\n",
                "   ",
                " (",
                "should",
                " (",
                "and",
                " (",
                "search",
                "-",
                "forward",
                " \u0022",
                "f",
                "printf",
                "\u0022)",
                "\n",
                "\t",
                "\t",
                " (",
                "got",
                "ode",
                "v",
                "-",
                "g",
                "oto",
                "-",
                "definition",
                ")))",
                "\n",
                "   ",
                " (",
                "should",
                " (",
                "not",
                " (",
                "search",
                "-",
                "forward",
                " \u0022",
                "f",
                "printf",
                "\u0022)",
                "\n",
                "\t",
                "\t",
                " (",
                "got",
                "ode",
                "v",
                "-",
                "g",
                "oto",
                "-",
                "definition",
                ")))",
                "\n",
                "   ",
                " (",
                "should",
                " (",
                "search",
                "-",
                "forward",
                " \u0022",
                "input",
                "\u0022)",
                "\n",
                "\t",
                "   ",
                " (",
                "got",
                "ode",
                "v",
                "-",
                "g",
                "oto",
                "-",
                "definition",
                "))))"
              ],
              "token_logprobs": [
                -0.8836757,
                -0.22491229,
                -2.899174,
                -4.575335,
                -3.1665237,
                -1.0601618,
                -12.867151,
                -2.2802763,
                -3.7810564,
                -1.1912988,
                -3.750175,
                -0.60795957,
                -0.35601315,
                -0.45530513,
                -0.055711597,
                -0.20762055,
                -0.3198899,
                -1.1431999,
                -0.007295734,
                -2.7202053,
                -0.035714805,
                -8.033509,
                -2.5250835,
                -1.1901145,
                -6.1558304,
                -1.9011557,
                -0.005334074,
                -0.5817012,
                -8.2667465,
                -0.033843756,
                -2.0325718,
                -13.975265,
                -0.12812294,
                -5.1937246,
                -2.698981,
                -3.3314893,
                -0.20583408,
                -0.94481117,
                -0.08206657,
                -0.007347672,
                -0.0009225819,
                -0.36917138,
                -0.37170795,
                -0.0064717117,
                -1.7179039,
                -0.85398155,
                -0.77230376,
                -1.1254619,
                -0.25444543,
                -1.4737533,
                -3.757942,
                -0.07249886,
                -0.1706407,
                -1.2392343,
                -0.0006916062,
                -0.040252965,
                -0.517595,
                -1.2369872,
                -8.392598,
                -0.9147878,
                -2.9114635,
                -0.94519204,
                -4.6140323,
                -0.9064978,
                -0.030929986,
                -0.3414534,
                -4.517699,
                -0.08219638,
                -0.48089942,
                -1.6522282,
                -3.1316936,
                -0.09001104,
                -0.0030185413,
                -0.08780825,
                -2.1379278,
                -0.29702878,
                -2.948879,
                -2.4044724,
                -0.27333817,
                -3.562712,
                -0.89563435,
                -0.036863253,
                -6.829259,
                -0.00796696,
                -0.048356026,
                -0.5663059,
                -2.0641112,
                -0.037003092,
                -1.8503227,
                -4.808497,
                -0.0001614947,
                -0.025294848,
                -0.2598374,
                -0.004715373,
                -0.015554757,
                -0.023304943,
                -1.2309707,
                -0.030489728,
                -0.059103135,
                -6.562141,
                -0.38826108,
                -0.12542534,
                -2.279344,
                -0.22686103,
                -0.00019046802,
                -0.15059209,
                -0.006766255,
                -0.002540554,
                -0.008080943,
                -0.3006205,
                -0.0008960331,
                -0.019275319,
                -0.14886469,
                -0.00217712,
                -0.012744983,
                -0.04832318,
                -0.000055149267,
                -6.088079,
                -2.3832006,
                -0.0154398,
                -0.65874803,
                -0.48599353,
                -1.5585946,
                -1.5351064,
                -0.020212144,
                -0.0002423942,
                -0.007707579,
                -0.24832541,
                -3.0353985,
                -1.9313604,
                -0.048024144,
                -2.3066864,
                -3.7011874,
                -0.37190515,
                -1.0529224,
                -1.522492,
                -0.22426338,
                -0.003841887,
                -1.8153085,
                -1.8567041,
                -0.20817249,
                -1.4236182,
                -6.3519325,
                -0.96064335,
                -0.49836224,
                -0.55485564,
                -0.0007692674,
                -3.6407044,
                -2.3132088,
                -3.6216338,
                -0.49497223,
                -0.0003599105,
                -0.008486799,
                -1.0116739,
                -3.598579,
                -0.24658018,
                -0.28481042,
                -0.050603032,
                -1.2678722,
                -3.8167918,
                -0.02430184,
                -0.088948876,
                -2.1571708,
                -0.00021860692,
                -0.14235808,
                -0.00020394142,
                -0.0019096627,
                -1.5370162,
                -0.0012736212,
                -0.15342456,
                -0.010621992,
                -0.04130793,
                -0.10232137,
                -0.029563874,
                -0.028012274,
                -2.5415618,
                -0.172952,
                -4.487999,
                -0.25739035,
                -3.529799,
                -0.0020991687,
                -0.4602615,
                -0.055127267,
                -7.974558,
                -1.376053,
                -1.2639579,
                -0.3151985,
                -0.054568328,
                -0.008222698,
                -0.06197619,
                -7.4669147,
                -3.812378,
                -0.5457674,
                -0.090401776,
                -0.8246482,
                -0.0031965973,
                -0.05152395,
                -0.2010518,
                -0.9035413,
                -0.10999618,
                -0.016250117,
                -0.030752644,
                -0.12701154,
                -0.15628792,
                -3.6471145,
                -0.033238538,
                -1.2645032,
                -0.0013588498,
                -0.09536846,
                -0.018931387,
                -0.54605824,
                -0.050963245,
                -2.9438,
                -0.40904826,
                -0.0048161093,
                -0.030993184,
                -0.17356603,
                -0.11303459,
                -0.000035120327,
                -0.00017747053,
                -0.0021736554,
                -0.027727952,
                -0.000071719274,
                -0.00010939391,
                -0.020743683,
                -0.76536554,
                -0.08938142,
                -0.0268205,
                -0.09595561,
                -0.24296921,
                -0.11018357,
                -1.8935604,
                -0.00027327676,
                -0.18924198,
                -0.024858953,
                -1.3128912,
                -0.8676718,
                -0.016290467,
                -0.027637754,
                -0.8903191,
                -0.0020639873,
                -0.10269806,
                -0.000057652644,
                -0.00008149626,
                -0.00027578016,
                -0.007657666,
                -0.00008936497,
                -0.00011511593,
                -0.006770154,
                -0.95861554
              ],
              "top_logprobs": [
                {
                  ".\u0022)": -0.8836757
                },
                {
                  "\n": -0.22491229
                },
                {
                  "\n": -1.2692555
                },
                {
                  " end": -1.0573995
                },
                {
                  "This": -1.1680123
                },
                {
                  ",": -1.0601618
                },
                {
                  " world": -0.9947773
                },
                {
                  "!\u0022": -1.7958039
                },
                {
                  " This": -1.1300327
                },
                {
                  " are": -1.1912988
                },
                {
                  " a": -1.713946
                },
                {
                  " a": -0.60795957
                },
                {
                  " test": -0.35601315
                },
                {
                  ".\u0022)": -0.45530513
                },
                {
                  "\n": -0.055711597
                },
                {
                  "\n": -0.20762055
                },
                {
                  "(": -0.3198899
                },
                {
                  "ert": -1.1431999
                },
                {
                  "-": -0.007295734
                },
                {
                  "de": -0.082920045
                },
                {
                  " (\u0022": -0.035714805
                },
                {
                  "\u0060": -2.6369534
                },
                {
                  " to": -1.0756048
                },
                {
                  " Definition": -1.1901145
                },
                {
                  "\u0022)": -0.21282539
                },
                {
                  "\u0022)": -0.37432423
                },
                {
                  "\n": -0.005334074
                },
                {
                  "(": -0.5817012
                },
                {
                  "ert": -1.0834855
                },
                {
                  "-": -0.033843756
                },
                {
                  "file": -1.0041695
                },
                {
                  " \u0022": -0.7532798
                },
                {
                  "-": -0.12812294
                },
                {
                  "test": -2.0448914
                },
                {
                  " \u0022": -0.89746165
                },
                {
                  "\u002B": -0.78990257
                },
                {
                  " \u003C": -0.20583408
                },
                {
                  "std": -0.94481117
                },
                {
                  "io": -0.08206657
                },
                {
                  ".": -0.007347672
                },
                {
                  "h": -0.0009225819
                },
                {
                  "\u003E": -0.36917138
                },
                {
                  "\\": -0.37170795
                },
                {
                  "n": -0.0064717117
                },
                {
                  "\u0022": -0.653443
                },
                {
                  " main": -0.85398155
                },
                {
                  "(": -0.77230376
                },
                {
                  "int": -0.41329703
                },
                {
                  ")": -0.25444543
                },
                {
                  " {\\": -0.46178272
                },
                {
                  " printf": -1.1935173
                },
                {
                  "\n": -0.07249886
                },
                {
                  "(": -0.1706407
                },
                {
                  "write": -1.2392343
                },
                {
                  "-": -0.0006916062
                },
                {
                  "region": -0.040252965
                },
                {
                  " \u0022": -0.517595
                },
                {
                  "int": -1.2369872
                },
                {
                  " a": -1.3425348
                },
                {
                  " =": -0.9147878
                },
                {
                  " 0": -1.2437639
                },
                {
                  ";": -0.5998332
                },
                {
                  " nil": -0.8585664
                },
                {
                  "append": -0.7884348
                },
                {
                  "-": -0.030929986
                },
                {
                  "max": -0.3414534
                },
                {
                  ")": -1.0706954
                },
                {
                  "-": -0.08219638
                },
                {
                  "file": -0.48089942
                },
                {
                  ")": -0.2442101
                },
                {
                  "name": -0.5195625
                },
                {
                  ")": -0.09001104
                },
                {
                  "\n": -0.0030185413
                },
                {
                  "(": -0.08780825
                },
                {
                  "g": -1.8958967
                },
                {
                  " ((": -0.29702878
                },
                {
                  "test": -2.6478896
                },
                {
                  "-": -0.5975675
                },
                {
                  " (": -0.27333817
                },
                {
                  "c": -1.3156189
                },
                {
                  "db": -0.89563435
                },
                {
                  "-": -0.036863253
                },
                {
                  "load": -1.6512562
                },
                {
                  "ess": -0.00796696
                },
                {
                  "-": -0.048356026
                },
                {
                  "project": -0.5663059
                },
                {
                  ")))": -0.9566085
                },
                {
                  "root": -0.037003092
                },
                {
                  " default": -0.88833815
                },
                {
                  "buffer": -1.2856845
                },
                {
                  "-": -0.0001614947
                },
                {
                  "buffer": -0.025294848
                },
                {
                  "))))": -0.2598374
                },
                {
                  "\n": -0.004715373
                },
                {
                  " ": -0.015554757
                },
                {
                  " (": -0.023304943
                },
                {
                  "comp": -1.2309707
                },
                {
                  "db": -0.030489728
                },
                {
                  "-": -0.059103135
                },
                {
                  "find": -1.5538781
                },
                {
                  "load": -0.38826108
                },
                {
                  "-": -0.12542534
                },
                {
                  "database": -0.5429036
                },
                {
                  " c": -0.22686103
                },
                {
                  "db": -0.00019046802
                },
                {
                  ")": -0.15059209
                },
                {
                  "\n": -0.006766255
                },
                {
                  " ": -0.002540554
                },
                {
                  " (": -0.008080943
                },
                {
                  "comp": -0.3006205
                },
                {
                  "db": -0.0008960331
                },
                {
                  "-": -0.019275319
                },
                {
                  "load": -0.14886469
                },
                {
                  "-": -0.00217712
                },
                {
                  "db": -0.012744983
                },
                {
                  " c": -0.04832318
                },
                {
                  "db": -0.000055149267
                },
                {
                  ")": -0.35911933
                },
                {
                  "                ": -0.6709661
                },
                {
                  "\t": -0.0154398
                },
                {
                  " ": -0.65874803
                },
                {
                  " (": -0.48599353
                },
                {
                  "lambda": -1.250677
                },
                {
                  " (": -0.80258924
                },
                {
                  "\t": -0.020212144
                },
                {
                  "\t": -0.0002423942
                },
                {
                  "  ": -0.007707579
                },
                {
                  " (": -0.24832541
                },
                {
                  "comp": -1.0938922
                },
                {
                  " \u0022-": -0.83825225
                },
                {
                  "s": -0.048024144
                },
                {
                  " -": -1.0916506
                },
                {
                  "std": -0.5814333
                },
                {
                  "flags": -0.37190515
                },
                {
                  " --": -1.0529224
                },
                {
                  "lib": -0.88381064
                },
                {
                  "flags": -0.22426338
                },
                {
                  "-": -0.003841887
                },
                {
                  "only": -0.25915614
                },
                {
                  "=-": -0.36873674
                },
                {
                  "-": -0.20817249
                },
                {
                  "std": -1.2652949
                },
                {
                  "%": -1.0282267
                },
                {
                  "\u0027": -0.96064335
                },
                {
                  " --": -0.49836224
                },
                {
                  "lib": -0.55485564
                },
                {
                  "s": -0.0007692674
                },
                {
                  "\u0022": -0.59992915
                },
                {
                  "std": -1.8393947
                },
                {
                  " %": -0.86417985
                },
                {
                  "dev": -0.49497223
                },
                {
                  "/": -0.0003599105
                },
                {
                  "null": -0.008486799
                },
                {
                  " -": -0.7707634
                },
                {
                  "\n": -0.6088175
                },
                {
                  "-": -0.24658018
                },
                {
                  "exec": -0.28481042
                },
                {
                  "utable": -0.050603032
                },
                {
                  ")": -0.5642141
                },
                {
                  "\n": -0.024578588
                },
                {
                  " ": -0.02430184
                },
                {
                  " (": -0.088948876
                },
                {
                  "let": -1.8709806
                },
                {
                  "-": -0.00021860692
                },
                {
                  "current": -0.14235808
                },
                {
                  "-": -0.00020394142
                },
                {
                  "buffer": -0.0019096627
                },
                {
                  " (": -0.3386367
                },
                {
                  "-": -0.0012736212
                },
                {
                  "file": -0.15342456
                },
                {
                  "-": -0.010621992
                },
                {
                  "c": -0.04130793
                },
                {
                  "\n": -0.10232137
                },
                {
                  "   ": -0.029563874
                },
                {
                  " (": -0.028012274
                },
                {
                  "g": -1.0693443
                },
                {
                  " (": -0.172952
                },
                {
                  "equal": -1.4650996
                },
                {
                  " (": -0.25739035
                },
                {
                  "comp": -1.2155521
                },
                {
                  "-": -0.0020991687
                },
                {
                  "forward": -0.4602615
                },
                {
                  " \u0022": -0.055127267
                },
                {
                  "int": -0.7404365
                },
                {
                  "put": -1.2666514
                },
                {
                  "\u0022": -0.995326
                },
                {
                  "\n": -0.3151985
                },
                {
                  "\t": -0.054568328
                },
                {
                  "\t": -0.008222698
                },
                {
                  " (": -0.06197619
                },
                {
                  "comp": -1.9346607
                },
                {
                  "od": -0.07835216
                },
                {
                  "v": -0.5457674
                },
                {
                  "-": -0.090401776
                },
                {
                  "g": -0.8246482
                },
                {
                  "oto": -0.0031965973
                },
                {
                  "-": -0.05152395
                },
                {
                  "definition": -0.2010518
                },
                {
                  ")))": -0.9035413
                },
                {
                  "\n": -0.10999618
                },
                {
                  "   ": -0.016250117
                },
                {
                  " (": -0.030752644
                },
                {
                  "should": -0.12701154
                },
                {
                  " (": -0.15628792
                },
                {
                  "eq": -1.5134646
                },
                {
                  " (": -0.033238538
                },
                {
                  "search": -1.2645032
                },
                {
                  "-": -0.0013588498
                },
                {
                  "forward": -0.09536846
                },
                {
                  " \u0022": -0.018931387
                },
                {
                  "f": -0.54605824
                },
                {
                  "printf": -0.050963245
                },
                {
                  "\u0022": -0.18740676
                },
                {
                  "\n": -0.40904826
                },
                {
                  "\t": -0.0048161093
                },
                {
                  "\t": -0.030993184
                },
                {
                  " (": -0.17356603
                },
                {
                  "got": -0.11303459
                },
                {
                  "ode": -0.000035120327
                },
                {
                  "v": -0.00017747053
                },
                {
                  "-": -0.0021736554
                },
                {
                  "g": -0.027727952
                },
                {
                  "oto": -0.000071719274
                },
                {
                  "-": -0.00010939391
                },
                {
                  "definition": -0.020743683
                },
                {
                  ")))": -0.76536554
                },
                {
                  "\n": -0.08938142
                },
                {
                  "   ": -0.0268205
                },
                {
                  " (": -0.09595561
                },
                {
                  "should": -0.24296921
                },
                {
                  " (": -0.11018357
                },
                {
                  "not": -1.1847762
                },
                {
                  "-": -0.00027327676
                },
                {
                  "forward": -0.18924198
                },
                {
                  " \u0022": -0.024858953
                },
                {
                  "input": -1.3128912
                },
                {
                  "\u0022)": -0.8676718
                },
                {
                  "\n": -0.016290467
                },
                {
                  "\t": -0.027637754
                },
                {
                  "\t": -0.599354
                },
                {
                  " (": -0.0020639873
                },
                {
                  "got": -0.10269806
                },
                {
                  "ode": -0.000057652644
                },
                {
                  "v": -0.00008149626
                },
                {
                  "-": -0.00027578016
                },
                {
                  "g": -0.007657666
                },
                {
                  "oto": -0.00008936497
                },
                {
                  "-": -0.00011511593
                },
                {
                  "definition": -0.006770154
                },
                {
                  "))))": -0.95861554
                }
              ],
              "text_offset": [
                14,
                17,
                18,
                19,
                21,
                26,
                27,
                30,
                31,
                35,
                39,
                47,
                49,
                54,
                57,
                58,
                59,
                60,
                63,
                64,
                68,
                71,
                73,
                76,
                87,
                93,
                96,
                97,
                98,
                103,
                104,
                110,
                118,
                119,
                125,
                128,
                135,
                137,
                140,
                142,
                143,
                144,
                145,
                146,
                147,
                150,
                155,
                156,
                160,
                161,
                163,
                165,
                166,
                167,
                172,
                173,
                179,
                181,
                184,
                190,
                192,
                194,
                196,
                198,
                203,
                204,
                207,
                212,
                213,
                217,
                218,
                219,
                220,
                221,
                222,
                225,
                228,
                229,
                231,
                233,
                237,
                239,
                240,
                242,
                245,
                246,
                253,
                254,
                258,
                260,
                267,
                268,
                274,
                278,
                279,
                280,
                282,
                286,
                288,
                289,
                291,
                295,
                296,
                298,
                300,
                302,
                303,
                304,
                305,
                307,
                311,
                313,
                314,
                318,
                319,
                321,
                323,
                325,
                326,
                327,
                328,
                329,
                331,
                335,
                336,
                337,
                338,
                340,
                342,
                348,
                351,
                352,
                355,
                356,
                361,
                364,
                365,
                370,
                371,
                376,
                378,
                379,
                380,
                387,
                388,
                391,
                394,
                395,
                397,
                398,
                400,
                403,
                404,
                408,
                409,
                413,
                414,
                418,
                424,
                427,
                429,
                430,
                432,
                436,
                437,
                444,
                445,
                451,
                456,
                457,
                461,
                462,
                463,
                464,
                467,
                469,
                475,
                477,
                480,
                482,
                488,
                489,
                496,
                498,
                499,
                505,
                507,
                508,
                509,
                510,
                512,
                515,
                518,
                519,
                520,
                521,
                524,
                525,
                535,
                538,
                539,
                542,
                544,
                550,
                552,
                555,
                557,
                563,
                564,
                571,
                573,
                574,
                580,
                582,
                583,
                584,
                585,
                587,
                590,
                593,
                594,
                595,
                596,
                599,
                600,
                610,
                613,
                614,
                617,
                619,
                625,
                627,
                633,
                634,
                641,
                643,
                648,
                650,
                651,
                652,
                655,
                657,
                660,
                663,
                664,
                665,
                666,
                669,
                670,
                680
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": ".\u0022)\nprint(\u0022This is only a test.\u0022)\n\na = 1\nif a == 1:\n    print(\u0022a is 1\u0022)\nelse:\n    print(\u0022a is not 1\u0022)",
            "index": 4,
            "logprobs": {
              "tokens": [
                ".\u0022)",
                "\n",
                "print",
                "(\u0022",
                "This",
                " is",
                " only",
                " a",
                " test",
                ".\u0022)",
                "\n",
                "\n",
                "a",
                " =",
                " 1",
                "\n",
                "if",
                " a",
                " ==",
                " 1",
                ":",
                "\n",
                "   ",
                " print",
                "(\u0022",
                "a",
                " is",
                " 1",
                "\u0022)",
                "\n",
                "else",
                ":",
                "\n",
                "   ",
                " print",
                "(\u0022",
                "a",
                " is",
                " not",
                " 1",
                "\u0022)"
              ],
              "token_logprobs": [
                -0.8836757,
                -0.22496888,
                -2.3941817,
                -1.1173091,
                -0.5607934,
                -0.058179088,
                -1.3575348,
                -0.007833124,
                -0.004693216,
                -0.044628903,
                -0.32921445,
                -0.93297964,
                -4.2627063,
                -0.21831009,
                -0.9208475,
                -0.07024661,
                -3.352181,
                -0.0614295,
                -0.08858228,
                -0.02205192,
                -0.022286542,
                -0.0072302907,
                -0.20994017,
                -0.022061184,
                -0.5073257,
                -0.040853452,
                -0.5349003,
                -0.14041667,
                -1.7215487,
                -0.07175223,
                -0.4038727,
                -0.0027747676,
                -0.0043976046,
                -0.004640398,
                -0.004860251,
                -0.0111564165,
                -0.011394404,
                -0.009757603,
                -0.07145289,
                -0.0074244696,
                -0.016238973
              ],
              "top_logprobs": [
                {
                  ".\u0022)": -0.8836757
                },
                {
                  "\n": -0.22496888
                },
                {
                  "\n": -1.2704477
                },
                {
                  "(": -0.63590294
                },
                {
                  "This": -0.5607934
                },
                {
                  " is": -0.058179088
                },
                {
                  " a": -0.8913894
                },
                {
                  " a": -0.007833124
                },
                {
                  " test": -0.004693216
                },
                {
                  ".\u0022)": -0.044628903
                },
                {
                  "\n": -0.32921445
                },
                {
                  "print": -0.719019
                },
                {
                  "#": -0.9316667
                },
                {
                  " =": -0.21831009
                },
                {
                  " 1": -0.9208475
                },
                {
                  "\n": -0.07024661
                },
                {
                  "b": -0.26523936
                },
                {
                  " a": -0.0614295
                },
                {
                  " ==": -0.08858228
                },
                {
                  " 1": -0.02205192
                },
                {
                  ":": -0.022286542
                },
                {
                  "\n": -0.0072302907
                },
                {
                  "   ": -0.20994017
                },
                {
                  " print": -0.022061184
                },
                {
                  "(\u0022": -0.5073257
                },
                {
                  "a": -0.040853452
                },
                {
                  " is": -0.5349003
                },
                {
                  " 1": -0.14041667
                },
                {
                  ".\u0022)": -0.22078961
                },
                {
                  "\n": -0.07175223
                },
                {
                  "else": -0.4038727
                },
                {
                  ":": -0.0027747676
                },
                {
                  "\n": -0.0043976046
                },
                {
                  "   ": -0.004640398
                },
                {
                  " print": -0.004860251
                },
                {
                  "(\u0022": -0.0111564165
                },
                {
                  "a": -0.011394404
                },
                {
                  " is": -0.009757603
                },
                {
                  " not": -0.07145289
                },
                {
                  " 1": -0.0074244696
                },
                {
                  "\u0022)": -0.016238973
                }
              ],
              "text_offset": [
                14,
                17,
                18,
                23,
                25,
                29,
                32,
                37,
                39,
                44,
                47,
                48,
                49,
                50,
                52,
                54,
                55,
                57,
                59,
                62,
                64,
                65,
                66,
                69,
                75,
                77,
                78,
                81,
                83,
                85,
                86,
                90,
                91,
                92,
                95,
                101,
                103,
                104,
                107,
                111,
                113
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": "\u0027);\n// TEST.prototype.name = \u0022DEV\u0022;\n// return TEST;\n\n\u0027use strict\u0027;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\u0022Cannot call a class as a function\u0022); } }\n\nvar TEST = function TEST(a, b) {\n  _classCallCheck(this, TEST);\n\n  console.log(a, b);\n};\n\nexports.TEST = TEST;",
            "index": 5,
            "logprobs": {
              "tokens": [
                "\u0027);",
                "\n",
                "//",
                " TEST",
                ".",
                "prototype",
                ".",
                "name",
                " =",
                " \u0022",
                "DEV",
                "\u0022;",
                "\n",
                "//",
                " return",
                " TEST",
                ";",
                "\n",
                "\n",
                "\u0027",
                "use",
                " strict",
                "\u0027;",
                "\n",
                "\n",
                "function",
                " _",
                "class",
                "Call",
                "Check",
                "(",
                "instance",
                ",",
                " Construct",
                "or",
                ")",
                " {",
                " if",
                " (!",
                "(",
                "instance",
                " instance",
                "of",
                " Construct",
                "or",
                "))",
                " {",
                " throw",
                " new",
                " Type",
                "Error",
                "(\u0022",
                "C",
                "annot",
                " call",
                " a",
                " class",
                " as",
                " a",
                " function",
                "\u0022);",
                " }",
                " }",
                "\n",
                "\n",
                "var",
                " TEST",
                " =",
                " function",
                " TEST",
                "(",
                "a",
                ",",
                " b",
                ")",
                " {",
                "\n",
                " ",
                " _",
                "class",
                "Call",
                "Check",
                "(",
                "this",
                ",",
                " TEST",
                ");",
                "\n\n",
                " ",
                " console",
                ".",
                "log",
                "(",
                "a",
                ",",
                " b",
                ");",
                "\n",
                "};",
                "\n",
                "\n",
                "ex",
                "ports",
                ".",
                "T",
                "EST",
                " =",
                " TEST",
                ";"
              ],
              "token_logprobs": [
                -4.7819347,
                -0.16544989,
                -3.241311,
                -7.1974916,
                -4.243849,
                -4.253692,
                -0.16012053,
                -3.5387669,
                -0.07673772,
                -2.3179402,
                -10.855571,
                -0.63111776,
                -0.052706487,
                -0.36677945,
                -7.571414,
                -0.44976333,
                -0.1659352,
                -0.20888998,
                -1.2451041,
                -5.9350634,
                -0.012943195,
                -0.007447289,
                -0.0782634,
                -0.024716167,
                -0.38870096,
                -2.3784742,
                -0.6909252,
                -0.42465255,
                -0.0009962613,
                -0.0011266972,
                -0.0032513733,
                -0.001508374,
                -0.000034287736,
                -0.002056941,
                -0.00017890292,
                -0.000088410365,
                -0.000503143,
                -0.118324004,
                -0.0003906776,
                -0.0002723231,
                -0.0006021416,
                -0.0007927721,
                -0.00036301085,
                -0.0015450263,
                -0.00003166233,
                -0.0001878445,
                -0.00017723397,
                -0.000554368,
                -0.0003307532,
                -0.0004197157,
                -0.0020563419,
                -0.23568688,
                -0.0008808795,
                -0.00005300351,
                -0.00047589114,
                -0.00023249895,
                -0.00053337787,
                -0.00034214277,
                -0.00016924512,
                -0.00093296246,
                -0.0003095256,
                -0.00035740712,
                -0.0010599872,
                -0.0077072186,
                -0.0047985595,
                -0.51662016,
                -0.44874302,
                -0.00812126,
                -0.24728,
                -0.091083795,
                -1.5808338,
                -3.036451,
                -1.0234357,
                -0.017345596,
                -0.20710564,
                -0.0011024105,
                -0.0011033642,
                -0.57602113,
                -0.059610587,
                -0.0027592864,
                -0.000787879,
                -0.0017049686,
                -0.00011392572,
                -0.0011671558,
                -0.00012775393,
                -0.00054649834,
                -0.00037911057,
                -0.052176837,
                -0.0012789923,
                -0.9174287,
                -0.00024894974,
                -0.00469591,
                -0.6436473,
                -0.081508674,
                -0.7515547,
                -0.01801913,
                -0.08177216,
                -0.018123215,
                -0.18750402,
                -0.022984266,
                -0.088671446,
                -1.8378345,
                -0.00089591293,
                -0.028035874,
                -1.7355356,
                -0.0017756622,
                -0.0024334164,
                -0.0014348335,
                -0.00063488266
              ],
              "top_logprobs": [
                {
                  ".\u0022)": -0.8836757
                },
                {
                  "\n": -0.16544989
                },
                {
                  "   ": -1.616938
                },
                {
                  "=\u003E": -2.4377356
                },
                {
                  "\n": -0.82803756
                },
                {
                  "\n": -1.2975132
                },
                {
                  ".": -0.16012053
                },
                {
                  "test": -1.8752624
                },
                {
                  " =": -0.07673772
                },
                {
                  " \u0027": -0.19995551
                },
                {
                  "T": -1.4985396
                },
                {
                  "\u0022;": -0.63111776
                },
                {
                  "\n": -0.052706487
                },
                {
                  "//": -0.36677945
                },
                {
                  " console": -0.77170956
                },
                {
                  " TEST": -0.44976333
                },
                {
                  ";": -0.1659352
                },
                {
                  "\n": -0.20888998
                },
                {
                  "//": -0.65871173
                },
                {
                  "//": -0.9716192
                },
                {
                  "use": -0.012943195
                },
                {
                  " strict": -0.007447289
                },
                {
                  "\u0027;": -0.0782634
                },
                {
                  "\n": -0.024716167
                },
                {
                  "\n": -0.38870096
                },
                {
                  "var": -1.3023252
                },
                {
                  " _": -0.6909252
                },
                {
                  "class": -0.42465255
                },
                {
                  "Call": -0.0009962613
                },
                {
                  "Check": -0.0011266972
                },
                {
                  "(": -0.0032513733
                },
                {
                  "instance": -0.001508374
                },
                {
                  ",": -0.000034287736
                },
                {
                  " Construct": -0.002056941
                },
                {
                  "or": -0.00017890292
                },
                {
                  ")": -0.000088410365
                },
                {
                  " {": -0.000503143
                },
                {
                  " if": -0.118324004
                },
                {
                  " (!": -0.0003906776
                },
                {
                  "(": -0.0002723231
                },
                {
                  "instance": -0.0006021416
                },
                {
                  " instance": -0.0007927721
                },
                {
                  "of": -0.00036301085
                },
                {
                  " Construct": -0.0015450263
                },
                {
                  "or": -0.00003166233
                },
                {
                  "))": -0.0001878445
                },
                {
                  " {": -0.00017723397
                },
                {
                  " throw": -0.000554368
                },
                {
                  " new": -0.0003307532
                },
                {
                  " Type": -0.0004197157
                },
                {
                  "Error": -0.0020563419
                },
                {
                  "(\u0022": -0.23568688
                },
                {
                  "C": -0.0008808795
                },
                {
                  "annot": -0.00005300351
                },
                {
                  " call": -0.00047589114
                },
                {
                  " a": -0.00023249895
                },
                {
                  " class": -0.00053337787
                },
                {
                  " as": -0.00034214277
                },
                {
                  " a": -0.00016924512
                },
                {
                  " function": -0.00093296246
                },
                {
                  "\u0022);": -0.0003095256
                },
                {
                  " }": -0.00035740712
                },
                {
                  " }": -0.0010599872
                },
                {
                  "\n": -0.0077072186
                },
                {
                  "\n": -0.0047985595
                },
                {
                  "var": -0.51662016
                },
                {
                  " TEST": -0.44874302
                },
                {
                  " =": -0.00812126
                },
                {
                  " function": -0.24728
                },
                {
                  " TEST": -0.091083795
                },
                {
                  "()": -0.23644683
                },
                {
                  "name": -1.4421527
                },
                {
                  ")": -0.45750633
                },
                {
                  " b": -0.017345596
                },
                {
                  ")": -0.20710564
                },
                {
                  " {": -0.0011024105
                },
                {
                  "\n": -0.0011033642
                },
                {
                  " ": -0.57602113
                },
                {
                  " _": -0.059610587
                },
                {
                  "class": -0.0027592864
                },
                {
                  "Call": -0.000787879
                },
                {
                  "Check": -0.0017049686
                },
                {
                  "(": -0.00011392572
                },
                {
                  "this": -0.0011671558
                },
                {
                  ",": -0.00012775393
                },
                {
                  " TEST": -0.00054649834
                },
                {
                  ");": -0.00037911057
                },
                {
                  "\n\n": -0.052176837
                },
                {
                  " ": -0.0012789923
                },
                {
                  " this": -0.7240769
                },
                {
                  ".": -0.00024894974
                },
                {
                  "log": -0.00469591
                },
                {
                  "(": -0.6436473
                },
                {
                  "a": -0.081508674
                },
                {
                  ",": -0.7515547
                },
                {
                  " b": -0.01801913
                },
                {
                  ");": -0.08177216
                },
                {
                  "\n": -0.018123215
                },
                {
                  "};": -0.18750402
                },
                {
                  "\n": -0.022984266
                },
                {
                  "\n": -0.088671446
                },
                {
                  "T": -0.8057242
                },
                {
                  "ports": -0.00089591293
                },
                {
                  ".": -0.028035874
                },
                {
                  "default": -0.21982
                },
                {
                  "EST": -0.0017756622
                },
                {
                  " =": -0.0024334164
                },
                {
                  " TEST": -0.0014348335
                },
                {
                  ";": -0.00063488266
                }
              ],
              "text_offset": [
                14,
                17,
                18,
                20,
                25,
                26,
                35,
                36,
                40,
                42,
                44,
                47,
                49,
                50,
                52,
                59,
                64,
                65,
                66,
                67,
                68,
                71,
                78,
                80,
                81,
                82,
                90,
                92,
                97,
                101,
                106,
                107,
                115,
                116,
                126,
                128,
                129,
                131,
                134,
                137,
                138,
                146,
                155,
                157,
                167,
                169,
                171,
                173,
                179,
                183,
                188,
                193,
                195,
                196,
                201,
                206,
                208,
                214,
                217,
                219,
                228,
                231,
                233,
                235,
                236,
                237,
                240,
                245,
                247,
                256,
                261,
                262,
                263,
                264,
                266,
                267,
                269,
                270,
                271,
                273,
                278,
                282,
                287,
                288,
                292,
                293,
                298,
                300,
                302,
                303,
                311,
                312,
                315,
                316,
                317,
                318,
                320,
                322,
                323,
                325,
                326,
                327,
                329,
                334,
                335,
                336,
                339,
                341,
                346
              ]
            },
            "finish_reason": "stop"
          }
        ],
        "usage": {
          "prompt_tokens": 6,
          "completion_tokens": 577,
          "total_tokens": 583
        }
      }
    }
  ],
  "Variables": {
    "CHAT_COMPLETIONS_DEPLOYMENT_NAME": "gpt-35-turbo",
    "COMPLETIONS_DEPLOYMENT_NAME": "gpt-35-turbo",
    "EMBEDDINGS_DEPLOYMENT_NAME": "text-embedding-ada-002",
    "OPENAI_ENDPOINT": "https://sdk8428.openai.azure.com/",
    "RandomSeed": "1842086429"
  }
}
