// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Orbital.Models
{
    /// <summary> Operation Result Entity. </summary>
    public partial class OperationResult
    {
        /// <summary> Initializes a new instance of OperationResult. </summary>
        internal OperationResult()
        {
        }

        /// <summary> Initializes a new instance of OperationResult. </summary>
        /// <param name="id"> ID of the resource. </param>
        /// <param name="name"> Name of the resource. </param>
        /// <param name="status"> The status of operation. </param>
        /// <param name="startOn"> The operation start time (ISO 8601 UTC standard). </param>
        /// <param name="endOn"> The operation end time (ISO 8601 UTC standard). </param>
        /// <param name="percentComplete"> Percentage completed. </param>
        /// <param name="properties"> Operation result properties. </param>
        /// <param name="error"> Operation result error properties. </param>
        internal OperationResult(string id, string name, Status? status, DateTimeOffset? startOn, DateTimeOffset? endOn, double? percentComplete, BinaryData properties, OperationResultErrorProperties error)
        {
            Id = id;
            Name = name;
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            PercentComplete = percentComplete;
            Properties = properties;
            Error = error;
        }

        /// <summary> ID of the resource. </summary>
        public string Id { get; }
        /// <summary> Name of the resource. </summary>
        public string Name { get; }
        /// <summary> The status of operation. </summary>
        public Status? Status { get; }
        /// <summary> The operation start time (ISO 8601 UTC standard). </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary> The operation end time (ISO 8601 UTC standard). </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary> Percentage completed. </summary>
        public double? PercentComplete { get; }
        /// <summary>
        /// Operation result properties.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Properties { get; }
        /// <summary> Operation result error properties. </summary>
        public OperationResultErrorProperties Error { get; }
    }
}
