// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Orbital.Models
{
    /// <summary> Contact Profile Link. </summary>
    public partial class OrbitalContactProfileLink
    {
        /// <summary> Initializes a new instance of <see cref="OrbitalContactProfileLink"/>. </summary>
        /// <param name="name"> Link name. </param>
        /// <param name="polarization"> Polarization. e.g. (RHCP, LHCP). </param>
        /// <param name="direction"> Direction (uplink or downlink). </param>
        /// <param name="channels"> Contact Profile Link Channel. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="channels"/> is null. </exception>
        public OrbitalContactProfileLink(string name, OrbitalLinkPolarization polarization, OrbitalLinkDirection direction, IEnumerable<OrbitalContactProfileLinkChannel> channels)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(channels, nameof(channels));

            Name = name;
            Polarization = polarization;
            Direction = direction;
            Channels = channels.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="OrbitalContactProfileLink"/>. </summary>
        /// <param name="name"> Link name. </param>
        /// <param name="polarization"> Polarization. e.g. (RHCP, LHCP). </param>
        /// <param name="direction"> Direction (uplink or downlink). </param>
        /// <param name="gainOverTemperature"> Gain To Noise Temperature in db/K. It is the required G/T by the customer. Not used yet. </param>
        /// <param name="eirpdBW"> Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet. </param>
        /// <param name="channels"> Contact Profile Link Channel. </param>
        internal OrbitalContactProfileLink(string name, OrbitalLinkPolarization polarization, OrbitalLinkDirection direction, float? gainOverTemperature, float? eirpdBW, IList<OrbitalContactProfileLinkChannel> channels)
        {
            Name = name;
            Polarization = polarization;
            Direction = direction;
            GainOverTemperature = gainOverTemperature;
            EirpdBW = eirpdBW;
            Channels = channels;
        }

        /// <summary> Link name. </summary>
        public string Name { get; set; }
        /// <summary> Polarization. e.g. (RHCP, LHCP). </summary>
        public OrbitalLinkPolarization Polarization { get; set; }
        /// <summary> Direction (uplink or downlink). </summary>
        public OrbitalLinkDirection Direction { get; set; }
        /// <summary> Gain To Noise Temperature in db/K. It is the required G/T by the customer. Not used yet. </summary>
        public float? GainOverTemperature { get; set; }
        /// <summary> Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet. </summary>
        public float? EirpdBW { get; set; }
        /// <summary> Contact Profile Link Channel. </summary>
        public IList<OrbitalContactProfileLinkChannel> Channels { get; }
    }
}
