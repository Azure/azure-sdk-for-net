// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Orbital.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// List of Spacecraft Resource Properties.
    /// </summary>
    public partial class SpacecraftsProperties
    {
        /// <summary>
        /// Initializes a new instance of the SpacecraftsProperties class.
        /// </summary>
        public SpacecraftsProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SpacecraftsProperties class.
        /// </summary>
        /// <param name="noradId">NORAD ID of the spacecraft.</param>
        /// <param name="authorizationStatus">Authorization status of
        /// spacecraft. Possible values include: 'Allowed', 'Pending',
        /// 'Denied'</param>
        /// <param name="authorizationStatusExtended">Details of the
        /// authorization status.</param>
        /// <param name="titleLine">Title line of Two Line Element
        /// (TLE).</param>
        /// <param name="tleLine1">Line 1 of Two Line Element (TLE).</param>
        /// <param name="tleLine2">Line 2 of Two Line Element (TLE).</param>
        /// <param name="links">Links of the Spacecraft</param>
        public SpacecraftsProperties(string noradId, AuthorizationStatus? authorizationStatus = default(AuthorizationStatus?), string authorizationStatusExtended = default(string), string titleLine = default(string), string tleLine1 = default(string), string tleLine2 = default(string), IList<SpacecraftLink> links = default(IList<SpacecraftLink>))
        {
            NoradId = noradId;
            AuthorizationStatus = authorizationStatus;
            AuthorizationStatusExtended = authorizationStatusExtended;
            TitleLine = titleLine;
            TleLine1 = tleLine1;
            TleLine2 = tleLine2;
            Links = links;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets NORAD ID of the spacecraft.
        /// </summary>
        [JsonProperty(PropertyName = "noradId")]
        public string NoradId { get; set; }

        /// <summary>
        /// Gets authorization status of spacecraft. Possible values include:
        /// 'Allowed', 'Pending', 'Denied'
        /// </summary>
        [JsonProperty(PropertyName = "authorizationStatus")]
        public AuthorizationStatus? AuthorizationStatus { get; private set; }

        /// <summary>
        /// Gets details of the authorization status.
        /// </summary>
        [JsonProperty(PropertyName = "authorizationStatusExtended")]
        public string AuthorizationStatusExtended { get; private set; }

        /// <summary>
        /// Gets or sets title line of Two Line Element (TLE).
        /// </summary>
        [JsonProperty(PropertyName = "titleLine")]
        public string TitleLine { get; set; }

        /// <summary>
        /// Gets or sets line 1 of Two Line Element (TLE).
        /// </summary>
        [JsonProperty(PropertyName = "tleLine1")]
        public string TleLine1 { get; set; }

        /// <summary>
        /// Gets or sets line 2 of Two Line Element (TLE).
        /// </summary>
        [JsonProperty(PropertyName = "tleLine2")]
        public string TleLine2 { get; set; }

        /// <summary>
        /// Gets or sets links of the Spacecraft
        /// </summary>
        [JsonProperty(PropertyName = "links")]
        public IList<SpacecraftLink> Links { get; set; }

    }
}
