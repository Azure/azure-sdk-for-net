// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AzureOrbital.Models
{
    /// <summary> The ContactProfileLinkChannel. </summary>
    public partial class ContactProfileLinkChannel
    {
        /// <summary> Initializes a new instance of ContactProfileLinkChannel. </summary>
        /// <param name="centerFrequencyMHz"> Center Frequency in MHz. </param>
        /// <param name="bandwidthMHz"> Bandwidth in MHz. </param>
        /// <param name="endPoint"> Customer End point to store/retrieve data during a contact. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endPoint"/> is null. </exception>
        public ContactProfileLinkChannel(float centerFrequencyMHz, float bandwidthMHz, EndPoint endPoint)
        {
            if (endPoint == null)
            {
                throw new ArgumentNullException(nameof(endPoint));
            }

            CenterFrequencyMHz = centerFrequencyMHz;
            BandwidthMHz = bandwidthMHz;
            EndPoint = endPoint;
        }

        /// <summary> Initializes a new instance of ContactProfileLinkChannel. </summary>
        /// <param name="centerFrequencyMHz"> Center Frequency in MHz. </param>
        /// <param name="bandwidthMHz"> Bandwidth in MHz. </param>
        /// <param name="endPoint"> Customer End point to store/retrieve data during a contact. </param>
        /// <param name="modulationConfiguration"></param>
        /// <param name="demodulationConfiguration"></param>
        /// <param name="encodingConfiguration"></param>
        /// <param name="decodingConfiguration"></param>
        internal ContactProfileLinkChannel(float centerFrequencyMHz, float bandwidthMHz, EndPoint endPoint, string modulationConfiguration, string demodulationConfiguration, string encodingConfiguration, string decodingConfiguration)
        {
            CenterFrequencyMHz = centerFrequencyMHz;
            BandwidthMHz = bandwidthMHz;
            EndPoint = endPoint;
            ModulationConfiguration = modulationConfiguration;
            DemodulationConfiguration = demodulationConfiguration;
            EncodingConfiguration = encodingConfiguration;
            DecodingConfiguration = decodingConfiguration;
        }

        /// <summary> Center Frequency in MHz. </summary>
        public float CenterFrequencyMHz { get; set; }
        /// <summary> Bandwidth in MHz. </summary>
        public float BandwidthMHz { get; set; }
        /// <summary> Customer End point to store/retrieve data during a contact. </summary>
        public EndPoint EndPoint { get; set; }
        /// <summary> Gets or sets the modulation configuration. </summary>
        public string ModulationConfiguration { get; set; }
        /// <summary> Gets or sets the demodulation configuration. </summary>
        public string DemodulationConfiguration { get; set; }
        /// <summary> Gets or sets the encoding configuration. </summary>
        public string EncodingConfiguration { get; set; }
        /// <summary> Gets or sets the decoding configuration. </summary>
        public string DecodingConfiguration { get; set; }
    }
}
