// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace AzureOrbital.Models
{
    /// <summary> Customer creates a spacecraft resource to schedule a contact. </summary>
    public partial class Spacecraft : Resource
    {
        /// <summary> Initializes a new instance of Spacecraft. </summary>
        public Spacecraft()
        {
            Links = new ChangeTrackingList<SpacecraftLink>();
        }

        /// <summary> Initializes a new instance of Spacecraft. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="noradId"> NORAD ID of the spacecraft. </param>
        /// <param name="authorizationStatus"> Authorization status of spacecraft. </param>
        /// <param name="authorizationStatusExtended"> Details of the authorization status. </param>
        /// <param name="titleLine"> Title line of Two Line Element (TLE). </param>
        /// <param name="tleLine1"> Line 1 of Two Line Element (TLE). </param>
        /// <param name="tleLine2"> Line 2 of Two Line Element (TLE). </param>
        /// <param name="links"></param>
        internal Spacecraft(string id, string name, string type, string location, IReadOnlyDictionary<string, string> tags, string etag, string noradId, SpacecraftsPropertiesAuthorizationStatus? authorizationStatus, string authorizationStatusExtended, string titleLine, string tleLine1, string tleLine2, IList<SpacecraftLink> links) : base(id, name, type, location, tags)
        {
            Etag = etag;
            NoradId = noradId;
            AuthorizationStatus = authorizationStatus;
            AuthorizationStatusExtended = authorizationStatusExtended;
            TitleLine = titleLine;
            TleLine1 = tleLine1;
            TleLine2 = tleLine2;
            Links = links;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> NORAD ID of the spacecraft. </summary>
        public string NoradId { get; set; }
        /// <summary> Authorization status of spacecraft. </summary>
        public SpacecraftsPropertiesAuthorizationStatus? AuthorizationStatus { get; }
        /// <summary> Details of the authorization status. </summary>
        public string AuthorizationStatusExtended { get; }
        /// <summary> Title line of Two Line Element (TLE). </summary>
        public string TitleLine { get; set; }
        /// <summary> Line 1 of Two Line Element (TLE). </summary>
        public string TleLine1 { get; set; }
        /// <summary> Line 2 of Two Line Element (TLE). </summary>
        public string TleLine2 { get; set; }
        public IList<SpacecraftLink> Links { get; }
    }
}
