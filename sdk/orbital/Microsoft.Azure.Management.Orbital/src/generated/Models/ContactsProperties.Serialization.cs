// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace AzureOrbital.Models
{
    public partial class ContactsProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("reservationStartTime");
            writer.WriteStringValue(ReservationStartTime, "O");
            writer.WritePropertyName("reservationEndTime");
            writer.WriteStringValue(ReservationEndTime, "O");
            writer.WritePropertyName("groundStationName");
            writer.WriteStringValue(GroundStationName);
            writer.WritePropertyName("contactProfile");
            writer.WriteObjectValue(ContactProfile);
            writer.WriteEndObject();
        }

        internal static ContactsProperties DeserializeContactsProperties(JsonElement element)
        {
            Optional<Status> status = default;
            DateTimeOffset reservationStartTime = default;
            DateTimeOffset reservationEndTime = default;
            Optional<DateTimeOffset> rxStartTime = default;
            Optional<DateTimeOffset> rxEndTime = default;
            Optional<DateTimeOffset> txStartTime = default;
            Optional<DateTimeOffset> txEndTime = default;
            Optional<string> errorMessage = default;
            Optional<float> maximumElevationDegrees = default;
            Optional<float> startAzimuthDegrees = default;
            Optional<float> endAzimuthDegrees = default;
            string groundStationName = default;
            Optional<float> startElevationDegrees = default;
            Optional<float> endElevationDegrees = default;
            ContactsPropertiesContactProfile contactProfile = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = property.Value.GetString().ToStatus();
                    continue;
                }
                if (property.NameEquals("reservationStartTime"))
                {
                    reservationStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("reservationEndTime"))
                {
                    reservationEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("rxStartTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("rxEndTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("txStartTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("txEndTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("errorMessage"))
                {
                    errorMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("maximumElevationDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maximumElevationDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("startAzimuthDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startAzimuthDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("endAzimuthDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endAzimuthDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("groundStationName"))
                {
                    groundStationName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startElevationDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startElevationDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("endElevationDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endElevationDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("contactProfile"))
                {
                    contactProfile = ContactsPropertiesContactProfile.DeserializeContactsPropertiesContactProfile(property.Value);
                    continue;
                }
            }
            return new ContactsProperties(Optional.ToNullable(status), reservationStartTime, reservationEndTime, Optional.ToNullable(rxStartTime), Optional.ToNullable(rxEndTime), Optional.ToNullable(txStartTime), Optional.ToNullable(txEndTime), errorMessage.Value, Optional.ToNullable(maximumElevationDegrees), Optional.ToNullable(startAzimuthDegrees), Optional.ToNullable(endAzimuthDegrees), groundStationName, Optional.ToNullable(startElevationDegrees), Optional.ToNullable(endElevationDegrees), contactProfile);
        }
    }
}
