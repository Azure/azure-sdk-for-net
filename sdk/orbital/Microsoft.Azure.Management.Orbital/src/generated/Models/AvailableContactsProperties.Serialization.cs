// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace AzureOrbital.Models
{
    public partial class AvailableContactsProperties
    {
        internal static AvailableContactsProperties DeserializeAvailableContactsProperties(JsonElement element)
        {
            Optional<float> maximumElevationDegrees = default;
            Optional<DateTimeOffset> txStartTime = default;
            Optional<DateTimeOffset> txEndTime = default;
            Optional<DateTimeOffset> rxStartTime = default;
            Optional<DateTimeOffset> rxEndTime = default;
            Optional<float> startAzimuthDegrees = default;
            Optional<float> endAzimuthDegrees = default;
            Optional<float> startElevationDegrees = default;
            Optional<float> endElevationDegrees = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maximumElevationDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maximumElevationDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("txStartTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("txEndTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("rxStartTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("rxEndTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("startAzimuthDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startAzimuthDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("endAzimuthDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endAzimuthDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("startElevationDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startElevationDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("endElevationDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endElevationDegrees = property.Value.GetSingle();
                    continue;
                }
            }
            return new AvailableContactsProperties(Optional.ToNullable(maximumElevationDegrees), Optional.ToNullable(txStartTime), Optional.ToNullable(txEndTime), Optional.ToNullable(rxStartTime), Optional.ToNullable(rxEndTime), Optional.ToNullable(startAzimuthDegrees), Optional.ToNullable(endAzimuthDegrees), Optional.ToNullable(startElevationDegrees), Optional.ToNullable(endElevationDegrees));
        }
    }
}
