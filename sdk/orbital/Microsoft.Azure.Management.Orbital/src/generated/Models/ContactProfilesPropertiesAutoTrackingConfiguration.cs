// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace AzureOrbital.Models
{
    /// <summary> Auto track configuration. </summary>
    public readonly partial struct ContactProfilesPropertiesAutoTrackingConfiguration : IEquatable<ContactProfilesPropertiesAutoTrackingConfiguration>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ContactProfilesPropertiesAutoTrackingConfiguration"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ContactProfilesPropertiesAutoTrackingConfiguration(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DisabledValue = "disabled";
        private const string XBandValue = "xBand";
        private const string SBandValue = "sBand";

        /// <summary> disabled. </summary>
        public static ContactProfilesPropertiesAutoTrackingConfiguration Disabled { get; } = new ContactProfilesPropertiesAutoTrackingConfiguration(DisabledValue);
        /// <summary> xBand. </summary>
        public static ContactProfilesPropertiesAutoTrackingConfiguration XBand { get; } = new ContactProfilesPropertiesAutoTrackingConfiguration(XBandValue);
        /// <summary> sBand. </summary>
        public static ContactProfilesPropertiesAutoTrackingConfiguration SBand { get; } = new ContactProfilesPropertiesAutoTrackingConfiguration(SBandValue);
        /// <summary> Determines if two <see cref="ContactProfilesPropertiesAutoTrackingConfiguration"/> values are the same. </summary>
        public static bool operator ==(ContactProfilesPropertiesAutoTrackingConfiguration left, ContactProfilesPropertiesAutoTrackingConfiguration right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ContactProfilesPropertiesAutoTrackingConfiguration"/> values are not the same. </summary>
        public static bool operator !=(ContactProfilesPropertiesAutoTrackingConfiguration left, ContactProfilesPropertiesAutoTrackingConfiguration right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ContactProfilesPropertiesAutoTrackingConfiguration"/>. </summary>
        public static implicit operator ContactProfilesPropertiesAutoTrackingConfiguration(string value) => new ContactProfilesPropertiesAutoTrackingConfiguration(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ContactProfilesPropertiesAutoTrackingConfiguration other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ContactProfilesPropertiesAutoTrackingConfiguration other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
