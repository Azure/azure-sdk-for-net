// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace AzureOrbital.Models
{
    public partial class GroundStation
    {
        internal static GroundStation DeserializeGroundStation(JsonElement element)
        {
            Optional<string> name = default;
            Optional<string> location = default;
            Optional<string> city = default;
            Optional<string> providerName = default;
            Optional<float> longitudeDegrees = default;
            Optional<float> latitudeDegrees = default;
            Optional<float> altitudeMeters = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    location = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"))
                {
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("providerName"))
                {
                    providerName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("longitudeDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    longitudeDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("latitudeDegrees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    latitudeDegrees = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("altitudeMeters"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    altitudeMeters = property.Value.GetSingle();
                    continue;
                }
            }
            return new GroundStation(name.Value, location.Value, city.Value, providerName.Value, Optional.ToNullable(longitudeDegrees), Optional.ToNullable(latitudeDegrees), Optional.ToNullable(altitudeMeters));
        }
    }
}
