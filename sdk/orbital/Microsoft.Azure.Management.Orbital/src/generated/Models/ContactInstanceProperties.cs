// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AzureOrbital.Models
{
    /// <summary> The ContactInstanceProperties. </summary>
    public partial class ContactInstanceProperties
    {
        /// <summary> Initializes a new instance of ContactInstanceProperties. </summary>
        internal ContactInstanceProperties()
        {
        }

        /// <summary> Initializes a new instance of ContactInstanceProperties. </summary>
        /// <param name="maximumElevationDegrees"> Maximum elevation of the antenna during the contact in decimal degrees. </param>
        /// <param name="txStartTime"> Time at which antenna transmit will be enabled. </param>
        /// <param name="txEndTime"> Time at which antenna transmit will be disabled. </param>
        /// <param name="rxStartTime"> Earliest time to receive a signal. </param>
        /// <param name="rxEndTime"> Time to lost receiving a signal. </param>
        /// <param name="startAzimuthDegrees"> Azimuth of the antenna at the start of the contact in decimal degrees. </param>
        /// <param name="endAzimuthDegrees"> Azimuth of the antenna at the end of the contact in decimal degrees. </param>
        /// <param name="startElevationDegrees"> Spacecraft elevation above the horizon at contact start. </param>
        /// <param name="endElevationDegrees"> Spacecraft elevation above the horizon at contact end. </param>
        internal ContactInstanceProperties(float? maximumElevationDegrees, DateTimeOffset? txStartTime, DateTimeOffset? txEndTime, DateTimeOffset? rxStartTime, DateTimeOffset? rxEndTime, float? startAzimuthDegrees, float? endAzimuthDegrees, float? startElevationDegrees, float? endElevationDegrees)
        {
            MaximumElevationDegrees = maximumElevationDegrees;
            TxStartTime = txStartTime;
            TxEndTime = txEndTime;
            RxStartTime = rxStartTime;
            RxEndTime = rxEndTime;
            StartAzimuthDegrees = startAzimuthDegrees;
            EndAzimuthDegrees = endAzimuthDegrees;
            StartElevationDegrees = startElevationDegrees;
            EndElevationDegrees = endElevationDegrees;
        }

        /// <summary> Maximum elevation of the antenna during the contact in decimal degrees. </summary>
        public float? MaximumElevationDegrees { get; }
        /// <summary> Time at which antenna transmit will be enabled. </summary>
        public DateTimeOffset? TxStartTime { get; }
        /// <summary> Time at which antenna transmit will be disabled. </summary>
        public DateTimeOffset? TxEndTime { get; }
        /// <summary> Earliest time to receive a signal. </summary>
        public DateTimeOffset? RxStartTime { get; }
        /// <summary> Time to lost receiving a signal. </summary>
        public DateTimeOffset? RxEndTime { get; }
        /// <summary> Azimuth of the antenna at the start of the contact in decimal degrees. </summary>
        public float? StartAzimuthDegrees { get; }
        /// <summary> Azimuth of the antenna at the end of the contact in decimal degrees. </summary>
        public float? EndAzimuthDegrees { get; }
        /// <summary> Spacecraft elevation above the horizon at contact start. </summary>
        public float? StartElevationDegrees { get; }
        /// <summary> Spacecraft elevation above the horizon at contact end. </summary>
        public float? EndElevationDegrees { get; }
    }
}
