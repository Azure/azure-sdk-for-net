// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Orbital.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// TagsObject
    /// </summary>
    public partial class ContactInstanceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ContactInstanceProperties class.
        /// </summary>
        public ContactInstanceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContactInstanceProperties class.
        /// </summary>
        /// <param name="maximumElevationDegrees">Maximum elevation of the
        /// antenna during the contact in decimal degrees.</param>
        /// <param name="txStartTime">Time at which antenna transmit will be
        /// enabled.</param>
        /// <param name="txEndTime">Time at which antenna transmit will be
        /// disabled.</param>
        /// <param name="rxStartTime">Earliest time to receive a
        /// signal.</param>
        /// <param name="rxEndTime">Time to lost receiving a signal.</param>
        /// <param name="startAzimuthDegrees">Azimuth of the antenna at the
        /// start of the contact in decimal degrees.</param>
        /// <param name="endAzimuthDegrees">Azimuth of the antenna at the end
        /// of the contact in decimal degrees.</param>
        /// <param name="startElevationDegrees">Spacecraft elevation above the
        /// horizon at contact start.</param>
        /// <param name="endElevationDegrees">Spacecraft elevation above the
        /// horizon at contact end.</param>
        public ContactInstanceProperties(double? maximumElevationDegrees = default(double?), System.DateTime? txStartTime = default(System.DateTime?), System.DateTime? txEndTime = default(System.DateTime?), System.DateTime? rxStartTime = default(System.DateTime?), System.DateTime? rxEndTime = default(System.DateTime?), double? startAzimuthDegrees = default(double?), double? endAzimuthDegrees = default(double?), double? startElevationDegrees = default(double?), double? endElevationDegrees = default(double?))
        {
            MaximumElevationDegrees = maximumElevationDegrees;
            TxStartTime = txStartTime;
            TxEndTime = txEndTime;
            RxStartTime = rxStartTime;
            RxEndTime = rxEndTime;
            StartAzimuthDegrees = startAzimuthDegrees;
            EndAzimuthDegrees = endAzimuthDegrees;
            StartElevationDegrees = startElevationDegrees;
            EndElevationDegrees = endElevationDegrees;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets maximum elevation of the antenna during the contact in decimal
        /// degrees.
        /// </summary>
        [JsonProperty(PropertyName = "maximumElevationDegrees")]
        public double? MaximumElevationDegrees { get; private set; }

        /// <summary>
        /// Gets time at which antenna transmit will be enabled.
        /// </summary>
        [JsonProperty(PropertyName = "txStartTime")]
        public System.DateTime? TxStartTime { get; private set; }

        /// <summary>
        /// Gets time at which antenna transmit will be disabled.
        /// </summary>
        [JsonProperty(PropertyName = "txEndTime")]
        public System.DateTime? TxEndTime { get; private set; }

        /// <summary>
        /// Gets earliest time to receive a signal.
        /// </summary>
        [JsonProperty(PropertyName = "rxStartTime")]
        public System.DateTime? RxStartTime { get; private set; }

        /// <summary>
        /// Gets time to lost receiving a signal.
        /// </summary>
        [JsonProperty(PropertyName = "rxEndTime")]
        public System.DateTime? RxEndTime { get; private set; }

        /// <summary>
        /// Gets azimuth of the antenna at the start of the contact in decimal
        /// degrees.
        /// </summary>
        [JsonProperty(PropertyName = "startAzimuthDegrees")]
        public double? StartAzimuthDegrees { get; private set; }

        /// <summary>
        /// Gets azimuth of the antenna at the end of the contact in decimal
        /// degrees.
        /// </summary>
        [JsonProperty(PropertyName = "endAzimuthDegrees")]
        public double? EndAzimuthDegrees { get; private set; }

        /// <summary>
        /// Gets spacecraft elevation above the horizon at contact start.
        /// </summary>
        [JsonProperty(PropertyName = "startElevationDegrees")]
        public double? StartElevationDegrees { get; private set; }

        /// <summary>
        /// Gets spacecraft elevation above the horizon at contact end.
        /// </summary>
        [JsonProperty(PropertyName = "endElevationDegrees")]
        public double? EndElevationDegrees { get; private set; }

    }
}
