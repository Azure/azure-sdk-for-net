// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Orbital.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties object for Available groundstation.
    /// </summary>
    public partial class AvailableGroundStationPropertiesModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AvailableGroundStationPropertiesModel class.
        /// </summary>
        public AvailableGroundStationPropertiesModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AvailableGroundStationPropertiesModel class.
        /// </summary>
        /// <param name="city">City of ground station.</param>
        /// <param name="providerName">Ground station provider name.</param>
        /// <param name="longitudeDegrees">Longitude of the ground station in
        /// decimal degrees.</param>
        /// <param name="latitudeDegrees">Latitude of the ground station in
        /// decimal degrees.</param>
        /// <param name="altitudeMeters">Altitude of the ground station</param>
        public AvailableGroundStationPropertiesModel(string city = default(string), string providerName = default(string), double? longitudeDegrees = default(double?), double? latitudeDegrees = default(double?), double? altitudeMeters = default(double?))
        {
            City = city;
            ProviderName = providerName;
            LongitudeDegrees = longitudeDegrees;
            LatitudeDegrees = latitudeDegrees;
            AltitudeMeters = altitudeMeters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets city of ground station.
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets ground station provider name.
        /// </summary>
        [JsonProperty(PropertyName = "providerName")]
        public string ProviderName { get; set; }

        /// <summary>
        /// Gets or sets longitude of the ground station in decimal degrees.
        /// </summary>
        [JsonProperty(PropertyName = "longitudeDegrees")]
        public double? LongitudeDegrees { get; set; }

        /// <summary>
        /// Gets or sets latitude of the ground station in decimal degrees.
        /// </summary>
        [JsonProperty(PropertyName = "latitudeDegrees")]
        public double? LatitudeDegrees { get; set; }

        /// <summary>
        /// Gets or sets altitude of the ground station
        /// </summary>
        [JsonProperty(PropertyName = "altitudeMeters")]
        public double? AltitudeMeters { get; set; }

    }
}
