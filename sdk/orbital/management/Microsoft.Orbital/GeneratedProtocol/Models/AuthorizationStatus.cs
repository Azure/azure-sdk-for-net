// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Orbital.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AuthorizationStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AuthorizationStatus
    {
        [EnumMember(Value = "Allowed")]
        Allowed,
        [EnumMember(Value = "Pending")]
        Pending,
        [EnumMember(Value = "Denied")]
        Denied
    }
    internal static class AuthorizationStatusEnumExtension
    {
        internal static string ToSerializedValue(this AuthorizationStatus? value)
        {
            return value == null ? null : ((AuthorizationStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AuthorizationStatus value)
        {
            switch( value )
            {
                case AuthorizationStatus.Allowed:
                    return "Allowed";
                case AuthorizationStatus.Pending:
                    return "Pending";
                case AuthorizationStatus.Denied:
                    return "Denied";
            }
            return null;
        }

        internal static AuthorizationStatus? ParseAuthorizationStatus(this string value)
        {
            switch( value )
            {
                case "Allowed":
                    return AuthorizationStatus.Allowed;
                case "Pending":
                    return AuthorizationStatus.Pending;
                case "Denied":
                    return AuthorizationStatus.Denied;
            }
            return null;
        }
    }
}
