// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Package store for the SSIS integration runtime.
    /// </summary>
    public partial class PackageStore
    {
        /// <summary>
        /// Initializes a new instance of the PackageStore class.
        /// </summary>
        public PackageStore()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PackageStore class.
        /// </summary>
        /// <param name="name">The name of the package store</param>
        /// <param name="packageStoreLinkedService">The package store linked
        /// service reference.</param>
        public PackageStore(string name, EntityReference packageStoreLinkedService)
        {
            Name = name;
            PackageStoreLinkedService = packageStoreLinkedService;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the package store
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the package store linked service reference.
        /// </summary>
        [JsonProperty(PropertyName = "packageStoreLinkedService")]
        public EntityReference PackageStoreLinkedService { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (PackageStoreLinkedService == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PackageStoreLinkedService");
            }
        }
    }
}
