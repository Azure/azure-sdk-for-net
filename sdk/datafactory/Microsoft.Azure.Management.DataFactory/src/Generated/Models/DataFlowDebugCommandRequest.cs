// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Request body structure for data flow debug command.
    /// </summary>
    public partial class DataFlowDebugCommandRequest
    {
        /// <summary>
        /// Initializes a new instance of the DataFlowDebugCommandRequest
        /// class.
        /// </summary>
        public DataFlowDebugCommandRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataFlowDebugCommandRequest
        /// class.
        /// </summary>
        /// <param name="sessionId">The ID of data flow debug session.</param>
        /// <param name="command">The command type. Possible values include:
        /// 'executePreviewQuery', 'executeStatisticsQuery',
        /// 'executeExpressionQuery'</param>
        /// <param name="commandPayload">The command payload object.</param>
        public DataFlowDebugCommandRequest(string sessionId = default(string), string command = default(string), DataFlowDebugCommandPayload commandPayload = default(DataFlowDebugCommandPayload))
        {
            SessionId = sessionId;
            Command = command;
            CommandPayload = commandPayload;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of data flow debug session.
        /// </summary>
        [JsonProperty(PropertyName = "sessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// Gets or sets the command type. Possible values include:
        /// 'executePreviewQuery', 'executeStatisticsQuery',
        /// 'executeExpressionQuery'
        /// </summary>
        [JsonProperty(PropertyName = "command")]
        public string Command { get; set; }

        /// <summary>
        /// Gets or sets the command payload object.
        /// </summary>
        [JsonProperty(PropertyName = "commandPayload")]
        public DataFlowDebugCommandPayload CommandPayload { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CommandPayload != null)
            {
                CommandPayload.Validate();
            }
        }
    }
}
