// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Data Lake Analytics U-SQL activity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("DataLakeAnalyticsU-SQL")]
    [Rest.Serialization.JsonTransformation]
    public partial class DataLakeAnalyticsUSQLActivity : ExecutionActivity
    {
        /// <summary>
        /// Initializes a new instance of the DataLakeAnalyticsUSQLActivity
        /// class.
        /// </summary>
        public DataLakeAnalyticsUSQLActivity()
        {
            ScriptLinkedService = new LinkedServiceReference();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataLakeAnalyticsUSQLActivity
        /// class.
        /// </summary>
        /// <param name="name">Activity name.</param>
        /// <param name="scriptPath">Case-sensitive path to folder that
        /// contains the U-SQL script. Type: string (or Expression with
        /// resultType string).</param>
        /// <param name="scriptLinkedService">Script linked service
        /// reference.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="description">Activity description.</param>
        /// <param name="dependsOn">Activity depends on condition.</param>
        /// <param name="userProperties">Activity user properties.</param>
        /// <param name="linkedServiceName">Linked service reference.</param>
        /// <param name="policy">Activity policy.</param>
        /// <param name="degreeOfParallelism">The maximum number of nodes
        /// simultaneously used to run the job. Default value is 1. Type:
        /// integer (or Expression with resultType integer), minimum:
        /// 1.</param>
        /// <param name="priority">Determines which jobs out of all that are
        /// queued should be selected to run first. The lower the number, the
        /// higher the priority. Default value is 1000. Type: integer (or
        /// Expression with resultType integer), minimum: 1.</param>
        /// <param name="parameters">Parameters for U-SQL job request.</param>
        /// <param name="runtimeVersion">Runtime version of the U-SQL engine to
        /// use. Type: string (or Expression with resultType string).</param>
        /// <param name="compilationMode">Compilation mode of U-SQL. Must be
        /// one of these values : Semantic, Full and SingleBox. Type: string
        /// (or Expression with resultType string).</param>
        public DataLakeAnalyticsUSQLActivity(string name, object scriptPath, LinkedServiceReference scriptLinkedService, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string description = default(string), IList<ActivityDependency> dependsOn = default(IList<ActivityDependency>), IList<UserProperty> userProperties = default(IList<UserProperty>), LinkedServiceReference linkedServiceName = default(LinkedServiceReference), ActivityPolicy policy = default(ActivityPolicy), object degreeOfParallelism = default(object), object priority = default(object), IDictionary<string, object> parameters = default(IDictionary<string, object>), object runtimeVersion = default(object), object compilationMode = default(object))
            : base(name, additionalProperties, description, dependsOn, userProperties, linkedServiceName, policy)
        {
            ScriptPath = scriptPath;
            ScriptLinkedService = scriptLinkedService;
            DegreeOfParallelism = degreeOfParallelism;
            Priority = priority;
            Parameters = parameters;
            RuntimeVersion = runtimeVersion;
            CompilationMode = compilationMode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets case-sensitive path to folder that contains the U-SQL
        /// script. Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.scriptPath")]
        public object ScriptPath { get; set; }

        /// <summary>
        /// Gets or sets script linked service reference.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.scriptLinkedService")]
        public LinkedServiceReference ScriptLinkedService { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of nodes simultaneously used to run
        /// the job. Default value is 1. Type: integer (or Expression with
        /// resultType integer), minimum: 1.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.degreeOfParallelism")]
        public object DegreeOfParallelism { get; set; }

        /// <summary>
        /// Gets or sets determines which jobs out of all that are queued
        /// should be selected to run first. The lower the number, the higher
        /// the priority. Default value is 1000. Type: integer (or Expression
        /// with resultType integer), minimum: 1.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.priority")]
        public object Priority { get; set; }

        /// <summary>
        /// Gets or sets parameters for U-SQL job request.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.parameters")]
        public IDictionary<string, object> Parameters { get; set; }

        /// <summary>
        /// Gets or sets runtime version of the U-SQL engine to use. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.runtimeVersion")]
        public object RuntimeVersion { get; set; }

        /// <summary>
        /// Gets or sets compilation mode of U-SQL. Must be one of these values
        /// : Semantic, Full and SingleBox. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.compilationMode")]
        public object CompilationMode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (ScriptPath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ScriptPath");
            }
            if (ScriptLinkedService == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ScriptLinkedService");
            }
            if (ScriptLinkedService != null)
            {
                ScriptLinkedService.Validate();
            }
        }
    }
}
