// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Log settings of script activity.
    /// </summary>
    public partial class ScriptActivityTypePropertiesLogSettings
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ScriptActivityTypePropertiesLogSettings class.
        /// </summary>
        public ScriptActivityTypePropertiesLogSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ScriptActivityTypePropertiesLogSettings class.
        /// </summary>
        /// <param name="logDestination">The destination of logs. Type: string.
        /// Possible values include: 'ActivityOutput', 'ExternalStore'</param>
        /// <param name="logLocationSettings">Log location settings customer
        /// needs to provide when enabling log.</param>
        public ScriptActivityTypePropertiesLogSettings(string logDestination, LogLocationSettings logLocationSettings = default(LogLocationSettings))
        {
            LogDestination = logDestination;
            LogLocationSettings = logLocationSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the destination of logs. Type: string. Possible values
        /// include: 'ActivityOutput', 'ExternalStore'
        /// </summary>
        [JsonProperty(PropertyName = "logDestination")]
        public string LogDestination { get; set; }

        /// <summary>
        /// Gets or sets log location settings customer needs to provide when
        /// enabling log.
        /// </summary>
        [JsonProperty(PropertyName = "logLocationSettings")]
        public LogLocationSettings LogLocationSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (LogDestination == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LogDestination");
            }
            if (LogLocationSettings != null)
            {
                LogLocationSettings.Validate();
            }
        }
    }
}
