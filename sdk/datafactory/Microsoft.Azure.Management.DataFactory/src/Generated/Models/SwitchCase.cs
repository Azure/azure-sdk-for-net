// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Switch cases with have a value and corresponding activities.
    /// </summary>
    public partial class SwitchCase
    {
        /// <summary>
        /// Initializes a new instance of the SwitchCase class.
        /// </summary>
        public SwitchCase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SwitchCase class.
        /// </summary>
        /// <param name="value">Expected value that satisfies the expression
        /// result of the 'on' property.</param>
        /// <param name="activities">List of activities to execute for
        /// satisfied case condition.</param>
        public SwitchCase(string value = default(string), IList<Activity> activities = default(IList<Activity>))
        {
            Value = value;
            Activities = activities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets expected value that satisfies the expression result of
        /// the 'on' property.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets list of activities to execute for satisfied case
        /// condition.
        /// </summary>
        [JsonProperty(PropertyName = "activities")]
        public IList<Activity> Activities { get; set; }

    }
}
