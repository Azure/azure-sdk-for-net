// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Azure Synapse Analytics (Artifacts) linked service.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureSynapseArtifacts")]
    [Rest.Serialization.JsonTransformation]
    public partial class AzureSynapseArtifactsLinkedService : LinkedService
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AzureSynapseArtifactsLinkedService class.
        /// </summary>
        public AzureSynapseArtifactsLinkedService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AzureSynapseArtifactsLinkedService class.
        /// </summary>
        /// <param
        /// name="endpoint">https://&lt;workspacename&gt;.dev.azuresynapse.net,
        /// Azure Synapse Analytics workspace URL. Type: string (or Expression
        /// with resultType string).</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="connectVia">The integration runtime reference.</param>
        /// <param name="description">Linked service description.</param>
        /// <param name="parameters">Parameters for linked service.</param>
        /// <param name="annotations">List of tags that can be used for
        /// describing the linked service.</param>
        /// <param name="authentication">Required to specify MSI, if using
        /// system assigned managed identity as authentication method. Type:
        /// string (or Expression with resultType string).</param>
        /// <param name="workspaceResourceId">The resource ID of the Synapse
        /// workspace. The format should be:
        /// /subscriptions/{subscriptionID}/resourceGroups/{resourceGroup}/providers/Microsoft.Synapse/workspaces/{workspaceName}.
        /// Type: string (or Expression with resultType string).</param>
        public AzureSynapseArtifactsLinkedService(object endpoint, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), IntegrationRuntimeReference connectVia = default(IntegrationRuntimeReference), string description = default(string), IDictionary<string, ParameterSpecification> parameters = default(IDictionary<string, ParameterSpecification>), IList<object> annotations = default(IList<object>), object authentication = default(object), object workspaceResourceId = default(object))
            : base(additionalProperties, connectVia, description, parameters, annotations)
        {
            Endpoint = endpoint;
            Authentication = authentication;
            WorkspaceResourceId = workspaceResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets
        /// https://&amp;lt;workspacename&amp;gt;.dev.azuresynapse.net, Azure
        /// Synapse Analytics workspace URL. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.endpoint")]
        public object Endpoint { get; set; }

        /// <summary>
        /// Gets or sets required to specify MSI, if using system assigned
        /// managed identity as authentication method. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.authentication")]
        public object Authentication { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the Synapse workspace. The format
        /// should be:
        /// /subscriptions/{subscriptionID}/resourceGroups/{resourceGroup}/providers/Microsoft.Synapse/workspaces/{workspaceName}.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.workspaceResourceId")]
        public object WorkspaceResourceId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Endpoint == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Endpoint");
            }
        }
    }
}
