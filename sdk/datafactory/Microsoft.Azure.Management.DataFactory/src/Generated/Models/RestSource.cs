// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A copy activity Rest service source.
    /// </summary>
    public partial class RestSource : CopySource
    {
        /// <summary>
        /// Initializes a new instance of the RestSource class.
        /// </summary>
        public RestSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestSource class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="sourceRetryCount">Source retry count. Type: integer
        /// (or Expression with resultType integer).</param>
        /// <param name="sourceRetryWait">Source retry wait. Type: string (or
        /// Expression with resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).</param>
        /// <param name="maxConcurrentConnections">The maximum concurrent
        /// connection count for the source data store. Type: integer (or
        /// Expression with resultType integer).</param>
        /// <param name="disableMetricsCollection">If true, disable data store
        /// metrics collection. Default is false. Type: boolean (or Expression
        /// with resultType boolean).</param>
        /// <param name="requestMethod">The HTTP method used to call the
        /// RESTful API. The default is GET. Type: string (or Expression with
        /// resultType string).</param>
        /// <param name="requestBody">The HTTP request body to the RESTful API
        /// if requestMethod is POST. Type: string (or Expression with
        /// resultType string).</param>
        /// <param name="additionalHeaders">The additional HTTP headers in the
        /// request to the RESTful API. Type: string (or Expression with
        /// resultType string).</param>
        /// <param name="paginationRules">The pagination rules to compose next
        /// page requests. Type: string (or Expression with resultType
        /// string).</param>
        /// <param name="httpRequestTimeout">The timeout (TimeSpan) to get an
        /// HTTP response. It is the timeout to get a response, not the timeout
        /// to read response data. Default value: 00:01:40. Type: string (or
        /// Expression with resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).</param>
        /// <param name="requestInterval">The time to await before sending next
        /// page request. </param>
        /// <param name="additionalColumns">Specifies the additional columns to
        /// be added to source data. Type: array of objects (or Expression with
        /// resultType array of objects).</param>
        public RestSource(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), object sourceRetryCount = default(object), object sourceRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), object requestMethod = default(object), object requestBody = default(object), object additionalHeaders = default(object), object paginationRules = default(object), object httpRequestTimeout = default(object), object requestInterval = default(object), IList<AdditionalColumns> additionalColumns = default(IList<AdditionalColumns>))
            : base(additionalProperties, sourceRetryCount, sourceRetryWait, maxConcurrentConnections, disableMetricsCollection)
        {
            RequestMethod = requestMethod;
            RequestBody = requestBody;
            AdditionalHeaders = additionalHeaders;
            PaginationRules = paginationRules;
            HttpRequestTimeout = httpRequestTimeout;
            RequestInterval = requestInterval;
            AdditionalColumns = additionalColumns;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the HTTP method used to call the RESTful API. The
        /// default is GET. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [JsonProperty(PropertyName = "requestMethod")]
        public object RequestMethod { get; set; }

        /// <summary>
        /// Gets or sets the HTTP request body to the RESTful API if
        /// requestMethod is POST. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [JsonProperty(PropertyName = "requestBody")]
        public object RequestBody { get; set; }

        /// <summary>
        /// Gets or sets the additional HTTP headers in the request to the
        /// RESTful API. Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "additionalHeaders")]
        public object AdditionalHeaders { get; set; }

        /// <summary>
        /// Gets or sets the pagination rules to compose next page requests.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "paginationRules")]
        public object PaginationRules { get; set; }

        /// <summary>
        /// Gets or sets the timeout (TimeSpan) to get an HTTP response. It is
        /// the timeout to get a response, not the timeout to read response
        /// data. Default value: 00:01:40. Type: string (or Expression with
        /// resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [JsonProperty(PropertyName = "httpRequestTimeout")]
        public object HttpRequestTimeout { get; set; }

        /// <summary>
        /// Gets or sets the time to await before sending next page request.
        /// </summary>
        [JsonProperty(PropertyName = "requestInterval")]
        public object RequestInterval { get; set; }

        /// <summary>
        /// Gets or sets specifies the additional columns to be added to source
        /// data. Type: array of objects (or Expression with resultType array
        /// of objects).
        /// </summary>
        [JsonProperty(PropertyName = "additionalColumns")]
        public IList<AdditionalColumns> AdditionalColumns { get; set; }

    }
}
