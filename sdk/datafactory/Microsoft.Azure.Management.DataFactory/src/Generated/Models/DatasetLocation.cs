// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Dataset location.
    /// </summary>
    public partial class DatasetLocation
    {
        /// <summary>
        /// Initializes a new instance of the DatasetLocation class.
        /// </summary>
        public DatasetLocation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetLocation class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="folderPath">Specify the folder path of dataset. Type:
        /// string (or Expression with resultType string)</param>
        /// <param name="fileName">Specify the file name of dataset. Type:
        /// string (or Expression with resultType string).</param>
        public DatasetLocation(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), object folderPath = default(object), object fileName = default(object))
        {
            AdditionalProperties = additionalProperties;
            FolderPath = folderPath;
            FileName = fileName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets specify the folder path of dataset. Type: string (or
        /// Expression with resultType string)
        /// </summary>
        [JsonProperty(PropertyName = "folderPath")]
        public object FolderPath { get; set; }

        /// <summary>
        /// Gets or sets specify the file name of dataset. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "fileName")]
        public object FileName { get; set; }

    }
}
