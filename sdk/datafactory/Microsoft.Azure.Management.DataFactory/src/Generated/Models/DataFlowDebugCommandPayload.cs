// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Structure of command payload.
    /// </summary>
    public partial class DataFlowDebugCommandPayload
    {
        /// <summary>
        /// Initializes a new instance of the DataFlowDebugCommandPayload
        /// class.
        /// </summary>
        public DataFlowDebugCommandPayload()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataFlowDebugCommandPayload
        /// class.
        /// </summary>
        /// <param name="streamName">The stream name which is used for
        /// preview.</param>
        /// <param name="rowLimits">Row limits for preview response.</param>
        /// <param name="columns">Array of column names.</param>
        /// <param name="expression">The expression which is used for
        /// preview.</param>
        public DataFlowDebugCommandPayload(string streamName, int? rowLimits = default(int?), IList<string> columns = default(IList<string>), string expression = default(string))
        {
            StreamName = streamName;
            RowLimits = rowLimits;
            Columns = columns;
            Expression = expression;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the stream name which is used for preview.
        /// </summary>
        [JsonProperty(PropertyName = "streamName")]
        public string StreamName { get; set; }

        /// <summary>
        /// Gets or sets row limits for preview response.
        /// </summary>
        [JsonProperty(PropertyName = "rowLimits")]
        public int? RowLimits { get; set; }

        /// <summary>
        /// Gets or sets array of column names.
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<string> Columns { get; set; }

        /// <summary>
        /// Gets or sets the expression which is used for preview.
        /// </summary>
        [JsonProperty(PropertyName = "expression")]
        public string Expression { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StreamName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StreamName");
            }
        }
    }
}
