// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Query parameters for triggers.
    /// </summary>
    public partial class TriggerFilterParameters
    {
        /// <summary>
        /// Initializes a new instance of the TriggerFilterParameters class.
        /// </summary>
        public TriggerFilterParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TriggerFilterParameters class.
        /// </summary>
        /// <param name="continuationToken">The continuation token for getting
        /// the next page of results. Null for first page.</param>
        /// <param name="parentTriggerName">The name of the parent
        /// TumblingWindowTrigger to get the child rerun triggers</param>
        public TriggerFilterParameters(string continuationToken = default(string), string parentTriggerName = default(string))
        {
            ContinuationToken = continuationToken;
            ParentTriggerName = parentTriggerName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the continuation token for getting the next page of
        /// results. Null for first page.
        /// </summary>
        [JsonProperty(PropertyName = "continuationToken")]
        public string ContinuationToken { get; set; }

        /// <summary>
        /// Gets or sets the name of the parent TumblingWindowTrigger to get
        /// the child rerun triggers
        /// </summary>
        [JsonProperty(PropertyName = "parentTriggerName")]
        public string ParentTriggerName { get; set; }

    }
}
