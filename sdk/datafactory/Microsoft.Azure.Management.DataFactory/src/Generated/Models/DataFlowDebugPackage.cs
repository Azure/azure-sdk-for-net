// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Request body structure for starting data flow debug session.
    /// </summary>
    public partial class DataFlowDebugPackage
    {
        /// <summary>
        /// Initializes a new instance of the DataFlowDebugPackage class.
        /// </summary>
        public DataFlowDebugPackage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataFlowDebugPackage class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="sessionId">The ID of data flow debug session.</param>
        /// <param name="dataFlow">Data flow instance.</param>
        /// <param name="datasets">List of datasets.</param>
        /// <param name="linkedServices">List of linked services.</param>
        /// <param name="staging">Staging info for debug session.</param>
        /// <param name="debugSettings">Data flow debug settings.</param>
        public DataFlowDebugPackage(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string sessionId = default(string), DataFlowDebugResource dataFlow = default(DataFlowDebugResource), IList<DatasetDebugResource> datasets = default(IList<DatasetDebugResource>), IList<LinkedServiceDebugResource> linkedServices = default(IList<LinkedServiceDebugResource>), DataFlowStagingInfo staging = default(DataFlowStagingInfo), DataFlowDebugPackageDebugSettings debugSettings = default(DataFlowDebugPackageDebugSettings))
        {
            AdditionalProperties = additionalProperties;
            SessionId = sessionId;
            DataFlow = dataFlow;
            Datasets = datasets;
            LinkedServices = linkedServices;
            Staging = staging;
            DebugSettings = debugSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the ID of data flow debug session.
        /// </summary>
        [JsonProperty(PropertyName = "sessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// Gets or sets data flow instance.
        /// </summary>
        [JsonProperty(PropertyName = "dataFlow")]
        public DataFlowDebugResource DataFlow { get; set; }

        /// <summary>
        /// Gets or sets list of datasets.
        /// </summary>
        [JsonProperty(PropertyName = "datasets")]
        public IList<DatasetDebugResource> Datasets { get; set; }

        /// <summary>
        /// Gets or sets list of linked services.
        /// </summary>
        [JsonProperty(PropertyName = "linkedServices")]
        public IList<LinkedServiceDebugResource> LinkedServices { get; set; }

        /// <summary>
        /// Gets or sets staging info for debug session.
        /// </summary>
        [JsonProperty(PropertyName = "staging")]
        public DataFlowStagingInfo Staging { get; set; }

        /// <summary>
        /// Gets or sets data flow debug settings.
        /// </summary>
        [JsonProperty(PropertyName = "debugSettings")]
        public DataFlowDebugPackageDebugSettings DebugSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DataFlow != null)
            {
                DataFlow.Validate();
            }
            if (Datasets != null)
            {
                foreach (var element in Datasets)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (LinkedServices != null)
            {
                foreach (var element1 in LinkedServices)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (Staging != null)
            {
                Staging.Validate();
            }
        }
    }
}
