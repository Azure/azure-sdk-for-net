// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The compute resource properties for managed integration runtime.
    /// </summary>
    public partial class IntegrationRuntimeComputeProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationRuntimeComputeProperties class.
        /// </summary>
        public IntegrationRuntimeComputeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationRuntimeComputeProperties class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="location">The location for managed integration
        /// runtime. The supported regions could be found on
        /// https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities</param>
        /// <param name="nodeSize">The node size requirement to managed
        /// integration runtime.</param>
        /// <param name="numberOfNodes">The required number of nodes for
        /// managed integration runtime.</param>
        /// <param name="maxParallelExecutionsPerNode">Maximum parallel
        /// executions count per node for managed integration runtime.</param>
        /// <param name="dataFlowProperties">Data flow properties for managed
        /// integration runtime.</param>
        /// <param name="vNetProperties">VNet properties for managed
        /// integration runtime.</param>
        public IntegrationRuntimeComputeProperties(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string location = default(string), string nodeSize = default(string), int? numberOfNodes = default(int?), int? maxParallelExecutionsPerNode = default(int?), IntegrationRuntimeDataFlowProperties dataFlowProperties = default(IntegrationRuntimeDataFlowProperties), IntegrationRuntimeVNetProperties vNetProperties = default(IntegrationRuntimeVNetProperties))
        {
            AdditionalProperties = additionalProperties;
            Location = location;
            NodeSize = nodeSize;
            NumberOfNodes = numberOfNodes;
            MaxParallelExecutionsPerNode = maxParallelExecutionsPerNode;
            DataFlowProperties = dataFlowProperties;
            VNetProperties = vNetProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the location for managed integration runtime. The
        /// supported regions could be found on
        /// https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the node size requirement to managed integration
        /// runtime.
        /// </summary>
        [JsonProperty(PropertyName = "nodeSize")]
        public string NodeSize { get; set; }

        /// <summary>
        /// Gets or sets the required number of nodes for managed integration
        /// runtime.
        /// </summary>
        [JsonProperty(PropertyName = "numberOfNodes")]
        public int? NumberOfNodes { get; set; }

        /// <summary>
        /// Gets or sets maximum parallel executions count per node for managed
        /// integration runtime.
        /// </summary>
        [JsonProperty(PropertyName = "maxParallelExecutionsPerNode")]
        public int? MaxParallelExecutionsPerNode { get; set; }

        /// <summary>
        /// Gets or sets data flow properties for managed integration runtime.
        /// </summary>
        [JsonProperty(PropertyName = "dataFlowProperties")]
        public IntegrationRuntimeDataFlowProperties DataFlowProperties { get; set; }

        /// <summary>
        /// Gets or sets vNet properties for managed integration runtime.
        /// </summary>
        [JsonProperty(PropertyName = "vNetProperties")]
        public IntegrationRuntimeVNetProperties VNetProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NumberOfNodes < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "NumberOfNodes", 1);
            }
            if (MaxParallelExecutionsPerNode < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "MaxParallelExecutionsPerNode", 1);
            }
            if (DataFlowProperties != null)
            {
                DataFlowProperties.Validate();
            }
        }
    }
}
