// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Skip error file.
    /// </summary>
    public partial class SkipErrorFile
    {
        /// <summary>
        /// Initializes a new instance of the SkipErrorFile class.
        /// </summary>
        public SkipErrorFile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkipErrorFile class.
        /// </summary>
        /// <param name="fileMissing">Skip if file is deleted by other client
        /// during copy. Default is true. Type: boolean (or Expression with
        /// resultType boolean).</param>
        /// <param name="dataInconsistency">Skip if source/sink file changed by
        /// other concurrent write. Default is false. Type: boolean (or
        /// Expression with resultType boolean).</param>
        public SkipErrorFile(object fileMissing = default(object), object dataInconsistency = default(object))
        {
            FileMissing = fileMissing;
            DataInconsistency = dataInconsistency;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets skip if file is deleted by other client during copy.
        /// Default is true. Type: boolean (or Expression with resultType
        /// boolean).
        /// </summary>
        [JsonProperty(PropertyName = "fileMissing")]
        public object FileMissing { get; set; }

        /// <summary>
        /// Gets or sets skip if source/sink file changed by other concurrent
        /// write. Default is false. Type: boolean (or Expression with
        /// resultType boolean).
        /// </summary>
        [JsonProperty(PropertyName = "dataInconsistency")]
        public object DataInconsistency { get; set; }

    }
}
