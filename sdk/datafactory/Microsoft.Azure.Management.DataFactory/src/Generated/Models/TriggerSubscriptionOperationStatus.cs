// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the response of a trigger subscription operation.
    /// </summary>
    public partial class TriggerSubscriptionOperationStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TriggerSubscriptionOperationStatus class.
        /// </summary>
        public TriggerSubscriptionOperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TriggerSubscriptionOperationStatus class.
        /// </summary>
        /// <param name="triggerName">Trigger name.</param>
        /// <param name="status">Event Subscription Status. Possible values
        /// include: 'Enabled', 'Provisioning', 'Deprovisioning', 'Disabled',
        /// 'Unknown'</param>
        public TriggerSubscriptionOperationStatus(string triggerName = default(string), string status = default(string))
        {
            TriggerName = triggerName;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets trigger name.
        /// </summary>
        [JsonProperty(PropertyName = "triggerName")]
        public string TriggerName { get; private set; }

        /// <summary>
        /// Gets event Subscription Status. Possible values include: 'Enabled',
        /// 'Provisioning', 'Deprovisioning', 'Disabled', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

    }
}
