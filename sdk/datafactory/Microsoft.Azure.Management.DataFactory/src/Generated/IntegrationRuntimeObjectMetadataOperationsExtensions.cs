// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for IntegrationRuntimeObjectMetadataOperations.
    /// </summary>
    public static partial class IntegrationRuntimeObjectMetadataOperationsExtensions
    {
            /// <summary>
            /// Refresh a SSIS integration runtime object metadata.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='integrationRuntimeName'>
            /// The integration runtime name.
            /// </param>
            public static SsisObjectMetadataStatusResponse Refresh(this IIntegrationRuntimeObjectMetadataOperations operations, string resourceGroupName, string factoryName, string integrationRuntimeName)
            {
                return operations.RefreshAsync(resourceGroupName, factoryName, integrationRuntimeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Refresh a SSIS integration runtime object metadata.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='integrationRuntimeName'>
            /// The integration runtime name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SsisObjectMetadataStatusResponse> RefreshAsync(this IIntegrationRuntimeObjectMetadataOperations operations, string resourceGroupName, string factoryName, string integrationRuntimeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RefreshWithHttpMessagesAsync(resourceGroupName, factoryName, integrationRuntimeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a SSIS integration runtime object metadata by specified path. The
            /// return is pageable metadata list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='integrationRuntimeName'>
            /// The integration runtime name.
            /// </param>
            /// <param name='getMetadataRequest'>
            /// The parameters for getting a SSIS object metadata.
            /// </param>
            public static SsisObjectMetadataListResponse Get(this IIntegrationRuntimeObjectMetadataOperations operations, string resourceGroupName, string factoryName, string integrationRuntimeName, GetSsisObjectMetadataRequest getMetadataRequest = default(GetSsisObjectMetadataRequest))
            {
                return operations.GetAsync(resourceGroupName, factoryName, integrationRuntimeName, getMetadataRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a SSIS integration runtime object metadata by specified path. The
            /// return is pageable metadata list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='integrationRuntimeName'>
            /// The integration runtime name.
            /// </param>
            /// <param name='getMetadataRequest'>
            /// The parameters for getting a SSIS object metadata.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SsisObjectMetadataListResponse> GetAsync(this IIntegrationRuntimeObjectMetadataOperations operations, string resourceGroupName, string factoryName, string integrationRuntimeName, GetSsisObjectMetadataRequest getMetadataRequest = default(GetSsisObjectMetadataRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, factoryName, integrationRuntimeName, getMetadataRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Refresh a SSIS integration runtime object metadata.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='integrationRuntimeName'>
            /// The integration runtime name.
            /// </param>
            public static SsisObjectMetadataStatusResponse BeginRefresh(this IIntegrationRuntimeObjectMetadataOperations operations, string resourceGroupName, string factoryName, string integrationRuntimeName)
            {
                return operations.BeginRefreshAsync(resourceGroupName, factoryName, integrationRuntimeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Refresh a SSIS integration runtime object metadata.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='integrationRuntimeName'>
            /// The integration runtime name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SsisObjectMetadataStatusResponse> BeginRefreshAsync(this IIntegrationRuntimeObjectMetadataOperations operations, string resourceGroupName, string factoryName, string integrationRuntimeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginRefreshWithHttpMessagesAsync(resourceGroupName, factoryName, integrationRuntimeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
