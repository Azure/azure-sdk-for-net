// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Script block of scripts.
    /// Serialized Name: ScriptActivityScriptBlock
    /// </summary>
    public partial class ScriptActivityScriptBlock
    {
        /// <summary> Initializes a new instance of ScriptActivityScriptBlock. </summary>
        /// <param name="text">
        /// The query text. Type: string (or Expression with resultType string).
        /// Serialized Name: ScriptActivityScriptBlock.text
        /// </param>
        /// <param name="scriptType">
        /// The type of the query. Type: string.
        /// Serialized Name: ScriptActivityScriptBlock.type
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        public ScriptActivityScriptBlock(DataFactoryElement<string> text, ScriptType scriptType)
        {
            Argument.AssertNotNull(text, nameof(text));

            Text = text;
            ScriptType = scriptType;
            Parameters = new ChangeTrackingList<ScriptActivityParameter>();
        }

        /// <summary> Initializes a new instance of ScriptActivityScriptBlock. </summary>
        /// <param name="text">
        /// The query text. Type: string (or Expression with resultType string).
        /// Serialized Name: ScriptActivityScriptBlock.text
        /// </param>
        /// <param name="scriptType">
        /// The type of the query. Type: string.
        /// Serialized Name: ScriptActivityScriptBlock.type
        /// </param>
        /// <param name="parameters">
        /// Array of script parameters. Type: array.
        /// Serialized Name: ScriptActivityScriptBlock.parameters
        /// </param>
        internal ScriptActivityScriptBlock(DataFactoryElement<string> text, ScriptType scriptType, IList<ScriptActivityParameter> parameters)
        {
            Text = text;
            ScriptType = scriptType;
            Parameters = parameters;
        }

        /// <summary>
        /// The query text. Type: string (or Expression with resultType string).
        /// Serialized Name: ScriptActivityScriptBlock.text
        /// </summary>
        public DataFactoryElement<string> Text { get; set; }
        /// <summary>
        /// The type of the query. Type: string.
        /// Serialized Name: ScriptActivityScriptBlock.type
        /// </summary>
        public ScriptType ScriptType { get; set; }
        /// <summary>
        /// Array of script parameters. Type: array.
        /// Serialized Name: ScriptActivityScriptBlock.parameters
        /// </summary>
        public IList<ScriptActivityParameter> Parameters { get; }
    }
}
