// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Azure Data Explorer command activity.
    /// Serialized Name: AzureDataExplorerCommandActivity
    /// </summary>
    public partial class AzureDataExplorerCommandActivity : ExecutionActivity
    {
        /// <summary> Initializes a new instance of AzureDataExplorerCommandActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="command">
        /// A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureDataExplorerCommandActivity.typeProperties.command
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="command"/> is null. </exception>
        public AzureDataExplorerCommandActivity(string name, BinaryData command) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (command == null)
            {
                throw new ArgumentNullException(nameof(command));
            }

            Command = command;
            ActivityType = "AzureDataExplorerCommand";
        }

        /// <summary> Initializes a new instance of AzureDataExplorerCommandActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="activityType">
        /// Type of activity.
        /// Serialized Name: Activity.type
        /// </param>
        /// <param name="description">
        /// Activity description.
        /// Serialized Name: Activity.description
        /// </param>
        /// <param name="dependsOn">
        /// Activity depends on condition.
        /// Serialized Name: Activity.dependsOn
        /// </param>
        /// <param name="userProperties">
        /// Activity user properties.
        /// Serialized Name: Activity.userProperties
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: ExecutionActivity.linkedServiceName
        /// </param>
        /// <param name="policy">
        /// Activity policy.
        /// Serialized Name: ExecutionActivity.policy
        /// </param>
        /// <param name="command">
        /// A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureDataExplorerCommandActivity.typeProperties.command
        /// </param>
        /// <param name="commandTimeout">
        /// Control command timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)
        /// Serialized Name: AzureDataExplorerCommandActivity.typeProperties.commandTimeout
        /// </param>
        internal AzureDataExplorerCommandActivity(string name, string activityType, string description, IList<PipelineActivityDependencyInfo> dependsOn, IList<UserProperty> userProperties, IDictionary<string, BinaryData> additionalProperties, LinkedServiceReference linkedServiceName, PipelineActivityPolicyInfo policy, BinaryData command, BinaryData commandTimeout) : base(name, activityType, description, dependsOn, userProperties, additionalProperties, linkedServiceName, policy)
        {
            Command = command;
            CommandTimeout = commandTimeout;
            ActivityType = activityType ?? "AzureDataExplorerCommand";
        }

        /// <summary>
        /// A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureDataExplorerCommandActivity.typeProperties.command
        /// </summary>
        public BinaryData Command { get; set; }
        /// <summary>
        /// Control command timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)
        /// Serialized Name: AzureDataExplorerCommandActivity.typeProperties.commandTimeout
        /// </summary>
        public BinaryData CommandTimeout { get; set; }
    }
}
