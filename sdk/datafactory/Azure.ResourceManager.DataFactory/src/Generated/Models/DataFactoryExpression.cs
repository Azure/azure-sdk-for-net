// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> Azure Data Factory expression definition. </summary>
    public partial class DataFactoryExpression
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="DataFactoryExpression"/>. </summary>
        /// <param name="expressionType"> Expression type. </param>
        /// <param name="value"> Expression value. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataFactoryExpression(DataFactoryExpressionType expressionType, string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            ExpressionType = expressionType;
            Value = value;
        }

        /// <summary> Initializes a new instance of <see cref="DataFactoryExpression"/>. </summary>
        /// <param name="expressionType"> Expression type. </param>
        /// <param name="value"> Expression value. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal DataFactoryExpression(DataFactoryExpressionType expressionType, string value, Dictionary<string, BinaryData> rawData)
        {
            ExpressionType = expressionType;
            Value = value;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="DataFactoryExpression"/> for deserialization. </summary>
        internal DataFactoryExpression()
        {
        }

        /// <summary> Expression type. </summary>
        public DataFactoryExpressionType ExpressionType { get; set; }
        /// <summary> Expression value. </summary>
        public string Value { get; set; }
    }
}
