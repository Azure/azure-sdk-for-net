// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Json dataset.
    /// Serialized Name: JsonDataset
    /// </summary>
    public partial class JsonDataset : FactoryDatasetDefinition
    {
        /// <summary> Initializes a new instance of JsonDataset. </summary>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedServiceName"/> is null. </exception>
        public JsonDataset(FactoryLinkedServiceReference linkedServiceName) : base(linkedServiceName)
        {
            Argument.AssertNotNull(linkedServiceName, nameof(linkedServiceName));

            DatasetType = "Json";
        }

        /// <summary> Initializes a new instance of JsonDataset. </summary>
        /// <param name="datasetType">
        /// Type of dataset.
        /// Serialized Name: Dataset.type
        /// </param>
        /// <param name="description">
        /// Dataset description.
        /// Serialized Name: Dataset.description
        /// </param>
        /// <param name="structure">
        /// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
        /// Serialized Name: Dataset.structure
        /// </param>
        /// <param name="schema">
        /// Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
        /// Serialized Name: Dataset.schema
        /// </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <param name="parameters">
        /// Parameters for dataset.
        /// Serialized Name: Dataset.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the Dataset.
        /// Serialized Name: Dataset.annotations
        /// </param>
        /// <param name="folder">
        /// The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
        /// Serialized Name: Dataset.folder
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="dataLocation">
        /// The location of the json data storage.
        /// Serialized Name: JsonDataset.typeProperties.location
        /// Please note <see cref="DatasetLocation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AmazonS3CompatibleLocation"/>, <see cref="AmazonS3Location"/>, <see cref="AzureBlobFSLocation"/>, <see cref="AzureBlobStorageLocation"/>, <see cref="AzureDataLakeStoreLocation"/>, <see cref="AzureFileStorageLocation"/>, <see cref="FileServerLocation"/>, <see cref="FtpServerLocation"/>, <see cref="GoogleCloudStorageLocation"/>, <see cref="HdfsLocation"/>, <see cref="HttpServerLocation"/>, <see cref="OracleCloudStorageLocation"/> and <see cref="SftpLocation"/>.
        /// </param>
        /// <param name="encodingName">
        /// The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
        /// Serialized Name: JsonDataset.typeProperties.encodingName
        /// </param>
        /// <param name="compression">
        /// The data compression method used for the json dataset.
        /// Serialized Name: JsonDataset.typeProperties.compression
        /// </param>
        internal JsonDataset(string datasetType, string description, DataFactoryElement<IList<DatasetDataElement>> structure, DataFactoryElement<IList<DatasetSchemaDataElement>> schema, FactoryLinkedServiceReference linkedServiceName, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, DatasetFolder folder, IDictionary<string, BinaryData> additionalProperties, DatasetLocation dataLocation, DataFactoryElement<string> encodingName, DatasetCompression compression) : base(datasetType, description, structure, schema, linkedServiceName, parameters, annotations, folder, additionalProperties)
        {
            DataLocation = dataLocation;
            EncodingName = encodingName;
            Compression = compression;
            DatasetType = datasetType ?? "Json";
        }

        /// <summary>
        /// The location of the json data storage.
        /// Serialized Name: JsonDataset.typeProperties.location
        /// Please note <see cref="DatasetLocation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AmazonS3CompatibleLocation"/>, <see cref="AmazonS3Location"/>, <see cref="AzureBlobFSLocation"/>, <see cref="AzureBlobStorageLocation"/>, <see cref="AzureDataLakeStoreLocation"/>, <see cref="AzureFileStorageLocation"/>, <see cref="FileServerLocation"/>, <see cref="FtpServerLocation"/>, <see cref="GoogleCloudStorageLocation"/>, <see cref="HdfsLocation"/>, <see cref="HttpServerLocation"/>, <see cref="OracleCloudStorageLocation"/> and <see cref="SftpLocation"/>.
        /// </summary>
        public DatasetLocation DataLocation { get; set; }
        /// <summary>
        /// The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
        /// Serialized Name: JsonDataset.typeProperties.encodingName
        /// </summary>
        public DataFactoryElement<string> EncodingName { get; set; }
        /// <summary>
        /// The data compression method used for the json dataset.
        /// Serialized Name: JsonDataset.typeProperties.compression
        /// </summary>
        public DatasetCompression Compression { get; set; }
    }
}
