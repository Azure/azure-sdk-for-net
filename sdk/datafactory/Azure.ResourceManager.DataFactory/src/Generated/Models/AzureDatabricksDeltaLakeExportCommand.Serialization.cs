// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    public partial class AzureDatabricksDeltaLakeExportCommand : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DateFormat))
            {
                writer.WritePropertyName("dateFormat");
                writer.WriteStringValue(DateFormat.AbsoluteUri);
            }
            if (Optional.IsDefined(TimestampFormat))
            {
                writer.WritePropertyName("timestampFormat");
                writer.WriteStringValue(TimestampFormat.AbsoluteUri);
            }
            writer.WritePropertyName("type");
            writer.WriteStringValue(ExportSettingsType);
            foreach (var item in AdditionalProperties)
            {
                writer.WritePropertyName(item.Key);
                writer.WriteStringValue(item.Value.AbsoluteUri);
            }
            writer.WriteEndObject();
        }

        internal static AzureDatabricksDeltaLakeExportCommand DeserializeAzureDatabricksDeltaLakeExportCommand(JsonElement element)
        {
            Optional<Uri> dateFormat = default;
            Optional<Uri> timestampFormat = default;
            string type = default;
            IDictionary<string, Uri> additionalProperties = default;
            Dictionary<string, Uri> additionalPropertiesDictionary = new Dictionary<string, Uri>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dateFormat"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dateFormat = null;
                        continue;
                    }
                    dateFormat = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("timestampFormat"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        timestampFormat = null;
                        continue;
                    }
                    timestampFormat = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                additionalPropertiesDictionary.Add(property.Name, new Uri(property.Value.GetString()));
            }
            additionalProperties = additionalPropertiesDictionary;
            return new AzureDatabricksDeltaLakeExportCommand(type, additionalProperties, dateFormat.Value, timestampFormat.Value);
        }
    }
}
