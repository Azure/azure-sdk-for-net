// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Open Data Protocol (OData) linked service.
    /// Serialized Name: ODataLinkedService
    /// </summary>
    public partial class ODataLinkedService : FactoryLinkedServiceDefinition
    {
        /// <summary> Initializes a new instance of ODataLinkedService. </summary>
        /// <param name="uri">
        /// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.url
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="uri"/> is null. </exception>
        public ODataLinkedService(BinaryData uri)
        {
            if (uri == null)
            {
                throw new ArgumentNullException(nameof(uri));
            }

            Uri = uri;
            LinkedServiceType = "OData";
        }

        /// <summary> Initializes a new instance of ODataLinkedService. </summary>
        /// <param name="linkedServiceType">
        /// Type of linked service.
        /// Serialized Name: LinkedService.type
        /// </param>
        /// <param name="connectVia">
        /// The integration runtime reference.
        /// Serialized Name: LinkedService.connectVia
        /// </param>
        /// <param name="description">
        /// Linked service description.
        /// Serialized Name: LinkedService.description
        /// </param>
        /// <param name="parameters">
        /// Parameters for linked service.
        /// Serialized Name: LinkedService.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the linked service.
        /// Serialized Name: LinkedService.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="uri">
        /// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.url
        /// </param>
        /// <param name="authenticationType">
        /// Type of authentication used to connect to the OData service.
        /// Serialized Name: ODataLinkedService.typeProperties.authenticationType
        /// </param>
        /// <param name="userName">
        /// User name of the OData service. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.userName
        /// </param>
        /// <param name="password">
        /// Password of the OData service.
        /// Serialized Name: ODataLinkedService.typeProperties.password
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="authHeaders">
        /// The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
        /// Serialized Name: ODataLinkedService.typeProperties.authHeaders
        /// </param>
        /// <param name="tenant">
        /// Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.tenant
        /// </param>
        /// <param name="servicePrincipalId">
        /// Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalId
        /// </param>
        /// <param name="azureCloudType">
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.azureCloudType
        /// </param>
        /// <param name="aadResourceId">
        /// Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.aadResourceId
        /// </param>
        /// <param name="aadServicePrincipalCredentialType">
        /// Specify the credential type (key or cert) is used for service principal.
        /// Serialized Name: ODataLinkedService.typeProperties.aadServicePrincipalCredentialType
        /// </param>
        /// <param name="servicePrincipalKey">
        /// Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalKey
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="servicePrincipalEmbeddedCert">
        /// Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalEmbeddedCert
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="servicePrincipalEmbeddedCertPassword">
        /// Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalEmbeddedCertPassword
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="encryptedCredential">
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.encryptedCredential
        /// </param>
        internal ODataLinkedService(string linkedServiceType, IntegrationRuntimeReference connectVia, string description, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, BinaryData uri, ODataAuthenticationType? authenticationType, BinaryData userName, FactorySecretBaseDefinition password, BinaryData authHeaders, BinaryData tenant, BinaryData servicePrincipalId, BinaryData azureCloudType, BinaryData aadResourceId, ODataAadServicePrincipalCredentialType? aadServicePrincipalCredentialType, FactorySecretBaseDefinition servicePrincipalKey, FactorySecretBaseDefinition servicePrincipalEmbeddedCert, FactorySecretBaseDefinition servicePrincipalEmbeddedCertPassword, BinaryData encryptedCredential) : base(linkedServiceType, connectVia, description, parameters, annotations, additionalProperties)
        {
            Uri = uri;
            AuthenticationType = authenticationType;
            UserName = userName;
            Password = password;
            AuthHeaders = authHeaders;
            Tenant = tenant;
            ServicePrincipalId = servicePrincipalId;
            AzureCloudType = azureCloudType;
            AadResourceId = aadResourceId;
            AadServicePrincipalCredentialType = aadServicePrincipalCredentialType;
            ServicePrincipalKey = servicePrincipalKey;
            ServicePrincipalEmbeddedCert = servicePrincipalEmbeddedCert;
            ServicePrincipalEmbeddedCertPassword = servicePrincipalEmbeddedCertPassword;
            EncryptedCredential = encryptedCredential;
            LinkedServiceType = linkedServiceType ?? "OData";
        }

        /// <summary>
        /// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.url
        /// </summary>
        public BinaryData Uri { get; set; }
        /// <summary>
        /// Type of authentication used to connect to the OData service.
        /// Serialized Name: ODataLinkedService.typeProperties.authenticationType
        /// </summary>
        public ODataAuthenticationType? AuthenticationType { get; set; }
        /// <summary>
        /// User name of the OData service. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.userName
        /// </summary>
        public BinaryData UserName { get; set; }
        /// <summary>
        /// Password of the OData service.
        /// Serialized Name: ODataLinkedService.typeProperties.password
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition Password { get; set; }
        /// <summary>
        /// The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
        /// Serialized Name: ODataLinkedService.typeProperties.authHeaders
        /// </summary>
        public BinaryData AuthHeaders { get; set; }
        /// <summary>
        /// Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.tenant
        /// </summary>
        public BinaryData Tenant { get; set; }
        /// <summary>
        /// Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalId
        /// </summary>
        public BinaryData ServicePrincipalId { get; set; }
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.azureCloudType
        /// </summary>
        public BinaryData AzureCloudType { get; set; }
        /// <summary>
        /// Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.aadResourceId
        /// </summary>
        public BinaryData AadResourceId { get; set; }
        /// <summary>
        /// Specify the credential type (key or cert) is used for service principal.
        /// Serialized Name: ODataLinkedService.typeProperties.aadServicePrincipalCredentialType
        /// </summary>
        public ODataAadServicePrincipalCredentialType? AadServicePrincipalCredentialType { get; set; }
        /// <summary>
        /// Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalKey
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition ServicePrincipalKey { get; set; }
        /// <summary>
        /// Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalEmbeddedCert
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition ServicePrincipalEmbeddedCert { get; set; }
        /// <summary>
        /// Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.servicePrincipalEmbeddedCertPassword
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition ServicePrincipalEmbeddedCertPassword { get; set; }
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// Serialized Name: ODataLinkedService.typeProperties.encryptedCredential
        /// </summary>
        public BinaryData EncryptedCredential { get; set; }
    }
}
