// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Trigger that runs every time the selected Blob container changes.
    /// Serialized Name: BlobTrigger
    /// </summary>
    public partial class AzureBlobTrigger : MultiplePipelineTrigger
    {
        /// <summary> Initializes a new instance of AzureBlobTrigger. </summary>
        /// <param name="folderPath">
        /// The path of the container/folder that will trigger the pipeline.
        /// Serialized Name: BlobTrigger.typeProperties.folderPath
        /// </param>
        /// <param name="maxConcurrency">
        /// The max number of parallel files to handle when it is triggered.
        /// Serialized Name: BlobTrigger.typeProperties.maxConcurrency
        /// </param>
        /// <param name="linkedService">
        /// The Azure Storage linked service reference.
        /// Serialized Name: BlobTrigger.typeProperties.linkedService
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="folderPath"/> or <paramref name="linkedService"/> is null. </exception>
        public AzureBlobTrigger(string folderPath, int maxConcurrency, FactoryLinkedServiceReference linkedService)
        {
            Argument.AssertNotNull(folderPath, nameof(folderPath));
            Argument.AssertNotNull(linkedService, nameof(linkedService));

            FolderPath = folderPath;
            MaxConcurrency = maxConcurrency;
            LinkedService = linkedService;
            TriggerType = "BlobTrigger";
        }

        /// <summary> Initializes a new instance of AzureBlobTrigger. </summary>
        /// <param name="triggerType">
        /// Trigger type.
        /// Serialized Name: Trigger.type
        /// </param>
        /// <param name="description">
        /// Trigger description.
        /// Serialized Name: Trigger.description
        /// </param>
        /// <param name="runtimeState">
        /// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
        /// Serialized Name: Trigger.runtimeState
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the trigger.
        /// Serialized Name: Trigger.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="pipelines">
        /// Pipelines that need to be started.
        /// Serialized Name: MultiplePipelineTrigger.pipelines
        /// </param>
        /// <param name="folderPath">
        /// The path of the container/folder that will trigger the pipeline.
        /// Serialized Name: BlobTrigger.typeProperties.folderPath
        /// </param>
        /// <param name="maxConcurrency">
        /// The max number of parallel files to handle when it is triggered.
        /// Serialized Name: BlobTrigger.typeProperties.maxConcurrency
        /// </param>
        /// <param name="linkedService">
        /// The Azure Storage linked service reference.
        /// Serialized Name: BlobTrigger.typeProperties.linkedService
        /// </param>
        internal AzureBlobTrigger(string triggerType, string description, FactoryTriggerRuntimeState? runtimeState, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, IList<TriggerPipelineReference> pipelines, string folderPath, int maxConcurrency, FactoryLinkedServiceReference linkedService) : base(triggerType, description, runtimeState, annotations, additionalProperties, pipelines)
        {
            FolderPath = folderPath;
            MaxConcurrency = maxConcurrency;
            LinkedService = linkedService;
            TriggerType = triggerType ?? "BlobTrigger";
        }

        /// <summary>
        /// The path of the container/folder that will trigger the pipeline.
        /// Serialized Name: BlobTrigger.typeProperties.folderPath
        /// </summary>
        public string FolderPath { get; set; }
        /// <summary>
        /// The max number of parallel files to handle when it is triggered.
        /// Serialized Name: BlobTrigger.typeProperties.maxConcurrency
        /// </summary>
        public int MaxConcurrency { get; set; }
        /// <summary>
        /// The Azure Storage linked service reference.
        /// Serialized Name: BlobTrigger.typeProperties.linkedService
        /// </summary>
        public FactoryLinkedServiceReference LinkedService { get; set; }
    }
}
