// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    public partial class MapperTable : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Schema))
            {
                writer.WritePropertyName("schema"u8);
                writer.WriteStartArray();
                foreach (var item in Schema)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(DslConnectorProperties))
            {
                writer.WritePropertyName("dslConnectorProperties"u8);
                writer.WriteStartArray();
                foreach (var item in DslConnectorProperties)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static MapperTable DeserializeMapperTable(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> name = default;
            Optional<IList<MapperTableSchema>> schema = default;
            Optional<IList<MapperDslConnectorProperties>> dslConnectorProperties = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("schema"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            List<MapperTableSchema> array = new List<MapperTableSchema>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(MapperTableSchema.DeserializeMapperTableSchema(item));
                            }
                            schema = array;
                            continue;
                        }
                        if (property0.NameEquals("dslConnectorProperties"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            List<MapperDslConnectorProperties> array = new List<MapperDslConnectorProperties>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(MapperDslConnectorProperties.DeserializeMapperDslConnectorProperties(item));
                            }
                            dslConnectorProperties = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new MapperTable(name.Value, Optional.ToList(schema), Optional.ToList(dslConnectorProperties));
        }
    }
}
