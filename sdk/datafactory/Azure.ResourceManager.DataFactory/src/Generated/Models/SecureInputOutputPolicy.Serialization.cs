// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    public partial class SecureInputOutputPolicy : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IsSecureInputEnabled))
            {
                writer.WritePropertyName("secureInput"u8);
                writer.WriteBooleanValue(IsSecureInputEnabled.Value);
            }
            if (Optional.IsDefined(IsSecureOutputEnabled))
            {
                writer.WritePropertyName("secureOutput"u8);
                writer.WriteBooleanValue(IsSecureOutputEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static SecureInputOutputPolicy DeserializeSecureInputOutputPolicy(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> secureInput = default;
            Optional<bool> secureOutput = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("secureInput"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    secureInput = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("secureOutput"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    secureOutput = property.Value.GetBoolean();
                    continue;
                }
            }
            return new SecureInputOutputPolicy(Optional.ToNullable(secureInput), Optional.ToNullable(secureOutput));
        }
    }
}
