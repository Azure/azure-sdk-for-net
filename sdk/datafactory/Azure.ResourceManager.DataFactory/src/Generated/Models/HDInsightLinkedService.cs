// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// HDInsight linked service.
    /// Serialized Name: HDInsightLinkedService
    /// </summary>
    public partial class HDInsightLinkedService : FactoryLinkedServiceDefinition
    {
        /// <summary> Initializes a new instance of HDInsightLinkedService. </summary>
        /// <param name="clusterUri">
        /// HDInsight cluster URI. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.clusterUri
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="clusterUri"/> is null. </exception>
        public HDInsightLinkedService(DataFactoryElement<string> clusterUri)
        {
            Argument.AssertNotNull(clusterUri, nameof(clusterUri));

            ClusterUri = clusterUri;
            LinkedServiceType = "HDInsight";
        }

        /// <summary> Initializes a new instance of HDInsightLinkedService. </summary>
        /// <param name="linkedServiceType">
        /// Type of linked service.
        /// Serialized Name: LinkedService.type
        /// </param>
        /// <param name="connectVia">
        /// The integration runtime reference.
        /// Serialized Name: LinkedService.connectVia
        /// </param>
        /// <param name="description">
        /// Linked service description.
        /// Serialized Name: LinkedService.description
        /// </param>
        /// <param name="parameters">
        /// Parameters for linked service.
        /// Serialized Name: LinkedService.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the linked service.
        /// Serialized Name: LinkedService.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="clusterUri">
        /// HDInsight cluster URI. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.clusterUri
        /// </param>
        /// <param name="userName">
        /// HDInsight cluster user name. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.userName
        /// </param>
        /// <param name="password">
        /// HDInsight cluster password.
        /// Serialized Name: HDInsightLinkedService.typeProperties.password
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="linkedServiceName">
        /// The Azure Storage linked service reference.
        /// Serialized Name: HDInsightLinkedService.typeProperties.linkedServiceName
        /// </param>
        /// <param name="hcatalogLinkedServiceName">
        /// A reference to the Azure SQL linked service that points to the HCatalog database.
        /// Serialized Name: HDInsightLinkedService.typeProperties.hcatalogLinkedServiceName
        /// </param>
        /// <param name="encryptedCredential">
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// Serialized Name: HDInsightLinkedService.typeProperties.encryptedCredential
        /// </param>
        /// <param name="isEspEnabled">
        /// Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
        /// Serialized Name: HDInsightLinkedService.typeProperties.isEspEnabled
        /// </param>
        /// <param name="fileSystem">
        /// Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.fileSystem
        /// </param>
        internal HDInsightLinkedService(string linkedServiceType, IntegrationRuntimeReference connectVia, string description, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, DataFactoryElement<string> clusterUri, DataFactoryElement<string> userName, FactorySecretBaseDefinition password, FactoryLinkedServiceReference linkedServiceName, FactoryLinkedServiceReference hcatalogLinkedServiceName, BinaryData encryptedCredential, DataFactoryElement<bool> isEspEnabled, DataFactoryElement<string> fileSystem) : base(linkedServiceType, connectVia, description, parameters, annotations, additionalProperties)
        {
            ClusterUri = clusterUri;
            UserName = userName;
            Password = password;
            LinkedServiceName = linkedServiceName;
            HcatalogLinkedServiceName = hcatalogLinkedServiceName;
            EncryptedCredential = encryptedCredential;
            IsEspEnabled = isEspEnabled;
            FileSystem = fileSystem;
            LinkedServiceType = linkedServiceType ?? "HDInsight";
        }

        /// <summary>
        /// HDInsight cluster URI. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.clusterUri
        /// </summary>
        public DataFactoryElement<string> ClusterUri { get; set; }
        /// <summary>
        /// HDInsight cluster user name. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.userName
        /// </summary>
        public DataFactoryElement<string> UserName { get; set; }
        /// <summary>
        /// HDInsight cluster password.
        /// Serialized Name: HDInsightLinkedService.typeProperties.password
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition Password { get; set; }
        /// <summary>
        /// The Azure Storage linked service reference.
        /// Serialized Name: HDInsightLinkedService.typeProperties.linkedServiceName
        /// </summary>
        public FactoryLinkedServiceReference LinkedServiceName { get; set; }
        /// <summary>
        /// A reference to the Azure SQL linked service that points to the HCatalog database.
        /// Serialized Name: HDInsightLinkedService.typeProperties.hcatalogLinkedServiceName
        /// </summary>
        public FactoryLinkedServiceReference HcatalogLinkedServiceName { get; set; }
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// Serialized Name: HDInsightLinkedService.typeProperties.encryptedCredential
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData EncryptedCredential { get; set; }
        /// <summary>
        /// Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
        /// Serialized Name: HDInsightLinkedService.typeProperties.isEspEnabled
        /// </summary>
        public DataFactoryElement<bool> IsEspEnabled { get; set; }
        /// <summary>
        /// Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
        /// Serialized Name: HDInsightLinkedService.typeProperties.fileSystem
        /// </summary>
        public DataFactoryElement<string> FileSystem { get; set; }
    }
}
