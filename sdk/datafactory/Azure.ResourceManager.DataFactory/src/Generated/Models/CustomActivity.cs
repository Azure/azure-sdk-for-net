// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> Custom activity type. </summary>
    public partial class CustomActivity : ExecutionActivity
    {
        /// <summary> Initializes a new instance of CustomActivity. </summary>
        /// <param name="name"> Activity name. </param>
        /// <param name="command"> Command for custom activity Type: string (or Expression with resultType string). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="command"/> is null. </exception>
        public CustomActivity(string name, BinaryData command) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (command == null)
            {
                throw new ArgumentNullException(nameof(command));
            }

            Command = command;
            ExtendedProperties = new ChangeTrackingDictionary<string, BinaryData>();
            ActivityType = "Custom";
        }

        /// <summary> Initializes a new instance of CustomActivity. </summary>
        /// <param name="name"> Activity name. </param>
        /// <param name="activityType"> Type of activity. </param>
        /// <param name="description"> Activity description. </param>
        /// <param name="dependsOn"> Activity depends on condition. </param>
        /// <param name="userProperties"> Activity user properties. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="linkedServiceName"> Linked service reference. </param>
        /// <param name="policy"> Activity policy. </param>
        /// <param name="command"> Command for custom activity Type: string (or Expression with resultType string). </param>
        /// <param name="resourceLinkedService"> Resource linked service reference. </param>
        /// <param name="folderPath"> Folder path for resource files Type: string (or Expression with resultType string). </param>
        /// <param name="referenceObjects"> Reference objects. </param>
        /// <param name="extendedProperties"> User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined. </param>
        /// <param name="retentionTimeInDays"> The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double). </param>
        /// <param name="autoUserSpecification"> Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double). </param>
        internal CustomActivity(string name, string activityType, string description, IList<ActivityDependency> dependsOn, IList<ActivityUserProperty> userProperties, IDictionary<string, BinaryData> additionalProperties, FactoryLinkedServiceReference linkedServiceName, ActivityPolicy policy, BinaryData command, FactoryLinkedServiceReference resourceLinkedService, BinaryData folderPath, CustomActivityReferenceObject referenceObjects, IDictionary<string, BinaryData> extendedProperties, BinaryData retentionTimeInDays, BinaryData autoUserSpecification) : base(name, activityType, description, dependsOn, userProperties, additionalProperties, linkedServiceName, policy)
        {
            Command = command;
            ResourceLinkedService = resourceLinkedService;
            FolderPath = folderPath;
            ReferenceObjects = referenceObjects;
            ExtendedProperties = extendedProperties;
            RetentionTimeInDays = retentionTimeInDays;
            AutoUserSpecification = autoUserSpecification;
            ActivityType = activityType ?? "Custom";
        }

        /// <summary> Command for custom activity Type: string (or Expression with resultType string). </summary>
        public BinaryData Command { get; set; }
        /// <summary> Resource linked service reference. </summary>
        public FactoryLinkedServiceReference ResourceLinkedService { get; set; }
        /// <summary> Folder path for resource files Type: string (or Expression with resultType string). </summary>
        public BinaryData FolderPath { get; set; }
        /// <summary> Reference objects. </summary>
        public CustomActivityReferenceObject ReferenceObjects { get; set; }
        /// <summary> User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined. </summary>
        public IDictionary<string, BinaryData> ExtendedProperties { get; }
        /// <summary> The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double). </summary>
        public BinaryData RetentionTimeInDays { get; set; }
        /// <summary> Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double). </summary>
        public BinaryData AutoUserSpecification { get; set; }
    }
}
