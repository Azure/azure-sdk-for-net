// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Ssis Package.
    /// Serialized Name: SsisPackage
    /// </summary>
    public partial class SsisPackage : SsisObjectMetadata
    {
        /// <summary> Initializes a new instance of SsisPackage. </summary>
        internal SsisPackage()
        {
            Parameters = new ChangeTrackingList<SsisParameterInfo>();
            MetadataType = SsisObjectMetadataType.Package;
        }

        /// <summary> Initializes a new instance of SsisPackage. </summary>
        /// <param name="metadataType">
        /// Type of metadata.
        /// Serialized Name: SsisObjectMetadata.type
        /// </param>
        /// <param name="id">
        /// Metadata id.
        /// Serialized Name: SsisObjectMetadata.id
        /// </param>
        /// <param name="name">
        /// Metadata name.
        /// Serialized Name: SsisObjectMetadata.name
        /// </param>
        /// <param name="description">
        /// Metadata description.
        /// Serialized Name: SsisObjectMetadata.description
        /// </param>
        /// <param name="folderId">
        /// Folder id which contains package.
        /// Serialized Name: SsisPackage.folderId
        /// </param>
        /// <param name="projectVersion">
        /// Project version which contains package.
        /// Serialized Name: SsisPackage.projectVersion
        /// </param>
        /// <param name="projectId">
        /// Project id which contains package.
        /// Serialized Name: SsisPackage.projectId
        /// </param>
        /// <param name="parameters">
        /// Parameters in package
        /// Serialized Name: SsisPackage.parameters
        /// </param>
        internal SsisPackage(SsisObjectMetadataType metadataType, long? id, string name, string description, long? folderId, long? projectVersion, long? projectId, IReadOnlyList<SsisParameterInfo> parameters) : base(metadataType, id, name, description)
        {
            FolderId = folderId;
            ProjectVersion = projectVersion;
            ProjectId = projectId;
            Parameters = parameters;
            MetadataType = metadataType;
        }

        /// <summary>
        /// Folder id which contains package.
        /// Serialized Name: SsisPackage.folderId
        /// </summary>
        public long? FolderId { get; }
        /// <summary>
        /// Project version which contains package.
        /// Serialized Name: SsisPackage.projectVersion
        /// </summary>
        public long? ProjectVersion { get; }
        /// <summary>
        /// Project id which contains package.
        /// Serialized Name: SsisPackage.projectId
        /// </summary>
        public long? ProjectId { get; }
        /// <summary>
        /// Parameters in package
        /// Serialized Name: SsisPackage.parameters
        /// </summary>
        public IReadOnlyList<SsisParameterInfo> Parameters { get; }
    }
}
