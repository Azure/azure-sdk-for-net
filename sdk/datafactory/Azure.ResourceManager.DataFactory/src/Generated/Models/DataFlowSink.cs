// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Transformation for data flow sink.
    /// Serialized Name: DataFlowSink
    /// </summary>
    public partial class DataFlowSink : Transformation
    {
        /// <summary> Initializes a new instance of DataFlowSink. </summary>
        /// <param name="name">
        /// Transformation name.
        /// Serialized Name: Transformation.name
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public DataFlowSink(string name) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
        }

        /// <summary> Initializes a new instance of DataFlowSink. </summary>
        /// <param name="name">
        /// Transformation name.
        /// Serialized Name: Transformation.name
        /// </param>
        /// <param name="description">
        /// Transformation description.
        /// Serialized Name: Transformation.description
        /// </param>
        /// <param name="dataset">
        /// Dataset reference.
        /// Serialized Name: Transformation.dataset
        /// </param>
        /// <param name="linkedService">
        /// Linked service reference.
        /// Serialized Name: Transformation.linkedService
        /// </param>
        /// <param name="flowlet">
        /// Flowlet Reference
        /// Serialized Name: Transformation.flowlet
        /// </param>
        /// <param name="schemaLinkedService">
        /// Schema linked service reference.
        /// Serialized Name: DataFlowSink.schemaLinkedService
        /// </param>
        /// <param name="rejectedDataLinkedService">
        /// Rejected data linked service reference.
        /// Serialized Name: DataFlowSink.rejectedDataLinkedService
        /// </param>
        internal DataFlowSink(string name, string description, DatasetReference dataset, LinkedServiceReference linkedService, DataFlowReference flowlet, LinkedServiceReference schemaLinkedService, LinkedServiceReference rejectedDataLinkedService) : base(name, description, dataset, linkedService, flowlet)
        {
            SchemaLinkedService = schemaLinkedService;
            RejectedDataLinkedService = rejectedDataLinkedService;
        }

        /// <summary>
        /// Schema linked service reference.
        /// Serialized Name: DataFlowSink.schemaLinkedService
        /// </summary>
        public LinkedServiceReference SchemaLinkedService { get; set; }
        /// <summary>
        /// Rejected data linked service reference.
        /// Serialized Name: DataFlowSink.rejectedDataLinkedService
        /// </summary>
        public LinkedServiceReference RejectedDataLinkedService { get; set; }
    }
}
