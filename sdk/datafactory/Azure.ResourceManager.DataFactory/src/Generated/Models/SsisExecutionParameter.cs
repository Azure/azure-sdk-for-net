// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> SSIS execution parameter. </summary>
    public partial class SsisExecutionParameter
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SsisExecutionParameter"/>. </summary>
        /// <param name="value"> SSIS package execution parameter value. Type: string (or Expression with resultType string). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SsisExecutionParameter(DataFactoryElement<string> value)
        {
            Argument.AssertNotNull(value, nameof(value));

            Value = value;
        }

        /// <summary> Initializes a new instance of <see cref="SsisExecutionParameter"/>. </summary>
        /// <param name="value"> SSIS package execution parameter value. Type: string (or Expression with resultType string). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SsisExecutionParameter(DataFactoryElement<string> value, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Value = value;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SsisExecutionParameter"/> for deserialization. </summary>
        internal SsisExecutionParameter()
        {
        }

        /// <summary> SSIS package execution parameter value. Type: string (or Expression with resultType string). </summary>
        public DataFactoryElement<string> Value { get; set; }
    }
}
