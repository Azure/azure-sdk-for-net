// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// SAP ODP Linked Service.
    /// Serialized Name: SapOdpLinkedService
    /// </summary>
    public partial class SapOdpLinkedService : FactoryLinkedServiceDefinition
    {
        /// <summary> Initializes a new instance of SapOdpLinkedService. </summary>
        public SapOdpLinkedService()
        {
            LinkedServiceType = "SapOdp";
        }

        /// <summary> Initializes a new instance of SapOdpLinkedService. </summary>
        /// <param name="linkedServiceType">
        /// Type of linked service.
        /// Serialized Name: LinkedService.type
        /// </param>
        /// <param name="connectVia">
        /// The integration runtime reference.
        /// Serialized Name: LinkedService.connectVia
        /// </param>
        /// <param name="description">
        /// Linked service description.
        /// Serialized Name: LinkedService.description
        /// </param>
        /// <param name="parameters">
        /// Parameters for linked service.
        /// Serialized Name: LinkedService.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the linked service.
        /// Serialized Name: LinkedService.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="server">
        /// Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.server
        /// </param>
        /// <param name="systemNumber">
        /// System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.systemNumber
        /// </param>
        /// <param name="clientId">
        /// Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.clientId
        /// </param>
        /// <param name="language">
        /// Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.language
        /// </param>
        /// <param name="systemId">
        /// SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.systemId
        /// </param>
        /// <param name="userName">
        /// Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.userName
        /// </param>
        /// <param name="password">
        /// Password to access the SAP server where the table is located.
        /// Serialized Name: SapOdpLinkedService.typeProperties.password
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="messageServer">
        /// The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.messageServer
        /// </param>
        /// <param name="messageServerService">
        /// The service name or port number of the Message Server. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.messageServerService
        /// </param>
        /// <param name="sncMode">
        /// SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncMode
        /// </param>
        /// <param name="sncMyName">
        /// Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncMyName
        /// </param>
        /// <param name="sncPartnerName">
        /// Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncPartnerName
        /// </param>
        /// <param name="sncLibraryPath">
        /// External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncLibraryPath
        /// </param>
        /// <param name="sncQop">
        /// SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncQop
        /// </param>
        /// <param name="x509CertificatePath">
        /// SNC X509 certificate file path. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.x509CertificatePath
        /// </param>
        /// <param name="logonGroup">
        /// The Logon Group for the SAP System. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.logonGroup
        /// </param>
        /// <param name="subscriberName">
        /// The subscriber name. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.subscriberName
        /// </param>
        /// <param name="encryptedCredential">
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// Serialized Name: SapOdpLinkedService.typeProperties.encryptedCredential
        /// </param>
        internal SapOdpLinkedService(string linkedServiceType, IntegrationRuntimeReference connectVia, string description, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, DataFactoryElement<string> server, DataFactoryElement<string> systemNumber, DataFactoryElement<string> clientId, DataFactoryElement<string> language, DataFactoryElement<string> systemId, DataFactoryElement<string> userName, FactorySecretBaseDefinition password, DataFactoryElement<string> messageServer, DataFactoryElement<string> messageServerService, DataFactoryElement<string> sncMode, DataFactoryElement<string> sncMyName, DataFactoryElement<string> sncPartnerName, DataFactoryElement<string> sncLibraryPath, DataFactoryElement<string> sncQop, DataFactoryElement<string> x509CertificatePath, DataFactoryElement<string> logonGroup, DataFactoryElement<string> subscriberName, BinaryData encryptedCredential) : base(linkedServiceType, connectVia, description, parameters, annotations, additionalProperties)
        {
            Server = server;
            SystemNumber = systemNumber;
            ClientId = clientId;
            Language = language;
            SystemId = systemId;
            UserName = userName;
            Password = password;
            MessageServer = messageServer;
            MessageServerService = messageServerService;
            SncMode = sncMode;
            SncMyName = sncMyName;
            SncPartnerName = sncPartnerName;
            SncLibraryPath = sncLibraryPath;
            SncQop = sncQop;
            X509CertificatePath = x509CertificatePath;
            LogonGroup = logonGroup;
            SubscriberName = subscriberName;
            EncryptedCredential = encryptedCredential;
            LinkedServiceType = linkedServiceType ?? "SapOdp";
        }

        /// <summary>
        /// Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.server
        /// </summary>
        public DataFactoryElement<string> Server { get; set; }
        /// <summary>
        /// System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.systemNumber
        /// </summary>
        public DataFactoryElement<string> SystemNumber { get; set; }
        /// <summary>
        /// Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.clientId
        /// </summary>
        public DataFactoryElement<string> ClientId { get; set; }
        /// <summary>
        /// Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.language
        /// </summary>
        public DataFactoryElement<string> Language { get; set; }
        /// <summary>
        /// SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.systemId
        /// </summary>
        public DataFactoryElement<string> SystemId { get; set; }
        /// <summary>
        /// Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.userName
        /// </summary>
        public DataFactoryElement<string> UserName { get; set; }
        /// <summary>
        /// Password to access the SAP server where the table is located.
        /// Serialized Name: SapOdpLinkedService.typeProperties.password
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition Password { get; set; }
        /// <summary>
        /// The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.messageServer
        /// </summary>
        public DataFactoryElement<string> MessageServer { get; set; }
        /// <summary>
        /// The service name or port number of the Message Server. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.messageServerService
        /// </summary>
        public DataFactoryElement<string> MessageServerService { get; set; }
        /// <summary>
        /// SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncMode
        /// </summary>
        public DataFactoryElement<string> SncMode { get; set; }
        /// <summary>
        /// Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncMyName
        /// </summary>
        public DataFactoryElement<string> SncMyName { get; set; }
        /// <summary>
        /// Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncPartnerName
        /// </summary>
        public DataFactoryElement<string> SncPartnerName { get; set; }
        /// <summary>
        /// External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncLibraryPath
        /// </summary>
        public DataFactoryElement<string> SncLibraryPath { get; set; }
        /// <summary>
        /// SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.sncQop
        /// </summary>
        public DataFactoryElement<string> SncQop { get; set; }
        /// <summary>
        /// SNC X509 certificate file path. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.x509CertificatePath
        /// </summary>
        public DataFactoryElement<string> X509CertificatePath { get; set; }
        /// <summary>
        /// The Logon Group for the SAP System. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.logonGroup
        /// </summary>
        public DataFactoryElement<string> LogonGroup { get; set; }
        /// <summary>
        /// The subscriber name. Type: string (or Expression with resultType string).
        /// Serialized Name: SapOdpLinkedService.typeProperties.subscriberName
        /// </summary>
        public DataFactoryElement<string> SubscriberName { get; set; }
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// Serialized Name: SapOdpLinkedService.typeProperties.encryptedCredential
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData EncryptedCredential { get; set; }
    }
}
