// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.DataFactory.Models
{
    public partial class SsisAccessCredential : IUtf8JsonSerializable, Core.IModelSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((Core.IModelSerializable)this).Serialize(writer, new Core.Serialization.SerializableOptions());

        void Core.IModelSerializable.Serialize(Utf8JsonWriter writer, Core.Serialization.SerializableOptions options)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("domain"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(Domain);
#else
            JsonSerializer.Serialize(writer, JsonDocument.Parse(Domain.ToString()).RootElement);
#endif
            writer.WritePropertyName("userName"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(UserName);
#else
            JsonSerializer.Serialize(writer, JsonDocument.Parse(UserName.ToString()).RootElement);
#endif
            writer.WritePropertyName("password"u8);
            writer.WriteObjectValue(Password);
            writer.WriteEndObject();
        }

        internal static SsisAccessCredential DeserializeSsisAccessCredential(JsonElement element, Core.Serialization.SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            BinaryData domain = default;
            BinaryData userName = default;
            FactorySecretBaseDefinition password = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("domain"u8))
                {
                    domain = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("userName"u8))
                {
                    userName = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("password"u8))
                {
                    password = FactorySecretBaseDefinition.DeserializeFactorySecretBaseDefinition(property.Value);
                    continue;
                }
            }
            return new SsisAccessCredential(domain, userName, password);
        }
    }
}
