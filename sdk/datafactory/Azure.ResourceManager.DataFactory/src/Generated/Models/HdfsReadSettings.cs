// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// HDFS read settings.
    /// Serialized Name: HdfsReadSettings
    /// </summary>
    public partial class HdfsReadSettings : StoreReadSettings
    {
        /// <summary> Initializes a new instance of HdfsReadSettings. </summary>
        public HdfsReadSettings()
        {
            StoreReadSettingsType = "HdfsReadSettings";
        }

        /// <summary> Initializes a new instance of HdfsReadSettings. </summary>
        /// <param name="storeReadSettingsType">
        /// The read setting type.
        /// Serialized Name: StoreReadSettings.type
        /// </param>
        /// <param name="maxConcurrentConnections">
        /// The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
        /// Serialized Name: StoreReadSettings.maxConcurrentConnections
        /// </param>
        /// <param name="disableMetricsCollection">
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: StoreReadSettings.disableMetricsCollection
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="recursive">
        /// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: HdfsReadSettings.recursive
        /// </param>
        /// <param name="wildcardFolderPath">
        /// HDFS wildcardFolderPath. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.wildcardFolderPath
        /// </param>
        /// <param name="wildcardFileName">
        /// HDFS wildcardFileName. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.wildcardFileName
        /// </param>
        /// <param name="fileListPath">
        /// Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.fileListPath
        /// </param>
        /// <param name="enablePartitionDiscovery">
        /// Indicates whether to enable partition discovery.
        /// Serialized Name: HdfsReadSettings.enablePartitionDiscovery
        /// </param>
        /// <param name="partitionRootPath">
        /// Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.partitionRootPath
        /// </param>
        /// <param name="modifiedDatetimeStart">
        /// The start of file&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.modifiedDatetimeStart
        /// </param>
        /// <param name="modifiedDatetimeEnd">
        /// The end of file&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.modifiedDatetimeEnd
        /// </param>
        /// <param name="distcpSettings">
        /// Specifies Distcp-related settings.
        /// Serialized Name: HdfsReadSettings.distcpSettings
        /// </param>
        /// <param name="deleteFilesAfterCompletion">
        /// Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: HdfsReadSettings.deleteFilesAfterCompletion
        /// </param>
        internal HdfsReadSettings(string storeReadSettingsType, BinaryData maxConcurrentConnections, BinaryData disableMetricsCollection, IDictionary<string, BinaryData> additionalProperties, BinaryData recursive, BinaryData wildcardFolderPath, BinaryData wildcardFileName, BinaryData fileListPath, bool? enablePartitionDiscovery, BinaryData partitionRootPath, BinaryData modifiedDatetimeStart, BinaryData modifiedDatetimeEnd, DistcpSettings distcpSettings, BinaryData deleteFilesAfterCompletion) : base(storeReadSettingsType, maxConcurrentConnections, disableMetricsCollection, additionalProperties)
        {
            Recursive = recursive;
            WildcardFolderPath = wildcardFolderPath;
            WildcardFileName = wildcardFileName;
            FileListPath = fileListPath;
            EnablePartitionDiscovery = enablePartitionDiscovery;
            PartitionRootPath = partitionRootPath;
            ModifiedDatetimeStart = modifiedDatetimeStart;
            ModifiedDatetimeEnd = modifiedDatetimeEnd;
            DistcpSettings = distcpSettings;
            DeleteFilesAfterCompletion = deleteFilesAfterCompletion;
            StoreReadSettingsType = storeReadSettingsType ?? "HdfsReadSettings";
        }

        /// <summary>
        /// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: HdfsReadSettings.recursive
        /// </summary>
        public BinaryData Recursive { get; set; }
        /// <summary>
        /// HDFS wildcardFolderPath. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.wildcardFolderPath
        /// </summary>
        public BinaryData WildcardFolderPath { get; set; }
        /// <summary>
        /// HDFS wildcardFileName. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.wildcardFileName
        /// </summary>
        public BinaryData WildcardFileName { get; set; }
        /// <summary>
        /// Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.fileListPath
        /// </summary>
        public BinaryData FileListPath { get; set; }
        /// <summary>
        /// Indicates whether to enable partition discovery.
        /// Serialized Name: HdfsReadSettings.enablePartitionDiscovery
        /// </summary>
        public bool? EnablePartitionDiscovery { get; set; }
        /// <summary>
        /// Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.partitionRootPath
        /// </summary>
        public BinaryData PartitionRootPath { get; set; }
        /// <summary>
        /// The start of file&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.modifiedDatetimeStart
        /// </summary>
        public BinaryData ModifiedDatetimeStart { get; set; }
        /// <summary>
        /// The end of file&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: HdfsReadSettings.modifiedDatetimeEnd
        /// </summary>
        public BinaryData ModifiedDatetimeEnd { get; set; }
        /// <summary>
        /// Specifies Distcp-related settings.
        /// Serialized Name: HdfsReadSettings.distcpSettings
        /// </summary>
        public DistcpSettings DistcpSettings { get; set; }
        /// <summary>
        /// Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: HdfsReadSettings.deleteFilesAfterCompletion
        /// </summary>
        public BinaryData DeleteFilesAfterCompletion { get; set; }
    }
}
