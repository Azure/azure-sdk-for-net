// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Append value for a Variable of type Array.
    /// Serialized Name: AppendVariableActivity
    /// </summary>
    public partial class AppendVariableActivity : ControlActivity
    {
        /// <summary> Initializes a new instance of AppendVariableActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public AppendVariableActivity(string name) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            ActivityType = "AppendVariable";
        }

        /// <summary> Initializes a new instance of AppendVariableActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="activityType">
        /// Type of activity.
        /// Serialized Name: Activity.type
        /// </param>
        /// <param name="description">
        /// Activity description.
        /// Serialized Name: Activity.description
        /// </param>
        /// <param name="dependsOn">
        /// Activity depends on condition.
        /// Serialized Name: Activity.dependsOn
        /// </param>
        /// <param name="userProperties">
        /// Activity user properties.
        /// Serialized Name: Activity.userProperties
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="variableName">
        /// Name of the variable whose value needs to be appended to.
        /// Serialized Name: AppendVariableActivity.typeProperties.variableName
        /// </param>
        /// <param name="value">
        /// Value to be appended. Could be a static value or Expression
        /// Serialized Name: AppendVariableActivity.typeProperties.value
        /// </param>
        internal AppendVariableActivity(string name, string activityType, string description, IList<ActivityDependency> dependsOn, IList<ActivityUserProperty> userProperties, IDictionary<string, BinaryData> additionalProperties, string variableName, BinaryData value) : base(name, activityType, description, dependsOn, userProperties, additionalProperties)
        {
            VariableName = variableName;
            Value = value;
            ActivityType = activityType ?? "AppendVariable";
        }

        /// <summary>
        /// Name of the variable whose value needs to be appended to.
        /// Serialized Name: AppendVariableActivity.typeProperties.variableName
        /// </summary>
        public string VariableName { get; set; }
        /// <summary>
        /// Value to be appended. Could be a static value or Expression
        /// Serialized Name: AppendVariableActivity.typeProperties.value
        /// </summary>
        public BinaryData Value { get; set; }
    }
}
