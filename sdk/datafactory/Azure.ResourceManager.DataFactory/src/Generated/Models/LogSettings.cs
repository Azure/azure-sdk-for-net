// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> Log settings. </summary>
    public partial class LogSettings
    {
        /// <summary> Initializes a new instance of LogSettings. </summary>
        /// <param name="logLocationSettings"> Log location settings customer needs to provide when enabling log. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="logLocationSettings"/> is null. </exception>
        public LogSettings(LogLocationSettings logLocationSettings)
        {
            if (logLocationSettings == null)
            {
                throw new ArgumentNullException(nameof(logLocationSettings));
            }

            LogLocationSettings = logLocationSettings;
        }

        /// <summary> Initializes a new instance of LogSettings. </summary>
        /// <param name="enableCopyActivityLog"> Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean). </param>
        /// <param name="copyActivityLogSettings"> Specifies settings for copy activity log. </param>
        /// <param name="logLocationSettings"> Log location settings customer needs to provide when enabling log. </param>
        internal LogSettings(BinaryData enableCopyActivityLog, CopyActivityLogSettings copyActivityLogSettings, LogLocationSettings logLocationSettings)
        {
            EnableCopyActivityLog = enableCopyActivityLog;
            CopyActivityLogSettings = copyActivityLogSettings;
            LogLocationSettings = logLocationSettings;
        }

        /// <summary>
        /// Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData EnableCopyActivityLog { get; set; }
        /// <summary> Specifies settings for copy activity log. </summary>
        public CopyActivityLogSettings CopyActivityLogSettings { get; set; }
        /// <summary> Log location settings customer needs to provide when enabling log. </summary>
        public LogLocationSettings LogLocationSettings { get; set; }
    }
}
