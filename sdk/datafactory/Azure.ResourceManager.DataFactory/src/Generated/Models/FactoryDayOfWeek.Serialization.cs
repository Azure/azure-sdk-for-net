// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataFactory.Models
{
    internal static partial class FactoryDayOfWeekExtensions
    {
        public static string ToSerialString(this FactoryDayOfWeek value) => value switch
        {
            FactoryDayOfWeek.Sunday => "Sunday",
            FactoryDayOfWeek.Monday => "Monday",
            FactoryDayOfWeek.Tuesday => "Tuesday",
            FactoryDayOfWeek.Wednesday => "Wednesday",
            FactoryDayOfWeek.Thursday => "Thursday",
            FactoryDayOfWeek.Friday => "Friday",
            FactoryDayOfWeek.Saturday => "Saturday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown FactoryDayOfWeek value.")
        };

        public static FactoryDayOfWeek ToFactoryDayOfWeek(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return FactoryDayOfWeek.Sunday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return FactoryDayOfWeek.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return FactoryDayOfWeek.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return FactoryDayOfWeek.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return FactoryDayOfWeek.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return FactoryDayOfWeek.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return FactoryDayOfWeek.Saturday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown FactoryDayOfWeek value.");
        }
    }
}
