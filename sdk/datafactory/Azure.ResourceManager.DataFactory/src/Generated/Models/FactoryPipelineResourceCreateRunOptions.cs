// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> The FactoryPipelineResourceCreateRunOptions. </summary>
    public partial class FactoryPipelineResourceCreateRunOptions
    {
        /// <summary> Initializes a new instance of FactoryPipelineResourceCreateRunOptions. </summary>
        public FactoryPipelineResourceCreateRunOptions()
        {
            ParameterValueSpecification = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run. </summary>
        public string ReferencePipelineRunId { get; set; }
        /// <summary> Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId. </summary>
        public bool? IsRecovery { get; set; }
        /// <summary> In recovery mode, the rerun will start from this activity. If not specified, all activities will run. </summary>
        public string StartActivityName { get; set; }
        /// <summary> In recovery mode, if set to true, the rerun will start from failed activities. The property will be used only if startActivityName is not specified. </summary>
        public bool? StartFromFailure { get; set; }
        /// <summary>
        /// Parameters of the pipeline run. These parameters will be used only if the runId is not specified.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IDictionary<string, BinaryData> ParameterValueSpecification { get; }
    }
}
