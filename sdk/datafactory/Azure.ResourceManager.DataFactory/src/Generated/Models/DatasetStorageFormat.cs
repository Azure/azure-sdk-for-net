// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// The format definition of a storage.
    /// Please note <see cref="DatasetStorageFormat"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="AvroFormat"/>, <see cref="JsonFormat"/>, <see cref="OrcFormat"/>, <see cref="ParquetFormat"/> and <see cref="TextFormat"/>.
    /// </summary>
    public partial class DatasetStorageFormat
    {
        /// <summary> Initializes a new instance of DatasetStorageFormat. </summary>
        public DatasetStorageFormat()
        {
            AdditionalProperties = new ChangeTrackingDictionary<string, Uri>();
        }

        /// <summary> Initializes a new instance of DatasetStorageFormat. </summary>
        /// <param name="datasetStorageFormatType"> Type of dataset storage format. </param>
        /// <param name="serializer"> Serializer. Type: string (or Expression with resultType string). </param>
        /// <param name="deserializer"> Deserializer. Type: string (or Expression with resultType string). </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        internal DatasetStorageFormat(string datasetStorageFormatType, Uri serializer, Uri deserializer, IDictionary<string, Uri> additionalProperties)
        {
            DatasetStorageFormatType = datasetStorageFormatType;
            Serializer = serializer;
            Deserializer = deserializer;
            AdditionalProperties = additionalProperties;
        }

        /// <summary> Type of dataset storage format. </summary>
        internal string DatasetStorageFormatType { get; set; }
        /// <summary> Serializer. Type: string (or Expression with resultType string). </summary>
        public Uri Serializer { get; set; }
        /// <summary> Deserializer. Type: string (or Expression with resultType string). </summary>
        public Uri Deserializer { get; set; }
        /// <summary> Additional Properties. </summary>
        public IDictionary<string, Uri> AdditionalProperties { get; }
    }
}
