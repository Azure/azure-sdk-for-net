// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// The Azure Blob storage.
    /// Serialized Name: AzureBlobDataset
    /// </summary>
    public partial class AzureBlobDataset : FactoryDatasetDefinition
    {
        /// <summary> Initializes a new instance of AzureBlobDataset. </summary>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedServiceName"/> is null. </exception>
        public AzureBlobDataset(LinkedServiceReference linkedServiceName) : base(linkedServiceName)
        {
            if (linkedServiceName == null)
            {
                throw new ArgumentNullException(nameof(linkedServiceName));
            }

            DatasetType = "AzureBlob";
        }

        /// <summary> Initializes a new instance of AzureBlobDataset. </summary>
        /// <param name="datasetType">
        /// Type of dataset.
        /// Serialized Name: Dataset.type
        /// </param>
        /// <param name="description">
        /// Dataset description.
        /// Serialized Name: Dataset.description
        /// </param>
        /// <param name="structure">
        /// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
        /// Serialized Name: Dataset.structure
        /// </param>
        /// <param name="schema">
        /// Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
        /// Serialized Name: Dataset.schema
        /// </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <param name="parameters">
        /// Parameters for dataset.
        /// Serialized Name: Dataset.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the Dataset.
        /// Serialized Name: Dataset.annotations
        /// </param>
        /// <param name="folder">
        /// The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
        /// Serialized Name: Dataset.folder
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="folderPath">
        /// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.folderPath
        /// </param>
        /// <param name="tableRootLocation">
        /// The root of blob path. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.tableRootLocation
        /// </param>
        /// <param name="fileName">
        /// The name of the Azure Blob. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.fileName
        /// </param>
        /// <param name="modifiedDatetimeStart">
        /// The start of Azure Blob&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.modifiedDatetimeStart
        /// </param>
        /// <param name="modifiedDatetimeEnd">
        /// The end of Azure Blob&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.modifiedDatetimeEnd
        /// </param>
        /// <param name="format">
        /// The format of the Azure Blob storage.
        /// Serialized Name: AzureBlobDataset.typeProperties.format
        /// Please note <see cref="DatasetStorageFormat"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AvroFormat"/>, <see cref="JsonFormat"/>, <see cref="OrcFormat"/>, <see cref="ParquetFormat"/> and <see cref="TextFormat"/>.
        /// </param>
        /// <param name="compression">
        /// The data compression method used for the blob storage.
        /// Serialized Name: AzureBlobDataset.typeProperties.compression
        /// </param>
        internal AzureBlobDataset(string datasetType, string description, BinaryData structure, BinaryData schema, LinkedServiceReference linkedServiceName, IDictionary<string, ParameterSpecification> parameters, IList<BinaryData> annotations, DatasetFolder folder, IDictionary<string, BinaryData> additionalProperties, BinaryData folderPath, BinaryData tableRootLocation, BinaryData fileName, BinaryData modifiedDatetimeStart, BinaryData modifiedDatetimeEnd, DatasetStorageFormat format, DatasetCompression compression) : base(datasetType, description, structure, schema, linkedServiceName, parameters, annotations, folder, additionalProperties)
        {
            FolderPath = folderPath;
            TableRootLocation = tableRootLocation;
            FileName = fileName;
            ModifiedDatetimeStart = modifiedDatetimeStart;
            ModifiedDatetimeEnd = modifiedDatetimeEnd;
            Format = format;
            Compression = compression;
            DatasetType = datasetType ?? "AzureBlob";
        }

        /// <summary>
        /// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.folderPath
        /// </summary>
        public BinaryData FolderPath { get; set; }
        /// <summary>
        /// The root of blob path. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.tableRootLocation
        /// </summary>
        public BinaryData TableRootLocation { get; set; }
        /// <summary>
        /// The name of the Azure Blob. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.fileName
        /// </summary>
        public BinaryData FileName { get; set; }
        /// <summary>
        /// The start of Azure Blob&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.modifiedDatetimeStart
        /// </summary>
        public BinaryData ModifiedDatetimeStart { get; set; }
        /// <summary>
        /// The end of Azure Blob&apos;s modified datetime. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobDataset.typeProperties.modifiedDatetimeEnd
        /// </summary>
        public BinaryData ModifiedDatetimeEnd { get; set; }
        /// <summary>
        /// The format of the Azure Blob storage.
        /// Serialized Name: AzureBlobDataset.typeProperties.format
        /// Please note <see cref="DatasetStorageFormat"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AvroFormat"/>, <see cref="JsonFormat"/>, <see cref="OrcFormat"/>, <see cref="ParquetFormat"/> and <see cref="TextFormat"/>.
        /// </summary>
        public DatasetStorageFormat Format { get; set; }
        /// <summary>
        /// The data compression method used for the blob storage.
        /// Serialized Name: AzureBlobDataset.typeProperties.compression
        /// </summary>
        public DatasetCompression Compression { get; set; }
    }
}
