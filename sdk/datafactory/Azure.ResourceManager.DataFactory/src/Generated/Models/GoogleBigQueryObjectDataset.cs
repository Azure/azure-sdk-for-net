// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Google BigQuery service dataset.
    /// Serialized Name: GoogleBigQueryObjectDataset
    /// </summary>
    public partial class GoogleBigQueryObjectDataset : FactoryDatasetDefinition
    {
        /// <summary> Initializes a new instance of GoogleBigQueryObjectDataset. </summary>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedServiceName"/> is null. </exception>
        public GoogleBigQueryObjectDataset(FactoryLinkedServiceReference linkedServiceName) : base(linkedServiceName)
        {
            Argument.AssertNotNull(linkedServiceName, nameof(linkedServiceName));

            DatasetType = "GoogleBigQueryObject";
        }

        /// <summary> Initializes a new instance of GoogleBigQueryObjectDataset. </summary>
        /// <param name="datasetType">
        /// Type of dataset.
        /// Serialized Name: Dataset.type
        /// </param>
        /// <param name="description">
        /// Dataset description.
        /// Serialized Name: Dataset.description
        /// </param>
        /// <param name="structure">
        /// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
        /// Serialized Name: Dataset.structure
        /// </param>
        /// <param name="schema">
        /// Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
        /// Serialized Name: Dataset.schema
        /// </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <param name="parameters">
        /// Parameters for dataset.
        /// Serialized Name: Dataset.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the Dataset.
        /// Serialized Name: Dataset.annotations
        /// </param>
        /// <param name="folder">
        /// The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
        /// Serialized Name: Dataset.folder
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="tableName">
        /// This property will be retired. Please consider using database + table properties instead.
        /// Serialized Name: GoogleBigQueryObjectDataset.typeProperties.tableName
        /// </param>
        /// <param name="table">
        /// The table name of the Google BigQuery. Type: string (or Expression with resultType string).
        /// Serialized Name: GoogleBigQueryObjectDataset.typeProperties.table
        /// </param>
        /// <param name="dataset">
        /// The database name of the Google BigQuery. Type: string (or Expression with resultType string).
        /// Serialized Name: GoogleBigQueryObjectDataset.typeProperties.dataset
        /// </param>
        internal GoogleBigQueryObjectDataset(string datasetType, string description, DataFactoryElement<IList<DatasetDataElement>> structure, DataFactoryElement<IList<DatasetSchemaDataElement>> schema, FactoryLinkedServiceReference linkedServiceName, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, DatasetFolder folder, IDictionary<string, BinaryData> additionalProperties, BinaryData tableName, DataFactoryElement<string> table, DataFactoryElement<string> dataset) : base(datasetType, description, structure, schema, linkedServiceName, parameters, annotations, folder, additionalProperties)
        {
            TableName = tableName;
            Table = table;
            Dataset = dataset;
            DatasetType = datasetType ?? "GoogleBigQueryObject";
        }

        /// <summary>
        /// This property will be retired. Please consider using database + table properties instead.
        /// Serialized Name: GoogleBigQueryObjectDataset.typeProperties.tableName
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData TableName { get; set; }
        /// <summary>
        /// The table name of the Google BigQuery. Type: string (or Expression with resultType string).
        /// Serialized Name: GoogleBigQueryObjectDataset.typeProperties.table
        /// </summary>
        public DataFactoryElement<string> Table { get; set; }
        /// <summary>
        /// The database name of the Google BigQuery. Type: string (or Expression with resultType string).
        /// Serialized Name: GoogleBigQueryObjectDataset.typeProperties.dataset
        /// </summary>
        public DataFactoryElement<string> Dataset { get; set; }
    }
}
