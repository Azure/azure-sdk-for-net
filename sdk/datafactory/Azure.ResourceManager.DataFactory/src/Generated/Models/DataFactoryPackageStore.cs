// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> Package store for the SSIS integration runtime. </summary>
    public partial class DataFactoryPackageStore
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="DataFactoryPackageStore"/>. </summary>
        /// <param name="name"> The name of the package store. </param>
        /// <param name="packageStoreLinkedService"> The package store linked service reference. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="packageStoreLinkedService"/> is null. </exception>
        public DataFactoryPackageStore(string name, EntityReference packageStoreLinkedService)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(packageStoreLinkedService, nameof(packageStoreLinkedService));

            Name = name;
            PackageStoreLinkedService = packageStoreLinkedService;
        }

        /// <summary> Initializes a new instance of <see cref="DataFactoryPackageStore"/>. </summary>
        /// <param name="name"> The name of the package store. </param>
        /// <param name="packageStoreLinkedService"> The package store linked service reference. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal DataFactoryPackageStore(string name, EntityReference packageStoreLinkedService, Dictionary<string, BinaryData> rawData)
        {
            Name = name;
            PackageStoreLinkedService = packageStoreLinkedService;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="DataFactoryPackageStore"/> for deserialization. </summary>
        internal DataFactoryPackageStore()
        {
        }

        /// <summary> The name of the package store. </summary>
        public string Name { get; set; }
        /// <summary> The package store linked service reference. </summary>
        public EntityReference PackageStoreLinkedService { get; set; }
    }
}
