// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// QuickBooks server linked service.
    /// Serialized Name: QuickBooksLinkedService
    /// </summary>
    public partial class QuickBooksLinkedService : FactoryLinkedServiceDefinition
    {
        /// <summary> Initializes a new instance of QuickBooksLinkedService. </summary>
        public QuickBooksLinkedService()
        {
            LinkedServiceType = "QuickBooks";
        }

        /// <summary> Initializes a new instance of QuickBooksLinkedService. </summary>
        /// <param name="linkedServiceType">
        /// Type of linked service.
        /// Serialized Name: LinkedService.type
        /// </param>
        /// <param name="connectVia">
        /// The integration runtime reference.
        /// Serialized Name: LinkedService.connectVia
        /// </param>
        /// <param name="description">
        /// Linked service description.
        /// Serialized Name: LinkedService.description
        /// </param>
        /// <param name="parameters">
        /// Parameters for linked service.
        /// Serialized Name: LinkedService.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the linked service.
        /// Serialized Name: LinkedService.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="connectionProperties">
        /// Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.connectionProperties
        /// </param>
        /// <param name="endpoint">
        /// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
        /// Serialized Name: QuickBooksLinkedService.typeProperties.endpoint
        /// </param>
        /// <param name="companyId">
        /// The company ID of the QuickBooks company to authorize.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.companyId
        /// </param>
        /// <param name="consumerKey">
        /// The consumer key for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.consumerKey
        /// </param>
        /// <param name="consumerSecret">
        /// The consumer secret for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.consumerSecret
        /// Please note <see cref="SecretBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="accessToken">
        /// The access token for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.accessToken
        /// Please note <see cref="SecretBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="accessTokenSecret">
        /// The access token secret for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.accessTokenSecret
        /// Please note <see cref="SecretBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="useEncryptedEndpoints">
        /// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.useEncryptedEndpoints
        /// </param>
        /// <param name="encryptedCredential">
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// Serialized Name: QuickBooksLinkedService.typeProperties.encryptedCredential
        /// </param>
        internal QuickBooksLinkedService(string linkedServiceType, IntegrationRuntimeReference connectVia, string description, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, BinaryData connectionProperties, BinaryData endpoint, BinaryData companyId, BinaryData consumerKey, SecretBase consumerSecret, SecretBase accessToken, SecretBase accessTokenSecret, BinaryData useEncryptedEndpoints, BinaryData encryptedCredential) : base(linkedServiceType, connectVia, description, parameters, annotations, additionalProperties)
        {
            ConnectionProperties = connectionProperties;
            Endpoint = endpoint;
            CompanyId = companyId;
            ConsumerKey = consumerKey;
            ConsumerSecret = consumerSecret;
            AccessToken = accessToken;
            AccessTokenSecret = accessTokenSecret;
            UseEncryptedEndpoints = useEncryptedEndpoints;
            EncryptedCredential = encryptedCredential;
            LinkedServiceType = linkedServiceType ?? "QuickBooks";
        }

        /// <summary>
        /// Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.connectionProperties
        /// </summary>
        public BinaryData ConnectionProperties { get; set; }
        /// <summary>
        /// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
        /// Serialized Name: QuickBooksLinkedService.typeProperties.endpoint
        /// </summary>
        public BinaryData Endpoint { get; set; }
        /// <summary>
        /// The company ID of the QuickBooks company to authorize.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.companyId
        /// </summary>
        public BinaryData CompanyId { get; set; }
        /// <summary>
        /// The consumer key for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.consumerKey
        /// </summary>
        public BinaryData ConsumerKey { get; set; }
        /// <summary>
        /// The consumer secret for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.consumerSecret
        /// Please note <see cref="SecretBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public SecretBase ConsumerSecret { get; set; }
        /// <summary>
        /// The access token for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.accessToken
        /// Please note <see cref="SecretBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public SecretBase AccessToken { get; set; }
        /// <summary>
        /// The access token secret for OAuth 1.0 authentication.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.accessTokenSecret
        /// Please note <see cref="SecretBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public SecretBase AccessTokenSecret { get; set; }
        /// <summary>
        /// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
        /// Serialized Name: QuickBooksLinkedService.typeProperties.useEncryptedEndpoints
        /// </summary>
        public BinaryData UseEncryptedEndpoints { get; set; }
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// Serialized Name: QuickBooksLinkedService.typeProperties.encryptedCredential
        /// </summary>
        public BinaryData EncryptedCredential { get; set; }
    }
}
