// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// SQL stored procedure activity type.
    /// Serialized Name: SqlServerStoredProcedureActivity
    /// </summary>
    public partial class SqlServerStoredProcedureActivity : ExecutionActivity
    {
        /// <summary> Initializes a new instance of SqlServerStoredProcedureActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="storedProcedureName">
        /// Stored procedure name. Type: string (or Expression with resultType string).
        /// Serialized Name: SqlServerStoredProcedureActivity.typeProperties.storedProcedureName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="storedProcedureName"/> is null. </exception>
        public SqlServerStoredProcedureActivity(string name, BinaryData storedProcedureName) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (storedProcedureName == null)
            {
                throw new ArgumentNullException(nameof(storedProcedureName));
            }

            StoredProcedureName = storedProcedureName;
            ActivityType = "SqlServerStoredProcedure";
        }

        /// <summary> Initializes a new instance of SqlServerStoredProcedureActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="activityType">
        /// Type of activity.
        /// Serialized Name: Activity.type
        /// </param>
        /// <param name="description">
        /// Activity description.
        /// Serialized Name: Activity.description
        /// </param>
        /// <param name="dependsOn">
        /// Activity depends on condition.
        /// Serialized Name: Activity.dependsOn
        /// </param>
        /// <param name="userProperties">
        /// Activity user properties.
        /// Serialized Name: Activity.userProperties
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: ExecutionActivity.linkedServiceName
        /// </param>
        /// <param name="policy">
        /// Activity policy.
        /// Serialized Name: ExecutionActivity.policy
        /// </param>
        /// <param name="storedProcedureName">
        /// Stored procedure name. Type: string (or Expression with resultType string).
        /// Serialized Name: SqlServerStoredProcedureActivity.typeProperties.storedProcedureName
        /// </param>
        /// <param name="storedProcedureParameters">
        /// Value and type setting for stored procedure parameters. Example: &quot;{Parameter1: {value: &quot;1&quot;, type: &quot;int&quot;}}&quot;.
        /// Serialized Name: SqlServerStoredProcedureActivity.typeProperties.storedProcedureParameters
        /// </param>
        internal SqlServerStoredProcedureActivity(string name, string activityType, string description, IList<PipelineActivityDependencyInfo> dependsOn, IList<UserProperty> userProperties, IDictionary<string, BinaryData> additionalProperties, LinkedServiceReference linkedServiceName, PipelineActivityPolicyInfo policy, BinaryData storedProcedureName, BinaryData storedProcedureParameters) : base(name, activityType, description, dependsOn, userProperties, additionalProperties, linkedServiceName, policy)
        {
            StoredProcedureName = storedProcedureName;
            StoredProcedureParameters = storedProcedureParameters;
            ActivityType = activityType ?? "SqlServerStoredProcedure";
        }

        /// <summary>
        /// Stored procedure name. Type: string (or Expression with resultType string).
        /// Serialized Name: SqlServerStoredProcedureActivity.typeProperties.storedProcedureName
        /// </summary>
        public BinaryData StoredProcedureName { get; set; }
        /// <summary>
        /// Value and type setting for stored procedure parameters. Example: &quot;{Parameter1: {value: &quot;1&quot;, type: &quot;int&quot;}}&quot;.
        /// Serialized Name: SqlServerStoredProcedureActivity.typeProperties.storedProcedureParameters
        /// </summary>
        public BinaryData StoredProcedureParameters { get; set; }
    }
}
