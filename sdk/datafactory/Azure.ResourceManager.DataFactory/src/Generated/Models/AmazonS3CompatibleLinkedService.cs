// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Linked service for Amazon S3 Compatible.
    /// Serialized Name: AmazonS3CompatibleLinkedService
    /// </summary>
    public partial class AmazonS3CompatibleLinkedService : FactoryLinkedServiceDefinition
    {
        /// <summary> Initializes a new instance of AmazonS3CompatibleLinkedService. </summary>
        public AmazonS3CompatibleLinkedService()
        {
            LinkedServiceType = "AmazonS3Compatible";
        }

        /// <summary> Initializes a new instance of AmazonS3CompatibleLinkedService. </summary>
        /// <param name="linkedServiceType">
        /// Type of linked service.
        /// Serialized Name: LinkedService.type
        /// </param>
        /// <param name="connectVia">
        /// The integration runtime reference.
        /// Serialized Name: LinkedService.connectVia
        /// </param>
        /// <param name="description">
        /// Linked service description.
        /// Serialized Name: LinkedService.description
        /// </param>
        /// <param name="parameters">
        /// Parameters for linked service.
        /// Serialized Name: LinkedService.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the linked service.
        /// Serialized Name: LinkedService.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="accessKeyId">
        /// The access key identifier of the Amazon S3 Compatible Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.accessKeyId
        /// </param>
        /// <param name="secretAccessKey">
        /// The secret access key of the Amazon S3 Compatible Identity and Access Management (IAM) user.
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.secretAccessKey
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="serviceUri">
        /// This value specifies the endpoint to access with the Amazon S3 Compatible Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.serviceUrl
        /// </param>
        /// <param name="forcePathStyle">
        /// If true, use S3 path-style access instead of virtual hosted-style access. Default value is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.forcePathStyle
        /// </param>
        /// <param name="encryptedCredential">
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.encryptedCredential
        /// </param>
        internal AmazonS3CompatibleLinkedService(string linkedServiceType, IntegrationRuntimeReference connectVia, string description, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, BinaryData accessKeyId, FactorySecretBaseDefinition secretAccessKey, BinaryData serviceUri, BinaryData forcePathStyle, BinaryData encryptedCredential) : base(linkedServiceType, connectVia, description, parameters, annotations, additionalProperties)
        {
            AccessKeyId = accessKeyId;
            SecretAccessKey = secretAccessKey;
            ServiceUri = serviceUri;
            ForcePathStyle = forcePathStyle;
            EncryptedCredential = encryptedCredential;
            LinkedServiceType = linkedServiceType ?? "AmazonS3Compatible";
        }

        /// <summary>
        /// The access key identifier of the Amazon S3 Compatible Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.accessKeyId
        /// </summary>
        public BinaryData AccessKeyId { get; set; }
        /// <summary>
        /// The secret access key of the Amazon S3 Compatible Identity and Access Management (IAM) user.
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.secretAccessKey
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SecureString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition SecretAccessKey { get; set; }
        /// <summary>
        /// This value specifies the endpoint to access with the Amazon S3 Compatible Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.serviceUrl
        /// </summary>
        public BinaryData ServiceUri { get; set; }
        /// <summary>
        /// If true, use S3 path-style access instead of virtual hosted-style access. Default value is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.forcePathStyle
        /// </summary>
        public BinaryData ForcePathStyle { get; set; }
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
        /// Serialized Name: AmazonS3CompatibleLinkedService.typeProperties.encryptedCredential
        /// </summary>
        public BinaryData EncryptedCredential { get; set; }
    }
}
