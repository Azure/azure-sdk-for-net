// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// A copy activity Azure Blob sink.
    /// Serialized Name: BlobSink
    /// </summary>
    public partial class AzureBlobSink : CopySink
    {
        /// <summary> Initializes a new instance of AzureBlobSink. </summary>
        public AzureBlobSink()
        {
            Metadata = new ChangeTrackingList<FactoryMetadataItemInfo>();
            CopySinkType = "BlobSink";
        }

        /// <summary> Initializes a new instance of AzureBlobSink. </summary>
        /// <param name="copySinkType">
        /// Copy sink type.
        /// Serialized Name: CopySink.type
        /// </param>
        /// <param name="writeBatchSize">
        /// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
        /// Serialized Name: CopySink.writeBatchSize
        /// </param>
        /// <param name="writeBatchTimeout">
        /// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// Serialized Name: CopySink.writeBatchTimeout
        /// </param>
        /// <param name="sinkRetryCount">
        /// Sink retry count. Type: integer (or Expression with resultType integer).
        /// Serialized Name: CopySink.sinkRetryCount
        /// </param>
        /// <param name="sinkRetryWait">
        /// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// Serialized Name: CopySink.sinkRetryWait
        /// </param>
        /// <param name="maxConcurrentConnections">
        /// The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer).
        /// Serialized Name: CopySink.maxConcurrentConnections
        /// </param>
        /// <param name="disableMetricsCollection">
        /// If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: CopySink.disableMetricsCollection
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="blobWriterOverwriteFiles">
        /// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: BlobSink.blobWriterOverwriteFiles
        /// </param>
        /// <param name="blobWriterDateTimeFormat">
        /// Blob writer date time format. Type: string (or Expression with resultType string).
        /// Serialized Name: BlobSink.blobWriterDateTimeFormat
        /// </param>
        /// <param name="blobWriterAddHeader">
        /// Blob writer add header. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: BlobSink.blobWriterAddHeader
        /// </param>
        /// <param name="copyBehavior">
        /// The type of copy behavior for copy sink.
        /// Serialized Name: BlobSink.copyBehavior
        /// </param>
        /// <param name="metadata">
        /// Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).
        /// Serialized Name: BlobSink.metadata
        /// </param>
        internal AzureBlobSink(string copySinkType, DataFactoryElement<int> writeBatchSize, DataFactoryElement<string> writeBatchTimeout, DataFactoryElement<int> sinkRetryCount, DataFactoryElement<string> sinkRetryWait, DataFactoryElement<int> maxConcurrentConnections, DataFactoryElement<bool> disableMetricsCollection, IDictionary<string, BinaryData> additionalProperties, DataFactoryElement<bool> blobWriterOverwriteFiles, DataFactoryElement<string> blobWriterDateTimeFormat, DataFactoryElement<bool> blobWriterAddHeader, BinaryData copyBehavior, IList<FactoryMetadataItemInfo> metadata) : base(copySinkType, writeBatchSize, writeBatchTimeout, sinkRetryCount, sinkRetryWait, maxConcurrentConnections, disableMetricsCollection, additionalProperties)
        {
            BlobWriterOverwriteFiles = blobWriterOverwriteFiles;
            BlobWriterDateTimeFormat = blobWriterDateTimeFormat;
            BlobWriterAddHeader = blobWriterAddHeader;
            CopyBehavior = copyBehavior;
            Metadata = metadata;
            CopySinkType = copySinkType ?? "BlobSink";
        }

        /// <summary>
        /// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: BlobSink.blobWriterOverwriteFiles
        /// </summary>
        public DataFactoryElement<bool> BlobWriterOverwriteFiles { get; set; }
        /// <summary>
        /// Blob writer date time format. Type: string (or Expression with resultType string).
        /// Serialized Name: BlobSink.blobWriterDateTimeFormat
        /// </summary>
        public DataFactoryElement<string> BlobWriterDateTimeFormat { get; set; }
        /// <summary>
        /// Blob writer add header. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: BlobSink.blobWriterAddHeader
        /// </summary>
        public DataFactoryElement<bool> BlobWriterAddHeader { get; set; }
        /// <summary>
        /// The type of copy behavior for copy sink.
        /// Serialized Name: BlobSink.copyBehavior
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData CopyBehavior { get; set; }
        /// <summary>
        /// Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).
        /// Serialized Name: BlobSink.metadata
        /// </summary>
        public IList<FactoryMetadataItemInfo> Metadata { get; }
    }
}
