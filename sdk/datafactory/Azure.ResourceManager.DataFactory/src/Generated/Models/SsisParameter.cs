// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> Ssis parameter. </summary>
    public partial class SsisParameter : ResourceData
    {
        /// <summary> Initializes a new instance of SsisParameter. </summary>
        internal SsisParameter()
        {
        }

        /// <summary> Initializes a new instance of SsisParameter. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="description"> Parameter description. </param>
        /// <param name="dataType"> Parameter type. </param>
        /// <param name="required"> Whether parameter is required. </param>
        /// <param name="sensitive"> Whether parameter is sensitive. </param>
        /// <param name="designDefaultValue"> Design default value of parameter. </param>
        /// <param name="defaultValue"> Default value of parameter. </param>
        /// <param name="sensitiveDefaultValue"> Default sensitive value of parameter. </param>
        /// <param name="valueType"> Parameter value type. </param>
        /// <param name="valueSet"> Parameter value set. </param>
        /// <param name="variable"> Parameter reference variable. </param>
        internal SsisParameter(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string description, string dataType, bool? required, bool? sensitive, string designDefaultValue, string defaultValue, string sensitiveDefaultValue, string valueType, bool? valueSet, string variable) : base(id, name, resourceType, systemData)
        {
            Description = description;
            DataType = dataType;
            Required = required;
            Sensitive = sensitive;
            DesignDefaultValue = designDefaultValue;
            DefaultValue = defaultValue;
            SensitiveDefaultValue = sensitiveDefaultValue;
            ValueType = valueType;
            ValueSet = valueSet;
            Variable = variable;
        }

        /// <summary> Parameter description. </summary>
        public string Description { get; }
        /// <summary> Parameter type. </summary>
        public string DataType { get; }
        /// <summary> Whether parameter is required. </summary>
        public bool? Required { get; }
        /// <summary> Whether parameter is sensitive. </summary>
        public bool? Sensitive { get; }
        /// <summary> Design default value of parameter. </summary>
        public string DesignDefaultValue { get; }
        /// <summary> Default value of parameter. </summary>
        public string DefaultValue { get; }
        /// <summary> Default sensitive value of parameter. </summary>
        public string SensitiveDefaultValue { get; }
        /// <summary> Parameter value type. </summary>
        public string ValueType { get; }
        /// <summary> Parameter value set. </summary>
        public bool? ValueSet { get; }
        /// <summary> Parameter reference variable. </summary>
        public string Variable { get; }
    }
}
