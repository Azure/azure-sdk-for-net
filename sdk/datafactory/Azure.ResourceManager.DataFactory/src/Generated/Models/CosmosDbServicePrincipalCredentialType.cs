// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> The service principal credential type to use in Server-To-Server authentication. &apos;ServicePrincipalKey&apos; for key/secret, &apos;ServicePrincipalCert&apos; for certificate. Type: string (or Expression with resultType string). </summary>
    public readonly partial struct CosmosDbServicePrincipalCredentialType : IEquatable<CosmosDbServicePrincipalCredentialType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CosmosDbServicePrincipalCredentialType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CosmosDbServicePrincipalCredentialType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ServicePrincipalKeyValue = "ServicePrincipalKey";
        private const string ServicePrincipalCertValue = "ServicePrincipalCert";

        /// <summary> ServicePrincipalKey. </summary>
        public static CosmosDbServicePrincipalCredentialType ServicePrincipalKey { get; } = new CosmosDbServicePrincipalCredentialType(ServicePrincipalKeyValue);
        /// <summary> ServicePrincipalCert. </summary>
        public static CosmosDbServicePrincipalCredentialType ServicePrincipalCert { get; } = new CosmosDbServicePrincipalCredentialType(ServicePrincipalCertValue);
        /// <summary> Determines if two <see cref="CosmosDbServicePrincipalCredentialType"/> values are the same. </summary>
        public static bool operator ==(CosmosDbServicePrincipalCredentialType left, CosmosDbServicePrincipalCredentialType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CosmosDbServicePrincipalCredentialType"/> values are not the same. </summary>
        public static bool operator !=(CosmosDbServicePrincipalCredentialType left, CosmosDbServicePrincipalCredentialType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CosmosDbServicePrincipalCredentialType"/>. </summary>
        public static implicit operator CosmosDbServicePrincipalCredentialType(string value) => new CosmosDbServicePrincipalCredentialType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CosmosDbServicePrincipalCredentialType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CosmosDbServicePrincipalCredentialType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
