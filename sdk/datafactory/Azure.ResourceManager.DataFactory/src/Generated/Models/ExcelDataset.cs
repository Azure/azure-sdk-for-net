// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Excel dataset.
    /// Serialized Name: ExcelDataset
    /// </summary>
    public partial class ExcelDataset : FactoryDatasetDefinition
    {
        /// <summary> Initializes a new instance of ExcelDataset. </summary>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedServiceName"/> is null. </exception>
        public ExcelDataset(FactoryLinkedServiceReference linkedServiceName) : base(linkedServiceName)
        {
            if (linkedServiceName == null)
            {
                throw new ArgumentNullException(nameof(linkedServiceName));
            }

            DatasetType = "Excel";
        }

        /// <summary> Initializes a new instance of ExcelDataset. </summary>
        /// <param name="datasetType">
        /// Type of dataset.
        /// Serialized Name: Dataset.type
        /// </param>
        /// <param name="description">
        /// Dataset description.
        /// Serialized Name: Dataset.description
        /// </param>
        /// <param name="structure">
        /// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
        /// Serialized Name: Dataset.structure
        /// </param>
        /// <param name="schema">
        /// Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.
        /// Serialized Name: Dataset.schema
        /// </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: Dataset.linkedServiceName
        /// </param>
        /// <param name="parameters">
        /// Parameters for dataset.
        /// Serialized Name: Dataset.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the Dataset.
        /// Serialized Name: Dataset.annotations
        /// </param>
        /// <param name="folder">
        /// The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
        /// Serialized Name: Dataset.folder
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="location">
        /// The location of the excel storage.
        /// Serialized Name: ExcelDataset.typeProperties.location
        /// Please note <see cref="DatasetLocation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AmazonS3CompatibleLocation"/>, <see cref="AmazonS3Location"/>, <see cref="AzureBlobFSLocation"/>, <see cref="AzureBlobStorageLocation"/>, <see cref="AzureDataLakeStoreLocation"/>, <see cref="AzureFileStorageLocation"/>, <see cref="FileServerLocation"/>, <see cref="FtpServerLocation"/>, <see cref="GoogleCloudStorageLocation"/>, <see cref="HdfsLocation"/>, <see cref="HttpServerLocation"/>, <see cref="OracleCloudStorageLocation"/> and <see cref="SftpLocation"/>.
        /// </param>
        /// <param name="sheetName">
        /// The sheet name of excel file. Type: string (or Expression with resultType string).
        /// Serialized Name: ExcelDataset.typeProperties.sheetName
        /// </param>
        /// <param name="sheetIndex">
        /// The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)
        /// Serialized Name: ExcelDataset.typeProperties.sheetIndex
        /// </param>
        /// <param name="range">
        /// The partial data of one sheet. Type: string (or Expression with resultType string).
        /// Serialized Name: ExcelDataset.typeProperties.range
        /// </param>
        /// <param name="firstRowAsHeader">
        /// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: ExcelDataset.typeProperties.firstRowAsHeader
        /// </param>
        /// <param name="compression">
        /// The data compression method used for the json dataset.
        /// Serialized Name: ExcelDataset.typeProperties.compression
        /// </param>
        /// <param name="nullValue">
        /// The null value string. Type: string (or Expression with resultType string).
        /// Serialized Name: ExcelDataset.typeProperties.nullValue
        /// </param>
        internal ExcelDataset(string datasetType, string description, BinaryData structure, BinaryData schema, FactoryLinkedServiceReference linkedServiceName, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, DatasetFolder folder, IDictionary<string, BinaryData> additionalProperties, DatasetLocation location, BinaryData sheetName, BinaryData sheetIndex, BinaryData range, BinaryData firstRowAsHeader, DatasetCompression compression, BinaryData nullValue) : base(datasetType, description, structure, schema, linkedServiceName, parameters, annotations, folder, additionalProperties)
        {
            Location = location;
            SheetName = sheetName;
            SheetIndex = sheetIndex;
            Range = range;
            FirstRowAsHeader = firstRowAsHeader;
            Compression = compression;
            NullValue = nullValue;
            DatasetType = datasetType ?? "Excel";
        }

        /// <summary>
        /// The location of the excel storage.
        /// Serialized Name: ExcelDataset.typeProperties.location
        /// Please note <see cref="DatasetLocation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AmazonS3CompatibleLocation"/>, <see cref="AmazonS3Location"/>, <see cref="AzureBlobFSLocation"/>, <see cref="AzureBlobStorageLocation"/>, <see cref="AzureDataLakeStoreLocation"/>, <see cref="AzureFileStorageLocation"/>, <see cref="FileServerLocation"/>, <see cref="FtpServerLocation"/>, <see cref="GoogleCloudStorageLocation"/>, <see cref="HdfsLocation"/>, <see cref="HttpServerLocation"/>, <see cref="OracleCloudStorageLocation"/> and <see cref="SftpLocation"/>.
        /// </summary>
        public DatasetLocation Location { get; set; }
        /// <summary>
        /// The sheet name of excel file. Type: string (or Expression with resultType string).
        /// Serialized Name: ExcelDataset.typeProperties.sheetName
        /// </summary>
        public BinaryData SheetName { get; set; }
        /// <summary>
        /// The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)
        /// Serialized Name: ExcelDataset.typeProperties.sheetIndex
        /// </summary>
        public BinaryData SheetIndex { get; set; }
        /// <summary>
        /// The partial data of one sheet. Type: string (or Expression with resultType string).
        /// Serialized Name: ExcelDataset.typeProperties.range
        /// </summary>
        public BinaryData Range { get; set; }
        /// <summary>
        /// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
        /// Serialized Name: ExcelDataset.typeProperties.firstRowAsHeader
        /// </summary>
        public BinaryData FirstRowAsHeader { get; set; }
        /// <summary>
        /// The data compression method used for the json dataset.
        /// Serialized Name: ExcelDataset.typeProperties.compression
        /// </summary>
        public DatasetCompression Compression { get; set; }
        /// <summary>
        /// The null value string. Type: string (or Expression with resultType string).
        /// Serialized Name: ExcelDataset.typeProperties.nullValue
        /// </summary>
        public BinaryData NullValue { get; set; }
    }
}
