// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// Azure Function activity.
    /// Serialized Name: AzureFunctionActivity
    /// </summary>
    public partial class AzureFunctionActivity : ExecutionActivity
    {
        /// <summary> Initializes a new instance of AzureFunctionActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="method">
        /// Rest API method for target endpoint.
        /// Serialized Name: AzureFunctionActivity.typeProperties.method
        /// </param>
        /// <param name="functionName">
        /// Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)
        /// Serialized Name: AzureFunctionActivity.typeProperties.functionName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="functionName"/> is null. </exception>
        public AzureFunctionActivity(string name, AzureFunctionActivityMethod method, BinaryData functionName) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (functionName == null)
            {
                throw new ArgumentNullException(nameof(functionName));
            }

            Method = method;
            FunctionName = functionName;
            ActivityType = "AzureFunctionActivity";
        }

        /// <summary> Initializes a new instance of AzureFunctionActivity. </summary>
        /// <param name="name">
        /// Activity name.
        /// Serialized Name: Activity.name
        /// </param>
        /// <param name="activityType">
        /// Type of activity.
        /// Serialized Name: Activity.type
        /// </param>
        /// <param name="description">
        /// Activity description.
        /// Serialized Name: Activity.description
        /// </param>
        /// <param name="dependsOn">
        /// Activity depends on condition.
        /// Serialized Name: Activity.dependsOn
        /// </param>
        /// <param name="userProperties">
        /// Activity user properties.
        /// Serialized Name: Activity.userProperties
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="linkedServiceName">
        /// Linked service reference.
        /// Serialized Name: ExecutionActivity.linkedServiceName
        /// </param>
        /// <param name="policy">
        /// Activity policy.
        /// Serialized Name: ExecutionActivity.policy
        /// </param>
        /// <param name="method">
        /// Rest API method for target endpoint.
        /// Serialized Name: AzureFunctionActivity.typeProperties.method
        /// </param>
        /// <param name="functionName">
        /// Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)
        /// Serialized Name: AzureFunctionActivity.typeProperties.functionName
        /// </param>
        /// <param name="headers">
        /// Represents the headers that will be sent to the request. For example, to set the language and type on a request: &quot;headers&quot; : { &quot;Accept-Language&quot;: &quot;en-us&quot;, &quot;Content-Type&quot;: &quot;application/json&quot; }. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureFunctionActivity.typeProperties.headers
        /// </param>
        /// <param name="body">
        /// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
        /// Serialized Name: AzureFunctionActivity.typeProperties.body
        /// </param>
        internal AzureFunctionActivity(string name, string activityType, string description, IList<ActivityDependency> dependsOn, IList<ActivityUserProperty> userProperties, IDictionary<string, BinaryData> additionalProperties, FactoryLinkedServiceReference linkedServiceName, ActivityPolicy policy, AzureFunctionActivityMethod method, BinaryData functionName, BinaryData headers, BinaryData body) : base(name, activityType, description, dependsOn, userProperties, additionalProperties, linkedServiceName, policy)
        {
            Method = method;
            FunctionName = functionName;
            Headers = headers;
            Body = body;
            ActivityType = activityType ?? "AzureFunctionActivity";
        }

        /// <summary>
        /// Rest API method for target endpoint.
        /// Serialized Name: AzureFunctionActivity.typeProperties.method
        /// </summary>
        public AzureFunctionActivityMethod Method { get; set; }
        /// <summary>
        /// Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)
        /// Serialized Name: AzureFunctionActivity.typeProperties.functionName
        /// </summary>
        public BinaryData FunctionName { get; set; }
        /// <summary>
        /// Represents the headers that will be sent to the request. For example, to set the language and type on a request: &quot;headers&quot; : { &quot;Accept-Language&quot;: &quot;en-us&quot;, &quot;Content-Type&quot;: &quot;application/json&quot; }. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureFunctionActivity.typeProperties.headers
        /// </summary>
        public BinaryData Headers { get; set; }
        /// <summary>
        /// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
        /// Serialized Name: AzureFunctionActivity.typeProperties.body
        /// </summary>
        public BinaryData Body { get; set; }
    }
}
