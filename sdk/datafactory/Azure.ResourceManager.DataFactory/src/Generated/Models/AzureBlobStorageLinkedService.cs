// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core.Expressions.DataFactory;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary>
    /// The azure blob storage linked service.
    /// Serialized Name: AzureBlobStorageLinkedService
    /// </summary>
    public partial class AzureBlobStorageLinkedService : FactoryLinkedServiceDefinition
    {
        /// <summary> Initializes a new instance of AzureBlobStorageLinkedService. </summary>
        public AzureBlobStorageLinkedService()
        {
            LinkedServiceType = "AzureBlobStorage";
        }

        /// <summary> Initializes a new instance of AzureBlobStorageLinkedService. </summary>
        /// <param name="linkedServiceType">
        /// Type of linked service.
        /// Serialized Name: LinkedService.type
        /// </param>
        /// <param name="connectVia">
        /// The integration runtime reference.
        /// Serialized Name: LinkedService.connectVia
        /// </param>
        /// <param name="description">
        /// Linked service description.
        /// Serialized Name: LinkedService.description
        /// </param>
        /// <param name="parameters">
        /// Parameters for linked service.
        /// Serialized Name: LinkedService.parameters
        /// </param>
        /// <param name="annotations">
        /// List of tags that can be used for describing the linked service.
        /// Serialized Name: LinkedService.annotations
        /// </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="connectionString">
        /// The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.connectionString
        /// </param>
        /// <param name="accountKey">
        /// The Azure key vault secret reference of accountKey in connection string.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.accountKey
        /// </param>
        /// <param name="sasUri">
        /// SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.sasUri
        /// </param>
        /// <param name="sasToken">
        /// The Azure key vault secret reference of sasToken in sas uri.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.sasToken
        /// </param>
        /// <param name="serviceEndpoint">
        /// Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.serviceEndpoint
        /// </param>
        /// <param name="servicePrincipalId">
        /// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.servicePrincipalId
        /// </param>
        /// <param name="servicePrincipalKey">
        /// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.servicePrincipalKey
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </param>
        /// <param name="tenant">
        /// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.tenant
        /// </param>
        /// <param name="azureCloudType">
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.azureCloudType
        /// </param>
        /// <param name="accountKind">
        /// Specify the kind of your storage account. Allowed values are: Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or BlockBlobStorage. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.accountKind
        /// </param>
        /// <param name="encryptedCredential">
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.encryptedCredential
        /// </param>
        /// <param name="credential">
        /// The credential reference containing authentication information.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.credential
        /// </param>
        /// <param name="authenticationType">
        /// The type used for authentication. Type: string.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.authenticationType
        /// </param>
        /// <param name="containerUri">
        /// Container uri of the Azure Blob Storage resource only support for anonymous access. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.containerUri
        /// </param>
        internal AzureBlobStorageLinkedService(string linkedServiceType, IntegrationRuntimeReference connectVia, string description, IDictionary<string, EntityParameterSpecification> parameters, IList<BinaryData> annotations, IDictionary<string, BinaryData> additionalProperties, DataFactoryElement<string> connectionString, AzureKeyVaultSecretReference accountKey, DataFactoryElement<string> sasUri, AzureKeyVaultSecretReference sasToken, DataFactoryElement<string> serviceEndpoint, DataFactoryElement<string> servicePrincipalId, FactorySecretBaseDefinition servicePrincipalKey, DataFactoryElement<string> tenant, DataFactoryElement<string> azureCloudType, DataFactoryElement<string> accountKind, BinaryData encryptedCredential, FactoryCredentialReference credential, AzureStorageAuthenticationType? authenticationType, DataFactoryElement<string> containerUri) : base(linkedServiceType, connectVia, description, parameters, annotations, additionalProperties)
        {
            ConnectionString = connectionString;
            AccountKey = accountKey;
            SasUri = sasUri;
            SasToken = sasToken;
            ServiceEndpoint = serviceEndpoint;
            ServicePrincipalId = servicePrincipalId;
            ServicePrincipalKey = servicePrincipalKey;
            Tenant = tenant;
            AzureCloudType = azureCloudType;
            AccountKind = accountKind;
            EncryptedCredential = encryptedCredential;
            Credential = credential;
            AuthenticationType = authenticationType;
            ContainerUri = containerUri;
            LinkedServiceType = linkedServiceType ?? "AzureBlobStorage";
        }

        /// <summary>
        /// The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.connectionString
        /// </summary>
        public DataFactoryElement<string> ConnectionString { get; set; }
        /// <summary>
        /// The Azure key vault secret reference of accountKey in connection string.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.accountKey
        /// </summary>
        public AzureKeyVaultSecretReference AccountKey { get; set; }
        /// <summary>
        /// SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.sasUri
        /// </summary>
        public DataFactoryElement<string> SasUri { get; set; }
        /// <summary>
        /// The Azure key vault secret reference of sasToken in sas uri.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.sasToken
        /// </summary>
        public AzureKeyVaultSecretReference SasToken { get; set; }
        /// <summary>
        /// Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.serviceEndpoint
        /// </summary>
        public DataFactoryElement<string> ServiceEndpoint { get; set; }
        /// <summary>
        /// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.servicePrincipalId
        /// </summary>
        public DataFactoryElement<string> ServicePrincipalId { get; set; }
        /// <summary>
        /// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.servicePrincipalKey
        /// Please note <see cref="FactorySecretBaseDefinition"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FactorySecretString"/> and <see cref="AzureKeyVaultSecretReference"/>.
        /// </summary>
        public FactorySecretBaseDefinition ServicePrincipalKey { get; set; }
        /// <summary>
        /// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.tenant
        /// </summary>
        public DataFactoryElement<string> Tenant { get; set; }
        /// <summary>
        /// Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regionsâ€™ cloud type. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.azureCloudType
        /// </summary>
        public DataFactoryElement<string> AzureCloudType { get; set; }
        /// <summary>
        /// Specify the kind of your storage account. Allowed values are: Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or BlockBlobStorage. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.accountKind
        /// </summary>
        public DataFactoryElement<string> AccountKind { get; set; }
        /// <summary>
        /// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.encryptedCredential
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData EncryptedCredential { get; set; }
        /// <summary>
        /// The credential reference containing authentication information.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.credential
        /// </summary>
        public FactoryCredentialReference Credential { get; set; }
        /// <summary>
        /// The type used for authentication. Type: string.
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.authenticationType
        /// </summary>
        public AzureStorageAuthenticationType? AuthenticationType { get; set; }
        /// <summary>
        /// Container uri of the Azure Blob Storage resource only support for anonymous access. Type: string (or Expression with resultType string).
        /// Serialized Name: AzureBlobStorageLinkedService.typeProperties.containerUri
        /// </summary>
        public DataFactoryElement<string> ContainerUri { get; set; }
    }
}
