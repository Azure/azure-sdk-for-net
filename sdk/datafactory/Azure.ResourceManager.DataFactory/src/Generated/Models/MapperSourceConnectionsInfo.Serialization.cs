// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataFactory.Models
{
    public partial class MapperSourceConnectionsInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(SourceEntities))
            {
                writer.WritePropertyName("sourceEntities"u8);
                writer.WriteStartArray();
                foreach (var item in SourceEntities)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Connection))
            {
                writer.WritePropertyName("connection"u8);
                writer.WriteObjectValue(Connection);
            }
            writer.WriteEndObject();
        }

        internal static MapperSourceConnectionsInfo DeserializeMapperSourceConnectionsInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<MapperTable>> sourceEntities = default;
            Optional<MapperConnection> connection = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sourceEntities"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<MapperTable> array = new List<MapperTable>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MapperTable.DeserializeMapperTable(item));
                    }
                    sourceEntities = array;
                    continue;
                }
                if (property.NameEquals("connection"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connection = MapperConnection.DeserializeMapperConnection(property.Value);
                    continue;
                }
            }
            return new MapperSourceConnectionsInfo(Optional.ToList(sourceEntities), connection.Value);
        }
    }
}
