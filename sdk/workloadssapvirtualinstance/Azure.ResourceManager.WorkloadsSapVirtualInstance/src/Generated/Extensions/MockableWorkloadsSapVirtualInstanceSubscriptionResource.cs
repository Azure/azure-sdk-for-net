// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.WorkloadsSapVirtualInstance;

namespace Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking
{
    /// <summary> A class to add extension methods to <see cref="SubscriptionResource"/>. </summary>
    public partial class MockableWorkloadsSapVirtualInstanceSubscriptionResource : ArmResource
    {
        private ClientDiagnostics _sapVirtualInstancesClientDiagnostics;
        private SapVirtualInstances _sapVirtualInstancesRestClient;

        /// <summary> Initializes a new instance of MockableWorkloadsSapVirtualInstanceSubscriptionResource for mocking. </summary>
        protected MockableWorkloadsSapVirtualInstanceSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MockableWorkloadsSapVirtualInstanceSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableWorkloadsSapVirtualInstanceSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics SapVirtualInstancesClientDiagnostics => _sapVirtualInstancesClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking", ProviderConstants.DefaultProviderNamespace, Diagnostics);

        private SapVirtualInstances SapVirtualInstancesRestClient => _sapVirtualInstancesRestClient ??= new SapVirtualInstances(SapVirtualInstancesClientDiagnostics, Pipeline, Endpoint, "2024-09-01");

        /// <summary> Gets all Virtual Instances for SAP solutions resources in a Subscription. </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SapVirtualInstanceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SapVirtualInstanceResource> GetSapVirtualInstancesAsync(CancellationToken cancellationToken = default)
        {
            RequestContext context = new RequestContext
            {
                CancellationToken = cancellationToken
            };
            return new AsyncPageableWrapper<SapVirtualInstanceData, SapVirtualInstanceResource>(new SapVirtualInstancesGetBySubscriptionAsyncCollectionResultOfT(SapVirtualInstancesRestClient, Guid.Parse(Id.SubscriptionId), context), data => new SapVirtualInstanceResource(Client, data));
        }

        /// <summary> Gets all Virtual Instances for SAP solutions resources in a Subscription. </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SapVirtualInstanceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SapVirtualInstanceResource> GetSapVirtualInstances(CancellationToken cancellationToken = default)
        {
            RequestContext context = new RequestContext
            {
                CancellationToken = cancellationToken
            };
            return new PageableWrapper<SapVirtualInstanceData, SapVirtualInstanceResource>(new SapVirtualInstancesGetBySubscriptionCollectionResultOfT(SapVirtualInstancesRestClient, Guid.Parse(Id.SubscriptionId), context), data => new SapVirtualInstanceResource(Client, data));
        }
    }
}
