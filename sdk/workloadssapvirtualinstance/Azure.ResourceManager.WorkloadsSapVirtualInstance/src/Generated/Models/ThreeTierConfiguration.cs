// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.WorkloadsSapVirtualInstance;

namespace Azure.ResourceManager.WorkloadsSapVirtualInstance.Models
{
    /// <summary> Gets or sets the three tier SAP configuration. For prerequisites for creating the infrastructure, please see [here](https://go.microsoft.com/fwlink/?linkid=2212611&amp;clcid=0x409). </summary>
    internal partial class ThreeTierConfiguration : InfrastructureConfiguration
    {
        /// <summary> Initializes a new instance of <see cref="ThreeTierConfiguration"/>. </summary>
        /// <param name="appResourceGroup"> The application resource group where SAP system resources will be deployed. </param>
        /// <param name="centralServer"> The central server configuration. </param>
        /// <param name="applicationServer"> The application server configuration. </param>
        /// <param name="databaseServer"> The database configuration. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="appResourceGroup"/>, <paramref name="centralServer"/>, <paramref name="applicationServer"/> or <paramref name="databaseServer"/> is null. </exception>
        public ThreeTierConfiguration(string appResourceGroup, CentralServerConfiguration centralServer, ApplicationServerConfiguration applicationServer, DatabaseConfiguration databaseServer) : base(appResourceGroup, SapDeploymentType.ThreeTier)
        {
            Argument.AssertNotNull(appResourceGroup, nameof(appResourceGroup));
            Argument.AssertNotNull(centralServer, nameof(centralServer));
            Argument.AssertNotNull(applicationServer, nameof(applicationServer));
            Argument.AssertNotNull(databaseServer, nameof(databaseServer));

            CentralServer = centralServer;
            ApplicationServer = applicationServer;
            DatabaseServer = databaseServer;
        }

        /// <summary> Initializes a new instance of <see cref="ThreeTierConfiguration"/>. </summary>
        /// <param name="appResourceGroup"> The application resource group where SAP system resources will be deployed. </param>
        /// <param name="deploymentType"> The SAP deployment type. Eg: SingleServer/ThreeTier. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="networkConfiguration"> Network configuration common to all servers. </param>
        /// <param name="centralServer"> The central server configuration. </param>
        /// <param name="applicationServer"> The application server configuration. </param>
        /// <param name="databaseServer"> The database configuration. </param>
        /// <param name="highAvailabilityConfig"> The high availability configuration. </param>
        /// <param name="storageConfiguration"> The storage configuration. </param>
        /// <param name="customResourceNames"> The set of custom names to be used for underlying azure resources that are part of the SAP system. </param>
        internal ThreeTierConfiguration(string appResourceGroup, SapDeploymentType deploymentType, IDictionary<string, BinaryData> additionalBinaryDataProperties, NetworkConfiguration networkConfiguration, CentralServerConfiguration centralServer, ApplicationServerConfiguration applicationServer, DatabaseConfiguration databaseServer, HighAvailabilityConfiguration highAvailabilityConfig, SapStorageConfiguration storageConfiguration, ThreeTierCustomResourceNames customResourceNames) : base(appResourceGroup, deploymentType, additionalBinaryDataProperties)
        {
            NetworkConfiguration = networkConfiguration;
            CentralServer = centralServer;
            ApplicationServer = applicationServer;
            DatabaseServer = databaseServer;
            HighAvailabilityConfig = highAvailabilityConfig;
            StorageConfiguration = storageConfiguration;
            CustomResourceNames = customResourceNames;
        }

        /// <summary> Network configuration common to all servers. </summary>
        internal NetworkConfiguration NetworkConfiguration { get; set; }

        /// <summary> The central server configuration. </summary>
        public CentralServerConfiguration CentralServer { get; set; }

        /// <summary> The application server configuration. </summary>
        public ApplicationServerConfiguration ApplicationServer { get; set; }

        /// <summary> The database configuration. </summary>
        public DatabaseConfiguration DatabaseServer { get; set; }

        /// <summary> The high availability configuration. </summary>
        internal HighAvailabilityConfiguration HighAvailabilityConfig { get; set; }

        /// <summary> The storage configuration. </summary>
        public SapStorageConfiguration StorageConfiguration { get; set; }

        /// <summary> The set of custom names to be used for underlying azure resources that are part of the SAP system. </summary>
        internal ThreeTierCustomResourceNames CustomResourceNames { get; set; }

        /// <summary> Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. </summary>
        public bool? IsSecondaryIpEnabled
        {
            get
            {
                return NetworkConfiguration is null ? default : NetworkConfiguration.IsSecondaryIpEnabled;
            }
            set
            {
                if (NetworkConfiguration is null)
                {
                    NetworkConfiguration = new NetworkConfiguration();
                }
                NetworkConfiguration.IsSecondaryIpEnabled = value;
            }
        }

        /// <summary> The high availability type. </summary>
        public SapHighAvailabilityType? HighAvailabilityType
        {
            get
            {
                return HighAvailabilityConfig is null ? default : HighAvailabilityConfig.HighAvailabilityType;
            }
            set
            {
                HighAvailabilityConfig = value.HasValue ? new HighAvailabilityConfiguration(value.Value) : default;
            }
        }

        /// <summary> The pattern type to be used for resource naming. </summary>
        internal SapNamingPatternType? CustomResourceNamesNamingPatternType
        {
            get
            {
                return CustomResourceNames is null ? default : CustomResourceNames.NamingPatternType;
            }
            set
            {
                CustomResourceNames = value.HasValue ? new Models.ThreeTierCustomResourceNames(value.Value) : default;
            }
        }
    }
}
