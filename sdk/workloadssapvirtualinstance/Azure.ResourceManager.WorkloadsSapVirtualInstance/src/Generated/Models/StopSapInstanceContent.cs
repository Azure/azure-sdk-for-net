// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.WorkloadsSapVirtualInstance.Models
{
    /// <summary> Stop SAP instance(s) request body. </summary>
    public partial class StopSapInstanceContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StopSapInstanceContent"/>. </summary>
        public StopSapInstanceContent()
        {
        }

        /// <summary> Initializes a new instance of <see cref="StopSapInstanceContent"/>. </summary>
        /// <param name="softStopTimeoutSeconds"> This parameter defines how long (in seconds) the soft shutdown waits until the RFC/HTTP clients no longer consider the server for calls with load balancing. Value 0 means that the kernel does not wait, but goes directly into the next shutdown state, i.e. hard stop. </param>
        /// <param name="deallocateVm"> The boolean value indicates whether to Stop and deallocate the virtual machines along with the SAP instances. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StopSapInstanceContent(long? softStopTimeoutSeconds, bool? deallocateVm, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            SoftStopTimeoutSeconds = softStopTimeoutSeconds;
            DeallocateVm = deallocateVm;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> This parameter defines how long (in seconds) the soft shutdown waits until the RFC/HTTP clients no longer consider the server for calls with load balancing. Value 0 means that the kernel does not wait, but goes directly into the next shutdown state, i.e. hard stop. </summary>
        public long? SoftStopTimeoutSeconds { get; set; }

        /// <summary> The boolean value indicates whether to Stop and deallocate the virtual machines along with the SAP instances. </summary>
        public bool? DeallocateVm { get; set; }
    }
}
