// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.WorkloadsSapVirtualInstance.Models;

namespace Azure.ResourceManager.WorkloadsSapVirtualInstance
{
    /// <summary> Define the SAP Application Server Instance resource. </summary>
    public partial class SapApplicationServerInstanceData : TrackedResourceData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="SapApplicationServerInstanceData"/>. </summary>
        /// <param name="location"> The geo-location where the resource lives. </param>
        public SapApplicationServerInstanceData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of <see cref="SapApplicationServerInstanceData"/>. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        internal SapApplicationServerInstanceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, BinaryData> additionalBinaryDataProperties, IDictionary<string, string> tags, AzureLocation location, SapApplicationServerProperties properties) : base(id, name, resourceType, systemData, tags, location)
        {
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
            Properties = properties;
        }

        /// <summary> The resource-specific properties for this resource. </summary>
        internal SapApplicationServerProperties Properties { get; set; }

        /// <summary> Application server Instance Number. </summary>
        public string InstanceNo
        {
            get
            {
                return Properties is null ? default : Properties.InstanceNo;
            }
        }

        /// <summary> Application server Subnet. </summary>
        public ResourceIdentifier SubnetId
        {
            get
            {
                return Properties is null ? default : Properties.SubnetId;
            }
        }

        /// <summary> Application server instance SAP hostname. </summary>
        public string Hostname
        {
            get
            {
                return Properties is null ? default : Properties.Hostname;
            }
        }

        /// <summary> Application server instance SAP Kernel Version. </summary>
        public string KernelVersion
        {
            get
            {
                return Properties is null ? default : Properties.KernelVersion;
            }
        }

        /// <summary> Application server instance SAP Kernel Patch level. </summary>
        public string KernelPatch
        {
            get
            {
                return Properties is null ? default : Properties.KernelPatch;
            }
        }

        /// <summary> Application server instance SAP IP Address. </summary>
        public IPAddress IpAddress
        {
            get
            {
                return Properties is null ? default : Properties.IpAddress;
            }
        }

        /// <summary> Application server instance gateway Port. </summary>
        public long? GatewayPort
        {
            get
            {
                return Properties is null ? default : Properties.GatewayPort;
            }
        }

        /// <summary> Application server instance ICM HTTP Port. </summary>
        public long? IcmHttpPort
        {
            get
            {
                return Properties is null ? default : Properties.IcmHttpPort;
            }
        }

        /// <summary> Application server instance ICM HTTPS Port. </summary>
        public long? IcmHttpsPort
        {
            get
            {
                return Properties is null ? default : Properties.IcmHttpsPort;
            }
        }

        /// <summary> Application server instance dispatcher status. </summary>
        public string DispatcherStatus
        {
            get
            {
                return Properties is null ? default : Properties.DispatcherStatus;
            }
        }

        /// <summary> The list of virtual machines. </summary>
        public IReadOnlyList<ApplicationServerVmDetails> VmDetails
        {
            get
            {
                if (Properties is null)
                {
                    Properties = new SapApplicationServerProperties();
                }
                return Properties.VmDetails;
            }
        }

        /// <summary> Defines the SAP Instance status. </summary>
        public SapVirtualInstanceStatus? Status
        {
            get
            {
                return Properties is null ? default : Properties.Status;
            }
        }

        /// <summary> Defines the health of SAP Instances. </summary>
        public SapHealthState? Health
        {
            get
            {
                return Properties is null ? default : Properties.Health;
            }
        }

        /// <summary> Defines the provisioning states. </summary>
        public SapVirtualInstanceProvisioningState? ProvisioningState
        {
            get
            {
                return Properties is null ? default : Properties.ProvisioningState;
            }
        }

        /// <summary> Fully qualified resource ID for the load balancer. </summary>
        public string LoadBalancerDetailsId
        {
            get
            {
                return Properties is null ? default : Properties.LoadBalancerDetailsId;
            }
        }

        /// <summary> The Virtual Instance for SAP error body. </summary>
        public SapVirtualInstanceErrorDetail ErrorsProperties
        {
            get
            {
                return Properties is null ? default : Properties.ErrorsProperties;
            }
        }
    }
}
