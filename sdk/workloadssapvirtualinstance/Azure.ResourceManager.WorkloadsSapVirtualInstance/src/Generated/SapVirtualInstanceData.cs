// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.WorkloadsSapVirtualInstance.Models;

namespace Azure.ResourceManager.WorkloadsSapVirtualInstance
{
    /// <summary> Define the Virtual Instance for SAP solutions resource. </summary>
    public partial class SapVirtualInstanceData : TrackedResourceData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="SapVirtualInstanceData"/>. </summary>
        /// <param name="location"> The geo-location where the resource lives. </param>
        public SapVirtualInstanceData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of <see cref="SapVirtualInstanceData"/>. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        internal SapVirtualInstanceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, BinaryData> additionalBinaryDataProperties, IDictionary<string, string> tags, AzureLocation location, SapVirtualInstanceProperties properties, SapVirtualInstanceIdentity identity) : base(id, name, resourceType, systemData, tags, location)
        {
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
            Properties = properties;
            Identity = identity;
        }

        /// <summary> The resource-specific properties for this resource. </summary>
        internal SapVirtualInstanceProperties Properties { get; set; }

        /// <summary> The managed service identities assigned to this resource. </summary>
        public SapVirtualInstanceIdentity Identity { get; set; }

        /// <summary> Defines the environment type - Production/Non Production. </summary>
        public SapEnvironmentType Environment
        {
            get
            {
                return Properties is null ? default : Properties.Environment;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new SapVirtualInstanceProperties();
                }
                Properties.Environment = value;
            }
        }

        /// <summary> Defines the SAP Product type. </summary>
        public SapProductType SapProduct
        {
            get
            {
                return Properties is null ? default : Properties.SapProduct;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new SapVirtualInstanceProperties();
                }
                Properties.SapProduct = value;
            }
        }

        /// <summary> Specifies the network access configuration for the resources that will be deployed in the Managed Resource Group. The options to choose from are Public and Private. If 'Private' is chosen, the Storage Account service tag should be enabled on the subnets in which the SAP VMs exist. This is required for establishing connectivity between VM extensions and the managed resource group storage account. This setting is currently applicable only to Storage Account. Learn more here https://go.microsoft.com/fwlink/?linkid=2247228. </summary>
        public ManagedResourcesNetworkAccessType? ManagedResourcesNetworkAccessType
        {
            get
            {
                return Properties is null ? default : Properties.ManagedResourcesNetworkAccessType;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new SapVirtualInstanceProperties();
                }
                Properties.ManagedResourcesNetworkAccessType = value.Value;
            }
        }

        /// <summary> Defines the SAP Instance status. </summary>
        public SapVirtualInstanceStatus? Status
        {
            get
            {
                return Properties is null ? default : Properties.Status;
            }
        }

        /// <summary> Defines the health of SAP Instances. </summary>
        public SapHealthState? Health
        {
            get
            {
                return Properties is null ? default : Properties.Health;
            }
        }

        /// <summary> Defines the Virtual Instance for SAP state. </summary>
        public SapVirtualInstanceState? State
        {
            get
            {
                return Properties is null ? default : Properties.State;
            }
        }

        /// <summary> Defines the provisioning states. </summary>
        public SapVirtualInstanceProvisioningState? ProvisioningState
        {
            get
            {
                return Properties is null ? default : Properties.ProvisioningState;
            }
        }

        /// <summary> Managed resource group name. </summary>
        public string ManagedResourceGroupName
        {
            get
            {
                return Properties is null ? default : Properties.ManagedResourceGroupName;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new SapVirtualInstanceProperties();
                }
                Properties.ManagedResourceGroupName = value;
            }
        }

        /// <summary> The Virtual Instance for SAP error body. </summary>
        public SapVirtualInstanceErrorDetail ErrorsProperties
        {
            get
            {
                return Properties is null ? default : Properties.ErrorsProperties;
            }
        }
    }
}
