// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SapVirtualInstances.Models
{
    /// <summary> Gets or sets the central server configuration. </summary>
    public partial class SapCentralServerConfiguration
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SapCentralServerConfiguration"/>. </summary>
        /// <param name="sapSubnetId"> The subnet id. </param>
        /// <param name="virtualMachineConfiguration"> Gets or sets the virtual machine configuration. </param>
        /// <param name="instanceCount"> The number of central server VMs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sapSubnetId"/> or <paramref name="virtualMachineConfiguration"/> is null. </exception>
        public SapCentralServerConfiguration(string sapSubnetId, VirtualMachineConfiguration virtualMachineConfiguration, long instanceCount)
        {
            Argument.AssertNotNull(sapSubnetId, nameof(sapSubnetId));
            Argument.AssertNotNull(virtualMachineConfiguration, nameof(virtualMachineConfiguration));

            SapSubnetId = sapSubnetId;
            VirtualMachineConfiguration = virtualMachineConfiguration;
            InstanceCount = instanceCount;
        }

        /// <summary> Initializes a new instance of <see cref="SapCentralServerConfiguration"/>. </summary>
        /// <param name="sapSubnetId"> The subnet id. </param>
        /// <param name="virtualMachineConfiguration"> Gets or sets the virtual machine configuration. </param>
        /// <param name="instanceCount"> The number of central server VMs. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SapCentralServerConfiguration(string sapSubnetId, VirtualMachineConfiguration virtualMachineConfiguration, long instanceCount, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            SapSubnetId = sapSubnetId;
            VirtualMachineConfiguration = virtualMachineConfiguration;
            InstanceCount = instanceCount;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SapCentralServerConfiguration"/> for deserialization. </summary>
        internal SapCentralServerConfiguration()
        {
        }

        /// <summary> The subnet id. </summary>
        public string SapSubnetId { get; set; }
        /// <summary> Gets or sets the virtual machine configuration. </summary>
        public VirtualMachineConfiguration VirtualMachineConfiguration { get; set; }
        /// <summary> The number of central server VMs. </summary>
        public long InstanceCount { get; set; }
    }
}
