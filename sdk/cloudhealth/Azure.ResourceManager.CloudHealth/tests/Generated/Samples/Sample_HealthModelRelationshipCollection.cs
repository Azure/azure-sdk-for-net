// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.CloudHealth.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.CloudHealth.Samples
{
    public partial class Sample_HealthModelRelationshipCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_RelationshipsCreateOrUpdate()
        {
            // Generated from example definition: 2025-05-01-preview/Relationships_CreateOrUpdate.json
            // this example is just showing the usage of "Relationship_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HealthModelResource created on azure
            // for more information of creating HealthModelResource, please refer to the document of HealthModelResource
            string subscriptionId = "4980D7D5-4E07-47AD-AD34-E76C6BC9F061";
            string resourceGroupName = "rgopenapi";
            string healthModelName = "model1";
            ResourceIdentifier healthModelResourceId = HealthModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName);
            HealthModelResource healthModel = client.GetHealthModelResource(healthModelResourceId);

            // get the collection of this HealthModelRelationshipResource
            HealthModelRelationshipCollection collection = healthModel.GetHealthModelRelationships();

            // invoke the operation
            string relationshipName = "rel1";
            HealthModelRelationshipData data = new HealthModelRelationshipData
            {
                Properties = new HealthModelRelationshipProperties("Entity1", "Entity2")
                {
                    DisplayName = "My relationship",
                    Labels =
{
["key9681"] = "ixfvzsfnpvkkbrce"
},
                },
            };
            ArmOperation<HealthModelRelationshipResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, relationshipName, data);
            HealthModelRelationshipResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HealthModelRelationshipData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_RelationshipsGet()
        {
            // Generated from example definition: 2025-05-01-preview/Relationships_Get.json
            // this example is just showing the usage of "Relationship_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HealthModelResource created on azure
            // for more information of creating HealthModelResource, please refer to the document of HealthModelResource
            string subscriptionId = "4980D7D5-4E07-47AD-AD34-E76C6BC9F061";
            string resourceGroupName = "rgopenapi";
            string healthModelName = "myHealthModel";
            ResourceIdentifier healthModelResourceId = HealthModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName);
            HealthModelResource healthModel = client.GetHealthModelResource(healthModelResourceId);

            // get the collection of this HealthModelRelationshipResource
            HealthModelRelationshipCollection collection = healthModel.GetHealthModelRelationships();

            // invoke the operation
            string relationshipName = "Ue-21-F3M12V3w-13x18F8H-7HOk--kq6tP-HB";
            HealthModelRelationshipResource result = await collection.GetAsync(relationshipName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HealthModelRelationshipData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_RelationshipsListByHealthModel()
        {
            // Generated from example definition: 2025-05-01-preview/Relationships_ListByHealthModel.json
            // this example is just showing the usage of "Relationship_ListByHealthModel" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HealthModelResource created on azure
            // for more information of creating HealthModelResource, please refer to the document of HealthModelResource
            string subscriptionId = "4980D7D5-4E07-47AD-AD34-E76C6BC9F061";
            string resourceGroupName = "rgopenapi";
            string healthModelName = "model1";
            ResourceIdentifier healthModelResourceId = HealthModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName);
            HealthModelResource healthModel = client.GetHealthModelResource(healthModelResourceId);

            // get the collection of this HealthModelRelationshipResource
            HealthModelRelationshipCollection collection = healthModel.GetHealthModelRelationships();

            // invoke the operation and iterate over the result
            await foreach (HealthModelRelationshipResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                HealthModelRelationshipData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_RelationshipsGet()
        {
            // Generated from example definition: 2025-05-01-preview/Relationships_Get.json
            // this example is just showing the usage of "Relationship_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HealthModelResource created on azure
            // for more information of creating HealthModelResource, please refer to the document of HealthModelResource
            string subscriptionId = "4980D7D5-4E07-47AD-AD34-E76C6BC9F061";
            string resourceGroupName = "rgopenapi";
            string healthModelName = "myHealthModel";
            ResourceIdentifier healthModelResourceId = HealthModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName);
            HealthModelResource healthModel = client.GetHealthModelResource(healthModelResourceId);

            // get the collection of this HealthModelRelationshipResource
            HealthModelRelationshipCollection collection = healthModel.GetHealthModelRelationships();

            // invoke the operation
            string relationshipName = "Ue-21-F3M12V3w-13x18F8H-7HOk--kq6tP-HB";
            bool result = await collection.ExistsAsync(relationshipName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_RelationshipsGet()
        {
            // Generated from example definition: 2025-05-01-preview/Relationships_Get.json
            // this example is just showing the usage of "Relationship_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HealthModelResource created on azure
            // for more information of creating HealthModelResource, please refer to the document of HealthModelResource
            string subscriptionId = "4980D7D5-4E07-47AD-AD34-E76C6BC9F061";
            string resourceGroupName = "rgopenapi";
            string healthModelName = "myHealthModel";
            ResourceIdentifier healthModelResourceId = HealthModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName);
            HealthModelResource healthModel = client.GetHealthModelResource(healthModelResourceId);

            // get the collection of this HealthModelRelationshipResource
            HealthModelRelationshipCollection collection = healthModel.GetHealthModelRelationships();

            // invoke the operation
            string relationshipName = "Ue-21-F3M12V3w-13x18F8H-7HOk--kq6tP-HB";
            NullableResponse<HealthModelRelationshipResource> response = await collection.GetIfExistsAsync(relationshipName);
            HealthModelRelationshipResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                HealthModelRelationshipData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
