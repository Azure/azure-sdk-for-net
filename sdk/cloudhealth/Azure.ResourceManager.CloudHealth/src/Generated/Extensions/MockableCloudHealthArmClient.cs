// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.CloudHealth.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableCloudHealthArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableCloudHealthArmClient"/> class for mocking. </summary>
        protected MockableCloudHealthArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableCloudHealthArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableCloudHealthArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableCloudHealthArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="HealthModelResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="HealthModelResource.CreateResourceIdentifier" /> to create a <see cref="HealthModelResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HealthModelResource"/> object. </returns>
        public virtual HealthModelResource GetHealthModelResource(ResourceIdentifier id)
        {
            HealthModelResource.ValidateResourceId(id);
            return new HealthModelResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SignalDefinitionResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SignalDefinitionResource.CreateResourceIdentifier" /> to create a <see cref="SignalDefinitionResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SignalDefinitionResource"/> object. </returns>
        public virtual SignalDefinitionResource GetSignalDefinitionResource(ResourceIdentifier id)
        {
            SignalDefinitionResource.ValidateResourceId(id);
            return new SignalDefinitionResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AuthenticationSettingResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AuthenticationSettingResource.CreateResourceIdentifier" /> to create an <see cref="AuthenticationSettingResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AuthenticationSettingResource"/> object. </returns>
        public virtual AuthenticationSettingResource GetAuthenticationSettingResource(ResourceIdentifier id)
        {
            AuthenticationSettingResource.ValidateResourceId(id);
            return new AuthenticationSettingResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="EntityResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EntityResource.CreateResourceIdentifier" /> to create an <see cref="EntityResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EntityResource"/> object. </returns>
        public virtual EntityResource GetEntityResource(ResourceIdentifier id)
        {
            EntityResource.ValidateResourceId(id);
            return new EntityResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RelationshipResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RelationshipResource.CreateResourceIdentifier" /> to create a <see cref="RelationshipResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RelationshipResource"/> object. </returns>
        public virtual RelationshipResource GetRelationshipResource(ResourceIdentifier id)
        {
            RelationshipResource.ValidateResourceId(id);
            return new RelationshipResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DiscoveryRuleResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DiscoveryRuleResource.CreateResourceIdentifier" /> to create a <see cref="DiscoveryRuleResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DiscoveryRuleResource"/> object. </returns>
        public virtual DiscoveryRuleResource GetDiscoveryRuleResource(ResourceIdentifier id)
        {
            DiscoveryRuleResource.ValidateResourceId(id);
            return new DiscoveryRuleResource(Client, id);
        }
    }
}
