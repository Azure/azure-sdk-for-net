// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CloudHealth.Models
{
    /// <summary> Azure Resource Metric Signal Definition properties. </summary>
    public partial class ResourceMetricSignalDefinitionProperties : HealthModelSignalDefinitionProperties
    {
        /// <summary> Initializes a new instance of <see cref="ResourceMetricSignalDefinitionProperties"/>. </summary>
        /// <param name="evaluationRules"> Evaluation rules for the signal definition. </param>
        /// <param name="metricNamespace"> Metric namespace. </param>
        /// <param name="metricName"> Name of the metric. </param>
        /// <param name="timeGrain"> Time range of signal. ISO duration format like PT10M. </param>
        /// <param name="aggregationType"> Type of aggregation to apply to the metric. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="evaluationRules"/>, <paramref name="metricNamespace"/>, <paramref name="metricName"/> or <paramref name="timeGrain"/> is null. </exception>
        public ResourceMetricSignalDefinitionProperties(EntitySignalEvaluationRule evaluationRules, string metricNamespace, string metricName, string timeGrain, MetricAggregationType aggregationType) : base(evaluationRules)
        {
            Argument.AssertNotNull(evaluationRules, nameof(evaluationRules));
            Argument.AssertNotNull(metricNamespace, nameof(metricNamespace));
            Argument.AssertNotNull(metricName, nameof(metricName));
            Argument.AssertNotNull(timeGrain, nameof(timeGrain));

            MetricNamespace = metricNamespace;
            MetricName = metricName;
            TimeGrain = timeGrain;
            AggregationType = aggregationType;
            SignalKind = EntitySignalKind.AzureResourceMetric;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceMetricSignalDefinitionProperties"/>. </summary>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="displayName"> Display name. </param>
        /// <param name="signalKind"> Kind of the signal definition. </param>
        /// <param name="refreshInterval"> Interval in which the signal is being evaluated. Defaults to PT1M (1 minute). </param>
        /// <param name="labels"> Optional set of labels (key-value pairs). </param>
        /// <param name="dataUnit"> Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count)). </param>
        /// <param name="evaluationRules"> Evaluation rules for the signal definition. </param>
        /// <param name="deletedOn"> Date when the signal definition was (soft-)deleted. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="metricNamespace"> Metric namespace. </param>
        /// <param name="metricName"> Name of the metric. </param>
        /// <param name="timeGrain"> Time range of signal. ISO duration format like PT10M. </param>
        /// <param name="aggregationType"> Type of aggregation to apply to the metric. </param>
        /// <param name="dimension"> Optional: Dimension to split by. </param>
        /// <param name="dimensionFilter"> Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set. </param>
        internal ResourceMetricSignalDefinitionProperties(HealthModelProvisioningState? provisioningState, string displayName, EntitySignalKind signalKind, EntitySignalRefreshInterval? refreshInterval, IDictionary<string, string> labels, string dataUnit, EntitySignalEvaluationRule evaluationRules, DateTimeOffset? deletedOn, IDictionary<string, BinaryData> serializedAdditionalRawData, string metricNamespace, string metricName, string timeGrain, MetricAggregationType aggregationType, string dimension, string dimensionFilter) : base(provisioningState, displayName, signalKind, refreshInterval, labels, dataUnit, evaluationRules, deletedOn, serializedAdditionalRawData)
        {
            MetricNamespace = metricNamespace;
            MetricName = metricName;
            TimeGrain = timeGrain;
            AggregationType = aggregationType;
            Dimension = dimension;
            DimensionFilter = dimensionFilter;
            SignalKind = signalKind;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceMetricSignalDefinitionProperties"/> for deserialization. </summary>
        internal ResourceMetricSignalDefinitionProperties()
        {
        }

        /// <summary> Metric namespace. </summary>
        public string MetricNamespace { get; set; }
        /// <summary> Name of the metric. </summary>
        public string MetricName { get; set; }
        /// <summary> Time range of signal. ISO duration format like PT10M. </summary>
        public string TimeGrain { get; set; }
        /// <summary> Type of aggregation to apply to the metric. </summary>
        public MetricAggregationType AggregationType { get; set; }
        /// <summary> Optional: Dimension to split by. </summary>
        public string Dimension { get; set; }
        /// <summary> Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set. </summary>
        public string DimensionFilter { get; set; }
    }
}
