// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CloudHealth.Models
{
    /// <summary> ML-based evaluation rule for a signal definition. </summary>
    public partial class DynamicDetectionRule
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DynamicDetectionRule"/>. </summary>
        /// <param name="dynamicThresholdModel"> ML model to use for dynamic thresholds. </param>
        /// <param name="modelSensitivity"> ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5. </param>
        /// <param name="dynamicThresholdDirection"> Threshold direction. </param>
        public DynamicDetectionRule(DynamicThresholdModel dynamicThresholdModel, float modelSensitivity, DynamicThresholdDirection dynamicThresholdDirection)
        {
            DynamicThresholdModel = dynamicThresholdModel;
            ModelSensitivity = modelSensitivity;
            DynamicThresholdDirection = dynamicThresholdDirection;
        }

        /// <summary> Initializes a new instance of <see cref="DynamicDetectionRule"/>. </summary>
        /// <param name="dynamicThresholdModel"> ML model to use for dynamic thresholds. </param>
        /// <param name="modelSensitivity"> ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5. </param>
        /// <param name="dynamicThresholdDirection"> Threshold direction. </param>
        /// <param name="trainingStartOn"> Start time of the training in UTC. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DynamicDetectionRule(DynamicThresholdModel dynamicThresholdModel, float modelSensitivity, DynamicThresholdDirection dynamicThresholdDirection, DateTimeOffset? trainingStartOn, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DynamicThresholdModel = dynamicThresholdModel;
            ModelSensitivity = modelSensitivity;
            DynamicThresholdDirection = dynamicThresholdDirection;
            TrainingStartOn = trainingStartOn;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DynamicDetectionRule"/> for deserialization. </summary>
        internal DynamicDetectionRule()
        {
        }

        /// <summary> ML model to use for dynamic thresholds. </summary>
        public DynamicThresholdModel DynamicThresholdModel { get; set; }
        /// <summary> ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5. </summary>
        public float ModelSensitivity { get; set; }
        /// <summary> Threshold direction. </summary>
        public DynamicThresholdDirection DynamicThresholdDirection { get; set; }
        /// <summary> Start time of the training in UTC. </summary>
        public DateTimeOffset? TrainingStartOn { get; set; }
    }
}
