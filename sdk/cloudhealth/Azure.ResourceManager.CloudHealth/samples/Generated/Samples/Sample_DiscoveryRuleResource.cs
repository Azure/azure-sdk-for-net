// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.CloudHealth.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.CloudHealth.Samples
{
    public partial class Sample_DiscoveryRuleResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DiscoveryRulesGet()
        {
            // Generated from example definition: 2025-05-01-preview/DiscoveryRules_Get.json
            // this example is just showing the usage of "DiscoveryRule_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryRuleResource created on azure
            // for more information of creating DiscoveryRuleResource, please refer to the document of DiscoveryRuleResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string healthModelName = "myHealthModel";
            string discoveryRuleName = "myDiscoveryRule";
            ResourceIdentifier discoveryRuleResourceId = DiscoveryRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName, discoveryRuleName);
            DiscoveryRuleResource discoveryRule = client.GetDiscoveryRuleResource(discoveryRuleResourceId);

            // invoke the operation
            DiscoveryRuleResource result = await discoveryRule.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DiscoveryRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DiscoveryRulesDelete()
        {
            // Generated from example definition: 2025-05-01-preview/DiscoveryRules_Delete.json
            // this example is just showing the usage of "DiscoveryRule_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryRuleResource created on azure
            // for more information of creating DiscoveryRuleResource, please refer to the document of DiscoveryRuleResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "my-resource-group";
            string healthModelName = "my-health-model";
            string discoveryRuleName = "my-discovery-rule";
            ResourceIdentifier discoveryRuleResourceId = DiscoveryRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName, discoveryRuleName);
            DiscoveryRuleResource discoveryRule = client.GetDiscoveryRuleResource(discoveryRuleResourceId);

            // invoke the operation
            await discoveryRule.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_DiscoveryRulesCreateOrUpdate()
        {
            // Generated from example definition: 2025-05-01-preview/DiscoveryRules_CreateOrUpdate.json
            // this example is just showing the usage of "DiscoveryRule_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryRuleResource created on azure
            // for more information of creating DiscoveryRuleResource, please refer to the document of DiscoveryRuleResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string healthModelName = "myHealthModel";
            string discoveryRuleName = "myDiscoveryRule";
            ResourceIdentifier discoveryRuleResourceId = DiscoveryRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, healthModelName, discoveryRuleName);
            DiscoveryRuleResource discoveryRule = client.GetDiscoveryRuleResource(discoveryRuleResourceId);

            // invoke the operation
            DiscoveryRuleData data = new DiscoveryRuleData
            {
                Properties = new DiscoveryRuleProperties("resources | where subscriptionId == '7ddfffd7-9b32-40df-1234-828cbd55d6f4' | where resourceGroup == 'my-rg'", "authSetting1", DiscoveryRuleRelationshipDiscoveryBehavior.Enabled, DiscoveryRuleRecommendedSignalsBehavior.Enabled, null)
                {
                    DisplayName = "myDisplayName",
                },
            };
            ArmOperation<DiscoveryRuleResource> lro = await discoveryRule.UpdateAsync(WaitUntil.Completed, data);
            DiscoveryRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DiscoveryRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
