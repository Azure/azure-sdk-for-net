// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.IntegrationSpaces
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.IntegrationSpaces. </summary>
    public static partial class IntegrationSpacesExtensions
    {
        private static ResourceGroupResourceExtensionClient GetResourceGroupResourceExtensionClient(ArmResource resource)
        {
            return resource.GetCachedClient(client =>
            {
                return new ResourceGroupResourceExtensionClient(client, resource.Id);
            });
        }

        private static ResourceGroupResourceExtensionClient GetResourceGroupResourceExtensionClient(ArmClient client, ResourceIdentifier scope)
        {
            return client.GetResourceClient(() =>
            {
                return new ResourceGroupResourceExtensionClient(client, scope);
            });
        }

        private static SubscriptionResourceExtensionClient GetSubscriptionResourceExtensionClient(ArmResource resource)
        {
            return resource.GetCachedClient(client =>
            {
                return new SubscriptionResourceExtensionClient(client, resource.Id);
            });
        }

        private static SubscriptionResourceExtensionClient GetSubscriptionResourceExtensionClient(ArmClient client, ResourceIdentifier scope)
        {
            return client.GetResourceClient(() =>
            {
                return new SubscriptionResourceExtensionClient(client, scope);
            });
        }
        #region SpaceResource
        /// <summary>
        /// Gets an object representing a <see cref="SpaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpaceResource.CreateResourceIdentifier" /> to create a <see cref="SpaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpaceResource" /> object. </returns>
        public static SpaceResource GetSpaceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SpaceResource.ValidateResourceId(id);
                return new SpaceResource(client, id);
            }
            );
        }
        #endregion

        #region IntegrationSpaceApplicationResource
        /// <summary>
        /// Gets an object representing an <see cref="IntegrationSpaceApplicationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IntegrationSpaceApplicationResource.CreateResourceIdentifier" /> to create an <see cref="IntegrationSpaceApplicationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IntegrationSpaceApplicationResource" /> object. </returns>
        public static IntegrationSpaceApplicationResource GetIntegrationSpaceApplicationResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IntegrationSpaceApplicationResource.ValidateResourceId(id);
                return new IntegrationSpaceApplicationResource(client, id);
            }
            );
        }
        #endregion

        #region BusinessProcessResource
        /// <summary>
        /// Gets an object representing a <see cref="BusinessProcessResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BusinessProcessResource.CreateResourceIdentifier" /> to create a <see cref="BusinessProcessResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BusinessProcessResource" /> object. </returns>
        public static BusinessProcessResource GetBusinessProcessResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BusinessProcessResource.ValidateResourceId(id);
                return new BusinessProcessResource(client, id);
            }
            );
        }
        #endregion

        #region BusinessProcessVersionResource
        /// <summary>
        /// Gets an object representing a <see cref="BusinessProcessVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BusinessProcessVersionResource.CreateResourceIdentifier" /> to create a <see cref="BusinessProcessVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BusinessProcessVersionResource" /> object. </returns>
        public static BusinessProcessVersionResource GetBusinessProcessVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BusinessProcessVersionResource.ValidateResourceId(id);
                return new BusinessProcessVersionResource(client, id);
            }
            );
        }
        #endregion

        #region IntegrationSpaceResource
        /// <summary>
        /// Gets an object representing an <see cref="IntegrationSpaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IntegrationSpaceResource.CreateResourceIdentifier" /> to create an <see cref="IntegrationSpaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IntegrationSpaceResource" /> object. </returns>
        public static IntegrationSpaceResource GetIntegrationSpaceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IntegrationSpaceResource.ValidateResourceId(id);
                return new IntegrationSpaceResource(client, id);
            }
            );
        }
        #endregion

        #region InfrastructureResource
        /// <summary>
        /// Gets an object representing an <see cref="InfrastructureResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="InfrastructureResource.CreateResourceIdentifier" /> to create an <see cref="InfrastructureResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="InfrastructureResource" /> object. </returns>
        public static InfrastructureResource GetInfrastructureResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                InfrastructureResource.ValidateResourceId(id);
                return new InfrastructureResource(client, id);
            }
            );
        }
        #endregion

        /// <summary> Gets a collection of SpaceResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of SpaceResources and their operations over a SpaceResource. </returns>
        public static SpaceCollection GetSpaces(this ResourceGroupResource resourceGroupResource)
        {
            return GetResourceGroupResourceExtensionClient(resourceGroupResource).GetSpaces();
        }

        /// <summary>
        /// Get a Space
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntegrationSpaces/spaces/{spaceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Spaces_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="spaceName"> The name of the space. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="spaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="spaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<SpaceResource>> GetSpaceAsync(this ResourceGroupResource resourceGroupResource, string spaceName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetSpaces().GetAsync(spaceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a Space
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntegrationSpaces/spaces/{spaceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Spaces_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="spaceName"> The name of the space. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="spaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="spaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<SpaceResource> GetSpace(this ResourceGroupResource resourceGroupResource, string spaceName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetSpaces().Get(spaceName, cancellationToken);
        }

        /// <summary>
        /// List Space resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.IntegrationSpaces/spaces</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Spaces_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SpaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SpaceResource> GetSpacesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetSubscriptionResourceExtensionClient(subscriptionResource).GetSpacesAsync(cancellationToken);
        }

        /// <summary>
        /// List Space resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.IntegrationSpaces/spaces</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Spaces_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SpaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SpaceResource> GetSpaces(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetSubscriptionResourceExtensionClient(subscriptionResource).GetSpaces(cancellationToken);
        }
    }
}
