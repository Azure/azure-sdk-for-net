// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IntegrationSpaces.Models
{
    public partial class BusinessProcessDevelopmentArtifactProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(Identifier))
            {
                writer.WritePropertyName("identifier"u8);
                writer.WriteObjectValue(Identifier);
            }
            if (Optional.IsCollectionDefined(BusinessProcessStages))
            {
                writer.WritePropertyName("businessProcessStages"u8);
                writer.WriteStartObject();
                foreach (var item in BusinessProcessStages)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(BusinessProcessMapping))
            {
                writer.WritePropertyName("businessProcessMapping"u8);
                writer.WriteStartObject();
                foreach (var item in BusinessProcessMapping)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(TrackingProfiles))
            {
                writer.WritePropertyName("trackingProfiles"u8);
                writer.WriteStartObject();
                foreach (var item in TrackingProfiles)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static BusinessProcessDevelopmentArtifactProperties DeserializeBusinessProcessDevelopmentArtifactProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> description = default;
            Optional<BusinessProcessIdentifier> identifier = default;
            Optional<IDictionary<string, BusinessProcessStage>> businessProcessStages = default;
            Optional<IDictionary<string, BusinessProcessMappingItem>> businessProcessMapping = default;
            Optional<IDictionary<string, TrackingProfile>> trackingProfiles = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("identifier"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    identifier = BusinessProcessIdentifier.DeserializeBusinessProcessIdentifier(property.Value);
                    continue;
                }
                if (property.NameEquals("businessProcessStages"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, BusinessProcessStage> dictionary = new Dictionary<string, BusinessProcessStage>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, BusinessProcessStage.DeserializeBusinessProcessStage(property0.Value));
                    }
                    businessProcessStages = dictionary;
                    continue;
                }
                if (property.NameEquals("businessProcessMapping"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, BusinessProcessMappingItem> dictionary = new Dictionary<string, BusinessProcessMappingItem>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, BusinessProcessMappingItem.DeserializeBusinessProcessMappingItem(property0.Value));
                    }
                    businessProcessMapping = dictionary;
                    continue;
                }
                if (property.NameEquals("trackingProfiles"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, TrackingProfile> dictionary = new Dictionary<string, TrackingProfile>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, TrackingProfile.DeserializeTrackingProfile(property0.Value));
                    }
                    trackingProfiles = dictionary;
                    continue;
                }
            }
            return new BusinessProcessDevelopmentArtifactProperties(description.Value, identifier.Value, Optional.ToDictionary(businessProcessStages), Optional.ToDictionary(businessProcessMapping), Optional.ToDictionary(trackingProfiles));
        }
    }
}
