// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IntegrationSpaces.Models
{
    public partial class BusinessProcessMappingItem : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(LogicAppResourceId))
            {
                writer.WritePropertyName("logicAppResourceId"u8);
                writer.WriteStringValue(LogicAppResourceId);
            }
            if (Optional.IsDefined(WorkflowName))
            {
                writer.WritePropertyName("workflowName"u8);
                writer.WriteStringValue(WorkflowName);
            }
            if (Optional.IsDefined(OperationName))
            {
                writer.WritePropertyName("operationName"u8);
                writer.WriteStringValue(OperationName);
            }
            if (Optional.IsDefined(OperationType))
            {
                writer.WritePropertyName("operationType"u8);
                writer.WriteStringValue(OperationType);
            }
            writer.WriteEndObject();
        }

        internal static BusinessProcessMappingItem DeserializeBusinessProcessMappingItem(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> logicAppResourceId = default;
            Optional<string> workflowName = default;
            Optional<string> operationName = default;
            Optional<string> operationType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("logicAppResourceId"u8))
                {
                    logicAppResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("workflowName"u8))
                {
                    workflowName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operationName"u8))
                {
                    operationName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operationType"u8))
                {
                    operationType = property.Value.GetString();
                    continue;
                }
            }
            return new BusinessProcessMappingItem(logicAppResourceId.Value, workflowName.Value, operationName.Value, operationType.Value);
        }
    }
}
