// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IntegrationSpaces.Models
{
    public partial class TrackingProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Schema))
            {
                writer.WritePropertyName("$schema"u8);
                writer.WriteStringValue(Schema);
            }
            if (Optional.IsDefined(BusinessProcess))
            {
                writer.WritePropertyName("businessProcess"u8);
                writer.WriteObjectValue(BusinessProcess);
            }
            if (Optional.IsCollectionDefined(TrackingDefinitions))
            {
                writer.WritePropertyName("trackingDefinitions"u8);
                writer.WriteStartObject();
                foreach (var item in TrackingDefinitions)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static TrackingProfile DeserializeTrackingProfile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> schema = default;
            Optional<BusinessProcessReference> businessProcess = default;
            Optional<IDictionary<string, WorkflowTracking>> trackingDefinitions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("$schema"u8))
                {
                    schema = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("businessProcess"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    businessProcess = BusinessProcessReference.DeserializeBusinessProcessReference(property.Value);
                    continue;
                }
                if (property.NameEquals("trackingDefinitions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, WorkflowTracking> dictionary = new Dictionary<string, WorkflowTracking>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, WorkflowTracking.DeserializeWorkflowTracking(property0.Value));
                    }
                    trackingDefinitions = dictionary;
                    continue;
                }
            }
            return new TrackingProfile(schema.Value, businessProcess.Value, Optional.ToDictionary(trackingDefinitions));
        }
    }
}
