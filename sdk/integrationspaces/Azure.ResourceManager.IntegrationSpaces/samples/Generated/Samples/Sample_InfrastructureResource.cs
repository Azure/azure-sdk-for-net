// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.IntegrationSpaces;
using Azure.ResourceManager.IntegrationSpaces.Models;

namespace Azure.ResourceManager.IntegrationSpaces.Samples
{
    public partial class Sample_InfrastructureResource
    {
        // GetInfrastructureResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetInfrastructureResource()
        {
            // Generated from example definition: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/InfrastructureResources_Get.json
            // this example is just showing the usage of "InfrastructureResources_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this InfrastructureResource created on azure
            // for more information of creating InfrastructureResource, please refer to the document of InfrastructureResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            string spaceName = "Space1";
            string infrastructureResourceName = "InfrastructureResource1";
            ResourceIdentifier infrastructureResourceId = InfrastructureResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, spaceName, infrastructureResourceName);
            InfrastructureResource infrastructureResource = client.GetInfrastructureResource(infrastructureResourceId);

            // invoke the operation
            InfrastructureResource result = await infrastructureResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            InfrastructureResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PatchInfrastructureResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PatchInfrastructureResource()
        {
            // Generated from example definition: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/InfrastructureResources_Patch.json
            // this example is just showing the usage of "InfrastructureResources_Patch" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this InfrastructureResource created on azure
            // for more information of creating InfrastructureResource, please refer to the document of InfrastructureResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            string spaceName = "Space1";
            string infrastructureResourceName = "InfrastructureResource1";
            ResourceIdentifier infrastructureResourceId = InfrastructureResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, spaceName, infrastructureResourceName);
            InfrastructureResource infrastructureResource = client.GetInfrastructureResource(infrastructureResourceId);

            // invoke the operation
            InfrastructureResourcePatch patch = new InfrastructureResourcePatch()
            {
                ResourceType = "Microsoft.ApiManagement/service",
                ResourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ApiManagement/service/APIM1",
            };
            InfrastructureResource result = await infrastructureResource.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            InfrastructureResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // DeleteInfrastructureResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteInfrastructureResource()
        {
            // Generated from example definition: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/InfrastructureResources_Delete.json
            // this example is just showing the usage of "InfrastructureResources_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this InfrastructureResource created on azure
            // for more information of creating InfrastructureResource, please refer to the document of InfrastructureResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            string spaceName = "Space1";
            string infrastructureResourceName = "InfrastructureResource1";
            ResourceIdentifier infrastructureResourceId = InfrastructureResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, spaceName, infrastructureResourceName);
            InfrastructureResource infrastructureResource = client.GetInfrastructureResource(infrastructureResourceId);

            // invoke the operation
            await infrastructureResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
