// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.IntegrationSpaces;
using Azure.ResourceManager.IntegrationSpaces.Models;

namespace Azure.ResourceManager.IntegrationSpaces.Samples
{
    public partial class Sample_BusinessProcessResource
    {
        // GetBusinessProcess
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetBusinessProcess()
        {
            // Generated from example definition: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/BusinessProcesses_Get.json
            // this example is just showing the usage of "BusinessProcesses_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BusinessProcessResource created on azure
            // for more information of creating BusinessProcessResource, please refer to the document of BusinessProcessResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            string spaceName = "Space1";
            string applicationName = "Application1";
            string businessProcessName = "BusinessProcess1";
            ResourceIdentifier businessProcessResourceId = BusinessProcessResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, spaceName, applicationName, businessProcessName);
            BusinessProcessResource businessProcess = client.GetBusinessProcessResource(businessProcessResourceId);

            // invoke the operation
            BusinessProcessResource result = await businessProcess.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BusinessProcessData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PatchBusinessProcess
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PatchBusinessProcess()
        {
            // Generated from example definition: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/BusinessProcesses_Patch.json
            // this example is just showing the usage of "BusinessProcesses_Patch" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BusinessProcessResource created on azure
            // for more information of creating BusinessProcessResource, please refer to the document of BusinessProcessResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            string spaceName = "Space1";
            string applicationName = "Application1";
            string businessProcessName = "BusinessProcess1";
            ResourceIdentifier businessProcessResourceId = BusinessProcessResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, spaceName, applicationName, businessProcessName);
            BusinessProcessResource businessProcess = client.GetBusinessProcessResource(businessProcessResourceId);

            // invoke the operation
            BusinessProcessPatch patch = new BusinessProcessPatch()
            {
                Description = "First updated business process.",
            };
            BusinessProcessResource result = await businessProcess.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BusinessProcessData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // DeleteBusinessProcess
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteBusinessProcess()
        {
            // Generated from example definition: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/BusinessProcesses_Delete.json
            // this example is just showing the usage of "BusinessProcesses_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BusinessProcessResource created on azure
            // for more information of creating BusinessProcessResource, please refer to the document of BusinessProcessResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            string spaceName = "Space1";
            string applicationName = "Application1";
            string businessProcessName = "BusinessProcess1";
            ResourceIdentifier businessProcessResourceId = BusinessProcessResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, spaceName, applicationName, businessProcessName);
            BusinessProcessResource businessProcess = client.GetBusinessProcessResource(businessProcessResourceId);

            // invoke the operation
            await businessProcess.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
