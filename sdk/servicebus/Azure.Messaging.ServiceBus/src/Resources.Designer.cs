//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Azure.Messaging.ServiceBus {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Azure.Messaging.ServiceBus.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retreive session ID from broker. Please retry..
        /// </summary>
        internal static string AmqpFieldSessionId {
            get {
                return ResourceManager.GetString("AmqpFieldSessionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link..
        /// </summary>
        internal static string AmqpMessageSizeExceeded {
            get {
                return ResourceManager.GetString("AmqpMessageSizeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following arguments must all be provided or none at all: {0}..
        /// </summary>
        internal static string ArgumentInvalidCombination {
            get {
                return ResourceManager.GetString("ArgumentInvalidCombination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the argument {0} must be positive..
        /// </summary>
        internal static string ArgumentMustBePositive {
            get {
                return ResourceManager.GetString("ArgumentMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument {0} is null or white space..
        /// </summary>
        internal static string ArgumentNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("ArgumentNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; cannot exceed {1} characters..
        /// </summary>
        internal static string ArgumentStringTooBig {
            get {
                return ResourceManager.GetString("ArgumentStringTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no brokeredMessages supplied. Please make sure input messages are not empty..
        /// </summary>
        internal static string BrokeredMessageListIsNullOrEmpty {
            get {
                return ResourceManager.GetString("BrokeredMessageListIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Messages cannot be locked when working with session-enabled entities. Locks are handled at the session level..
        /// </summary>
        internal static string CannotLockMessageOnSessionEntity {
            get {
                return ResourceManager.GetString("CannotLockMessageOnSessionEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When using a sessionful entity, the Session event handler must be used..
        /// </summary>
        internal static string CannotRegisterNonSessionEventHandlerWhenUsingSession {
            get {
                return ResourceManager.GetString("CannotRegisterNonSessionEventHandlerWhenUsingSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When not using a sessionful entity, the non-session event handler must be used..
        /// </summary>
        internal static string CannotRegisterSessionEventHandlerWhenNotUsingSessions {
            get {
                return ResourceManager.GetString("CannotRegisterSessionEventHandlerWhenNotUsingSessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending empty {0} is not a valid operation..
        /// </summary>
        internal static string CannotSendAnEmptyMessage {
            get {
                return ResourceManager.GetString("CannotSendAnEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot begin processing without {0} handler set..
        /// </summary>
        internal static string CannotStartMessageProcessorWithoutHandler {
            get {
                return ResourceManager.GetString("CannotStartMessageProcessorWithoutHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; contains character &apos;{1}&apos; which is not allowed because it is reserved in the Uri scheme..
        /// </summary>
        internal static string CharacterReservedForUriScheme {
            get {
                return ResourceManager.GetString("CharacterReservedForUriScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has already been closed and cannot perform the requested operation..
        /// </summary>
        internal static string ClosedInstanceCannotPerformOperation {
            get {
                return ResourceManager.GetString("ClosedInstanceCannotPerformOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to acquire an access token using the provided credential..
        /// </summary>
        internal static string CouldNotAcquireAccessToken {
            get {
                return ResourceManager.GetString("CouldNotAcquireAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create the items needed to communicate with the Service Bus service..
        /// </summary>
        internal static string CouldNotCreateLink {
            get {
                return ResourceManager.GetString("CouldNotCreateLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This request has been blocked because the entity or namespace is being throttled. Please retry the operation, and if condition continues, please slow down your rate of request..
        /// </summary>
        internal static string DefaultServerBusyException {
            get {
                return ResourceManager.GetString("DefaultServerBusyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum back off period &apos;{0}&apos; cannot exceed the maximum back off period of &apos;{1}&apos;..
        /// </summary>
        internal static string ExponentialRetryBackoffRange {
            get {
                return ResourceManager.GetString("ExponentialRetryBackoffRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serialization operation failed due to unsupported type {0}..
        /// </summary>
        internal static string FailedToSerializeUnsupportedType {
            get {
                return ResourceManager.GetString("FailedToSerializeUnsupportedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another handler has already been assigned to this event and there can be only one..
        /// </summary>
        internal static string HandlerHasAlreadyBeenAssigned {
            get {
                return ResourceManager.GetString("HandlerHasAlreadyBeenAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This handler has not been previously assigned to this event..
        /// </summary>
        internal static string HandlerHasNotBeenAssigned {
            get {
                return ResourceManager.GetString("HandlerHasNotBeenAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a supported body type..
        /// </summary>
        internal static string InvalidAmqpMessageBodyType {
            get {
                return ResourceManager.GetString("InvalidAmqpMessageBodyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a supported user property type..
        /// </summary>
        internal static string InvalidAmqpMessageProperty {
            get {
                return ResourceManager.GetString("InvalidAmqpMessageProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a supported value body type..
        /// </summary>
        internal static string InvalidAmqpMessageValueBody {
            get {
                return ResourceManager.GetString("InvalidAmqpMessageValueBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity name or path contains an invalid character &apos;{0}&apos;. The supplied value is &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidCharacterInEntityName {
            get {
                return ResourceManager.GetString("InvalidCharacterInEntityName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string could not be parsed; either it was malformed or contains no well-known tokens..
        /// </summary>
        internal static string InvalidConnectionString {
            get {
                return ResourceManager.GetString("InvalidConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string has an invalid encoding format..
        /// </summary>
        internal static string InvalidEncoding {
            get {
                return ResourceManager.GetString("InvalidEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint address could not be parsed; it was either malformed or not using the `sb://` scheme..
        /// </summary>
        internal static string InvalidEndpointAddress {
            get {
                return ResourceManager.GetString("InvalidEndpointAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a well-formed Service Bus fully qualified namespace..
        /// </summary>
        internal static string InvalidFullyQualifiedNamespace {
            get {
                return ResourceManager.GetString("InvalidFullyQualifiedNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shared access signature could not be parsed; it was either malformed or incorrectly encoded..
        /// </summary>
        internal static string InvalidSharedAccessSignature {
            get {
                return ResourceManager.GetString("InvalidSharedAccessSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested transport type, &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string InvalidTransportType {
            get {
                return ResourceManager.GetString("InvalidTransportType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of lock tokens cannot be empty.
        /// </summary>
        internal static string ListOfLockTokensCannotBeEmpty {
            get {
                return ResourceManager.GetString("ListOfLockTokensCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum permitted length of {0} was exceeded..
        /// </summary>
        internal static string MaxPermittedLengthExceeded {
            get {
                return ResourceManager.GetString("MaxPermittedLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message batch is currently being used in communication with the Service Bus service; messages may not be added until the active operation is complete..
        /// </summary>
        internal static string MessageBatchIsLocked {
            get {
                return ResourceManager.GetString("MessageBatchIsLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A message handler has already been registered..
        /// </summary>
        internal static string MessageHandlerAlreadyRegistered {
            get {
                return ResourceManager.GetString("MessageHandlerAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lock supplied is invalid. Either the lock expired, or the message has already been removed from the queue, or was received by a different receiver instance..
        /// </summary>
        internal static string MessageLockLost {
            get {
                return ResourceManager.GetString("MessageLockLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message processor is not currently running. It needs to be started before it can be stopped..
        /// </summary>
        internal static string MessageProcessorIsNotRunning {
            get {
                return ResourceManager.GetString("MessageProcessorIsNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message (id:{0}, size:{1} bytes) is larger than is currently allowed ({2} bytes)..
        /// </summary>
        internal static string MessageSizeExceeded {
            get {
                return ResourceManager.GetString("MessageSizeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string used for an Service Bus client must specify the Service Bus namespace host and either a Shared Access Key (both the name and value) OR a Shared Access Signature to be valid..
        /// </summary>
        internal static string MissingConnectionInformation {
            get {
                return ResourceManager.GetString("MissingConnectionInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a supported type..
        /// </summary>
        internal static string NotSupportedPropertyType {
            get {
                return ResourceManager.GetString("NotSupportedPropertyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queue or topic name provided does not match the EntityPath in the connection string passed to the ServiceBusClient constructor..
        /// </summary>
        internal static string OnlyOneEntityNameMayBeSpecified {
            get {
                return ResourceManager.GetString("OnlyOneEntityNameMayBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authorization for a connection string may specifiy a shared key or precomputed shared access signature, but not both.  Please verify that your connection string does not have the `SharedAccessSignature` token if you are passing the `SharedKeyName` and `SharedKey`..
        /// </summary>
        internal static string OnlyOneSharedAccessAuthorizationMayBeSpecified {
            get {
                return ResourceManager.GetString("OnlyOneSharedAccessAuthorizationMayBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is only supported in &apos;PeekLock&apos; receive mode..
        /// </summary>
        internal static string OperationNotSupported {
            get {
                return ResourceManager.GetString("OperationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported for peeked messages. Only messages received in PeekLock mode can be settled..
        /// </summary>
        internal static string PeekLockModeRequired {
            get {
                return ResourceManager.GetString("PeekLockModeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} plugin has already been registered..
        /// </summary>
        internal static string PluginAlreadyRegistered {
            get {
                return ResourceManager.GetString("PluginAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A proxy may only be used for a web sockets connection..
        /// </summary>
        internal static string ProxyMustUseWebSockets {
            get {
                return ResourceManager.GetString("ProxyMustUseWebSockets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided rule filter {0} is not supported. Supported values are: {1}, {2}.
        /// </summary>
        internal static string RuleFilterNotSupported {
            get {
                return ResourceManager.GetString("RuleFilterNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message processor is already running and needs to be stopped in order to perform this operation..
        /// </summary>
        internal static string RunningMessageProcessorCannotPerformOperation {
            get {
                return ResourceManager.GetString("RunningMessageProcessorCannotPerformOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When sending via a different entity, an entity path is not allowed to specified in the connection string..
        /// </summary>
        internal static string SendViaCannotBeUsedWithEntityInConnectionString {
            get {
                return ResourceManager.GetString("SendViaCannotBeUsedWithEntityInConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retreive session filter from broker. Please retry..
        /// </summary>
        internal static string SessionFilterMissing {
            get {
                return ResourceManager.GetString("SessionFilterMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A session handler has already been registered..
        /// </summary>
        internal static string SessionHandlerAlreadyRegistered {
            get {
                return ResourceManager.GetString("SessionHandlerAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session lock was lost. Request a new session receiver..
        /// </summary>
        internal static string SessionLockExpiredOnMessageSession {
            get {
                return ResourceManager.GetString("SessionLockExpiredOnMessageSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to update the signature, a shared access key must have been provided when the shared access signature was created..
        /// </summary>
        internal static string SharedAccessKeyIsRequired {
            get {
                return ResourceManager.GetString("SharedAccessKeyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A shared key credential is unable to generate a token directly. Please use this credential when creating an Service Bus entity Client, for proper generation of shared key tokens..
        /// </summary>
        internal static string SharedKeyCredentialCannotGenerateTokens {
            get {
                return ResourceManager.GetString("SharedKeyCredentialCannotGenerateTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the filter statement is {0}, which exceeds the maximum length of {1}.
        /// </summary>
        internal static string SqlRuleFilterStatmentTooLong {
            get {
                return ResourceManager.GetString("SqlRuleFilterStatmentTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be a non-negative timeout value. The provided value was {1}..
        /// </summary>
        internal static string TimeoutMustBeNonNegative {
            get {
                return ResourceManager.GetString("TimeoutMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be a positive timeout value. The provided value was {1}..
        /// </summary>
        internal static string TimeoutMustBePositive {
            get {
                return ResourceManager.GetString("TimeoutMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be a positive non-zero timeout value. The provided value was {1}..
        /// </summary>
        internal static string TimeoutMustBePositiveNonZero {
            get {
                return ResourceManager.GetString("TimeoutMustBePositiveNonZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided token does not specify the &apos;Audience&apos; value..
        /// </summary>
        internal static string TokenMissingAudience {
            get {
                return ResourceManager.GetString("TokenMissingAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided token does not specify the &apos;ExpiresOn&apos; value..
        /// </summary>
        internal static string TokenMissingExpiresOn {
            get {
                return ResourceManager.GetString("TokenMissingExpiresOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified connection type, &quot;{0}&quot;, is not recognized as valid in this context..
        /// </summary>
        internal static string UnknownConnectionType {
            get {
                return ResourceManager.GetString("UnknownConnectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested retry mode, &apos;{0}&apos;, is not known; a retry delay canot be determined..
        /// </summary>
        internal static string UnknownRetryMode {
            get {
                return ResourceManager.GetString("UnknownRetryMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The credential provided is not a supported type..
        /// </summary>
        internal static string UnsupportedCredential {
            get {
                return ResourceManager.GetString("UnsupportedCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested transport event type, &apos;{0}&apos;, is not supported by the active transport client..
        /// </summary>
        internal static string UnsupportedTransportEventType {
            get {
                return ResourceManager.GetString("UnsupportedTransportEventType", resourceCulture);
            }
        }
    }
}
