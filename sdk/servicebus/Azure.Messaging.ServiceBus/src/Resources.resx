<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmqpFieldSessionId" xml:space="preserve">
    <value>Failed to retreive session ID from broker. Please retry.</value>
  </data>
  <data name="AmqpMessageSizeExceeded" xml:space="preserve">
    <value>The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link.</value>
  </data>
  <data name="ArgumentNullOrWhiteSpace" xml:space="preserve">
    <value>The argument {0} is null or white space.</value>
  </data>
  <data name="ArgumentStringTooBig" xml:space="preserve">
    <value>The argument '{0}' cannot exceed {1} characters.</value>
  </data>
  <data name="BrokeredMessageListIsNullOrEmpty" xml:space="preserve">
    <value>There are no brokeredMessages supplied. Please make sure input messages are not empty.</value>
  </data>
  <data name="CannotSendAnEmptyMessage" xml:space="preserve">
    <value>Sending empty {0} is not a valid operation.</value>
  </data>
  <data name="FailedToSerializeUnsupportedType" xml:space="preserve">
    <value>Serialization operation failed due to unsupported type {0}.</value>
  </data>
  <data name="InvalidEncoding" xml:space="preserve">
    <value>The string has an invalid encoding format.</value>
  </data>
  <data name="MessageLockLost" xml:space="preserve">
    <value>The lock supplied is invalid. Either the lock expired, or the message has already been removed from the queue, or was received by a different receiver instance.</value>
  </data>
  <data name="SessionLockExpiredOnMessageSession" xml:space="preserve">
    <value>The session lock was lost. Request a new session receiver.</value>
  </data>
  <data name="TimeoutMustBeNonNegative" xml:space="preserve">
    <value>Argument {0} must be a non-negative timeout value. The provided value was {1}.</value>
  </data>
  <data name="TimeoutMustBePositive" xml:space="preserve">
    <value>Argument {0} must be a positive timeout value. The provided value was {1}.</value>
  </data>
  <data name="TokenMissingAudience" xml:space="preserve">
    <value>The provided token does not specify the 'Audience' value.</value>
  </data>
  <data name="TokenMissingExpiresOn" xml:space="preserve">
    <value>The provided token does not specify the 'ExpiresOn' value.</value>
  </data>
  <data name="ListOfLockTokensCannotBeEmpty" xml:space="preserve">
    <value>List of lock tokens cannot be empty</value>
  </data>
  <data name="NotSupportedPropertyType" xml:space="preserve">
    <value>'{0}' is not a supported type.</value>
  </data>
  <data name="SqlRuleFilterStatmentTooLong" xml:space="preserve">
    <value>The length of the filter statement is {0}, which exceeds the maximum length of {1}</value>
  </data>
  <data name="CharacterReservedForUriScheme" xml:space="preserve">
    <value>'{0}' contains character '{1}' which is not allowed because it is reserved in the Uri scheme.</value>
  </data>
  <data name="InvalidCharacterInEntityName" xml:space="preserve">
    <value>The entity name or path contains an invalid character '{0}'. The supplied value is '{1}'.</value>
  </data>
  <data name="RuleFilterNotSupported" xml:space="preserve">
    <value>Provided rule filter {0} is not supported. Supported values are: {1}, {2}</value>
  </data>
  <data name="PeekLockModeRequired" xml:space="preserve">
    <value>This operation is not supported for peeked messages. Only messages received in PeekLock mode can be settled.</value>
  </data>
  <data name="MessageHandlerAlreadyRegistered" xml:space="preserve">
    <value>A message handler has already been registered.</value>
  </data>
  <data name="SessionHandlerAlreadyRegistered" xml:space="preserve">
    <value>A session handler has already been registered.</value>
  </data>
  <data name="DefaultServerBusyException" xml:space="preserve">
    <value>This request has been blocked because the entity or namespace is being throttled. Please retry the operation, and if condition continues, please slow down your rate of request.</value>
  </data>
  <data name="ExponentialRetryBackoffRange" xml:space="preserve">
    <value>The minimum back off period '{0}' cannot exceed the maximum back off period of '{1}'.</value>
  </data>
  <data name="ArgumentMustBePositive" xml:space="preserve">
    <value>The value of the argument {0} must be positive.</value>
  </data>
  <data name="InvalidAmqpMessageProperty" xml:space="preserve">
    <value>{0} is not a supported user property type.</value>
  </data>
  <data name="PluginAlreadyRegistered" xml:space="preserve">
    <value>The {0} plugin has already been registered.</value>
  </data>
  <data name="SessionFilterMissing" xml:space="preserve">
    <value>Failed to retreive session filter from broker. Please retry.</value>
  </data>
  <data name="TimeoutMustBePositiveNonZero" xml:space="preserve">
    <value>Argument {0} must be a positive non-zero timeout value. The provided value was {1}.</value>
  </data>
  <data name="ArgumentInvalidCombination" xml:space="preserve">
    <value>The following arguments must all be provided or none at all: {0}.</value>
  </data>
  <data name="CannotRegisterNonSessionEventHandlerWhenUsingSession" xml:space="preserve">
    <value>When using a sessionful entity, the Session event handler must be used.</value>
  </data>
  <data name="CannotRegisterSessionEventHandlerWhenNotUsingSessions" xml:space="preserve">
    <value>When not using a sessionful entity, the non-session event handler must be used.</value>
  </data>
  <data name="CannotLockMessageOnSessionEntity" xml:space="preserve">
    <value>Messages cannot be locked when working with session-enabled entities. Locks are handled at the session level.</value>
  </data>
  <data name="CannotStartMessageProcessorWithoutHandler" xml:space="preserve">
    <value>Cannot begin processing without {0} handler set.</value>
  </data>
  <data name="ClosedInstanceCannotPerformOperation" xml:space="preserve">
    <value>{0} has already been closed and cannot perform the requested operation.</value>
  </data>
  <data name="CouldNotAcquireAccessToken" xml:space="preserve">
    <value>Unable to acquire an access token using the provided credential.</value>
  </data>
  <data name="CouldNotCreateLink" xml:space="preserve">
    <value>Unable to create the items needed to communicate with the Service Bus service.</value>
  </data>
  <data name="HandlerHasAlreadyBeenAssigned" xml:space="preserve">
    <value>Another handler has already been assigned to this event and there can be only one.</value>
  </data>
  <data name="HandlerHasNotBeenAssigned" xml:space="preserve">
    <value>This handler has not been previously assigned to this event.</value>
  </data>
  <data name="InvalidConnectionString" xml:space="preserve">
    <value>The connection string could not be parsed; either it was malformed or contains no well-known tokens.</value>
  </data>
  <data name="InvalidFullyQualifiedNamespace" xml:space="preserve">
    <value>The value '{0}' is not a well-formed Service Bus fully qualified namespace.</value>
  </data>
  <data name="InvalidSharedAccessSignature" xml:space="preserve">
    <value>The shared access signature could not be parsed; it was either malformed or incorrectly encoded.</value>
  </data>
  <data name="InvalidTransportType" xml:space="preserve">
    <value>The requested transport type, '{0}' is not supported.</value>
  </data>
  <data name="MaxPermittedLengthExceeded" xml:space="preserve">
    <value>The maximum permitted length of {0} was exceeded.</value>
  </data>
  <data name="MessageSizeExceeded" xml:space="preserve">
    <value>The message (id:{0}, size:{1} bytes) is larger than is currently allowed ({2} bytes).</value>
  </data>
  <data name="MissingConnectionInformation" xml:space="preserve">
    <value>The connection string used for an Service Bus client must specify the Service Bus namespace host and either a Shared Access Key (both the name and value) OR a Shared Access Signature to be valid.</value>
  </data>
  <data name="OnlyOneEntityNameMayBeSpecified" xml:space="preserve">
    <value>The queue or topic name provided does not match the EntityPath in the connection string passed to the ServiceBusClient constructor.</value>
  </data>
  <data name="OperationNotSupported" xml:space="preserve">
    <value>The operation is only supported in 'PeekLock' receive mode.</value>
  </data>
  <data name="ProxyMustUseWebSockets" xml:space="preserve">
    <value>A proxy may only be used for a web sockets connection.</value>
  </data>
  <data name="RunningMessageProcessorCannotPerformOperation" xml:space="preserve">
    <value>The message processor is already running and needs to be stopped in order to perform this operation.</value>
  </data>
  <data name="SharedAccessKeyIsRequired" xml:space="preserve">
    <value>In order to update the signature, a shared access key must have been provided when the shared access signature was created.</value>
  </data>
  <data name="SharedKeyCredentialCannotGenerateTokens" xml:space="preserve">
    <value>A shared key credential is unable to generate a token directly. Please use this credential when creating an Service Bus entity Client, for proper generation of shared key tokens.</value>
  </data>
  <data name="UnknownConnectionType" xml:space="preserve">
    <value>The specified connection type, "{0}", is not recognized as valid in this context.</value>
  </data>
  <data name="UnknownRetryMode" xml:space="preserve">
    <value>The requested retry mode, '{0}', is not known; a retry delay canot be determined.</value>
  </data>
  <data name="UnsupportedTransportEventType" xml:space="preserve">
    <value>The requested transport event type, '{0}', is not supported by the active transport client.</value>
  </data>
  <data name="MessageBatchIsLocked" xml:space="preserve">
    <value>The message batch is currently being used in communication with the Service Bus service; messages may not be added until the active operation is complete.</value>
  </data>
  <data name="SendViaCannotBeUsedWithEntityInConnectionString" xml:space="preserve">
    <value>When sending via a different entity, an entity path is not allowed to specified in the connection string.</value>
  </data>
  <data name="MessageProcessorIsNotRunning" xml:space="preserve">
    <value>The message processor is not currently running. It needs to be started before it can be stopped.</value>
  </data>
  <data name="OnlyOneSharedAccessAuthorizationMayBeSpecified" xml:space="preserve">
    <value>The authorization for a connection string may specifiy a shared key or precomputed shared access signature, but not both.  Please verify that your connection string does not have the `SharedAccessSignature` token if you are passing the `SharedKeyName` and `SharedKey`.</value>
  </data>
  <data name="InvalidEndpointAddress" xml:space="preserve">
    <value>The endpoint address could not be parsed; it was either malformed or not using the `sb://` scheme.</value>
  </data>
  <data name="UnsupportedCredential" xml:space="preserve">
    <value>The credential provided is not a supported type.</value>
  </data>
</root>