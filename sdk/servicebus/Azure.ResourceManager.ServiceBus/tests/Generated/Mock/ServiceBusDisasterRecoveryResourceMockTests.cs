// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusDisasterRecoveryResource. </summary>
    public partial class ServiceBusDisasterRecoveryResourceMockTests : MockTestBase
    {
        public ServiceBusDisasterRecoveryResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task BreakPairing()
        {
            // Example: SBEHAliasBreakPairing

            var serviceBusDisasterRecoveryResourceId = ServiceBus.ServiceBusDisasterRecoveryResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ardsouzatestRG", "sdk-Namespace-8860", "sdk-DisasterRecovery-3814");
            var serviceBusDisasterRecoveryResource = GetArmClient().GetServiceBusDisasterRecoveryResource(serviceBusDisasterRecoveryResourceId);
            await serviceBusDisasterRecoveryResource.BreakPairingAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: SBAliasDelete

            var serviceBusDisasterRecoveryResourceId = ServiceBus.ServiceBusDisasterRecoveryResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SouthCentralUS", "sdk-Namespace-8860", "sdk-DisasterRecovery-3814");
            var serviceBusDisasterRecoveryResource = GetArmClient().GetServiceBusDisasterRecoveryResource(serviceBusDisasterRecoveryResourceId);
            await serviceBusDisasterRecoveryResource.DeleteAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task FailOver()
        {
            // Example: SBAliasFailOver

            var serviceBusDisasterRecoveryResourceId = ServiceBus.ServiceBusDisasterRecoveryResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ardsouzatestRG", "sdk-Namespace-8860", "sdk-DisasterRecovery-3814");
            var serviceBusDisasterRecoveryResource = GetArmClient().GetServiceBusDisasterRecoveryResource(serviceBusDisasterRecoveryResourceId);
            await serviceBusDisasterRecoveryResource.FailOverAsync();
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: SBAliasGet

            var serviceBusDisasterRecoveryResourceId = ServiceBus.ServiceBusDisasterRecoveryResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ardsouzatestRG", "sdk-Namespace-8860", "sdk-DisasterRecovery-3814");
            var serviceBusDisasterRecoveryResource = GetArmClient().GetServiceBusDisasterRecoveryResource(serviceBusDisasterRecoveryResourceId);
            await serviceBusDisasterRecoveryResource.GetAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: SBAliasCreate

            var serviceBusDisasterRecoveryResourceId = ServiceBus.ServiceBusDisasterRecoveryResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ardsouzatestRG", "sdk-Namespace-8860", "sdk-Namespace-8860");
            var serviceBusDisasterRecoveryResource = GetArmClient().GetServiceBusDisasterRecoveryResource(serviceBusDisasterRecoveryResourceId);
            await serviceBusDisasterRecoveryResource.UpdateAsync(WaitUntil.Completed, new ServiceBusDisasterRecoveryData()
            {
                PartnerNamespace = "sdk-Namespace-37",
                AlternateName = "alternameforAlias-Namespace-8860",
            });
        }
    }
}
