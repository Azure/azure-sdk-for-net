// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusNamespaceResource. </summary>
    public partial class ServiceBusNamespaceResourceMockTests : MockTestBase
    {
        public ServiceBusNamespaceResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CheckServiceBusDisasterRecoveryNameAvailability()
        {
            // Example: AliasNameAvailability

            var serviceBusNamespaceResourceId = ServiceBus.ServiceBusNamespaceResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "sdk-Namespace-9080");
            var serviceBusNamespaceResource = GetArmClient().GetServiceBusNamespaceResource(serviceBusNamespaceResourceId);
            await serviceBusNamespaceResource.CheckServiceBusDisasterRecoveryNameAvailabilityAsync(new ServiceBusNameAvailabilityContent("sdk-DisasterRecovery-9474"));
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: NameSpaceDelete

            var serviceBusNamespaceResourceId = ServiceBus.ServiceBusNamespaceResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-3285");
            var serviceBusNamespaceResource = GetArmClient().GetServiceBusNamespaceResource(serviceBusNamespaceResourceId);
            await serviceBusNamespaceResource.DeleteAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: NameSpaceGet

            var serviceBusNamespaceResourceId = ServiceBus.ServiceBusNamespaceResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-2924");
            var serviceBusNamespaceResource = GetArmClient().GetServiceBusNamespaceResource(serviceBusNamespaceResourceId);
            await serviceBusNamespaceResource.GetAsync();
        }

        [RecordedTest]
        public async Task GetPrivateLinkResources()
        {
            // Example: NameSpacePrivateLinkResourcesGet

            var serviceBusNamespaceResourceId = ServiceBus.ServiceBusNamespaceResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-2924");
            var serviceBusNamespaceResource = GetArmClient().GetServiceBusNamespaceResource(serviceBusNamespaceResourceId);
            await foreach (var _ in serviceBusNamespaceResource.GetPrivateLinkResourcesAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetServiceBusNamespaces()
        {
            // Example: NameSpaceList

            var subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000");
            var subscriptionResource = GetArmClient().GetSubscriptionResource(subscriptionResourceId);
            await foreach (var _ in subscriptionResource.GetServiceBusNamespacesAsync())
            {
            }
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: NameSpaceUpdate

            var serviceBusNamespaceResourceId = ServiceBus.ServiceBusNamespaceResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-3285");
            var serviceBusNamespaceResource = GetArmClient().GetServiceBusNamespaceResource(serviceBusNamespaceResourceId);
            await serviceBusNamespaceResource.UpdateAsync(new ServiceBusNamespacePatch(new AzureLocation("South Central US"))
            {
                Tags =
{
["tag3"] = "value3",
["tag4"] = "value4",
},
            });
        }
    }
}
