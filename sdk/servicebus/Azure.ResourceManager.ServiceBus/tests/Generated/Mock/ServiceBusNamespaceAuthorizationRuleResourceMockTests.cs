// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusNamespaceAuthorizationRuleResource. </summary>
    public partial class ServiceBusNamespaceAuthorizationRuleResourceMockTests : MockTestBase
    {
        public ServiceBusNamespaceAuthorizationRuleResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: NameSpaceAuthorizationRuleDelete

            var serviceBusNamespaceAuthorizationRuleResourceId = ServiceBus.ServiceBusNamespaceAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-namespace-6914", "sdk-AuthRules-1788");
            var serviceBusNamespaceAuthorizationRuleResource = GetArmClient().GetServiceBusNamespaceAuthorizationRuleResource(serviceBusNamespaceAuthorizationRuleResourceId);
            await serviceBusNamespaceAuthorizationRuleResource.DeleteAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: NameSpaceAuthorizationRuleGet

            var serviceBusNamespaceAuthorizationRuleResourceId = ServiceBus.ServiceBusNamespaceAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-6914", "sdk-AuthRules-1788");
            var serviceBusNamespaceAuthorizationRuleResource = GetArmClient().GetServiceBusNamespaceAuthorizationRuleResource(serviceBusNamespaceAuthorizationRuleResourceId);
            await serviceBusNamespaceAuthorizationRuleResource.GetAsync();
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: NameSpaceAuthorizationRuleListKey

            var serviceBusNamespaceAuthorizationRuleResourceId = ServiceBus.ServiceBusNamespaceAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-namespace-6914", "sdk-AuthRules-1788");
            var serviceBusNamespaceAuthorizationRuleResource = GetArmClient().GetServiceBusNamespaceAuthorizationRuleResource(serviceBusNamespaceAuthorizationRuleResourceId);
            await serviceBusNamespaceAuthorizationRuleResource.GetKeysAsync();
        }

        [RecordedTest]
        public async Task RegenerateKeys()
        {
            // Example: NameSpaceAuthorizationRuleRegenerateKey

            var serviceBusNamespaceAuthorizationRuleResourceId = ServiceBus.ServiceBusNamespaceAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-namespace-6914", "sdk-AuthRules-1788");
            var serviceBusNamespaceAuthorizationRuleResource = GetArmClient().GetServiceBusNamespaceAuthorizationRuleResource(serviceBusNamespaceAuthorizationRuleResourceId);
            await serviceBusNamespaceAuthorizationRuleResource.RegenerateKeysAsync(new ServiceBusRegenerateAccessKeyContent(ServiceBusAccessKeyType.PrimaryKey));
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: NameSpaceAuthorizationRuleCreate

            var serviceBusNamespaceAuthorizationRuleResourceId = ServiceBus.ServiceBusNamespaceAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-6914", "sdk-AuthRules-1788");
            var serviceBusNamespaceAuthorizationRuleResource = GetArmClient().GetServiceBusNamespaceAuthorizationRuleResource(serviceBusNamespaceAuthorizationRuleResourceId);
            await serviceBusNamespaceAuthorizationRuleResource.UpdateAsync(WaitUntil.Completed, new ServiceBusAuthorizationRuleData()
            {
                Rights =
{
ServiceBusAccessRight.Listen,ServiceBusAccessRight.Send
},
            });
        }
    }
}
