// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for MigrationConfigurationResource. </summary>
    public partial class MigrationConfigurationResourceMockTests : MockTestBase
    {
        public MigrationConfigurationResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CompleteMigration()
        {
            // Example: MigrationConfigurationsCompleteMigration

            var migrationConfigurationResourceId = ServiceBus.MigrationConfigurationResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "sdk-Namespace-41", "$default");
            var migrationConfigurationResource = GetArmClient().GetMigrationConfigurationResource(migrationConfigurationResourceId);
            await migrationConfigurationResource.CompleteMigrationAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: MigrationConfigurationsDelete

            var migrationConfigurationResourceId = ServiceBus.MigrationConfigurationResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "sdk-Namespace-41", "$default");
            var migrationConfigurationResource = GetArmClient().GetMigrationConfigurationResource(migrationConfigurationResourceId);
            await migrationConfigurationResource.DeleteAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: MigrationConfigurationsGet

            var migrationConfigurationResourceId = ServiceBus.MigrationConfigurationResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "sdk-Namespace-41", "$default");
            var migrationConfigurationResource = GetArmClient().GetMigrationConfigurationResource(migrationConfigurationResourceId);
            await migrationConfigurationResource.GetAsync();
        }

        [RecordedTest]
        public async Task Revert()
        {
            // Example: MigrationConfigurationsRevert

            var migrationConfigurationResourceId = ServiceBus.MigrationConfigurationResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "sdk-Namespace-41", "$default");
            var migrationConfigurationResource = GetArmClient().GetMigrationConfigurationResource(migrationConfigurationResourceId);
            await migrationConfigurationResource.RevertAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: MigrationConfigurationsStartMigration

            var migrationConfigurationResourceId = ServiceBus.MigrationConfigurationResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "sdk-Namespace-41", "$default");
            var migrationConfigurationResource = GetArmClient().GetMigrationConfigurationResource(migrationConfigurationResourceId);
            await migrationConfigurationResource.UpdateAsync(WaitUntil.Completed, new MigrationConfigurationData()
            {
                TargetServiceBusNamespace = new ResourceIdentifier("/subscriptions/SubscriptionId/resourceGroups/ResourceGroup/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-4028"),
                PostMigrationName = "sdk-PostMigration-5919",
            });
        }
    }
}
