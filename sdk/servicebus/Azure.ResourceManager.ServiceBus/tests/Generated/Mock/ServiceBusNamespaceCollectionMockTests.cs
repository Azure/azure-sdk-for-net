// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusNamespaceCollection. </summary>
    public partial class ServiceBusNamespaceCollectionMockTests : MockTestBase
    {
        public ServiceBusNamespaceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: NameSpaceCreate

            var resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle");
            var resourceGroupResource = GetArmClient().GetResourceGroupResource(resourceGroupResourceId);
            var collection = resourceGroupResource.GetServiceBusNamespaces();
            await collection.CreateOrUpdateAsync(WaitUntil.Completed, "sdk-Namespace2924", new ServiceBusNamespaceData(new AzureLocation("South Central US"))
            {
                Sku = new ServiceBusSku(ServiceBusSkuName.Standard)
                {
                    Tier = ServiceBusSkuTier.Standard,
                },
                Tags =
{
["tag1"] = "value1",
["tag2"] = "value2",
},
            });
        }

        [RecordedTest]
        public async Task Exists()
        {
            // Example: NameSpaceGet

            var resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle");
            var resourceGroupResource = GetArmClient().GetResourceGroupResource(resourceGroupResourceId);
            var collection = resourceGroupResource.GetServiceBusNamespaces();
            await collection.ExistsAsync("sdk-Namespace-2924");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: NameSpaceGet

            var resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle");
            var resourceGroupResource = GetArmClient().GetResourceGroupResource(resourceGroupResourceId);
            var collection = resourceGroupResource.GetServiceBusNamespaces();
            await collection.GetAsync("sdk-Namespace-2924");
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: NameSpaceListByResourceGroup

            var resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle");
            var resourceGroupResource = GetArmClient().GetResourceGroupResource(resourceGroupResourceId);
            var collection = resourceGroupResource.GetServiceBusNamespaces();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}
