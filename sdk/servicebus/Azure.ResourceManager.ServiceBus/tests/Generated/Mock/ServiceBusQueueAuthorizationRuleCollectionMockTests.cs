// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusQueueAuthorizationRuleCollection. </summary>
    public partial class ServiceBusQueueAuthorizationRuleCollectionMockTests : MockTestBase
    {
        public ServiceBusQueueAuthorizationRuleCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: QueueAuthorizationRuleCreate

            var serviceBusQueueResourceId = ServiceBus.ServiceBusQueueResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-7982", "sdk-Queues-2317");
            var serviceBusQueueResource = GetArmClient().GetServiceBusQueueResource(serviceBusQueueResourceId);
            var collection = serviceBusQueueResource.GetServiceBusQueueAuthorizationRules();
            await collection.CreateOrUpdateAsync(WaitUntil.Completed, "sdk-AuthRules-5800", new ServiceBusAuthorizationRuleData()
            {
                Rights =
{
ServiceBusAccessRight.Listen,ServiceBusAccessRight.Send
},
            });
        }

        [RecordedTest]
        public async Task Exists()
        {
            // Example: QueueAuthorizationRuleGet

            var serviceBusQueueResourceId = ServiceBus.ServiceBusQueueResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-7982", "sdk-Queues-2317");
            var serviceBusQueueResource = GetArmClient().GetServiceBusQueueResource(serviceBusQueueResourceId);
            var collection = serviceBusQueueResource.GetServiceBusQueueAuthorizationRules();
            await collection.ExistsAsync("sdk-AuthRules-5800");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: QueueAuthorizationRuleGet

            var serviceBusQueueResourceId = ServiceBus.ServiceBusQueueResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-7982", "sdk-Queues-2317");
            var serviceBusQueueResource = GetArmClient().GetServiceBusQueueResource(serviceBusQueueResourceId);
            var collection = serviceBusQueueResource.GetServiceBusQueueAuthorizationRules();
            await collection.GetAsync("sdk-AuthRules-5800");
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: QueueAuthorizationRuleListAll

            var serviceBusQueueResourceId = ServiceBus.ServiceBusQueueResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-7982", "sdk-Queues-2317");
            var serviceBusQueueResource = GetArmClient().GetServiceBusQueueResource(serviceBusQueueResourceId);
            var collection = serviceBusQueueResource.GetServiceBusQueueAuthorizationRules();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}
