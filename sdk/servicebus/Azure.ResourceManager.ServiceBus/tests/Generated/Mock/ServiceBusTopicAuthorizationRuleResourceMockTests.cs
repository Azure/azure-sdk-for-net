// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusTopicAuthorizationRuleResource. </summary>
    public partial class ServiceBusTopicAuthorizationRuleResourceMockTests : MockTestBase
    {
        public ServiceBusTopicAuthorizationRuleResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: TopicAuthorizationRuleDelete

            var serviceBusTopicAuthorizationRuleResourceId = ServiceBus.ServiceBusTopicAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-6261", "sdk-Topics-1984", "sdk-AuthRules-4310");
            var serviceBusTopicAuthorizationRuleResource = GetArmClient().GetServiceBusTopicAuthorizationRuleResource(serviceBusTopicAuthorizationRuleResourceId);
            await serviceBusTopicAuthorizationRuleResource.DeleteAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: TopicAuthorizationRuleGet

            var serviceBusTopicAuthorizationRuleResourceId = ServiceBus.ServiceBusTopicAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-6261", "sdk-Topics-1984", "sdk-AuthRules-4310");
            var serviceBusTopicAuthorizationRuleResource = GetArmClient().GetServiceBusTopicAuthorizationRuleResource(serviceBusTopicAuthorizationRuleResourceId);
            await serviceBusTopicAuthorizationRuleResource.GetAsync();
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: TopicAuthorizationRuleListKey

            var serviceBusTopicAuthorizationRuleResourceId = ServiceBus.ServiceBusTopicAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-ServiceBus-WestUS", "sdk-Namespace8408", "sdk-Topics2075", "sdk-Authrules5067");
            var serviceBusTopicAuthorizationRuleResource = GetArmClient().GetServiceBusTopicAuthorizationRuleResource(serviceBusTopicAuthorizationRuleResourceId);
            await serviceBusTopicAuthorizationRuleResource.GetKeysAsync();
        }

        [RecordedTest]
        public async Task RegenerateKeys()
        {
            // Example: TopicAuthorizationRuleRegenerateKey

            var serviceBusTopicAuthorizationRuleResourceId = ServiceBus.ServiceBusTopicAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-ServiceBus-WestUS", "sdk-Namespace8408", "sdk-Topics2075", "sdk-Authrules5067");
            var serviceBusTopicAuthorizationRuleResource = GetArmClient().GetServiceBusTopicAuthorizationRuleResource(serviceBusTopicAuthorizationRuleResourceId);
            await serviceBusTopicAuthorizationRuleResource.RegenerateKeysAsync(new ServiceBusRegenerateAccessKeyContent(ServiceBusAccessKeyType.PrimaryKey));
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: TopicAuthorizationRuleCreate

            var serviceBusTopicAuthorizationRuleResourceId = ServiceBus.ServiceBusTopicAuthorizationRuleResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-6261", "sdk-Topics-1984", "sdk-AuthRules-4310");
            var serviceBusTopicAuthorizationRuleResource = GetArmClient().GetServiceBusTopicAuthorizationRuleResource(serviceBusTopicAuthorizationRuleResourceId);
            await serviceBusTopicAuthorizationRuleResource.UpdateAsync(WaitUntil.Completed, new ServiceBusAuthorizationRuleData()
            {
                Rights =
{
ServiceBusAccessRight.Listen,ServiceBusAccessRight.Send
},
            });
        }
    }
}
