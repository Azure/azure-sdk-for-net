// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ServiceBus.Models
{
    /// <summary> Description of a Check Name availability request properties. </summary>
    public partial class ServiceBusNameAvailabilityResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ServiceBusNameAvailabilityResult"/>. </summary>
        internal ServiceBusNameAvailabilityResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ServiceBusNameAvailabilityResult"/>. </summary>
        /// <param name="message"> The detailed info regarding the reason associated with the namespace. </param>
        /// <param name="isNameAvailable"> Value indicating namespace is availability, true if the namespace is available; otherwise, false. </param>
        /// <param name="reason"> The reason for unavailability of a namespace. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ServiceBusNameAvailabilityResult(string message, bool? isNameAvailable, ServiceBusNameUnavailableReason? reason, Dictionary<string, BinaryData> rawData)
        {
            Message = message;
            IsNameAvailable = isNameAvailable;
            Reason = reason;
            _rawData = rawData;
        }

        /// <summary> The detailed info regarding the reason associated with the namespace. </summary>
        public string Message { get; }
        /// <summary> Value indicating namespace is availability, true if the namespace is available; otherwise, false. </summary>
        public bool? IsNameAvailable { get; }
        /// <summary> The reason for unavailability of a namespace. </summary>
        public ServiceBusNameUnavailableReason? Reason { get; }
    }
}
