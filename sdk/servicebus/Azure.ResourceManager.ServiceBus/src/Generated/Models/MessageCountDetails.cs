// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ServiceBus.Models
{
    /// <summary> Message Count Details. </summary>
    public partial class MessageCountDetails
    {
        /// <summary> Initializes a new instance of <see cref="MessageCountDetails"/>. </summary>
        internal MessageCountDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MessageCountDetails"/>. </summary>
        /// <param name="activeMessageCount"> Number of active messages in the queue, topic, or subscription. </param>
        /// <param name="deadLetterMessageCount"> Number of messages that are dead lettered. </param>
        /// <param name="scheduledMessageCount"> Number of scheduled messages. </param>
        /// <param name="transferMessageCount"> Number of messages transferred to another queue, topic, or subscription. </param>
        /// <param name="transferDeadLetterMessageCount"> Number of messages transferred into dead letters. </param>
        internal MessageCountDetails(long? activeMessageCount, long? deadLetterMessageCount, long? scheduledMessageCount, long? transferMessageCount, long? transferDeadLetterMessageCount)
        {
            ActiveMessageCount = activeMessageCount;
            DeadLetterMessageCount = deadLetterMessageCount;
            ScheduledMessageCount = scheduledMessageCount;
            TransferMessageCount = transferMessageCount;
            TransferDeadLetterMessageCount = transferDeadLetterMessageCount;
        }

        /// <summary> Number of active messages in the queue, topic, or subscription. </summary>
        public long? ActiveMessageCount { get; }
        /// <summary> Number of messages that are dead lettered. </summary>
        public long? DeadLetterMessageCount { get; }
        /// <summary> Number of scheduled messages. </summary>
        public long? ScheduledMessageCount { get; }
        /// <summary> Number of messages transferred to another queue, topic, or subscription. </summary>
        public long? TransferMessageCount { get; }
        /// <summary> Number of messages transferred into dead letters. </summary>
        public long? TransferDeadLetterMessageCount { get; }
    }
}
