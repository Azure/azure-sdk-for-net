// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ServiceBus.Models
{
    internal static partial class ServiceBusNameUnavailableReasonExtensions
    {
        public static string ToSerialString(this ServiceBusNameUnavailableReason value) => value switch
        {
            ServiceBusNameUnavailableReason.None => "None",
            ServiceBusNameUnavailableReason.InvalidName => "InvalidName",
            ServiceBusNameUnavailableReason.SubscriptionIsDisabled => "SubscriptionIsDisabled",
            ServiceBusNameUnavailableReason.NameInUse => "NameInUse",
            ServiceBusNameUnavailableReason.NameInLockdown => "NameInLockdown",
            ServiceBusNameUnavailableReason.TooManyNamespaceInCurrentSubscription => "TooManyNamespaceInCurrentSubscription",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ServiceBusNameUnavailableReason value.")
        };

        public static ServiceBusNameUnavailableReason ToServiceBusNameUnavailableReason(this string value)
        {
            if (string.Equals(value, "None", StringComparison.InvariantCultureIgnoreCase)) return ServiceBusNameUnavailableReason.None;
            if (string.Equals(value, "InvalidName", StringComparison.InvariantCultureIgnoreCase)) return ServiceBusNameUnavailableReason.InvalidName;
            if (string.Equals(value, "SubscriptionIsDisabled", StringComparison.InvariantCultureIgnoreCase)) return ServiceBusNameUnavailableReason.SubscriptionIsDisabled;
            if (string.Equals(value, "NameInUse", StringComparison.InvariantCultureIgnoreCase)) return ServiceBusNameUnavailableReason.NameInUse;
            if (string.Equals(value, "NameInLockdown", StringComparison.InvariantCultureIgnoreCase)) return ServiceBusNameUnavailableReason.NameInLockdown;
            if (string.Equals(value, "TooManyNamespaceInCurrentSubscription", StringComparison.InvariantCultureIgnoreCase)) return ServiceBusNameUnavailableReason.TooManyNamespaceInCurrentSubscription;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ServiceBusNameUnavailableReason value.");
        }
    }
}
