{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The subscription ID to which the application and resources belong."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "testApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resources. By default, this is the same as the resource group."
      }
    }
  },
  "variables": {
    "serviceBusNamespace": "[concat('sb-', parameters('baseName'))]",
    "serviceBusSecondaryNamespace": "[concat('sb-secondary-', parameters('baseName'))]",
    "serviceBusPremiumNamespace": "[concat('sb-premium-', parameters('baseName'))]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespace'), variables('defaultSASKeyName'))]",
    "authRuleSecondaryResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusSecondaryNamespace'), variables('defaultSASKeyName'))]",
    "authRulePremiumResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusPremiumNamespace'), variables('defaultSASKeyName'))]",
    "sbVersion": "2017-04-01",
    "contributorRoleId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "serviceBusDataOwnerRoleId": "090c5cfd-751d-490a-894a-3ce6f1109419",
    "storageDataOwnerRoleId": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
    "storageAccount": "[concat('blb', parameters('baseName'))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount'))]",
    "storageMgmtApiVersion": "2019-06-01"
  },
  "resources": [
    {
      "apiVersion": "[variables('sbVersion')]",
      "name": "[variables('serviceBusNamespace')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {}
    },
    {
      "apiVersion": "[variables('sbVersion')]",
      "name": "[variables('serviceBusSecondaryNamespace')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {}
    },
    {
      "apiVersion": "[variables('sbVersion')]",
      "name": "[variables('serviceBusPremiumNamespace')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, parameters('testApplicationOid'), variables('serviceBusDataOwnerRoleId'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/Namespaces', variables('serviceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/Namespaces', variables('serviceBusSecondaryNamespace'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('serviceBusDataOwnerRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, parameters('testApplicationOid'), variables('contributorRoleId'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/Namespaces', variables('serviceBusNamespace'))]",
        "[resourceId('Microsoft.ServiceBus/Namespaces', variables('serviceBusSecondaryNamespace'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[variables('storageAccount')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storageAccount'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, parameters('testApplicationOid'), variables('storageDataOwnerRoleId'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageDataOwnerRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    }
  ],
  "functions": [
    {
      "namespace": "connectionString",
      "members": {
        "create": {
          "parameters": [
            {
              "name": "accountName",
              "type": "string"
            },
            {
              "name": "accountKey",
              "type": "string"
            },
            {
              "name": "blobEndpoint",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('accountName'), ';AccountKey=', parameters('accountKey'), ';BlobEndpoint=', parameters('blobEndpoint'))]"
          }
        }
      }
    }
  ],
  "outputs": {
    "SERVICEBUS_CONNECTION_STRING": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('sbVersion')).primaryConnectionString]"
    },
    "SERVICEBUS_SECONDARY_NAMESPACE_CONNECTION_STRING": {
      "type": "string",
      "value": "[listkeys(variables('authRuleSecondaryResourceId'), variables('sbVersion')).primaryConnectionString]"
    },
    "SERVICEBUS_PREMIUM_NAMESPACE_CONNECTION_STRING": {
      "type": "string",
      "value": "[listkeys(variables('authRulePremiumResourceId'), variables('sbVersion')).primaryConnectionString]"
    },
    "STORAGE_CLAIM_CHECK_CONNECTION_STRING": {
      "type": "string",
      "value": "[connectionString.create(
        variables('storageAccount'),
        listKeys(variables('storageAccountId'), variables('storageMgmtApiVersion')).keys[0].value,
        reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount')), variables('storageMgmtApiVersion')).primaryEndpoints.blob)]"
    }
  }
}