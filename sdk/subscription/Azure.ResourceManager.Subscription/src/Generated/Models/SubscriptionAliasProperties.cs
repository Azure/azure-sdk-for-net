// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Subscription.Models
{
    /// <summary>
    /// Put subscription creation result properties.
    /// Serialized Name: SubscriptionAliasResponseProperties
    /// </summary>
    public partial class SubscriptionAliasProperties
    {
        /// <summary> Initializes a new instance of SubscriptionAliasProperties. </summary>
        internal SubscriptionAliasProperties()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of SubscriptionAliasProperties. </summary>
        /// <param name="subscriptionId">
        /// Newly created subscription Id.
        /// Serialized Name: SubscriptionAliasResponseProperties.subscriptionId
        /// </param>
        /// <param name="displayName">
        /// The display name of the subscription.
        /// Serialized Name: SubscriptionAliasResponseProperties.displayName
        /// </param>
        /// <param name="provisioningState">
        /// The provisioning state of the resource.
        /// Serialized Name: SubscriptionAliasResponseProperties.provisioningState
        /// </param>
        /// <param name="acceptOwnershipUri">
        /// Url to accept ownership of the subscription.
        /// Serialized Name: SubscriptionAliasResponseProperties.acceptOwnershipUrl
        /// </param>
        /// <param name="acceptOwnershipState">
        /// The accept ownership state of the resource.
        /// Serialized Name: SubscriptionAliasResponseProperties.acceptOwnershipState
        /// </param>
        /// <param name="billingScope">
        /// Billing scope of the subscription.
        /// For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
        /// For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
        /// For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
        /// Serialized Name: SubscriptionAliasResponseProperties.billingScope
        /// </param>
        /// <param name="workload">
        /// The workload type of the subscription. It can be either Production or DevTest.
        /// Serialized Name: SubscriptionAliasResponseProperties.workload
        /// </param>
        /// <param name="resellerId">
        /// Reseller Id
        /// Serialized Name: SubscriptionAliasResponseProperties.resellerId
        /// </param>
        /// <param name="subscriptionOwnerId">
        /// Owner Id of the subscription
        /// Serialized Name: SubscriptionAliasResponseProperties.subscriptionOwnerId
        /// </param>
        /// <param name="managementGroupId">
        /// The Management Group Id.
        /// Serialized Name: SubscriptionAliasResponseProperties.managementGroupId
        /// </param>
        /// <param name="createdTime">
        /// Created Time
        /// Serialized Name: SubscriptionAliasResponseProperties.createdTime
        /// </param>
        /// <param name="tags">
        /// Tags for the subscription
        /// Serialized Name: SubscriptionAliasResponseProperties.tags
        /// </param>
        internal SubscriptionAliasProperties(string subscriptionId, string displayName, SubscriptionProvisioningState? provisioningState, Uri acceptOwnershipUri, AcceptOwnershipState? acceptOwnershipState, string billingScope, SubscriptionWorkload? workload, string resellerId, string subscriptionOwnerId, string managementGroupId, string createdTime, IReadOnlyDictionary<string, string> tags)
        {
            SubscriptionId = subscriptionId;
            DisplayName = displayName;
            ProvisioningState = provisioningState;
            AcceptOwnershipUri = acceptOwnershipUri;
            AcceptOwnershipState = acceptOwnershipState;
            BillingScope = billingScope;
            Workload = workload;
            ResellerId = resellerId;
            SubscriptionOwnerId = subscriptionOwnerId;
            ManagementGroupId = managementGroupId;
            CreatedTime = createdTime;
            Tags = tags;
        }

        /// <summary>
        /// Newly created subscription Id.
        /// Serialized Name: SubscriptionAliasResponseProperties.subscriptionId
        /// </summary>
        public string SubscriptionId { get; }
        /// <summary>
        /// The display name of the subscription.
        /// Serialized Name: SubscriptionAliasResponseProperties.displayName
        /// </summary>
        public string DisplayName { get; }
        /// <summary>
        /// The provisioning state of the resource.
        /// Serialized Name: SubscriptionAliasResponseProperties.provisioningState
        /// </summary>
        public SubscriptionProvisioningState? ProvisioningState { get; }
        /// <summary>
        /// Url to accept ownership of the subscription.
        /// Serialized Name: SubscriptionAliasResponseProperties.acceptOwnershipUrl
        /// </summary>
        public Uri AcceptOwnershipUri { get; }
        /// <summary>
        /// The accept ownership state of the resource.
        /// Serialized Name: SubscriptionAliasResponseProperties.acceptOwnershipState
        /// </summary>
        public AcceptOwnershipState? AcceptOwnershipState { get; }
        /// <summary>
        /// Billing scope of the subscription.
        /// For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
        /// For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
        /// For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
        /// Serialized Name: SubscriptionAliasResponseProperties.billingScope
        /// </summary>
        public string BillingScope { get; }
        /// <summary>
        /// The workload type of the subscription. It can be either Production or DevTest.
        /// Serialized Name: SubscriptionAliasResponseProperties.workload
        /// </summary>
        public SubscriptionWorkload? Workload { get; }
        /// <summary>
        /// Reseller Id
        /// Serialized Name: SubscriptionAliasResponseProperties.resellerId
        /// </summary>
        public string ResellerId { get; }
        /// <summary>
        /// Owner Id of the subscription
        /// Serialized Name: SubscriptionAliasResponseProperties.subscriptionOwnerId
        /// </summary>
        public string SubscriptionOwnerId { get; }
        /// <summary>
        /// The Management Group Id.
        /// Serialized Name: SubscriptionAliasResponseProperties.managementGroupId
        /// </summary>
        public string ManagementGroupId { get; }
        /// <summary>
        /// Created Time
        /// Serialized Name: SubscriptionAliasResponseProperties.createdTime
        /// </summary>
        public string CreatedTime { get; }
        /// <summary>
        /// Tags for the subscription
        /// Serialized Name: SubscriptionAliasResponseProperties.tags
        /// </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
