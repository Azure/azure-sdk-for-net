// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Subscription.Models
{
    /// <summary>
    /// Tenant policy.
    /// Serialized Name: TenantPolicy
    /// </summary>
    public partial class TenantPolicyProperties
    {
        /// <summary> Initializes a new instance of TenantPolicyProperties. </summary>
        internal TenantPolicyProperties()
        {
            ExemptedPrincipals = new ChangeTrackingList<Guid>();
        }

        /// <summary> Initializes a new instance of TenantPolicyProperties. </summary>
        /// <param name="policyId">
        /// Policy Id.
        /// Serialized Name: TenantPolicy.policyId
        /// </param>
        /// <param name="blockSubscriptionsLeavingTenant">
        /// Blocks the leaving of subscriptions from user&apos;s tenant.
        /// Serialized Name: TenantPolicy.blockSubscriptionsLeavingTenant
        /// </param>
        /// <param name="blockSubscriptionsIntoTenant">
        /// Blocks the entering of subscriptions into user&apos;s tenant.
        /// Serialized Name: TenantPolicy.blockSubscriptionsIntoTenant
        /// </param>
        /// <param name="exemptedPrincipals">
        /// List of user objectIds that are exempted from the set subscription tenant policies for the user&apos;s tenant.
        /// Serialized Name: TenantPolicy.exemptedPrincipals
        /// </param>
        internal TenantPolicyProperties(string policyId, bool? blockSubscriptionsLeavingTenant, bool? blockSubscriptionsIntoTenant, IReadOnlyList<Guid> exemptedPrincipals)
        {
            PolicyId = policyId;
            BlockSubscriptionsLeavingTenant = blockSubscriptionsLeavingTenant;
            BlockSubscriptionsIntoTenant = blockSubscriptionsIntoTenant;
            ExemptedPrincipals = exemptedPrincipals;
        }

        /// <summary>
        /// Policy Id.
        /// Serialized Name: TenantPolicy.policyId
        /// </summary>
        public string PolicyId { get; }
        /// <summary>
        /// Blocks the leaving of subscriptions from user&apos;s tenant.
        /// Serialized Name: TenantPolicy.blockSubscriptionsLeavingTenant
        /// </summary>
        public bool? BlockSubscriptionsLeavingTenant { get; }
        /// <summary>
        /// Blocks the entering of subscriptions into user&apos;s tenant.
        /// Serialized Name: TenantPolicy.blockSubscriptionsIntoTenant
        /// </summary>
        public bool? BlockSubscriptionsIntoTenant { get; }
        /// <summary>
        /// List of user objectIds that are exempted from the set subscription tenant policies for the user&apos;s tenant.
        /// Serialized Name: TenantPolicy.exemptedPrincipals
        /// </summary>
        public IReadOnlyList<Guid> ExemptedPrincipals { get; }
    }
}
