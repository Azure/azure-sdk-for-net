// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Subscription.Models
{
    /// <summary>
    /// Subscription Accept Ownership Response
    /// Serialized Name: AcceptOwnershipStatusResponse
    /// </summary>
    public partial class AcceptOwnershipStatus
    {
        /// <summary> Initializes a new instance of AcceptOwnershipStatus. </summary>
        internal AcceptOwnershipStatus()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of AcceptOwnershipStatus. </summary>
        /// <param name="subscriptionId">
        /// Newly created subscription Id.
        /// Serialized Name: AcceptOwnershipStatusResponse.subscriptionId
        /// </param>
        /// <param name="acceptOwnershipState">
        /// The accept ownership state of the resource.
        /// Serialized Name: AcceptOwnershipStatusResponse.acceptOwnershipState
        /// </param>
        /// <param name="provisioningState">
        /// The provisioning state of the resource.
        /// Serialized Name: AcceptOwnershipStatusResponse.provisioningState
        /// </param>
        /// <param name="billingOwner">
        /// UPN of the billing owner
        /// Serialized Name: AcceptOwnershipStatusResponse.billingOwner
        /// </param>
        /// <param name="subscriptionTenantId">
        /// Tenant Id of the subscription
        /// Serialized Name: AcceptOwnershipStatusResponse.subscriptionTenantId
        /// </param>
        /// <param name="displayName">
        /// The display name of the subscription.
        /// Serialized Name: AcceptOwnershipStatusResponse.displayName
        /// </param>
        /// <param name="tags">
        /// Tags for the subscription
        /// Serialized Name: AcceptOwnershipStatusResponse.tags
        /// </param>
        internal AcceptOwnershipStatus(string subscriptionId, AcceptOwnershipState? acceptOwnershipState, AcceptOwnershipProvisioningState? provisioningState, string billingOwner, Guid? subscriptionTenantId, string displayName, IReadOnlyDictionary<string, string> tags)
        {
            SubscriptionId = subscriptionId;
            AcceptOwnershipState = acceptOwnershipState;
            ProvisioningState = provisioningState;
            BillingOwner = billingOwner;
            SubscriptionTenantId = subscriptionTenantId;
            DisplayName = displayName;
            Tags = tags;
        }

        /// <summary>
        /// Newly created subscription Id.
        /// Serialized Name: AcceptOwnershipStatusResponse.subscriptionId
        /// </summary>
        public string SubscriptionId { get; }
        /// <summary>
        /// The accept ownership state of the resource.
        /// Serialized Name: AcceptOwnershipStatusResponse.acceptOwnershipState
        /// </summary>
        public AcceptOwnershipState? AcceptOwnershipState { get; }
        /// <summary>
        /// The provisioning state of the resource.
        /// Serialized Name: AcceptOwnershipStatusResponse.provisioningState
        /// </summary>
        public AcceptOwnershipProvisioningState? ProvisioningState { get; }
        /// <summary>
        /// UPN of the billing owner
        /// Serialized Name: AcceptOwnershipStatusResponse.billingOwner
        /// </summary>
        public string BillingOwner { get; }
        /// <summary>
        /// Tenant Id of the subscription
        /// Serialized Name: AcceptOwnershipStatusResponse.subscriptionTenantId
        /// </summary>
        public Guid? SubscriptionTenantId { get; }
        /// <summary>
        /// The display name of the subscription.
        /// Serialized Name: AcceptOwnershipStatusResponse.displayName
        /// </summary>
        public string DisplayName { get; }
        /// <summary>
        /// Tags for the subscription
        /// Serialized Name: AcceptOwnershipStatusResponse.tags
        /// </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
