// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Subscription.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Put subscription creation result properties.
    /// </summary>
    public partial class SubscriptionAliasResponseProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SubscriptionAliasResponseProperties class.
        /// </summary>
        public SubscriptionAliasResponseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SubscriptionAliasResponseProperties class.
        /// </summary>
        /// <param name="subscriptionId">Newly created subscription Id.</param>
        /// <param name="displayName">The display name of the
        /// subscription.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// resource. Possible values include: 'Accepted', 'Succeeded',
        /// 'Failed'</param>
        /// <param name="acceptOwnershipUrl">Url to accept ownership of the
        /// subscription.</param>
        /// <param name="acceptOwnershipState">Possible values include:
        /// 'Pending', 'Completed', 'Expired'</param>
        /// <param name="workload">Possible values include: 'Production',
        /// 'DevTest'</param>
        /// <param name="resellerId">Reseller Id</param>
        /// <param name="subscriptionOwnerId">Owner Id of the
        /// subscription</param>
        /// <param name="managementGroupId">The Management Group Id.</param>
        /// <param name="createdTime">Created Time</param>
        /// <param name="tags">Tags for the subscription</param>
        public SubscriptionAliasResponseProperties(string subscriptionId = default(string), string displayName = default(string), string provisioningState = default(string), string acceptOwnershipUrl = default(string), string acceptOwnershipState = default(string), string billingScope = default(string), string workload = default(string), string resellerId = default(string), string subscriptionOwnerId = default(string), string managementGroupId = default(string), string createdTime = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            SubscriptionId = subscriptionId;
            DisplayName = displayName;
            ProvisioningState = provisioningState;
            AcceptOwnershipUrl = acceptOwnershipUrl;
            AcceptOwnershipState = acceptOwnershipState;
            BillingScope = billingScope;
            Workload = workload;
            ResellerId = resellerId;
            SubscriptionOwnerId = subscriptionOwnerId;
            ManagementGroupId = managementGroupId;
            CreatedTime = createdTime;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets newly created subscription Id.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; private set; }

        /// <summary>
        /// Gets or sets the display name of the subscription.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the resource. Possible
        /// values include: 'Accepted', 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets url to accept ownership of the subscription.
        /// </summary>
        [JsonProperty(PropertyName = "acceptOwnershipUrl")]
        public string AcceptOwnershipUrl { get; private set; }

        /// <summary>
        /// Gets or sets possible values include: 'Pending', 'Completed',
        /// 'Expired'
        /// </summary>
        [JsonProperty(PropertyName = "acceptOwnershipState")]
        public string AcceptOwnershipState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billingScope")]
        public string BillingScope { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Production', 'DevTest'
        /// </summary>
        [JsonProperty(PropertyName = "workload")]
        public string Workload { get; set; }

        /// <summary>
        /// Gets or sets reseller Id
        /// </summary>
        [JsonProperty(PropertyName = "resellerId")]
        public string ResellerId { get; set; }

        /// <summary>
        /// Gets or sets owner Id of the subscription
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionOwnerId")]
        public string SubscriptionOwnerId { get; set; }

        /// <summary>
        /// Gets or sets the Management Group Id.
        /// </summary>
        [JsonProperty(PropertyName = "managementGroupId")]
        public string ManagementGroupId { get; set; }

        /// <summary>
        /// Gets or sets created Time
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public string CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets tags for the subscription
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

    }
}
