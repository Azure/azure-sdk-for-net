// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Subscription.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters required to create a new CSP subscription.
    /// </summary>
    public partial class ModernCspSubscriptionCreationParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ModernCspSubscriptionCreationParameters class.
        /// </summary>
        public ModernCspSubscriptionCreationParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ModernCspSubscriptionCreationParameters class.
        /// </summary>
        /// <param name="displayName">The friendly name of the
        /// subscription.</param>
        /// <param name="skuId">The SKU ID of the Azure plan. Azure plan
        /// determines the pricing and service-level agreement of the
        /// subscription.  Use 001 for Microsoft Azure Plan and 002 for
        /// Microsoft Azure Plan for DevTest.</param>
        /// <param name="resellerId">Reseller ID, basically MPN Id.</param>
        /// <param name="serviceProviderId">Service provider ID, basically MPN
        /// Id.</param>
        public ModernCspSubscriptionCreationParameters(string displayName, string skuId, string resellerId = default(string), string serviceProviderId = default(string))
        {
            DisplayName = displayName;
            SkuId = skuId;
            ResellerId = resellerId;
            ServiceProviderId = serviceProviderId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the friendly name of the subscription.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the SKU ID of the Azure plan. Azure plan determines
        /// the pricing and service-level agreement of the subscription.  Use
        /// 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for
        /// DevTest.
        /// </summary>
        [JsonProperty(PropertyName = "skuId")]
        public string SkuId { get; set; }

        /// <summary>
        /// Gets or sets reseller ID, basically MPN Id.
        /// </summary>
        [JsonProperty(PropertyName = "resellerId")]
        public string ResellerId { get; set; }

        /// <summary>
        /// Gets or sets service provider ID, basically MPN Id.
        /// </summary>
        [JsonProperty(PropertyName = "serviceProviderId")]
        public string ServiceProviderId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (SkuId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SkuId");
            }
        }
    }
}
