// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Kubernetes.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The list of credential result response.
    /// </summary>
    public partial class CredentialResults
    {
        /// <summary>
        /// Initializes a new instance of the CredentialResults class.
        /// </summary>
        public CredentialResults()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CredentialResults class.
        /// </summary>
        /// <param name="hybridConnectionConfig">Contains the REP (rendezvous
        /// endpoint) and “Sender” access token.</param>
        /// <param name="kubeconfigs">Base64-encoded Kubernetes configuration
        /// file.</param>
        public CredentialResults(HybridConnectionConfig hybridConnectionConfig = default(HybridConnectionConfig), IList<CredentialResult> kubeconfigs = default(IList<CredentialResult>))
        {
            HybridConnectionConfig = hybridConnectionConfig;
            Kubeconfigs = kubeconfigs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets contains the REP (rendezvous endpoint) and “Sender” access
        /// token.
        /// </summary>
        [JsonProperty(PropertyName = "hybridConnectionConfig")]
        public HybridConnectionConfig HybridConnectionConfig { get; private set; }

        /// <summary>
        /// Gets base64-encoded Kubernetes configuration file.
        /// </summary>
        [JsonProperty(PropertyName = "kubeconfigs")]
        public IList<CredentialResult> Kubeconfigs { get; private set; }

    }
}
