// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Kubernetes;

namespace Azure.ResourceManager.Kubernetes.Models
{
    /// <summary> The list of credential result response. </summary>
    public partial class CredentialResults
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CredentialResults"/>. </summary>
        internal CredentialResults()
        {
            Kubeconfigs = new ChangeTrackingList<CredentialResult>();
        }

        /// <summary> Initializes a new instance of <see cref="CredentialResults"/>. </summary>
        /// <param name="hybridConnectionConfig"> Contains the REP (rendezvous endpoint) and “Sender” access token. </param>
        /// <param name="kubeconfigs"> Base64-encoded Kubernetes configuration file. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CredentialResults(HybridConnectionConfig hybridConnectionConfig, IReadOnlyList<CredentialResult> kubeconfigs, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            HybridConnectionConfig = hybridConnectionConfig;
            Kubeconfigs = kubeconfigs;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Contains the REP (rendezvous endpoint) and “Sender” access token. </summary>
        public HybridConnectionConfig HybridConnectionConfig { get; }

        /// <summary> Base64-encoded Kubernetes configuration file. </summary>
        public IReadOnlyList<CredentialResult> Kubeconfigs { get; }
    }
}
