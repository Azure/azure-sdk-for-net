// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Kubernetes.Models
{
    /// <summary> Contains the REP (rendezvous endpoint) and “Sender” access token. </summary>
    public partial class HybridConnectionConfig
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HybridConnectionConfig"/>. </summary>
        internal HybridConnectionConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HybridConnectionConfig"/>. </summary>
        /// <param name="expirationTime"> Timestamp when this token will be expired. </param>
        /// <param name="hybridConnectionName"> Name of the connection. </param>
        /// <param name="relay"> Name of the relay. </param>
        /// <param name="token"> Sender access token. </param>
        /// <param name="relayTid"> TenantID of the relay. </param>
        /// <param name="relayType"> Type of relay. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HybridConnectionConfig(long? expirationTime, string hybridConnectionName, string relay, string token, string relayTid, string relayType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ExpirationTime = expirationTime;
            HybridConnectionName = hybridConnectionName;
            Relay = relay;
            Token = token;
            RelayTid = relayTid;
            RelayType = relayType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Timestamp when this token will be expired. </summary>
        public long? ExpirationTime { get; }

        /// <summary> Name of the connection. </summary>
        public string HybridConnectionName { get; }

        /// <summary> Name of the relay. </summary>
        public string Relay { get; }

        /// <summary> Sender access token. </summary>
        public string Token { get; }

        /// <summary> TenantID of the relay. </summary>
        public string RelayTid { get; }

        /// <summary> Type of relay. </summary>
        public string RelayType { get; }
    }
}
