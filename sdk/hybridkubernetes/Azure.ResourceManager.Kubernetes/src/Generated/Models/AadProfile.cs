// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Kubernetes;

namespace Azure.ResourceManager.Kubernetes.Models
{
    /// <summary> AAD Profile specifies attributes for Azure Active Directory integration. </summary>
    public partial class AadProfile
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AadProfile"/>. </summary>
        public AadProfile()
        {
            AdminGroupObjectIDs = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AadProfile"/>. </summary>
        /// <param name="enableAzureRBAC"> Whether to enable Azure RBAC for Kubernetes authorization. </param>
        /// <param name="adminGroupObjectIDs"> The list of AAD group object IDs that will have admin role of the cluster. </param>
        /// <param name="tenantID"> The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AadProfile(bool? enableAzureRBAC, IList<string> adminGroupObjectIDs, string tenantID, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            EnableAzureRBAC = enableAzureRBAC;
            AdminGroupObjectIDs = adminGroupObjectIDs;
            TenantID = tenantID;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Whether to enable Azure RBAC for Kubernetes authorization. </summary>
        public bool? EnableAzureRBAC { get; set; }

        /// <summary> The list of AAD group object IDs that will have admin role of the cluster. </summary>
        public IList<string> AdminGroupObjectIDs { get; }

        /// <summary> The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription. </summary>
        public string TenantID { get; set; }
    }
}
