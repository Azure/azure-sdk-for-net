// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Migrate.ResourceMover.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines NIC IP configuration properties.
    /// </summary>
    public partial class NicIpConfigurationResourceSettings
    {
        /// <summary>
        /// Initializes a new instance of the
        /// NicIpConfigurationResourceSettings class.
        /// </summary>
        public NicIpConfigurationResourceSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// NicIpConfigurationResourceSettings class.
        /// </summary>
        /// <param name="name">Gets or sets the IP configuration name.</param>
        /// <param name="privateIpAddress">Gets or sets the private IP address
        /// of the network interface IP Configuration.</param>
        /// <param name="privateIpAllocationMethod">Gets or sets the private IP
        /// address allocation method.</param>
        /// <param name="primary">Gets or sets a value indicating whether this
        /// IP configuration is the primary.</param>
        /// <param name="loadBalancerBackendAddressPools">Gets or sets the
        /// references of the load balancer backend address pools.</param>
        /// <param name="loadBalancerNatRules">Gets or sets the references of
        /// the load balancer NAT rules.</param>
        public NicIpConfigurationResourceSettings(string name = default(string), string privateIpAddress = default(string), string privateIpAllocationMethod = default(string), SubnetReference subnet = default(SubnetReference), bool? primary = default(bool?), IList<LoadBalancerBackendAddressPoolReference> loadBalancerBackendAddressPools = default(IList<LoadBalancerBackendAddressPoolReference>), IList<LoadBalancerNatRuleReference> loadBalancerNatRules = default(IList<LoadBalancerNatRuleReference>), PublicIpReference publicIp = default(PublicIpReference))
        {
            Name = name;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAllocationMethod = privateIpAllocationMethod;
            Subnet = subnet;
            Primary = primary;
            LoadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            LoadBalancerNatRules = loadBalancerNatRules;
            PublicIp = publicIp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the IP configuration name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the private IP address of the network interface IP
        /// Configuration.
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIpAddress { get; set; }

        /// <summary>
        /// Gets or sets the private IP address allocation method.
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAllocationMethod")]
        public string PrivateIpAllocationMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        public SubnetReference Subnet { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this IP configuration is
        /// the primary.
        /// </summary>
        [JsonProperty(PropertyName = "primary")]
        public bool? Primary { get; set; }

        /// <summary>
        /// Gets or sets the references of the load balancer backend address
        /// pools.
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerBackendAddressPools")]
        public IList<LoadBalancerBackendAddressPoolReference> LoadBalancerBackendAddressPools { get; set; }

        /// <summary>
        /// Gets or sets the references of the load balancer NAT rules.
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerNatRules")]
        public IList<LoadBalancerNatRuleReference> LoadBalancerNatRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "publicIp")]
        public PublicIpReference PublicIp { get; set; }

    }
}
