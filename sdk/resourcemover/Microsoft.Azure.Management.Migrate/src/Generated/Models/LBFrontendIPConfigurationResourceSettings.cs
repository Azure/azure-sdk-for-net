// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Migrate.ResourceMover.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines load balancer frontend IP configuration properties.
    /// </summary>
    public partial class LBFrontendIPConfigurationResourceSettings
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LBFrontendIPConfigurationResourceSettings class.
        /// </summary>
        public LBFrontendIPConfigurationResourceSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LBFrontendIPConfigurationResourceSettings class.
        /// </summary>
        /// <param name="name">Gets or sets the frontend IP configuration
        /// name.</param>
        /// <param name="privateIpAddress">Gets or sets the IP address of the
        /// Load Balancer.This is only specified if a specific
        /// private IP address shall be allocated from the subnet specified in
        /// subnetRef.</param>
        /// <param name="privateIpAllocationMethod">Gets or sets PrivateIP
        /// allocation method (Static/Dynamic).</param>
        /// <param name="zones">Gets or sets the csv list of zones.</param>
        public LBFrontendIPConfigurationResourceSettings(string name = default(string), string privateIpAddress = default(string), string privateIpAllocationMethod = default(string), SubnetReference subnet = default(SubnetReference), string zones = default(string))
        {
            Name = name;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAllocationMethod = privateIpAllocationMethod;
            Subnet = subnet;
            Zones = zones;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the frontend IP configuration name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the IP address of the Load Balancer.This is only
        /// specified if a specific
        /// private IP address shall be allocated from the subnet specified in
        /// subnetRef.
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIpAddress { get; set; }

        /// <summary>
        /// Gets or sets PrivateIP allocation method (Static/Dynamic).
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAllocationMethod")]
        public string PrivateIpAllocationMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        public SubnetReference Subnet { get; set; }

        /// <summary>
        /// Gets or sets the csv list of zones.
        /// </summary>
        [JsonProperty(PropertyName = "zones")]
        public string Zones { get; set; }

    }
}
