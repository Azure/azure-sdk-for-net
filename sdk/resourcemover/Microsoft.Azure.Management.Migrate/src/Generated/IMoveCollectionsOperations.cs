// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Migrate.ResourceMover
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// MoveCollectionsOperations operations.
    /// </summary>
    public partial interface IMoveCollectionsOperations
    {
        /// <summary>
        /// Creates or updates a move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<MoveCollection>> CreateWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, MoveCollection body = default(MoveCollection), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates a move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<MoveCollection>> UpdateWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, UpdateMoveCollectionRequest body = default(UpdateMoveCollectionRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> DeleteWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<MoveCollection>> GetWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Initiates prepare for the set of resources included in the request
        /// body. The prepare operation is on the moveResources that are in the
        /// moveState 'PreparePending' or 'PrepareFailed', on a successful
        /// completion the moveResource moveState do a transition to
        /// MovePending. To aid the user to prerequisite the operation the
        /// client can call operation with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> PrepareWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, PrepareRequest body = default(PrepareRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Moves the set of resources included in the request body. The move
        /// operation is triggered after the moveResources are in the moveState
        /// 'MovePending' or 'MoveFailed', on a successful completion the
        /// moveResource moveState do a transition to CommitPending. To aid the
        /// user to prerequisite the operation the client can call operation
        /// with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> InitiateMoveWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, ResourceMoveRequest body = default(ResourceMoveRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Commits the set of resources included in the request body. The
        /// commit operation is triggered on the moveResources in the moveState
        /// 'CommitPending' or 'CommitFailed', on a successful completion the
        /// moveResource moveState do a transition to Committed. To aid the
        /// user to prerequisite the operation the client can call operation
        /// with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> CommitWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, CommitRequest body = default(CommitRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Discards the set of resources included in the request body. The
        /// discard operation is triggered on the moveResources in the
        /// moveState 'CommitPending' or 'DiscardFailed', on a successful
        /// completion the moveResource moveState do a transition to
        /// MovePending. To aid the user to prerequisite the operation the
        /// client can call operation with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> DiscardWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, DiscardRequest body = default(DiscardRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Computes, resolves and validate the dependencies of the
        /// moveResources in the move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> ResolveDependenciesWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the set of move resources included in the request body from
        /// move collection. The orchestration is done by service. To aid the
        /// user to prerequisite the operation the client can call operation
        /// with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='moveCollectionName'>
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BulkRemoveWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, BulkRemoveRequest body = default(BulkRemoveRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get all Move Collections.
        /// </summary>
        /// <remarks>
        /// Get all the Move Collections in the subscription.
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<MoveCollection>>> ListMoveCollectionsBySubscriptionWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get all Move Collections.
        /// </summary>
        /// <remarks>
        /// Get all the Move Collections in the resource group.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<MoveCollection>>> ListMoveCollectionsByResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Initiates prepare for the set of resources included in the request
        /// body. The prepare operation is on the moveResources that are in the
        /// moveState 'PreparePending' or 'PrepareFailed', on a successful
        /// completion the moveResource moveState do a transition to
        /// MovePending. To aid the user to prerequisite the operation the
        /// client can call operation with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginPrepareWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, PrepareRequest body = default(PrepareRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Moves the set of resources included in the request body. The move
        /// operation is triggered after the moveResources are in the moveState
        /// 'MovePending' or 'MoveFailed', on a successful completion the
        /// moveResource moveState do a transition to CommitPending. To aid the
        /// user to prerequisite the operation the client can call operation
        /// with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginInitiateMoveWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, ResourceMoveRequest body = default(ResourceMoveRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Commits the set of resources included in the request body. The
        /// commit operation is triggered on the moveResources in the moveState
        /// 'CommitPending' or 'CommitFailed', on a successful completion the
        /// moveResource moveState do a transition to Committed. To aid the
        /// user to prerequisite the operation the client can call operation
        /// with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginCommitWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, CommitRequest body = default(CommitRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Discards the set of resources included in the request body. The
        /// discard operation is triggered on the moveResources in the
        /// moveState 'CommitPending' or 'DiscardFailed', on a successful
        /// completion the moveResource moveState do a transition to
        /// MovePending. To aid the user to prerequisite the operation the
        /// client can call operation with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginDiscardWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, DiscardRequest body = default(DiscardRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Computes, resolves and validate the dependencies of the
        /// moveResources in the move collection.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The Resource Group Name.
        /// </param>
        /// <param name='moveCollectionName'>
        /// The Move Collection Name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginResolveDependenciesWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the set of move resources included in the request body from
        /// move collection. The orchestration is done by service. To aid the
        /// user to prerequisite the operation the client can call operation
        /// with validateOnly property set to true.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='moveCollectionName'>
        /// </param>
        /// <param name='body'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatus>> BeginBulkRemoveWithHttpMessagesAsync(string resourceGroupName, string moveCollectionName, BulkRemoveRequest body = default(BulkRemoveRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get all Move Collections.
        /// </summary>
        /// <remarks>
        /// Get all the Move Collections in the subscription.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<MoveCollection>>> ListMoveCollectionsBySubscriptionNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get all Move Collections.
        /// </summary>
        /// <remarks>
        /// Get all the Move Collections in the resource group.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<MoveCollection>>> ListMoveCollectionsByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
