// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Migrate
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Migrate. </summary>
    public static partial class MigrateExtensions
    {
        private static TenantResourceExtensionClient GetExtensionClient(TenantResource tenantResource)
        {
            return tenantResource.GetCachedClient((client) =>
            {
                return new TenantResourceExtensionClient(client, tenantResource.Id);
            }
            );
        }

        /// <summary>
        /// Request Path: /providers/Microsoft.Migrate/operations
        /// Operation Id: OperationsDiscovery_Get
        /// </summary>
        /// <param name="tenantResource"> The <see cref="TenantResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="OperationsDiscovery" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<OperationsDiscovery> GetOperationsDiscoveriesAsync(this TenantResource tenantResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(tenantResource).GetOperationsDiscoveriesAsync(cancellationToken);
        }

        /// <summary>
        /// Request Path: /providers/Microsoft.Migrate/operations
        /// Operation Id: OperationsDiscovery_Get
        /// </summary>
        /// <param name="tenantResource"> The <see cref="TenantResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="OperationsDiscovery" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<OperationsDiscovery> GetOperationsDiscoveries(this TenantResource tenantResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(tenantResource).GetOperationsDiscoveries(cancellationToken);
        }

        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Get all the Move Collections in the subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Migrate/moveCollections
        /// Operation Id: MoveCollections_ListMoveCollectionsBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="MoveCollectionResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MoveCollectionResource> GetMoveCollectionsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetMoveCollectionsAsync(cancellationToken);
        }

        /// <summary>
        /// Get all the Move Collections in the subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Migrate/moveCollections
        /// Operation Id: MoveCollections_ListMoveCollectionsBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="MoveCollectionResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MoveCollectionResource> GetMoveCollections(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetMoveCollections(cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of MoveCollectionResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of MoveCollectionResources and their operations over a MoveCollectionResource. </returns>
        public static MoveCollectionCollection GetMoveCollections(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetMoveCollections();
        }

        /// <summary>
        /// Gets the move collection.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}
        /// Operation Id: MoveCollections_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="moveCollectionName"> The Move Collection Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="moveCollectionName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="moveCollectionName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<MoveCollectionResource>> GetMoveCollectionAsync(this ResourceGroupResource resourceGroupResource, string moveCollectionName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetMoveCollections().GetAsync(moveCollectionName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the move collection.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}
        /// Operation Id: MoveCollections_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="moveCollectionName"> The Move Collection Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="moveCollectionName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="moveCollectionName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<MoveCollectionResource> GetMoveCollection(this ResourceGroupResource resourceGroupResource, string moveCollectionName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetMoveCollections().Get(moveCollectionName, cancellationToken);
        }

        #region MoveCollectionResource
        /// <summary>
        /// Gets an object representing a <see cref="MoveCollectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MoveCollectionResource.CreateResourceIdentifier" /> to create a <see cref="MoveCollectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MoveCollectionResource" /> object. </returns>
        public static MoveCollectionResource GetMoveCollectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MoveCollectionResource.ValidateResourceId(id);
                return new MoveCollectionResource(client, id);
            }
            );
        }
        #endregion

        #region MoveResource
        /// <summary>
        /// Gets an object representing a <see cref="MoveResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MoveResource.CreateResourceIdentifier" /> to create a <see cref="MoveResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MoveResource" /> object. </returns>
        public static MoveResource GetMoveResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MoveResource.ValidateResourceId(id);
                return new MoveResource(client, id);
            }
            );
        }
        #endregion
    }
}
