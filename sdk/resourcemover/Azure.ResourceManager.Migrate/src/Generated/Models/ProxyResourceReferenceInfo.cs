// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary>
    /// Defines reference to a proxy resource.
    /// Serialized Name: ProxyResourceReference
    /// </summary>
    public partial class ProxyResourceReferenceInfo : MoverAzureResourceReferenceInfo
    {
        /// <summary> Initializes a new instance of ProxyResourceReferenceInfo. </summary>
        /// <param name="sourceArmResourceId">
        /// Gets the ARM resource ID of the tracked resource being referenced.
        /// Serialized Name: AzureResourceReference.sourceArmResourceId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceArmResourceId"/> is null. </exception>
        public ProxyResourceReferenceInfo(string sourceArmResourceId) : base(sourceArmResourceId)
        {
            if (sourceArmResourceId == null)
            {
                throw new ArgumentNullException(nameof(sourceArmResourceId));
            }
        }

        /// <summary> Initializes a new instance of ProxyResourceReferenceInfo. </summary>
        /// <param name="sourceArmResourceId">
        /// Gets the ARM resource ID of the tracked resource being referenced.
        /// Serialized Name: AzureResourceReference.sourceArmResourceId
        /// </param>
        /// <param name="name">
        /// Gets the name of the proxy resource on the target side.
        /// Serialized Name: ProxyResourceReference.name
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceArmResourceId"/> is null. </exception>
        internal ProxyResourceReferenceInfo(string sourceArmResourceId, string name) : base(sourceArmResourceId)
        {
            if (sourceArmResourceId == null)
            {
                throw new ArgumentNullException(nameof(sourceArmResourceId));
            }

            Name = name;
        }

        /// <summary>
        /// Gets the name of the proxy resource on the target side.
        /// Serialized Name: ProxyResourceReference.name
        /// </summary>
        public string Name { get; set; }
    }
}
