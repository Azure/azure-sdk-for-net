// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Defines NIC IP configuration properties. </summary>
    public partial class NicIPConfigurationResourceSettings
    {
        /// <summary> Initializes a new instance of NicIPConfigurationResourceSettings. </summary>
        public NicIPConfigurationResourceSettings()
        {
            LoadBalancerBackendAddressPools = new ChangeTrackingList<LoadBalancerBackendAddressPoolReference>();
            LoadBalancerNatRules = new ChangeTrackingList<LoadBalancerNatRuleReference>();
        }

        /// <summary> Initializes a new instance of NicIPConfigurationResourceSettings. </summary>
        /// <param name="name"> Gets or sets the IP configuration name. </param>
        /// <param name="privateIPAddress"> Gets or sets the private IP address of the network interface IP Configuration. </param>
        /// <param name="privateIPAllocationMethod"> Gets or sets the private IP address allocation method. </param>
        /// <param name="subnet"> Defines reference to subnet. </param>
        /// <param name="primary"> Gets or sets a value indicating whether this IP configuration is the primary. </param>
        /// <param name="loadBalancerBackendAddressPools"> Gets or sets the references of the load balancer backend address pools. </param>
        /// <param name="loadBalancerNatRules"> Gets or sets the references of the load balancer NAT rules. </param>
        /// <param name="publicIP"> Defines reference to a public IP. </param>
        internal NicIPConfigurationResourceSettings(string name, string privateIPAddress, string privateIPAllocationMethod, SubnetReference subnet, bool? primary, IList<LoadBalancerBackendAddressPoolReference> loadBalancerBackendAddressPools, IList<LoadBalancerNatRuleReference> loadBalancerNatRules, PublicIPReference publicIP)
        {
            Name = name;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            Subnet = subnet;
            Primary = primary;
            LoadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            LoadBalancerNatRules = loadBalancerNatRules;
            PublicIP = publicIP;
        }

        /// <summary> Gets or sets the IP configuration name. </summary>
        public string Name { get; set; }
        /// <summary> Gets or sets the private IP address of the network interface IP Configuration. </summary>
        public string PrivateIPAddress { get; set; }
        /// <summary> Gets or sets the private IP address allocation method. </summary>
        public string PrivateIPAllocationMethod { get; set; }
        /// <summary> Defines reference to subnet. </summary>
        public SubnetReference Subnet { get; set; }
        /// <summary> Gets or sets a value indicating whether this IP configuration is the primary. </summary>
        public bool? Primary { get; set; }
        /// <summary> Gets or sets the references of the load balancer backend address pools. </summary>
        public IList<LoadBalancerBackendAddressPoolReference> LoadBalancerBackendAddressPools { get; }
        /// <summary> Gets or sets the references of the load balancer NAT rules. </summary>
        public IList<LoadBalancerNatRuleReference> LoadBalancerNatRules { get; }
        /// <summary> Defines reference to a public IP. </summary>
        internal PublicIPReference PublicIP { get; set; }
        /// <summary> Gets the ARM resource ID of the tracked resource being referenced. </summary>
        public string PublicIPSourceArmResourceId
        {
            get => PublicIP is null ? default : PublicIP.SourceArmResourceId;
            set => PublicIP = new PublicIPReference(value);
        }
    }
}
