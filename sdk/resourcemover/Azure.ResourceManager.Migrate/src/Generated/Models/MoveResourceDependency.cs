// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary>
    /// Defines the dependency of the move resource.
    /// Serialized Name: MoveResourceDependency
    /// </summary>
    public partial class MoveResourceDependency
    {
        /// <summary> Initializes a new instance of MoveResourceDependency. </summary>
        internal MoveResourceDependency()
        {
        }

        /// <summary> Initializes a new instance of MoveResourceDependency. </summary>
        /// <param name="id">
        /// Gets the source ARM ID of the dependent resource.
        /// Serialized Name: MoveResourceDependency.id
        /// </param>
        /// <param name="resolutionStatus">
        /// Gets the dependency resolution status.
        /// Serialized Name: MoveResourceDependency.resolutionStatus
        /// </param>
        /// <param name="resolutionType">
        /// Defines the resolution type.
        /// Serialized Name: MoveResourceDependency.resolutionType
        /// </param>
        /// <param name="dependencyType">
        /// Defines the dependency type.
        /// Serialized Name: MoveResourceDependency.dependencyType
        /// </param>
        /// <param name="manualResolution">
        /// Defines the properties for manual resolution.
        /// Serialized Name: MoveResourceDependency.manualResolution
        /// </param>
        /// <param name="automaticResolution">
        /// Defines the properties for automatic resolution.
        /// Serialized Name: MoveResourceDependency.automaticResolution
        /// </param>
        /// <param name="isOptional">
        /// Gets or sets a value indicating whether the dependency is optional.
        /// Serialized Name: MoveResourceDependency.isOptional
        /// </param>
        internal MoveResourceDependency(string id, string resolutionStatus, MoveResourceResolutionType? resolutionType, MoverDependencyType? dependencyType, ManualResolutionProperties manualResolution, AutomaticResolutionProperties automaticResolution, string isOptional)
        {
            Id = id;
            ResolutionStatus = resolutionStatus;
            ResolutionType = resolutionType;
            DependencyType = dependencyType;
            ManualResolution = manualResolution;
            AutomaticResolution = automaticResolution;
            IsOptional = isOptional;
        }

        /// <summary>
        /// Gets the source ARM ID of the dependent resource.
        /// Serialized Name: MoveResourceDependency.id
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// Gets the dependency resolution status.
        /// Serialized Name: MoveResourceDependency.resolutionStatus
        /// </summary>
        public string ResolutionStatus { get; }
        /// <summary>
        /// Defines the resolution type.
        /// Serialized Name: MoveResourceDependency.resolutionType
        /// </summary>
        public MoveResourceResolutionType? ResolutionType { get; }
        /// <summary>
        /// Defines the dependency type.
        /// Serialized Name: MoveResourceDependency.dependencyType
        /// </summary>
        public MoverDependencyType? DependencyType { get; }
        /// <summary>
        /// Defines the properties for manual resolution.
        /// Serialized Name: MoveResourceDependency.manualResolution
        /// </summary>
        internal ManualResolutionProperties ManualResolution { get; }
        /// <summary>
        /// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
        /// Serialized Name: ManualResolutionProperties.targetId
        /// </summary>
        public ResourceIdentifier ManualResolutionTargetId
        {
            get => ManualResolution?.TargetId;
        }

        /// <summary>
        /// Defines the properties for automatic resolution.
        /// Serialized Name: MoveResourceDependency.automaticResolution
        /// </summary>
        internal AutomaticResolutionProperties AutomaticResolution { get; }
        /// <summary>
        /// Gets the MoveResource ARM ID of
        /// the dependent resource if the resolution type is Automatic.
        /// Serialized Name: AutomaticResolutionProperties.moveResourceId
        /// </summary>
        public string AutomaticResolutionMoveResourceId
        {
            get => AutomaticResolution?.MoveResourceId;
        }

        /// <summary>
        /// Gets or sets a value indicating whether the dependency is optional.
        /// Serialized Name: MoveResourceDependency.isOptional
        /// </summary>
        public string IsOptional { get; }
    }
}
