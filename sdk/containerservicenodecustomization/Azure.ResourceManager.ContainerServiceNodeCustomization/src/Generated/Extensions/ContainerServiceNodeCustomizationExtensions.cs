// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.ResourceManager.ContainerServiceNodeCustomization.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ContainerServiceNodeCustomization
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ContainerServiceNodeCustomization. </summary>
    public static partial class ContainerServiceNodeCustomizationExtensions
    {
        private static MockableContainerServiceNodeCustomizationArmClient GetMockableContainerServiceNodeCustomizationArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableContainerServiceNodeCustomizationArmClient(client0));
        }

        private static MockableContainerServiceNodeCustomizationResourceGroupResource GetMockableContainerServiceNodeCustomizationResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableContainerServiceNodeCustomizationResourceGroupResource(client, resource.Id));
        }

        private static MockableContainerServiceNodeCustomizationSubscriptionResource GetMockableContainerServiceNodeCustomizationSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableContainerServiceNodeCustomizationSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="NodeCustomizationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NodeCustomizationResource.CreateResourceIdentifier" /> to create a <see cref="NodeCustomizationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationArmClient.GetNodeCustomizationResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="NodeCustomizationResource"/> object. </returns>
        public static NodeCustomizationResource GetNodeCustomizationResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableContainerServiceNodeCustomizationArmClient(client).GetNodeCustomizationResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NodeCustomizationVersionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NodeCustomizationVersionResource.CreateResourceIdentifier" /> to create a <see cref="NodeCustomizationVersionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationArmClient.GetNodeCustomizationVersionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="NodeCustomizationVersionResource"/> object. </returns>
        public static NodeCustomizationVersionResource GetNodeCustomizationVersionResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableContainerServiceNodeCustomizationArmClient(client).GetNodeCustomizationVersionResource(id);
        }

        /// <summary>
        /// Gets a collection of NodeCustomizationResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationResourceGroupResource.GetNodeCustomizations()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of NodeCustomizationResources and their operations over a NodeCustomizationResource. </returns>
        public static NodeCustomizationCollection GetNodeCustomizations(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableContainerServiceNodeCustomizationResourceGroupResource(resourceGroupResource).GetNodeCustomizations();
        }

        /// <summary>
        /// Get a node customization at the latest version.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/nodeCustomizations/{nodeCustomizationName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NodeCustomization_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-09-02-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="NodeCustomizationResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationResourceGroupResource.GetNodeCustomizationAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="nodeCustomizationName"> The name of the Node Customization resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="nodeCustomizationName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="nodeCustomizationName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<NodeCustomizationResource>> GetNodeCustomizationAsync(this ResourceGroupResource resourceGroupResource, string nodeCustomizationName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableContainerServiceNodeCustomizationResourceGroupResource(resourceGroupResource).GetNodeCustomizationAsync(nodeCustomizationName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a node customization at the latest version.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/nodeCustomizations/{nodeCustomizationName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NodeCustomization_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-09-02-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="NodeCustomizationResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationResourceGroupResource.GetNodeCustomization(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="nodeCustomizationName"> The name of the Node Customization resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="nodeCustomizationName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="nodeCustomizationName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<NodeCustomizationResource> GetNodeCustomization(this ResourceGroupResource resourceGroupResource, string nodeCustomizationName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableContainerServiceNodeCustomizationResourceGroupResource(resourceGroupResource).GetNodeCustomization(nodeCustomizationName, cancellationToken);
        }

        /// <summary>
        /// List the node customizations in a subscription at the latest version.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/nodeCustomizations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NodeCustomization_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-09-02-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="NodeCustomizationResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationSubscriptionResource.GetNodeCustomizations(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="NodeCustomizationResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<NodeCustomizationResource> GetNodeCustomizationsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableContainerServiceNodeCustomizationSubscriptionResource(subscriptionResource).GetNodeCustomizationsAsync(cancellationToken);
        }

        /// <summary>
        /// List the node customizations in a subscription at the latest version.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/nodeCustomizations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NodeCustomization_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-09-02-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="NodeCustomizationResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableContainerServiceNodeCustomizationSubscriptionResource.GetNodeCustomizations(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="NodeCustomizationResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<NodeCustomizationResource> GetNodeCustomizations(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableContainerServiceNodeCustomizationSubscriptionResource(subscriptionResource).GetNodeCustomizations(cancellationToken);
        }
    }
}
