// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SmartGroupModificationEvent.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SmartGroupModificationEvent
    {
        [EnumMember(Value = "SmartGroupCreated")]
        SmartGroupCreated,
        [EnumMember(Value = "StateChange")]
        StateChange,
        [EnumMember(Value = "AlertAdded")]
        AlertAdded,
        [EnumMember(Value = "AlertRemoved")]
        AlertRemoved
    }
    internal static class SmartGroupModificationEventEnumExtension
    {
        internal static string ToSerializedValue(this SmartGroupModificationEvent? value)
        {
            return value == null ? null : ((SmartGroupModificationEvent)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SmartGroupModificationEvent value)
        {
            switch( value )
            {
                case SmartGroupModificationEvent.SmartGroupCreated:
                    return "SmartGroupCreated";
                case SmartGroupModificationEvent.StateChange:
                    return "StateChange";
                case SmartGroupModificationEvent.AlertAdded:
                    return "AlertAdded";
                case SmartGroupModificationEvent.AlertRemoved:
                    return "AlertRemoved";
            }
            return null;
        }

        internal static SmartGroupModificationEvent? ParseSmartGroupModificationEvent(this string value)
        {
            switch( value )
            {
                case "SmartGroupCreated":
                    return SmartGroupModificationEvent.SmartGroupCreated;
                case "StateChange":
                    return SmartGroupModificationEvent.StateChange;
                case "AlertAdded":
                    return SmartGroupModificationEvent.AlertAdded;
                case "AlertRemoved":
                    return SmartGroupModificationEvent.AlertRemoved;
            }
            return null;
        }
    }
}
