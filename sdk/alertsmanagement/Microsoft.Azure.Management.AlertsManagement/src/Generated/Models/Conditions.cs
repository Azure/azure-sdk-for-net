// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Conditions in alert instance to be matched for a given action rule.
    /// Default value is all. Multiple values could be provided with comma
    /// separation.
    /// </summary>
    public partial class Conditions
    {
        /// <summary>
        /// Initializes a new instance of the Conditions class.
        /// </summary>
        public Conditions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Conditions class.
        /// </summary>
        /// <param name="severity">filter alerts by severity</param>
        /// <param name="monitorService">filter alerts by monitor
        /// service</param>
        /// <param name="monitorCondition">filter alerts by monitor
        /// condition</param>
        /// <param name="targetResourceType">filter alerts by target resource
        /// type</param>
        /// <param name="alertRuleId">filter alerts by alert rule id</param>
        /// <param name="description">filter alerts by alert rule
        /// description</param>
        /// <param name="alertContext">filter alerts by alert context
        /// (payload)</param>
        public Conditions(Condition severity = default(Condition), Condition monitorService = default(Condition), Condition monitorCondition = default(Condition), Condition targetResourceType = default(Condition), Condition alertRuleId = default(Condition), Condition description = default(Condition), Condition alertContext = default(Condition))
        {
            Severity = severity;
            MonitorService = monitorService;
            MonitorCondition = monitorCondition;
            TargetResourceType = targetResourceType;
            AlertRuleId = alertRuleId;
            Description = description;
            AlertContext = alertContext;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets filter alerts by severity
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public Condition Severity { get; set; }

        /// <summary>
        /// Gets or sets filter alerts by monitor service
        /// </summary>
        [JsonProperty(PropertyName = "monitorService")]
        public Condition MonitorService { get; set; }

        /// <summary>
        /// Gets or sets filter alerts by monitor condition
        /// </summary>
        [JsonProperty(PropertyName = "monitorCondition")]
        public Condition MonitorCondition { get; set; }

        /// <summary>
        /// Gets or sets filter alerts by target resource type
        /// </summary>
        [JsonProperty(PropertyName = "targetResourceType")]
        public Condition TargetResourceType { get; set; }

        /// <summary>
        /// Gets or sets filter alerts by alert rule id
        /// </summary>
        [JsonProperty(PropertyName = "alertRuleId")]
        public Condition AlertRuleId { get; set; }

        /// <summary>
        /// Gets or sets filter alerts by alert rule description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public Condition Description { get; set; }

        /// <summary>
        /// Gets or sets filter alerts by alert context (payload)
        /// </summary>
        [JsonProperty(PropertyName = "alertContext")]
        public Condition AlertContext { get; set; }

    }
}
