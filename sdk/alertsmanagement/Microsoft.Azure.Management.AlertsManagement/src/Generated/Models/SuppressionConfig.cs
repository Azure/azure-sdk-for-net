// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Suppression logic for a given action rule
    /// </summary>
    public partial class SuppressionConfig
    {
        /// <summary>
        /// Initializes a new instance of the SuppressionConfig class.
        /// </summary>
        public SuppressionConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SuppressionConfig class.
        /// </summary>
        /// <param name="recurrenceType">Specifies when the suppression should
        /// be applied. Possible values include: 'Always', 'Once', 'Daily',
        /// 'Weekly', 'Monthly'</param>
        /// <param name="schedule">suppression schedule configuration</param>
        public SuppressionConfig(string recurrenceType, SuppressionSchedule schedule = default(SuppressionSchedule))
        {
            RecurrenceType = recurrenceType;
            Schedule = schedule;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies when the suppression should be applied.
        /// Possible values include: 'Always', 'Once', 'Daily', 'Weekly',
        /// 'Monthly'
        /// </summary>
        [JsonProperty(PropertyName = "recurrenceType")]
        public string RecurrenceType { get; set; }

        /// <summary>
        /// Gets or sets suppression schedule configuration
        /// </summary>
        [JsonProperty(PropertyName = "schedule")]
        public SuppressionSchedule Schedule { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RecurrenceType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RecurrenceType");
            }
        }
    }
}
