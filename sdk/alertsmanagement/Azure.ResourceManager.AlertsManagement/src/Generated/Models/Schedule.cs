// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AlertsManagement.Models
{
    /// <summary> Scheduling configuration for a given alert processing rule. </summary>
    public partial class Schedule
    {
        /// <summary> Initializes a new instance of Schedule. </summary>
        public Schedule()
        {
            Recurrences = new ChangeTrackingList<Recurrence>();
        }

        /// <summary> Initializes a new instance of Schedule. </summary>
        /// <param name="effectiveFrom"> Scheduling effective from time. Date-Time in ISO-8601 format without timezone suffix. </param>
        /// <param name="effectiveUntil"> Scheduling effective until time. Date-Time in ISO-8601 format without timezone suffix. </param>
        /// <param name="timeZone"> Scheduling time zone. </param>
        /// <param name="recurrences">
        /// List of recurrences.
        /// Please note <see cref="Recurrence"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="DailyRecurrence"/>, <see cref="MonthlyRecurrence"/> and <see cref="WeeklyRecurrence"/>.
        /// </param>
        internal Schedule(string effectiveFrom, string effectiveUntil, string timeZone, IList<Recurrence> recurrences)
        {
            EffectiveFrom = effectiveFrom;
            EffectiveUntil = effectiveUntil;
            TimeZone = timeZone;
            Recurrences = recurrences;
        }

        /// <summary> Scheduling effective from time. Date-Time in ISO-8601 format without timezone suffix. </summary>
        public string EffectiveFrom { get; set; }
        /// <summary> Scheduling effective until time. Date-Time in ISO-8601 format without timezone suffix. </summary>
        public string EffectiveUntil { get; set; }
        /// <summary> Scheduling time zone. </summary>
        public string TimeZone { get; set; }
        /// <summary>
        /// List of recurrences.
        /// Please note <see cref="Recurrence"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="DailyRecurrence"/>, <see cref="MonthlyRecurrence"/> and <see cref="WeeklyRecurrence"/>.
        /// </summary>
        public IList<Recurrence> Recurrences { get; }
    }
}
