// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AlertsManagement.Models
{
    public partial class ServiceAlertProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Essentials))
            {
                writer.WritePropertyName("essentials"u8);
                writer.WriteObjectValue(Essentials);
            }
            writer.WriteEndObject();
        }

        internal static ServiceAlertProperties DeserializeServiceAlertProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ServiceAlertEssentials> essentials = default;
            Optional<BinaryData> context = default;
            Optional<BinaryData> egressConfig = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("essentials"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    essentials = ServiceAlertEssentials.DeserializeServiceAlertEssentials(property.Value);
                    continue;
                }
                if (property.NameEquals("context"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    context = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("egressConfig"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    egressConfig = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
            }
            return new ServiceAlertProperties(essentials.Value, context.Value, egressConfig.Value);
        }
    }
}
