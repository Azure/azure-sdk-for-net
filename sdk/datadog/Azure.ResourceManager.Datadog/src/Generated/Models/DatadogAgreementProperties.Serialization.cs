// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Datadog.Models
{
    public partial class DatadogAgreementProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Publisher))
            {
                writer.WritePropertyName("publisher"u8);
                writer.WriteStringValue(Publisher);
            }
            if (Optional.IsDefined(Product))
            {
                writer.WritePropertyName("product"u8);
                writer.WriteStringValue(Product);
            }
            if (Optional.IsDefined(Plan))
            {
                writer.WritePropertyName("plan"u8);
                writer.WriteStringValue(Plan);
            }
            if (Optional.IsDefined(LicenseTextLink))
            {
                writer.WritePropertyName("licenseTextLink"u8);
                writer.WriteStringValue(LicenseTextLink);
            }
            if (Optional.IsDefined(PrivacyPolicyLink))
            {
                writer.WritePropertyName("privacyPolicyLink"u8);
                writer.WriteStringValue(PrivacyPolicyLink);
            }
            if (Optional.IsDefined(RetrieveDatetime))
            {
                writer.WritePropertyName("retrieveDatetime"u8);
                writer.WriteStringValue(RetrieveDatetime.Value, "O");
            }
            if (Optional.IsDefined(Signature))
            {
                writer.WritePropertyName("signature"u8);
                writer.WriteStringValue(Signature);
            }
            if (Optional.IsDefined(Accepted))
            {
                writer.WritePropertyName("accepted"u8);
                writer.WriteBooleanValue(Accepted.Value);
            }
            writer.WriteEndObject();
        }

        internal static DatadogAgreementProperties DeserializeDatadogAgreementProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> publisher = default;
            Optional<string> product = default;
            Optional<string> plan = default;
            Optional<string> licenseTextLink = default;
            Optional<string> privacyPolicyLink = default;
            Optional<DateTimeOffset> retrieveDatetime = default;
            Optional<string> signature = default;
            Optional<bool> accepted = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("publisher"u8))
                {
                    publisher = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("product"u8))
                {
                    product = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("plan"u8))
                {
                    plan = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("licenseTextLink"u8))
                {
                    licenseTextLink = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("privacyPolicyLink"u8))
                {
                    privacyPolicyLink = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("retrieveDatetime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    retrieveDatetime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("signature"u8))
                {
                    signature = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accepted"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    accepted = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DatadogAgreementProperties(publisher.Value, product.Value, plan.Value, licenseTextLink.Value, privacyPolicyLink.Value, Optional.ToNullable(retrieveDatetime), signature.Value, Optional.ToNullable(accepted));
        }
    }
}
