// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Datadog.Models
{
    public partial class MonitoringTagRulesProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(LogRules))
            {
                writer.WritePropertyName("logRules");
                writer.WriteObjectValue(LogRules);
            }
            if (Optional.IsDefined(MetricRules))
            {
                writer.WritePropertyName("metricRules");
                writer.WriteObjectValue(MetricRules);
            }
            writer.WriteEndObject();
        }

        internal static MonitoringTagRulesProperties DeserializeMonitoringTagRulesProperties(JsonElement element)
        {
            Optional<ProvisioningState> provisioningState = default;
            Optional<LogRules> logRules = default;
            Optional<MetricRules> metricRules = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("logRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    logRules = LogRules.DeserializeLogRules(property.Value);
                    continue;
                }
                if (property.NameEquals("metricRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    metricRules = MetricRules.DeserializeMetricRules(property.Value);
                    continue;
                }
            }
            return new MonitoringTagRulesProperties(Optional.ToNullable(provisioningState), logRules.Value, metricRules.Value);
        }
    }
}
