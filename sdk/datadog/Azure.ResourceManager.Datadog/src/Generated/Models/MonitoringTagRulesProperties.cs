// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Datadog.Models
{
    /// <summary> Definition of the properties for a TagRules resource. </summary>
    public partial class MonitoringTagRulesProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MonitoringTagRulesProperties"/>. </summary>
        public MonitoringTagRulesProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MonitoringTagRulesProperties"/>. </summary>
        /// <param name="provisioningState"></param>
        /// <param name="logRules"> Set of rules for sending logs for the Monitor resource. </param>
        /// <param name="metricRules"> Set of rules for sending metrics for the Monitor resource. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MonitoringTagRulesProperties(ProvisioningState? provisioningState, LogRules logRules, MetricRules metricRules, Dictionary<string, BinaryData> rawData)
        {
            ProvisioningState = provisioningState;
            LogRules = logRules;
            MetricRules = metricRules;
            _rawData = rawData;
        }

        /// <summary> Gets the provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Set of rules for sending logs for the Monitor resource. </summary>
        public LogRules LogRules { get; set; }
        /// <summary> Set of rules for sending metrics for the Monitor resource. </summary>
        internal MetricRules MetricRules { get; set; }
        /// <summary> List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags. </summary>
        public IList<FilteringTag> MetricRulesFilteringTags
        {
            get
            {
                if (MetricRules is null)
                    MetricRules = new MetricRules();
                return MetricRules.FilteringTags;
            }
        }
    }
}
