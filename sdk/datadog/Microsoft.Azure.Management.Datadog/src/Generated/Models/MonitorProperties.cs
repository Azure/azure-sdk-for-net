// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Datadog.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties specific to the monitor resource.
    /// </summary>
    public partial class MonitorProperties
    {
        /// <summary>
        /// Initializes a new instance of the MonitorProperties class.
        /// </summary>
        public MonitorProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MonitorProperties class.
        /// </summary>
        /// <param name="provisioningState">Possible values include:
        /// 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded',
        /// 'Failed', 'Canceled', 'Deleted', 'NotSpecified'</param>
        /// <param name="monitoringStatus">Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="marketplaceSubscriptionStatus">Possible values
        /// include: 'Provisioning', 'Active', 'Suspended',
        /// 'Unsubscribed'</param>
        /// <param name="liftrResourceCategory">Possible values include:
        /// 'Unknown', 'MonitorLogs'</param>
        /// <param name="liftrResourcePreference">The priority of the
        /// resource.</param>
        public MonitorProperties(string provisioningState = default(string), string monitoringStatus = default(string), string marketplaceSubscriptionStatus = default(string), DatadogOrganizationProperties datadogOrganizationProperties = default(DatadogOrganizationProperties), UserInfo userInfo = default(UserInfo), string liftrResourceCategory = default(string), int? liftrResourcePreference = default(int?))
        {
            ProvisioningState = provisioningState;
            MonitoringStatus = monitoringStatus;
            MarketplaceSubscriptionStatus = marketplaceSubscriptionStatus;
            DatadogOrganizationProperties = datadogOrganizationProperties;
            UserInfo = userInfo;
            LiftrResourceCategory = liftrResourceCategory;
            LiftrResourcePreference = liftrResourcePreference;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Accepted', 'Creating',
        /// 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled',
        /// 'Deleted', 'NotSpecified'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "monitoringStatus")]
        public string MonitoringStatus { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Provisioning', 'Active',
        /// 'Suspended', 'Unsubscribed'
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceSubscriptionStatus")]
        public string MarketplaceSubscriptionStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datadogOrganizationProperties")]
        public DatadogOrganizationProperties DatadogOrganizationProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userInfo")]
        public UserInfo UserInfo { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'MonitorLogs'
        /// </summary>
        [JsonProperty(PropertyName = "liftrResourceCategory")]
        public string LiftrResourceCategory { get; set; }

        /// <summary>
        /// Gets the priority of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "liftrResourcePreference")]
        public int? LiftrResourcePreference { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UserInfo != null)
            {
                UserInfo.Validate();
            }
        }
    }
}
