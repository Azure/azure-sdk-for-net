// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Support.Models
{
    public partial class ContactProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("firstName");
            writer.WriteStringValue(FirstName);
            writer.WritePropertyName("lastName");
            writer.WriteStringValue(LastName);
            writer.WritePropertyName("preferredContactMethod");
            writer.WriteStringValue(PreferredContactMethod.ToString());
            writer.WritePropertyName("primaryEmailAddress");
            writer.WriteStringValue(PrimaryEmailAddress);
            if (Optional.IsCollectionDefined(AdditionalEmailAddresses))
            {
                writer.WritePropertyName("additionalEmailAddresses");
                writer.WriteStartArray();
                foreach (var item in AdditionalEmailAddresses)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(PhoneNumber))
            {
                writer.WritePropertyName("phoneNumber");
                writer.WriteStringValue(PhoneNumber);
            }
            writer.WritePropertyName("preferredTimeZone");
            writer.WriteStringValue(PreferredTimeZone);
            writer.WritePropertyName("country");
            writer.WriteStringValue(Country);
            writer.WritePropertyName("preferredSupportLanguage");
            writer.WriteStringValue(PreferredSupportLanguage);
            writer.WriteEndObject();
        }

        internal static ContactProfile DeserializeContactProfile(JsonElement element)
        {
            string firstName = default;
            string lastName = default;
            PreferredContactMethod preferredContactMethod = default;
            string primaryEmailAddress = default;
            Optional<IList<string>> additionalEmailAddresses = default;
            Optional<string> phoneNumber = default;
            string preferredTimeZone = default;
            string country = default;
            string preferredSupportLanguage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("firstName"))
                {
                    firstName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastName"))
                {
                    lastName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("preferredContactMethod"))
                {
                    preferredContactMethod = new PreferredContactMethod(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("primaryEmailAddress"))
                {
                    primaryEmailAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("additionalEmailAddresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    additionalEmailAddresses = array;
                    continue;
                }
                if (property.NameEquals("phoneNumber"))
                {
                    phoneNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("preferredTimeZone"))
                {
                    preferredTimeZone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("preferredSupportLanguage"))
                {
                    preferredSupportLanguage = property.Value.GetString();
                    continue;
                }
            }
            return new ContactProfile(firstName, lastName, preferredContactMethod, primaryEmailAddress, Optional.ToList(additionalEmailAddresses), phoneNumber.Value, preferredTimeZone, country, preferredSupportLanguage);
        }
    }
}
