// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Support.Models;

namespace Azure.ResourceManager.Support
{
    public partial class SupportTicketData : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(SupportTicketId))
            {
                writer.WritePropertyName("supportTicketId"u8);
                writer.WriteStringValue(SupportTicketId);
            }
            if (Core.Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Core.Optional.IsDefined(ProblemClassificationId))
            {
                writer.WritePropertyName("problemClassificationId"u8);
                writer.WriteStringValue(ProblemClassificationId);
            }
            if (Core.Optional.IsDefined(Severity))
            {
                writer.WritePropertyName("severity"u8);
                writer.WriteStringValue(Severity.Value.ToString());
            }
            if (Core.Optional.IsDefined(Require24X7Response))
            {
                writer.WritePropertyName("require24X7Response"u8);
                writer.WriteBooleanValue(Require24X7Response.Value);
            }
            if (Core.Optional.IsDefined(ContactDetails))
            {
                writer.WritePropertyName("contactDetails"u8);
                writer.WriteObjectValue(ContactDetails);
            }
            if (Core.Optional.IsDefined(ServiceLevelAgreement))
            {
                writer.WritePropertyName("serviceLevelAgreement"u8);
                writer.WriteObjectValue(ServiceLevelAgreement);
            }
            if (Core.Optional.IsDefined(SupportEngineer))
            {
                writer.WritePropertyName("supportEngineer"u8);
                writer.WriteObjectValue(SupportEngineer);
            }
            if (Core.Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title"u8);
                writer.WriteStringValue(Title);
            }
            if (Core.Optional.IsDefined(ProblemStartOn))
            {
                writer.WritePropertyName("problemStartTime"u8);
                writer.WriteStringValue(ProblemStartOn.Value, "O");
            }
            if (Core.Optional.IsDefined(ServiceId))
            {
                writer.WritePropertyName("serviceId"u8);
                writer.WriteStringValue(ServiceId);
            }
            if (Core.Optional.IsDefined(TechnicalTicketDetails))
            {
                writer.WritePropertyName("technicalTicketDetails"u8);
                writer.WriteObjectValue(TechnicalTicketDetails);
            }
            if (Core.Optional.IsDefined(QuotaTicketDetails))
            {
                writer.WritePropertyName("quotaTicketDetails"u8);
                writer.WriteObjectValue(QuotaTicketDetails);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static SupportTicketData DeserializeSupportTicketData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Core.Optional<SystemData> systemData = default;
            Core.Optional<string> supportTicketId = default;
            Core.Optional<string> description = default;
            Core.Optional<string> problemClassificationId = default;
            Core.Optional<string> problemClassificationDisplayName = default;
            Core.Optional<SupportSeverityLevel> severity = default;
            Core.Optional<string> enrollmentId = default;
            Core.Optional<bool> require24X7Response = default;
            Core.Optional<SupportContactProfile> contactDetails = default;
            Core.Optional<SupportServiceLevelAgreement> serviceLevelAgreement = default;
            Core.Optional<SupportEngineer> supportEngineer = default;
            Core.Optional<string> supportPlanType = default;
            Core.Optional<string> title = default;
            Core.Optional<DateTimeOffset> problemStartTime = default;
            Core.Optional<string> serviceId = default;
            Core.Optional<string> serviceDisplayName = default;
            Core.Optional<string> status = default;
            Core.Optional<DateTimeOffset> createdDate = default;
            Core.Optional<DateTimeOffset> modifiedDate = default;
            Core.Optional<TechnicalTicketDetails> technicalTicketDetails = default;
            Core.Optional<QuotaTicketDetails> quotaTicketDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("supportTicketId"u8))
                        {
                            supportTicketId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("description"u8))
                        {
                            description = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("problemClassificationId"u8))
                        {
                            problemClassificationId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("problemClassificationDisplayName"u8))
                        {
                            problemClassificationDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("severity"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            severity = new SupportSeverityLevel(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("enrollmentId"u8))
                        {
                            enrollmentId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("require24X7Response"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            require24X7Response = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("contactDetails"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            contactDetails = SupportContactProfile.DeserializeSupportContactProfile(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("serviceLevelAgreement"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            serviceLevelAgreement = SupportServiceLevelAgreement.DeserializeSupportServiceLevelAgreement(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("supportEngineer"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            supportEngineer = SupportEngineer.DeserializeSupportEngineer(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("supportPlanType"u8))
                        {
                            supportPlanType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("title"u8))
                        {
                            title = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("problemStartTime"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            problemStartTime = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("serviceId"u8))
                        {
                            serviceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serviceDisplayName"u8))
                        {
                            serviceDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("status"u8))
                        {
                            status = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("createdDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            createdDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("modifiedDate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            modifiedDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("technicalTicketDetails"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            technicalTicketDetails = TechnicalTicketDetails.DeserializeTechnicalTicketDetails(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("quotaTicketDetails"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            quotaTicketDetails = QuotaTicketDetails.DeserializeQuotaTicketDetails(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new SupportTicketData(id, name, type, systemData.Value, supportTicketId.Value, description.Value, problemClassificationId.Value, problemClassificationDisplayName.Value, Core.Optional.ToNullable(severity), enrollmentId.Value, Core.Optional.ToNullable(require24X7Response), contactDetails.Value, serviceLevelAgreement.Value, supportEngineer.Value, supportPlanType.Value, title.Value, Core.Optional.ToNullable(problemStartTime), serviceId.Value, serviceDisplayName.Value, status.Value, Core.Optional.ToNullable(createdDate), Core.Optional.ToNullable(modifiedDate), technicalTicketDetails.Value, quotaTicketDetails.Value);
        }
    }
}
