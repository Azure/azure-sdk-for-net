// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Support
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SupportTicketsOperations.
    /// </summary>
    public static partial class SupportTicketsOperationsExtensions
    {
            /// <summary>
            /// Check the availability of a resource name. This API should be used to check
            /// the uniqueness of the name for support ticket creation for the selected
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='checkNameAvailabilityInput'>
            /// Input to check.
            /// </param>
            public static CheckNameAvailabilityOutput CheckNameAvailability(this ISupportTicketsOperations operations, CheckNameAvailabilityInput checkNameAvailabilityInput)
            {
                return operations.CheckNameAvailabilityAsync(checkNameAvailabilityInput).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check the availability of a resource name. This API should be used to check
            /// the uniqueness of the name for support ticket creation for the selected
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='checkNameAvailabilityInput'>
            /// Input to check.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckNameAvailabilityOutput> CheckNameAvailabilityAsync(this ISupportTicketsOperations operations, CheckNameAvailabilityInput checkNameAvailabilityInput, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(checkNameAvailabilityInput, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all the support tickets for an Azure subscription. You can also
            /// filter the support tickets by _Status_ or _CreatedDate_ using the $filter
            /// parameter. Output will be a paged result with _nextLink_, using which you
            /// can retrieve the next set of support tickets. &lt;br/&gt;&lt;br/&gt;Support
            /// ticket data is available for 12 months after ticket creation. If a ticket
            /// was created more than 12 months ago, a request for data might cause an
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='top'>
            /// The number of values to return in the collection. Default is 25 and max is
            /// 100.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation. We support 'odata v4.0' filter
            /// semantics. [Learn
            /// more](https://docs.microsoft.com/odata/concepts/queryoptions-overview).
            /// _Status_ filter can only be used with Equals ('eq') operator. For
            /// _CreatedDate_ filter, the supported operators are Greater Than ('gt') and
            /// Greater Than or Equals ('ge'). When using both filters, combine them using
            /// the logical 'AND'.
            /// </param>
            public static IPage<SupportTicketDetails> List(this ISupportTicketsOperations operations, int? top = default(int?), string filter = default(string))
            {
                return operations.ListAsync(top, filter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the support tickets for an Azure subscription. You can also
            /// filter the support tickets by _Status_ or _CreatedDate_ using the $filter
            /// parameter. Output will be a paged result with _nextLink_, using which you
            /// can retrieve the next set of support tickets. &lt;br/&gt;&lt;br/&gt;Support
            /// ticket data is available for 12 months after ticket creation. If a ticket
            /// was created more than 12 months ago, a request for data might cause an
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='top'>
            /// The number of values to return in the collection. Default is 25 and max is
            /// 100.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation. We support 'odata v4.0' filter
            /// semantics. [Learn
            /// more](https://docs.microsoft.com/odata/concepts/queryoptions-overview).
            /// _Status_ filter can only be used with Equals ('eq') operator. For
            /// _CreatedDate_ filter, the supported operators are Greater Than ('gt') and
            /// Greater Than or Equals ('ge'). When using both filters, combine them using
            /// the logical 'AND'.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SupportTicketDetails>> ListAsync(this ISupportTicketsOperations operations, int? top = default(int?), string filter = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(top, filter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get ticket details for an Azure subscription. Support ticket data is
            /// available for 12 months after ticket creation. If a ticket was created more
            /// than 12 months ago, a request for data might cause an error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            public static SupportTicketDetails Get(this ISupportTicketsOperations operations, string supportTicketName)
            {
                return operations.GetAsync(supportTicketName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get ticket details for an Azure subscription. Support ticket data is
            /// available for 12 months after ticket creation. If a ticket was created more
            /// than 12 months ago, a request for data might cause an error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportTicketDetails> GetAsync(this ISupportTicketsOperations operations, string supportTicketName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(supportTicketName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// This API allows you to update the severity level, ticket status, and your
            /// contact information in the support ticket.&lt;br/&gt;&lt;br/&gt;Note: The
            /// severity levels cannot be changed if a support ticket is actively being
            /// worked upon by an Azure support engineer. In such a case, contact your
            /// support engineer to request severity update by adding a new communication
            /// using the Communications API.&lt;br/&gt;&lt;br/&gt;Changing the ticket
            /// status to _closed_ is allowed only on an unassigned case. When an engineer
            /// is actively working on the ticket, send your ticket closure request by
            /// sending a note to your engineer.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='updateSupportTicket'>
            /// UpdateSupportTicket object.
            /// </param>
            public static SupportTicketDetails Update(this ISupportTicketsOperations operations, string supportTicketName, UpdateSupportTicket updateSupportTicket)
            {
                return operations.UpdateAsync(supportTicketName, updateSupportTicket).GetAwaiter().GetResult();
            }

            /// <summary>
            /// This API allows you to update the severity level, ticket status, and your
            /// contact information in the support ticket.&lt;br/&gt;&lt;br/&gt;Note: The
            /// severity levels cannot be changed if a support ticket is actively being
            /// worked upon by an Azure support engineer. In such a case, contact your
            /// support engineer to request severity update by adding a new communication
            /// using the Communications API.&lt;br/&gt;&lt;br/&gt;Changing the ticket
            /// status to _closed_ is allowed only on an unassigned case. When an engineer
            /// is actively working on the ticket, send your ticket closure request by
            /// sending a note to your engineer.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='updateSupportTicket'>
            /// UpdateSupportTicket object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportTicketDetails> UpdateAsync(this ISupportTicketsOperations operations, string supportTicketName, UpdateSupportTicket updateSupportTicket, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(supportTicketName, updateSupportTicket, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a new support ticket for Subscription and Service limits (Quota),
            /// Technical, Billing, and Subscription Management issues for the specified
            /// subscription. Learn the [prerequisites](https://aka.ms/supportAPI) required
            /// to create a support ticket.&lt;br/&gt;&lt;br/&gt;Always call the Services
            /// and ProblemClassifications API to get the most recent set of services and
            /// problem categories required for support ticket
            /// creation.&lt;br/&gt;&lt;br/&gt;Adding attachments is not currently
            /// supported via the API. To add a file to an existing support ticket, visit
            /// the [Manage support
            /// ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)
            /// page in the Azure portal, select the support ticket, and use the file
            /// upload control to add a new file.&lt;br/&gt;&lt;br/&gt;Providing consent to
            /// share diagnostic information with Azure support is currently not supported
            /// via the API. The Azure support engineer working on your ticket will reach
            /// out to you for consent if your issue requires gathering diagnostic
            /// information from your Azure resources.&lt;br/&gt;&lt;br/&gt;**Creating a
            /// support ticket for on-behalf-of**: Include _x-ms-authorization-auxiliary_
            /// header to provide an auxiliary token as per
            /// [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).
            /// The primary token will be from the tenant for whom a support ticket is
            /// being raised against the subscription, i.e. Cloud solution provider (CSP)
            /// customer tenant. The auxiliary token will be from the Cloud solution
            /// provider (CSP) partner tenant.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='createSupportTicketParameters'>
            /// Support ticket request payload.
            /// </param>
            public static SupportTicketDetails Create(this ISupportTicketsOperations operations, string supportTicketName, SupportTicketDetails createSupportTicketParameters)
            {
                return operations.CreateAsync(supportTicketName, createSupportTicketParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new support ticket for Subscription and Service limits (Quota),
            /// Technical, Billing, and Subscription Management issues for the specified
            /// subscription. Learn the [prerequisites](https://aka.ms/supportAPI) required
            /// to create a support ticket.&lt;br/&gt;&lt;br/&gt;Always call the Services
            /// and ProblemClassifications API to get the most recent set of services and
            /// problem categories required for support ticket
            /// creation.&lt;br/&gt;&lt;br/&gt;Adding attachments is not currently
            /// supported via the API. To add a file to an existing support ticket, visit
            /// the [Manage support
            /// ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)
            /// page in the Azure portal, select the support ticket, and use the file
            /// upload control to add a new file.&lt;br/&gt;&lt;br/&gt;Providing consent to
            /// share diagnostic information with Azure support is currently not supported
            /// via the API. The Azure support engineer working on your ticket will reach
            /// out to you for consent if your issue requires gathering diagnostic
            /// information from your Azure resources.&lt;br/&gt;&lt;br/&gt;**Creating a
            /// support ticket for on-behalf-of**: Include _x-ms-authorization-auxiliary_
            /// header to provide an auxiliary token as per
            /// [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).
            /// The primary token will be from the tenant for whom a support ticket is
            /// being raised against the subscription, i.e. Cloud solution provider (CSP)
            /// customer tenant. The auxiliary token will be from the Cloud solution
            /// provider (CSP) partner tenant.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='createSupportTicketParameters'>
            /// Support ticket request payload.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportTicketDetails> CreateAsync(this ISupportTicketsOperations operations, string supportTicketName, SupportTicketDetails createSupportTicketParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(supportTicketName, createSupportTicketParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a new support ticket for Subscription and Service limits (Quota),
            /// Technical, Billing, and Subscription Management issues for the specified
            /// subscription. Learn the [prerequisites](https://aka.ms/supportAPI) required
            /// to create a support ticket.&lt;br/&gt;&lt;br/&gt;Always call the Services
            /// and ProblemClassifications API to get the most recent set of services and
            /// problem categories required for support ticket
            /// creation.&lt;br/&gt;&lt;br/&gt;Adding attachments is not currently
            /// supported via the API. To add a file to an existing support ticket, visit
            /// the [Manage support
            /// ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)
            /// page in the Azure portal, select the support ticket, and use the file
            /// upload control to add a new file.&lt;br/&gt;&lt;br/&gt;Providing consent to
            /// share diagnostic information with Azure support is currently not supported
            /// via the API. The Azure support engineer working on your ticket will reach
            /// out to you for consent if your issue requires gathering diagnostic
            /// information from your Azure resources.&lt;br/&gt;&lt;br/&gt;**Creating a
            /// support ticket for on-behalf-of**: Include _x-ms-authorization-auxiliary_
            /// header to provide an auxiliary token as per
            /// [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).
            /// The primary token will be from the tenant for whom a support ticket is
            /// being raised against the subscription, i.e. Cloud solution provider (CSP)
            /// customer tenant. The auxiliary token will be from the Cloud solution
            /// provider (CSP) partner tenant.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='createSupportTicketParameters'>
            /// Support ticket request payload.
            /// </param>
            public static SupportTicketDetails BeginCreate(this ISupportTicketsOperations operations, string supportTicketName, SupportTicketDetails createSupportTicketParameters)
            {
                return operations.BeginCreateAsync(supportTicketName, createSupportTicketParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new support ticket for Subscription and Service limits (Quota),
            /// Technical, Billing, and Subscription Management issues for the specified
            /// subscription. Learn the [prerequisites](https://aka.ms/supportAPI) required
            /// to create a support ticket.&lt;br/&gt;&lt;br/&gt;Always call the Services
            /// and ProblemClassifications API to get the most recent set of services and
            /// problem categories required for support ticket
            /// creation.&lt;br/&gt;&lt;br/&gt;Adding attachments is not currently
            /// supported via the API. To add a file to an existing support ticket, visit
            /// the [Manage support
            /// ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)
            /// page in the Azure portal, select the support ticket, and use the file
            /// upload control to add a new file.&lt;br/&gt;&lt;br/&gt;Providing consent to
            /// share diagnostic information with Azure support is currently not supported
            /// via the API. The Azure support engineer working on your ticket will reach
            /// out to you for consent if your issue requires gathering diagnostic
            /// information from your Azure resources.&lt;br/&gt;&lt;br/&gt;**Creating a
            /// support ticket for on-behalf-of**: Include _x-ms-authorization-auxiliary_
            /// header to provide an auxiliary token as per
            /// [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).
            /// The primary token will be from the tenant for whom a support ticket is
            /// being raised against the subscription, i.e. Cloud solution provider (CSP)
            /// customer tenant. The auxiliary token will be from the Cloud solution
            /// provider (CSP) partner tenant.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='supportTicketName'>
            /// Support ticket name.
            /// </param>
            /// <param name='createSupportTicketParameters'>
            /// Support ticket request payload.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportTicketDetails> BeginCreateAsync(this ISupportTicketsOperations operations, string supportTicketName, SupportTicketDetails createSupportTicketParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(supportTicketName, createSupportTicketParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all the support tickets for an Azure subscription. You can also
            /// filter the support tickets by _Status_ or _CreatedDate_ using the $filter
            /// parameter. Output will be a paged result with _nextLink_, using which you
            /// can retrieve the next set of support tickets. &lt;br/&gt;&lt;br/&gt;Support
            /// ticket data is available for 12 months after ticket creation. If a ticket
            /// was created more than 12 months ago, a request for data might cause an
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SupportTicketDetails> ListNext(this ISupportTicketsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the support tickets for an Azure subscription. You can also
            /// filter the support tickets by _Status_ or _CreatedDate_ using the $filter
            /// parameter. Output will be a paged result with _nextLink_, using which you
            /// can retrieve the next set of support tickets. &lt;br/&gt;&lt;br/&gt;Support
            /// ticket data is available for 12 months after ticket creation. If a ticket
            /// was created more than 12 months ago, a request for data might cause an
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SupportTicketDetails>> ListNextAsync(this ISupportTicketsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
