// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Support
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// SupportTicketsOperations operations.
    /// </summary>
    public partial interface ISupportTicketsOperations
    {
        /// <summary>
        /// Check the availability of a resource name. This API should be used
        /// to check the uniqueness of the name for support ticket creation for
        /// the selected subscription.
        /// </summary>
        /// <param name='checkNameAvailabilityInput'>
        /// Input to check.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CheckNameAvailabilityOutput>> CheckNameAvailabilityWithHttpMessagesAsync(CheckNameAvailabilityInput checkNameAvailabilityInput, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all the support tickets for an Azure subscription. You can
        /// also filter the support tickets by _Status_ or _CreatedDate_ using
        /// the $filter parameter. Output will be a paged result with
        /// _nextLink_, using which you can retrieve the next set of support
        /// tickets. &lt;br/&gt;&lt;br/&gt;Support ticket data is available for
        /// 12 months after ticket creation. If a ticket was created more than
        /// 12 months ago, a request for data might cause an error.
        /// </summary>
        /// <param name='top'>
        /// The number of values to return in the collection. Default is 25 and
        /// max is 100.
        /// </param>
        /// <param name='filter'>
        /// The filter to apply on the operation. We support 'odata v4.0'
        /// filter semantics. [Learn
        /// more](https://docs.microsoft.com/odata/concepts/queryoptions-overview).
        /// _Status_ filter can only be used with Equals ('eq') operator. For
        /// _CreatedDate_ filter, the supported operators are Greater Than
        /// ('gt') and Greater Than or Equals ('ge'). When using both filters,
        /// combine them using the logical 'AND'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<SupportTicketDetails>>> ListWithHttpMessagesAsync(int? top = default(int?), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get ticket details for an Azure subscription. Support ticket data
        /// is available for 12 months after ticket creation. If a ticket was
        /// created more than 12 months ago, a request for data might cause an
        /// error.
        /// </summary>
        /// <param name='supportTicketName'>
        /// Support ticket name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<SupportTicketDetails>> GetWithHttpMessagesAsync(string supportTicketName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// This API allows you to update the severity level, ticket status,
        /// and your contact information in the support
        /// ticket.&lt;br/&gt;&lt;br/&gt;Note: The severity levels cannot be
        /// changed if a support ticket is actively being worked upon by an
        /// Azure support engineer. In such a case, contact your support
        /// engineer to request severity update by adding a new communication
        /// using the Communications API.&lt;br/&gt;&lt;br/&gt;Changing the
        /// ticket status to _closed_ is allowed only on an unassigned case.
        /// When an engineer is actively working on the ticket, send your
        /// ticket closure request by sending a note to your engineer.
        /// </summary>
        /// <param name='supportTicketName'>
        /// Support ticket name.
        /// </param>
        /// <param name='updateSupportTicket'>
        /// UpdateSupportTicket object.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<SupportTicketDetails>> UpdateWithHttpMessagesAsync(string supportTicketName, UpdateSupportTicket updateSupportTicket, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new support ticket for Subscription and Service limits
        /// (Quota), Technical, Billing, and Subscription Management issues for
        /// the specified subscription. Learn the
        /// [prerequisites](https://aka.ms/supportAPI) required to create a
        /// support ticket.&lt;br/&gt;&lt;br/&gt;Always call the Services and
        /// ProblemClassifications API to get the most recent set of services
        /// and problem categories required for support ticket
        /// creation.&lt;br/&gt;&lt;br/&gt;Adding attachments is not currently
        /// supported via the API. To add a file to an existing support ticket,
        /// visit the [Manage support
        /// ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)
        /// page in the Azure portal, select the support ticket, and use the
        /// file upload control to add a new
        /// file.&lt;br/&gt;&lt;br/&gt;Providing consent to share diagnostic
        /// information with Azure support is currently not supported via the
        /// API. The Azure support engineer working on your ticket will reach
        /// out to you for consent if your issue requires gathering diagnostic
        /// information from your Azure
        /// resources.&lt;br/&gt;&lt;br/&gt;**Creating a support ticket for
        /// on-behalf-of**: Include _x-ms-authorization-auxiliary_ header to
        /// provide an auxiliary token as per
        /// [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).
        /// The primary token will be from the tenant for whom a support ticket
        /// is being raised against the subscription, i.e. Cloud solution
        /// provider (CSP) customer tenant. The auxiliary token will be from
        /// the Cloud solution provider (CSP) partner tenant.
        /// </summary>
        /// <param name='supportTicketName'>
        /// Support ticket name.
        /// </param>
        /// <param name='createSupportTicketParameters'>
        /// Support ticket request payload.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<SupportTicketDetails>> CreateWithHttpMessagesAsync(string supportTicketName, SupportTicketDetails createSupportTicketParameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new support ticket for Subscription and Service limits
        /// (Quota), Technical, Billing, and Subscription Management issues for
        /// the specified subscription. Learn the
        /// [prerequisites](https://aka.ms/supportAPI) required to create a
        /// support ticket.&lt;br/&gt;&lt;br/&gt;Always call the Services and
        /// ProblemClassifications API to get the most recent set of services
        /// and problem categories required for support ticket
        /// creation.&lt;br/&gt;&lt;br/&gt;Adding attachments is not currently
        /// supported via the API. To add a file to an existing support ticket,
        /// visit the [Manage support
        /// ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)
        /// page in the Azure portal, select the support ticket, and use the
        /// file upload control to add a new
        /// file.&lt;br/&gt;&lt;br/&gt;Providing consent to share diagnostic
        /// information with Azure support is currently not supported via the
        /// API. The Azure support engineer working on your ticket will reach
        /// out to you for consent if your issue requires gathering diagnostic
        /// information from your Azure
        /// resources.&lt;br/&gt;&lt;br/&gt;**Creating a support ticket for
        /// on-behalf-of**: Include _x-ms-authorization-auxiliary_ header to
        /// provide an auxiliary token as per
        /// [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).
        /// The primary token will be from the tenant for whom a support ticket
        /// is being raised against the subscription, i.e. Cloud solution
        /// provider (CSP) customer tenant. The auxiliary token will be from
        /// the Cloud solution provider (CSP) partner tenant.
        /// </summary>
        /// <param name='supportTicketName'>
        /// Support ticket name.
        /// </param>
        /// <param name='createSupportTicketParameters'>
        /// Support ticket request payload.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<SupportTicketDetails>> BeginCreateWithHttpMessagesAsync(string supportTicketName, SupportTicketDetails createSupportTicketParameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all the support tickets for an Azure subscription. You can
        /// also filter the support tickets by _Status_ or _CreatedDate_ using
        /// the $filter parameter. Output will be a paged result with
        /// _nextLink_, using which you can retrieve the next set of support
        /// tickets. &lt;br/&gt;&lt;br/&gt;Support ticket data is available for
        /// 12 months after ticket creation. If a ticket was created more than
        /// 12 months ago, a request for data might cause an error.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<SupportTicketDetails>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
