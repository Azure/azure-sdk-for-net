// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.RecoveryServicesDataReplication.Models;

namespace Azure.ResourceManager.RecoveryServicesDataReplication
{
    /// <summary>
    /// A class representing the EventModel data model.
    /// Event model.
    /// </summary>
    public partial class EventModelData : ResourceData
    {
        /// <summary> Initializes a new instance of EventModelData. </summary>
        /// <param name="properties"> Event model properties. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="properties"/> is null. </exception>
        internal EventModelData(EventModelProperties properties)
        {
            Argument.AssertNotNull(properties, nameof(properties));

            Properties = properties;
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of EventModelData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Event model properties. </param>
        /// <param name="tags"> Gets or sets the resource tags. </param>
        internal EventModelData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, EventModelProperties properties, IReadOnlyDictionary<string, string> tags) : base(id, name, resourceType, systemData)
        {
            Properties = properties;
            Tags = tags;
        }

        /// <summary> Event model properties. </summary>
        public EventModelProperties Properties { get; }
        /// <summary> Gets or sets the resource tags. </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
    }
}
