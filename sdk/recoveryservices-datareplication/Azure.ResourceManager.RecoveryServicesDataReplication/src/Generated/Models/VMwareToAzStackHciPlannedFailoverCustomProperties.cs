// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> VMware to AzStackHCI planned failover model custom properties. </summary>
    public partial class VMwareToAzStackHciPlannedFailoverCustomProperties : PlannedFailoverCustomProperties
    {
        /// <summary> Initializes a new instance of <see cref="VMwareToAzStackHciPlannedFailoverCustomProperties"/>. </summary>
        /// <param name="shutdownSourceVm"> Gets or sets a value indicating whether VM needs to be shut down. </param>
        public VMwareToAzStackHciPlannedFailoverCustomProperties(bool shutdownSourceVm)
        {
            ShutdownSourceVm = shutdownSourceVm;
            InstanceType = "VMwareToAzStackHCI";
        }

        /// <summary> Initializes a new instance of <see cref="VMwareToAzStackHciPlannedFailoverCustomProperties"/>. </summary>
        /// <param name="instanceType"> Discriminator property for PlannedFailoverCustomProperties. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="shutdownSourceVm"> Gets or sets a value indicating whether VM needs to be shut down. </param>
        internal VMwareToAzStackHciPlannedFailoverCustomProperties(string instanceType, IDictionary<string, BinaryData> serializedAdditionalRawData, bool shutdownSourceVm) : base(instanceType, serializedAdditionalRawData)
        {
            ShutdownSourceVm = shutdownSourceVm;
            InstanceType = instanceType ?? "VMwareToAzStackHCI";
        }

        /// <summary> Initializes a new instance of <see cref="VMwareToAzStackHciPlannedFailoverCustomProperties"/> for deserialization. </summary>
        internal VMwareToAzStackHciPlannedFailoverCustomProperties()
        {
        }

        /// <summary> Gets or sets a value indicating whether VM needs to be shut down. </summary>
        public bool ShutdownSourceVm { get; set; }
    }
}
