// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.RecoveryServicesDataReplication;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> Represents private link resource properties. </summary>
    public partial class DataReplicationPrivateLinkResourceProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DataReplicationPrivateLinkResourceProperties"/>. </summary>
        internal DataReplicationPrivateLinkResourceProperties()
        {
            RequiredMembers = new ChangeTrackingList<string>();
            RequiredZoneNames = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="DataReplicationPrivateLinkResourceProperties"/>. </summary>
        /// <param name="groupId"> Gets or sets the group id. </param>
        /// <param name="requiredMembers"> Gets or sets the required member. This translates to how many Private IPs should be created for each privately linkable resource. </param>
        /// <param name="requiredZoneNames"> Gets or sets the private DNS zone names. </param>
        /// <param name="provisioningState"> Gets or sets the provisioning state of the private link resource. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DataReplicationPrivateLinkResourceProperties(string groupId, IList<string> requiredMembers, IList<string> requiredZoneNames, DataReplicationProvisioningState? provisioningState, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            GroupId = groupId;
            RequiredMembers = requiredMembers;
            RequiredZoneNames = requiredZoneNames;
            ProvisioningState = provisioningState;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the group id. </summary>
        public string GroupId { get; }

        /// <summary> Gets or sets the required member. This translates to how many Private IPs should be created for each privately linkable resource. </summary>
        public IList<string> RequiredMembers { get; }

        /// <summary> Gets or sets the private DNS zone names. </summary>
        public IList<string> RequiredZoneNames { get; }

        /// <summary> Gets or sets the provisioning state of the private link resource. </summary>
        public DataReplicationProvisioningState? ProvisioningState { get; }
    }
}
