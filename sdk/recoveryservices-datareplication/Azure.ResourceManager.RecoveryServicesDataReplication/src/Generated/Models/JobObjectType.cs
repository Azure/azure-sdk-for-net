// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> Gets or sets the object type. </summary>
    public readonly partial struct JobObjectType : IEquatable<JobObjectType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="JobObjectType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public JobObjectType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AvsDiskPoolValue = "AvsDiskPool";
        private const string FabricAgentValue = "FabricAgent";
        private const string FabricValue = "Fabric";
        private const string PolicyValue = "Policy";
        private const string ProtectedItemValue = "ProtectedItem";
        private const string RecoveryPlanValue = "RecoveryPlan";
        private const string ReplicationExtensionValue = "ReplicationExtension";
        private const string VaultValue = "Vault";

        /// <summary> AVS disk pool. </summary>
        public static JobObjectType AvsDiskPool { get; } = new JobObjectType(AvsDiskPoolValue);
        /// <summary> Fabric agent level workflow. </summary>
        public static JobObjectType FabricAgent { get; } = new JobObjectType(FabricAgentValue);
        /// <summary> Fabric level job. </summary>
        public static JobObjectType Fabric { get; } = new JobObjectType(FabricValue);
        /// <summary> Policy level job. </summary>
        public static JobObjectType Policy { get; } = new JobObjectType(PolicyValue);
        /// <summary> Protected item level job. </summary>
        public static JobObjectType ProtectedItem { get; } = new JobObjectType(ProtectedItemValue);
        /// <summary> Recovery plan level job. </summary>
        public static JobObjectType RecoveryPlan { get; } = new JobObjectType(RecoveryPlanValue);
        /// <summary> Replication extension level job. </summary>
        public static JobObjectType ReplicationExtension { get; } = new JobObjectType(ReplicationExtensionValue);
        /// <summary> Vault level job. </summary>
        public static JobObjectType Vault { get; } = new JobObjectType(VaultValue);
        /// <summary> Determines if two <see cref="JobObjectType"/> values are the same. </summary>
        public static bool operator ==(JobObjectType left, JobObjectType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="JobObjectType"/> values are not the same. </summary>
        public static bool operator !=(JobObjectType left, JobObjectType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="JobObjectType"/>. </summary>
        public static implicit operator JobObjectType(string value) => new JobObjectType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is JobObjectType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(JobObjectType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
