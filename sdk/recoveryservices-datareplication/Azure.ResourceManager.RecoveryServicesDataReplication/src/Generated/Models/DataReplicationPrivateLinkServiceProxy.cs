// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.RecoveryServicesDataReplication;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> Represents NRP private link service proxy. </summary>
    public partial class DataReplicationPrivateLinkServiceProxy
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DataReplicationPrivateLinkServiceProxy"/>. </summary>
        public DataReplicationPrivateLinkServiceProxy()
        {
            GroupConnectivityInformation = new ChangeTrackingList<GroupConnectivityInformation>();
        }

        /// <summary> Initializes a new instance of <see cref="DataReplicationPrivateLinkServiceProxy"/>. </summary>
        /// <param name="id"> Gets or sets private link service proxy id. </param>
        /// <param name="remotePrivateLinkServiceConnectionState"> Represents Private link service connection state. </param>
        /// <param name="remotePrivateEndpointConnection"> Represent remote private endpoint connection. </param>
        /// <param name="groupConnectivityInformation"> Gets or sets group connectivity information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DataReplicationPrivateLinkServiceProxy(string id, DataReplicationPrivateLinkServiceConnectionState remotePrivateLinkServiceConnectionState, RemotePrivateEndpointConnection remotePrivateEndpointConnection, IList<GroupConnectivityInformation> groupConnectivityInformation, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            RemotePrivateLinkServiceConnectionState = remotePrivateLinkServiceConnectionState;
            RemotePrivateEndpointConnection = remotePrivateEndpointConnection;
            GroupConnectivityInformation = groupConnectivityInformation;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets private link service proxy id. </summary>
        public string Id { get; set; }

        /// <summary> Represents Private link service connection state. </summary>
        public DataReplicationPrivateLinkServiceConnectionState RemotePrivateLinkServiceConnectionState { get; set; }

        /// <summary> Represent remote private endpoint connection. </summary>
        internal RemotePrivateEndpointConnection RemotePrivateEndpointConnection { get; set; }

        /// <summary> Gets or sets group connectivity information. </summary>
        public IList<GroupConnectivityInformation> GroupConnectivityInformation { get; }

        /// <summary> Gets or sets the remote private endpoint connection id. </summary>
        public string RemotePrivateEndpointConnectionId
        {
            get
            {
                return RemotePrivateEndpointConnection is null ? default : RemotePrivateEndpointConnection.Id;
            }
            set
            {
                if (RemotePrivateEndpointConnection is null)
                {
                    RemotePrivateEndpointConnection = new RemotePrivateEndpointConnection();
                }
                RemotePrivateEndpointConnection.Id = value;
            }
        }
    }
}
