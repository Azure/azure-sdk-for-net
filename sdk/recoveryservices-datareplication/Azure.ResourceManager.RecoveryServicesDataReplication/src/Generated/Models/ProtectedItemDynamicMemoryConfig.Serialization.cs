// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    public partial class ProtectedItemDynamicMemoryConfig : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("maximumMemoryInMegaBytes"u8);
            writer.WriteNumberValue(MaximumMemoryInMegaBytes);
            writer.WritePropertyName("minimumMemoryInMegaBytes"u8);
            writer.WriteNumberValue(MinimumMemoryInMegaBytes);
            writer.WritePropertyName("targetMemoryBufferPercentage"u8);
            writer.WriteNumberValue(TargetMemoryBufferPercentage);
            writer.WriteEndObject();
        }

        internal static ProtectedItemDynamicMemoryConfig DeserializeProtectedItemDynamicMemoryConfig(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            long maximumMemoryInMegaBytes = default;
            long minimumMemoryInMegaBytes = default;
            int targetMemoryBufferPercentage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maximumMemoryInMegaBytes"u8))
                {
                    maximumMemoryInMegaBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("minimumMemoryInMegaBytes"u8))
                {
                    minimumMemoryInMegaBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("targetMemoryBufferPercentage"u8))
                {
                    targetMemoryBufferPercentage = property.Value.GetInt32();
                    continue;
                }
            }
            return new ProtectedItemDynamicMemoryConfig(maximumMemoryInMegaBytes, minimumMemoryInMegaBytes, targetMemoryBufferPercentage);
        }
    }
}
