// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> Gets or sets the instance type. </summary>
    internal readonly partial struct WorkflowDetailsType : IEquatable<WorkflowDetailsType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="WorkflowDetailsType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public WorkflowDetailsType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string WorkflowDetailsValue = "WorkflowDetails";
        private const string FailoverWorkflowDetailsValue = "FailoverWorkflowDetails";
        private const string TestFailoverWorkflowDetailsValue = "TestFailoverWorkflowDetails";
        private const string TestFailoverCleanupWorkflowDetailsValue = "TestFailoverCleanupWorkflowDetails";

        /// <summary> WorkflowDetails. </summary>
        public static WorkflowDetailsType WorkflowDetails { get; } = new WorkflowDetailsType(WorkflowDetailsValue);
        /// <summary> FailoverWorkflowDetails. </summary>
        public static WorkflowDetailsType FailoverWorkflowDetails { get; } = new WorkflowDetailsType(FailoverWorkflowDetailsValue);
        /// <summary> TestFailoverWorkflowDetails. </summary>
        public static WorkflowDetailsType TestFailoverWorkflowDetails { get; } = new WorkflowDetailsType(TestFailoverWorkflowDetailsValue);
        /// <summary> TestFailoverCleanupWorkflowDetails. </summary>
        public static WorkflowDetailsType TestFailoverCleanupWorkflowDetails { get; } = new WorkflowDetailsType(TestFailoverCleanupWorkflowDetailsValue);
        /// <summary> Determines if two <see cref="WorkflowDetailsType"/> values are the same. </summary>
        public static bool operator ==(WorkflowDetailsType left, WorkflowDetailsType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="WorkflowDetailsType"/> values are not the same. </summary>
        public static bool operator !=(WorkflowDetailsType left, WorkflowDetailsType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="WorkflowDetailsType"/>. </summary>
        public static implicit operator WorkflowDetailsType(string value) => new WorkflowDetailsType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is WorkflowDetailsType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(WorkflowDetailsType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
