// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.RecoveryServicesDataReplication;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> HyperV to AzStackHCI Protected item model custom properties. </summary>
    internal partial class HyperVToAzStackHciProtectedItemCustomPropertiesUpdate : DataReplicationProtectedItemCustomPropertiesUpdate
    {
        /// <summary> Initializes a new instance of <see cref="HyperVToAzStackHciProtectedItemCustomPropertiesUpdate"/>. </summary>
        public HyperVToAzStackHciProtectedItemCustomPropertiesUpdate() : base("HyperVToAzStackHCI")
        {
            NicsToInclude = new ChangeTrackingList<HyperVToAzStackHCINicInput>();
        }

        /// <summary> Initializes a new instance of <see cref="HyperVToAzStackHciProtectedItemCustomPropertiesUpdate"/>. </summary>
        /// <param name="instanceType"> Discriminator property for DataReplicationProtectedItemCustomPropertiesUpdate. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="nicsToInclude"> Gets or sets the list of VM NIC to replicate. </param>
        /// <param name="targetCpuCores"> Gets or sets the target CPU cores. </param>
        /// <param name="isDynamicRam"> Gets or sets a value indicating whether memory is dynamical. </param>
        /// <param name="dynamicMemoryConfig"> Protected item dynamic memory config. </param>
        /// <param name="targetMemoryInMegaBytes"> Gets or sets the target memory in mega-bytes. </param>
        /// <param name="osType"> Gets or sets the type of the OS. </param>
        internal HyperVToAzStackHciProtectedItemCustomPropertiesUpdate(string instanceType, IDictionary<string, BinaryData> additionalBinaryDataProperties, IList<HyperVToAzStackHCINicInput> nicsToInclude, int? targetCpuCores, bool? isDynamicRam, ProtectedItemDynamicMemoryConfig dynamicMemoryConfig, int? targetMemoryInMegaBytes, string osType) : base(instanceType, additionalBinaryDataProperties)
        {
            NicsToInclude = nicsToInclude;
            TargetCpuCores = targetCpuCores;
            IsDynamicRam = isDynamicRam;
            DynamicMemoryConfig = dynamicMemoryConfig;
            TargetMemoryInMegaBytes = targetMemoryInMegaBytes;
            OsType = osType;
        }

        /// <summary> Gets or sets the list of VM NIC to replicate. </summary>
        public IList<HyperVToAzStackHCINicInput> NicsToInclude { get; }

        /// <summary> Gets or sets the target CPU cores. </summary>
        public int? TargetCpuCores { get; set; }

        /// <summary> Gets or sets a value indicating whether memory is dynamical. </summary>
        public bool? IsDynamicRam { get; set; }

        /// <summary> Protected item dynamic memory config. </summary>
        public ProtectedItemDynamicMemoryConfig DynamicMemoryConfig { get; set; }

        /// <summary> Gets or sets the target memory in mega-bytes. </summary>
        public int? TargetMemoryInMegaBytes { get; set; }

        /// <summary> Gets or sets the type of the OS. </summary>
        public string OsType { get; set; }
    }
}
