// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.RecoveryServicesDataReplication;

namespace Azure.ResourceManager.RecoveryServicesDataReplication.Models
{
    /// <summary> Fabric agent model properties. </summary>
    public partial class DataReplicationFabricAgentProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DataReplicationFabricAgentProperties"/>. </summary>
        /// <param name="machineId"> Gets or sets the machine Id where fabric agent is running. </param>
        /// <param name="machineName"> Gets or sets the machine name where fabric agent is running. </param>
        /// <param name="authenticationIdentity"> Identity model. </param>
        /// <param name="resourceAccessIdentity"> Identity model. </param>
        /// <param name="customProperties"> Fabric agent model custom properties. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="machineId"/>, <paramref name="machineName"/>, <paramref name="authenticationIdentity"/>, <paramref name="resourceAccessIdentity"/> or <paramref name="customProperties"/> is null. </exception>
        public DataReplicationFabricAgentProperties(string machineId, string machineName, DataReplicationIdentity authenticationIdentity, DataReplicationIdentity resourceAccessIdentity, DataReplicationFabricAgentCustomProperties customProperties)
        {
            Argument.AssertNotNull(machineId, nameof(machineId));
            Argument.AssertNotNull(machineName, nameof(machineName));
            Argument.AssertNotNull(authenticationIdentity, nameof(authenticationIdentity));
            Argument.AssertNotNull(resourceAccessIdentity, nameof(resourceAccessIdentity));
            Argument.AssertNotNull(customProperties, nameof(customProperties));

            MachineId = machineId;
            MachineName = machineName;
            AuthenticationIdentity = authenticationIdentity;
            ResourceAccessIdentity = resourceAccessIdentity;
            HealthErrors = new ChangeTrackingList<DataReplicationHealthErrorInfo>();
            CustomProperties = customProperties;
        }

        /// <summary> Initializes a new instance of <see cref="DataReplicationFabricAgentProperties"/>. </summary>
        /// <param name="correlationId"> Gets or sets the fabric agent correlation Id. </param>
        /// <param name="machineId"> Gets or sets the machine Id where fabric agent is running. </param>
        /// <param name="machineName"> Gets or sets the machine name where fabric agent is running. </param>
        /// <param name="authenticationIdentity"> Identity model. </param>
        /// <param name="resourceAccessIdentity"> Identity model. </param>
        /// <param name="isResponsive"> Gets or sets a value indicating whether the fabric agent is responsive. </param>
        /// <param name="lastHeartbeatOn"> Gets or sets the time when last heartbeat was sent by the fabric agent. </param>
        /// <param name="versionNumber"> Gets or sets the fabric agent version. </param>
        /// <param name="provisioningState"> Gets or sets the provisioning state of the fabric agent. </param>
        /// <param name="healthErrors"> Gets or sets the list of health errors. </param>
        /// <param name="customProperties"> Fabric agent model custom properties. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DataReplicationFabricAgentProperties(string correlationId, string machineId, string machineName, DataReplicationIdentity authenticationIdentity, DataReplicationIdentity resourceAccessIdentity, bool? isResponsive, DateTimeOffset? lastHeartbeatOn, string versionNumber, DataReplicationProvisioningState? provisioningState, IReadOnlyList<DataReplicationHealthErrorInfo> healthErrors, DataReplicationFabricAgentCustomProperties customProperties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            CorrelationId = correlationId;
            MachineId = machineId;
            MachineName = machineName;
            AuthenticationIdentity = authenticationIdentity;
            ResourceAccessIdentity = resourceAccessIdentity;
            IsResponsive = isResponsive;
            LastHeartbeatOn = lastHeartbeatOn;
            VersionNumber = versionNumber;
            ProvisioningState = provisioningState;
            HealthErrors = healthErrors;
            CustomProperties = customProperties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the fabric agent correlation Id. </summary>
        public string CorrelationId { get; }

        /// <summary> Gets or sets the machine Id where fabric agent is running. </summary>
        public string MachineId { get; set; }

        /// <summary> Gets or sets the machine name where fabric agent is running. </summary>
        public string MachineName { get; set; }

        /// <summary> Identity model. </summary>
        public DataReplicationIdentity AuthenticationIdentity { get; set; }

        /// <summary> Identity model. </summary>
        public DataReplicationIdentity ResourceAccessIdentity { get; set; }

        /// <summary> Gets or sets a value indicating whether the fabric agent is responsive. </summary>
        public bool? IsResponsive { get; }

        /// <summary> Gets or sets the time when last heartbeat was sent by the fabric agent. </summary>
        public DateTimeOffset? LastHeartbeatOn { get; }

        /// <summary> Gets or sets the fabric agent version. </summary>
        public string VersionNumber { get; }

        /// <summary> Gets or sets the provisioning state of the fabric agent. </summary>
        public DataReplicationProvisioningState? ProvisioningState { get; }

        /// <summary> Gets or sets the list of health errors. </summary>
        public IReadOnlyList<DataReplicationHealthErrorInfo> HealthErrors { get; }

        /// <summary> Fabric agent model custom properties. </summary>
        internal DataReplicationFabricAgentCustomProperties CustomProperties { get; set; }

        /// <summary> Discriminator property for DataReplicationFabricAgentCustomProperties. </summary>
        internal string CustomInstanceType
        {
            get
            {
                return CustomProperties is null ? default : CustomProperties.InstanceType;
            }
            set
            {
                CustomProperties = new Models.DataReplicationFabricAgentCustomProperties(value);
            }
        }
    }
}
