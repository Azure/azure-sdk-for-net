// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// L7 health probe settings for a backend pool
    /// </summary>
    public partial class HealthProbeSettingsUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// HealthProbeSettingsUpdateParameters class.
        /// </summary>
        public HealthProbeSettingsUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// HealthProbeSettingsUpdateParameters class.
        /// </summary>
        /// <param name="path">The path to use for the health probe. Default is
        /// /</param>
        /// <param name="protocol">Protocol scheme to use for this probe.
        /// Possible values include: 'Http', 'Https'</param>
        /// <param name="intervalInSeconds">The number of seconds between
        /// health probes.</param>
        /// <param name="healthProbeMethod">Configures which HTTP method to use
        /// to probe the backends defined under backendPools. Possible values
        /// include: 'GET', 'HEAD'</param>
        /// <param name="enabledState">Whether to enable health probes to be
        /// made against backends defined under backendPools. Health probes can
        /// only be disabled if there is a single enabled backend in single
        /// enabled backend pool. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        public HealthProbeSettingsUpdateParameters(string path = default(string), string protocol = default(string), int? intervalInSeconds = default(int?), string healthProbeMethod = default(string), string enabledState = default(string))
        {
            Path = path;
            Protocol = protocol;
            IntervalInSeconds = intervalInSeconds;
            HealthProbeMethod = healthProbeMethod;
            EnabledState = enabledState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path to use for the health probe. Default is /
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets protocol scheme to use for this probe. Possible values
        /// include: 'Http', 'Https'
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets or sets the number of seconds between health probes.
        /// </summary>
        [JsonProperty(PropertyName = "intervalInSeconds")]
        public int? IntervalInSeconds { get; set; }

        /// <summary>
        /// Gets or sets configures which HTTP method to use to probe the
        /// backends defined under backendPools. Possible values include:
        /// 'GET', 'HEAD'
        /// </summary>
        [JsonProperty(PropertyName = "healthProbeMethod")]
        public string HealthProbeMethod { get; set; }

        /// <summary>
        /// Gets or sets whether to enable health probes to be made against
        /// backends defined under backendPools. Health probes can only be
        /// disabled if there is a single enabled backend in single enabled
        /// backend pool. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "enabledState")]
        public string EnabledState { get; set; }

    }
}
