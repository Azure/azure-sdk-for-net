// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines the LatencyScorecard
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class LatencyScorecard : Resource
    {
        /// <summary>
        /// Initializes a new instance of the LatencyScorecard class.
        /// </summary>
        public LatencyScorecard()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LatencyScorecard class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="location">Resource location.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="latencyScorecardId">The unique identifier of the
        /// Latency Scorecard</param>
        /// <param name="latencyScorecardName">The name of the Latency
        /// Scorecard</param>
        /// <param name="description">The description of the Latency
        /// Scorecard</param>
        /// <param name="endpointA">The A endpoint in the scorecard</param>
        /// <param name="endpointB">The B endpoint in the scorecard</param>
        /// <param name="startDateTimeUTC">The start time of the Latency
        /// Scorecard in UTC</param>
        /// <param name="endDateTimeUTC">The end time of the Latency Scorecard
        /// in UTC</param>
        /// <param name="country">The country associated with the Latency
        /// Scorecard. Values are country ISO codes as specified here-
        /// https://www.iso.org/iso-3166-country-codes.html</param>
        /// <param name="latencyMetrics">The latency metrics of the Latency
        /// Scorecard</param>
        public LatencyScorecard(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string latencyScorecardId = default(string), string latencyScorecardName = default(string), string description = default(string), string endpointA = default(string), string endpointB = default(string), System.DateTime? startDateTimeUTC = default(System.DateTime?), System.DateTime? endDateTimeUTC = default(System.DateTime?), string country = default(string), IList<LatencyMetric> latencyMetrics = default(IList<LatencyMetric>))
            : base(id, name, type, location, tags)
        {
            LatencyScorecardId = latencyScorecardId;
            LatencyScorecardName = latencyScorecardName;
            Description = description;
            EndpointA = endpointA;
            EndpointB = endpointB;
            StartDateTimeUTC = startDateTimeUTC;
            EndDateTimeUTC = endDateTimeUTC;
            Country = country;
            LatencyMetrics = latencyMetrics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the unique identifier of the Latency Scorecard
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string LatencyScorecardId { get; private set; }

        /// <summary>
        /// Gets the name of the Latency Scorecard
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string LatencyScorecardName { get; private set; }

        /// <summary>
        /// Gets the description of the Latency Scorecard
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets the A endpoint in the scorecard
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpointA")]
        public string EndpointA { get; private set; }

        /// <summary>
        /// Gets the B endpoint in the scorecard
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpointB")]
        public string EndpointB { get; private set; }

        /// <summary>
        /// Gets the start time of the Latency Scorecard in UTC
        /// </summary>
        [JsonProperty(PropertyName = "properties.startDateTimeUTC")]
        public System.DateTime? StartDateTimeUTC { get; private set; }

        /// <summary>
        /// Gets the end time of the Latency Scorecard in UTC
        /// </summary>
        [JsonProperty(PropertyName = "properties.endDateTimeUTC")]
        public System.DateTime? EndDateTimeUTC { get; private set; }

        /// <summary>
        /// Gets the country associated with the Latency Scorecard. Values are
        /// country ISO codes as specified here-
        /// https://www.iso.org/iso-3166-country-codes.html
        /// </summary>
        [JsonProperty(PropertyName = "properties.country")]
        public string Country { get; private set; }

        /// <summary>
        /// Gets or sets the latency metrics of the Latency Scorecard
        /// </summary>
        [JsonProperty(PropertyName = "properties.latencyMetrics")]
        public IList<LatencyMetric> LatencyMetrics { get; set; }

    }
}
