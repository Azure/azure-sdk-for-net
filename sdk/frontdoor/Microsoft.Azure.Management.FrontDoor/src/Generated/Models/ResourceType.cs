// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ResourceType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ResourceType
    {
        [EnumMember(Value = "Microsoft.Network/frontDoors")]
        MicrosoftNetworkFrontDoors,
        [EnumMember(Value = "Microsoft.Network/frontDoors/frontendEndpoints")]
        MicrosoftNetworkFrontDoorsFrontendEndpoints
    }
    internal static class ResourceTypeEnumExtension
    {
        internal static string ToSerializedValue(this ResourceType? value)
        {
            return value == null ? null : ((ResourceType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ResourceType value)
        {
            switch( value )
            {
                case ResourceType.MicrosoftNetworkFrontDoors:
                    return "Microsoft.Network/frontDoors";
                case ResourceType.MicrosoftNetworkFrontDoorsFrontendEndpoints:
                    return "Microsoft.Network/frontDoors/frontendEndpoints";
            }
            return null;
        }

        internal static ResourceType? ParseResourceType(this string value)
        {
            switch( value )
            {
                case "Microsoft.Network/frontDoors":
                    return ResourceType.MicrosoftNetworkFrontDoors;
                case "Microsoft.Network/frontDoors/frontendEndpoints":
                    return ResourceType.MicrosoftNetworkFrontDoorsFrontendEndpoints;
            }
            return null;
        }
    }
}
