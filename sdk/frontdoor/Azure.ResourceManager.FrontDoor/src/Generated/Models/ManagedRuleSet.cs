// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.FrontDoor.Models
{
    /// <summary> Defines a managed rule set. </summary>
    public partial class ManagedRuleSet
    {
        /// <summary> Initializes a new instance of <see cref="ManagedRuleSet"/>. </summary>
        /// <param name="ruleSetType"> Defines the rule set type to use. </param>
        /// <param name="ruleSetVersion"> Defines the version of the rule set to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="ruleSetType"/> or <paramref name="ruleSetVersion"/> is null. </exception>
        public ManagedRuleSet(string ruleSetType, string ruleSetVersion)
        {
            Argument.AssertNotNull(ruleSetType, nameof(ruleSetType));
            Argument.AssertNotNull(ruleSetVersion, nameof(ruleSetVersion));

            RuleSetType = ruleSetType;
            RuleSetVersion = ruleSetVersion;
            Exclusions = new ChangeTrackingList<ManagedRuleExclusion>();
            RuleGroupOverrides = new ChangeTrackingList<ManagedRuleGroupOverride>();
        }

        /// <summary> Initializes a new instance of <see cref="ManagedRuleSet"/>. </summary>
        /// <param name="ruleSetType"> Defines the rule set type to use. </param>
        /// <param name="ruleSetVersion"> Defines the version of the rule set to use. </param>
        /// <param name="ruleSetAction"> Defines the rule set action. </param>
        /// <param name="exclusions"> Describes the exclusions that are applied to all rules in the set. </param>
        /// <param name="ruleGroupOverrides"> Defines the rule group overrides to apply to the rule set. </param>
        internal ManagedRuleSet(string ruleSetType, string ruleSetVersion, ManagedRuleSetActionType? ruleSetAction, IList<ManagedRuleExclusion> exclusions, IList<ManagedRuleGroupOverride> ruleGroupOverrides)
        {
            RuleSetType = ruleSetType;
            RuleSetVersion = ruleSetVersion;
            RuleSetAction = ruleSetAction;
            Exclusions = exclusions;
            RuleGroupOverrides = ruleGroupOverrides;
        }

        /// <summary> Defines the rule set type to use. </summary>
        public string RuleSetType { get; set; }
        /// <summary> Defines the version of the rule set to use. </summary>
        public string RuleSetVersion { get; set; }
        /// <summary> Defines the rule set action. </summary>
        public ManagedRuleSetActionType? RuleSetAction { get; set; }
        /// <summary> Describes the exclusions that are applied to all rules in the set. </summary>
        public IList<ManagedRuleExclusion> Exclusions { get; }
        /// <summary> Defines the rule group overrides to apply to the rule set. </summary>
        public IList<ManagedRuleGroupOverride> RuleGroupOverrides { get; }
    }
}
