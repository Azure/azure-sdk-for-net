// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.FrontDoor.Models
{
    /// <summary> Defines contents of a web application rule. </summary>
    public partial class CustomRule
    {
        /// <summary> Initializes a new instance of CustomRule. </summary>
        /// <param name="priority"> Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. </param>
        /// <param name="ruleType"> Describes type of rule. </param>
        /// <param name="matchConditions"> List of match conditions. </param>
        /// <param name="action"> Describes what action to be applied when rule matches. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="matchConditions"/> is null. </exception>
        public CustomRule(int priority, RuleType ruleType, IEnumerable<MatchCondition> matchConditions, ActionType action)
        {
            if (matchConditions == null)
            {
                throw new ArgumentNullException(nameof(matchConditions));
            }

            Priority = priority;
            RuleType = ruleType;
            MatchConditions = matchConditions.ToList();
            Action = action;
        }

        /// <summary> Initializes a new instance of CustomRule. </summary>
        /// <param name="name"> Describes the name of the rule. </param>
        /// <param name="priority"> Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. </param>
        /// <param name="enabledState"> Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. </param>
        /// <param name="ruleType"> Describes type of rule. </param>
        /// <param name="rateLimitDurationInMinutes"> Time window for resetting the rate limit count. Default is 1 minute. </param>
        /// <param name="rateLimitThreshold"> Number of allowed requests per client within the time window. </param>
        /// <param name="matchConditions"> List of match conditions. </param>
        /// <param name="action"> Describes what action to be applied when rule matches. </param>
        internal CustomRule(string name, int priority, CustomRuleEnabledState? enabledState, RuleType ruleType, int? rateLimitDurationInMinutes, int? rateLimitThreshold, IList<MatchCondition> matchConditions, ActionType action)
        {
            Name = name;
            Priority = priority;
            EnabledState = enabledState;
            RuleType = ruleType;
            RateLimitDurationInMinutes = rateLimitDurationInMinutes;
            RateLimitThreshold = rateLimitThreshold;
            MatchConditions = matchConditions;
            Action = action;
        }

        /// <summary> Describes the name of the rule. </summary>
        public string Name { get; set; }
        /// <summary> Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. </summary>
        public int Priority { get; set; }
        /// <summary> Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. </summary>
        public CustomRuleEnabledState? EnabledState { get; set; }
        /// <summary> Describes type of rule. </summary>
        public RuleType RuleType { get; set; }
        /// <summary> Time window for resetting the rate limit count. Default is 1 minute. </summary>
        public int? RateLimitDurationInMinutes { get; set; }
        /// <summary> Number of allowed requests per client within the time window. </summary>
        public int? RateLimitThreshold { get; set; }
        /// <summary> List of match conditions. </summary>
        public IList<MatchCondition> MatchConditions { get; }
        /// <summary> Describes what action to be applied when rule matches. </summary>
        public ActionType Action { get; set; }
    }
}
