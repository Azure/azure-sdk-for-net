// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.FrontDoor.Models
{
    public partial class FrontDoorCacheConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(QueryParameterStripDirective))
            {
                writer.WritePropertyName("queryParameterStripDirective");
                writer.WriteStringValue(QueryParameterStripDirective.Value.ToString());
            }
            if (Optional.IsDefined(QueryParameters))
            {
                writer.WritePropertyName("queryParameters");
                writer.WriteStringValue(QueryParameters);
            }
            if (Optional.IsDefined(DynamicCompression))
            {
                writer.WritePropertyName("dynamicCompression");
                writer.WriteStringValue(DynamicCompression.Value.ToString());
            }
            if (Optional.IsDefined(CacheDuration))
            {
                writer.WritePropertyName("cacheDuration");
                writer.WriteStringValue(CacheDuration.Value, "P");
            }
            writer.WriteEndObject();
        }

        internal static FrontDoorCacheConfiguration DeserializeFrontDoorCacheConfiguration(JsonElement element)
        {
            Optional<FrontDoorQuery> queryParameterStripDirective = default;
            Optional<string> queryParameters = default;
            Optional<DynamicCompressionEnabled> dynamicCompression = default;
            Optional<TimeSpan> cacheDuration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("queryParameterStripDirective"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    queryParameterStripDirective = new FrontDoorQuery(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("queryParameters"))
                {
                    queryParameters = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dynamicCompression"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dynamicCompression = new DynamicCompressionEnabled(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("cacheDuration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cacheDuration = property.Value.GetTimeSpan("P");
                    continue;
                }
            }
            return new FrontDoorCacheConfiguration(Optional.ToNullable(queryParameterStripDirective), queryParameters.Value, Optional.ToNullable(dynamicCompression), Optional.ToNullable(cacheDuration));
        }
    }
}
