// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.FrontDoor.Models
{
    public partial class RulesEngineAction : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(RequestHeaderActions))
            {
                writer.WritePropertyName("requestHeaderActions");
                writer.WriteStartArray();
                foreach (var item in RequestHeaderActions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ResponseHeaderActions))
            {
                writer.WritePropertyName("responseHeaderActions");
                writer.WriteStartArray();
                foreach (var item in ResponseHeaderActions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(RouteConfigurationOverride))
            {
                writer.WritePropertyName("routeConfigurationOverride");
                writer.WriteObjectValue(RouteConfigurationOverride);
            }
            writer.WriteEndObject();
        }

        internal static RulesEngineAction DeserializeRulesEngineAction(JsonElement element)
        {
            Optional<IList<RulesEngineHeaderAction>> requestHeaderActions = default;
            Optional<IList<RulesEngineHeaderAction>> responseHeaderActions = default;
            Optional<RouteConfiguration> routeConfigurationOverride = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("requestHeaderActions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RulesEngineHeaderAction> array = new List<RulesEngineHeaderAction>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RulesEngineHeaderAction.DeserializeRulesEngineHeaderAction(item));
                    }
                    requestHeaderActions = array;
                    continue;
                }
                if (property.NameEquals("responseHeaderActions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RulesEngineHeaderAction> array = new List<RulesEngineHeaderAction>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RulesEngineHeaderAction.DeserializeRulesEngineHeaderAction(item));
                    }
                    responseHeaderActions = array;
                    continue;
                }
                if (property.NameEquals("routeConfigurationOverride"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    routeConfigurationOverride = RouteConfiguration.DeserializeRouteConfiguration(property.Value);
                    continue;
                }
            }
            return new RulesEngineAction(Optional.ToList(requestHeaderActions), Optional.ToList(responseHeaderActions), routeConfigurationOverride.Value);
        }
    }
}
