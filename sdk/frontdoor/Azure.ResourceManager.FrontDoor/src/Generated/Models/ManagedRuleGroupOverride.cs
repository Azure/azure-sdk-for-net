// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.FrontDoor.Models
{
    /// <summary> Defines a managed rule group override setting. </summary>
    public partial class ManagedRuleGroupOverride
    {
        /// <summary> Initializes a new instance of <see cref="ManagedRuleGroupOverride"/>. </summary>
        /// <param name="ruleGroupName"> Describes the managed rule group to override. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="ruleGroupName"/> is null. </exception>
        public ManagedRuleGroupOverride(string ruleGroupName)
        {
            Argument.AssertNotNull(ruleGroupName, nameof(ruleGroupName));

            RuleGroupName = ruleGroupName;
            Exclusions = new ChangeTrackingList<ManagedRuleExclusion>();
            Rules = new ChangeTrackingList<ManagedRuleOverride>();
        }

        /// <summary> Initializes a new instance of <see cref="ManagedRuleGroupOverride"/>. </summary>
        /// <param name="ruleGroupName"> Describes the managed rule group to override. </param>
        /// <param name="exclusions"> Describes the exclusions that are applied to all rules in the group. </param>
        /// <param name="rules"> List of rules that will be disabled. If none specified, all rules in the group will be disabled. </param>
        internal ManagedRuleGroupOverride(string ruleGroupName, IList<ManagedRuleExclusion> exclusions, IList<ManagedRuleOverride> rules)
        {
            RuleGroupName = ruleGroupName;
            Exclusions = exclusions;
            Rules = rules;
        }

        /// <summary> Describes the managed rule group to override. </summary>
        public string RuleGroupName { get; set; }
        /// <summary> Describes the exclusions that are applied to all rules in the group. </summary>
        public IList<ManagedRuleExclusion> Exclusions { get; }
        /// <summary> List of rules that will be disabled. If none specified, all rules in the group will be disabled. </summary>
        public IList<ManagedRuleOverride> Rules { get; }
    }
}
