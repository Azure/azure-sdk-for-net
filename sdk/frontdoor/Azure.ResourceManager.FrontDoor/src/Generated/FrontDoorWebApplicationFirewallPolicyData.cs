// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.FrontDoor.Models;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.FrontDoor
{
    /// <summary>
    /// A class representing the FrontDoorWebApplicationFirewallPolicy data model.
    /// Defines web application firewall policy.
    /// </summary>
    public partial class FrontDoorWebApplicationFirewallPolicyData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="FrontDoorWebApplicationFirewallPolicyData"/>. </summary>
        /// <param name="location"> The location. </param>
        public FrontDoorWebApplicationFirewallPolicyData(AzureLocation location) : base(location)
        {
            FrontendEndpointLinks = new ChangeTrackingList<SubResource>();
            RoutingRuleLinks = new ChangeTrackingList<SubResource>();
            SecurityPolicyLinks = new ChangeTrackingList<SubResource>();
        }

        /// <summary> Initializes a new instance of <see cref="FrontDoorWebApplicationFirewallPolicyData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="etag"> Gets a unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="sku"> The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified. </param>
        /// <param name="policySettings"> Describes settings for the policy. </param>
        /// <param name="customRuleList"> Describes custom rules inside the policy. </param>
        /// <param name="managedRules"> Describes managed rules inside the policy. </param>
        /// <param name="frontendEndpointLinks"> Describes Frontend Endpoints associated with this Web Application Firewall policy. </param>
        /// <param name="routingRuleLinks"> Describes Routing Rules associated with this Web Application Firewall policy. </param>
        /// <param name="securityPolicyLinks"> Describes Security Policy associated with this Web Application Firewall policy. </param>
        /// <param name="provisioningState"> Provisioning state of the policy. </param>
        /// <param name="resourceState"> Resource status of the policy. </param>
        internal FrontDoorWebApplicationFirewallPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ETag? etag, FrontDoorSku sku, FrontDoorWebApplicationFirewallPolicySettings policySettings, CustomRuleList customRuleList, ManagedRuleSetList managedRules, IReadOnlyList<SubResource> frontendEndpointLinks, IReadOnlyList<SubResource> routingRuleLinks, IReadOnlyList<SubResource> securityPolicyLinks, string provisioningState, FrontDoorWebApplicationFirewallPolicyResourceState? resourceState) : base(id, name, resourceType, systemData, tags, location)
        {
            ETag = etag;
            Sku = sku;
            PolicySettings = policySettings;
            CustomRuleList = customRuleList;
            ManagedRules = managedRules;
            FrontendEndpointLinks = frontendEndpointLinks;
            RoutingRuleLinks = routingRuleLinks;
            SecurityPolicyLinks = securityPolicyLinks;
            ProvisioningState = provisioningState;
            ResourceState = resourceState;
        }

        /// <summary> Gets a unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; set; }
        /// <summary> The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified. </summary>
        internal FrontDoorSku Sku { get; set; }
        /// <summary> Name of the pricing tier. </summary>
        public FrontDoorSkuName? SkuName
        {
            get => Sku is null ? default : Sku.Name;
            set
            {
                if (Sku is null)
                    Sku = new FrontDoorSku();
                Sku.Name = value;
            }
        }

        /// <summary> Describes settings for the policy. </summary>
        public FrontDoorWebApplicationFirewallPolicySettings PolicySettings { get; set; }
        /// <summary> Describes custom rules inside the policy. </summary>
        internal CustomRuleList CustomRuleList { get; set; }
        /// <summary> List of rules. </summary>
        public IList<WebApplicationCustomRule> Rules
        {
            get
            {
                if (CustomRuleList is null)
                    CustomRuleList = new CustomRuleList();
                return CustomRuleList.Rules;
            }
        }

        /// <summary> Describes managed rules inside the policy. </summary>
        internal ManagedRuleSetList ManagedRules { get; set; }
        /// <summary> List of rule sets. </summary>
        public IList<ManagedRuleSet> ManagedRuleSets
        {
            get
            {
                if (ManagedRules is null)
                    ManagedRules = new ManagedRuleSetList();
                return ManagedRules.ManagedRuleSets;
            }
        }

        /// <summary> Describes Frontend Endpoints associated with this Web Application Firewall policy. </summary>
        public IReadOnlyList<SubResource> FrontendEndpointLinks { get; }
        /// <summary> Describes Routing Rules associated with this Web Application Firewall policy. </summary>
        public IReadOnlyList<SubResource> RoutingRuleLinks { get; }
        /// <summary> Describes Security Policy associated with this Web Application Firewall policy. </summary>
        public IReadOnlyList<SubResource> SecurityPolicyLinks { get; }
        /// <summary> Provisioning state of the policy. </summary>
        public string ProvisioningState { get; }
        /// <summary> Resource status of the policy. </summary>
        public FrontDoorWebApplicationFirewallPolicyResourceState? ResourceState { get; }
    }
}
