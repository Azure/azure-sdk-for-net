// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary> The private link configuration provisioning state, which only appears in the response. </summary>
    public readonly partial struct PrivateLinkConfigurationProvisioningState : IEquatable<PrivateLinkConfigurationProvisioningState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PrivateLinkConfigurationProvisioningState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PrivateLinkConfigurationProvisioningState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InProgressValue = "InProgress";
        private const string FailedValue = "Failed";
        private const string SucceededValue = "Succeeded";
        private const string CanceledValue = "Canceled";
        private const string DeletingValue = "Deleting";

        /// <summary> InProgress. </summary>
        public static PrivateLinkConfigurationProvisioningState InProgress { get; } = new PrivateLinkConfigurationProvisioningState(InProgressValue);
        /// <summary> Failed. </summary>
        public static PrivateLinkConfigurationProvisioningState Failed { get; } = new PrivateLinkConfigurationProvisioningState(FailedValue);
        /// <summary> Succeeded. </summary>
        public static PrivateLinkConfigurationProvisioningState Succeeded { get; } = new PrivateLinkConfigurationProvisioningState(SucceededValue);
        /// <summary> Canceled. </summary>
        public static PrivateLinkConfigurationProvisioningState Canceled { get; } = new PrivateLinkConfigurationProvisioningState(CanceledValue);
        /// <summary> Deleting. </summary>
        public static PrivateLinkConfigurationProvisioningState Deleting { get; } = new PrivateLinkConfigurationProvisioningState(DeletingValue);
        /// <summary> Determines if two <see cref="PrivateLinkConfigurationProvisioningState"/> values are the same. </summary>
        public static bool operator ==(PrivateLinkConfigurationProvisioningState left, PrivateLinkConfigurationProvisioningState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PrivateLinkConfigurationProvisioningState"/> values are not the same. </summary>
        public static bool operator !=(PrivateLinkConfigurationProvisioningState left, PrivateLinkConfigurationProvisioningState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="PrivateLinkConfigurationProvisioningState"/>. </summary>
        public static implicit operator PrivateLinkConfigurationProvisioningState(string value) => new PrivateLinkConfigurationProvisioningState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PrivateLinkConfigurationProvisioningState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PrivateLinkConfigurationProvisioningState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
