// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Models
{
    public partial class QuotaCapability
    {
        internal static QuotaCapability DeserializeQuotaCapability(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<long> coresUsed = default;
            Core.Optional<long> maxCoresAllowed = default;
            Core.Optional<IReadOnlyList<RegionalQuotaCapability>> regionalQuotas = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("coresUsed"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    coresUsed = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("maxCoresAllowed"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxCoresAllowed = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("regionalQuotas"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<RegionalQuotaCapability> array = new List<RegionalQuotaCapability>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RegionalQuotaCapability.DeserializeRegionalQuotaCapability(item));
                    }
                    regionalQuotas = array;
                    continue;
                }
            }
            return new QuotaCapability(Core.Optional.ToNullable(coresUsed), Core.Optional.ToNullable(maxCoresAllowed), Core.Optional.ToList(regionalQuotas));
        }
    }
}
