// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary> The ssh username, password, and ssh public key. </summary>
    public partial class HDInsightLinuxOSProfile
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="HDInsightLinuxOSProfile"/>. </summary>
        public HDInsightLinuxOSProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HDInsightLinuxOSProfile"/>. </summary>
        /// <param name="username"> The username. </param>
        /// <param name="password"> The password. </param>
        /// <param name="sshProfile"> The SSH profile. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal HDInsightLinuxOSProfile(string username, string password, SshProfile sshProfile, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Username = username;
            Password = password;
            SshProfile = sshProfile;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The username. </summary>
        public string Username { get; set; }
        /// <summary> The password. </summary>
        public string Password { get; set; }
        /// <summary> The SSH profile. </summary>
        internal SshProfile SshProfile { get; set; }
        /// <summary> The list of SSH public keys. </summary>
        public IList<HDInsightSshPublicKey> SshPublicKeys
        {
            get
            {
                if (SshProfile is null)
                    SshProfile = new SshProfile();
                return SshProfile.PublicKeys;
            }
        }
    }
}
