// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Models
{
    public partial class HDInsightComputeIsolationProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(EnableComputeIsolation))
            {
                writer.WritePropertyName("enableComputeIsolation"u8);
                writer.WriteBooleanValue(EnableComputeIsolation.Value);
            }
            if (Core.Optional.IsDefined(HostSku))
            {
                writer.WritePropertyName("hostSku"u8);
                writer.WriteStringValue(HostSku);
            }
            writer.WriteEndObject();
        }

        internal static HDInsightComputeIsolationProperties DeserializeHDInsightComputeIsolationProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<bool> enableComputeIsolation = default;
            Core.Optional<string> hostSku = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("enableComputeIsolation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    enableComputeIsolation = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("hostSku"u8))
                {
                    hostSku = property.Value.GetString();
                    continue;
                }
            }
            return new HDInsightComputeIsolationProperties(Core.Optional.ToNullable(enableComputeIsolation), hostSku.Value);
        }
    }
}
