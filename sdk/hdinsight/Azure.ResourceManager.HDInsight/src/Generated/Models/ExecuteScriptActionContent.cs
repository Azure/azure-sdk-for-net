// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary> The parameters for the script actions to execute on a running cluster. </summary>
    public partial class ExecuteScriptActionContent
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ExecuteScriptActionContent"/>. </summary>
        /// <param name="persistOnSuccess"> Gets or sets if the scripts needs to be persisted. </param>
        public ExecuteScriptActionContent(bool persistOnSuccess)
        {
            ScriptActions = new ChangeTrackingList<RuntimeScriptAction>();
            PersistOnSuccess = persistOnSuccess;
        }

        /// <summary> Initializes a new instance of <see cref="ExecuteScriptActionContent"/>. </summary>
        /// <param name="scriptActions"> The list of run time script actions. </param>
        /// <param name="persistOnSuccess"> Gets or sets if the scripts needs to be persisted. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ExecuteScriptActionContent(IList<RuntimeScriptAction> scriptActions, bool persistOnSuccess, Dictionary<string, BinaryData> rawData)
        {
            ScriptActions = scriptActions;
            PersistOnSuccess = persistOnSuccess;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ExecuteScriptActionContent"/> for deserialization. </summary>
        internal ExecuteScriptActionContent()
        {
        }

        /// <summary> The list of run time script actions. </summary>
        public IList<RuntimeScriptAction> ScriptActions { get; }
        /// <summary> Gets or sets if the scripts needs to be persisted. </summary>
        public bool PersistOnSuccess { get; }
    }
}
