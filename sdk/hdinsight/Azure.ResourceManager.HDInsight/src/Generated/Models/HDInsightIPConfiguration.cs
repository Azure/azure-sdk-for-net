// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary>
    /// The ip configurations for the private link service.
    /// Serialized Name: IPConfiguration
    /// </summary>
    public partial class HDInsightIPConfiguration
    {
        /// <summary> Initializes a new instance of HDInsightIPConfiguration. </summary>
        /// <param name="name">
        /// The name of private link IP configuration.
        /// Serialized Name: IPConfiguration.name
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public HDInsightIPConfiguration(string name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Name = name;
        }

        /// <summary> Initializes a new instance of HDInsightIPConfiguration. </summary>
        /// <param name="id">
        /// The private link IP configuration id.
        /// Serialized Name: IPConfiguration.id
        /// </param>
        /// <param name="name">
        /// The name of private link IP configuration.
        /// Serialized Name: IPConfiguration.name
        /// </param>
        /// <param name="resourceType">
        /// The type of the private link IP configuration.
        /// Serialized Name: IPConfiguration.type
        /// </param>
        /// <param name="provisioningState">
        /// The private link configuration provisioning state, which only appears in the response.
        /// Serialized Name: IPConfiguration.properties.provisioningState
        /// </param>
        /// <param name="isPrimary">
        /// Indicates whether this IP configuration is primary for the corresponding NIC.
        /// Serialized Name: IPConfiguration.properties.primary
        /// </param>
        /// <param name="privateIPAddress">
        /// The IP address.
        /// Serialized Name: IPConfiguration.properties.privateIPAddress
        /// </param>
        /// <param name="privateIPAllocationMethod">
        /// The method that private IP address is allocated.
        /// Serialized Name: IPConfiguration.properties.privateIPAllocationMethod
        /// </param>
        /// <param name="subnet">
        /// The subnet resource id.
        /// Serialized Name: IPConfiguration.properties.subnet
        /// </param>
        internal HDInsightIPConfiguration(ResourceIdentifier id, string name, ResourceIdentifier resourceType, HDInsightPrivateLinkConfigurationProvisioningState? provisioningState, bool? isPrimary, string privateIPAddress, HDInsightPrivateIPAllocationMethod? privateIPAllocationMethod, WritableSubResource subnet)
        {
            Id = id;
            Name = name;
            ResourceType = resourceType;
            ProvisioningState = provisioningState;
            IsPrimary = isPrimary;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            Subnet = subnet;
        }

        /// <summary>
        /// The private link IP configuration id.
        /// Serialized Name: IPConfiguration.id
        /// </summary>
        public ResourceIdentifier Id { get; }
        /// <summary>
        /// The name of private link IP configuration.
        /// Serialized Name: IPConfiguration.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// The type of the private link IP configuration.
        /// Serialized Name: IPConfiguration.type
        /// </summary>
        public ResourceIdentifier ResourceType { get; }
        /// <summary>
        /// The private link configuration provisioning state, which only appears in the response.
        /// Serialized Name: IPConfiguration.properties.provisioningState
        /// </summary>
        public HDInsightPrivateLinkConfigurationProvisioningState? ProvisioningState { get; }
        /// <summary>
        /// Indicates whether this IP configuration is primary for the corresponding NIC.
        /// Serialized Name: IPConfiguration.properties.primary
        /// </summary>
        public bool? IsPrimary { get; set; }
        /// <summary>
        /// The IP address.
        /// Serialized Name: IPConfiguration.properties.privateIPAddress
        /// </summary>
        public string PrivateIPAddress { get; set; }
        /// <summary>
        /// The method that private IP address is allocated.
        /// Serialized Name: IPConfiguration.properties.privateIPAllocationMethod
        /// </summary>
        public HDInsightPrivateIPAllocationMethod? PrivateIPAllocationMethod { get; set; }
        /// <summary>
        /// The subnet resource id.
        /// Serialized Name: IPConfiguration.properties.subnet
        /// </summary>
        internal WritableSubResource Subnet { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier SubnetId
        {
            get => Subnet is null ? default : Subnet.Id;
            set
            {
                if (Subnet is null)
                    Subnet = new WritableSubResource();
                Subnet.Id = value;
            }
        }
    }
}
