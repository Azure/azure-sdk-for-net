// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary>
    /// The cluster create parameters.
    /// Serialized Name: ClusterCreateProperties
    /// </summary>
    public partial class HDInsightClusterCreateOrUpdateProperties
    {
        /// <summary> Initializes a new instance of HDInsightClusterCreateOrUpdateProperties. </summary>
        public HDInsightClusterCreateOrUpdateProperties()
        {
            PrivateLinkConfigurations = new ChangeTrackingList<HDInsightPrivateLinkConfiguration>();
        }

        /// <summary>
        /// The version of the cluster.
        /// Serialized Name: ClusterCreateProperties.clusterVersion
        /// </summary>
        public string ClusterVersion { get; set; }
        /// <summary>
        /// The type of operating system.
        /// Serialized Name: ClusterCreateProperties.osType
        /// </summary>
        public HDInsightOSType? OSType { get; set; }
        /// <summary>
        /// The cluster tier.
        /// Serialized Name: ClusterCreateProperties.tier
        /// </summary>
        public HDInsightTier? Tier { get; set; }
        /// <summary>
        /// The cluster definition.
        /// Serialized Name: ClusterCreateProperties.clusterDefinition
        /// </summary>
        public HDInsightClusterDefinition ClusterDefinition { get; set; }
        /// <summary>
        /// The cluster kafka rest proxy configuration.
        /// Serialized Name: ClusterCreateProperties.kafkaRestProperties
        /// </summary>
        public KafkaRestProperties KafkaRestProperties { get; set; }
        /// <summary>
        /// The security profile.
        /// Serialized Name: ClusterCreateProperties.securityProfile
        /// </summary>
        public HDInsightSecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// The compute profile.
        /// Serialized Name: ClusterCreateProperties.computeProfile
        /// </summary>
        internal ComputeProfile ComputeProfile { get; set; }
        /// <summary>
        /// The list of roles in the cluster.
        /// Serialized Name: ComputeProfile.roles
        /// </summary>
        public IList<HDInsightClusterRole> ComputeRoles
        {
            get
            {
                if (ComputeProfile is null)
                    ComputeProfile = new ComputeProfile();
                return ComputeProfile.Roles;
            }
        }

        /// <summary>
        /// The storage profile.
        /// Serialized Name: ClusterCreateProperties.storageProfile
        /// </summary>
        internal StorageProfile StorageProfile { get; set; }
        /// <summary>
        /// The list of storage accounts in the cluster.
        /// Serialized Name: StorageProfile.storageaccounts
        /// </summary>
        public IList<HDInsightStorageAccountInfo> StorageAccounts
        {
            get
            {
                if (StorageProfile is null)
                    StorageProfile = new StorageProfile();
                return StorageProfile.StorageAccounts;
            }
        }

        /// <summary>
        /// The disk encryption properties.
        /// Serialized Name: ClusterCreateProperties.diskEncryptionProperties
        /// </summary>
        public HDInsightDiskEncryptionProperties DiskEncryptionProperties { get; set; }
        /// <summary>
        /// The encryption-in-transit properties.
        /// Serialized Name: ClusterCreateProperties.encryptionInTransitProperties
        /// </summary>
        internal EncryptionInTransitProperties EncryptionInTransitProperties { get; set; }
        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// Serialized Name: EncryptionInTransitProperties.isEncryptionInTransitEnabled
        /// </summary>
        public bool? IsEncryptionInTransitEnabled
        {
            get => EncryptionInTransitProperties is null ? default : EncryptionInTransitProperties.IsEncryptionInTransitEnabled;
            set
            {
                if (EncryptionInTransitProperties is null)
                    EncryptionInTransitProperties = new EncryptionInTransitProperties();
                EncryptionInTransitProperties.IsEncryptionInTransitEnabled = value;
            }
        }

        /// <summary>
        /// The minimal supported tls version.
        /// Serialized Name: ClusterCreateProperties.minSupportedTlsVersion
        /// </summary>
        public string MinSupportedTlsVersion { get; set; }
        /// <summary>
        /// The network properties.
        /// Serialized Name: ClusterCreateProperties.networkProperties
        /// </summary>
        public HDInsightClusterNetworkProperties NetworkProperties { get; set; }
        /// <summary>
        /// The compute isolation properties.
        /// Serialized Name: ClusterCreateProperties.computeIsolationProperties
        /// </summary>
        public HDInsightComputeIsolationProperties ComputeIsolationProperties { get; set; }
        /// <summary>
        /// The private link configurations.
        /// Serialized Name: ClusterCreateProperties.privateLinkConfigurations
        /// </summary>
        public IList<HDInsightPrivateLinkConfiguration> PrivateLinkConfigurations { get; }
    }
}
