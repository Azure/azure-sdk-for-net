// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary>
    /// Describes a script action on a running cluster.
    /// Serialized Name: RuntimeScriptAction
    /// </summary>
    public partial class RuntimeScriptAction
    {
        /// <summary> Initializes a new instance of RuntimeScriptAction. </summary>
        /// <param name="name">
        /// The name of the script action.
        /// Serialized Name: RuntimeScriptAction.name
        /// </param>
        /// <param name="uri">
        /// The URI to the script.
        /// Serialized Name: RuntimeScriptAction.uri
        /// </param>
        /// <param name="roles">
        /// The list of roles where script will be executed.
        /// Serialized Name: RuntimeScriptAction.roles
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="uri"/> or <paramref name="roles"/> is null. </exception>
        public RuntimeScriptAction(string name, Uri uri, IEnumerable<string> roles)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (uri == null)
            {
                throw new ArgumentNullException(nameof(uri));
            }
            if (roles == null)
            {
                throw new ArgumentNullException(nameof(roles));
            }

            Name = name;
            Uri = uri;
            Roles = roles.ToList();
        }

        /// <summary> Initializes a new instance of RuntimeScriptAction. </summary>
        /// <param name="name">
        /// The name of the script action.
        /// Serialized Name: RuntimeScriptAction.name
        /// </param>
        /// <param name="uri">
        /// The URI to the script.
        /// Serialized Name: RuntimeScriptAction.uri
        /// </param>
        /// <param name="parameters">
        /// The parameters for the script
        /// Serialized Name: RuntimeScriptAction.parameters
        /// </param>
        /// <param name="roles">
        /// The list of roles where script will be executed.
        /// Serialized Name: RuntimeScriptAction.roles
        /// </param>
        /// <param name="applicationName">
        /// The application name of the script action, if any.
        /// Serialized Name: RuntimeScriptAction.applicationName
        /// </param>
        internal RuntimeScriptAction(string name, Uri uri, string parameters, IList<string> roles, string applicationName)
        {
            Name = name;
            Uri = uri;
            Parameters = parameters;
            Roles = roles;
            ApplicationName = applicationName;
        }

        /// <summary>
        /// The name of the script action.
        /// Serialized Name: RuntimeScriptAction.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// The URI to the script.
        /// Serialized Name: RuntimeScriptAction.uri
        /// </summary>
        public Uri Uri { get; set; }
        /// <summary>
        /// The parameters for the script
        /// Serialized Name: RuntimeScriptAction.parameters
        /// </summary>
        public string Parameters { get; set; }
        /// <summary>
        /// The list of roles where script will be executed.
        /// Serialized Name: RuntimeScriptAction.roles
        /// </summary>
        public IList<string> Roles { get; }
        /// <summary>
        /// The application name of the script action, if any.
        /// Serialized Name: RuntimeScriptAction.applicationName
        /// </summary>
        public string ApplicationName { get; }
    }
}
