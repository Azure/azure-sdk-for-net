// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.HDInsight.Models
{
    /// <summary> The ip configurations for the private link service. </summary>
    public partial class IPConfiguration
    {
        /// <summary> Initializes a new instance of IPConfiguration. </summary>
        /// <param name="name"> The name of private link IP configuration. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public IPConfiguration(string name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Name = name;
        }

        /// <summary> Initializes a new instance of IPConfiguration. </summary>
        /// <param name="id"> The private link IP configuration id. </param>
        /// <param name="name"> The name of private link IP configuration. </param>
        /// <param name="resourceType"> The type of the private link IP configuration. </param>
        /// <param name="provisioningState"> The private link configuration provisioning state, which only appears in the response. </param>
        /// <param name="primary"> Indicates whether this IP configuration is primary for the corresponding NIC. </param>
        /// <param name="privateIPAddress"> The IP address. </param>
        /// <param name="privateIPAllocationMethod"> The method that private IP address is allocated. </param>
        /// <param name="subnet"> The subnet resource id. </param>
        internal IPConfiguration(string id, string name, string resourceType, PrivateLinkConfigurationProvisioningState? provisioningState, bool? primary, string privateIPAddress, PrivateIPAllocationMethod? privateIPAllocationMethod, WritableSubResource subnet)
        {
            Id = id;
            Name = name;
            ResourceType = resourceType;
            ProvisioningState = provisioningState;
            Primary = primary;
            PrivateIPAddress = privateIPAddress;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            Subnet = subnet;
        }

        /// <summary> The private link IP configuration id. </summary>
        public string Id { get; }
        /// <summary> The name of private link IP configuration. </summary>
        public string Name { get; set; }
        /// <summary> The type of the private link IP configuration. </summary>
        public string ResourceType { get; }
        /// <summary> The private link configuration provisioning state, which only appears in the response. </summary>
        public PrivateLinkConfigurationProvisioningState? ProvisioningState { get; }
        /// <summary> Indicates whether this IP configuration is primary for the corresponding NIC. </summary>
        public bool? Primary { get; set; }
        /// <summary> The IP address. </summary>
        public string PrivateIPAddress { get; set; }
        /// <summary> The method that private IP address is allocated. </summary>
        public PrivateIPAllocationMethod? PrivateIPAllocationMethod { get; set; }
        /// <summary> The subnet resource id. </summary>
        internal WritableSubResource Subnet { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier SubnetId
        {
            get => Subnet is null ? default : Subnet.Id;
            set
            {
                if (Subnet is null)
                    Subnet = new WritableSubResource();
                Subnet.Id = value;
            }
        }
    }
}
