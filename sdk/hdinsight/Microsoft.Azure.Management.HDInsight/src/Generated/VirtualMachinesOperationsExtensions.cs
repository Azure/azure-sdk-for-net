// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for VirtualMachinesOperations.
    /// </summary>
    public static partial class VirtualMachinesOperationsExtensions
    {
            /// <summary>
            /// Lists the HDInsight clusters hosts
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            public static IList<HostInfo> ListHosts(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName)
            {
                return operations.ListHostsAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the HDInsight clusters hosts
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<HostInfo>> ListHostsAsync(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListHostsWithHttpMessagesAsync(resourceGroupName, clusterName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Restarts the specified HDInsight cluster hosts.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='hosts'>
            /// The list of hosts to restart
            /// </param>
            public static void RestartHosts(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, IList<string> hosts)
            {
                operations.RestartHostsAsync(resourceGroupName, clusterName, hosts).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Restarts the specified HDInsight cluster hosts.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='hosts'>
            /// The list of hosts to restart
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task RestartHostsAsync(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, IList<string> hosts, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.RestartHostsWithHttpMessagesAsync(resourceGroupName, clusterName, hosts, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the async operation status.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='operationId'>
            /// The long running operation id.
            /// </param>
            public static AsyncOperationResult GetAsyncOperationStatus(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, string operationId)
            {
                return operations.GetAsyncOperationStatusAsync(resourceGroupName, clusterName, operationId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the async operation status.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='operationId'>
            /// The long running operation id.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncOperationResult> GetAsyncOperationStatusAsync(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, string operationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAsyncOperationStatusWithHttpMessagesAsync(resourceGroupName, clusterName, operationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Restarts the specified HDInsight cluster hosts.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='hosts'>
            /// The list of hosts to restart
            /// </param>
            public static void BeginRestartHosts(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, IList<string> hosts)
            {
                operations.BeginRestartHostsAsync(resourceGroupName, clusterName, hosts).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Restarts the specified HDInsight cluster hosts.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='hosts'>
            /// The list of hosts to restart
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginRestartHostsAsync(this IVirtualMachinesOperations operations, string resourceGroupName, string clusterName, IList<string> hosts, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginRestartHostsWithHttpMessagesAsync(resourceGroupName, clusterName, hosts, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
