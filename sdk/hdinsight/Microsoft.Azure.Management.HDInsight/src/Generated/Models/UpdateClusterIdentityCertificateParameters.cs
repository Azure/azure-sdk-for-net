// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The update cluster identity certificate request parameters.
    /// </summary>
    public partial class UpdateClusterIdentityCertificateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// UpdateClusterIdentityCertificateParameters class.
        /// </summary>
        public UpdateClusterIdentityCertificateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// UpdateClusterIdentityCertificateParameters class.
        /// </summary>
        /// <param name="applicationId">The application id.</param>
        /// <param name="certificate">The certificate in base64 encoded
        /// format.</param>
        /// <param name="certificatePassword">The password of the
        /// certificate.</param>
        public UpdateClusterIdentityCertificateParameters(string applicationId = default(string), string certificate = default(string), string certificatePassword = default(string))
        {
            ApplicationId = applicationId;
            Certificate = certificate;
            CertificatePassword = certificatePassword;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the application id.
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the certificate in base64 encoded format.
        /// </summary>
        [JsonProperty(PropertyName = "certificate")]
        public string Certificate { get; set; }

        /// <summary>
        /// Gets or sets the password of the certificate.
        /// </summary>
        [JsonProperty(PropertyName = "certificatePassword")]
        public string CertificatePassword { get; set; }

    }
}
