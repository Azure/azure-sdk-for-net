// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The regional quota capacity.
    /// </summary>
    public partial class RegionalQuotaCapability
    {
        /// <summary>
        /// Initializes a new instance of the RegionalQuotaCapability class.
        /// </summary>
        public RegionalQuotaCapability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegionalQuotaCapability class.
        /// </summary>
        /// <param name="regionName">The region name.</param>
        /// <param name="coresUsed">The number of cores used in the
        /// region.</param>
        /// <param name="coresAvailable">The number of cores available in the
        /// region.</param>
        public RegionalQuotaCapability(string regionName = default(string), long? coresUsed = default(long?), long? coresAvailable = default(long?))
        {
            RegionName = regionName;
            CoresUsed = coresUsed;
            CoresAvailable = coresAvailable;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the region name.
        /// </summary>
        [JsonProperty(PropertyName = "region_name")]
        public string RegionName { get; set; }

        /// <summary>
        /// Gets or sets the number of cores used in the region.
        /// </summary>
        [JsonProperty(PropertyName = "cores_used")]
        public long? CoresUsed { get; set; }

        /// <summary>
        /// Gets or sets the number of cores available in the region.
        /// </summary>
        [JsonProperty(PropertyName = "cores_available")]
        public long? CoresAvailable { get; set; }

    }
}
