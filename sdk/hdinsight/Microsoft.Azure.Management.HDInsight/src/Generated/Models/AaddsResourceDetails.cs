// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Azure active directory domain service resource details.
    /// </summary>
    public partial class AaddsResourceDetails
    {
        /// <summary>
        /// Initializes a new instance of the AaddsResourceDetails class.
        /// </summary>
        public AaddsResourceDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AaddsResourceDetails class.
        /// </summary>
        /// <param name="domainName">The Azure active directory domain service
        /// name.</param>
        /// <param name="initialSyncComplete">This indicates whether initial
        /// sync complete or not.</param>
        /// <param name="ldapsEnabled">This indicates whether enable ldaps or
        /// not.</param>
        /// <param name="ldapsPublicCertificateInBase64">The base 64 format
        /// string of public ldap certificate.</param>
        /// <param name="resourceId">The resource id of azure active directory
        /// domain service.</param>
        /// <param name="subnetId">The subnet resource id.</param>
        /// <param name="tenantId">The tenant id of azure active directory
        /// domain service .</param>
        public AaddsResourceDetails(string domainName = default(string), bool? initialSyncComplete = default(bool?), bool? ldapsEnabled = default(bool?), string ldapsPublicCertificateInBase64 = default(string), string resourceId = default(string), string subnetId = default(string), string tenantId = default(string))
        {
            DomainName = domainName;
            InitialSyncComplete = initialSyncComplete;
            LdapsEnabled = ldapsEnabled;
            LdapsPublicCertificateInBase64 = ldapsPublicCertificateInBase64;
            ResourceId = resourceId;
            SubnetId = subnetId;
            TenantId = tenantId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Azure active directory domain service name.
        /// </summary>
        [JsonProperty(PropertyName = "domainName")]
        public string DomainName { get; set; }

        /// <summary>
        /// Gets or sets this indicates whether initial sync complete or not.
        /// </summary>
        [JsonProperty(PropertyName = "initialSyncComplete")]
        public bool? InitialSyncComplete { get; set; }

        /// <summary>
        /// Gets or sets this indicates whether enable ldaps or not.
        /// </summary>
        [JsonProperty(PropertyName = "ldapsEnabled")]
        public bool? LdapsEnabled { get; set; }

        /// <summary>
        /// Gets or sets the base 64 format string of public ldap certificate.
        /// </summary>
        [JsonProperty(PropertyName = "ldapsPublicCertificateInBase64")]
        public string LdapsPublicCertificateInBase64 { get; set; }

        /// <summary>
        /// Gets or sets the resource id of azure active directory domain
        /// service.
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets the subnet resource id.
        /// </summary>
        [JsonProperty(PropertyName = "subnetId")]
        public string SubnetId { get; set; }

        /// <summary>
        /// Gets or sets the tenant id of azure active directory domain service
        /// .
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

    }
}
