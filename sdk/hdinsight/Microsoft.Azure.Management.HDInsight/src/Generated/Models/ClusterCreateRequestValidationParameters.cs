// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The cluster create request specification.
    /// </summary>
    public partial class ClusterCreateRequestValidationParameters : ClusterCreateParametersExtended
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ClusterCreateRequestValidationParameters class.
        /// </summary>
        public ClusterCreateRequestValidationParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ClusterCreateRequestValidationParameters class.
        /// </summary>
        /// <param name="location">The location of the cluster.</param>
        /// <param name="tags">The resource tags.</param>
        /// <param name="properties">The cluster create parameters.</param>
        /// <param name="identity">The identity of the cluster, if
        /// configured.</param>
        /// <param name="name">The cluster name.</param>
        /// <param name="type">The resource type.</param>
        /// <param name="tenantId">The tenant id.</param>
        /// <param name="fetchAaddsResource">This indicates whether fetch Aadds
        /// resource or not.</param>
        public ClusterCreateRequestValidationParameters(string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), ClusterCreateProperties properties = default(ClusterCreateProperties), ClusterIdentity identity = default(ClusterIdentity), string name = default(string), string type = default(string), string tenantId = default(string), bool? fetchAaddsResource = default(bool?))
            : base(location, tags, properties, identity)
        {
            Name = name;
            Type = type;
            TenantId = tenantId;
            FetchAaddsResource = fetchAaddsResource;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the cluster name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the tenant id.
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets this indicates whether fetch Aadds resource or not.
        /// </summary>
        [JsonProperty(PropertyName = "fetchAaddsResource")]
        public bool? FetchAaddsResource { get; set; }

    }
}
