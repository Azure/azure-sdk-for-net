// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The disk encryption properties
    /// </summary>
    public partial class DiskEncryptionProperties
    {
        /// <summary>
        /// Initializes a new instance of the DiskEncryptionProperties class.
        /// </summary>
        public DiskEncryptionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiskEncryptionProperties class.
        /// </summary>
        /// <param name="vaultUri">Base key vault URI where the customers key
        /// is located eg. https://myvault.vault.azure.net</param>
        /// <param name="keyName">Key name that is used for enabling disk
        /// encryption.</param>
        /// <param name="keyVersion">Specific key version that is used for
        /// enabling disk encryption.</param>
        /// <param name="encryptionAlgorithm">Algorithm identifier for
        /// encryption, default RSA-OAEP. Possible values include: 'RSA-OAEP',
        /// 'RSA-OAEP-256', 'RSA1_5'</param>
        /// <param name="msiResourceId">Resource ID of Managed Identity that is
        /// used to access the key vault.</param>
        /// <param name="encryptionAtHost">Indicates whether or not resource
        /// disk encryption is enabled.</param>
        public DiskEncryptionProperties(string vaultUri = default(string), string keyName = default(string), string keyVersion = default(string), string encryptionAlgorithm = default(string), string msiResourceId = default(string), bool? encryptionAtHost = default(bool?))
        {
            VaultUri = vaultUri;
            KeyName = keyName;
            KeyVersion = keyVersion;
            EncryptionAlgorithm = encryptionAlgorithm;
            MsiResourceId = msiResourceId;
            EncryptionAtHost = encryptionAtHost;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets base key vault URI where the customers key is located
        /// eg. https://myvault.vault.azure.net
        /// </summary>
        [JsonProperty(PropertyName = "vaultUri")]
        public string VaultUri { get; set; }

        /// <summary>
        /// Gets or sets key name that is used for enabling disk encryption.
        /// </summary>
        [JsonProperty(PropertyName = "keyName")]
        public string KeyName { get; set; }

        /// <summary>
        /// Gets or sets specific key version that is used for enabling disk
        /// encryption.
        /// </summary>
        [JsonProperty(PropertyName = "keyVersion")]
        public string KeyVersion { get; set; }

        /// <summary>
        /// Gets or sets algorithm identifier for encryption, default RSA-OAEP.
        /// Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        /// </summary>
        [JsonProperty(PropertyName = "encryptionAlgorithm")]
        public string EncryptionAlgorithm { get; set; }

        /// <summary>
        /// Gets or sets resource ID of Managed Identity that is used to access
        /// the key vault.
        /// </summary>
        [JsonProperty(PropertyName = "msiResourceId")]
        public string MsiResourceId { get; set; }

        /// <summary>
        /// Gets or sets indicates whether or not resource disk encryption is
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "encryptionAtHost")]
        public bool? EncryptionAtHost { get; set; }

    }
}
