// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.HDInsight.Job.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ApplicationState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ApplicationState
    {
        [EnumMember(Value = "NEW")]
        NEW,
        [EnumMember(Value = "NEW_SAVING")]
        NEWSAVING,
        [EnumMember(Value = "SUBMITTED")]
        SUBMITTED,
        [EnumMember(Value = "ACCEPTED")]
        ACCEPTED,
        [EnumMember(Value = "RUNNING")]
        RUNNING,
        [EnumMember(Value = "FINISHED")]
        FINISHED,
        [EnumMember(Value = "FINISHING")]
        FINISHING,
        [EnumMember(Value = "FAILED")]
        FAILED,
        [EnumMember(Value = "KILLED")]
        KILLED
    }
    internal static class ApplicationStateEnumExtension
    {
        internal static string ToSerializedValue(this ApplicationState? value)
        {
            return value == null ? null : ((ApplicationState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ApplicationState value)
        {
            switch( value )
            {
                case ApplicationState.NEW:
                    return "NEW";
                case ApplicationState.NEWSAVING:
                    return "NEW_SAVING";
                case ApplicationState.SUBMITTED:
                    return "SUBMITTED";
                case ApplicationState.ACCEPTED:
                    return "ACCEPTED";
                case ApplicationState.RUNNING:
                    return "RUNNING";
                case ApplicationState.FINISHED:
                    return "FINISHED";
                case ApplicationState.FINISHING:
                    return "FINISHING";
                case ApplicationState.FAILED:
                    return "FAILED";
                case ApplicationState.KILLED:
                    return "KILLED";
            }
            return null;
        }

        internal static ApplicationState? ParseApplicationState(this string value)
        {
            switch( value )
            {
                case "NEW":
                    return ApplicationState.NEW;
                case "NEW_SAVING":
                    return ApplicationState.NEWSAVING;
                case "SUBMITTED":
                    return ApplicationState.SUBMITTED;
                case "ACCEPTED":
                    return ApplicationState.ACCEPTED;
                case "RUNNING":
                    return ApplicationState.RUNNING;
                case "FINISHED":
                    return ApplicationState.FINISHED;
                case "FINISHING":
                    return ApplicationState.FINISHING;
                case "FAILED":
                    return ApplicationState.FAILED;
                case "KILLED":
                    return ApplicationState.KILLED;
            }
            return null;
        }
    }
}
