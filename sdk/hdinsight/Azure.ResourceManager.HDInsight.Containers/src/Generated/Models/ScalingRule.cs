// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Containers.Models
{
    /// <summary> The scaling rule. </summary>
    public partial class ScalingRule
    {
        /// <summary> Initializes a new instance of <see cref="ScalingRule"/>. </summary>
        /// <param name="actionType"> The action type. </param>
        /// <param name="evaluationCount"> This is an evaluation count for a scaling condition, the number of times a trigger condition should be successful, before scaling activity is triggered. </param>
        /// <param name="scalingMetric"> Metrics name for individual workloads. For example: cpu. </param>
        /// <param name="comparisonRule"> The comparison rule. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scalingMetric"/> or <paramref name="comparisonRule"/> is null. </exception>
        public ScalingRule(ScaleActionType actionType, int evaluationCount, string scalingMetric, HDInsightComparisonRule comparisonRule)
        {
            Argument.AssertNotNull(scalingMetric, nameof(scalingMetric));
            Argument.AssertNotNull(comparisonRule, nameof(comparisonRule));

            ActionType = actionType;
            EvaluationCount = evaluationCount;
            ScalingMetric = scalingMetric;
            ComparisonRule = comparisonRule;
        }

        /// <summary> The action type. </summary>
        public ScaleActionType ActionType { get; set; }
        /// <summary> This is an evaluation count for a scaling condition, the number of times a trigger condition should be successful, before scaling activity is triggered. </summary>
        public int EvaluationCount { get; set; }
        /// <summary> Metrics name for individual workloads. For example: cpu. </summary>
        public string ScalingMetric { get; set; }
        /// <summary> The comparison rule. </summary>
        public HDInsightComparisonRule ComparisonRule { get; set; }
    }
}
