// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Containers.Models
{
    public partial class ClusterInstanceViewResult
    {
        internal static ClusterInstanceViewResult DeserializeClusterInstanceViewResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string name = default;
            ClusterInstanceViewStatus status = default;
            IReadOnlyList<HDInsightServiceStatus> serviceStatuses = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("status"u8))
                        {
                            status = ClusterInstanceViewStatus.DeserializeClusterInstanceViewStatus(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("serviceStatuses"u8))
                        {
                            List<HDInsightServiceStatus> array = new List<HDInsightServiceStatus>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(HDInsightServiceStatus.DeserializeHDInsightServiceStatus(item));
                            }
                            serviceStatuses = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ClusterInstanceViewResult(name, status, serviceStatuses);
        }
    }
}
