// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Containers.Models
{
    public partial class FlinkJobProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("jobName"u8);
            writer.WriteStringValue(JobName);
            if (Optional.IsDefined(JobJarDirectory))
            {
                writer.WritePropertyName("jobJarDirectory"u8);
                writer.WriteStringValue(JobJarDirectory);
            }
            if (Optional.IsDefined(JarName))
            {
                writer.WritePropertyName("jarName"u8);
                writer.WriteStringValue(JarName);
            }
            if (Optional.IsDefined(EntryClass))
            {
                writer.WritePropertyName("entryClass"u8);
                writer.WriteStringValue(EntryClass);
            }
            if (Optional.IsDefined(Args))
            {
                writer.WritePropertyName("args"u8);
                writer.WriteStringValue(Args);
            }
            if (Optional.IsDefined(SavePointName))
            {
                writer.WritePropertyName("savePointName"u8);
                writer.WriteStringValue(SavePointName);
            }
            if (Optional.IsDefined(Action))
            {
                writer.WritePropertyName("action"u8);
                writer.WriteStringValue(Action.Value.ToString());
            }
            if (Optional.IsCollectionDefined(FlinkConfiguration))
            {
                writer.WritePropertyName("flinkConfiguration"u8);
                writer.WriteStartObject();
                foreach (var item in FlinkConfiguration)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WritePropertyName("jobType"u8);
            writer.WriteStringValue(JobType.ToString());
            writer.WriteEndObject();
        }

        internal static FlinkJobProperties DeserializeFlinkJobProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string jobName = default;
            Optional<string> jobJarDirectory = default;
            Optional<string> jarName = default;
            Optional<string> entryClass = default;
            Optional<string> args = default;
            Optional<string> savePointName = default;
            Optional<FlinkJobAction> action = default;
            Optional<IDictionary<string, string>> flinkConfiguration = default;
            Optional<string> jobId = default;
            Optional<string> status = default;
            Optional<string> jobOutput = default;
            Optional<string> actionResult = default;
            Optional<string> lastSavePoint = default;
            ClusterJobType jobType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobName"u8))
                {
                    jobName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("jobJarDirectory"u8))
                {
                    jobJarDirectory = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("jarName"u8))
                {
                    jarName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("entryClass"u8))
                {
                    entryClass = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("args"u8))
                {
                    args = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("savePointName"u8))
                {
                    savePointName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("action"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    action = new FlinkJobAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("flinkConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    flinkConfiguration = dictionary;
                    continue;
                }
                if (property.NameEquals("jobId"u8))
                {
                    jobId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("jobOutput"u8))
                {
                    jobOutput = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("actionResult"u8))
                {
                    actionResult = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastSavePoint"u8))
                {
                    lastSavePoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("jobType"u8))
                {
                    jobType = new ClusterJobType(property.Value.GetString());
                    continue;
                }
            }
            return new FlinkJobProperties(jobType, jobName, jobJarDirectory.Value, jarName.Value, entryClass.Value, args.Value, savePointName.Value, Optional.ToNullable(action), Optional.ToDictionary(flinkConfiguration), jobId.Value, status.Value, jobOutput.Value, actionResult.Value, lastSavePoint.Value);
        }
    }
}
