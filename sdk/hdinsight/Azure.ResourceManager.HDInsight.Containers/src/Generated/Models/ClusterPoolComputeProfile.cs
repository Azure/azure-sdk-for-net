// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Containers.Models
{
    /// <summary> Cluster pool compute profile. </summary>
    public partial class ClusterPoolComputeProfile
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ClusterPoolComputeProfile"/>. </summary>
        /// <param name="vmSize"> The virtual machine SKU. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="vmSize"/> is null. </exception>
        public ClusterPoolComputeProfile(string vmSize)
        {
            Argument.AssertNotNull(vmSize, nameof(vmSize));

            VmSize = vmSize;
        }

        /// <summary> Initializes a new instance of <see cref="ClusterPoolComputeProfile"/>. </summary>
        /// <param name="vmSize"> The virtual machine SKU. </param>
        /// <param name="count"> The number of virtual machines. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ClusterPoolComputeProfile(string vmSize, int? count, Dictionary<string, BinaryData> rawData)
        {
            VmSize = vmSize;
            Count = count;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ClusterPoolComputeProfile"/> for deserialization. </summary>
        internal ClusterPoolComputeProfile()
        {
        }

        /// <summary> The virtual machine SKU. </summary>
        public string VmSize { get; set; }
        /// <summary> The number of virtual machines. </summary>
        public int? Count { get; }
    }
}
