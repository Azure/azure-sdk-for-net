// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Containers.Models
{
    public partial class ClusterLogAnalyticsApplicationLogs : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IsStdOutEnabled))
            {
                writer.WritePropertyName("stdOutEnabled"u8);
                writer.WriteBooleanValue(IsStdOutEnabled.Value);
            }
            if (Optional.IsDefined(IsStdErrorEnabled))
            {
                writer.WritePropertyName("stdErrorEnabled"u8);
                writer.WriteBooleanValue(IsStdErrorEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static ClusterLogAnalyticsApplicationLogs DeserializeClusterLogAnalyticsApplicationLogs(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> stdOutEnabled = default;
            Optional<bool> stdErrorEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("stdOutEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    stdOutEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("stdErrorEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    stdErrorEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ClusterLogAnalyticsApplicationLogs(Optional.ToNullable(stdOutEnabled), Optional.ToNullable(stdErrorEnabled));
        }
    }
}
