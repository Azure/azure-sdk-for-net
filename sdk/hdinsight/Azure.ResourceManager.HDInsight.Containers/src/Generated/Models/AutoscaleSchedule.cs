// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.HDInsight.Containers.Models
{
    /// <summary> Schedule definition. </summary>
    public partial class AutoscaleSchedule
    {
        /// <summary> Initializes a new instance of <see cref="AutoscaleSchedule"/>. </summary>
        /// <param name="startOn"> User has to set the start time of current schedule configuration, format like 10:30 (HH:MM). </param>
        /// <param name="endOn"> User has to set the end time of current schedule configuration, format like 10:30 (HH:MM). </param>
        /// <param name="count"> User has to set the node count anticipated at end of the scaling operation of the set current schedule configuration, format is integer. </param>
        /// <param name="days"> User has to set the days where schedule has to be set for autoscale operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="days"/> is null. </exception>
        public AutoscaleSchedule(DateTimeOffset startOn, DateTimeOffset endOn, int count, IEnumerable<AutoscaleScheduleDay> days)
        {
            Argument.AssertNotNull(days, nameof(days));

            StartOn = startOn;
            EndOn = endOn;
            Count = count;
            Days = days.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="AutoscaleSchedule"/>. </summary>
        /// <param name="startOn"> User has to set the start time of current schedule configuration, format like 10:30 (HH:MM). </param>
        /// <param name="endOn"> User has to set the end time of current schedule configuration, format like 10:30 (HH:MM). </param>
        /// <param name="count"> User has to set the node count anticipated at end of the scaling operation of the set current schedule configuration, format is integer. </param>
        /// <param name="days"> User has to set the days where schedule has to be set for autoscale operation. </param>
        internal AutoscaleSchedule(DateTimeOffset startOn, DateTimeOffset endOn, int count, IList<AutoscaleScheduleDay> days)
        {
            StartOn = startOn;
            EndOn = endOn;
            Count = count;
            Days = days;
        }

        /// <summary> User has to set the start time of current schedule configuration, format like 10:30 (HH:MM). </summary>
        public DateTimeOffset StartOn { get; set; }
        /// <summary> User has to set the end time of current schedule configuration, format like 10:30 (HH:MM). </summary>
        public DateTimeOffset EndOn { get; set; }
        /// <summary> User has to set the node count anticipated at end of the scaling operation of the set current schedule configuration, format is integer. </summary>
        public int Count { get; set; }
        /// <summary> User has to set the days where schedule has to be set for autoscale operation. </summary>
        public IList<AutoscaleScheduleDay> Days { get; }
    }
}
