// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.HardwareSecurityModules.Models;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.HardwareSecurityModules.Samples
{
    public partial class Sample_ResourceGroupResourceExtensions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetDedicatedHsm_GetADedicatedHSM()
        {
            // Generated from example definition: 2025-03-31/DedicatedHsm_Get.json
            // this example is just showing the usage of "DedicatedHsm_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsm result = await resourceGroupResource.GetDedicatedHsmAsync(name);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetDedicatedHsm_GetAPaymentHSM()
        {
            // Generated from example definition: 2025-03-31/PaymentHsm_Get.json
            // this example is just showing the usage of "DedicatedHsm_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsm result = await resourceGroupResource.GetDedicatedHsmAsync(name);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetDedicatedHsm_GetAPaymentHSMWith20181031PreviewApiVersion()
        {
            // Generated from example definition: 2025-03-31/PaymentHsm_Get_With_2018-10-31Preview_Version.json
            // this example is just showing the usage of "DedicatedHsm_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsm result = await resourceGroupResource.GetDedicatedHsmAsync(name);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdateDedicatedHsm_CreateANewOrUpdateAnExistingDedicatedHSM()
        {
            // Generated from example definition: 2025-03-31/DedicatedHsm_CreateOrUpdate.json
            // this example is just showing the usage of "DedicatedHsm_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsm dedicatedHsm = new DedicatedHsm(new AzureLocation("westus"), new DedicatedHsmSku
            {
                Name = DedicatedHsmSkuName.SafeNetLunaNetworkHsmA790,
            }, new DedicatedHsmProperties
            {
                NetworkProfile = new DedicatedHsmNetworkProfile
                {
                    SubnetResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/hsm-group/providers/Microsoft.Network/virtualNetworks/stamp01/subnets/stamp01"),
                    NetworkInterfaces = {new DedicatedHsmNetworkInterface
{
PrivateIPAddress = "1.0.0.1",
}},
                },
                StampId = "stamp01",
            })
            {
                Tags =
{
["Dept"] = "hsm",
["Environment"] = "dogfood"
},
            };
            ArmOperation<DedicatedHsm> lro = await resourceGroupResource.CreateOrUpdateDedicatedHsmAsync(WaitUntil.Completed, name, dedicatedHsm);
            DedicatedHsm result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdateDedicatedHsm_CreateANewOrUpdateAnExistingPaymentHSM()
        {
            // Generated from example definition: 2025-03-31/PaymentHsm_CreateOrUpdate.json
            // this example is just showing the usage of "DedicatedHsm_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsm dedicatedHsm = new DedicatedHsm(new AzureLocation("westus"), new DedicatedHsmSku
            {
                Name = DedicatedHsmSkuName.PayShield10KLmk1Cps60,
            }, new DedicatedHsmProperties
            {
                NetworkProfile = new DedicatedHsmNetworkProfile
                {
                    SubnetResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/hsm-group/providers/Microsoft.Network/virtualNetworks/stamp01/subnets/stamp01"),
                    NetworkInterfaces = {new DedicatedHsmNetworkInterface
{
PrivateIPAddress = "1.0.0.1",
}},
                },
                StampId = "stamp01",
            })
            {
                Tags =
{
["Dept"] = "hsm",
["Environment"] = "dogfood"
},
            };
            ArmOperation<DedicatedHsm> lro = await resourceGroupResource.CreateOrUpdateDedicatedHsmAsync(WaitUntil.Completed, name, dedicatedHsm);
            DedicatedHsm result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdateDedicatedHsm_CreateANewOrUpdateAnExistingPaymentHSMWithManagementProfile()
        {
            // Generated from example definition: 2025-03-31/PaymentHsm_CreateOrUpdate_WithManagementProfile.json
            // this example is just showing the usage of "DedicatedHsm_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsm dedicatedHsm = new DedicatedHsm(new AzureLocation("westus"), new DedicatedHsmSku
            {
                Name = DedicatedHsmSkuName.PayShield10KLmk1Cps60,
            }, new DedicatedHsmProperties
            {
                NetworkProfile = new DedicatedHsmNetworkProfile
                {
                    SubnetResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/hsm-group/providers/Microsoft.Network/virtualNetworks/stamp01/subnets/stamp01"),
                    NetworkInterfaces = {new DedicatedHsmNetworkInterface
{
PrivateIPAddress = "1.0.0.1",
}},
                },
                ManagementNetworkProfile = new DedicatedHsmNetworkProfile
                {
                    SubnetResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/hsm-group/providers/Microsoft.Network/virtualNetworks/stamp01/subnets/stamp01"),
                    NetworkInterfaces = {new DedicatedHsmNetworkInterface
{
PrivateIPAddress = "1.0.0.2",
}},
                },
                StampId = "stamp01",
            })
            {
                Tags =
{
["Dept"] = "hsm",
["Environment"] = "dogfood"
},
            };
            ArmOperation<DedicatedHsm> lro = await resourceGroupResource.CreateOrUpdateDedicatedHsmAsync(WaitUntil.Completed, name, dedicatedHsm);
            DedicatedHsm result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task UpdateDedicatedHsm_UpdateAnExistingDedicatedHSM()
        {
            // Generated from example definition: 2025-03-31/DedicatedHsm_Update.json
            // this example is just showing the usage of "DedicatedHsm_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsmPatchContent content = new DedicatedHsmPatchContent
            {
                Tags =
{
["Dept"] = "hsm",
["Environment"] = "dogfood",
["Slice"] = "A"
},
            };
            ArmOperation<DedicatedHsm> lro = await resourceGroupResource.UpdateDedicatedHsmAsync(WaitUntil.Completed, name, content);
            DedicatedHsm result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task UpdateDedicatedHsm_UpdateAnExistingPaymentHSM()
        {
            // Generated from example definition: 2025-03-31/PaymentHsm_Update.json
            // this example is just showing the usage of "DedicatedHsm_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            DedicatedHsmPatchContent content = new DedicatedHsmPatchContent
            {
                Tags =
{
["Dept"] = "hsm",
["Environment"] = "dogfood",
["Slice"] = "A"
},
            };
            ArmOperation<DedicatedHsm> lro = await resourceGroupResource.UpdateDedicatedHsmAsync(WaitUntil.Completed, name, content);
            DedicatedHsm result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task DeleteDedicatedHsm_DeleteADedicatedHSM()
        {
            // Generated from example definition: 2025-03-31/DedicatedHsm_Delete.json
            // this example is just showing the usage of "DedicatedHsm_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation
            string name = "hsm1";
            await resourceGroupResource.DeleteDedicatedHsmAsync(WaitUntil.Completed, name);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetDedicatedHsmsByResourceGroup_ListDedicatedHSMDevicesInAResourceGroup()
        {
            // Generated from example definition: 2025-03-31/DedicatedHsm_ListByResourceGroup.json
            // this example is just showing the usage of "DedicatedHsm_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation and iterate over the result
            await foreach (DedicatedHsm item in resourceGroupResource.GetDedicatedHsmsByResourceGroupAsync())
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetDedicatedHsmsByResourceGroup_ListDedicatedHSMDevicesInAResourceGroupIncludingPaymentHSM()
        {
            // Generated from example definition: 2025-03-31/PaymentHsm_ListByResourceGroup.json
            // this example is just showing the usage of "DedicatedHsm_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation and iterate over the result
            await foreach (DedicatedHsm item in resourceGroupResource.GetDedicatedHsmsByResourceGroupAsync())
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetOutboundNetworkDependenciesEndpointsDedicatedHsms_ListOutboundNetworkDependenciesEndpointsByManagedCluster()
        {
            // Generated from example definition: 2025-03-31/GetOutboundNetworkDependenciesEndpointsList.json
            // this example is just showing the usage of "DedicatedHsms_ListOutboundNetworkDependenciesEndpoints" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "hsm-group";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // invoke the operation and iterate over the result
            string name = "hsm1";
            await foreach (DedicatedHsmEgressEndpoint item in resourceGroupResource.GetOutboundNetworkDependenciesEndpointsDedicatedHsmsAsync(name))
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine("Succeeded");
        }
    }
}
