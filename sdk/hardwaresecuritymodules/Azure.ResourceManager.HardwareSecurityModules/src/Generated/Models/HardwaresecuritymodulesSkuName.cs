// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Hardwaresecuritymodules.Models
{
    /// <summary> SKU of the dedicated HSM. </summary>
    public readonly partial struct HardwaresecuritymodulesSkuName : IEquatable<HardwaresecuritymodulesSkuName>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="HardwaresecuritymodulesSkuName"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public HardwaresecuritymodulesSkuName(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SafeNetLunaNetworkHSMA790Value = "SafeNet Luna Network HSM A790";
        private const string PayShield10KLMK1CPS60Value = "payShield10K_LMK1_CPS60";
        private const string PayShield10KLMK1CPS250Value = "payShield10K_LMK1_CPS250";
        private const string PayShield10KLMK1CPS2500Value = "payShield10K_LMK1_CPS2500";
        private const string PayShield10KLMK2CPS60Value = "payShield10K_LMK2_CPS60";
        private const string PayShield10KLMK2CPS250Value = "payShield10K_LMK2_CPS250";
        private const string PayShield10KLMK2CPS2500Value = "payShield10K_LMK2_CPS2500";

        /// <summary> The dedicated HSM is a Safenet Luna Network HSM A790 device. </summary>
        public static HardwaresecuritymodulesSkuName SafeNetLunaNetworkHSMA790 { get; } = new HardwaresecuritymodulesSkuName(SafeNetLunaNetworkHSMA790Value);
        /// <summary> The dedicated HSM is a payShield 10K, model PS10-D, 10Gb Ethernet Hardware Platform device with 1 local master key which supports up to 60 calls per second. </summary>
        public static HardwaresecuritymodulesSkuName PayShield10KLMK1CPS60 { get; } = new HardwaresecuritymodulesSkuName(PayShield10KLMK1CPS60Value);
        /// <summary> The dedicated HSM is a payShield 10K, model PS10-D, 10Gb Ethernet Hardware Platform device with 1 local master key which supports up to 250 calls per second. </summary>
        public static HardwaresecuritymodulesSkuName PayShield10KLMK1CPS250 { get; } = new HardwaresecuritymodulesSkuName(PayShield10KLMK1CPS250Value);
        /// <summary> The dedicated HSM is a payShield 10K, model PS10-D, 10Gb Ethernet Hardware Platform device with 1 local master key which supports up to 2500 calls per second. </summary>
        public static HardwaresecuritymodulesSkuName PayShield10KLMK1CPS2500 { get; } = new HardwaresecuritymodulesSkuName(PayShield10KLMK1CPS2500Value);
        /// <summary> The dedicated HSM is a payShield 10K, model PS10-D, 10Gb Ethernet Hardware Platform device with 2 local master keys which supports up to 60 calls per second. </summary>
        public static HardwaresecuritymodulesSkuName PayShield10KLMK2CPS60 { get; } = new HardwaresecuritymodulesSkuName(PayShield10KLMK2CPS60Value);
        /// <summary> The dedicated HSM is a payShield 10K, model PS10-D, 10Gb Ethernet Hardware Platform device with 2 local master keys which supports up to 250 calls per second. </summary>
        public static HardwaresecuritymodulesSkuName PayShield10KLMK2CPS250 { get; } = new HardwaresecuritymodulesSkuName(PayShield10KLMK2CPS250Value);
        /// <summary> The dedicated HSM is a payShield 10K, model PS10-D, 10Gb Ethernet Hardware Platform device with 2 local master keys which supports up to 2500 calls per second. </summary>
        public static HardwaresecuritymodulesSkuName PayShield10KLMK2CPS2500 { get; } = new HardwaresecuritymodulesSkuName(PayShield10KLMK2CPS2500Value);
        /// <summary> Determines if two <see cref="HardwaresecuritymodulesSkuName"/> values are the same. </summary>
        public static bool operator ==(HardwaresecuritymodulesSkuName left, HardwaresecuritymodulesSkuName right) => left.Equals(right);
        /// <summary> Determines if two <see cref="HardwaresecuritymodulesSkuName"/> values are not the same. </summary>
        public static bool operator !=(HardwaresecuritymodulesSkuName left, HardwaresecuritymodulesSkuName right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="HardwaresecuritymodulesSkuName"/>. </summary>
        public static implicit operator HardwaresecuritymodulesSkuName(string value) => new HardwaresecuritymodulesSkuName(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is HardwaresecuritymodulesSkuName other && Equals(other);
        /// <inheritdoc />
        public bool Equals(HardwaresecuritymodulesSkuName other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
