// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.HardwareSecurityModules.Models
{
    /// <summary> Provisioning state. </summary>
    public readonly partial struct JsonWebKeyType : IEquatable<JsonWebKeyType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="JsonWebKeyType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public JsonWebKeyType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SucceededValue = "Succeeded";
        private const string ProvisioningValue = "Provisioning";
        private const string AllocatingValue = "Allocating";
        private const string ConnectingValue = "Connecting";
        private const string FailedValue = "Failed";
        private const string CheckingQuotaValue = "CheckingQuota";
        private const string DeletingValue = "Deleting";

        /// <summary> The dedicated HSM has been full provisioned. </summary>
        public static JsonWebKeyType Succeeded { get; } = new JsonWebKeyType(SucceededValue);
        /// <summary> The dedicated HSM is currently being provisioned. </summary>
        public static JsonWebKeyType Provisioning { get; } = new JsonWebKeyType(ProvisioningValue);
        /// <summary> A device is currently being allocated for the dedicated HSM resource. </summary>
        public static JsonWebKeyType Allocating { get; } = new JsonWebKeyType(AllocatingValue);
        /// <summary> The dedicated HSM is being connected to the virtual network. </summary>
        public static JsonWebKeyType Connecting { get; } = new JsonWebKeyType(ConnectingValue);
        /// <summary> Provisioning of the dedicated HSM has failed. </summary>
        public static JsonWebKeyType Failed { get; } = new JsonWebKeyType(FailedValue);
        /// <summary> Validating the subscription has sufficient quota to allocate a dedicated HSM device. </summary>
        public static JsonWebKeyType CheckingQuota { get; } = new JsonWebKeyType(CheckingQuotaValue);
        /// <summary> The dedicated HSM is currently being deleted. </summary>
        public static JsonWebKeyType Deleting { get; } = new JsonWebKeyType(DeletingValue);
        /// <summary> Determines if two <see cref="JsonWebKeyType"/> values are the same. </summary>
        public static bool operator ==(JsonWebKeyType left, JsonWebKeyType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="JsonWebKeyType"/> values are not the same. </summary>
        public static bool operator !=(JsonWebKeyType left, JsonWebKeyType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="JsonWebKeyType"/>. </summary>
        public static implicit operator JsonWebKeyType(string value) => new JsonWebKeyType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is JsonWebKeyType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(JsonWebKeyType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
