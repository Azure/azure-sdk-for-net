// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.HardwareSecurityModules.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HardwareSecurityModules
{
    /// <summary>
    /// A class representing the DedicatedHsm data model.
    /// Resource information with extended details.
    /// </summary>
    public partial class DedicatedHsmData : TrackedResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DedicatedHsmData"/>. </summary>
        /// <param name="location"> The location. </param>
        public DedicatedHsmData(AzureLocation location) : base(location)
        {
            Zones = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="DedicatedHsmData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="networkProfile"> Specifies the network interfaces of the dedicated hsm. </param>
        /// <param name="managementNetworkProfile"> Specifies the management network interfaces of the dedicated hsm. </param>
        /// <param name="stampId"> This field will be used when RP does not support Availability zones. </param>
        /// <param name="statusMessage"> Resource Status Message. </param>
        /// <param name="provisioningState"> Provisioning state. </param>
        /// <param name="sku"> SKU details. </param>
        /// <param name="zones"> The Dedicated Hsm zones. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DedicatedHsmData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, NetworkProfile networkProfile, NetworkProfile managementNetworkProfile, string stampId, string statusMessage, JsonWebKeyType? provisioningState, HardwareSecurityModulesSku sku, IList<string> zones, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData, tags, location)
        {
            NetworkProfile = networkProfile;
            ManagementNetworkProfile = managementNetworkProfile;
            StampId = stampId;
            StatusMessage = statusMessage;
            ProvisioningState = provisioningState;
            Sku = sku;
            Zones = zones;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DedicatedHsmData"/> for deserialization. </summary>
        internal DedicatedHsmData()
        {
        }

        /// <summary> Specifies the network interfaces of the dedicated hsm. </summary>
        public NetworkProfile NetworkProfile { get; set; }
        /// <summary> Specifies the management network interfaces of the dedicated hsm. </summary>
        public NetworkProfile ManagementNetworkProfile { get; set; }
        /// <summary> This field will be used when RP does not support Availability zones. </summary>
        public string StampId { get; set; }
        /// <summary> Resource Status Message. </summary>
        public string StatusMessage { get; }
        /// <summary> Provisioning state. </summary>
        public JsonWebKeyType? ProvisioningState { get; }
        /// <summary> SKU details. </summary>
        internal HardwareSecurityModulesSku Sku { get; set; }
        /// <summary> SKU of the dedicated HSM. </summary>
        public HardwareSecurityModulesSkuName? SkuName
        {
            get => Sku is null ? default : Sku.Name;
            set
            {
                if (Sku is null)
                    Sku = new HardwareSecurityModulesSku();
                Sku.Name = value;
            }
        }

        /// <summary> The Dedicated Hsm zones. </summary>
        public IList<string> Zones { get; }
    }
}
