// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;
using Azure.ResourceManager.Hardwaresecuritymodules.Models;

namespace Azure.ResourceManager.Hardwaresecuritymodules
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    internal partial class ResourceGroupResourceExtensionClient : ArmResource
    {
        private ClientDiagnostics _cloudHsmClustersClientDiagnostics;
        private CloudHsmClustersRestOperations _cloudHsmClustersRestClient;
        private ClientDiagnostics _cloudHsmClusterPrivateLinkResourcesClientDiagnostics;
        private CloudHsmClusterPrivateLinkResourcesRestOperations _cloudHsmClusterPrivateLinkResourcesRestClient;
        private ClientDiagnostics _cloudHsmClusterPrivateEndpointConnectionsClientDiagnostics;
        private CloudHsmClusterPrivateEndpointConnectionsRestOperations _cloudHsmClusterPrivateEndpointConnectionsRestClient;
        private ClientDiagnostics _privateEndpointConnectionsClientDiagnostics;
        private PrivateEndpointConnectionsRestOperations _privateEndpointConnectionsRestClient;

        /// <summary> Initializes a new instance of the <see cref="ResourceGroupResourceExtensionClient"/> class for mocking. </summary>
        protected ResourceGroupResourceExtensionClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="ResourceGroupResourceExtensionClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal ResourceGroupResourceExtensionClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics CloudHsmClustersClientDiagnostics => _cloudHsmClustersClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hardwaresecuritymodules", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private CloudHsmClustersRestOperations CloudHsmClustersRestClient => _cloudHsmClustersRestClient ??= new CloudHsmClustersRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);
        private ClientDiagnostics CloudHsmClusterPrivateLinkResourcesClientDiagnostics => _cloudHsmClusterPrivateLinkResourcesClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hardwaresecuritymodules", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private CloudHsmClusterPrivateLinkResourcesRestOperations CloudHsmClusterPrivateLinkResourcesRestClient => _cloudHsmClusterPrivateLinkResourcesRestClient ??= new CloudHsmClusterPrivateLinkResourcesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);
        private ClientDiagnostics CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics => _cloudHsmClusterPrivateEndpointConnectionsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hardwaresecuritymodules", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private CloudHsmClusterPrivateEndpointConnectionsRestOperations CloudHsmClusterPrivateEndpointConnectionsRestClient => _cloudHsmClusterPrivateEndpointConnectionsRestClient ??= new CloudHsmClusterPrivateEndpointConnectionsRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);
        private ClientDiagnostics PrivateEndpointConnectionsClientDiagnostics => _privateEndpointConnectionsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hardwaresecuritymodules", ProviderConstants.DefaultProviderNamespace, Diagnostics);
        private PrivateEndpointConnectionsRestOperations PrivateEndpointConnectionsRestClient => _privateEndpointConnectionsRestClient ??= new PrivateEndpointConnectionsRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint);

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of DedicatedHsmResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of DedicatedHsmResources and their operations over a DedicatedHsmResource. </returns>
        public virtual DedicatedHsmCollection GetDedicatedHsms()
        {
            return GetCachedClient(Client => new DedicatedHsmCollection(Client, Id));
        }

        /// <summary>
        /// Create or Update a Cloud HSM Cluster in the specified subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_CreateOrUpdate</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="body"> Parameters to create Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<ArmOperation<CloudHsmCluster>> CreateOrUpdateCloudHsmClusterAsync(WaitUntil waitUntil, string cloudHsmClusterName, CloudHsmCluster body, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.CreateOrUpdateCloudHsmCluster");
            scope.Start();
            try
            {
                var response = await CloudHsmClustersRestClient.CreateOrUpdateAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, body, cancellationToken).ConfigureAwait(false);
                var operation = new HardwaresecuritymodulesArmOperation<CloudHsmCluster>(new CloudHsmClusterOperationSource(), CloudHsmClustersClientDiagnostics, Pipeline, CloudHsmClustersRestClient.CreateCreateOrUpdateRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, body).Request, response, OperationFinalStateVia.OriginalUri);
                if (waitUntil == WaitUntil.Completed)
                    await operation.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Create or Update a Cloud HSM Cluster in the specified subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_CreateOrUpdate</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="body"> Parameters to create Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual ArmOperation<CloudHsmCluster> CreateOrUpdateCloudHsmCluster(WaitUntil waitUntil, string cloudHsmClusterName, CloudHsmCluster body, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.CreateOrUpdateCloudHsmCluster");
            scope.Start();
            try
            {
                var response = CloudHsmClustersRestClient.CreateOrUpdate(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, body, cancellationToken);
                var operation = new HardwaresecuritymodulesArmOperation<CloudHsmCluster>(new CloudHsmClusterOperationSource(), CloudHsmClustersClientDiagnostics, Pipeline, CloudHsmClustersRestClient.CreateCreateOrUpdateRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, body).Request, response, OperationFinalStateVia.OriginalUri);
                if (waitUntil == WaitUntil.Completed)
                    operation.WaitForCompletion(cancellationToken);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Update a Cloud HSM Cluster in the specified subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_Update</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="content"> Parameters to create Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<ArmOperation<CloudHsmCluster>> UpdateCloudHsmClusterAsync(WaitUntil waitUntil, string cloudHsmClusterName, CloudHsmClusterPatchContent content, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.UpdateCloudHsmCluster");
            scope.Start();
            try
            {
                var response = await CloudHsmClustersRestClient.UpdateAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, content, cancellationToken).ConfigureAwait(false);
                var operation = new HardwaresecuritymodulesArmOperation<CloudHsmCluster>(new CloudHsmClusterOperationSource(), CloudHsmClustersClientDiagnostics, Pipeline, CloudHsmClustersRestClient.CreateUpdateRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, content).Request, response, OperationFinalStateVia.Location);
                if (waitUntil == WaitUntil.Completed)
                    await operation.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Update a Cloud HSM Cluster in the specified subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_Update</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="content"> Parameters to create Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual ArmOperation<CloudHsmCluster> UpdateCloudHsmCluster(WaitUntil waitUntil, string cloudHsmClusterName, CloudHsmClusterPatchContent content, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.UpdateCloudHsmCluster");
            scope.Start();
            try
            {
                var response = CloudHsmClustersRestClient.Update(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, content, cancellationToken);
                var operation = new HardwaresecuritymodulesArmOperation<CloudHsmCluster>(new CloudHsmClusterOperationSource(), CloudHsmClustersClientDiagnostics, Pipeline, CloudHsmClustersRestClient.CreateUpdateRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, content).Request, response, OperationFinalStateVia.Location);
                if (waitUntil == WaitUntil.Completed)
                    operation.WaitForCompletion(cancellationToken);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets the specified Cloud HSM Cluster
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<CloudHsmCluster>> GetCloudHsmClusterAsync(string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.GetCloudHsmCluster");
            scope.Start();
            try
            {
                var response = await CloudHsmClustersRestClient.GetAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, cancellationToken).ConfigureAwait(false);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets the specified Cloud HSM Cluster
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<CloudHsmCluster> GetCloudHsmCluster(string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.GetCloudHsmCluster");
            scope.Start();
            try
            {
                var response = CloudHsmClustersRestClient.Get(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, cancellationToken);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Deletes the specified Cloud HSM Cluster
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_Delete</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<ArmOperation> DeleteCloudHsmClusterAsync(WaitUntil waitUntil, string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.DeleteCloudHsmCluster");
            scope.Start();
            try
            {
                var response = await CloudHsmClustersRestClient.DeleteAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, cancellationToken).ConfigureAwait(false);
                var operation = new HardwaresecuritymodulesArmOperation(CloudHsmClustersClientDiagnostics, Pipeline, CloudHsmClustersRestClient.CreateDeleteRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName).Request, response, OperationFinalStateVia.Location);
                if (waitUntil == WaitUntil.Completed)
                    await operation.WaitForCompletionResponseAsync(cancellationToken).ConfigureAwait(false);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Deletes the specified Cloud HSM Cluster
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_Delete</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual ArmOperation DeleteCloudHsmCluster(WaitUntil waitUntil, string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClustersClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.DeleteCloudHsmCluster");
            scope.Start();
            try
            {
                var response = CloudHsmClustersRestClient.Delete(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, cancellationToken);
                var operation = new HardwaresecuritymodulesArmOperation(CloudHsmClustersClientDiagnostics, Pipeline, CloudHsmClustersRestClient.CreateDeleteRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName).Request, response, OperationFinalStateVia.Location);
                if (waitUntil == WaitUntil.Completed)
                    operation.WaitForCompletionResponse(cancellationToken);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// The List operation gets information about the Cloud HSM Clusters associated with the subscription and within the specified resource group.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_ListByResourceGroup</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="skiptoken"> The page-continuation token to use with a paged version of this API. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="CloudHsmCluster" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<CloudHsmCluster> GetCloudHsmClustersByResourceGroupAsync(string skiptoken = null, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => CloudHsmClustersRestClient.CreateListByResourceGroupRequest(Id.SubscriptionId, Id.ResourceGroupName, skiptoken);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => CloudHsmClustersRestClient.CreateListByResourceGroupNextPageRequest(nextLink, Id.SubscriptionId, Id.ResourceGroupName, skiptoken);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, CloudHsmCluster.DeserializeCloudHsmCluster, CloudHsmClustersClientDiagnostics, Pipeline, "ResourceGroupResourceExtensionClient.GetCloudHsmClustersByResourceGroup", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// The List operation gets information about the Cloud HSM Clusters associated with the subscription and within the specified resource group.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusters_ListByResourceGroup</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="skiptoken"> The page-continuation token to use with a paged version of this API. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="CloudHsmCluster" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<CloudHsmCluster> GetCloudHsmClustersByResourceGroup(string skiptoken = null, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => CloudHsmClustersRestClient.CreateListByResourceGroupRequest(Id.SubscriptionId, Id.ResourceGroupName, skiptoken);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => CloudHsmClustersRestClient.CreateListByResourceGroupNextPageRequest(nextLink, Id.SubscriptionId, Id.ResourceGroupName, skiptoken);
            return PageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, CloudHsmCluster.DeserializeCloudHsmCluster, CloudHsmClustersClientDiagnostics, Pipeline, "ResourceGroupResourceExtensionClient.GetCloudHsmClustersByResourceGroup", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Gets the private link resources supported for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateLinkResources</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateLinkResources_ListByCloudHsmCluster</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HardwaresecuritymodulesPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HardwaresecuritymodulesPrivateLinkResource> GetCloudHsmClusterPrivateLinkResourcesByCloudHsmClusterAsync(string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => CloudHsmClusterPrivateLinkResourcesRestClient.CreateListByCloudHsmClusterRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, null, HardwaresecuritymodulesPrivateLinkResource.DeserializeHardwaresecuritymodulesPrivateLinkResource, CloudHsmClusterPrivateLinkResourcesClientDiagnostics, Pipeline, "ResourceGroupResourceExtensionClient.GetCloudHsmClusterPrivateLinkResourcesByCloudHsmCluster", "value", null, cancellationToken);
        }

        /// <summary>
        /// Gets the private link resources supported for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateLinkResources</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateLinkResources_ListByCloudHsmCluster</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HardwaresecuritymodulesPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HardwaresecuritymodulesPrivateLinkResource> GetCloudHsmClusterPrivateLinkResourcesByCloudHsmCluster(string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => CloudHsmClusterPrivateLinkResourcesRestClient.CreateListByCloudHsmClusterRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName);
            return PageableHelpers.CreatePageable(FirstPageRequest, null, HardwaresecuritymodulesPrivateLinkResource.DeserializeHardwaresecuritymodulesPrivateLinkResource, CloudHsmClusterPrivateLinkResourcesClientDiagnostics, Pipeline, "ResourceGroupResourceExtensionClient.GetCloudHsmClusterPrivateLinkResourcesByCloudHsmCluster", "value", null, cancellationToken);
        }

        /// <summary>
        /// Creates or updates the private endpoint connection for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections/{peConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateEndpointConnections_Create</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="peConnectionName"> Name of the private endpoint connection associated with the Cloud HSM Cluster. </param>
        /// <param name="properties"> Parameters of the PrivateEndpointConnection. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<HardwaresecuritymodulesPrivateEndpointConnection>> CreateCloudHsmClusterPrivateEndpointConnectionAsync(string cloudHsmClusterName, string peConnectionName, HardwaresecuritymodulesPrivateEndpointConnection properties, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.CreateCloudHsmClusterPrivateEndpointConnection");
            scope.Start();
            try
            {
                var response = await CloudHsmClusterPrivateEndpointConnectionsRestClient.CreateAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName, properties, cancellationToken).ConfigureAwait(false);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Creates or updates the private endpoint connection for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections/{peConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateEndpointConnections_Create</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="peConnectionName"> Name of the private endpoint connection associated with the Cloud HSM Cluster. </param>
        /// <param name="properties"> Parameters of the PrivateEndpointConnection. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<HardwaresecuritymodulesPrivateEndpointConnection> CreateCloudHsmClusterPrivateEndpointConnection(string cloudHsmClusterName, string peConnectionName, HardwaresecuritymodulesPrivateEndpointConnection properties, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.CreateCloudHsmClusterPrivateEndpointConnection");
            scope.Start();
            try
            {
                var response = CloudHsmClusterPrivateEndpointConnectionsRestClient.Create(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName, properties, cancellationToken);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Deletes the private endpoint connection for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections/{peConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateEndpointConnections_Delete</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="peConnectionName"> Name of the private endpoint connection associated with the Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<ArmOperation> DeleteCloudHsmClusterPrivateEndpointConnectionAsync(WaitUntil waitUntil, string cloudHsmClusterName, string peConnectionName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.DeleteCloudHsmClusterPrivateEndpointConnection");
            scope.Start();
            try
            {
                var response = await CloudHsmClusterPrivateEndpointConnectionsRestClient.DeleteAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName, cancellationToken).ConfigureAwait(false);
                var operation = new HardwaresecuritymodulesArmOperation(CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics, Pipeline, CloudHsmClusterPrivateEndpointConnectionsRestClient.CreateDeleteRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName).Request, response, OperationFinalStateVia.Location);
                if (waitUntil == WaitUntil.Completed)
                    await operation.WaitForCompletionResponseAsync(cancellationToken).ConfigureAwait(false);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Deletes the private endpoint connection for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections/{peConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateEndpointConnections_Delete</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="waitUntil"> <see cref="WaitUntil.Completed"/> if the method should wait to return until the long-running operation has completed on the service; <see cref="WaitUntil.Started"/> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="peConnectionName"> Name of the private endpoint connection associated with the Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual ArmOperation DeleteCloudHsmClusterPrivateEndpointConnection(WaitUntil waitUntil, string cloudHsmClusterName, string peConnectionName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.DeleteCloudHsmClusterPrivateEndpointConnection");
            scope.Start();
            try
            {
                var response = CloudHsmClusterPrivateEndpointConnectionsRestClient.Delete(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName, cancellationToken);
                var operation = new HardwaresecuritymodulesArmOperation(CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics, Pipeline, CloudHsmClusterPrivateEndpointConnectionsRestClient.CreateDeleteRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName).Request, response, OperationFinalStateVia.Location);
                if (waitUntil == WaitUntil.Completed)
                    operation.WaitForCompletionResponse(cancellationToken);
                return operation;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets the private endpoint connection for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections/{peConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateEndpointConnections_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="peConnectionName"> Name of the private endpoint connection associated with the Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<HardwaresecuritymodulesPrivateEndpointConnection>> GetCloudHsmClusterPrivateEndpointConnectionAsync(string cloudHsmClusterName, string peConnectionName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.GetCloudHsmClusterPrivateEndpointConnection");
            scope.Start();
            try
            {
                var response = await CloudHsmClusterPrivateEndpointConnectionsRestClient.GetAsync(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName, cancellationToken).ConfigureAwait(false);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets the private endpoint connection for the Cloud Hsm Cluster.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections/{peConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>CloudHsmClusterPrivateEndpointConnections_Get</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="peConnectionName"> Name of the private endpoint connection associated with the Cloud HSM Cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<HardwaresecuritymodulesPrivateEndpointConnection> GetCloudHsmClusterPrivateEndpointConnection(string cloudHsmClusterName, string peConnectionName, CancellationToken cancellationToken = default)
        {
            using var scope = CloudHsmClusterPrivateEndpointConnectionsClientDiagnostics.CreateScope("ResourceGroupResourceExtensionClient.GetCloudHsmClusterPrivateEndpointConnection");
            scope.Start();
            try
            {
                var response = CloudHsmClusterPrivateEndpointConnectionsRestClient.Get(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName, peConnectionName, cancellationToken);
                return response;
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// The List operation gets information about the private endpoint connections associated with the Cloud HSM Cluster
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>PrivateEndpointConnections_ListByCloudHsmCluster</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HardwaresecuritymodulesPrivateEndpointConnection" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HardwaresecuritymodulesPrivateEndpointConnection> GetPrivateEndpointConnectionsByCloudHsmClusterAsync(string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => PrivateEndpointConnectionsRestClient.CreateListByCloudHsmClusterRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => PrivateEndpointConnectionsRestClient.CreateListByCloudHsmClusterNextPageRequest(nextLink, Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, HardwaresecuritymodulesPrivateEndpointConnection.DeserializeHardwaresecuritymodulesPrivateEndpointConnection, PrivateEndpointConnectionsClientDiagnostics, Pipeline, "ResourceGroupResourceExtensionClient.GetPrivateEndpointConnectionsByCloudHsmCluster", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// The List operation gets information about the private endpoint connections associated with the Cloud HSM Cluster
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HardwareSecurityModules/cloudHsmClusters/{cloudHsmClusterName}/privateEndpointConnections</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>PrivateEndpointConnections_ListByCloudHsmCluster</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cloudHsmClusterName"> The name of the Cloud HSM Cluster within the specified resource group. Cloud HSM Cluster names must be between 3 and 24 characters in length. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HardwaresecuritymodulesPrivateEndpointConnection" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HardwaresecuritymodulesPrivateEndpointConnection> GetPrivateEndpointConnectionsByCloudHsmCluster(string cloudHsmClusterName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => PrivateEndpointConnectionsRestClient.CreateListByCloudHsmClusterRequest(Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => PrivateEndpointConnectionsRestClient.CreateListByCloudHsmClusterNextPageRequest(nextLink, Id.SubscriptionId, Id.ResourceGroupName, cloudHsmClusterName);
            return PageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, HardwaresecuritymodulesPrivateEndpointConnection.DeserializeHardwaresecuritymodulesPrivateEndpointConnection, PrivateEndpointConnectionsClientDiagnostics, Pipeline, "ResourceGroupResourceExtensionClient.GetPrivateEndpointConnectionsByCloudHsmCluster", "value", "nextLink", cancellationToken);
        }
    }
}
