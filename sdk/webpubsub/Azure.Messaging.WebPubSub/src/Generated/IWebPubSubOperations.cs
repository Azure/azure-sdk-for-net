// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Messaging.WebPubSub
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// WebPubSubOperations operations.
    /// </summary>
    public partial interface IWebPubSubOperations
    {
        /// <summary>
        /// Broadcast content inside request body to all the connected client
        /// connections.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='excluded'>
        /// Excluded connection Ids.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> SendToAllWithHttpMessagesAsync(string hub, string message, IList<string> excluded = default(IList<string>), string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if the connection with the given connectionId exists.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='connectionId'>
        /// The connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> ConnectionExistsWithHttpMessagesAsync(string hub, string connectionId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Close the client connection.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='reason'>
        /// The reason closing the client connection.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> CloseConnectionWithHttpMessagesAsync(string hub, string connectionId, string reason = default(string), string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Send content inside request body to the specific connection.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='connectionId'>
        /// The connection Id.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> SendToConnectionWithHttpMessagesAsync(string hub, string connectionId, string message, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if there are any client connections inside the given group
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> GroupExistsWithHttpMessagesAsync(string hub, string group, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Send content inside request body to a group of connections.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='excluded'>
        /// Excluded connection Ids
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> SendToGroupWithHttpMessagesAsync(string hub, string group, string message, IList<string> excluded = default(IList<string>), string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add a connection to the target group.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> AddConnectionToGroupWithHttpMessagesAsync(string hub, string group, string connectionId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Remove a connection from the target group.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> RemoveConnectionFromGroupWithHttpMessagesAsync(string hub, string group, string connectionId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if there are any client connections connected for the given
        /// user.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UserExistsWithHttpMessagesAsync(string hub, string userId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Send content inside request body to the specific user.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// The user Id.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> SendToUserWithHttpMessagesAsync(string hub, string userId, string message, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add a user to the target group.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> AddUserToGroupWithHttpMessagesAsync(string hub, string group, string userId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Remove a user from the target group.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> RemoveUserFromGroupWithHttpMessagesAsync(string hub, string group, string userId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Remove a user from all groups.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> RemoveUserFromAllGroupsWithHttpMessagesAsync(string hub, string userId, string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Grant permission to the connection.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='permission'>
        /// The permission: current supported actions are joinLeaveGroup and
        /// sendToGroup. Possible values include: 'sendToGroup',
        /// 'joinLeaveGroup'
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='targetName'>
        /// The meaning of the target depends on the specific permission. For
        /// joinLeaveGroup and sendToGroup, targetName is a required parameter
        /// standing for the group name.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> GrantPermissionWithHttpMessagesAsync(string hub, string permission, string connectionId, string targetName = default(string), string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Revoke permission for the connection.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='permission'>
        /// The permission: current supported actions are joinLeaveGroup and
        /// sendToGroup. Possible values include: 'sendToGroup',
        /// 'joinLeaveGroup'
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='targetName'>
        /// The meaning of the target depends on the specific permission. For
        /// joinLeaveGroup and sendToGroup, targetName is a required parameter
        /// standing for the group name.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> RevokePermissionWithHttpMessagesAsync(string hub, string permission, string connectionId, string targetName = default(string), string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if a connection has permission to the specified action.
        /// </summary>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='permission'>
        /// The permission: current supported actions are joinLeaveGroup and
        /// sendToGroup. Possible values include: 'sendToGroup',
        /// 'joinLeaveGroup'
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='targetName'>
        /// The meaning of the target depends on the specific permission. For
        /// joinLeaveGroup and sendToGroup, targetName is a required parameter
        /// standing for the group name.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> CheckPermissionWithHttpMessagesAsync(string hub, string permission, string connectionId, string targetName = default(string), string apiVersion = "2021-05-01-preview", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
