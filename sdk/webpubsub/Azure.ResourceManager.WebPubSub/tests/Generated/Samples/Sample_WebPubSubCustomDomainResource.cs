// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Resources.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WebPubSub.Samples
{
    public partial class Sample_WebPubSubCustomDomainResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_WebPubSubCustomDomainsGet()
        {
            // Generated from example definition: specification/webpubsub/resource-manager/Microsoft.SignalRService/preview/2025-01-01-preview/examples/WebPubSubCustomDomains_Get.json
            // this example is just showing the usage of "WebPubSubCustomDomains_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WebPubSubCustomDomainResource created on azure
            // for more information of creating WebPubSubCustomDomainResource, please refer to the document of WebPubSubCustomDomainResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string resourceName = "myWebPubSubService";
            string name = "example";
            ResourceIdentifier webPubSubCustomDomainResourceId = WebPubSubCustomDomainResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, name);
            WebPubSubCustomDomainResource webPubSubCustomDomain = client.GetWebPubSubCustomDomainResource(webPubSubCustomDomainResourceId);

            // invoke the operation
            WebPubSubCustomDomainResource result = await webPubSubCustomDomain.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WebPubSubCustomDomainData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_WebPubSubCustomDomainsDelete()
        {
            // Generated from example definition: specification/webpubsub/resource-manager/Microsoft.SignalRService/preview/2025-01-01-preview/examples/WebPubSubCustomDomains_Delete.json
            // this example is just showing the usage of "WebPubSubCustomDomains_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WebPubSubCustomDomainResource created on azure
            // for more information of creating WebPubSubCustomDomainResource, please refer to the document of WebPubSubCustomDomainResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string resourceName = "myWebPubSubService";
            string name = "example";
            ResourceIdentifier webPubSubCustomDomainResourceId = WebPubSubCustomDomainResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, name);
            WebPubSubCustomDomainResource webPubSubCustomDomain = client.GetWebPubSubCustomDomainResource(webPubSubCustomDomainResourceId);

            // invoke the operation
            await webPubSubCustomDomain.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_WebPubSubCustomDomainsCreateOrUpdate()
        {
            // Generated from example definition: specification/webpubsub/resource-manager/Microsoft.SignalRService/preview/2025-01-01-preview/examples/WebPubSubCustomDomains_CreateOrUpdate.json
            // this example is just showing the usage of "WebPubSubCustomDomains_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WebPubSubCustomDomainResource created on azure
            // for more information of creating WebPubSubCustomDomainResource, please refer to the document of WebPubSubCustomDomainResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string resourceName = "myWebPubSubService";
            string name = "myDomain";
            ResourceIdentifier webPubSubCustomDomainResourceId = WebPubSubCustomDomainResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, name);
            WebPubSubCustomDomainResource webPubSubCustomDomain = client.GetWebPubSubCustomDomainResource(webPubSubCustomDomainResourceId);

            // invoke the operation
            WebPubSubCustomDomainData data = new WebPubSubCustomDomainData("example.com", new WritableSubResource
            {
                Id = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/WebPubSub/myWebPubSubService/customCertificates/myCert"),
            });
            ArmOperation<WebPubSubCustomDomainResource> lro = await webPubSubCustomDomain.UpdateAsync(WaitUntil.Completed, data);
            WebPubSubCustomDomainResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WebPubSubCustomDomainData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
