// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.WebPubSub.Models
{
    /// <summary> Filter events by their name. </summary>
    public partial class EventNameFilter : EventListenerFilter
    {
        /// <summary> Initializes a new instance of <see cref="EventNameFilter"/>. </summary>
        public EventNameFilter()
        {
            SystemEvents = new ChangeTrackingList<string>();
            EventListenerFilterType = EventListenerFilterDiscriminator.EventName;
        }

        /// <summary> Initializes a new instance of <see cref="EventNameFilter"/>. </summary>
        /// <param name="eventListenerFilterType"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="systemEvents"> Gets or sets a list of system events. Supported events: "connected" and "disconnected". Blocking event "connect" is not supported because it requires a response. </param>
        /// <param name="userEventPattern">
        /// Gets or sets a matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        ///     1. "*", it matches any event name
        ///     2. Combine multiple events with ",", for example "event1,event2", it matches events "event1" and "event2"
        ///     3. A single event name, for example, "event1", it matches "event1"
        /// </param>
        internal EventNameFilter(EventListenerFilterDiscriminator eventListenerFilterType, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<string> systemEvents, string userEventPattern) : base(eventListenerFilterType, serializedAdditionalRawData)
        {
            SystemEvents = systemEvents;
            UserEventPattern = userEventPattern;
            EventListenerFilterType = eventListenerFilterType;
        }

        /// <summary> Gets or sets a list of system events. Supported events: "connected" and "disconnected". Blocking event "connect" is not supported because it requires a response. </summary>
        [WirePath("systemEvents")]
        public IList<string> SystemEvents { get; }
        /// <summary>
        /// Gets or sets a matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        ///     1. "*", it matches any event name
        ///     2. Combine multiple events with ",", for example "event1,event2", it matches events "event1" and "event2"
        ///     3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        [WirePath("userEventPattern")]
        public string UserEventPattern { get; set; }
    }
}
