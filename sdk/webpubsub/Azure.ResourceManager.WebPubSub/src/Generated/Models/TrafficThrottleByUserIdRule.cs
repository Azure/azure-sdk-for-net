// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.WebPubSub.Models
{
    /// <summary> Throttle the client traffic by the user ID. </summary>
    public partial class TrafficThrottleByUserIdRule : ClientTrafficControlRule
    {
        /// <summary> Initializes a new instance of <see cref="TrafficThrottleByUserIdRule"/>. </summary>
        public TrafficThrottleByUserIdRule()
        {
            TrafficThrottleType = ClientTrafficControlRuleDiscriminator.TrafficThrottleByUserIdRule;
        }

        /// <summary> Initializes a new instance of <see cref="TrafficThrottleByUserIdRule"/>. </summary>
        /// <param name="trafficThrottleType"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="maxInboundMessageBytes"> Maximum accumulated inbound message bytes allowed for the same user ID within a time window. Clients with the same user ID will get disconnected if the message bytes exceeds this value. Default value is 1GB. </param>
        /// <param name="aggregationWindowInSeconds"> The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds. </param>
        internal TrafficThrottleByUserIdRule(ClientTrafficControlRuleDiscriminator trafficThrottleType, IDictionary<string, BinaryData> serializedAdditionalRawData, long? maxInboundMessageBytes, int? aggregationWindowInSeconds) : base(trafficThrottleType, serializedAdditionalRawData)
        {
            MaxInboundMessageBytes = maxInboundMessageBytes;
            AggregationWindowInSeconds = aggregationWindowInSeconds;
            TrafficThrottleType = trafficThrottleType;
        }

        /// <summary> Maximum accumulated inbound message bytes allowed for the same user ID within a time window. Clients with the same user ID will get disconnected if the message bytes exceeds this value. Default value is 1GB. </summary>
        [WirePath("maxInboundMessageBytes")]
        public long? MaxInboundMessageBytes { get; set; }
        /// <summary> The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds. </summary>
        [WirePath("aggregationWindowInSeconds")]
        public int? AggregationWindowInSeconds { get; set; }
    }
}
