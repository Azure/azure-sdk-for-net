// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.WebPubSub
{
    internal class CustomCertificateOperationSource : IOperationSource<CustomCertificateResource>
    {
        private readonly ArmClient _client;

        internal CustomCertificateOperationSource(ArmClient client)
        {
            _client = client;
        }

        CustomCertificateResource IOperationSource<CustomCertificateResource>.CreateResult(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<CustomCertificateData>(response.Content, ModelReaderWriterOptions.Json, AzureResourceManagerWebPubSubContext.Default);
            return new CustomCertificateResource(_client, data);
        }

        async ValueTask<CustomCertificateResource> IOperationSource<CustomCertificateResource>.CreateResultAsync(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<CustomCertificateData>(response.Content, ModelReaderWriterOptions.Json, AzureResourceManagerWebPubSubContext.Default);
            return await Task.FromResult(new CustomCertificateResource(_client, data)).ConfigureAwait(false);
        }
    }
}
