// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Fleet;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Fleet.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmFleetModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Fleet.FleetData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="zones"> Zones in which the Azure Fleet is available. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="spotPriorityProfile"> Configuration Options for Spot instances in Azure Fleet. </param>
        /// <param name="regularPriorityProfile"> Configuration Options for On-Demand instances in Azure Fleet. </param>
        /// <param name="vmSizesProfile"> List of VM sizes supported for Fleet. </param>
        /// <param name="baseVirtualMachineProfile"> Virtual Machine Profile to use for running user's workloads. </param>
        /// <param name="requestType"> Request properties of AzureFleet which will be maintained. </param>
        /// <returns> A new <see cref="Fleet.FleetData"/> instance for mocking. </returns>
        public static FleetData FleetData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, IEnumerable<string> zones = null, ProvisioningState? provisioningState = null, SpotPriorityProfile spotPriorityProfile = null, RegularPriorityProfile regularPriorityProfile = null, IEnumerable<VmSizeProfile> vmSizesProfile = null, BaseVirtualMachineProfile baseVirtualMachineProfile = null, RequestType? requestType = null)
        {
            tags ??= new Dictionary<string, string>();
            zones ??= new List<string>();
            vmSizesProfile ??= new List<VmSizeProfile>();

            return new FleetData(id, name, resourceType, systemData, tags, location, zones?.ToList(), provisioningState, spotPriorityProfile, regularPriorityProfile, vmSizesProfile?.ToList(), baseVirtualMachineProfile, requestType != null ? new Request(requestType) : null);
        }
    }
}
