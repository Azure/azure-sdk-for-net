// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Fleet.Models
{
    /// <summary> Virtual Machine Profile to use for running user's workloads. </summary>
    public partial class BaseVirtualMachineProfile
    {
        /// <summary> Initializes a new instance of <see cref="BaseVirtualMachineProfile"/>. </summary>
        /// <param name="virtualMachineProfile">
        /// Azure Fleet will not parse the contents of this. We will use this in the sync path to validate the VM as well as create VMSS templates in the async path.
        /// Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
        /// </param>
        /// <param name="computeApiVersion"> Specifies the Microsoft.Compute API version to use when creating VMSS with the virtual machine profile. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="virtualMachineProfile"/> or <paramref name="computeApiVersion"/> is null. </exception>
        public BaseVirtualMachineProfile(IDictionary<string, BinaryData> virtualMachineProfile, string computeApiVersion)
        {
            Argument.AssertNotNull(virtualMachineProfile, nameof(virtualMachineProfile));
            Argument.AssertNotNull(computeApiVersion, nameof(computeApiVersion));

            VirtualMachineProfile = virtualMachineProfile;
            ComputeApiVersion = computeApiVersion;
        }

        /// <summary>
        /// Azure Fleet will not parse the contents of this. We will use this in the sync path to validate the VM as well as create VMSS templates in the async path.
        /// Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IDictionary<string, BinaryData> VirtualMachineProfile { get; }
        /// <summary> Specifies the Microsoft.Compute API version to use when creating VMSS with the virtual machine profile. </summary>
        public string ComputeApiVersion { get; set; }
    }
}
