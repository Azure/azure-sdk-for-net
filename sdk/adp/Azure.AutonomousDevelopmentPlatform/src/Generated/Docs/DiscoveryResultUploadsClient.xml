<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="ListAsync(String,RequestContext)">
<example>
This sample shows how to call ListAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new DiscoveryResultUploadsClient(credential);

await foreach (var data in client.ListAsync("<discoveryId>"))
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("uploadId").ToString());
    Console.WriteLine(result.GetProperty("manifestDownloadUri").ToString());
    Console.WriteLine(result.GetProperty("resourceEndpoint").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>Array</c>:
<code>{
  uploadId: string, # Required.
  manifestDownloadUri: string, # Required.
  resourceEndpoint: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="List(String,RequestContext)">
<example>
This sample shows how to call List with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new DiscoveryResultUploadsClient(credential);

foreach (var data in client.List("<discoveryId>"))
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("uploadId").ToString());
    Console.WriteLine(result.GetProperty("manifestDownloadUri").ToString());
    Console.WriteLine(result.GetProperty("resourceEndpoint").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>Array</c>:
<code>{
  uploadId: string, # Required.
  manifestDownloadUri: string, # Required.
  resourceEndpoint: string, # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>