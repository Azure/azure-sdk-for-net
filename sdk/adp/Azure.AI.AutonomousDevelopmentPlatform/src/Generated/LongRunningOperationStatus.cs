// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ADP.Common.Operations
{
    /// <summary> The async operation status. </summary>
    public readonly partial struct LongRunningOperationStatus : IEquatable<LongRunningOperationStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="LongRunningOperationStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public LongRunningOperationStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatedValue = "Created";
        private const string InProgressValue = "InProgress";
        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";
        private const string CanceledValue = "Canceled";

        /// <summary> Created. </summary>
        public static LongRunningOperationStatus Created { get; } = new LongRunningOperationStatus(CreatedValue);
        /// <summary> InProgress. </summary>
        public static LongRunningOperationStatus InProgress { get; } = new LongRunningOperationStatus(InProgressValue);
        /// <summary> Succeeded. </summary>
        public static LongRunningOperationStatus Succeeded { get; } = new LongRunningOperationStatus(SucceededValue);
        /// <summary> Failed. </summary>
        public static LongRunningOperationStatus Failed { get; } = new LongRunningOperationStatus(FailedValue);
        /// <summary> Canceled. </summary>
        public static LongRunningOperationStatus Canceled { get; } = new LongRunningOperationStatus(CanceledValue);
        /// <summary> Determines if two <see cref="LongRunningOperationStatus"/> values are the same. </summary>
        public static bool operator ==(LongRunningOperationStatus left, LongRunningOperationStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="LongRunningOperationStatus"/> values are not the same. </summary>
        public static bool operator !=(LongRunningOperationStatus left, LongRunningOperationStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="LongRunningOperationStatus"/>. </summary>
        public static implicit operator LongRunningOperationStatus(string value) => new LongRunningOperationStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is LongRunningOperationStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(LongRunningOperationStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
