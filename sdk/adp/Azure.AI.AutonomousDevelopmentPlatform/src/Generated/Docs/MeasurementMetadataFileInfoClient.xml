<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetWritableUriAsync(String,RequestContext)">
<example>
This sample shows how to call GetWritableUriAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MeasurementMetadataFileInfoClient(credential);

Response response = await client.GetWritableUriAsync("<measurementId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("metadataFileName").ToString());
Console.WriteLine(result.GetProperty("metadataFileUri").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>MeasurementMetadataFileInfoBase</c>:
<code>{
  metadataFileName: string, # Required.
  metadataFileUri: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetWritableUri(String,RequestContext)">
<example>
This sample shows how to call GetWritableUri with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MeasurementMetadataFileInfoClient(credential);

Response response = client.GetWritableUri("<measurementId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("metadataFileName").ToString());
Console.WriteLine(result.GetProperty("metadataFileUri").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>MeasurementMetadataFileInfoBase</c>:
<code>{
  metadataFileName: string, # Required.
  metadataFileUri: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="CompleteAsync(WaitUntil,String,RequestContent,String,RequestContext)">
<example>
This sample shows how to call CompleteAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MeasurementMetadataFileInfoClient(credential);

var data = new {
    pendingFileETag = "<pendingFileETag>",
};

var operation = await client.CompleteAsync(WaitUntil.Completed, "<measurementId>", RequestContent.Create(data));

BinaryData data = await operation.WaitForCompletionAsync();
JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("metadataFileName").ToString());
Console.WriteLine(result.GetProperty("metadataFileUri").ToString());
]]></code>
This sample shows how to call CompleteAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MeasurementMetadataFileInfoClient(credential);

var data = new {
    pendingFileETag = "<pendingFileETag>",
};

var operation = await client.CompleteAsync(WaitUntil.Completed, "<measurementId>", RequestContent.Create(data), "<operationId>");

BinaryData data = await operation.WaitForCompletionAsync();
JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("metadataFileName").ToString());
Console.WriteLine(result.GetProperty("metadataFileUri").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>CompleteUploadMetadataFileRequest</c>:
<code>{
  pendingFileETag: string, # Required.
}
</code>

Response Body:

Schema for <c>MeasurementMetadataFileInfoBase</c>:
<code>{
  metadataFileName: string, # Required.
  metadataFileUri: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="Complete(WaitUntil,String,RequestContent,String,RequestContext)">
<example>
This sample shows how to call Complete with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MeasurementMetadataFileInfoClient(credential);

var data = new {
    pendingFileETag = "<pendingFileETag>",
};

var operation = client.Complete(WaitUntil.Completed, "<measurementId>", RequestContent.Create(data));

BinaryData data = operation.WaitForCompletion();
JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("metadataFileName").ToString());
Console.WriteLine(result.GetProperty("metadataFileUri").ToString());
]]></code>
This sample shows how to call Complete with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MeasurementMetadataFileInfoClient(credential);

var data = new {
    pendingFileETag = "<pendingFileETag>",
};

var operation = client.Complete(WaitUntil.Completed, "<measurementId>", RequestContent.Create(data), "<operationId>");

BinaryData data = operation.WaitForCompletion();
JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("metadataFileName").ToString());
Console.WriteLine(result.GetProperty("metadataFileUri").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>CompleteUploadMetadataFileRequest</c>:
<code>{
  pendingFileETag: string, # Required.
}
</code>

Response Body:

Schema for <c>MeasurementMetadataFileInfoBase</c>:
<code>{
  metadataFileName: string, # Required.
  metadataFileUri: string, # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>