// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ADP.DataManagement.Ingestion.Discoveries
{
    /// <summary> Known discovery statuses. </summary>
    public readonly partial struct DiscoveryStatus : IEquatable<DiscoveryStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DiscoveryStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DiscoveryStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatedValue = "Created";
        private const string GeneratingSpecialFilesUploadInfoValue = "GeneratingSpecialFilesUploadInfo";
        private const string GeneratedSpecialFilesUploadInfoValue = "GeneratedSpecialFilesUploadInfo";
        private const string CompletingValue = "Completing";
        private const string CompletedValue = "Completed";
        private const string AbortingValue = "Aborting";
        private const string AbortedValue = "Aborted";
        private const string FailedValue = "Failed";

        /// <summary> The discovery process has been initiated. </summary>
        public static DiscoveryStatus Created { get; } = new DiscoveryStatus(CreatedValue);
        /// <summary> The system is analyzing the discovery manifest file uploaded by the client and generating the upload information for uploading special files. </summary>
        public static DiscoveryStatus GeneratingSpecialFilesUploadInfo { get; } = new DiscoveryStatus(GeneratingSpecialFilesUploadInfoValue);
        /// <summary> The system has analyzed the discovery manifest file and generated the upload information for uploading special files. </summary>
        public static DiscoveryStatus GeneratedSpecialFilesUploadInfo { get; } = new DiscoveryStatus(GeneratedSpecialFilesUploadInfoValue);
        /// <summary> The system is processing the special files uploaded by the client. </summary>
        public static DiscoveryStatus Completing { get; } = new DiscoveryStatus(CompletingValue);
        /// <summary> The system has finished the analysis of special files. </summary>
        public static DiscoveryStatus Completed { get; } = new DiscoveryStatus(CompletedValue);
        /// <summary> The system is cancelling the discovery process. </summary>
        public static DiscoveryStatus Aborting { get; } = new DiscoveryStatus(AbortingValue);
        /// <summary> The discovery process has been aborted. </summary>
        public static DiscoveryStatus Aborted { get; } = new DiscoveryStatus(AbortedValue);
        /// <summary> The discovery process has been failed. </summary>
        public static DiscoveryStatus Failed { get; } = new DiscoveryStatus(FailedValue);
        /// <summary> Determines if two <see cref="DiscoveryStatus"/> values are the same. </summary>
        public static bool operator ==(DiscoveryStatus left, DiscoveryStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DiscoveryStatus"/> values are not the same. </summary>
        public static bool operator !=(DiscoveryStatus left, DiscoveryStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DiscoveryStatus"/>. </summary>
        public static implicit operator DiscoveryStatus(string value) => new DiscoveryStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DiscoveryStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DiscoveryStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
