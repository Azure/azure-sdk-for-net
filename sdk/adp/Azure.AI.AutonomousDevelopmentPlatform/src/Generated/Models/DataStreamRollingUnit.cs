// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.AutonomousDevelopmentPlatform.Models
{
    /// <summary> Data stream rolling unit. </summary>
    public readonly partial struct DataStreamRollingUnit : IEquatable<DataStreamRollingUnit>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataStreamRollingUnit"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataStreamRollingUnit(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SecondsValue = "Seconds";
        private const string MinutesValue = "Minutes";
        private const string KBValue = "kB";
        private const string MBValue = "MB";
        private const string GBValue = "GB";

        /// <summary> Seconds. </summary>
        public static DataStreamRollingUnit Seconds { get; } = new DataStreamRollingUnit(SecondsValue);
        /// <summary> Minutes. </summary>
        public static DataStreamRollingUnit Minutes { get; } = new DataStreamRollingUnit(MinutesValue);
        /// <summary> kB. </summary>
        public static DataStreamRollingUnit KB { get; } = new DataStreamRollingUnit(KBValue);
        /// <summary> MB. </summary>
        public static DataStreamRollingUnit MB { get; } = new DataStreamRollingUnit(MBValue);
        /// <summary> GB. </summary>
        public static DataStreamRollingUnit GB { get; } = new DataStreamRollingUnit(GBValue);
        /// <summary> Determines if two <see cref="DataStreamRollingUnit"/> values are the same. </summary>
        public static bool operator ==(DataStreamRollingUnit left, DataStreamRollingUnit right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataStreamRollingUnit"/> values are not the same. </summary>
        public static bool operator !=(DataStreamRollingUnit left, DataStreamRollingUnit right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DataStreamRollingUnit"/>. </summary>
        public static implicit operator DataStreamRollingUnit(string value) => new DataStreamRollingUnit(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataStreamRollingUnit other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataStreamRollingUnit other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
