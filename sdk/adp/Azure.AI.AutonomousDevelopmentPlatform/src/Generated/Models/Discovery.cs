// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.AutonomousDevelopmentPlatform.Models
{
    /// <summary> A discovery resource. </summary>
    public partial class Discovery
    {
        /// <summary> Initializes a new instance of Discovery. </summary>
        /// <param name="discoveryId"></param>
        /// <param name="etag"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="discoveryId"/> or <paramref name="etag"/> is null. </exception>
        internal Discovery(string discoveryId, string etag)
        {
            Argument.AssertNotNull(discoveryId, nameof(discoveryId));
            Argument.AssertNotNull(etag, nameof(etag));

            DiscoveryId = discoveryId;
            Etag = etag;
        }

        /// <summary> Initializes a new instance of Discovery. </summary>
        /// <param name="discoveryId"></param>
        /// <param name="externalPackageId"></param>
        /// <param name="manifestUri"></param>
        /// <param name="status"></param>
        /// <param name="etag"></param>
        internal Discovery(string discoveryId, string externalPackageId, string manifestUri, DiscoveryStatus? status, string etag)
        {
            DiscoveryId = discoveryId;
            ExternalPackageId = externalPackageId;
            ManifestUri = manifestUri;
            Status = status;
            Etag = etag;
        }

        /// <summary> Gets the discovery id. </summary>
        public string DiscoveryId { get; }
        /// <summary> Gets the external package id. </summary>
        public string ExternalPackageId { get; }
        /// <summary> Gets the manifest uri. </summary>
        public string ManifestUri { get; }
        /// <summary> Gets the status. </summary>
        public DiscoveryStatus? Status { get; }
        /// <summary> Gets the etag. </summary>
        public string Etag { get; }
    }
}
