// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.AutonomousDevelopmentPlatform.Models
{
    /// <summary> Data stream state. </summary>
    public readonly partial struct DataStreamStatus : IEquatable<DataStreamStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataStreamStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataStreamStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatedValue = "Created";
        private const string CompletingValue = "Completing";
        private const string CompletedValue = "Completed";
        private const string FailedValue = "Failed";
        private const string FailingValue = "Failing";
        private const string ClearingValue = "Clearing";
        private const string ClearedValue = "Cleared";

        /// <summary> Created. </summary>
        public static DataStreamStatus Created { get; } = new DataStreamStatus(CreatedValue);
        /// <summary> Completing. </summary>
        public static DataStreamStatus Completing { get; } = new DataStreamStatus(CompletingValue);
        /// <summary> Completed. </summary>
        public static DataStreamStatus Completed { get; } = new DataStreamStatus(CompletedValue);
        /// <summary> Failed. </summary>
        public static DataStreamStatus Failed { get; } = new DataStreamStatus(FailedValue);
        /// <summary> Failing. </summary>
        public static DataStreamStatus Failing { get; } = new DataStreamStatus(FailingValue);
        /// <summary> Clearing. </summary>
        public static DataStreamStatus Clearing { get; } = new DataStreamStatus(ClearingValue);
        /// <summary> Cleared. </summary>
        public static DataStreamStatus Cleared { get; } = new DataStreamStatus(ClearedValue);
        /// <summary> Determines if two <see cref="DataStreamStatus"/> values are the same. </summary>
        public static bool operator ==(DataStreamStatus left, DataStreamStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataStreamStatus"/> values are not the same. </summary>
        public static bool operator !=(DataStreamStatus left, DataStreamStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DataStreamStatus"/>. </summary>
        public static implicit operator DataStreamStatus(string value) => new DataStreamStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataStreamStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataStreamStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
