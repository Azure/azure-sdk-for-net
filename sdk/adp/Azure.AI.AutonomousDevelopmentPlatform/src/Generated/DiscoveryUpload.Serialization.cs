// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace ADP.DataManagement.Ingestion.Discoveries
{
    public partial class DiscoveryUpload
    {
        internal static DiscoveryUpload DeserializeDiscoveryUpload(JsonElement element)
        {
            string uploadId = default;
            string manifestDownloadUri = default;
            Optional<string> resourceEndpoint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("uploadId"))
                {
                    uploadId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("manifestDownloadUri"))
                {
                    manifestDownloadUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceEndpoint"))
                {
                    resourceEndpoint = property.Value.GetString();
                    continue;
                }
            }
            return new DiscoveryUpload(uploadId, manifestDownloadUri, resourceEndpoint);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static DiscoveryUpload FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeDiscoveryUpload(document.RootElement);
        }
    }
}
