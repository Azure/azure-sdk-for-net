// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ADP.DataManagement.Ingestion.Discoveries
{
    /// <summary> Known discovery operation types. </summary>
    public readonly partial struct DiscoveryOperationType : IEquatable<DiscoveryOperationType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DiscoveryOperationType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DiscoveryOperationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CompleteDiscoveryValue = "CompleteDiscovery";
        private const string FinalizeFileListValue = "FinalizeFileList";
        private const string AbortDiscoveryValue = "AbortDiscovery";

        /// <summary> The process of completing the discovery. </summary>
        public static DiscoveryOperationType CompleteDiscovery { get; } = new DiscoveryOperationType(CompleteDiscoveryValue);
        /// <summary> The process of finalizing the file list of the discovery. </summary>
        public static DiscoveryOperationType FinalizeFileList { get; } = new DiscoveryOperationType(FinalizeFileListValue);
        /// <summary> The process of cancelling the discovery. </summary>
        public static DiscoveryOperationType AbortDiscovery { get; } = new DiscoveryOperationType(AbortDiscoveryValue);
        /// <summary> Determines if two <see cref="DiscoveryOperationType"/> values are the same. </summary>
        public static bool operator ==(DiscoveryOperationType left, DiscoveryOperationType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DiscoveryOperationType"/> values are not the same. </summary>
        public static bool operator !=(DiscoveryOperationType left, DiscoveryOperationType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DiscoveryOperationType"/>. </summary>
        public static implicit operator DiscoveryOperationType(string value) => new DiscoveryOperationType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DiscoveryOperationType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DiscoveryOperationType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
