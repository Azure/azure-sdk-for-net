// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Quantum.Jobs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Usage event details.
    /// </summary>
    public partial class UsageEvent
    {
        /// <summary>
        /// Initializes a new instance of the UsageEvent class.
        /// </summary>
        public UsageEvent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UsageEvent class.
        /// </summary>
        /// <param name="dimensionId">The dimension id.</param>
        /// <param name="dimensionName">The dimension name.</param>
        /// <param name="measureUnit">The unit of measure.</param>
        /// <param name="amountBilled">The amount billed.</param>
        /// <param name="amountConsumed">The amount consumed.</param>
        /// <param name="unitPrice">The unit price.</param>
        public UsageEvent(string dimensionId = default(string), string dimensionName = default(string), string measureUnit = default(string), double? amountBilled = default(double?), double? amountConsumed = default(double?), double? unitPrice = default(double?))
        {
            DimensionId = dimensionId;
            DimensionName = dimensionName;
            MeasureUnit = measureUnit;
            AmountBilled = amountBilled;
            AmountConsumed = amountConsumed;
            UnitPrice = unitPrice;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the dimension id.
        /// </summary>
        [JsonProperty(PropertyName = "dimensionId")]
        public string DimensionId { get; set; }

        /// <summary>
        /// Gets or sets the dimension name.
        /// </summary>
        [JsonProperty(PropertyName = "dimensionName")]
        public string DimensionName { get; set; }

        /// <summary>
        /// Gets or sets the unit of measure.
        /// </summary>
        [JsonProperty(PropertyName = "measureUnit")]
        public string MeasureUnit { get; set; }

        /// <summary>
        /// Gets or sets the amount billed.
        /// </summary>
        [JsonProperty(PropertyName = "amountBilled")]
        public double? AmountBilled { get; set; }

        /// <summary>
        /// Gets or sets the amount consumed.
        /// </summary>
        [JsonProperty(PropertyName = "amountConsumed")]
        public double? AmountConsumed { get; set; }

        /// <summary>
        /// Gets or sets the unit price.
        /// </summary>
        [JsonProperty(PropertyName = "unitPrice")]
        public double? UnitPrice { get; set; }

    }
}
