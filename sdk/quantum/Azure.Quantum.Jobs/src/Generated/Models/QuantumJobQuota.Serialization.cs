// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Quantum.Jobs.Models
{
    public partial class QuantumJobQuota
    {
        internal static QuantumJobQuota DeserializeQuantumJobQuota(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> dimension = default;
            Core.Optional<DimensionScope> scope = default;
            Core.Optional<string> providerId = default;
            Core.Optional<float> utilization = default;
            Core.Optional<float> holds = default;
            Core.Optional<float> limit = default;
            Core.Optional<MeterPeriod> period = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dimension"u8))
                {
                    dimension = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("scope"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scope = new DimensionScope(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("providerId"u8))
                {
                    providerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("utilization"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    utilization = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("holds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    holds = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("limit"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    limit = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("period"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    period = new MeterPeriod(property.Value.GetString());
                    continue;
                }
            }
            return new QuantumJobQuota(dimension.Value, Core.Optional.ToNullable(scope), providerId.Value, Core.Optional.ToNullable(utilization), Core.Optional.ToNullable(holds), Core.Optional.ToNullable(limit), Core.Optional.ToNullable(period));
        }
    }
}
