// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Quantum.Jobs.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The job cost billed by the provider. The final cost on your bill might
    /// be slightly different due to added taxes and currency conversion rates.
    /// </summary>
    public partial class CostEstimate
    {
        /// <summary>
        /// Initializes a new instance of the CostEstimate class.
        /// </summary>
        public CostEstimate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CostEstimate class.
        /// </summary>
        /// <param name="currencyCode">The currency code.</param>
        /// <param name="events">List of usage events</param>
        /// <param name="estimatedTotal">The estimated total.</param>
        public CostEstimate(string currencyCode = default(string), IList<UsageEvent> events = default(IList<UsageEvent>), double? estimatedTotal = default(double?))
        {
            CurrencyCode = currencyCode;
            Events = events;
            EstimatedTotal = estimatedTotal;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the currency code.
        /// </summary>
        [JsonProperty(PropertyName = "currencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Gets or sets list of usage events
        /// </summary>
        [JsonProperty(PropertyName = "events")]
        public IList<UsageEvent> Events { get; set; }

        /// <summary>
        /// Gets or sets the estimated total.
        /// </summary>
        [JsonProperty(PropertyName = "estimatedTotal")]
        public double? EstimatedTotal { get; set; }

    }
}
