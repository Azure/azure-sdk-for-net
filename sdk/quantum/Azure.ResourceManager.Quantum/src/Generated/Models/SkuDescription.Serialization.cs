// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Quantum.Models
{
    public partial class SkuDescription
    {
        internal static SkuDescription DeserializeSkuDescription(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> version = default;
            Optional<string> description = default;
            Optional<Uri> restrictedAccessUri = default;
            Optional<bool> autoAdd = default;
            Optional<IReadOnlyList<string>> targets = default;
            Optional<IReadOnlyList<QuotaDimension>> quotaDimensions = default;
            Optional<IReadOnlyList<PricingDetail>> pricingDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("version"u8))
                {
                    version = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("restrictedAccessUri"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    restrictedAccessUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("autoAdd"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    autoAdd = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("targets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    targets = array;
                    continue;
                }
                if (property.NameEquals("quotaDimensions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<QuotaDimension> array = new List<QuotaDimension>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(QuotaDimension.DeserializeQuotaDimension(item));
                    }
                    quotaDimensions = array;
                    continue;
                }
                if (property.NameEquals("pricingDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<PricingDetail> array = new List<PricingDetail>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PricingDetail.DeserializePricingDetail(item));
                    }
                    pricingDetails = array;
                    continue;
                }
            }
            return new SkuDescription(id.Value, name.Value, version.Value, description.Value, restrictedAccessUri.Value, Optional.ToNullable(autoAdd), Optional.ToList(targets), Optional.ToList(quotaDimensions), Optional.ToList(pricingDetails));
        }
    }
}
