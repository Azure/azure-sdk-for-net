// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The status of the long running operation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OperationStatus
    {
        /// <summary>
        /// Initializes a new instance of the OperationStatus class.
        /// </summary>
        public OperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationStatus class.
        /// </summary>
        /// <param name="status">The status of the long running
        /// operation.</param>
        /// <param name="reportUrl">The URL to download the generated
        /// report.</param>
        /// <param name="validUntil">The time at which report URL becomes
        /// invalid.</param>
        public OperationStatus(Status status = default(Status), string reportUrl = default(string), System.DateTime? validUntil = default(System.DateTime?))
        {
            Status = status;
            ReportUrl = reportUrl;
            ValidUntil = validUntil;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status of the long running operation.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public Status Status { get; set; }

        /// <summary>
        /// Gets or sets the URL to download the generated report.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reportUrl")]
        public string ReportUrl { get; set; }

        /// <summary>
        /// Gets or sets the time at which report URL becomes invalid.
        /// </summary>
        [JsonProperty(PropertyName = "properties.validUntil")]
        public System.DateTime? ValidUntil { get; set; }

    }
}
