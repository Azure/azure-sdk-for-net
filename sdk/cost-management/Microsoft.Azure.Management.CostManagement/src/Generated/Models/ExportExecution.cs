// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A export execution.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ExportExecution : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ExportExecution class.
        /// </summary>
        public ExportExecution()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportExecution class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="executionType">The type of the export execution.
        /// Possible values include: 'OnDemand', 'Scheduled'</param>
        /// <param name="status">The status of the export execution. Possible
        /// values include: 'Queued', 'InProgress', 'Completed', 'Failed',
        /// 'Timeout', 'NewDataNotAvailable', 'DataNotAvailable'</param>
        /// <param name="submittedBy">The identifier for the entity that
        /// executed the export. For OnDemand executions, it is the email id.
        /// For Scheduled executions, it is the constant value -
        /// System.</param>
        /// <param name="submittedTime">The time when export was queued to be
        /// executed.</param>
        /// <param name="processingStartTime">The time when export was picked
        /// up to be executed.</param>
        /// <param name="processingEndTime">The time when export execution
        /// finished.</param>
        /// <param name="fileName">The name of the file export got written
        /// to.</param>
        public ExportExecution(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string executionType = default(string), string status = default(string), string submittedBy = default(string), System.DateTime? submittedTime = default(System.DateTime?), System.DateTime? processingStartTime = default(System.DateTime?), System.DateTime? processingEndTime = default(System.DateTime?), string fileName = default(string), CommonExportProperties runSettings = default(CommonExportProperties))
            : base(id, name, type, tags)
        {
            ExecutionType = executionType;
            Status = status;
            SubmittedBy = submittedBy;
            SubmittedTime = submittedTime;
            ProcessingStartTime = processingStartTime;
            ProcessingEndTime = processingEndTime;
            FileName = fileName;
            RunSettings = runSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of the export execution. Possible values
        /// include: 'OnDemand', 'Scheduled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.executionType")]
        public string ExecutionType { get; set; }

        /// <summary>
        /// Gets or sets the status of the export execution. Possible values
        /// include: 'Queued', 'InProgress', 'Completed', 'Failed', 'Timeout',
        /// 'NewDataNotAvailable', 'DataNotAvailable'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the identifier for the entity that executed the
        /// export. For OnDemand executions, it is the email id. For Scheduled
        /// executions, it is the constant value - System.
        /// </summary>
        [JsonProperty(PropertyName = "properties.submittedBy")]
        public string SubmittedBy { get; set; }

        /// <summary>
        /// Gets or sets the time when export was queued to be executed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.submittedTime")]
        public System.DateTime? SubmittedTime { get; set; }

        /// <summary>
        /// Gets or sets the time when export was picked up to be executed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.processingStartTime")]
        public System.DateTime? ProcessingStartTime { get; set; }

        /// <summary>
        /// Gets or sets the time when export execution finished.
        /// </summary>
        [JsonProperty(PropertyName = "properties.processingEndTime")]
        public System.DateTime? ProcessingEndTime { get; set; }

        /// <summary>
        /// Gets or sets the name of the file export got written to.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fileName")]
        public string FileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.runSettings")]
        public CommonExportProperties RunSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RunSettings != null)
            {
                RunSettings.Validate();
            }
        }
    }
}
