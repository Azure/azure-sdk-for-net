// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The schedule associated with a export.
    /// </summary>
    public partial class ExportSchedule
    {
        /// <summary>
        /// Initializes a new instance of the ExportSchedule class.
        /// </summary>
        public ExportSchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportSchedule class.
        /// </summary>
        /// <param name="recurrence">The schedule recurrence. Possible values
        /// include: 'Daily', 'Weekly', 'Monthly', 'Annually'</param>
        /// <param name="status">The status of the schedule. Whether active or
        /// not. If inactive, the export's scheduled execution is paused.
        /// Possible values include: 'Active', 'Inactive'</param>
        /// <param name="recurrencePeriod">Has start and end date of the
        /// recurrence. The start date must be in future. If present, the end
        /// date must be greater than start date.</param>
        public ExportSchedule(string recurrence, string status = default(string), ExportRecurrencePeriod recurrencePeriod = default(ExportRecurrencePeriod))
        {
            Status = status;
            Recurrence = recurrence;
            RecurrencePeriod = recurrencePeriod;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status of the schedule. Whether active or not. If
        /// inactive, the export's scheduled execution is paused. Possible
        /// values include: 'Active', 'Inactive'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the schedule recurrence. Possible values include:
        /// 'Daily', 'Weekly', 'Monthly', 'Annually'
        /// </summary>
        [JsonProperty(PropertyName = "recurrence")]
        public string Recurrence { get; set; }

        /// <summary>
        /// Gets or sets has start and end date of the recurrence. The start
        /// date must be in future. If present, the end date must be greater
        /// than start date.
        /// </summary>
        [JsonProperty(PropertyName = "recurrencePeriod")]
        public ExportRecurrencePeriod RecurrencePeriod { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Recurrence == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Recurrence");
            }
            if (RecurrencePeriod != null)
            {
                RecurrencePeriod.Validate();
            }
        }
    }
}
