// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Alert details
    /// </summary>
    public partial class AlertPropertiesDetails
    {
        /// <summary>
        /// Initializes a new instance of the AlertPropertiesDetails class.
        /// </summary>
        public AlertPropertiesDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertPropertiesDetails class.
        /// </summary>
        /// <param name="timeGrainType">Type of timegrain cadence</param>
        /// <param name="periodStartDate">datetime of periodStartDate</param>
        /// <param name="triggeredBy">notificationId that triggered this
        /// alert</param>
        /// <param name="resourceGroupFilter">array of resourceGroups to filter
        /// by</param>
        /// <param name="resourceFilter">array of resources to filter
        /// by</param>
        /// <param name="meterFilter">array of meters to filter by</param>
        /// <param name="tagFilter">tags to filter by</param>
        /// <param name="threshold">notification threshold percentage as a
        /// decimal which activated this alert</param>
        /// <param name="operatorProperty">operator used to compare
        /// currentSpend with amount</param>
        /// <param name="amount">budget threshold amount</param>
        /// <param name="unit">unit of currency being used</param>
        /// <param name="currentSpend">current spend</param>
        /// <param name="contactEmails">list of emails to contact</param>
        /// <param name="contactGroups">list of action groups to broadcast
        /// to</param>
        /// <param name="contactRoles">list of contact roles</param>
        /// <param name="overridingAlert">overriding alert</param>
        public AlertPropertiesDetails(string timeGrainType = default(string), string periodStartDate = default(string), string triggeredBy = default(string), IList<object> resourceGroupFilter = default(IList<object>), IList<object> resourceFilter = default(IList<object>), IList<object> meterFilter = default(IList<object>), object tagFilter = default(object), decimal? threshold = default(decimal?), string operatorProperty = default(string), decimal? amount = default(decimal?), string unit = default(string), decimal? currentSpend = default(decimal?), IList<string> contactEmails = default(IList<string>), IList<string> contactGroups = default(IList<string>), IList<string> contactRoles = default(IList<string>), string overridingAlert = default(string))
        {
            TimeGrainType = timeGrainType;
            PeriodStartDate = periodStartDate;
            TriggeredBy = triggeredBy;
            ResourceGroupFilter = resourceGroupFilter;
            ResourceFilter = resourceFilter;
            MeterFilter = meterFilter;
            TagFilter = tagFilter;
            Threshold = threshold;
            OperatorProperty = operatorProperty;
            Amount = amount;
            Unit = unit;
            CurrentSpend = currentSpend;
            ContactEmails = contactEmails;
            ContactGroups = contactGroups;
            ContactRoles = contactRoles;
            OverridingAlert = overridingAlert;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of timegrain cadence
        /// </summary>
        [JsonProperty(PropertyName = "timeGrainType")]
        public string TimeGrainType { get; set; }

        /// <summary>
        /// Gets or sets datetime of periodStartDate
        /// </summary>
        [JsonProperty(PropertyName = "periodStartDate")]
        public string PeriodStartDate { get; set; }

        /// <summary>
        /// Gets or sets notificationId that triggered this alert
        /// </summary>
        [JsonProperty(PropertyName = "triggeredBy")]
        public string TriggeredBy { get; set; }

        /// <summary>
        /// Gets or sets array of resourceGroups to filter by
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroupFilter")]
        public IList<object> ResourceGroupFilter { get; set; }

        /// <summary>
        /// Gets or sets array of resources to filter by
        /// </summary>
        [JsonProperty(PropertyName = "resourceFilter")]
        public IList<object> ResourceFilter { get; set; }

        /// <summary>
        /// Gets or sets array of meters to filter by
        /// </summary>
        [JsonProperty(PropertyName = "meterFilter")]
        public IList<object> MeterFilter { get; set; }

        /// <summary>
        /// Gets or sets tags to filter by
        /// </summary>
        [JsonProperty(PropertyName = "tagFilter")]
        public object TagFilter { get; set; }

        /// <summary>
        /// Gets or sets notification threshold percentage as a decimal which
        /// activated this alert
        /// </summary>
        [JsonProperty(PropertyName = "threshold")]
        public decimal? Threshold { get; set; }

        /// <summary>
        /// Gets or sets operator used to compare currentSpend with amount
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

        /// <summary>
        /// Gets or sets budget threshold amount
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public decimal? Amount { get; set; }

        /// <summary>
        /// Gets or sets unit of currency being used
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets current spend
        /// </summary>
        [JsonProperty(PropertyName = "currentSpend")]
        public decimal? CurrentSpend { get; set; }

        /// <summary>
        /// Gets or sets list of emails to contact
        /// </summary>
        [JsonProperty(PropertyName = "contactEmails")]
        public IList<string> ContactEmails { get; set; }

        /// <summary>
        /// Gets or sets list of action groups to broadcast to
        /// </summary>
        [JsonProperty(PropertyName = "contactGroups")]
        public IList<string> ContactGroups { get; set; }

        /// <summary>
        /// Gets or sets list of contact roles
        /// </summary>
        [JsonProperty(PropertyName = "contactRoles")]
        public IList<string> ContactRoles { get; set; }

        /// <summary>
        /// Gets or sets overriding alert
        /// </summary>
        [JsonProperty(PropertyName = "overridingAlert")]
        public string OverridingAlert { get; set; }

    }
}
