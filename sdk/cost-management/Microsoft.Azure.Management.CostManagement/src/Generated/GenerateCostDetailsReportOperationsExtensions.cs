// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GenerateCostDetailsReportOperations.
    /// </summary>
    public static partial class GenerateCostDetailsReportOperationsExtensions
    {
            /// <summary>
            /// This API is the replacement for all previously release Usage Details APIs.
            /// Request to generate a cost details report for the provided date range,
            /// billing period (Only enterprise customers) or Invoice Id asynchronously at
            /// a certain scope. The initial call to request a report will return a 202
            /// with a 'Location' and 'Retry-After' header. The 'Location' header will
            /// provide the endpoint to poll to get the result of the report generation.
            /// The 'Retry-After' provides the duration to wait before polling for the
            /// generated report. A call to poll the report operation will provide a 202
            /// response with a 'Location' header if the operation is still in progress.
            /// Once the report generation operation completes, the polling endpoint will
            /// provide a 200 response along with details on the report blob(s) that are
            /// available for download. The details on the file(s) available for download
            /// will be available in the polling response body.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the Create cost details operation.
            /// </param>
            public static CostDetailsOperationResults CreateOperation(this IGenerateCostDetailsReportOperations operations, string scope, GenerateCostDetailsReportRequestDefinition parameters)
            {
                return operations.CreateOperationAsync(scope, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// This API is the replacement for all previously release Usage Details APIs.
            /// Request to generate a cost details report for the provided date range,
            /// billing period (Only enterprise customers) or Invoice Id asynchronously at
            /// a certain scope. The initial call to request a report will return a 202
            /// with a 'Location' and 'Retry-After' header. The 'Location' header will
            /// provide the endpoint to poll to get the result of the report generation.
            /// The 'Retry-After' provides the duration to wait before polling for the
            /// generated report. A call to poll the report operation will provide a 202
            /// response with a 'Location' header if the operation is still in progress.
            /// Once the report generation operation completes, the polling endpoint will
            /// provide a 200 response along with details on the report blob(s) that are
            /// available for download. The details on the file(s) available for download
            /// will be available in the polling response body.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the Create cost details operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CostDetailsOperationResults> CreateOperationAsync(this IGenerateCostDetailsReportOperations operations, string scope, GenerateCostDetailsReportRequestDefinition parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOperationWithHttpMessagesAsync(scope, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the result of the specified operation. This link is provided in the
            /// CostDetails creation request response Location header.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='operationId'>
            /// The target operation Id.
            /// </param>
            public static CostDetailsOperationResults GetOperationResults(this IGenerateCostDetailsReportOperations operations, string scope, string operationId)
            {
                return operations.GetOperationResultsAsync(scope, operationId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the result of the specified operation. This link is provided in the
            /// CostDetails creation request response Location header.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='operationId'>
            /// The target operation Id.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CostDetailsOperationResults> GetOperationResultsAsync(this IGenerateCostDetailsReportOperations operations, string scope, string operationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetOperationResultsWithHttpMessagesAsync(scope, operationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// This API is the replacement for all previously release Usage Details APIs.
            /// Request to generate a cost details report for the provided date range,
            /// billing period (Only enterprise customers) or Invoice Id asynchronously at
            /// a certain scope. The initial call to request a report will return a 202
            /// with a 'Location' and 'Retry-After' header. The 'Location' header will
            /// provide the endpoint to poll to get the result of the report generation.
            /// The 'Retry-After' provides the duration to wait before polling for the
            /// generated report. A call to poll the report operation will provide a 202
            /// response with a 'Location' header if the operation is still in progress.
            /// Once the report generation operation completes, the polling endpoint will
            /// provide a 200 response along with details on the report blob(s) that are
            /// available for download. The details on the file(s) available for download
            /// will be available in the polling response body.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the Create cost details operation.
            /// </param>
            public static CostDetailsOperationResults BeginCreateOperation(this IGenerateCostDetailsReportOperations operations, string scope, GenerateCostDetailsReportRequestDefinition parameters)
            {
                return operations.BeginCreateOperationAsync(scope, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// This API is the replacement for all previously release Usage Details APIs.
            /// Request to generate a cost details report for the provided date range,
            /// billing period (Only enterprise customers) or Invoice Id asynchronously at
            /// a certain scope. The initial call to request a report will return a 202
            /// with a 'Location' and 'Retry-After' header. The 'Location' header will
            /// provide the endpoint to poll to get the result of the report generation.
            /// The 'Retry-After' provides the duration to wait before polling for the
            /// generated report. A call to poll the report operation will provide a 202
            /// response with a 'Location' header if the operation is still in progress.
            /// Once the report generation operation completes, the polling endpoint will
            /// provide a 200 response along with details on the report blob(s) that are
            /// available for download. The details on the file(s) available for download
            /// will be available in the polling response body.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the Create cost details operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CostDetailsOperationResults> BeginCreateOperationAsync(this IGenerateCostDetailsReportOperations operations, string scope, GenerateCostDetailsReportRequestDefinition parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOperationWithHttpMessagesAsync(scope, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the result of the specified operation. This link is provided in the
            /// CostDetails creation request response Location header.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='operationId'>
            /// The target operation Id.
            /// </param>
            public static CostDetailsOperationResults BeginGetOperationResults(this IGenerateCostDetailsReportOperations operations, string scope, string operationId)
            {
                return operations.BeginGetOperationResultsAsync(scope, operationId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the result of the specified operation. This link is provided in the
            /// CostDetails creation request response Location header.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='scope'>
            /// The scope associated with usage details operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// Billing Account scope,
            /// '/providers/Microsoft.Billing/departments/{departmentId}' for Department
            /// scope,
            /// '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for
            /// EnrollmentAccount scope. Also, Modern Commerce Account scopes are
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// billingAccount scope,
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billingProfile scope,
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
            /// for invoiceSection scope, and
            /// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
            /// specific for partners.
            /// </param>
            /// <param name='operationId'>
            /// The target operation Id.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CostDetailsOperationResults> BeginGetOperationResultsAsync(this IGenerateCostDetailsReportOperations operations, string scope, string operationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginGetOperationResultsWithHttpMessagesAsync(scope, operationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
