// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.CostManagement
{
    /// <summary>
    /// A class representing the GenerateDetailedCostReportOperationResult data model.
    /// The result of the long running operation for cost detailed report.
    /// </summary>
    public partial class GenerateDetailedCostReportOperationResultData : ResourceData
    {
        /// <summary> Initializes a new instance of GenerateDetailedCostReportOperationResultData. </summary>
        internal GenerateDetailedCostReportOperationResultData()
        {
        }

        /// <summary> Initializes a new instance of GenerateDetailedCostReportOperationResultData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="expiryOn"> The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. </param>
        /// <param name="validTill"> The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. </param>
        /// <param name="downloadUri"> The URL to download the generated report. </param>
        internal GenerateDetailedCostReportOperationResultData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DateTimeOffset? expiryOn, DateTimeOffset? validTill, Uri downloadUri) : base(id, name, resourceType, systemData)
        {
            ExpiryOn = expiryOn;
            ValidTill = validTill;
            DownloadUri = downloadUri;
        }

        /// <summary> The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. </summary>
        public DateTimeOffset? ExpiryOn { get; }
        /// <summary> The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. </summary>
        public DateTimeOffset? ValidTill { get; }
        /// <summary> The URL to download the generated report. </summary>
        public Uri DownloadUri { get; }
    }
}
