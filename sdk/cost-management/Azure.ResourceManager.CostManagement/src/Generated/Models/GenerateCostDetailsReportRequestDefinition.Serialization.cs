// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CostManagement.Models
{
    public partial class GenerateCostDetailsReportRequestDefinition : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Metric))
            {
                writer.WritePropertyName("metric"u8);
                writer.WriteStringValue(Metric.Value.ToString());
            }
            if (Optional.IsDefined(TimePeriod))
            {
                writer.WritePropertyName("timePeriod"u8);
                writer.WriteObjectValue(TimePeriod);
            }
            if (Optional.IsDefined(BillingPeriod))
            {
                writer.WritePropertyName("billingPeriod"u8);
                writer.WriteStringValue(BillingPeriod);
            }
            if (Optional.IsDefined(InvoiceId))
            {
                writer.WritePropertyName("invoiceId"u8);
                writer.WriteStringValue(InvoiceId);
            }
            writer.WriteEndObject();
        }

        internal static GenerateCostDetailsReportRequestDefinition DeserializeGenerateCostDetailsReportRequestDefinition(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<CostDetailsMetricType> metric = default;
            Optional<CostDetailsTimePeriod> timePeriod = default;
            Optional<string> billingPeriod = default;
            Optional<string> invoiceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("metric"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    metric = new CostDetailsMetricType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("timePeriod"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timePeriod = CostDetailsTimePeriod.DeserializeCostDetailsTimePeriod(property.Value);
                    continue;
                }
                if (property.NameEquals("billingPeriod"u8))
                {
                    billingPeriod = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("invoiceId"u8))
                {
                    invoiceId = property.Value.GetString();
                    continue;
                }
            }
            return new GenerateCostDetailsReportRequestDefinition(Optional.ToNullable(metric), timePeriod.Value, billingPeriod.Value, invoiceId.Value);
        }
    }
}
