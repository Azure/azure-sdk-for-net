// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DesktopVirtualization.Models
{
    /// <summary> MSIX Package properties that can be patched. </summary>
    public partial class PatchableMsixPackageData : ResourceData
    {
        /// <summary> Initializes a new instance of PatchableMsixPackageData. </summary>
        public PatchableMsixPackageData()
        {
        }

        /// <summary> Initializes a new instance of PatchableMsixPackageData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="isActive"> Set a version of the package to be active across hostpool. </param>
        /// <param name="isRegularRegistration"> Set Registration mode. Regular or Delayed. </param>
        /// <param name="displayName"> Display name for MSIX Package. </param>
        internal PatchableMsixPackageData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, bool? isActive, bool? isRegularRegistration, string displayName) : base(id, name, type, systemData)
        {
            IsActive = isActive;
            IsRegularRegistration = isRegularRegistration;
            DisplayName = displayName;
        }

        /// <summary> Set a version of the package to be active across hostpool. </summary>
        public bool? IsActive { get; set; }
        /// <summary> Set Registration mode. Regular or Delayed. </summary>
        public bool? IsRegularRegistration { get; set; }
        /// <summary> Display name for MSIX Package. </summary>
        public string DisplayName { get; set; }
    }
}
