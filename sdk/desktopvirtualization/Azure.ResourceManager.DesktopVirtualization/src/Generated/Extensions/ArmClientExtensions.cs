// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.DesktopVirtualization
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region VirtualWorkspace
        /// <summary> Gets an object representing a VirtualWorkspace along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualWorkspace" /> object. </returns>
        public static VirtualWorkspace GetVirtualWorkspace(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                VirtualWorkspace.ValidateResourceId(id);
                return new VirtualWorkspace(client, id);
            }
            );
        }
        #endregion

        #region ScalingPlan
        /// <summary> Gets an object representing a ScalingPlan along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ScalingPlan" /> object. </returns>
        public static ScalingPlan GetScalingPlan(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                ScalingPlan.ValidateResourceId(id);
                return new ScalingPlan(client, id);
            }
            );
        }
        #endregion

        #region VirtualApplicationGroup
        /// <summary> Gets an object representing a VirtualApplicationGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualApplicationGroup" /> object. </returns>
        public static VirtualApplicationGroup GetVirtualApplicationGroup(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                VirtualApplicationGroup.ValidateResourceId(id);
                return new VirtualApplicationGroup(client, id);
            }
            );
        }
        #endregion

        #region VirtualApplication
        /// <summary> Gets an object representing a VirtualApplication along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualApplication" /> object. </returns>
        public static VirtualApplication GetVirtualApplication(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                VirtualApplication.ValidateResourceId(id);
                return new VirtualApplication(client, id);
            }
            );
        }
        #endregion

        #region VirtualDesktop
        /// <summary> Gets an object representing a VirtualDesktop along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualDesktop" /> object. </returns>
        public static VirtualDesktop GetVirtualDesktop(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                VirtualDesktop.ValidateResourceId(id);
                return new VirtualDesktop(client, id);
            }
            );
        }
        #endregion

        #region HostPool
        /// <summary> Gets an object representing a HostPool along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HostPool" /> object. </returns>
        public static HostPool GetHostPool(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                HostPool.ValidateResourceId(id);
                return new HostPool(client, id);
            }
            );
        }
        #endregion

        #region UserSession
        /// <summary> Gets an object representing a UserSession along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="UserSession" /> object. </returns>
        public static UserSession GetUserSession(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                UserSession.ValidateResourceId(id);
                return new UserSession(client, id);
            }
            );
        }
        #endregion

        #region SessionHost
        /// <summary> Gets an object representing a SessionHost along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SessionHost" /> object. </returns>
        public static SessionHost GetSessionHost(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                SessionHost.ValidateResourceId(id);
                return new SessionHost(client, id);
            }
            );
        }
        #endregion

        #region MsixPackage
        /// <summary> Gets an object representing a MsixPackage along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MsixPackage" /> object. </returns>
        public static MsixPackage GetMsixPackage(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetClient(() =>
            {
                MsixPackage.ValidateResourceId(id);
                return new MsixPackage(client, id);
            }
            );
        }
        #endregion
    }
}
