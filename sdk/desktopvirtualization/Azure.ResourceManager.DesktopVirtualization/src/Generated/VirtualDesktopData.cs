// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DesktopVirtualization
{
    /// <summary> A class representing the VirtualDesktop data model. </summary>
    public partial class VirtualDesktopData : ResourceData
    {
        /// <summary> Initializes a new instance of VirtualDesktopData. </summary>
        public VirtualDesktopData()
        {
        }

        /// <summary> Initializes a new instance of VirtualDesktopData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="objectId"> ObjectId of Desktop. (internal use). </param>
        /// <param name="description"> Description of Desktop. </param>
        /// <param name="friendlyName"> Friendly name of Desktop. </param>
        /// <param name="iconHash"> Hash of the icon. </param>
        /// <param name="iconContent"> The icon a 64 bit string as a byte array. </param>
        internal VirtualDesktopData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string objectId, string description, string friendlyName, string iconHash, byte[] iconContent) : base(id, name, type, systemData)
        {
            ObjectId = objectId;
            Description = description;
            FriendlyName = friendlyName;
            IconHash = iconHash;
            IconContent = iconContent;
        }

        /// <summary> ObjectId of Desktop. (internal use). </summary>
        public string ObjectId { get; }
        /// <summary> Description of Desktop. </summary>
        public string Description { get; set; }
        /// <summary> Friendly name of Desktop. </summary>
        public string FriendlyName { get; set; }
        /// <summary> Hash of the icon. </summary>
        public string IconHash { get; }
        /// <summary> The icon a 64 bit string as a byte array. </summary>
        public byte[] IconContent { get; }
    }
}
