// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Dynatrace.Models
{
    /// <summary> Marketplace resource autorenew flag. </summary>
    public readonly partial struct MarketplaceSaasAutoRenew : IEquatable<MarketplaceSaasAutoRenew>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MarketplaceSaasAutoRenew"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MarketplaceSaasAutoRenew(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string OnValue = "On";
        private const string OffValue = "Off";

        /// <summary> On. </summary>
        public static MarketplaceSaasAutoRenew On { get; } = new MarketplaceSaasAutoRenew(OnValue);
        /// <summary> Off. </summary>
        public static MarketplaceSaasAutoRenew Off { get; } = new MarketplaceSaasAutoRenew(OffValue);
        /// <summary> Determines if two <see cref="MarketplaceSaasAutoRenew"/> values are the same. </summary>
        public static bool operator ==(MarketplaceSaasAutoRenew left, MarketplaceSaasAutoRenew right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MarketplaceSaasAutoRenew"/> values are not the same. </summary>
        public static bool operator !=(MarketplaceSaasAutoRenew left, MarketplaceSaasAutoRenew right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MarketplaceSaasAutoRenew"/>. </summary>
        public static implicit operator MarketplaceSaasAutoRenew(string value) => new MarketplaceSaasAutoRenew(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MarketplaceSaasAutoRenew other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MarketplaceSaasAutoRenew other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
