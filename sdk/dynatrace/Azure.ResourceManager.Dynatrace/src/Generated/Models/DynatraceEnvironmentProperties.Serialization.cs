// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.Dynatrace.Models
{
    public partial class DynatraceEnvironmentProperties : IUtf8JsonSerializable, Core.IModelSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((Core.IModelSerializable)this).Serialize(writer, new Core.Serialization.SerializableOptions());

        void Core.IModelSerializable.Serialize(Utf8JsonWriter writer, Core.Serialization.SerializableOptions options)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(UserId))
            {
                writer.WritePropertyName("userId"u8);
                writer.WriteStringValue(UserId);
            }
            if (Optional.IsDefined(AccountInfo))
            {
                writer.WritePropertyName("accountInfo"u8);
                writer.WriteObjectValue(AccountInfo);
            }
            if (Optional.IsDefined(EnvironmentInfo))
            {
                writer.WritePropertyName("environmentInfo"u8);
                writer.WriteObjectValue(EnvironmentInfo);
            }
            if (Optional.IsDefined(SingleSignOnProperties))
            {
                writer.WritePropertyName("singleSignOnProperties"u8);
                writer.WriteObjectValue(SingleSignOnProperties);
            }
            writer.WriteEndObject();
        }

        internal static DynatraceEnvironmentProperties DeserializeDynatraceEnvironmentProperties(JsonElement element, Core.Serialization.SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> userId = default;
            Optional<DynatraceAccountInfo> accountInfo = default;
            Optional<DynatraceEnvironmentInfo> environmentInfo = default;
            Optional<DynatraceSingleSignOnProperties> singleSignOnProperties = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("userId"u8))
                {
                    userId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accountInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    accountInfo = DynatraceAccountInfo.DeserializeDynatraceAccountInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("environmentInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    environmentInfo = DynatraceEnvironmentInfo.DeserializeDynatraceEnvironmentInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("singleSignOnProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    singleSignOnProperties = DynatraceSingleSignOnProperties.DeserializeDynatraceSingleSignOnProperties(property.Value);
                    continue;
                }
            }
            return new DynatraceEnvironmentProperties(userId.Value, accountInfo.Value, environmentInfo.Value, singleSignOnProperties.Value);
        }
    }
}
