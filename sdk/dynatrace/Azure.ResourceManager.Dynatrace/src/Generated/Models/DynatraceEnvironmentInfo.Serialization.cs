// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Dynatrace.Models
{
    public partial class DynatraceEnvironmentInfo : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(EnvironmentId))
            {
                writer.WritePropertyName("environmentId"u8);
                writer.WriteStringValue(EnvironmentId);
            }
            if (Core.Optional.IsDefined(IngestionKey))
            {
                writer.WritePropertyName("ingestionKey"u8);
                writer.WriteStringValue(IngestionKey);
            }
            if (Core.Optional.IsDefined(LogsIngestionEndpoint))
            {
                writer.WritePropertyName("logsIngestionEndpoint"u8);
                writer.WriteStringValue(LogsIngestionEndpoint.AbsoluteUri);
            }
            if (Core.Optional.IsDefined(LandingUri))
            {
                writer.WritePropertyName("landingURL"u8);
                writer.WriteStringValue(LandingUri.AbsoluteUri);
            }
            writer.WriteEndObject();
        }

        internal static DynatraceEnvironmentInfo DeserializeDynatraceEnvironmentInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> environmentId = default;
            Core.Optional<string> ingestionKey = default;
            Core.Optional<Uri> logsIngestionEndpoint = default;
            Core.Optional<Uri> landingUri = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("environmentId"u8))
                {
                    environmentId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ingestionKey"u8))
                {
                    ingestionKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("logsIngestionEndpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    logsIngestionEndpoint = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("landingURL"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    landingUri = new Uri(property.Value.GetString());
                    continue;
                }
            }
            return new DynatraceEnvironmentInfo(environmentId.Value, ingestionKey.Value, logsIngestionEndpoint.Value, landingUri.Value);
        }
    }
}
