// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dynatrace.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Dynatrace Monitor Resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MonitorResource : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the MonitorResource class.
        /// </summary>
        public MonitorResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MonitorResource class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="monitoringStatus">Status of the monitor. Possible
        /// values include: 'Enabled', 'Disabled'</param>
        /// <param name="marketplaceSubscriptionStatus">Marketplace
        /// subscription status. Possible values include: 'Active',
        /// 'Suspended'</param>
        /// <param name="dynatraceEnvironmentProperties">Properties of the
        /// Dynatrace environment.</param>
        /// <param name="userInfo">User info.</param>
        /// <param name="planData">Billing plan information.</param>
        /// <param name="liftrResourceCategory">Liftr Resource category.
        /// Possible values include: 'Unknown', 'MonitorLogs'</param>
        /// <param name="liftrResourcePreference">The priority of the
        /// resource.</param>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted',
        /// 'NotSpecified'</param>
        /// <param name="systemData">System metadata for this resource.</param>
        /// <param name="identity">The managed service identities assigned to
        /// this resource.</param>
        public MonitorResource(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string monitoringStatus = default(string), string marketplaceSubscriptionStatus = default(string), DynatraceEnvironmentProperties dynatraceEnvironmentProperties = default(DynatraceEnvironmentProperties), UserInfo userInfo = default(UserInfo), PlanData planData = default(PlanData), string liftrResourceCategory = default(string), int? liftrResourcePreference = default(int?), string provisioningState = default(string), SystemData systemData = default(SystemData), IdentityProperties identity = default(IdentityProperties))
            : base(location, id, name, type, tags)
        {
            MonitoringStatus = monitoringStatus;
            MarketplaceSubscriptionStatus = marketplaceSubscriptionStatus;
            DynatraceEnvironmentProperties = dynatraceEnvironmentProperties;
            UserInfo = userInfo;
            PlanData = planData;
            LiftrResourceCategory = liftrResourceCategory;
            LiftrResourcePreference = liftrResourcePreference;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets status of the monitor. Possible values include:
        /// 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.monitoringStatus")]
        public string MonitoringStatus { get; set; }

        /// <summary>
        /// Gets or sets marketplace subscription status. Possible values
        /// include: 'Active', 'Suspended'
        /// </summary>
        [JsonProperty(PropertyName = "properties.marketplaceSubscriptionStatus")]
        public string MarketplaceSubscriptionStatus { get; set; }

        /// <summary>
        /// Gets or sets properties of the Dynatrace environment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dynatraceEnvironmentProperties")]
        public DynatraceEnvironmentProperties DynatraceEnvironmentProperties { get; set; }

        /// <summary>
        /// Gets or sets user info.
        /// </summary>
        [JsonProperty(PropertyName = "properties.userInfo")]
        public UserInfo UserInfo { get; set; }

        /// <summary>
        /// Gets or sets billing plan information.
        /// </summary>
        [JsonProperty(PropertyName = "properties.planData")]
        public PlanData PlanData { get; set; }

        /// <summary>
        /// Gets liftr Resource category. Possible values include: 'Unknown',
        /// 'MonitorLogs'
        /// </summary>
        [JsonProperty(PropertyName = "properties.liftrResourceCategory")]
        public string LiftrResourceCategory { get; private set; }

        /// <summary>
        /// Gets the priority of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.liftrResourcePreference")]
        public int? LiftrResourcePreference { get; private set; }

        /// <summary>
        /// Gets provisioning state of the resource. Possible values include:
        /// 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded',
        /// 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets system metadata for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Gets or sets the managed service identities assigned to this
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public IdentityProperties Identity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (UserInfo != null)
            {
                UserInfo.Validate();
            }
            if (Identity != null)
            {
                Identity.Validate();
            }
        }
    }
}
