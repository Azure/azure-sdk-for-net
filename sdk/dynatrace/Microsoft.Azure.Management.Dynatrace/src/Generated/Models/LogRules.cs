// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dynatrace.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Set of rules for sending logs for the Monitor resource.
    /// </summary>
    public partial class LogRules
    {
        /// <summary>
        /// Initializes a new instance of the LogRules class.
        /// </summary>
        public LogRules()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogRules class.
        /// </summary>
        /// <param name="sendAadLogs">Flag specifying if AAD logs should be
        /// sent for the Monitor resource. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="sendSubscriptionLogs">Flag specifying if subscription
        /// logs should be sent for the Monitor resource. Possible values
        /// include: 'Enabled', 'Disabled'</param>
        /// <param name="sendActivityLogs">Flag specifying if activity logs
        /// from Azure resources should be sent for the Monitor resource.
        /// Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="filteringTags">List of filtering tags to be used for
        /// capturing logs. This only takes effect if SendActivityLogs flag is
        /// enabled. If empty, all resources will be captured.
        /// If only Exclude action is specified, the rules will apply to the
        /// list of all available resources. If Include actions are specified,
        /// the rules will only include resources with the associated
        /// tags.</param>
        public LogRules(string sendAadLogs = default(string), string sendSubscriptionLogs = default(string), string sendActivityLogs = default(string), IList<FilteringTag> filteringTags = default(IList<FilteringTag>))
        {
            SendAadLogs = sendAadLogs;
            SendSubscriptionLogs = sendSubscriptionLogs;
            SendActivityLogs = sendActivityLogs;
            FilteringTags = filteringTags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets flag specifying if AAD logs should be sent for the
        /// Monitor resource. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "sendAadLogs")]
        public string SendAadLogs { get; set; }

        /// <summary>
        /// Gets or sets flag specifying if subscription logs should be sent
        /// for the Monitor resource. Possible values include: 'Enabled',
        /// 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "sendSubscriptionLogs")]
        public string SendSubscriptionLogs { get; set; }

        /// <summary>
        /// Gets or sets flag specifying if activity logs from Azure resources
        /// should be sent for the Monitor resource. Possible values include:
        /// 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "sendActivityLogs")]
        public string SendActivityLogs { get; set; }

        /// <summary>
        /// Gets or sets list of filtering tags to be used for capturing logs.
        /// This only takes effect if SendActivityLogs flag is enabled. If
        /// empty, all resources will be captured.
        /// If only Exclude action is specified, the rules will apply to the
        /// list of all available resources. If Include actions are specified,
        /// the rules will only include resources with the associated tags.
        /// </summary>
        [JsonProperty(PropertyName = "filteringTags")]
        public IList<FilteringTag> FilteringTags { get; set; }

    }
}
