// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dynatrace.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response for getting all the linkable environments
    /// </summary>
    public partial class LinkableEnvironmentResponse
    {
        /// <summary>
        /// Initializes a new instance of the LinkableEnvironmentResponse
        /// class.
        /// </summary>
        public LinkableEnvironmentResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkableEnvironmentResponse
        /// class.
        /// </summary>
        /// <param name="environmentId">environment id for which user is an
        /// admin</param>
        /// <param name="environmentName">Name of the environment</param>
        /// <param name="planData">Billing plan information.</param>
        public LinkableEnvironmentResponse(string environmentId = default(string), string environmentName = default(string), PlanData planData = default(PlanData))
        {
            EnvironmentId = environmentId;
            EnvironmentName = environmentName;
            PlanData = planData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets environment id for which user is an admin
        /// </summary>
        [JsonProperty(PropertyName = "environmentId")]
        public string EnvironmentId { get; set; }

        /// <summary>
        /// Gets or sets name of the environment
        /// </summary>
        [JsonProperty(PropertyName = "environmentName")]
        public string EnvironmentName { get; set; }

        /// <summary>
        /// Gets or sets billing plan information.
        /// </summary>
        [JsonProperty(PropertyName = "planData")]
        public PlanData PlanData { get; set; }

    }
}
