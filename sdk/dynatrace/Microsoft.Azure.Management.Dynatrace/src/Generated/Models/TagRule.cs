// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dynatrace.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Tag rules for a monitor resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TagRule : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the TagRule class.
        /// </summary>
        public TagRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagRule class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="logRules">Set of rules for sending logs for the
        /// Monitor resource.</param>
        /// <param name="metricRules">Set of rules for sending metrics for the
        /// Monitor resource.</param>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted',
        /// 'NotSpecified'</param>
        /// <param name="systemData">System metadata for this resource.</param>
        public TagRule(string id = default(string), string name = default(string), string type = default(string), LogRules logRules = default(LogRules), MetricRules metricRules = default(MetricRules), string provisioningState = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            LogRules = logRules;
            MetricRules = metricRules;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets set of rules for sending logs for the Monitor
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logRules")]
        public LogRules LogRules { get; set; }

        /// <summary>
        /// Gets or sets set of rules for sending metrics for the Monitor
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.metricRules")]
        public MetricRules MetricRules { get; set; }

        /// <summary>
        /// Gets provisioning state of the resource. Possible values include:
        /// 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded',
        /// 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets system metadata for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
