// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SkusAvailabilityOperations.
    /// </summary>
    public static partial class SkusAvailabilityOperationsExtensions
    {
            /// <summary>
            /// Implements SkuAvailability List method
            /// </summary>
            /// <remarks>
            /// Returns list of available resources in region
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='regionId'>
            /// The region Id (westus, eastus)
            /// </param>
            /// <param name='skuId'>
            /// sku id, if no sku is passed availability for all skus will be returned
            /// </param>
            public static IPage<SkuAvailability> List(this ISkusAvailabilityOperations operations, string regionId, string skuId = default(string))
            {
                return operations.ListAsync(regionId, skuId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Implements SkuAvailability List method
            /// </summary>
            /// <remarks>
            /// Returns list of available resources in region
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='regionId'>
            /// The region Id (westus, eastus)
            /// </param>
            /// <param name='skuId'>
            /// sku id, if no sku is passed availability for all skus will be returned
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SkuAvailability>> ListAsync(this ISkusAvailabilityOperations operations, string regionId, string skuId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(regionId, skuId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Implements SkuAvailability List method
            /// </summary>
            /// <remarks>
            /// Returns list of available resources in region
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SkuAvailability> ListNext(this ISkusAvailabilityOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Implements SkuAvailability List method
            /// </summary>
            /// <remarks>
            /// Returns list of available resources in region
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SkuAvailability>> ListNextAsync(this ISkusAvailabilityOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
