// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// DedicatedCloudNodesOperations operations.
    /// </summary>
    public partial interface IDedicatedCloudNodesOperations
    {
        /// <summary>
        /// Implements list of dedicated cloud nodes within subscription method
        /// </summary>
        /// <remarks>
        /// Returns list of dedicate cloud nodes within subscription
        /// </remarks>
        /// <param name='filter'>
        /// The filter to apply on the list operation
        /// </param>
        /// <param name='top'>
        /// The maximum number of record sets to return
        /// </param>
        /// <param name='skipToken'>
        /// to be used by nextLink implementation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<DedicatedCloudNode>>> ListBySubscriptionWithHttpMessagesAsync(string filter = default(string), int? top = default(int?), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements list of dedicated cloud nodes within RG method
        /// </summary>
        /// <remarks>
        /// Returns list of dedicate cloud nodes within resource group
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='filter'>
        /// The filter to apply on the list operation
        /// </param>
        /// <param name='top'>
        /// The maximum number of record sets to return
        /// </param>
        /// <param name='skipToken'>
        /// to be used by nextLink implementation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<DedicatedCloudNode>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, string filter = default(string), int? top = default(int?), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements dedicated cloud node GET method
        /// </summary>
        /// <remarks>
        /// Returns dedicated cloud node
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='dedicatedCloudNodeName'>
        /// dedicated cloud node name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DedicatedCloudNode>> GetWithHttpMessagesAsync(string resourceGroupName, string dedicatedCloudNodeName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements dedicated cloud node PUT method
        /// </summary>
        /// <remarks>
        /// Returns dedicated cloud node by its name
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='dedicatedCloudNodeName'>
        /// dedicated cloud node name
        /// </param>
        /// <param name='dedicatedCloudNodeRequest'>
        /// Create Dedicated Cloud Node request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DedicatedCloudNode,DedicatedCloudNodesCreateOrUpdateHeaders>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string dedicatedCloudNodeName, DedicatedCloudNode dedicatedCloudNodeRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements dedicated cloud node DELETE method
        /// </summary>
        /// <remarks>
        /// Delete dedicated cloud node
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='dedicatedCloudNodeName'>
        /// dedicated cloud node name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<DedicatedCloudNodesDeleteHeaders>> DeleteWithHttpMessagesAsync(string resourceGroupName, string dedicatedCloudNodeName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements dedicated cloud node PATCH method
        /// </summary>
        /// <remarks>
        /// Patches dedicated node properties
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='dedicatedCloudNodeName'>
        /// dedicated cloud node name
        /// </param>
        /// <param name='tags'>
        /// The tags key:value pairs
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DedicatedCloudNode>> UpdateWithHttpMessagesAsync(string resourceGroupName, string dedicatedCloudNodeName, IDictionary<string, string> tags = default(IDictionary<string, string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements dedicated cloud node PUT method
        /// </summary>
        /// <remarks>
        /// Returns dedicated cloud node by its name
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='dedicatedCloudNodeName'>
        /// dedicated cloud node name
        /// </param>
        /// <param name='dedicatedCloudNodeRequest'>
        /// Create Dedicated Cloud Node request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DedicatedCloudNode,DedicatedCloudNodesCreateOrUpdateHeaders>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string dedicatedCloudNodeName, DedicatedCloudNode dedicatedCloudNodeRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements list of dedicated cloud nodes within subscription method
        /// </summary>
        /// <remarks>
        /// Returns list of dedicate cloud nodes within subscription
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<DedicatedCloudNode>>> ListBySubscriptionNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements list of dedicated cloud nodes within RG method
        /// </summary>
        /// <remarks>
        /// Returns list of dedicate cloud nodes within resource group
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<DedicatedCloudNode>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
