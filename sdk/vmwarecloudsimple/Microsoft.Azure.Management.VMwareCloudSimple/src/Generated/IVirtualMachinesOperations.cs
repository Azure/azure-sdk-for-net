// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// VirtualMachinesOperations operations.
    /// </summary>
    public partial interface IVirtualMachinesOperations
    {
        /// <summary>
        /// Implements list virtual machine within subscription method
        /// </summary>
        /// <remarks>
        /// Returns list virtual machine within subscription
        /// </remarks>
        /// <param name='filter'>
        /// The filter to apply on the list operation
        /// </param>
        /// <param name='top'>
        /// The maximum number of record sets to return
        /// </param>
        /// <param name='skipToken'>
        /// to be used by nextLink implementation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<VirtualMachine>>> ListBySubscriptionWithHttpMessagesAsync(string filter = default(string), int? top = default(int?), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements list virtual machine within RG method
        /// </summary>
        /// <remarks>
        /// Returns list of virtual machine within resource group
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='filter'>
        /// The filter to apply on the list operation
        /// </param>
        /// <param name='top'>
        /// The maximum number of record sets to return
        /// </param>
        /// <param name='skipToken'>
        /// to be used by nextLink implementation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<VirtualMachine>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, string filter = default(string), int? top = default(int?), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine GET method
        /// </summary>
        /// <remarks>
        /// Get virtual machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<VirtualMachine>> GetWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine PUT method
        /// </summary>
        /// <remarks>
        /// Create Or Update Virtual Machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='virtualMachineRequest'>
        /// Create or Update Virtual Machine request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<VirtualMachine,VirtualMachinesCreateOrUpdateHeaders>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, VirtualMachine virtualMachineRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine DELETE method
        /// </summary>
        /// <remarks>
        /// Delete virtual machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<VirtualMachinesDeleteHeaders>> DeleteWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine PATCH method
        /// </summary>
        /// <remarks>
        /// Patch virtual machine properties
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='tags'>
        /// The tags key:value pairs
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<VirtualMachine>> UpdateWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, IDictionary<string, string> tags = default(IDictionary<string, string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements a start method for a virtual machine
        /// </summary>
        /// <remarks>
        /// Power on virtual machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<VirtualMachinesStartHeaders>> StartWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements shutdown, poweroff, and suspend method for a virtual
        /// machine
        /// </summary>
        /// <remarks>
        /// Power off virtual machine, options: shutdown, poweroff, and suspend
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='mode'>
        /// query stop mode parameter (reboot, shutdown, etc...). Possible
        /// values include: 'reboot', 'suspend', 'shutdown', 'poweroff'
        /// </param>
        /// <param name='mode1'>
        /// mode indicates a type of stop operation - reboot, suspend, shutdown
        /// or power-off. Possible values include: 'reboot', 'suspend',
        /// 'shutdown', 'poweroff'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<VirtualMachinesStopHeaders>> StopWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, StopMode? mode = default(StopMode?), StopMode? mode1 = default(StopMode?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine PUT method
        /// </summary>
        /// <remarks>
        /// Create Or Update Virtual Machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='virtualMachineRequest'>
        /// Create or Update Virtual Machine request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<VirtualMachine,VirtualMachinesCreateOrUpdateHeaders>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, VirtualMachine virtualMachineRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine DELETE method
        /// </summary>
        /// <remarks>
        /// Delete virtual machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<VirtualMachinesDeleteHeaders>> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements virtual machine PATCH method
        /// </summary>
        /// <remarks>
        /// Patch virtual machine properties
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='tags'>
        /// The tags key:value pairs
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<VirtualMachine>> BeginUpdateWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, IDictionary<string, string> tags = default(IDictionary<string, string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements a start method for a virtual machine
        /// </summary>
        /// <remarks>
        /// Power on virtual machine
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<VirtualMachinesStartHeaders>> BeginStartWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements shutdown, poweroff, and suspend method for a virtual
        /// machine
        /// </summary>
        /// <remarks>
        /// Power off virtual machine, options: shutdown, poweroff, and suspend
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group
        /// </param>
        /// <param name='virtualMachineName'>
        /// virtual machine name
        /// </param>
        /// <param name='mode'>
        /// query stop mode parameter (reboot, shutdown, etc...). Possible
        /// values include: 'reboot', 'suspend', 'shutdown', 'poweroff'
        /// </param>
        /// <param name='mode1'>
        /// mode indicates a type of stop operation - reboot, suspend, shutdown
        /// or power-off. Possible values include: 'reboot', 'suspend',
        /// 'shutdown', 'poweroff'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<VirtualMachinesStopHeaders>> BeginStopWithHttpMessagesAsync(string resourceGroupName, string virtualMachineName, StopMode? mode = default(StopMode?), StopMode? mode1 = default(StopMode?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements list virtual machine within subscription method
        /// </summary>
        /// <remarks>
        /// Returns list virtual machine within subscription
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<VirtualMachine>>> ListBySubscriptionNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Implements list virtual machine within RG method
        /// </summary>
        /// <remarks>
        /// Returns list of virtual machine within resource group
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CSRPErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<VirtualMachine>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
