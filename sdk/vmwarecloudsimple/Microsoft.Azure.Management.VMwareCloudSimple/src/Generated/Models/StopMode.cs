// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StopMode.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StopMode
    {
        [EnumMember(Value = "reboot")]
        Reboot,
        [EnumMember(Value = "suspend")]
        Suspend,
        [EnumMember(Value = "shutdown")]
        Shutdown,
        [EnumMember(Value = "poweroff")]
        Poweroff
    }
    internal static class StopModeEnumExtension
    {
        internal static string ToSerializedValue(this StopMode? value)
        {
            return value == null ? null : ((StopMode)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StopMode value)
        {
            switch( value )
            {
                case StopMode.Reboot:
                    return "reboot";
                case StopMode.Suspend:
                    return "suspend";
                case StopMode.Shutdown:
                    return "shutdown";
                case StopMode.Poweroff:
                    return "poweroff";
            }
            return null;
        }

        internal static StopMode? ParseStopMode(this string value)
        {
            switch( value )
            {
                case "reboot":
                    return StopMode.Reboot;
                case "suspend":
                    return StopMode.Suspend;
                case "shutdown":
                    return StopMode.Shutdown;
                case "poweroff":
                    return StopMode.Poweroff;
            }
            return null;
        }
    }
}
