// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Guest OS nic customization
    /// </summary>
    public partial class GuestOSNICCustomization
    {
        /// <summary>
        /// Initializes a new instance of the GuestOSNICCustomization class.
        /// </summary>
        public GuestOSNICCustomization()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GuestOSNICCustomization class.
        /// </summary>
        /// <param name="allocation">IP address allocation method. Possible
        /// values include: 'static', 'dynamic'</param>
        /// <param name="dnsServers">List of dns servers to use</param>
        /// <param name="gateway">Gateway addresses assigned to nic</param>
        /// <param name="ipAddress">Static ip address for nic</param>
        /// <param name="mask">Network mask for nic</param>
        /// <param name="primaryWinsServer">primary WINS server for
        /// Windows</param>
        /// <param name="secondaryWinsServer">secondary WINS server for
        /// Windows</param>
        public GuestOSNICCustomization(string allocation = default(string), IList<string> dnsServers = default(IList<string>), IList<string> gateway = default(IList<string>), string ipAddress = default(string), string mask = default(string), string primaryWinsServer = default(string), string secondaryWinsServer = default(string))
        {
            Allocation = allocation;
            DnsServers = dnsServers;
            Gateway = gateway;
            IpAddress = ipAddress;
            Mask = mask;
            PrimaryWinsServer = primaryWinsServer;
            SecondaryWinsServer = secondaryWinsServer;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets IP address allocation method. Possible values include:
        /// 'static', 'dynamic'
        /// </summary>
        [JsonProperty(PropertyName = "allocation")]
        public string Allocation { get; set; }

        /// <summary>
        /// Gets or sets list of dns servers to use
        /// </summary>
        [JsonProperty(PropertyName = "dnsServers")]
        public IList<string> DnsServers { get; set; }

        /// <summary>
        /// Gets or sets gateway addresses assigned to nic
        /// </summary>
        [JsonProperty(PropertyName = "gateway")]
        public IList<string> Gateway { get; set; }

        /// <summary>
        /// Gets or sets static ip address for nic
        /// </summary>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or sets network mask for nic
        /// </summary>
        [JsonProperty(PropertyName = "mask")]
        public string Mask { get; set; }

        /// <summary>
        /// Gets or sets primary WINS server for Windows
        /// </summary>
        [JsonProperty(PropertyName = "primaryWinsServer")]
        public string PrimaryWinsServer { get; set; }

        /// <summary>
        /// Gets or sets secondary WINS server for Windows
        /// </summary>
        [JsonProperty(PropertyName = "secondaryWinsServer")]
        public string SecondaryWinsServer { get; set; }

    }
}
