// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The virtual machine customization policy
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CustomizationPolicy
    {
        /// <summary>
        /// Initializes a new instance of the CustomizationPolicy class.
        /// </summary>
        public CustomizationPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomizationPolicy class.
        /// </summary>
        /// <param name="id">Customization policy azure id</param>
        /// <param name="location">Azure region</param>
        /// <param name="name">Customization policy name</param>
        /// <param name="description">Policy description</param>
        /// <param name="privateCloudId">The Private cloud id</param>
        /// <param name="specification">Detailed customization policy
        /// specification</param>
        /// <param name="customizationPolicyPropertiesType">The type of
        /// customization (Linux or Windows). Possible values include: 'LINUX',
        /// 'WINDOWS'</param>
        /// <param name="version">Policy version</param>
        public CustomizationPolicy(string id = default(string), string location = default(string), string name = default(string), string description = default(string), string privateCloudId = default(string), CustomizationSpecification specification = default(CustomizationSpecification), string customizationPolicyPropertiesType = default(string), string version = default(string), string type = default(string))
        {
            Id = id;
            Location = location;
            Name = name;
            Description = description;
            PrivateCloudId = privateCloudId;
            Specification = specification;
            CustomizationPolicyPropertiesType = customizationPolicyPropertiesType;
            Version = version;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets customization policy azure id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets azure region
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets customization policy name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets policy description
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the Private cloud id
        /// </summary>
        [JsonProperty(PropertyName = "properties.privateCloudId")]
        public string PrivateCloudId { get; set; }

        /// <summary>
        /// Gets or sets detailed customization policy specification
        /// </summary>
        [JsonProperty(PropertyName = "properties.specification")]
        public CustomizationSpecification Specification { get; set; }

        /// <summary>
        /// Gets or sets the type of customization (Linux or Windows). Possible
        /// values include: 'LINUX', 'WINDOWS'
        /// </summary>
        [JsonProperty(PropertyName = "properties.type")]
        public string CustomizationPolicyPropertiesType { get; set; }

        /// <summary>
        /// Gets or sets policy version
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
