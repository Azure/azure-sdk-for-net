// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Resource provider available operation model
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AvailableOperation
    {
        /// <summary>
        /// Initializes a new instance of the AvailableOperation class.
        /// </summary>
        public AvailableOperation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailableOperation class.
        /// </summary>
        /// <param name="display">The list of operations</param>
        /// <param name="isDataAction">Indicating whether the operation is a
        /// data action or not</param>
        /// <param
        /// name="name">{resourceProviderNamespace}/{resourceType}/{read|write|delete|action}</param>
        /// <param name="origin">The origin of operation. Possible values
        /// include: 'user', 'system', 'user,system'</param>
        /// <param name="serviceSpecification">The list of specification's
        /// service metrics</param>
        public AvailableOperation(AvailableOperationDisplay display = default(AvailableOperationDisplay), bool? isDataAction = default(bool?), string name = default(string), OperationOrigin? origin = default(OperationOrigin?), AvailableOperationDisplayPropertyServiceSpecificationMetricsList serviceSpecification = default(AvailableOperationDisplayPropertyServiceSpecificationMetricsList))
        {
            Display = display;
            IsDataAction = isDataAction;
            Name = name;
            Origin = origin;
            ServiceSpecification = serviceSpecification;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of operations
        /// </summary>
        [JsonProperty(PropertyName = "display")]
        public AvailableOperationDisplay Display { get; set; }

        /// <summary>
        /// Gets or sets indicating whether the operation is a data action or
        /// not
        /// </summary>
        [JsonProperty(PropertyName = "isDataAction")]
        public bool? IsDataAction { get; set; }

        /// <summary>
        /// Gets or sets
        /// {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the origin of operation. Possible values include:
        /// 'user', 'system', 'user,system'
        /// </summary>
        [JsonProperty(PropertyName = "origin")]
        public OperationOrigin? Origin { get; set; }

        /// <summary>
        /// Gets or sets the list of specification's service metrics
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceSpecification")]
        public AvailableOperationDisplayPropertyServiceSpecificationMetricsList ServiceSpecification { get; set; }

    }
}
