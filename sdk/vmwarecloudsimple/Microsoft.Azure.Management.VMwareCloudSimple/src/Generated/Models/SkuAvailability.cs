// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SKU availability model
    /// </summary>
    public partial class SkuAvailability
    {
        /// <summary>
        /// Initializes a new instance of the SkuAvailability class.
        /// </summary>
        public SkuAvailability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkuAvailability class.
        /// </summary>
        /// <param name="limit">indicates how many resources of a given SKU is
        /// available in a AZ-&gt;PG</param>
        /// <param name="dedicatedAvailabilityZoneId">CloudSimple Availability
        /// Zone id</param>
        /// <param name="dedicatedAvailabilityZoneName">CloudSimple
        /// Availability Zone Name</param>
        /// <param name="dedicatedPlacementGroupId">CloudSimple Placement Group
        /// Id</param>
        /// <param name="dedicatedPlacementGroupName">CloudSimple Placement
        /// Group name</param>
        /// <param name="resourceType">resource type e.g.
        /// DedicatedCloudNodes</param>
        /// <param name="skuId">sku id</param>
        /// <param name="skuName">sku name</param>
        public SkuAvailability(int limit, string dedicatedAvailabilityZoneId = default(string), string dedicatedAvailabilityZoneName = default(string), string dedicatedPlacementGroupId = default(string), string dedicatedPlacementGroupName = default(string), string resourceType = default(string), string skuId = default(string), string skuName = default(string))
        {
            DedicatedAvailabilityZoneId = dedicatedAvailabilityZoneId;
            DedicatedAvailabilityZoneName = dedicatedAvailabilityZoneName;
            DedicatedPlacementGroupId = dedicatedPlacementGroupId;
            DedicatedPlacementGroupName = dedicatedPlacementGroupName;
            Limit = limit;
            ResourceType = resourceType;
            SkuId = skuId;
            SkuName = skuName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets cloudSimple Availability Zone id
        /// </summary>
        [JsonProperty(PropertyName = "dedicatedAvailabilityZoneId")]
        public string DedicatedAvailabilityZoneId { get; set; }

        /// <summary>
        /// Gets or sets cloudSimple Availability Zone Name
        /// </summary>
        [JsonProperty(PropertyName = "dedicatedAvailabilityZoneName")]
        public string DedicatedAvailabilityZoneName { get; set; }

        /// <summary>
        /// Gets or sets cloudSimple Placement Group Id
        /// </summary>
        [JsonProperty(PropertyName = "dedicatedPlacementGroupId")]
        public string DedicatedPlacementGroupId { get; set; }

        /// <summary>
        /// Gets or sets cloudSimple Placement Group name
        /// </summary>
        [JsonProperty(PropertyName = "dedicatedPlacementGroupName")]
        public string DedicatedPlacementGroupName { get; set; }

        /// <summary>
        /// Gets or sets indicates how many resources of a given SKU is
        /// available in a AZ-&amp;gt;PG
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public int Limit { get; set; }

        /// <summary>
        /// Gets or sets resource type e.g. DedicatedCloudNodes
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets sku id
        /// </summary>
        [JsonProperty(PropertyName = "skuId")]
        public string SkuId { get; set; }

        /// <summary>
        /// Gets or sets sku name
        /// </summary>
        [JsonProperty(PropertyName = "skuName")]
        public string SkuName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
