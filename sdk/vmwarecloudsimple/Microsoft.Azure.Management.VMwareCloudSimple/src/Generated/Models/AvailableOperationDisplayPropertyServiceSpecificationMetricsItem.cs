// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VMwareCloudSimple.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Available operation display property service specification metrics item
    /// </summary>
    public partial class AvailableOperationDisplayPropertyServiceSpecificationMetricsItem
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AvailableOperationDisplayPropertyServiceSpecificationMetricsItem
        /// class.
        /// </summary>
        public AvailableOperationDisplayPropertyServiceSpecificationMetricsItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AvailableOperationDisplayPropertyServiceSpecificationMetricsItem
        /// class.
        /// </summary>
        /// <param name="aggregationType">Metric's aggregation type for e.g.
        /// (Average, Total). Possible values include: 'Average',
        /// 'Total'</param>
        /// <param name="displayDescription">Metric's description</param>
        /// <param name="displayName">Human readable metric's name</param>
        /// <param name="name">Metric's name/id</param>
        /// <param name="unit">Metric's unit</param>
        public AvailableOperationDisplayPropertyServiceSpecificationMetricsItem(AggregationType aggregationType, string displayDescription, string displayName, string name, string unit)
        {
            AggregationType = aggregationType;
            DisplayDescription = displayDescription;
            DisplayName = displayName;
            Name = name;
            Unit = unit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets metric's aggregation type for e.g. (Average, Total).
        /// Possible values include: 'Average', 'Total'
        /// </summary>
        [JsonProperty(PropertyName = "aggregationType")]
        public AggregationType AggregationType { get; set; }

        /// <summary>
        /// Gets or sets metric's description
        /// </summary>
        [JsonProperty(PropertyName = "displayDescription")]
        public string DisplayDescription { get; set; }

        /// <summary>
        /// Gets or sets human readable metric's name
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets metric's name/id
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets metric's unit
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayDescription == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayDescription");
            }
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Unit == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Unit");
            }
        }
    }
}
