// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Fabric.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmFabricModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Fabric.FabricCapacityData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> The SKU details. </param>
        /// <param name="provisioningState"> The current deployment state of Microsoft Fabric resource. The provisioningState is to indicate states for resource provisioning. </param>
        /// <param name="state"> The current state of Microsoft Fabric resource. The state is to indicate more states outside of resource provisioning. </param>
        /// <param name="administrationMembers"> The capacity administration. </param>
        /// <returns> A new <see cref="Fabric.FabricCapacityData"/> instance for mocking. </returns>
        public static FabricCapacityData FabricCapacityData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, RpSku sku = null, FabricProvisioningState? provisioningState = null, FabricResourceState? state = null, IEnumerable<string> administrationMembers = null)
        {
            tags ??= new Dictionary<string, string>();
            administrationMembers ??= new List<string>();

            return new FabricCapacityData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                sku,
                provisioningState,
                state,
                administrationMembers != null ? new CapacityAdministration(administrationMembers?.ToList(), serializedAdditionalRawData: null) : null,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.FabricCheckNameAvailabilityResult"/>. </summary>
        /// <param name="nameAvailable"> Indicates if the resource name is available. </param>
        /// <param name="reason"> The reason why the given name is not available. </param>
        /// <param name="message"> Detailed reason why the given name is available. </param>
        /// <returns> A new <see cref="Models.FabricCheckNameAvailabilityResult"/> instance for mocking. </returns>
        public static FabricCheckNameAvailabilityResult FabricCheckNameAvailabilityResult(bool? nameAvailable = null, FabricNameUnavailableReason? reason = null, string message = null)
        {
            return new FabricCheckNameAvailabilityResult(nameAvailable, reason, message, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.RpSkuDetailsForNewCapacity"/>. </summary>
        /// <param name="resourceType"> The resource type. </param>
        /// <param name="name"> The SKU's name. </param>
        /// <param name="locations"> The list of available locations for the SKU. </param>
        /// <returns> A new <see cref="Models.RpSkuDetailsForNewCapacity"/> instance for mocking. </returns>
        public static RpSkuDetailsForNewCapacity RpSkuDetailsForNewCapacity(string resourceType = null, string name = null, IEnumerable<string> locations = null)
        {
            locations ??= new List<string>();

            return new RpSkuDetailsForNewCapacity(resourceType, name, locations?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.RpSkuDetailsForExistingCapacity"/>. </summary>
        /// <param name="resourceType"> The resource type. </param>
        /// <param name="sku"> The SKU details. </param>
        /// <returns> A new <see cref="Models.RpSkuDetailsForExistingCapacity"/> instance for mocking. </returns>
        public static RpSkuDetailsForExistingCapacity RpSkuDetailsForExistingCapacity(string resourceType = null, RpSku sku = null)
        {
            return new RpSkuDetailsForExistingCapacity(resourceType, sku, serializedAdditionalRawData: null);
        }
    }
}
