// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logz.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PlanData
    {
        /// <summary>
        /// Initializes a new instance of the PlanData class.
        /// </summary>
        public PlanData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlanData class.
        /// </summary>
        /// <param name="usageType">different usage type like PAYG/COMMITTED.
        /// this could be enum</param>
        /// <param name="billingCycle">different billing cycles like
        /// MONTHLY/WEEKLY. this could be enum</param>
        /// <param name="planDetails">plan id as published by Logz</param>
        /// <param name="effectiveDate">date when plan was applied</param>
        public PlanData(string usageType = default(string), string billingCycle = default(string), string planDetails = default(string), System.DateTime? effectiveDate = default(System.DateTime?))
        {
            UsageType = usageType;
            BillingCycle = billingCycle;
            PlanDetails = planDetails;
            EffectiveDate = effectiveDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets different usage type like PAYG/COMMITTED. this could
        /// be enum
        /// </summary>
        [JsonProperty(PropertyName = "usageType")]
        public string UsageType { get; set; }

        /// <summary>
        /// Gets or sets different billing cycles like MONTHLY/WEEKLY. this
        /// could be enum
        /// </summary>
        [JsonProperty(PropertyName = "billingCycle")]
        public string BillingCycle { get; set; }

        /// <summary>
        /// Gets or sets plan id as published by Logz
        /// </summary>
        [JsonProperty(PropertyName = "planDetails")]
        public string PlanDetails { get; set; }

        /// <summary>
        /// Gets or sets date when plan was applied
        /// </summary>
        [JsonProperty(PropertyName = "effectiveDate")]
        public System.DateTime? EffectiveDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UsageType != null)
            {
                if (UsageType.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "UsageType", 50);
                }
            }
            if (BillingCycle != null)
            {
                if (BillingCycle.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "BillingCycle", 50);
                }
            }
            if (PlanDetails != null)
            {
                if (PlanDetails.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "PlanDetails", 50);
                }
            }
        }
    }
}
