// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.NotificationHubs.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.NotificationHubs.Samples
{
    public partial class Sample_NamespaceAuthorizationRuleResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_NamespacesGetAuthorizationRule()
        {
            // Generated from example definition: 2023-10-01-preview/Namespaces/AuthorizationRuleGet.json
            // this example is just showing the usage of "SharedAccessAuthorizationRuleResource_GetAuthorizationRule" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceAuthorizationRuleResource created on azure
            // for more information of creating NamespaceAuthorizationRuleResource, please refer to the document of NamespaceAuthorizationRuleResource
            string subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
            string resourceGroupName = "5ktrial";
            string namespaceName = "nh-sdk-ns";
            string authorizationRuleName = "RootManageSharedAccessKey";
            ResourceIdentifier namespaceAuthorizationRuleResourceId = NamespaceAuthorizationRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, authorizationRuleName);
            NamespaceAuthorizationRuleResource namespaceAuthorizationRule = client.GetNamespaceAuthorizationRuleResource(namespaceAuthorizationRuleResourceId);

            // invoke the operation
            NamespaceAuthorizationRuleResource result = await namespaceAuthorizationRule.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NotificationHubAuthorizationRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_NamespacesDeleteAuthorizationRule()
        {
            // Generated from example definition: 2023-10-01-preview/Namespaces/AuthorizationRuleDelete.json
            // this example is just showing the usage of "SharedAccessAuthorizationRuleResource_DeleteAuthorizationRule" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceAuthorizationRuleResource created on azure
            // for more information of creating NamespaceAuthorizationRuleResource, please refer to the document of NamespaceAuthorizationRuleResource
            string subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
            string resourceGroupName = "5ktrial";
            string namespaceName = "nh-sdk-ns";
            string authorizationRuleName = "RootManageSharedAccessKey";
            ResourceIdentifier namespaceAuthorizationRuleResourceId = NamespaceAuthorizationRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, authorizationRuleName);
            NamespaceAuthorizationRuleResource namespaceAuthorizationRule = client.GetNamespaceAuthorizationRuleResource(namespaceAuthorizationRuleResourceId);

            // invoke the operation
            await namespaceAuthorizationRule.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_NamespacesCreateOrUpdateAuthorizationRule()
        {
            // Generated from example definition: 2023-10-01-preview/Namespaces/AuthorizationRuleCreateOrUpdate.json
            // this example is just showing the usage of "SharedAccessAuthorizationRuleResource_CreateOrUpdateAuthorizationRule" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceAuthorizationRuleResource created on azure
            // for more information of creating NamespaceAuthorizationRuleResource, please refer to the document of NamespaceAuthorizationRuleResource
            string subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
            string resourceGroupName = "5ktrial";
            string namespaceName = "nh-sdk-ns";
            string authorizationRuleName = "sdk-AuthRules-1788";
            ResourceIdentifier namespaceAuthorizationRuleResourceId = NamespaceAuthorizationRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, authorizationRuleName);
            NamespaceAuthorizationRuleResource namespaceAuthorizationRule = client.GetNamespaceAuthorizationRuleResource(namespaceAuthorizationRuleResourceId);

            // invoke the operation
            NotificationHubAuthorizationRuleData data = new NotificationHubAuthorizationRuleData(default);
            ArmOperation<NamespaceAuthorizationRuleResource> lro = await namespaceAuthorizationRule.UpdateAsync(WaitUntil.Completed, data);
            NamespaceAuthorizationRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NotificationHubAuthorizationRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetKeys_NamespacesListKeys()
        {
            // Generated from example definition: 2023-10-01-preview/Namespaces/AuthorizationRuleListKeys.json
            // this example is just showing the usage of "Namespaces_ListKeys" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceAuthorizationRuleResource created on azure
            // for more information of creating NamespaceAuthorizationRuleResource, please refer to the document of NamespaceAuthorizationRuleResource
            string subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
            string resourceGroupName = "5ktrial";
            string namespaceName = "nh-sdk-ns";
            string authorizationRuleName = "RootManageSharedAccessKey";
            ResourceIdentifier namespaceAuthorizationRuleResourceId = NamespaceAuthorizationRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, authorizationRuleName);
            NamespaceAuthorizationRuleResource namespaceAuthorizationRule = client.GetNamespaceAuthorizationRuleResource(namespaceAuthorizationRuleResourceId);

            // invoke the operation
            NotificationHubResourceKeys result = await namespaceAuthorizationRule.GetKeysAsync();

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RegenerateKeys_NamespacesRegenerateKeys()
        {
            // Generated from example definition: 2023-10-01-preview/Namespaces/AuthorizationRuleRegenerateKey.json
            // this example is just showing the usage of "Namespaces_RegenerateKeys" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NamespaceAuthorizationRuleResource created on azure
            // for more information of creating NamespaceAuthorizationRuleResource, please refer to the document of NamespaceAuthorizationRuleResource
            string subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
            string resourceGroupName = "5ktrial";
            string namespaceName = "nh-sdk-ns";
            string authorizationRuleName = "RootManageSharedAccessKey";
            ResourceIdentifier namespaceAuthorizationRuleResourceId = NamespaceAuthorizationRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, namespaceName, authorizationRuleName);
            NamespaceAuthorizationRuleResource namespaceAuthorizationRule = client.GetNamespaceAuthorizationRuleResource(namespaceAuthorizationRuleResourceId);

            // invoke the operation
            NotificationHubPolicyKey notificationHubPolicyKey = new NotificationHubPolicyKey(PolicyKeyType.PrimaryKey);
            NotificationHubResourceKeys result = await namespaceAuthorizationRule.RegenerateKeysAsync(notificationHubPolicyKey);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
