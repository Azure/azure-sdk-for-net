// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.NotificationHubs.Models
{
    /// <summary> A metric specification. </summary>
    public partial class MetricSpecification
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MetricSpecification"/>. </summary>
        internal MetricSpecification()
        {
            Availabilities = new ChangeTrackingList<Availability>();
            SupportedTimeGrainTypes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="MetricSpecification"/>. </summary>
        /// <param name="name"> Metric name / id. </param>
        /// <param name="displayName"> User-visible metric name. </param>
        /// <param name="displayDescription"> Description of the metric. </param>
        /// <param name="unit"> Metric unit. </param>
        /// <param name="aggregationType"> Type of the aggregation (Average, Minimum, Maximum, Total or Count). </param>
        /// <param name="availabilities"> List of availabilities. </param>
        /// <param name="supportedTimeGrainTypes"> List of supported time grain types. </param>
        /// <param name="metricFilterPattern"> The matching regex pattern to be applied to the field pointed by the "metricsFilterPathSelector" flag in the ARM manifest. </param>
        /// <param name="fillGapWithZero"> Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MetricSpecification(string name, string displayName, string displayDescription, string unit, string aggregationType, IReadOnlyList<Availability> availabilities, IReadOnlyList<string> supportedTimeGrainTypes, string metricFilterPattern, bool? fillGapWithZero, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            DisplayName = displayName;
            DisplayDescription = displayDescription;
            Unit = unit;
            AggregationType = aggregationType;
            Availabilities = availabilities;
            SupportedTimeGrainTypes = supportedTimeGrainTypes;
            MetricFilterPattern = metricFilterPattern;
            FillGapWithZero = fillGapWithZero;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Metric name / id. </summary>
        public string Name { get; }
        /// <summary> User-visible metric name. </summary>
        public string DisplayName { get; }
        /// <summary> Description of the metric. </summary>
        public string DisplayDescription { get; }
        /// <summary> Metric unit. </summary>
        public string Unit { get; }
        /// <summary> Type of the aggregation (Average, Minimum, Maximum, Total or Count). </summary>
        public string AggregationType { get; }
        /// <summary> List of availabilities. </summary>
        public IReadOnlyList<Availability> Availabilities { get; }
        /// <summary> List of supported time grain types. </summary>
        public IReadOnlyList<string> SupportedTimeGrainTypes { get; }
        /// <summary> The matching regex pattern to be applied to the field pointed by the "metricsFilterPathSelector" flag in the ARM manifest. </summary>
        public string MetricFilterPattern { get; }
        /// <summary> Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published. </summary>
        public bool? FillGapWithZero { get; }
    }
}
