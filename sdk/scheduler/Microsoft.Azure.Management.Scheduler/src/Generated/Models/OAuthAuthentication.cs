// <auto-generated>
//
// </auto-generated>

namespace Microsoft.Azure.Management.Scheduler.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("ActiveDirectoryOAuth")]
    public partial class OAuthAuthentication : HttpAuthentication
    {
        /// <summary>
        /// Initializes a new instance of the OAuthAuthentication class.
        /// </summary>
        public OAuthAuthentication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OAuthAuthentication class.
        /// </summary>
        /// <param name="secret">Gets or sets the secret, return value will
        /// always be empty.</param>
        /// <param name="tenant">Gets or sets the tenant.</param>
        /// <param name="audience">Gets or sets the audience.</param>
        /// <param name="clientId">Gets or sets the client identifier.</param>
        public OAuthAuthentication(string secret = default(string), string tenant = default(string), string audience = default(string), string clientId = default(string))
        {
            Secret = secret;
            Tenant = tenant;
            Audience = audience;
            ClientId = clientId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the secret, return value will always be empty.
        /// </summary>
        [JsonProperty(PropertyName = "secret")]
        public string Secret { get; set; }

        /// <summary>
        /// Gets or sets the tenant.
        /// </summary>
        [JsonProperty(PropertyName = "tenant")]
        public string Tenant { get; set; }

        /// <summary>
        /// Gets or sets the audience.
        /// </summary>
        [JsonProperty(PropertyName = "audience")]
        public string Audience { get; set; }

        /// <summary>
        /// Gets or sets the client identifier.
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

    }
}
