// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.NetworkCloud;
using Azure.ResourceManager.NetworkCloud.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.NetworkCloud.Samples
{
    public partial class Sample_StorageApplianceResource
    {
        // List storage appliances for subscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetStorageAppliances_ListStorageAppliancesForSubscription()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_ListBySubscription.json
            // this example is just showing the usage of "StorageAppliances_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "subscriptionId";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (StorageApplianceResource item in subscriptionResource.GetStorageAppliancesAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageApplianceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Get storage appliance
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetStorageAppliance()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_Get.json
            // this example is just showing the usage of "StorageAppliances_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageApplianceResource created on azure
            // for more information of creating StorageApplianceResource, please refer to the document of StorageApplianceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string storageApplianceName = "storageApplianceName";
            ResourceIdentifier storageApplianceResourceId = StorageApplianceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageApplianceName);
            StorageApplianceResource storageAppliance = client.GetStorageApplianceResource(storageApplianceResourceId);

            // invoke the operation
            StorageApplianceResource result = await storageAppliance.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageApplianceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Patch storage appliance
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PatchStorageAppliance()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_Patch.json
            // this example is just showing the usage of "StorageAppliances_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageApplianceResource created on azure
            // for more information of creating StorageApplianceResource, please refer to the document of StorageApplianceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string storageApplianceName = "storageApplianceName";
            ResourceIdentifier storageApplianceResourceId = StorageApplianceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageApplianceName);
            StorageApplianceResource storageAppliance = client.GetStorageApplianceResource(storageApplianceResourceId);

            // invoke the operation
            StorageAppliancePatch patch = new StorageAppliancePatch()
            {
                Tags =
{
["key1"] = "myvalue1",
["key2"] = "myvalue2",
},
                SerialNumber = "BM1219XXX",
            };
            ArmOperation<StorageApplianceResource> lro = await storageAppliance.UpdateAsync(WaitUntil.Completed, patch);
            StorageApplianceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageApplianceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Turn off remote vendor management for storage appliance
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task DisableRemoteVendorManagement_TurnOffRemoteVendorManagementForStorageAppliance()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_DisableRemoteVendorManagement.json
            // this example is just showing the usage of "StorageAppliances_DisableRemoteVendorManagement" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageApplianceResource created on azure
            // for more information of creating StorageApplianceResource, please refer to the document of StorageApplianceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string storageApplianceName = "storageApplianceName";
            ResourceIdentifier storageApplianceResourceId = StorageApplianceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageApplianceName);
            StorageApplianceResource storageAppliance = client.GetStorageApplianceResource(storageApplianceResourceId);

            // invoke the operation
            await storageAppliance.DisableRemoteVendorManagementAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Turn on remote vendor management for storage appliance
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task EnableRemoteVendorManagement_TurnOnRemoteVendorManagementForStorageAppliance()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_EnableRemoteVendorManagement.json
            // this example is just showing the usage of "StorageAppliances_EnableRemoteVendorManagement" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageApplianceResource created on azure
            // for more information of creating StorageApplianceResource, please refer to the document of StorageApplianceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string storageApplianceName = "storageApplianceName";
            ResourceIdentifier storageApplianceResourceId = StorageApplianceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageApplianceName);
            StorageApplianceResource storageAppliance = client.GetStorageApplianceResource(storageApplianceResourceId);

            // invoke the operation
            StorageApplianceEnableRemoteVendorManagementContent content = new StorageApplianceEnableRemoteVendorManagementContent()
            {
                SupportEndpoints =
{
"10.0.0.0/24"
},
            };
            await storageAppliance.EnableRemoteVendorManagementAsync(WaitUntil.Completed, content: content);

            Console.WriteLine($"Succeeded");
        }

        // Run and retrieve output from read only commands on storage appliance.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task RunReadCommands_RunAndRetrieveOutputFromReadOnlyCommandsOnStorageAppliance()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_RunReadCommands.json
            // this example is just showing the usage of "StorageAppliances_RunReadCommands" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageApplianceResource created on azure
            // for more information of creating StorageApplianceResource, please refer to the document of StorageApplianceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string storageApplianceName = "storageApplianceName";
            ResourceIdentifier storageApplianceResourceId = StorageApplianceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageApplianceName);
            StorageApplianceResource storageAppliance = client.GetStorageApplianceResource(storageApplianceResourceId);

            // invoke the operation
            StorageApplianceRunReadCommandsContent content = new StorageApplianceRunReadCommandsContent(new StorageApplianceCommandSpecification[]
            {
new StorageApplianceCommandSpecification("AlertList")
            }, 60);
            await storageAppliance.RunReadCommandsAsync(WaitUntil.Completed, content);

            Console.WriteLine($"Succeeded");
        }

        // Validate the storage appliance hardware
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ValidateHardware_ValidateTheStorageApplianceHardware()
        {
            // Generated from example definition: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/StorageAppliances_ValidateHardware.json
            // this example is just showing the usage of "StorageAppliances_ValidateHardware" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageApplianceResource created on azure
            // for more information of creating StorageApplianceResource, please refer to the document of StorageApplianceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string storageApplianceName = "storageApplianceName";
            ResourceIdentifier storageApplianceResourceId = StorageApplianceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageApplianceName);
            StorageApplianceResource storageAppliance = client.GetStorageApplianceResource(storageApplianceResourceId);

            // invoke the operation
            StorageApplianceValidateHardwareContent content = new StorageApplianceValidateHardwareContent(StorageApplianceHardwareValidationCategory.BasicValidation);
            await storageAppliance.ValidateHardwareAsync(WaitUntil.Completed, content);

            Console.WriteLine($"Succeeded");
        }
    }
}
