// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> The safeguard mode to use for the replace action, where None indicates to bypass safeguards and All indicates to utilize all safeguards. </summary>
    public readonly partial struct BareMetalMachineReplaceSafeguardMode : IEquatable<BareMetalMachineReplaceSafeguardMode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="BareMetalMachineReplaceSafeguardMode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public BareMetalMachineReplaceSafeguardMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AllValue = "All";
        private const string NoneValue = "None";

        /// <summary> All. </summary>
        public static BareMetalMachineReplaceSafeguardMode All { get; } = new BareMetalMachineReplaceSafeguardMode(AllValue);
        /// <summary> None. </summary>
        public static BareMetalMachineReplaceSafeguardMode None { get; } = new BareMetalMachineReplaceSafeguardMode(NoneValue);
        /// <summary> Determines if two <see cref="BareMetalMachineReplaceSafeguardMode"/> values are the same. </summary>
        public static bool operator ==(BareMetalMachineReplaceSafeguardMode left, BareMetalMachineReplaceSafeguardMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="BareMetalMachineReplaceSafeguardMode"/> values are not the same. </summary>
        public static bool operator !=(BareMetalMachineReplaceSafeguardMode left, BareMetalMachineReplaceSafeguardMode right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="BareMetalMachineReplaceSafeguardMode"/>. </summary>
        public static implicit operator BareMetalMachineReplaceSafeguardMode(string value) => new BareMetalMachineReplaceSafeguardMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is BareMetalMachineReplaceSafeguardMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(BareMetalMachineReplaceSafeguardMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
