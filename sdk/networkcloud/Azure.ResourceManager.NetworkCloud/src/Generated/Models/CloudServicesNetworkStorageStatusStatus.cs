// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> The status of the storage allocation for the cloud services network. </summary>
    public readonly partial struct CloudServicesNetworkStorageStatusStatus : IEquatable<CloudServicesNetworkStorageStatusStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CloudServicesNetworkStorageStatusStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CloudServicesNetworkStorageStatusStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AvailableValue = "Available";
        private const string ExpandingVolumeValue = "ExpandingVolume";
        private const string ExpansionFailedValue = "ExpansionFailed";

        /// <summary> Available. </summary>
        public static CloudServicesNetworkStorageStatusStatus Available { get; } = new CloudServicesNetworkStorageStatusStatus(AvailableValue);
        /// <summary> ExpandingVolume. </summary>
        public static CloudServicesNetworkStorageStatusStatus ExpandingVolume { get; } = new CloudServicesNetworkStorageStatusStatus(ExpandingVolumeValue);
        /// <summary> ExpansionFailed. </summary>
        public static CloudServicesNetworkStorageStatusStatus ExpansionFailed { get; } = new CloudServicesNetworkStorageStatusStatus(ExpansionFailedValue);
        /// <summary> Determines if two <see cref="CloudServicesNetworkStorageStatusStatus"/> values are the same. </summary>
        public static bool operator ==(CloudServicesNetworkStorageStatusStatus left, CloudServicesNetworkStorageStatusStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CloudServicesNetworkStorageStatusStatus"/> values are not the same. </summary>
        public static bool operator !=(CloudServicesNetworkStorageStatusStatus left, CloudServicesNetworkStorageStatusStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="CloudServicesNetworkStorageStatusStatus"/>. </summary>
        public static implicit operator CloudServicesNetworkStorageStatusStatus(string value) => new CloudServicesNetworkStorageStatusStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CloudServicesNetworkStorageStatusStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CloudServicesNetworkStorageStatusStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
