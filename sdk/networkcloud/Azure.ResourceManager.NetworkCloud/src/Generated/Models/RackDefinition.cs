// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> RackDefinition represents details regarding the rack. </summary>
    public partial class RackDefinition
    {
        /// <summary> Initializes a new instance of RackDefinition. </summary>
        /// <param name="networkRackId"> The resource ID of the network rack that matches this rack definition. </param>
        /// <param name="rackSerialNumber"> The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired. </param>
        /// <param name="rackSkuId"> The resource ID of the sku for the rack being added. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkRackId"/>, <paramref name="rackSerialNumber"/> or <paramref name="rackSkuId"/> is null. </exception>
        public RackDefinition(string networkRackId, string rackSerialNumber, string rackSkuId)
        {
            Argument.AssertNotNull(networkRackId, nameof(networkRackId));
            Argument.AssertNotNull(rackSerialNumber, nameof(rackSerialNumber));
            Argument.AssertNotNull(rackSkuId, nameof(rackSkuId));

            BareMetalMachineConfigurationData = new ChangeTrackingList<BareMetalMachineConfigurationData>();
            NetworkRackId = networkRackId;
            RackSerialNumber = rackSerialNumber;
            RackSkuId = rackSkuId;
            StorageApplianceConfigurationData = new ChangeTrackingList<StorageApplianceConfigurationData>();
        }

        /// <summary> Initializes a new instance of RackDefinition. </summary>
        /// <param name="availabilityZone"> The zone name used for this rack when created. </param>
        /// <param name="bareMetalMachineConfigurationData"> The unordered list of bare metal machine configuration. </param>
        /// <param name="networkRackId"> The resource ID of the network rack that matches this rack definition. </param>
        /// <param name="rackLocation"> The free-form description of the rack&apos;s location. </param>
        /// <param name="rackSerialNumber"> The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired. </param>
        /// <param name="rackSkuId"> The resource ID of the sku for the rack being added. </param>
        /// <param name="storageApplianceConfigurationData"> The list of storage appliance configuration data for this rack. </param>
        internal RackDefinition(string availabilityZone, IList<BareMetalMachineConfigurationData> bareMetalMachineConfigurationData, string networkRackId, string rackLocation, string rackSerialNumber, string rackSkuId, IList<StorageApplianceConfigurationData> storageApplianceConfigurationData)
        {
            AvailabilityZone = availabilityZone;
            BareMetalMachineConfigurationData = bareMetalMachineConfigurationData;
            NetworkRackId = networkRackId;
            RackLocation = rackLocation;
            RackSerialNumber = rackSerialNumber;
            RackSkuId = rackSkuId;
            StorageApplianceConfigurationData = storageApplianceConfigurationData;
        }

        /// <summary> The zone name used for this rack when created. </summary>
        public string AvailabilityZone { get; set; }
        /// <summary> The unordered list of bare metal machine configuration. </summary>
        public IList<BareMetalMachineConfigurationData> BareMetalMachineConfigurationData { get; }
        /// <summary> The resource ID of the network rack that matches this rack definition. </summary>
        public string NetworkRackId { get; set; }
        /// <summary> The free-form description of the rack&apos;s location. </summary>
        public string RackLocation { get; set; }
        /// <summary> The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired. </summary>
        public string RackSerialNumber { get; set; }
        /// <summary> The resource ID of the sku for the rack being added. </summary>
        public string RackSkuId { get; set; }
        /// <summary> The list of storage appliance configuration data for this rack. </summary>
        public IList<StorageApplianceConfigurationData> StorageApplianceConfigurationData { get; }
    }
}
