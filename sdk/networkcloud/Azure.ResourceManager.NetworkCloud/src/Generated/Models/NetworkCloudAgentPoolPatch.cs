// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> AgentPoolPatchParameters represents the body of the request to patch the Kubernetes cluster agent pool. </summary>
    public partial class NetworkCloudAgentPoolPatch
    {
        /// <summary> Initializes a new instance of <see cref="NetworkCloudAgentPoolPatch"/>. </summary>
        public NetworkCloudAgentPoolPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="NetworkCloudAgentPoolPatch"/>. </summary>
        /// <param name="tags"> The Azure resource tags that will replace the existing ones. </param>
        /// <param name="count"> The number of virtual machines that use this configuration. </param>
        /// <param name="upgradeSettings"> The configuration of the agent pool. </param>
        internal NetworkCloudAgentPoolPatch(IDictionary<string, string> tags, long? count, AgentPoolUpgradeSettings upgradeSettings)
        {
            Tags = tags;
            Count = count;
            UpgradeSettings = upgradeSettings;
        }

        /// <summary> The Azure resource tags that will replace the existing ones. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The number of virtual machines that use this configuration. </summary>
        public long? Count { get; set; }
        /// <summary> The configuration of the agent pool. </summary>
        internal AgentPoolUpgradeSettings UpgradeSettings { get; set; }
        /// <summary> The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. </summary>
        public string UpgradeMaxSurge
        {
            get => UpgradeSettings is null ? default : UpgradeSettings.MaxSurge;
            set
            {
                if (UpgradeSettings is null)
                    UpgradeSettings = new AgentPoolUpgradeSettings();
                UpgradeSettings.MaxSurge = value;
            }
        }
    }
}
