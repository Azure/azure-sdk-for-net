// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> CloudServicesNetworkStorageStatus represents the storage status of the cloud services network. </summary>
    public partial class CloudServicesNetworkStorageStatus
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CloudServicesNetworkStorageStatus"/>. </summary>
        internal CloudServicesNetworkStorageStatus()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CloudServicesNetworkStorageStatus"/>. </summary>
        /// <param name="mode"> The indicator of if shared storage is enabled on the cloud services network. </param>
        /// <param name="sizeMiB"> The size in Mebibytes of the storage allocation. </param>
        /// <param name="status"> The status of the storage allocation for the cloud services network. </param>
        /// <param name="statusMessage"> The description for the status of the shared storage. </param>
        /// <param name="volumeId"> The resource ID of the volume created to host the shared storage. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CloudServicesNetworkStorageStatus(CloudServicesNetworkStorageMode? mode, long? sizeMiB, CloudServicesNetworkStorageStatusStatus? status, string statusMessage, ResourceIdentifier volumeId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Mode = mode;
            SizeMiB = sizeMiB;
            Status = status;
            StatusMessage = statusMessage;
            VolumeId = volumeId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The indicator of if shared storage is enabled on the cloud services network. </summary>
        public CloudServicesNetworkStorageMode? Mode { get; }
        /// <summary> The size in Mebibytes of the storage allocation. </summary>
        public long? SizeMiB { get; }
        /// <summary> The status of the storage allocation for the cloud services network. </summary>
        public CloudServicesNetworkStorageStatusStatus? Status { get; }
        /// <summary> The description for the status of the shared storage. </summary>
        public string StatusMessage { get; }
        /// <summary> The resource ID of the volume created to host the shared storage. </summary>
        public ResourceIdentifier VolumeId { get; }
    }
}
