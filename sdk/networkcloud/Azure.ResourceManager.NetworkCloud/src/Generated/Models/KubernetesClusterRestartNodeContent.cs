// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> KubernetesClusterRestartNodeParameters represents the body of the request to restart the node of a Kubernetes cluster. </summary>
    public partial class KubernetesClusterRestartNodeContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="KubernetesClusterRestartNodeContent"/>. </summary>
        /// <param name="nodeName"> The name of the node to restart. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="nodeName"/> is null. </exception>
        public KubernetesClusterRestartNodeContent(string nodeName)
        {
            Argument.AssertNotNull(nodeName, nameof(nodeName));

            NodeName = nodeName;
        }

        /// <summary> Initializes a new instance of <see cref="KubernetesClusterRestartNodeContent"/>. </summary>
        /// <param name="nodeName"> The name of the node to restart. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal KubernetesClusterRestartNodeContent(string nodeName, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            NodeName = nodeName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="KubernetesClusterRestartNodeContent"/> for deserialization. </summary>
        internal KubernetesClusterRestartNodeContent()
        {
        }

        /// <summary> The name of the node to restart. </summary>
        public string NodeName { get; }
    }
}
