// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> ClusterUpdateStrategy represents the strategy for updating the cluster. </summary>
    public partial class ClusterUpdateStrategy
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ClusterUpdateStrategy"/>. </summary>
        /// <param name="strategyType"> The mode of operation for runtime protection. </param>
        /// <param name="thresholdType"> Selection of how the threshold should be evaluated. </param>
        /// <param name="thresholdValue"> The numeric threshold value. </param>
        public ClusterUpdateStrategy(ClusterUpdateStrategyType strategyType, ValidationThresholdType thresholdType, long thresholdValue)
        {
            StrategyType = strategyType;
            ThresholdType = thresholdType;
            ThresholdValue = thresholdValue;
        }

        /// <summary> Initializes a new instance of <see cref="ClusterUpdateStrategy"/>. </summary>
        /// <param name="maxUnavailable">
        /// The maximum number of worker nodes that can be offline within the increment of update, e.g., rack-by-rack.
        /// Limited by the maximum number of machines in the increment. Defaults to the whole increment size.
        /// </param>
        /// <param name="strategyType"> The mode of operation for runtime protection. </param>
        /// <param name="thresholdType"> Selection of how the threshold should be evaluated. </param>
        /// <param name="thresholdValue"> The numeric threshold value. </param>
        /// <param name="waitTimeMinutes"> The time to wait between the increments of update defined by the strategy. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ClusterUpdateStrategy(long? maxUnavailable, ClusterUpdateStrategyType strategyType, ValidationThresholdType thresholdType, long thresholdValue, long? waitTimeMinutes, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MaxUnavailable = maxUnavailable;
            StrategyType = strategyType;
            ThresholdType = thresholdType;
            ThresholdValue = thresholdValue;
            WaitTimeMinutes = waitTimeMinutes;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ClusterUpdateStrategy"/> for deserialization. </summary>
        internal ClusterUpdateStrategy()
        {
        }

        /// <summary>
        /// The maximum number of worker nodes that can be offline within the increment of update, e.g., rack-by-rack.
        /// Limited by the maximum number of machines in the increment. Defaults to the whole increment size.
        /// </summary>
        public long? MaxUnavailable { get; set; }
        /// <summary> The mode of operation for runtime protection. </summary>
        public ClusterUpdateStrategyType StrategyType { get; set; }
        /// <summary> Selection of how the threshold should be evaluated. </summary>
        public ValidationThresholdType ThresholdType { get; set; }
        /// <summary> The numeric threshold value. </summary>
        public long ThresholdValue { get; set; }
        /// <summary> The time to wait between the increments of update defined by the strategy. </summary>
        public long? WaitTimeMinutes { get; set; }
    }
}
