// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    public partial class NetworkAttachment : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("attachedNetworkId"u8);
            writer.WriteStringValue(AttachedNetworkId);
            if (Optional.IsDefined(DefaultGateway))
            {
                writer.WritePropertyName("defaultGateway"u8);
                writer.WriteStringValue(DefaultGateway.Value.ToString());
            }
            writer.WritePropertyName("ipAllocationMethod"u8);
            writer.WriteStringValue(IPAllocationMethod.ToString());
            if (Optional.IsDefined(IPv4Address))
            {
                writer.WritePropertyName("ipv4Address"u8);
                writer.WriteStringValue(IPv4Address);
            }
            if (Optional.IsDefined(IPv6Address))
            {
                writer.WritePropertyName("ipv6Address"u8);
                writer.WriteStringValue(IPv6Address);
            }
            if (Optional.IsDefined(NetworkAttachmentName))
            {
                writer.WritePropertyName("networkAttachmentName"u8);
                writer.WriteStringValue(NetworkAttachmentName);
            }
            writer.WriteEndObject();
        }

        internal static NetworkAttachment DeserializeNetworkAttachment(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string attachedNetworkId = default;
            Optional<DefaultGateway> defaultGateway = default;
            VirtualMachineIPAllocationMethod ipAllocationMethod = default;
            Optional<string> ipv4Address = default;
            Optional<string> ipv6Address = default;
            Optional<string> macAddress = default;
            Optional<string> networkAttachmentName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("attachedNetworkId"u8))
                {
                    attachedNetworkId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("defaultGateway"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultGateway = new DefaultGateway(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ipAllocationMethod"u8))
                {
                    ipAllocationMethod = new VirtualMachineIPAllocationMethod(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ipv4Address"u8))
                {
                    ipv4Address = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ipv6Address"u8))
                {
                    ipv6Address = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("macAddress"u8))
                {
                    macAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("networkAttachmentName"u8))
                {
                    networkAttachmentName = property.Value.GetString();
                    continue;
                }
            }
            return new NetworkAttachment(attachedNetworkId, Optional.ToNullable(defaultGateway), ipAllocationMethod, ipv4Address.Value, ipv6Address.Value, macAddress.Value, networkAttachmentName.Value);
        }
    }
}
