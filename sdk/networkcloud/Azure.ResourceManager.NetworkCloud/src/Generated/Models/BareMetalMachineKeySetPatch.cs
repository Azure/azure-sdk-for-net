// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> BareMetalMachineKeySetPatchParameters represents the body of the request to patch the bare metal machine key set. </summary>
    public partial class BareMetalMachineKeySetPatch
    {
        /// <summary> Initializes a new instance of BareMetalMachineKeySetPatch. </summary>
        public BareMetalMachineKeySetPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
            JumpHostsAllowed = new ChangeTrackingList<string>();
            UserList = new ChangeTrackingList<KeySetUser>();
        }

        /// <summary> Initializes a new instance of BareMetalMachineKeySetPatch. </summary>
        /// <param name="tags"> The Azure resource tags that will replace the existing ones. </param>
        /// <param name="expiration"> The date and time after which the users in this key set will be removed from the bare metal machines. </param>
        /// <param name="jumpHostsAllowed"> The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users. </param>
        /// <param name="userList"> The unique list of permitted users. </param>
        internal BareMetalMachineKeySetPatch(IDictionary<string, string> tags, DateTimeOffset? expiration, IList<string> jumpHostsAllowed, IList<KeySetUser> userList)
        {
            Tags = tags;
            Expiration = expiration;
            JumpHostsAllowed = jumpHostsAllowed;
            UserList = userList;
        }

        /// <summary> The Azure resource tags that will replace the existing ones. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The date and time after which the users in this key set will be removed from the bare metal machines. </summary>
        public DateTimeOffset? Expiration { get; set; }
        /// <summary> The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users. </summary>
        public IList<string> JumpHostsAllowed { get; }
        /// <summary> The unique list of permitted users. </summary>
        public IList<KeySetUser> UserList { get; }
    }
}
