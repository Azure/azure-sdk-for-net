// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> Node denotes the list of node that utilizes configuration. </summary>
    public partial class Node
    {
        /// <summary> Initializes a new instance of Node. </summary>
        internal Node()
        {
            NetworkAttachments = new ChangeTrackingList<NetworkAttachment>();
        }

        /// <summary> Initializes a new instance of Node. </summary>
        /// <param name="bareMetalMachineId"> The resource ID of the bare metal machine that hosts this node. </param>
        /// <param name="imageId"> The machine image last used to deploy this node. </param>
        /// <param name="networkAttachments"> The list of network attachments to the virtual machine. </param>
        /// <param name="nodeName"> The name of this node, as realized in the Hybrid AKS cluster. </param>
        /// <param name="powerState"> The power state (On | Off) of the node. </param>
        internal Node(string bareMetalMachineId, string imageId, IReadOnlyList<NetworkAttachment> networkAttachments, string nodeName, HybridAksClusterMachinePowerState? powerState)
        {
            BareMetalMachineId = bareMetalMachineId;
            ImageId = imageId;
            NetworkAttachments = networkAttachments;
            NodeName = nodeName;
            PowerState = powerState;
        }

        /// <summary> The resource ID of the bare metal machine that hosts this node. </summary>
        public string BareMetalMachineId { get; }
        /// <summary> The machine image last used to deploy this node. </summary>
        public string ImageId { get; }
        /// <summary> The list of network attachments to the virtual machine. </summary>
        public IReadOnlyList<NetworkAttachment> NetworkAttachments { get; }
        /// <summary> The name of this node, as realized in the Hybrid AKS cluster. </summary>
        public string NodeName { get; }
        /// <summary> The power state (On | Off) of the node. </summary>
        public HybridAksClusterMachinePowerState? PowerState { get; }
    }
}
