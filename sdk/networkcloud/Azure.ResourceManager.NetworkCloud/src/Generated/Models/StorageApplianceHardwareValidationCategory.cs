// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.NetworkCloud.Models
{
    /// <summary> The category of hardware validation to perform. </summary>
    public readonly partial struct StorageApplianceHardwareValidationCategory : IEquatable<StorageApplianceHardwareValidationCategory>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="StorageApplianceHardwareValidationCategory"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public StorageApplianceHardwareValidationCategory(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string BasicValidationValue = "BasicValidation";

        /// <summary> BasicValidation. </summary>
        public static StorageApplianceHardwareValidationCategory BasicValidation { get; } = new StorageApplianceHardwareValidationCategory(BasicValidationValue);
        /// <summary> Determines if two <see cref="StorageApplianceHardwareValidationCategory"/> values are the same. </summary>
        public static bool operator ==(StorageApplianceHardwareValidationCategory left, StorageApplianceHardwareValidationCategory right) => left.Equals(right);
        /// <summary> Determines if two <see cref="StorageApplianceHardwareValidationCategory"/> values are not the same. </summary>
        public static bool operator !=(StorageApplianceHardwareValidationCategory left, StorageApplianceHardwareValidationCategory right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="StorageApplianceHardwareValidationCategory"/>. </summary>
        public static implicit operator StorageApplianceHardwareValidationCategory(string value) => new StorageApplianceHardwareValidationCategory(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is StorageApplianceHardwareValidationCategory other && Equals(other);
        /// <inheritdoc />
        public bool Equals(StorageApplianceHardwareValidationCategory other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
