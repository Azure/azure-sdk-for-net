// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.NetworkCloud.Models;

namespace Azure.ResourceManager.NetworkCloud
{
    /// <summary>
    /// A class representing the HybridAksCluster data model.
    /// The details are specific to the Network Cloud use of the Hybrid AKS cluster.
    /// </summary>
    public partial class HybridAksClusterData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of HybridAksClusterData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="extendedLocation"> The extended location of the cluster associated with the resource. </param>
        /// <param name="associatedNetworkIds"> The list of resource IDs for the workload networks associated with the Hybrid AKS cluster. It can be any of l2Networks, l3Networks, or trunkedNetworks resources. This field will also contain one cloudServicesNetwork and one defaultCniNetwork. </param>
        /// <param name="controlPlaneCount"> The number of control plane node VMs. </param>
        /// <param name="hybridAksProvisionedClusterId"> The resource ID of the Hybrid AKS cluster that this additional information is for. </param>
        /// <param name="workerCount"> The number of worker node VMs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="extendedLocation"/>, <paramref name="associatedNetworkIds"/> or <paramref name="hybridAksProvisionedClusterId"/> is null. </exception>
        public HybridAksClusterData(AzureLocation location, ExtendedLocation extendedLocation, IEnumerable<string> associatedNetworkIds, long controlPlaneCount, string hybridAksProvisionedClusterId, long workerCount) : base(location)
        {
            Argument.AssertNotNull(extendedLocation, nameof(extendedLocation));
            Argument.AssertNotNull(associatedNetworkIds, nameof(associatedNetworkIds));
            Argument.AssertNotNull(hybridAksProvisionedClusterId, nameof(hybridAksProvisionedClusterId));

            ExtendedLocation = extendedLocation;
            AssociatedNetworkIds = associatedNetworkIds.ToList();
            ControlPlaneCount = controlPlaneCount;
            ControlPlaneNodes = new ChangeTrackingList<NodeConfiguration>();
            HybridAksProvisionedClusterId = hybridAksProvisionedClusterId;
            Volumes = new ChangeTrackingList<string>();
            WorkerCount = workerCount;
            WorkerNodes = new ChangeTrackingList<NodeConfiguration>();
        }

        /// <summary> Initializes a new instance of HybridAksClusterData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="extendedLocation"> The extended location of the cluster associated with the resource. </param>
        /// <param name="associatedNetworkIds"> The list of resource IDs for the workload networks associated with the Hybrid AKS cluster. It can be any of l2Networks, l3Networks, or trunkedNetworks resources. This field will also contain one cloudServicesNetwork and one defaultCniNetwork. </param>
        /// <param name="cloudServicesNetworkId"> The resource ID of the associated cloud services network. </param>
        /// <param name="clusterId"> The resource ID of the Network Cloud cluster hosting the Hybrid AKS cluster. </param>
        /// <param name="controlPlaneCount"> The number of control plane node VMs. </param>
        /// <param name="controlPlaneNodes"> The list of node configurations detailing associated VMs that are part of the control plane nodes of this Hybrid AKS cluster. </param>
        /// <param name="defaultCniNetworkId"> The resource ID of the associated default CNI network. </param>
        /// <param name="detailedStatus"> The more detailed status of this Hybrid AKS cluster. </param>
        /// <param name="detailedStatusMessage"> The descriptive message about the current detailed status. </param>
        /// <param name="hybridAksProvisionedClusterId"> The resource ID of the Hybrid AKS cluster that this additional information is for. </param>
        /// <param name="provisioningState"> The provisioning state of the Hybrid AKS cluster resource. </param>
        /// <param name="volumes"> The resource IDs of volumes that are attached to the Hybrid AKS cluster. </param>
        /// <param name="workerCount"> The number of worker node VMs. </param>
        /// <param name="workerNodes"> The list of node configurations detailing associated VMs that are part of the worker nodes of this Hybrid AKS cluster. </param>
        internal HybridAksClusterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ExtendedLocation extendedLocation, IList<string> associatedNetworkIds, string cloudServicesNetworkId, string clusterId, long controlPlaneCount, IReadOnlyList<NodeConfiguration> controlPlaneNodes, string defaultCniNetworkId, HybridAksClusterDetailedStatus? detailedStatus, string detailedStatusMessage, string hybridAksProvisionedClusterId, HybridAksClusterProvisioningState? provisioningState, IReadOnlyList<string> volumes, long workerCount, IReadOnlyList<NodeConfiguration> workerNodes) : base(id, name, resourceType, systemData, tags, location)
        {
            ExtendedLocation = extendedLocation;
            AssociatedNetworkIds = associatedNetworkIds;
            CloudServicesNetworkId = cloudServicesNetworkId;
            ClusterId = clusterId;
            ControlPlaneCount = controlPlaneCount;
            ControlPlaneNodes = controlPlaneNodes;
            DefaultCniNetworkId = defaultCniNetworkId;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            HybridAksProvisionedClusterId = hybridAksProvisionedClusterId;
            ProvisioningState = provisioningState;
            Volumes = volumes;
            WorkerCount = workerCount;
            WorkerNodes = workerNodes;
        }

        /// <summary> The extended location of the cluster associated with the resource. </summary>
        public ExtendedLocation ExtendedLocation { get; set; }
        /// <summary> The list of resource IDs for the workload networks associated with the Hybrid AKS cluster. It can be any of l2Networks, l3Networks, or trunkedNetworks resources. This field will also contain one cloudServicesNetwork and one defaultCniNetwork. </summary>
        public IList<string> AssociatedNetworkIds { get; }
        /// <summary> The resource ID of the associated cloud services network. </summary>
        public string CloudServicesNetworkId { get; }
        /// <summary> The resource ID of the Network Cloud cluster hosting the Hybrid AKS cluster. </summary>
        public string ClusterId { get; }
        /// <summary> The number of control plane node VMs. </summary>
        public long ControlPlaneCount { get; set; }
        /// <summary> The list of node configurations detailing associated VMs that are part of the control plane nodes of this Hybrid AKS cluster. </summary>
        public IReadOnlyList<NodeConfiguration> ControlPlaneNodes { get; }
        /// <summary> The resource ID of the associated default CNI network. </summary>
        public string DefaultCniNetworkId { get; }
        /// <summary> The more detailed status of this Hybrid AKS cluster. </summary>
        public HybridAksClusterDetailedStatus? DetailedStatus { get; }
        /// <summary> The descriptive message about the current detailed status. </summary>
        public string DetailedStatusMessage { get; }
        /// <summary> The resource ID of the Hybrid AKS cluster that this additional information is for. </summary>
        public string HybridAksProvisionedClusterId { get; set; }
        /// <summary> The provisioning state of the Hybrid AKS cluster resource. </summary>
        public HybridAksClusterProvisioningState? ProvisioningState { get; }
        /// <summary> The resource IDs of volumes that are attached to the Hybrid AKS cluster. </summary>
        public IReadOnlyList<string> Volumes { get; }
        /// <summary> The number of worker node VMs. </summary>
        public long WorkerCount { get; set; }
        /// <summary> The list of node configurations detailing associated VMs that are part of the worker nodes of this Hybrid AKS cluster. </summary>
        public IReadOnlyList<NodeConfiguration> WorkerNodes { get; }
    }
}
