// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.NetworkCloud.Models;

namespace Azure.ResourceManager.NetworkCloud
{
    /// <summary>
    /// A class representing the NetworkCloudKubernetesClusterFeature data model.
    /// KubernetesClusterFeature represents the feature of a Kubernetes cluster.
    /// </summary>
    public partial class NetworkCloudKubernetesClusterFeatureData : TrackedResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NetworkCloudKubernetesClusterFeatureData"/>. </summary>
        /// <param name="location"> The location. </param>
        public NetworkCloudKubernetesClusterFeatureData(AzureLocation location) : base(location)
        {
            Options = new ChangeTrackingList<StringKeyValuePair>();
        }

        /// <summary> Initializes a new instance of <see cref="NetworkCloudKubernetesClusterFeatureData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="availabilityLifecycle"> The lifecycle indicator of the feature. </param>
        /// <param name="detailedStatus"> The detailed status of the feature. </param>
        /// <param name="detailedStatusMessage"> The descriptive message for the detailed status of the feature. </param>
        /// <param name="options"> The configured options for the feature. </param>
        /// <param name="provisioningState"> The provisioning state of the Kubernetes cluster feature. </param>
        /// <param name="required"> The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle. </param>
        /// <param name="version"> The version of the feature. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NetworkCloudKubernetesClusterFeatureData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, KubernetesClusterFeatureAvailabilityLifecycle? availabilityLifecycle, KubernetesClusterFeatureDetailedStatus? detailedStatus, string detailedStatusMessage, IList<StringKeyValuePair> options, KubernetesClusterFeatureProvisioningState? provisioningState, KubernetesClusterFeatureRequired? required, string version, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData, tags, location)
        {
            AvailabilityLifecycle = availabilityLifecycle;
            DetailedStatus = detailedStatus;
            DetailedStatusMessage = detailedStatusMessage;
            Options = options;
            ProvisioningState = provisioningState;
            Required = required;
            Version = version;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="NetworkCloudKubernetesClusterFeatureData"/> for deserialization. </summary>
        internal NetworkCloudKubernetesClusterFeatureData()
        {
        }

        /// <summary> The lifecycle indicator of the feature. </summary>
        public KubernetesClusterFeatureAvailabilityLifecycle? AvailabilityLifecycle { get; }
        /// <summary> The detailed status of the feature. </summary>
        public KubernetesClusterFeatureDetailedStatus? DetailedStatus { get; }
        /// <summary> The descriptive message for the detailed status of the feature. </summary>
        public string DetailedStatusMessage { get; }
        /// <summary> The configured options for the feature. </summary>
        public IList<StringKeyValuePair> Options { get; }
        /// <summary> The provisioning state of the Kubernetes cluster feature. </summary>
        public KubernetesClusterFeatureProvisioningState? ProvisioningState { get; }
        /// <summary> The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle. </summary>
        public KubernetesClusterFeatureRequired? Required { get; }
        /// <summary> The version of the feature. </summary>
        public string Version { get; }
    }
}
