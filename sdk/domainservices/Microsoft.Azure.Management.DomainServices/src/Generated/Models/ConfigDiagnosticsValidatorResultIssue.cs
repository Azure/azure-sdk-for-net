// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DomainServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specific issue for a particular config diagnostics validator
    /// </summary>
    public partial class ConfigDiagnosticsValidatorResultIssue
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ConfigDiagnosticsValidatorResultIssue class.
        /// </summary>
        public ConfigDiagnosticsValidatorResultIssue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ConfigDiagnosticsValidatorResultIssue class.
        /// </summary>
        /// <param name="id">Validation issue identifier.</param>
        /// <param name="descriptionParams">List of domain resource property
        /// name or values used to compose a rich description.</param>
        public ConfigDiagnosticsValidatorResultIssue(string id = default(string), IList<string> descriptionParams = default(IList<string>))
        {
            Id = id;
            DescriptionParams = descriptionParams;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets validation issue identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets list of domain resource property name or values used
        /// to compose a rich description.
        /// </summary>
        [JsonProperty(PropertyName = "descriptionParams")]
        public IList<string> DescriptionParams { get; set; }

    }
}
