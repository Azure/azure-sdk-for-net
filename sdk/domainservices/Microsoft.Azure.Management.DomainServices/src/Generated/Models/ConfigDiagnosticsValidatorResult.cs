// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DomainServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Config Diagnostics validator result data
    /// </summary>
    public partial class ConfigDiagnosticsValidatorResult
    {
        /// <summary>
        /// Initializes a new instance of the ConfigDiagnosticsValidatorResult
        /// class.
        /// </summary>
        public ConfigDiagnosticsValidatorResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConfigDiagnosticsValidatorResult
        /// class.
        /// </summary>
        /// <param name="validatorId">Validator identifier</param>
        /// <param name="replicaSetSubnetDisplayName">Replica set location and
        /// subnet name</param>
        /// <param name="status">Status for individual validator after running
        /// diagnostics. Possible values include: 'None', 'Running', 'OK',
        /// 'Failure', 'Warning', 'Skipped'</param>
        /// <param name="issues">List of resource config validation
        /// issues.</param>
        public ConfigDiagnosticsValidatorResult(string validatorId = default(string), string replicaSetSubnetDisplayName = default(string), string status = default(string), IList<ConfigDiagnosticsValidatorResultIssue> issues = default(IList<ConfigDiagnosticsValidatorResultIssue>))
        {
            ValidatorId = validatorId;
            ReplicaSetSubnetDisplayName = replicaSetSubnetDisplayName;
            Status = status;
            Issues = issues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets validator identifier
        /// </summary>
        [JsonProperty(PropertyName = "validatorId")]
        public string ValidatorId { get; set; }

        /// <summary>
        /// Gets or sets replica set location and subnet name
        /// </summary>
        [JsonProperty(PropertyName = "replicaSetSubnetDisplayName")]
        public string ReplicaSetSubnetDisplayName { get; set; }

        /// <summary>
        /// Gets or sets status for individual validator after running
        /// diagnostics. Possible values include: 'None', 'Running', 'OK',
        /// 'Failure', 'Warning', 'Skipped'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets list of resource config validation issues.
        /// </summary>
        [JsonProperty(PropertyName = "issues")]
        public IList<ConfigDiagnosticsValidatorResultIssue> Issues { get; set; }

    }
}
