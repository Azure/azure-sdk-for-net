// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Azure VM managed disk input details.
    /// </summary>
    public partial class A2AProtectionIntentManagedDiskInputDetails
    {
        /// <summary>
        /// Initializes a new instance of the
        /// A2AProtectionIntentManagedDiskInputDetails class.
        /// </summary>
        public A2AProtectionIntentManagedDiskInputDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// A2AProtectionIntentManagedDiskInputDetails class.
        /// </summary>
        /// <param name="diskId">The disk Id.</param>
        /// <param name="primaryStagingStorageAccountCustomInput">The primary
        /// staging storage account input.</param>
        /// <param name="recoveryResourceGroupCustomInput">The recovery
        /// resource group input.</param>
        /// <param name="recoveryReplicaDiskAccountType">The replica disk type.
        /// Its an optional value and will be same as source disk type if not
        /// user provided.</param>
        /// <param name="recoveryTargetDiskAccountType">The target disk type
        /// after failover. Its an optional value and will be same as source
        /// disk type if not user provided.</param>
        /// <param name="recoveryDiskEncryptionSetId">The recovery disk
        /// encryption set Id.</param>
        /// <param name="diskEncryptionInfo">The recovery disk encryption
        /// information (for one / single pass flows).</param>
        public A2AProtectionIntentManagedDiskInputDetails(string diskId, StorageAccountCustomDetails primaryStagingStorageAccountCustomInput = default(StorageAccountCustomDetails), RecoveryResourceGroupCustomDetails recoveryResourceGroupCustomInput = default(RecoveryResourceGroupCustomDetails), string recoveryReplicaDiskAccountType = default(string), string recoveryTargetDiskAccountType = default(string), string recoveryDiskEncryptionSetId = default(string), DiskEncryptionInfo diskEncryptionInfo = default(DiskEncryptionInfo))
        {
            DiskId = diskId;
            PrimaryStagingStorageAccountCustomInput = primaryStagingStorageAccountCustomInput;
            RecoveryResourceGroupCustomInput = recoveryResourceGroupCustomInput;
            RecoveryReplicaDiskAccountType = recoveryReplicaDiskAccountType;
            RecoveryTargetDiskAccountType = recoveryTargetDiskAccountType;
            RecoveryDiskEncryptionSetId = recoveryDiskEncryptionSetId;
            DiskEncryptionInfo = diskEncryptionInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the disk Id.
        /// </summary>
        [JsonProperty(PropertyName = "diskId")]
        public string DiskId { get; set; }

        /// <summary>
        /// Gets or sets the primary staging storage account input.
        /// </summary>
        [JsonProperty(PropertyName = "primaryStagingStorageAccountCustomInput")]
        public StorageAccountCustomDetails PrimaryStagingStorageAccountCustomInput { get; set; }

        /// <summary>
        /// Gets or sets the recovery resource group input.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryResourceGroupCustomInput")]
        public RecoveryResourceGroupCustomDetails RecoveryResourceGroupCustomInput { get; set; }

        /// <summary>
        /// Gets or sets the replica disk type. Its an optional value and will
        /// be same as source disk type if not user provided.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryReplicaDiskAccountType")]
        public string RecoveryReplicaDiskAccountType { get; set; }

        /// <summary>
        /// Gets or sets the target disk type after failover. Its an optional
        /// value and will be same as source disk type if not user provided.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryTargetDiskAccountType")]
        public string RecoveryTargetDiskAccountType { get; set; }

        /// <summary>
        /// Gets or sets the recovery disk encryption set Id.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryDiskEncryptionSetId")]
        public string RecoveryDiskEncryptionSetId { get; set; }

        /// <summary>
        /// Gets or sets the recovery disk encryption information (for one /
        /// single pass flows).
        /// </summary>
        [JsonProperty(PropertyName = "diskEncryptionInfo")]
        public DiskEncryptionInfo DiskEncryptionInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DiskId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DiskId");
            }
        }
    }
}
