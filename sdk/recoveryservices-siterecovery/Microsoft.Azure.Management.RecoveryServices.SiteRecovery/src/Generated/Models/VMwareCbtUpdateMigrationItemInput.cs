// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VMwareCbt specific update migration item input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("VMwareCbt")]
    public partial class VMwareCbtUpdateMigrationItemInput : UpdateMigrationItemProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the VMwareCbtUpdateMigrationItemInput
        /// class.
        /// </summary>
        public VMwareCbtUpdateMigrationItemInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMwareCbtUpdateMigrationItemInput
        /// class.
        /// </summary>
        /// <param name="targetVmName">The target VM name.</param>
        /// <param name="targetVmSize">The target VM size.</param>
        /// <param name="targetResourceGroupId">The target resource group ARM
        /// Id.</param>
        /// <param name="targetAvailabilitySetId">The target availability set
        /// ARM Id.</param>
        /// <param name="targetBootDiagnosticsStorageAccountId">The target boot
        /// diagnostics storage account ARM Id.</param>
        /// <param name="targetNetworkId">The target network ARM Id.</param>
        /// <param name="vmNics">The list of NIC details.</param>
        /// <param name="licenseType">The license type. Possible values
        /// include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'</param>
        /// <param name="performAutoResync">A value indicating whether auto
        /// resync is to be done.</param>
        public VMwareCbtUpdateMigrationItemInput(string targetVmName = default(string), string targetVmSize = default(string), string targetResourceGroupId = default(string), string targetAvailabilitySetId = default(string), string targetBootDiagnosticsStorageAccountId = default(string), string targetNetworkId = default(string), IList<VMwareCbtNicInput> vmNics = default(IList<VMwareCbtNicInput>), string licenseType = default(string), string performAutoResync = default(string))
        {
            TargetVmName = targetVmName;
            TargetVmSize = targetVmSize;
            TargetResourceGroupId = targetResourceGroupId;
            TargetAvailabilitySetId = targetAvailabilitySetId;
            TargetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
            TargetNetworkId = targetNetworkId;
            VmNics = vmNics;
            LicenseType = licenseType;
            PerformAutoResync = performAutoResync;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the target VM name.
        /// </summary>
        [JsonProperty(PropertyName = "targetVmName")]
        public string TargetVmName { get; set; }

        /// <summary>
        /// Gets or sets the target VM size.
        /// </summary>
        [JsonProperty(PropertyName = "targetVmSize")]
        public string TargetVmSize { get; set; }

        /// <summary>
        /// Gets or sets the target resource group ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetResourceGroupId")]
        public string TargetResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets the target availability set ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetAvailabilitySetId")]
        public string TargetAvailabilitySetId { get; set; }

        /// <summary>
        /// Gets or sets the target boot diagnostics storage account ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetBootDiagnosticsStorageAccountId")]
        public string TargetBootDiagnosticsStorageAccountId { get; set; }

        /// <summary>
        /// Gets or sets the target network ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetNetworkId")]
        public string TargetNetworkId { get; set; }

        /// <summary>
        /// Gets or sets the list of NIC details.
        /// </summary>
        [JsonProperty(PropertyName = "vmNics")]
        public IList<VMwareCbtNicInput> VmNics { get; set; }

        /// <summary>
        /// Gets or sets the license type. Possible values include:
        /// 'NotSpecified', 'NoLicenseType', 'WindowsServer'
        /// </summary>
        [JsonProperty(PropertyName = "licenseType")]
        public string LicenseType { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether auto resync is to be done.
        /// </summary>
        [JsonProperty(PropertyName = "performAutoResync")]
        public string PerformAutoResync { get; set; }

    }
}
