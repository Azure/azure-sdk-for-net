// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Disk input details.
    /// </summary>
    public partial class InMageAzureV2DiskInputDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageAzureV2DiskInputDetails
        /// class.
        /// </summary>
        public InMageAzureV2DiskInputDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageAzureV2DiskInputDetails
        /// class.
        /// </summary>
        /// <param name="diskId">The DiskId.</param>
        /// <param name="logStorageAccountId">The LogStorageAccountId.</param>
        /// <param name="diskType">The DiskType. Possible values include:
        /// 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'</param>
        /// <param name="diskEncryptionSetId">The DiskEncryptionSet ARM
        /// ID.</param>
        public InMageAzureV2DiskInputDetails(string diskId = default(string), string logStorageAccountId = default(string), string diskType = default(string), string diskEncryptionSetId = default(string))
        {
            DiskId = diskId;
            LogStorageAccountId = logStorageAccountId;
            DiskType = diskType;
            DiskEncryptionSetId = diskEncryptionSetId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the DiskId.
        /// </summary>
        [JsonProperty(PropertyName = "diskId")]
        public string DiskId { get; set; }

        /// <summary>
        /// Gets or sets the LogStorageAccountId.
        /// </summary>
        [JsonProperty(PropertyName = "logStorageAccountId")]
        public string LogStorageAccountId { get; set; }

        /// <summary>
        /// Gets or sets the DiskType. Possible values include: 'Standard_LRS',
        /// 'Premium_LRS', 'StandardSSD_LRS'
        /// </summary>
        [JsonProperty(PropertyName = "diskType")]
        public string DiskType { get; set; }

        /// <summary>
        /// Gets or sets the DiskEncryptionSet ARM ID.
        /// </summary>
        [JsonProperty(PropertyName = "diskEncryptionSetId")]
        public string DiskEncryptionSetId { get; set; }

    }
}
