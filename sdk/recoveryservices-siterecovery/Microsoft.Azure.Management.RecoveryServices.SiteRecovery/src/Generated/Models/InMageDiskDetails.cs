// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VMware/Physical specific Disk Details.
    /// </summary>
    public partial class InMageDiskDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageDiskDetails class.
        /// </summary>
        public InMageDiskDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageDiskDetails class.
        /// </summary>
        /// <param name="diskId">The disk Id.</param>
        /// <param name="diskName">The disk name.</param>
        /// <param name="diskSizeInMB">The disk size in MB.</param>
        /// <param name="diskType">Whether disk is system disk or data
        /// disk.</param>
        /// <param name="diskConfiguration">Whether disk is dynamic disk or
        /// basic disk.</param>
        /// <param name="volumeList">Volumes of the disk.</param>
        public InMageDiskDetails(string diskId = default(string), string diskName = default(string), string diskSizeInMB = default(string), string diskType = default(string), string diskConfiguration = default(string), IList<DiskVolumeDetails> volumeList = default(IList<DiskVolumeDetails>))
        {
            DiskId = diskId;
            DiskName = diskName;
            DiskSizeInMB = diskSizeInMB;
            DiskType = diskType;
            DiskConfiguration = diskConfiguration;
            VolumeList = volumeList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the disk Id.
        /// </summary>
        [JsonProperty(PropertyName = "diskId")]
        public string DiskId { get; set; }

        /// <summary>
        /// Gets or sets the disk name.
        /// </summary>
        [JsonProperty(PropertyName = "diskName")]
        public string DiskName { get; set; }

        /// <summary>
        /// Gets or sets the disk size in MB.
        /// </summary>
        [JsonProperty(PropertyName = "diskSizeInMB")]
        public string DiskSizeInMB { get; set; }

        /// <summary>
        /// Gets or sets whether disk is system disk or data disk.
        /// </summary>
        [JsonProperty(PropertyName = "diskType")]
        public string DiskType { get; set; }

        /// <summary>
        /// Gets or sets whether disk is dynamic disk or basic disk.
        /// </summary>
        [JsonProperty(PropertyName = "diskConfiguration")]
        public string DiskConfiguration { get; set; }

        /// <summary>
        /// Gets or sets volumes of the disk.
        /// </summary>
        [JsonProperty(PropertyName = "volumeList")]
        public IList<DiskVolumeDetails> VolumeList { get; set; }

    }
}
