// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// InMageRcm specific enable protection input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageRcm")]
    public partial class InMageRcmEnableProtectionInput : EnableProtectionProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmEnableProtectionInput
        /// class.
        /// </summary>
        public InMageRcmEnableProtectionInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmEnableProtectionInput
        /// class.
        /// </summary>
        /// <param name="fabricDiscoveryMachineId">The ARM Id of discovered
        /// machine.</param>
        /// <param name="targetResourceGroupId">The target resource group ARM
        /// Id.</param>
        /// <param name="processServerId">The process server Id.</param>
        /// <param name="disksToInclude">The disks to include list.</param>
        /// <param name="disksDefault">The default disk input.</param>
        /// <param name="targetNetworkId">The selected target network ARM
        /// Id.</param>
        /// <param name="testNetworkId">The selected test network ARM
        /// Id.</param>
        /// <param name="targetSubnetName">The selected target subnet
        /// name.</param>
        /// <param name="testSubnetName">The selected test subnet name.</param>
        /// <param name="targetVmName">The target VM name.</param>
        /// <param name="targetVmSize">The target VM size.</param>
        /// <param name="licenseType">The license type. Possible values
        /// include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'</param>
        /// <param name="targetAvailabilitySetId">The target availability set
        /// ARM Id.</param>
        /// <param name="targetAvailabilityZone">The target availability
        /// zone.</param>
        /// <param name="targetProximityPlacementGroupId">The target proximity
        /// placement group Id.</param>
        /// <param name="targetBootDiagnosticsStorageAccountId">The target boot
        /// diagnostics storage account ARM Id.</param>
        /// <param name="runAsAccountId">The run-as account Id.</param>
        /// <param name="multiVmGroupName">The multi VM group name.</param>
        public InMageRcmEnableProtectionInput(string fabricDiscoveryMachineId, string targetResourceGroupId, string processServerId, IList<InMageRcmDiskInput> disksToInclude = default(IList<InMageRcmDiskInput>), InMageRcmDisksDefaultInput disksDefault = default(InMageRcmDisksDefaultInput), string targetNetworkId = default(string), string testNetworkId = default(string), string targetSubnetName = default(string), string testSubnetName = default(string), string targetVmName = default(string), string targetVmSize = default(string), string licenseType = default(string), string targetAvailabilitySetId = default(string), string targetAvailabilityZone = default(string), string targetProximityPlacementGroupId = default(string), string targetBootDiagnosticsStorageAccountId = default(string), string runAsAccountId = default(string), string multiVmGroupName = default(string))
        {
            FabricDiscoveryMachineId = fabricDiscoveryMachineId;
            DisksToInclude = disksToInclude;
            DisksDefault = disksDefault;
            TargetResourceGroupId = targetResourceGroupId;
            TargetNetworkId = targetNetworkId;
            TestNetworkId = testNetworkId;
            TargetSubnetName = targetSubnetName;
            TestSubnetName = testSubnetName;
            TargetVmName = targetVmName;
            TargetVmSize = targetVmSize;
            LicenseType = licenseType;
            TargetAvailabilitySetId = targetAvailabilitySetId;
            TargetAvailabilityZone = targetAvailabilityZone;
            TargetProximityPlacementGroupId = targetProximityPlacementGroupId;
            TargetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
            RunAsAccountId = runAsAccountId;
            ProcessServerId = processServerId;
            MultiVmGroupName = multiVmGroupName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ARM Id of discovered machine.
        /// </summary>
        [JsonProperty(PropertyName = "fabricDiscoveryMachineId")]
        public string FabricDiscoveryMachineId { get; set; }

        /// <summary>
        /// Gets or sets the disks to include list.
        /// </summary>
        [JsonProperty(PropertyName = "disksToInclude")]
        public IList<InMageRcmDiskInput> DisksToInclude { get; set; }

        /// <summary>
        /// Gets or sets the default disk input.
        /// </summary>
        [JsonProperty(PropertyName = "disksDefault")]
        public InMageRcmDisksDefaultInput DisksDefault { get; set; }

        /// <summary>
        /// Gets or sets the target resource group ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetResourceGroupId")]
        public string TargetResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets the selected target network ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetNetworkId")]
        public string TargetNetworkId { get; set; }

        /// <summary>
        /// Gets or sets the selected test network ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "testNetworkId")]
        public string TestNetworkId { get; set; }

        /// <summary>
        /// Gets or sets the selected target subnet name.
        /// </summary>
        [JsonProperty(PropertyName = "targetSubnetName")]
        public string TargetSubnetName { get; set; }

        /// <summary>
        /// Gets or sets the selected test subnet name.
        /// </summary>
        [JsonProperty(PropertyName = "testSubnetName")]
        public string TestSubnetName { get; set; }

        /// <summary>
        /// Gets or sets the target VM name.
        /// </summary>
        [JsonProperty(PropertyName = "targetVmName")]
        public string TargetVmName { get; set; }

        /// <summary>
        /// Gets or sets the target VM size.
        /// </summary>
        [JsonProperty(PropertyName = "targetVmSize")]
        public string TargetVmSize { get; set; }

        /// <summary>
        /// Gets or sets the license type. Possible values include:
        /// 'NotSpecified', 'NoLicenseType', 'WindowsServer'
        /// </summary>
        [JsonProperty(PropertyName = "licenseType")]
        public string LicenseType { get; set; }

        /// <summary>
        /// Gets or sets the target availability set ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetAvailabilitySetId")]
        public string TargetAvailabilitySetId { get; set; }

        /// <summary>
        /// Gets or sets the target availability zone.
        /// </summary>
        [JsonProperty(PropertyName = "targetAvailabilityZone")]
        public string TargetAvailabilityZone { get; set; }

        /// <summary>
        /// Gets or sets the target proximity placement group Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetProximityPlacementGroupId")]
        public string TargetProximityPlacementGroupId { get; set; }

        /// <summary>
        /// Gets or sets the target boot diagnostics storage account ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetBootDiagnosticsStorageAccountId")]
        public string TargetBootDiagnosticsStorageAccountId { get; set; }

        /// <summary>
        /// Gets or sets the run-as account Id.
        /// </summary>
        [JsonProperty(PropertyName = "runAsAccountId")]
        public string RunAsAccountId { get; set; }

        /// <summary>
        /// Gets or sets the process server Id.
        /// </summary>
        [JsonProperty(PropertyName = "processServerId")]
        public string ProcessServerId { get; set; }

        /// <summary>
        /// Gets or sets the multi VM group name.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVmGroupName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FabricDiscoveryMachineId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FabricDiscoveryMachineId");
            }
            if (TargetResourceGroupId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetResourceGroupId");
            }
            if (ProcessServerId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProcessServerId");
            }
            if (DisksToInclude != null)
            {
                foreach (var element in DisksToInclude)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (DisksDefault != null)
            {
                DisksDefault.Validate();
            }
        }
    }
}
