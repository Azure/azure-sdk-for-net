// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Recovery services provider properties.
    /// </summary>
    public partial class RecoveryServicesProviderProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RecoveryServicesProviderProperties class.
        /// </summary>
        public RecoveryServicesProviderProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// RecoveryServicesProviderProperties class.
        /// </summary>
        /// <param name="fabricType">Type of the site.</param>
        /// <param name="friendlyName">Friendly name of the DRA.</param>
        /// <param name="providerVersion">The provider version.</param>
        /// <param name="serverVersion">The fabric provider.</param>
        /// <param name="providerVersionState">DRA version status.</param>
        /// <param name="providerVersionExpiryDate">Expiry date of the
        /// version.</param>
        /// <param name="fabricFriendlyName">The fabric friendly name.</param>
        /// <param name="lastHeartBeat">Time when last heartbeat was sent by
        /// the DRA.</param>
        /// <param name="connectionStatus">A value indicating whether DRA is
        /// responsive.</param>
        /// <param name="protectedItemCount">Number of protected VMs currently
        /// managed by the DRA.</param>
        /// <param name="allowedScenarios">The scenarios allowed on this
        /// provider.</param>
        /// <param name="healthErrorDetails">The recovery services provider
        /// health error details.</param>
        /// <param name="draIdentifier">The DRA Id.</param>
        /// <param name="machineId">The machine Id.</param>
        /// <param name="machineName">The machine name.</param>
        /// <param name="biosId">The Bios Id.</param>
        /// <param name="authenticationIdentityDetails">The authentication
        /// identity details.</param>
        /// <param name="resourceAccessIdentityDetails">The resource access
        /// identity details.</param>
        /// <param name="dataPlaneAuthenticationIdentityDetails">The data plane
        /// authentication identity details.</param>
        /// <param name="providerVersionDetails">The provider version
        /// details.</param>
        public RecoveryServicesProviderProperties(string fabricType = default(string), string friendlyName = default(string), string providerVersion = default(string), string serverVersion = default(string), string providerVersionState = default(string), System.DateTime? providerVersionExpiryDate = default(System.DateTime?), string fabricFriendlyName = default(string), System.DateTime? lastHeartBeat = default(System.DateTime?), string connectionStatus = default(string), int? protectedItemCount = default(int?), IList<string> allowedScenarios = default(IList<string>), IList<HealthError> healthErrorDetails = default(IList<HealthError>), string draIdentifier = default(string), string machineId = default(string), string machineName = default(string), string biosId = default(string), IdentityProviderDetails authenticationIdentityDetails = default(IdentityProviderDetails), IdentityProviderDetails resourceAccessIdentityDetails = default(IdentityProviderDetails), IdentityProviderDetails dataPlaneAuthenticationIdentityDetails = default(IdentityProviderDetails), VersionDetails providerVersionDetails = default(VersionDetails))
        {
            FabricType = fabricType;
            FriendlyName = friendlyName;
            ProviderVersion = providerVersion;
            ServerVersion = serverVersion;
            ProviderVersionState = providerVersionState;
            ProviderVersionExpiryDate = providerVersionExpiryDate;
            FabricFriendlyName = fabricFriendlyName;
            LastHeartBeat = lastHeartBeat;
            ConnectionStatus = connectionStatus;
            ProtectedItemCount = protectedItemCount;
            AllowedScenarios = allowedScenarios;
            HealthErrorDetails = healthErrorDetails;
            DraIdentifier = draIdentifier;
            MachineId = machineId;
            MachineName = machineName;
            BiosId = biosId;
            AuthenticationIdentityDetails = authenticationIdentityDetails;
            ResourceAccessIdentityDetails = resourceAccessIdentityDetails;
            DataPlaneAuthenticationIdentityDetails = dataPlaneAuthenticationIdentityDetails;
            ProviderVersionDetails = providerVersionDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of the site.
        /// </summary>
        [JsonProperty(PropertyName = "fabricType")]
        public string FabricType { get; set; }

        /// <summary>
        /// Gets or sets friendly name of the DRA.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the provider version.
        /// </summary>
        [JsonProperty(PropertyName = "providerVersion")]
        public string ProviderVersion { get; set; }

        /// <summary>
        /// Gets or sets the fabric provider.
        /// </summary>
        [JsonProperty(PropertyName = "serverVersion")]
        public string ServerVersion { get; set; }

        /// <summary>
        /// Gets or sets DRA version status.
        /// </summary>
        [JsonProperty(PropertyName = "providerVersionState")]
        public string ProviderVersionState { get; set; }

        /// <summary>
        /// Gets or sets expiry date of the version.
        /// </summary>
        [JsonProperty(PropertyName = "providerVersionExpiryDate")]
        public System.DateTime? ProviderVersionExpiryDate { get; set; }

        /// <summary>
        /// Gets or sets the fabric friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "fabricFriendlyName")]
        public string FabricFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets time when last heartbeat was sent by the DRA.
        /// </summary>
        [JsonProperty(PropertyName = "lastHeartBeat")]
        public System.DateTime? LastHeartBeat { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether DRA is responsive.
        /// </summary>
        [JsonProperty(PropertyName = "connectionStatus")]
        public string ConnectionStatus { get; set; }

        /// <summary>
        /// Gets or sets number of protected VMs currently managed by the DRA.
        /// </summary>
        [JsonProperty(PropertyName = "protectedItemCount")]
        public int? ProtectedItemCount { get; set; }

        /// <summary>
        /// Gets or sets the scenarios allowed on this provider.
        /// </summary>
        [JsonProperty(PropertyName = "allowedScenarios")]
        public IList<string> AllowedScenarios { get; set; }

        /// <summary>
        /// Gets or sets the recovery services provider health error details.
        /// </summary>
        [JsonProperty(PropertyName = "healthErrorDetails")]
        public IList<HealthError> HealthErrorDetails { get; set; }

        /// <summary>
        /// Gets or sets the DRA Id.
        /// </summary>
        [JsonProperty(PropertyName = "draIdentifier")]
        public string DraIdentifier { get; set; }

        /// <summary>
        /// Gets or sets the machine Id.
        /// </summary>
        [JsonProperty(PropertyName = "machineId")]
        public string MachineId { get; set; }

        /// <summary>
        /// Gets or sets the machine name.
        /// </summary>
        [JsonProperty(PropertyName = "machineName")]
        public string MachineName { get; set; }

        /// <summary>
        /// Gets or sets the Bios Id.
        /// </summary>
        [JsonProperty(PropertyName = "biosId")]
        public string BiosId { get; set; }

        /// <summary>
        /// Gets or sets the authentication identity details.
        /// </summary>
        [JsonProperty(PropertyName = "authenticationIdentityDetails")]
        public IdentityProviderDetails AuthenticationIdentityDetails { get; set; }

        /// <summary>
        /// Gets or sets the resource access identity details.
        /// </summary>
        [JsonProperty(PropertyName = "resourceAccessIdentityDetails")]
        public IdentityProviderDetails ResourceAccessIdentityDetails { get; set; }

        /// <summary>
        /// Gets or sets the data plane authentication identity details.
        /// </summary>
        [JsonProperty(PropertyName = "dataPlaneAuthenticationIdentityDetails")]
        public IdentityProviderDetails DataPlaneAuthenticationIdentityDetails { get; set; }

        /// <summary>
        /// Gets or sets the provider version details.
        /// </summary>
        [JsonProperty(PropertyName = "providerVersionDetails")]
        public VersionDetails ProviderVersionDetails { get; set; }

    }
}
