// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Migration item properties.
    /// </summary>
    public partial class MigrationItemProperties
    {
        /// <summary>
        /// Initializes a new instance of the MigrationItemProperties class.
        /// </summary>
        public MigrationItemProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrationItemProperties class.
        /// </summary>
        /// <param name="machineName">The on-premise virtual machine
        /// name.</param>
        /// <param name="policyId">The ARM Id of policy governing this
        /// item.</param>
        /// <param name="policyFriendlyName">The name of policy governing this
        /// item.</param>
        /// <param name="migrationState">The migration status. Possible values
        /// include: 'None', 'EnableMigrationInProgress',
        /// 'EnableMigrationFailed', 'DisableMigrationInProgress',
        /// 'DisableMigrationFailed', 'InitialSeedingInProgress',
        /// 'InitialSeedingFailed', 'Replicating', 'MigrationInProgress',
        /// 'MigrationSucceeded', 'MigrationFailed'</param>
        /// <param name="migrationStateDescription">The migration state
        /// description.</param>
        /// <param name="lastTestMigrationTime">The last test migration
        /// time.</param>
        /// <param name="lastTestMigrationStatus">The status of the last test
        /// migration.</param>
        /// <param name="testMigrateState">The test migrate state. Possible
        /// values include: 'None', 'TestMigrationInProgress',
        /// 'TestMigrationSucceeded', 'TestMigrationFailed',
        /// 'TestMigrationCleanupInProgress'</param>
        /// <param name="testMigrateStateDescription">The test migrate state
        /// description.</param>
        /// <param name="health">The consolidated health. Possible values
        /// include: 'None', 'Normal', 'Warning', 'Critical'</param>
        /// <param name="healthErrors">The list of health errors.</param>
        /// <param name="allowedOperations">The allowed operations on the
        /// migration item based on the current migration state of the
        /// item.</param>
        /// <param name="currentJob">The current job details.</param>
        /// <param name="eventCorrelationId">The correlation Id for events
        /// associated with this migration item.</param>
        /// <param name="providerSpecificDetails">The migration provider custom
        /// settings.</param>
        public MigrationItemProperties(string machineName = default(string), string policyId = default(string), string policyFriendlyName = default(string), string migrationState = default(string), string migrationStateDescription = default(string), System.DateTime? lastTestMigrationTime = default(System.DateTime?), string lastTestMigrationStatus = default(string), string testMigrateState = default(string), string testMigrateStateDescription = default(string), string health = default(string), IList<HealthError> healthErrors = default(IList<HealthError>), IList<string> allowedOperations = default(IList<string>), CurrentJobDetails currentJob = default(CurrentJobDetails), string eventCorrelationId = default(string), MigrationProviderSpecificSettings providerSpecificDetails = default(MigrationProviderSpecificSettings))
        {
            MachineName = machineName;
            PolicyId = policyId;
            PolicyFriendlyName = policyFriendlyName;
            MigrationState = migrationState;
            MigrationStateDescription = migrationStateDescription;
            LastTestMigrationTime = lastTestMigrationTime;
            LastTestMigrationStatus = lastTestMigrationStatus;
            TestMigrateState = testMigrateState;
            TestMigrateStateDescription = testMigrateStateDescription;
            Health = health;
            HealthErrors = healthErrors;
            AllowedOperations = allowedOperations;
            CurrentJob = currentJob;
            EventCorrelationId = eventCorrelationId;
            ProviderSpecificDetails = providerSpecificDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the on-premise virtual machine name.
        /// </summary>
        [JsonProperty(PropertyName = "machineName")]
        public string MachineName { get; private set; }

        /// <summary>
        /// Gets the ARM Id of policy governing this item.
        /// </summary>
        [JsonProperty(PropertyName = "policyId")]
        public string PolicyId { get; private set; }

        /// <summary>
        /// Gets the name of policy governing this item.
        /// </summary>
        [JsonProperty(PropertyName = "policyFriendlyName")]
        public string PolicyFriendlyName { get; private set; }

        /// <summary>
        /// Gets the migration status. Possible values include: 'None',
        /// 'EnableMigrationInProgress', 'EnableMigrationFailed',
        /// 'DisableMigrationInProgress', 'DisableMigrationFailed',
        /// 'InitialSeedingInProgress', 'InitialSeedingFailed', 'Replicating',
        /// 'MigrationInProgress', 'MigrationSucceeded', 'MigrationFailed'
        /// </summary>
        [JsonProperty(PropertyName = "migrationState")]
        public string MigrationState { get; private set; }

        /// <summary>
        /// Gets the migration state description.
        /// </summary>
        [JsonProperty(PropertyName = "migrationStateDescription")]
        public string MigrationStateDescription { get; private set; }

        /// <summary>
        /// Gets the last test migration time.
        /// </summary>
        [JsonProperty(PropertyName = "lastTestMigrationTime")]
        public System.DateTime? LastTestMigrationTime { get; private set; }

        /// <summary>
        /// Gets the status of the last test migration.
        /// </summary>
        [JsonProperty(PropertyName = "lastTestMigrationStatus")]
        public string LastTestMigrationStatus { get; private set; }

        /// <summary>
        /// Gets the test migrate state. Possible values include: 'None',
        /// 'TestMigrationInProgress', 'TestMigrationSucceeded',
        /// 'TestMigrationFailed', 'TestMigrationCleanupInProgress'
        /// </summary>
        [JsonProperty(PropertyName = "testMigrateState")]
        public string TestMigrateState { get; private set; }

        /// <summary>
        /// Gets the test migrate state description.
        /// </summary>
        [JsonProperty(PropertyName = "testMigrateStateDescription")]
        public string TestMigrateStateDescription { get; private set; }

        /// <summary>
        /// Gets the consolidated health. Possible values include: 'None',
        /// 'Normal', 'Warning', 'Critical'
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets the list of health errors.
        /// </summary>
        [JsonProperty(PropertyName = "healthErrors")]
        public IList<HealthError> HealthErrors { get; private set; }

        /// <summary>
        /// Gets the allowed operations on the migration item based on the
        /// current migration state of the item.
        /// </summary>
        [JsonProperty(PropertyName = "allowedOperations")]
        public IList<string> AllowedOperations { get; private set; }

        /// <summary>
        /// Gets the current job details.
        /// </summary>
        [JsonProperty(PropertyName = "currentJob")]
        public CurrentJobDetails CurrentJob { get; private set; }

        /// <summary>
        /// Gets the correlation Id for events associated with this migration
        /// item.
        /// </summary>
        [JsonProperty(PropertyName = "eventCorrelationId")]
        public string EventCorrelationId { get; private set; }

        /// <summary>
        /// Gets or sets the migration provider custom settings.
        /// </summary>
        [JsonProperty(PropertyName = "providerSpecificDetails")]
        public MigrationProviderSpecificSettings ProviderSpecificDetails { get; set; }

    }
}
