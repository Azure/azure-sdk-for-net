// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// ExtendedLocation details data.
    /// </summary>
    public partial class A2AExtendedLocationDetails
    {
        /// <summary>
        /// Initializes a new instance of the A2AExtendedLocationDetails class.
        /// </summary>
        public A2AExtendedLocationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the A2AExtendedLocationDetails class.
        /// </summary>
        /// <param name="primaryExtendedLocation">The primary
        /// ExtendedLocation.</param>
        /// <param name="recoveryExtendedLocation">The recovery
        /// ExtendedLocation.</param>
        public A2AExtendedLocationDetails(ExtendedLocation primaryExtendedLocation = default(ExtendedLocation), ExtendedLocation recoveryExtendedLocation = default(ExtendedLocation))
        {
            PrimaryExtendedLocation = primaryExtendedLocation;
            RecoveryExtendedLocation = recoveryExtendedLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the primary ExtendedLocation.
        /// </summary>
        [JsonProperty(PropertyName = "primaryExtendedLocation")]
        public ExtendedLocation PrimaryExtendedLocation { get; set; }

        /// <summary>
        /// Gets or sets the recovery ExtendedLocation.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryExtendedLocation")]
        public ExtendedLocation RecoveryExtendedLocation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PrimaryExtendedLocation != null)
            {
                PrimaryExtendedLocation.Validate();
            }
            if (RecoveryExtendedLocation != null)
            {
                RecoveryExtendedLocation.Validate();
            }
        }
    }
}
