// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Mars agent details.
    /// </summary>
    public partial class MarsAgentDetails
    {
        /// <summary>
        /// Initializes a new instance of the MarsAgentDetails class.
        /// </summary>
        public MarsAgentDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MarsAgentDetails class.
        /// </summary>
        /// <param name="id">The Mars agent Id.</param>
        /// <param name="name">The Mars agent name.</param>
        /// <param name="biosId">The Mars agent Bios Id.</param>
        /// <param name="fabricObjectId">The fabric object Id.</param>
        /// <param name="fqdn">The Mars agent Fqdn.</param>
        /// <param name="version">The version.</param>
        /// <param name="lastHeartbeatUtc">The last heartbeat received from the
        /// Mars agent.</param>
        /// <param name="health">The health of the Mars agent. Possible values
        /// include: 'None', 'Normal', 'Warning', 'Critical'</param>
        /// <param name="healthErrors">The health errors.</param>
        public MarsAgentDetails(string id = default(string), string name = default(string), string biosId = default(string), string fabricObjectId = default(string), string fqdn = default(string), string version = default(string), System.DateTime? lastHeartbeatUtc = default(System.DateTime?), string health = default(string), IList<HealthError> healthErrors = default(IList<HealthError>))
        {
            Id = id;
            Name = name;
            BiosId = biosId;
            FabricObjectId = fabricObjectId;
            Fqdn = fqdn;
            Version = version;
            LastHeartbeatUtc = lastHeartbeatUtc;
            Health = health;
            HealthErrors = healthErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Mars agent Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the Mars agent name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the Mars agent Bios Id.
        /// </summary>
        [JsonProperty(PropertyName = "biosId")]
        public string BiosId { get; private set; }

        /// <summary>
        /// Gets the fabric object Id.
        /// </summary>
        [JsonProperty(PropertyName = "fabricObjectId")]
        public string FabricObjectId { get; private set; }

        /// <summary>
        /// Gets the Mars agent Fqdn.
        /// </summary>
        [JsonProperty(PropertyName = "fqdn")]
        public string Fqdn { get; private set; }

        /// <summary>
        /// Gets the version.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets the last heartbeat received from the Mars agent.
        /// </summary>
        [JsonProperty(PropertyName = "lastHeartbeatUtc")]
        public System.DateTime? LastHeartbeatUtc { get; private set; }

        /// <summary>
        /// Gets the health of the Mars agent. Possible values include: 'None',
        /// 'Normal', 'Warning', 'Critical'
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets the health errors.
        /// </summary>
        [JsonProperty(PropertyName = "healthErrors")]
        public IList<HealthError> HealthErrors { get; private set; }

    }
}
