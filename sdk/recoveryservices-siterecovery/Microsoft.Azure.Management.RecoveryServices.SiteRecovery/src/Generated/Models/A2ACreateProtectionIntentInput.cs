// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A2A create protection intent input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("A2A")]
    public partial class A2ACreateProtectionIntentInput : CreateProtectionIntentProviderSpecificDetails
    {
        /// <summary>
        /// Initializes a new instance of the A2ACreateProtectionIntentInput
        /// class.
        /// </summary>
        public A2ACreateProtectionIntentInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the A2ACreateProtectionIntentInput
        /// class.
        /// </summary>
        /// <param name="fabricObjectId">The fabric specific object Id of the
        /// virtual machine.</param>
        /// <param name="primaryLocation">The primary location for the virtual
        /// machine.</param>
        /// <param name="recoveryLocation">The recovery location for the
        /// virtual machine.</param>
        /// <param name="recoverySubscriptionId">The recovery subscription Id
        /// of the virtual machine.</param>
        /// <param name="recoveryAvailabilityType">The recovery availability
        /// type of the virtual machine. Possible values include: 'Single',
        /// 'AvailabilitySet', 'AvailabilityZone'</param>
        /// <param name="recoveryResourceGroupId">The recovery resource group
        /// Id. Valid for V2 scenarios.</param>
        /// <param name="protectionProfileCustomInput">The protection profile
        /// custom inputs.</param>
        /// <param name="primaryStagingStorageAccountCustomInput">The primary
        /// staging storage account input.</param>
        /// <param name="recoveryAvailabilitySetCustomInput">The recovery
        /// availability set input.</param>
        /// <param name="recoveryVirtualNetworkCustomInput">The recovery
        /// virtual network input.</param>
        /// <param name="recoveryProximityPlacementGroupCustomInput">The
        /// recovery proximity placement group custom input.</param>
        /// <param name="autoProtectionOfDataDisk">A value indicating whether
        /// the auto protection is enabled. Possible values include:
        /// 'Disabled', 'Enabled'</param>
        /// <param name="vmDisks">The list of vm disk inputs.</param>
        /// <param name="vmManagedDisks">The list of vm managed disk
        /// inputs.</param>
        /// <param name="multiVmGroupName">The multi vm group name.</param>
        /// <param name="multiVmGroupId">The multi vm group id.</param>
        /// <param name="recoveryBootDiagStorageAccount">The boot diagnostic
        /// storage account.</param>
        /// <param name="diskEncryptionInfo">The recovery disk encryption
        /// information (for two pass flows).</param>
        /// <param name="recoveryAvailabilityZone">The recovery availability
        /// zone.</param>
        public A2ACreateProtectionIntentInput(string fabricObjectId, string primaryLocation, string recoveryLocation, string recoverySubscriptionId, string recoveryAvailabilityType, string recoveryResourceGroupId, ProtectionProfileCustomDetails protectionProfileCustomInput = default(ProtectionProfileCustomDetails), StorageAccountCustomDetails primaryStagingStorageAccountCustomInput = default(StorageAccountCustomDetails), RecoveryAvailabilitySetCustomDetails recoveryAvailabilitySetCustomInput = default(RecoveryAvailabilitySetCustomDetails), RecoveryVirtualNetworkCustomDetails recoveryVirtualNetworkCustomInput = default(RecoveryVirtualNetworkCustomDetails), RecoveryProximityPlacementGroupCustomDetails recoveryProximityPlacementGroupCustomInput = default(RecoveryProximityPlacementGroupCustomDetails), string autoProtectionOfDataDisk = default(string), IList<A2AProtectionIntentDiskInputDetails> vmDisks = default(IList<A2AProtectionIntentDiskInputDetails>), IList<A2AProtectionIntentManagedDiskInputDetails> vmManagedDisks = default(IList<A2AProtectionIntentManagedDiskInputDetails>), string multiVmGroupName = default(string), string multiVmGroupId = default(string), StorageAccountCustomDetails recoveryBootDiagStorageAccount = default(StorageAccountCustomDetails), DiskEncryptionInfo diskEncryptionInfo = default(DiskEncryptionInfo), string recoveryAvailabilityZone = default(string))
        {
            FabricObjectId = fabricObjectId;
            PrimaryLocation = primaryLocation;
            RecoveryLocation = recoveryLocation;
            RecoverySubscriptionId = recoverySubscriptionId;
            RecoveryAvailabilityType = recoveryAvailabilityType;
            ProtectionProfileCustomInput = protectionProfileCustomInput;
            RecoveryResourceGroupId = recoveryResourceGroupId;
            PrimaryStagingStorageAccountCustomInput = primaryStagingStorageAccountCustomInput;
            RecoveryAvailabilitySetCustomInput = recoveryAvailabilitySetCustomInput;
            RecoveryVirtualNetworkCustomInput = recoveryVirtualNetworkCustomInput;
            RecoveryProximityPlacementGroupCustomInput = recoveryProximityPlacementGroupCustomInput;
            AutoProtectionOfDataDisk = autoProtectionOfDataDisk;
            VmDisks = vmDisks;
            VmManagedDisks = vmManagedDisks;
            MultiVmGroupName = multiVmGroupName;
            MultiVmGroupId = multiVmGroupId;
            RecoveryBootDiagStorageAccount = recoveryBootDiagStorageAccount;
            DiskEncryptionInfo = diskEncryptionInfo;
            RecoveryAvailabilityZone = recoveryAvailabilityZone;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the fabric specific object Id of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "fabricObjectId")]
        public string FabricObjectId { get; set; }

        /// <summary>
        /// Gets or sets the primary location for the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "primaryLocation")]
        public string PrimaryLocation { get; set; }

        /// <summary>
        /// Gets or sets the recovery location for the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryLocation")]
        public string RecoveryLocation { get; set; }

        /// <summary>
        /// Gets or sets the recovery subscription Id of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "recoverySubscriptionId")]
        public string RecoverySubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets the recovery availability type of the virtual machine.
        /// Possible values include: 'Single', 'AvailabilitySet',
        /// 'AvailabilityZone'
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAvailabilityType")]
        public string RecoveryAvailabilityType { get; set; }

        /// <summary>
        /// Gets or sets the protection profile custom inputs.
        /// </summary>
        [JsonProperty(PropertyName = "protectionProfileCustomInput")]
        public ProtectionProfileCustomDetails ProtectionProfileCustomInput { get; set; }

        /// <summary>
        /// Gets or sets the recovery resource group Id. Valid for V2
        /// scenarios.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryResourceGroupId")]
        public string RecoveryResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets the primary staging storage account input.
        /// </summary>
        [JsonProperty(PropertyName = "primaryStagingStorageAccountCustomInput")]
        public StorageAccountCustomDetails PrimaryStagingStorageAccountCustomInput { get; set; }

        /// <summary>
        /// Gets or sets the recovery availability set input.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAvailabilitySetCustomInput")]
        public RecoveryAvailabilitySetCustomDetails RecoveryAvailabilitySetCustomInput { get; set; }

        /// <summary>
        /// Gets or sets the recovery virtual network input.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryVirtualNetworkCustomInput")]
        public RecoveryVirtualNetworkCustomDetails RecoveryVirtualNetworkCustomInput { get; set; }

        /// <summary>
        /// Gets or sets the recovery proximity placement group custom input.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryProximityPlacementGroupCustomInput")]
        public RecoveryProximityPlacementGroupCustomDetails RecoveryProximityPlacementGroupCustomInput { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the auto protection is
        /// enabled. Possible values include: 'Disabled', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "autoProtectionOfDataDisk")]
        public string AutoProtectionOfDataDisk { get; set; }

        /// <summary>
        /// Gets or sets the list of vm disk inputs.
        /// </summary>
        [JsonProperty(PropertyName = "vmDisks")]
        public IList<A2AProtectionIntentDiskInputDetails> VmDisks { get; set; }

        /// <summary>
        /// Gets or sets the list of vm managed disk inputs.
        /// </summary>
        [JsonProperty(PropertyName = "vmManagedDisks")]
        public IList<A2AProtectionIntentManagedDiskInputDetails> VmManagedDisks { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group name.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVmGroupName { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group id.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupId")]
        public string MultiVmGroupId { get; set; }

        /// <summary>
        /// Gets or sets the boot diagnostic storage account.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryBootDiagStorageAccount")]
        public StorageAccountCustomDetails RecoveryBootDiagStorageAccount { get; set; }

        /// <summary>
        /// Gets or sets the recovery disk encryption information (for two pass
        /// flows).
        /// </summary>
        [JsonProperty(PropertyName = "diskEncryptionInfo")]
        public DiskEncryptionInfo DiskEncryptionInfo { get; set; }

        /// <summary>
        /// Gets or sets the recovery availability zone.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAvailabilityZone")]
        public string RecoveryAvailabilityZone { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FabricObjectId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FabricObjectId");
            }
            if (PrimaryLocation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PrimaryLocation");
            }
            if (RecoveryLocation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RecoveryLocation");
            }
            if (RecoverySubscriptionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RecoverySubscriptionId");
            }
            if (RecoveryAvailabilityType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RecoveryAvailabilityType");
            }
            if (RecoveryResourceGroupId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RecoveryResourceGroupId");
            }
            if (VmDisks != null)
            {
                foreach (var element in VmDisks)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (VmManagedDisks != null)
            {
                foreach (var element1 in VmManagedDisks)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
