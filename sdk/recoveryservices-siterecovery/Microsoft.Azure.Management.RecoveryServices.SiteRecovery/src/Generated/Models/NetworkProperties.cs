// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network Properties.
    /// </summary>
    public partial class NetworkProperties
    {
        /// <summary>
        /// Initializes a new instance of the NetworkProperties class.
        /// </summary>
        public NetworkProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkProperties class.
        /// </summary>
        /// <param name="fabricType">The Fabric Type.</param>
        /// <param name="subnets">The List of subnets.</param>
        /// <param name="friendlyName">The Friendly Name.</param>
        /// <param name="networkType">The Network Type.</param>
        public NetworkProperties(string fabricType = default(string), IList<Subnet> subnets = default(IList<Subnet>), string friendlyName = default(string), string networkType = default(string))
        {
            FabricType = fabricType;
            Subnets = subnets;
            FriendlyName = friendlyName;
            NetworkType = networkType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Fabric Type.
        /// </summary>
        [JsonProperty(PropertyName = "fabricType")]
        public string FabricType { get; set; }

        /// <summary>
        /// Gets or sets the List of subnets.
        /// </summary>
        [JsonProperty(PropertyName = "subnets")]
        public IList<Subnet> Subnets { get; set; }

        /// <summary>
        /// Gets or sets the Friendly Name.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the Network Type.
        /// </summary>
        [JsonProperty(PropertyName = "networkType")]
        public string NetworkType { get; set; }

    }
}
