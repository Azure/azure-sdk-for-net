// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// InMageRcmFailback mobility agent details.
    /// </summary>
    public partial class InMageRcmFailbackMobilityAgentDetails
    {
        /// <summary>
        /// Initializes a new instance of the
        /// InMageRcmFailbackMobilityAgentDetails class.
        /// </summary>
        public InMageRcmFailbackMobilityAgentDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// InMageRcmFailbackMobilityAgentDetails class.
        /// </summary>
        /// <param name="version">The agent version.</param>
        /// <param name="latestVersion">The latest agent version
        /// available.</param>
        /// <param name="driverVersion">The driver version.</param>
        /// <param name="latestUpgradableVersionWithoutReboot">The latest
        /// upgradeable version available without reboot.</param>
        /// <param name="agentVersionExpiryDate">The agent version expiry
        /// date.</param>
        /// <param name="driverVersionExpiryDate">The driver version expiry
        /// date.</param>
        /// <param name="lastHeartbeatUtc">The time of the last heartbeat
        /// received from the agent.</param>
        /// <param name="reasonsBlockingUpgrade">The whether update is possible
        /// or not.</param>
        /// <param name="isUpgradeable">A value indicating whether agent is
        /// upgradeable or not.</param>
        public InMageRcmFailbackMobilityAgentDetails(string version = default(string), string latestVersion = default(string), string driverVersion = default(string), string latestUpgradableVersionWithoutReboot = default(string), System.DateTime? agentVersionExpiryDate = default(System.DateTime?), System.DateTime? driverVersionExpiryDate = default(System.DateTime?), System.DateTime? lastHeartbeatUtc = default(System.DateTime?), IList<string> reasonsBlockingUpgrade = default(IList<string>), string isUpgradeable = default(string))
        {
            Version = version;
            LatestVersion = latestVersion;
            DriverVersion = driverVersion;
            LatestUpgradableVersionWithoutReboot = latestUpgradableVersionWithoutReboot;
            AgentVersionExpiryDate = agentVersionExpiryDate;
            DriverVersionExpiryDate = driverVersionExpiryDate;
            LastHeartbeatUtc = lastHeartbeatUtc;
            ReasonsBlockingUpgrade = reasonsBlockingUpgrade;
            IsUpgradeable = isUpgradeable;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the agent version.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets the latest agent version available.
        /// </summary>
        [JsonProperty(PropertyName = "latestVersion")]
        public string LatestVersion { get; private set; }

        /// <summary>
        /// Gets the driver version.
        /// </summary>
        [JsonProperty(PropertyName = "driverVersion")]
        public string DriverVersion { get; private set; }

        /// <summary>
        /// Gets the latest upgradeable version available without reboot.
        /// </summary>
        [JsonProperty(PropertyName = "latestUpgradableVersionWithoutReboot")]
        public string LatestUpgradableVersionWithoutReboot { get; private set; }

        /// <summary>
        /// Gets the agent version expiry date.
        /// </summary>
        [JsonProperty(PropertyName = "agentVersionExpiryDate")]
        public System.DateTime? AgentVersionExpiryDate { get; private set; }

        /// <summary>
        /// Gets the driver version expiry date.
        /// </summary>
        [JsonProperty(PropertyName = "driverVersionExpiryDate")]
        public System.DateTime? DriverVersionExpiryDate { get; private set; }

        /// <summary>
        /// Gets the time of the last heartbeat received from the agent.
        /// </summary>
        [JsonProperty(PropertyName = "lastHeartbeatUtc")]
        public System.DateTime? LastHeartbeatUtc { get; private set; }

        /// <summary>
        /// Gets the whether update is possible or not.
        /// </summary>
        [JsonProperty(PropertyName = "reasonsBlockingUpgrade")]
        public IList<string> ReasonsBlockingUpgrade { get; private set; }

        /// <summary>
        /// Gets a value indicating whether agent is upgradeable or not.
        /// </summary>
        [JsonProperty(PropertyName = "isUpgradeable")]
        public string IsUpgradeable { get; private set; }

    }
}
