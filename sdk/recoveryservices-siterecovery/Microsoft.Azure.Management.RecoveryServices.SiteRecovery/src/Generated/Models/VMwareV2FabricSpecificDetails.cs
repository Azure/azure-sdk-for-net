// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VMwareV2 fabric specific details.
    /// </summary>
    [Newtonsoft.Json.JsonObject("VMwareV2")]
    public partial class VMwareV2FabricSpecificDetails : FabricSpecificDetails
    {
        /// <summary>
        /// Initializes a new instance of the VMwareV2FabricSpecificDetails
        /// class.
        /// </summary>
        public VMwareV2FabricSpecificDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMwareV2FabricSpecificDetails
        /// class.
        /// </summary>
        /// <param name="vmwareSiteId">The ARM Id of the VMware site.</param>
        /// <param name="physicalSiteId">The ARM Id of the physical
        /// site.</param>
        /// <param name="migrationSolutionId">The Migration solution ARM
        /// Id.</param>
        /// <param name="serviceEndpoint">The service endpoint.</param>
        /// <param name="serviceResourceId">The service resource Id.</param>
        /// <param name="serviceContainerId">The service container Id.</param>
        /// <param name="processServers">The list of process servers.</param>
        public VMwareV2FabricSpecificDetails(string vmwareSiteId = default(string), string physicalSiteId = default(string), string migrationSolutionId = default(string), string serviceEndpoint = default(string), string serviceResourceId = default(string), string serviceContainerId = default(string), IList<ProcessServerDetails> processServers = default(IList<ProcessServerDetails>))
        {
            VmwareSiteId = vmwareSiteId;
            PhysicalSiteId = physicalSiteId;
            MigrationSolutionId = migrationSolutionId;
            ServiceEndpoint = serviceEndpoint;
            ServiceResourceId = serviceResourceId;
            ServiceContainerId = serviceContainerId;
            ProcessServers = processServers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the ARM Id of the VMware site.
        /// </summary>
        [JsonProperty(PropertyName = "vmwareSiteId")]
        public string VmwareSiteId { get; private set; }

        /// <summary>
        /// Gets the ARM Id of the physical site.
        /// </summary>
        [JsonProperty(PropertyName = "physicalSiteId")]
        public string PhysicalSiteId { get; private set; }

        /// <summary>
        /// Gets the Migration solution ARM Id.
        /// </summary>
        [JsonProperty(PropertyName = "migrationSolutionId")]
        public string MigrationSolutionId { get; private set; }

        /// <summary>
        /// Gets the service endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "serviceEndpoint")]
        public string ServiceEndpoint { get; private set; }

        /// <summary>
        /// Gets the service resource Id.
        /// </summary>
        [JsonProperty(PropertyName = "serviceResourceId")]
        public string ServiceResourceId { get; private set; }

        /// <summary>
        /// Gets the service container Id.
        /// </summary>
        [JsonProperty(PropertyName = "serviceContainerId")]
        public string ServiceContainerId { get; private set; }

        /// <summary>
        /// Gets the list of process servers.
        /// </summary>
        [JsonProperty(PropertyName = "processServers")]
        public IList<ProcessServerDetails> ProcessServers { get; private set; }

    }
}
