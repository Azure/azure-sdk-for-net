// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Samples
{
    public partial class Sample_ReplicationProtectionClusterOperationResultResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_TracksTheReplicationProtectionClusterAsyncOperation()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2025-01-01/examples/ReplicationProtectionClusters_GetOperationResults.json
            // this example is just showing the usage of "ReplicationProtectionClusters_GetOperationResults" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReplicationProtectionClusterOperationResultResource created on azure
            // for more information of creating ReplicationProtectionClusterOperationResultResource, please refer to the document of ReplicationProtectionClusterOperationResultResource
            string subscriptionId = "c183865e-6077-46f2-a3b1-deb0f4f4650a";
            string resourceGroupName = "resourceGroupPS1";
            string resourceName = "vault1";
            string fabricName = "eastus";
            string protectionContainerName = "eastus-container";
            string replicationProtectionClusterName = "cluster1";
            ResourceIdentifier jobId = new ResourceIdentifier("ea63a935-59d5-4b12-aff2-98773f63c116");
            ResourceIdentifier replicationProtectionClusterOperationResultResourceId = ReplicationProtectionClusterOperationResultResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, fabricName, protectionContainerName, replicationProtectionClusterName, jobId);
            ReplicationProtectionClusterOperationResultResource replicationProtectionClusterOperationResultResource = client.GetReplicationProtectionClusterOperationResultResource(replicationProtectionClusterOperationResultResourceId);

            // invoke the operation
            ReplicationProtectionClusterOperationResultResource result = await replicationProtectionClusterOperationResultResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ReplicationProtectionClusterData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
