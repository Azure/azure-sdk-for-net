// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// Existing recovery virtual network input.
    /// Serialized Name: ExistingRecoveryVirtualNetwork
    /// </summary>
    public partial class ExistingRecoveryVirtualNetwork : RecoveryVirtualNetworkCustomDetails
    {
        /// <summary> Initializes a new instance of ExistingRecoveryVirtualNetwork. </summary>
        /// <param name="recoveryVirtualNetworkId">
        /// The recovery virtual network Id. Will throw error, if resource does not exist.
        /// Serialized Name: ExistingRecoveryVirtualNetwork.recoveryVirtualNetworkId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="recoveryVirtualNetworkId"/> is null. </exception>
        public ExistingRecoveryVirtualNetwork(ResourceIdentifier recoveryVirtualNetworkId)
        {
            Argument.AssertNotNull(recoveryVirtualNetworkId, nameof(recoveryVirtualNetworkId));

            RecoveryVirtualNetworkId = recoveryVirtualNetworkId;
            ResourceType = "Existing";
        }

        /// <summary> Initializes a new instance of ExistingRecoveryVirtualNetwork. </summary>
        /// <param name="resourceType">
        /// The class type.
        /// Serialized Name: RecoveryVirtualNetworkCustomDetails.resourceType
        /// </param>
        /// <param name="recoveryVirtualNetworkId">
        /// The recovery virtual network Id. Will throw error, if resource does not exist.
        /// Serialized Name: ExistingRecoveryVirtualNetwork.recoveryVirtualNetworkId
        /// </param>
        /// <param name="recoverySubnetName">
        /// The recovery subnet name.
        /// Serialized Name: ExistingRecoveryVirtualNetwork.recoverySubnetName
        /// </param>
        internal ExistingRecoveryVirtualNetwork(string resourceType, ResourceIdentifier recoveryVirtualNetworkId, string recoverySubnetName) : base(resourceType)
        {
            RecoveryVirtualNetworkId = recoveryVirtualNetworkId;
            RecoverySubnetName = recoverySubnetName;
            ResourceType = resourceType ?? "Existing";
        }

        /// <summary>
        /// The recovery virtual network Id. Will throw error, if resource does not exist.
        /// Serialized Name: ExistingRecoveryVirtualNetwork.recoveryVirtualNetworkId
        /// </summary>
        public ResourceIdentifier RecoveryVirtualNetworkId { get; set; }
        /// <summary>
        /// The recovery subnet name.
        /// Serialized Name: ExistingRecoveryVirtualNetwork.recoverySubnetName
        /// </summary>
        public string RecoverySubnetName { get; set; }
    }
}
