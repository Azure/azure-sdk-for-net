// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class VmNicDetails
    {
        internal static VmNicDetails DeserializeVmNicDetails(JsonElement element)
        {
            Optional<string> nicId = default;
            Optional<string> replicaNicId = default;
            Optional<string> sourceNicArmId = default;
            Optional<string> vmNetworkName = default;
            Optional<string> recoveryVmNetworkId = default;
            Optional<IReadOnlyList<IPConfigDetails>> ipConfigs = default;
            Optional<string> selectionType = default;
            Optional<string> recoveryNetworkSecurityGroupId = default;
            Optional<bool> enableAcceleratedNetworkingOnRecovery = default;
            Optional<string> tfoVmNetworkId = default;
            Optional<string> tfoNetworkSecurityGroupId = default;
            Optional<bool> enableAcceleratedNetworkingOnTfo = default;
            Optional<string> recoveryNicName = default;
            Optional<string> recoveryNicResourceGroupName = default;
            Optional<bool> reuseExistingNic = default;
            Optional<string> tfoRecoveryNicName = default;
            Optional<string> tfoRecoveryNicResourceGroupName = default;
            Optional<bool> tfoReuseExistingNic = default;
            Optional<string> targetNicName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("nicId"))
                {
                    nicId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("replicaNicId"))
                {
                    replicaNicId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceNicArmId"))
                {
                    sourceNicArmId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vMNetworkName"))
                {
                    vmNetworkName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryVMNetworkId"))
                {
                    recoveryVmNetworkId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ipConfigs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<IPConfigDetails> array = new List<IPConfigDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(IPConfigDetails.DeserializeIPConfigDetails(item));
                    }
                    ipConfigs = array;
                    continue;
                }
                if (property.NameEquals("selectionType"))
                {
                    selectionType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryNetworkSecurityGroupId"))
                {
                    recoveryNetworkSecurityGroupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("enableAcceleratedNetworkingOnRecovery"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    enableAcceleratedNetworkingOnRecovery = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("tfoVMNetworkId"))
                {
                    tfoVmNetworkId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tfoNetworkSecurityGroupId"))
                {
                    tfoNetworkSecurityGroupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("enableAcceleratedNetworkingOnTfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    enableAcceleratedNetworkingOnTfo = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("recoveryNicName"))
                {
                    recoveryNicName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryNicResourceGroupName"))
                {
                    recoveryNicResourceGroupName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("reuseExistingNic"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reuseExistingNic = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("tfoRecoveryNicName"))
                {
                    tfoRecoveryNicName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tfoRecoveryNicResourceGroupName"))
                {
                    tfoRecoveryNicResourceGroupName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tfoReuseExistingNic"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    tfoReuseExistingNic = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("targetNicName"))
                {
                    targetNicName = property.Value.GetString();
                    continue;
                }
            }
            return new VmNicDetails(nicId.Value, replicaNicId.Value, sourceNicArmId.Value, vmNetworkName.Value, recoveryVmNetworkId.Value, Optional.ToList(ipConfigs), selectionType.Value, recoveryNetworkSecurityGroupId.Value, Optional.ToNullable(enableAcceleratedNetworkingOnRecovery), tfoVmNetworkId.Value, tfoNetworkSecurityGroupId.Value, Optional.ToNullable(enableAcceleratedNetworkingOnTfo), recoveryNicName.Value, recoveryNicResourceGroupName.Value, Optional.ToNullable(reuseExistingNic), tfoRecoveryNicName.Value, tfoRecoveryNicResourceGroupName.Value, Optional.ToNullable(tfoReuseExistingNic), targetNicName.Value);
        }
    }
}
