// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// InMageRcmFailback mobility agent details.
    /// Serialized Name: InMageRcmFailbackMobilityAgentDetails
    /// </summary>
    public partial class InMageRcmFailbackMobilityAgentDetails
    {
        /// <summary> Initializes a new instance of InMageRcmFailbackMobilityAgentDetails. </summary>
        internal InMageRcmFailbackMobilityAgentDetails()
        {
            ReasonsBlockingUpgrade = new ChangeTrackingList<AgentUpgradeBlockedReason>();
        }

        /// <summary> Initializes a new instance of InMageRcmFailbackMobilityAgentDetails. </summary>
        /// <param name="version">
        /// The agent version.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.version
        /// </param>
        /// <param name="latestVersion">
        /// The latest agent version available.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.latestVersion
        /// </param>
        /// <param name="driverVersion">
        /// The driver version.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.driverVersion
        /// </param>
        /// <param name="latestUpgradableVersionWithoutReboot">
        /// The latest upgradeable version available without reboot.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.latestUpgradableVersionWithoutReboot
        /// </param>
        /// <param name="agentVersionExpireOn">
        /// The agent version expiry date.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.agentVersionExpiryDate
        /// </param>
        /// <param name="driverVersionExpireOn">
        /// The driver version expiry date.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.driverVersionExpiryDate
        /// </param>
        /// <param name="lastHeartbeatReceivedOn">
        /// The time of the last heartbeat received from the agent.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.lastHeartbeatUtc
        /// </param>
        /// <param name="reasonsBlockingUpgrade">
        /// The whether update is possible or not.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.reasonsBlockingUpgrade
        /// </param>
        /// <param name="isUpgradeable">
        /// A value indicating whether agent is upgradeable or not.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.isUpgradeable
        /// </param>
        internal InMageRcmFailbackMobilityAgentDetails(string version, string latestVersion, string driverVersion, string latestUpgradableVersionWithoutReboot, DateTimeOffset? agentVersionExpireOn, DateTimeOffset? driverVersionExpireOn, DateTimeOffset? lastHeartbeatReceivedOn, IReadOnlyList<AgentUpgradeBlockedReason> reasonsBlockingUpgrade, string isUpgradeable)
        {
            Version = version;
            LatestVersion = latestVersion;
            DriverVersion = driverVersion;
            LatestUpgradableVersionWithoutReboot = latestUpgradableVersionWithoutReboot;
            AgentVersionExpireOn = agentVersionExpireOn;
            DriverVersionExpireOn = driverVersionExpireOn;
            LastHeartbeatReceivedOn = lastHeartbeatReceivedOn;
            ReasonsBlockingUpgrade = reasonsBlockingUpgrade;
            IsUpgradeable = isUpgradeable;
        }

        /// <summary>
        /// The agent version.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.version
        /// </summary>
        public string Version { get; }
        /// <summary>
        /// The latest agent version available.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.latestVersion
        /// </summary>
        public string LatestVersion { get; }
        /// <summary>
        /// The driver version.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.driverVersion
        /// </summary>
        public string DriverVersion { get; }
        /// <summary>
        /// The latest upgradeable version available without reboot.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.latestUpgradableVersionWithoutReboot
        /// </summary>
        public string LatestUpgradableVersionWithoutReboot { get; }
        /// <summary>
        /// The agent version expiry date.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.agentVersionExpiryDate
        /// </summary>
        public DateTimeOffset? AgentVersionExpireOn { get; }
        /// <summary>
        /// The driver version expiry date.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.driverVersionExpiryDate
        /// </summary>
        public DateTimeOffset? DriverVersionExpireOn { get; }
        /// <summary>
        /// The time of the last heartbeat received from the agent.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.lastHeartbeatUtc
        /// </summary>
        public DateTimeOffset? LastHeartbeatReceivedOn { get; }
        /// <summary>
        /// The whether update is possible or not.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.reasonsBlockingUpgrade
        /// </summary>
        public IReadOnlyList<AgentUpgradeBlockedReason> ReasonsBlockingUpgrade { get; }
        /// <summary>
        /// A value indicating whether agent is upgradeable or not.
        /// Serialized Name: InMageRcmFailbackMobilityAgentDetails.isUpgradeable
        /// </summary>
        public string IsUpgradeable { get; }
    }
}
