// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class VMwareV2FabricSpecificDetails
    {
        internal static VMwareV2FabricSpecificDetails DeserializeVMwareV2FabricSpecificDetails(JsonElement element)
        {
            Optional<string> vmwareSiteId = default;
            Optional<string> physicalSiteId = default;
            Optional<string> migrationSolutionId = default;
            Optional<string> serviceEndpoint = default;
            Optional<string> serviceResourceId = default;
            Optional<string> serviceContainerId = default;
            Optional<IReadOnlyList<ProcessServerDetails>> processServers = default;
            string instanceType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("vmwareSiteId"))
                {
                    vmwareSiteId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("physicalSiteId"))
                {
                    physicalSiteId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("migrationSolutionId"))
                {
                    migrationSolutionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serviceEndpoint"))
                {
                    serviceEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serviceResourceId"))
                {
                    serviceResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serviceContainerId"))
                {
                    serviceContainerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("processServers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ProcessServerDetails> array = new List<ProcessServerDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ProcessServerDetails.DeserializeProcessServerDetails(item));
                    }
                    processServers = array;
                    continue;
                }
                if (property.NameEquals("instanceType"))
                {
                    instanceType = property.Value.GetString();
                    continue;
                }
            }
            return new VMwareV2FabricSpecificDetails(instanceType, vmwareSiteId.Value, physicalSiteId.Value, migrationSolutionId.Value, serviceEndpoint.Value, serviceResourceId.Value, serviceContainerId.Value, Optional.ToList(processServers));
        }
    }
}
