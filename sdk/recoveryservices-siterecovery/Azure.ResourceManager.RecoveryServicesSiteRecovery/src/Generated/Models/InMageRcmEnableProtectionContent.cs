// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// InMageRcm specific enable protection input.
    /// Serialized Name: InMageRcmEnableProtectionInput
    /// </summary>
    public partial class InMageRcmEnableProtectionContent : EnableProtectionProviderSpecificContent
    {
        /// <summary> Initializes a new instance of InMageRcmEnableProtectionContent. </summary>
        /// <param name="fabricDiscoveryMachineId">
        /// The ARM Id of discovered machine.
        /// Serialized Name: InMageRcmEnableProtectionInput.fabricDiscoveryMachineId
        /// </param>
        /// <param name="targetResourceGroupId">
        /// The target resource group ARM Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetResourceGroupId
        /// </param>
        /// <param name="processServerId">
        /// The process server Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.processServerId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="fabricDiscoveryMachineId"/>, <paramref name="targetResourceGroupId"/> or <paramref name="processServerId"/> is null. </exception>
        public InMageRcmEnableProtectionContent(string fabricDiscoveryMachineId, ResourceIdentifier targetResourceGroupId, string processServerId)
        {
            Argument.AssertNotNull(fabricDiscoveryMachineId, nameof(fabricDiscoveryMachineId));
            Argument.AssertNotNull(targetResourceGroupId, nameof(targetResourceGroupId));
            Argument.AssertNotNull(processServerId, nameof(processServerId));

            FabricDiscoveryMachineId = fabricDiscoveryMachineId;
            DisksToInclude = new ChangeTrackingList<InMageRcmDiskContent>();
            TargetResourceGroupId = targetResourceGroupId;
            ProcessServerId = processServerId;
            InstanceType = "InMageRcm";
        }

        /// <summary>
        /// The ARM Id of discovered machine.
        /// Serialized Name: InMageRcmEnableProtectionInput.fabricDiscoveryMachineId
        /// </summary>
        public string FabricDiscoveryMachineId { get; }
        /// <summary>
        /// The disks to include list.
        /// Serialized Name: InMageRcmEnableProtectionInput.disksToInclude
        /// </summary>
        public IList<InMageRcmDiskContent> DisksToInclude { get; }
        /// <summary>
        /// The default disk input.
        /// Serialized Name: InMageRcmEnableProtectionInput.disksDefault
        /// </summary>
        public InMageRcmDisksDefaultContent DisksDefault { get; set; }
        /// <summary>
        /// The target resource group ARM Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetResourceGroupId
        /// </summary>
        public ResourceIdentifier TargetResourceGroupId { get; }
        /// <summary>
        /// The selected target network ARM Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetNetworkId
        /// </summary>
        public ResourceIdentifier TargetNetworkId { get; set; }
        /// <summary>
        /// The selected test network ARM Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.testNetworkId
        /// </summary>
        public ResourceIdentifier TestNetworkId { get; set; }
        /// <summary>
        /// The selected target subnet name.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetSubnetName
        /// </summary>
        public string TargetSubnetName { get; set; }
        /// <summary>
        /// The selected test subnet name.
        /// Serialized Name: InMageRcmEnableProtectionInput.testSubnetName
        /// </summary>
        public string TestSubnetName { get; set; }
        /// <summary>
        /// The target VM name.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetVmName
        /// </summary>
        public string TargetVmName { get; set; }
        /// <summary>
        /// The target VM size.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetVmSize
        /// </summary>
        public string TargetVmSize { get; set; }
        /// <summary>
        /// The license type.
        /// Serialized Name: InMageRcmEnableProtectionInput.licenseType
        /// </summary>
        public LicenseType? LicenseType { get; set; }
        /// <summary>
        /// The target availability set ARM Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetAvailabilitySetId
        /// </summary>
        public ResourceIdentifier TargetAvailabilitySetId { get; set; }
        /// <summary>
        /// The target availability zone.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetAvailabilityZone
        /// </summary>
        public string TargetAvailabilityZone { get; set; }
        /// <summary>
        /// The target proximity placement group Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetProximityPlacementGroupId
        /// </summary>
        public ResourceIdentifier TargetProximityPlacementGroupId { get; set; }
        /// <summary>
        /// The target boot diagnostics storage account ARM Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.targetBootDiagnosticsStorageAccountId
        /// </summary>
        public ResourceIdentifier TargetBootDiagnosticsStorageAccountId { get; set; }
        /// <summary>
        /// The run-as account Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.runAsAccountId
        /// </summary>
        public string RunAsAccountId { get; set; }
        /// <summary>
        /// The process server Id.
        /// Serialized Name: InMageRcmEnableProtectionInput.processServerId
        /// </summary>
        public string ProcessServerId { get; }
        /// <summary>
        /// The multi VM group name.
        /// Serialized Name: InMageRcmEnableProtectionInput.multiVmGroupName
        /// </summary>
        public string MultiVmGroupName { get; set; }
    }
}
