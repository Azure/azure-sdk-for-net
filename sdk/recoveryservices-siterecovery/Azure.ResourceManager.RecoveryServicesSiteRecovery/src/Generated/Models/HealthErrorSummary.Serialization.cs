// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class HealthErrorSummary
    {
        internal static HealthErrorSummary DeserializeHealthErrorSummary(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> summaryCode = default;
            Core.Optional<HealthErrorCategory> category = default;
            Core.Optional<SiteRecoveryErrorSeverity> severity = default;
            Core.Optional<string> summaryMessage = default;
            Core.Optional<string> affectedResourceType = default;
            Core.Optional<string> affectedResourceSubtype = default;
            Core.Optional<IReadOnlyList<string>> affectedResourceCorrelationIds = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("summaryCode"u8))
                {
                    summaryCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("category"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    category = new HealthErrorCategory(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("severity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    severity = new SiteRecoveryErrorSeverity(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("summaryMessage"u8))
                {
                    summaryMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("affectedResourceType"u8))
                {
                    affectedResourceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("affectedResourceSubtype"u8))
                {
                    affectedResourceSubtype = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("affectedResourceCorrelationIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    affectedResourceCorrelationIds = array;
                    continue;
                }
            }
            return new HealthErrorSummary(summaryCode.Value, Core.Optional.ToNullable(category), Core.Optional.ToNullable(severity), summaryMessage.Value, affectedResourceType.Value, affectedResourceSubtype.Value, Core.Optional.ToList(affectedResourceCorrelationIds));
        }
    }
}
