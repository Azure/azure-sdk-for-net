// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary> A2A provider specific cluster recovery point details. </summary>
    public partial class A2AClusterRecoveryPointDetails : ClusterProviderSpecificRecoveryPointDetails
    {
        /// <summary> Initializes a new instance of <see cref="A2AClusterRecoveryPointDetails"/>. </summary>
        internal A2AClusterRecoveryPointDetails()
        {
            Nodes = new ChangeTrackingList<ResourceIdentifier>();
            InstanceType = "A2A";
        }

        /// <summary> Initializes a new instance of <see cref="A2AClusterRecoveryPointDetails"/>. </summary>
        /// <param name="instanceType"> Gets the provider type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="recoveryPointSyncType"> A value indicating whether the recovery point is multi VM consistent. </param>
        /// <param name="nodes"> The list of nodes representing the cluster. </param>
        internal A2AClusterRecoveryPointDetails(string instanceType, IDictionary<string, BinaryData> serializedAdditionalRawData, RecoveryPointSyncType? recoveryPointSyncType, IReadOnlyList<ResourceIdentifier> nodes) : base(instanceType, serializedAdditionalRawData)
        {
            RecoveryPointSyncType = recoveryPointSyncType;
            Nodes = nodes;
            InstanceType = instanceType ?? "A2A";
        }

        /// <summary> A value indicating whether the recovery point is multi VM consistent. </summary>
        public RecoveryPointSyncType? RecoveryPointSyncType { get; }
        /// <summary> The list of nodes representing the cluster. </summary>
        public IReadOnlyList<ResourceIdentifier> Nodes { get; }
    }
}
