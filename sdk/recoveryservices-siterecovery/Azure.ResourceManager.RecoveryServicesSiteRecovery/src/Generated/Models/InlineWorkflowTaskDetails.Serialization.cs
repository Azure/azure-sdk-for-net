// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class InlineWorkflowTaskDetails
    {
        internal static InlineWorkflowTaskDetails DeserializeInlineWorkflowTaskDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<string>> workflowIds = default;
            string instanceType = default;
            Optional<IReadOnlyList<ASRTask>> childTasks = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("workflowIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    workflowIds = array;
                    continue;
                }
                if (property.NameEquals("instanceType"u8))
                {
                    instanceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("childTasks"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ASRTask> array = new List<ASRTask>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ASRTask.DeserializeASRTask(item));
                    }
                    childTasks = array;
                    continue;
                }
            }
            return new InlineWorkflowTaskDetails(instanceType, Optional.ToList(childTasks), Optional.ToList(workflowIds));
        }
    }
}
