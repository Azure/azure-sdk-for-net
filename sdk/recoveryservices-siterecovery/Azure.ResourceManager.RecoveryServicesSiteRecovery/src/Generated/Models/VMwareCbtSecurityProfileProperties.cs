// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// VMwareCbt security profile input.
    /// Serialized Name: VMwareCbtSecurityProfileProperties
    /// </summary>
    public partial class VMwareCbtSecurityProfileProperties
    {
        /// <summary> Initializes a new instance of VMwareCbtSecurityProfileProperties. </summary>
        public VMwareCbtSecurityProfileProperties()
        {
        }

        /// <summary> Initializes a new instance of VMwareCbtSecurityProfileProperties. </summary>
        /// <param name="targetVmSecurityType">
        /// The target VM security type.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.targetVmSecurityType
        /// </param>
        /// <param name="isTargetVmSecureBootEnabled">
        /// A value indicating whether secure boot to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmSecureBootEnabled
        /// </param>
        /// <param name="isTargetVmTpmEnabled">
        /// A value indicating whether trusted platform module to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmTpmEnabled
        /// </param>
        /// <param name="isTargetVmIntegrityMonitoringEnabled">
        /// A value indicating whether integrity monitoring to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmIntegrityMonitoringEnabled
        /// </param>
        /// <param name="isTargetVmConfidentialEncryptionEnabled">
        /// A value indicating whether confidential compute encryption to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmConfidentialEncryptionEnabled
        /// </param>
        internal VMwareCbtSecurityProfileProperties(VirtualMachineSecurityType? targetVmSecurityType, string isTargetVmSecureBootEnabled, string isTargetVmTpmEnabled, string isTargetVmIntegrityMonitoringEnabled, string isTargetVmConfidentialEncryptionEnabled)
        {
            TargetVmSecurityType = targetVmSecurityType;
            IsTargetVmSecureBootEnabled = isTargetVmSecureBootEnabled;
            IsTargetVmTpmEnabled = isTargetVmTpmEnabled;
            IsTargetVmIntegrityMonitoringEnabled = isTargetVmIntegrityMonitoringEnabled;
            IsTargetVmConfidentialEncryptionEnabled = isTargetVmConfidentialEncryptionEnabled;
        }

        /// <summary>
        /// The target VM security type.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.targetVmSecurityType
        /// </summary>
        public VirtualMachineSecurityType? TargetVmSecurityType { get; set; }
        /// <summary>
        /// A value indicating whether secure boot to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmSecureBootEnabled
        /// </summary>
        public string IsTargetVmSecureBootEnabled { get; set; }
        /// <summary>
        /// A value indicating whether trusted platform module to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmTpmEnabled
        /// </summary>
        public string IsTargetVmTpmEnabled { get; set; }
        /// <summary>
        /// A value indicating whether integrity monitoring to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmIntegrityMonitoringEnabled
        /// </summary>
        public string IsTargetVmIntegrityMonitoringEnabled { get; set; }
        /// <summary>
        /// A value indicating whether confidential compute encryption to be enabled.
        /// Serialized Name: VMwareCbtSecurityProfileProperties.isTargetVmConfidentialEncryptionEnabled
        /// </summary>
        public string IsTargetVmConfidentialEncryptionEnabled { get; set; }
    }
}
