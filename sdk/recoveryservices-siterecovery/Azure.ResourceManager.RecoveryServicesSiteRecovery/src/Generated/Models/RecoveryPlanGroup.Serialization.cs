// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class RecoveryPlanGroup : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("groupType");
            writer.WriteStringValue(GroupType.ToString());
            if (Optional.IsCollectionDefined(ReplicationProtectedItems))
            {
                writer.WritePropertyName("replicationProtectedItems");
                writer.WriteStartArray();
                foreach (var item in ReplicationProtectedItems)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(StartGroupActions))
            {
                writer.WritePropertyName("startGroupActions");
                writer.WriteStartArray();
                foreach (var item in StartGroupActions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(EndGroupActions))
            {
                writer.WritePropertyName("endGroupActions");
                writer.WriteStartArray();
                foreach (var item in EndGroupActions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static RecoveryPlanGroup DeserializeRecoveryPlanGroup(JsonElement element)
        {
            RecoveryPlanGroupType groupType = default;
            Optional<IList<RecoveryPlanProtectedItem>> replicationProtectedItems = default;
            Optional<IList<RecoveryPlanAction>> startGroupActions = default;
            Optional<IList<RecoveryPlanAction>> endGroupActions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("groupType"))
                {
                    groupType = new RecoveryPlanGroupType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("replicationProtectedItems"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RecoveryPlanProtectedItem> array = new List<RecoveryPlanProtectedItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RecoveryPlanProtectedItem.DeserializeRecoveryPlanProtectedItem(item));
                    }
                    replicationProtectedItems = array;
                    continue;
                }
                if (property.NameEquals("startGroupActions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RecoveryPlanAction> array = new List<RecoveryPlanAction>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RecoveryPlanAction.DeserializeRecoveryPlanAction(item));
                    }
                    startGroupActions = array;
                    continue;
                }
                if (property.NameEquals("endGroupActions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RecoveryPlanAction> array = new List<RecoveryPlanAction>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RecoveryPlanAction.DeserializeRecoveryPlanAction(item));
                    }
                    endGroupActions = array;
                    continue;
                }
            }
            return new RecoveryPlanGroup(groupType, Optional.ToList(replicationProtectedItems), Optional.ToList(startGroupActions), Optional.ToList(endGroupActions));
        }
    }
}
