// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// Fabric properties.
    /// Serialized Name: FabricProperties
    /// </summary>
    public partial class SiteRecoveryFabricProperties
    {
        /// <summary> Initializes a new instance of SiteRecoveryFabricProperties. </summary>
        internal SiteRecoveryFabricProperties()
        {
            HealthErrorDetails = new ChangeTrackingList<SiteRecoveryHealthError>();
        }

        /// <summary> Initializes a new instance of SiteRecoveryFabricProperties. </summary>
        /// <param name="friendlyName">
        /// Friendly name of the fabric.
        /// Serialized Name: FabricProperties.friendlyName
        /// </param>
        /// <param name="encryptionDetails">
        /// Encryption details for the fabric.
        /// Serialized Name: FabricProperties.encryptionDetails
        /// </param>
        /// <param name="rolloverEncryptionDetails">
        /// Rollover encryption details for the fabric.
        /// Serialized Name: FabricProperties.rolloverEncryptionDetails
        /// </param>
        /// <param name="internalIdentifier">
        /// Dra Registration Id.
        /// Serialized Name: FabricProperties.internalIdentifier
        /// </param>
        /// <param name="bcdrState">
        /// BCDR state of the fabric.
        /// Serialized Name: FabricProperties.bcdrState
        /// </param>
        /// <param name="customDetails">
        /// Fabric specific settings.
        /// Serialized Name: FabricProperties.customDetails
        /// Please note <see cref="SiteRecoveryFabricSpecificDetails"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SiteRecoveryFabricProviderSpecificDetails"/>, <see cref="HyperVSiteDetails"/>, <see cref="InMageRcmFabricSpecificDetails"/>, <see cref="VmmDetails"/>, <see cref="VMwareDetails"/> and <see cref="VMwareV2FabricSpecificDetails"/>.
        /// </param>
        /// <param name="healthErrorDetails">
        /// Fabric health error details.
        /// Serialized Name: FabricProperties.healthErrorDetails
        /// </param>
        /// <param name="health">
        /// Health of fabric.
        /// Serialized Name: FabricProperties.health
        /// </param>
        internal SiteRecoveryFabricProperties(string friendlyName, SiteRecoveryEncryptionDetails encryptionDetails, SiteRecoveryEncryptionDetails rolloverEncryptionDetails, string internalIdentifier, string bcdrState, SiteRecoveryFabricSpecificDetails customDetails, IReadOnlyList<SiteRecoveryHealthError> healthErrorDetails, string health)
        {
            FriendlyName = friendlyName;
            EncryptionDetails = encryptionDetails;
            RolloverEncryptionDetails = rolloverEncryptionDetails;
            InternalIdentifier = internalIdentifier;
            BcdrState = bcdrState;
            CustomDetails = customDetails;
            HealthErrorDetails = healthErrorDetails;
            Health = health;
        }

        /// <summary>
        /// Friendly name of the fabric.
        /// Serialized Name: FabricProperties.friendlyName
        /// </summary>
        public string FriendlyName { get; }
        /// <summary>
        /// Encryption details for the fabric.
        /// Serialized Name: FabricProperties.encryptionDetails
        /// </summary>
        public SiteRecoveryEncryptionDetails EncryptionDetails { get; }
        /// <summary>
        /// Rollover encryption details for the fabric.
        /// Serialized Name: FabricProperties.rolloverEncryptionDetails
        /// </summary>
        public SiteRecoveryEncryptionDetails RolloverEncryptionDetails { get; }
        /// <summary>
        /// Dra Registration Id.
        /// Serialized Name: FabricProperties.internalIdentifier
        /// </summary>
        public string InternalIdentifier { get; }
        /// <summary>
        /// BCDR state of the fabric.
        /// Serialized Name: FabricProperties.bcdrState
        /// </summary>
        public string BcdrState { get; }
        /// <summary>
        /// Fabric specific settings.
        /// Serialized Name: FabricProperties.customDetails
        /// Please note <see cref="SiteRecoveryFabricSpecificDetails"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="SiteRecoveryFabricProviderSpecificDetails"/>, <see cref="HyperVSiteDetails"/>, <see cref="InMageRcmFabricSpecificDetails"/>, <see cref="VmmDetails"/>, <see cref="VMwareDetails"/> and <see cref="VMwareV2FabricSpecificDetails"/>.
        /// </summary>
        public SiteRecoveryFabricSpecificDetails CustomDetails { get; }
        /// <summary>
        /// Fabric health error details.
        /// Serialized Name: FabricProperties.healthErrorDetails
        /// </summary>
        public IReadOnlyList<SiteRecoveryHealthError> HealthErrorDetails { get; }
        /// <summary>
        /// Health of fabric.
        /// Serialized Name: FabricProperties.health
        /// </summary>
        public string Health { get; }
    }
}
