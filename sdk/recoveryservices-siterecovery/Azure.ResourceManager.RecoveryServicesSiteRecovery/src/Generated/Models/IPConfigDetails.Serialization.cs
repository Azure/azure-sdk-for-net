// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class IPConfigDetails
    {
        internal static IPConfigDetails DeserializeIPConfigDetails(JsonElement element)
        {
            Optional<string> name = default;
            Optional<bool> isPrimary = default;
            Optional<string> subnetName = default;
            Optional<string> staticIPAddress = default;
            Optional<string> ipAddressType = default;
            Optional<bool> isSeletedForFailover = default;
            Optional<string> recoverySubnetName = default;
            Optional<string> recoveryStaticIPAddress = default;
            Optional<string> recoveryIPAddressType = default;
            Optional<string> recoveryPublicIPAddressId = default;
            Optional<IReadOnlyList<string>> recoveryLBBackendAddressPoolIds = default;
            Optional<string> tfoSubnetName = default;
            Optional<string> tfoStaticIPAddress = default;
            Optional<string> tfoPublicIPAddressId = default;
            Optional<IReadOnlyList<string>> tfoLBBackendAddressPoolIds = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isPrimary"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isPrimary = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("subnetName"))
                {
                    subnetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("staticIPAddress"))
                {
                    staticIPAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ipAddressType"))
                {
                    ipAddressType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isSeletedForFailover"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isSeletedForFailover = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("recoverySubnetName"))
                {
                    recoverySubnetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryStaticIPAddress"))
                {
                    recoveryStaticIPAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryIPAddressType"))
                {
                    recoveryIPAddressType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryPublicIPAddressId"))
                {
                    recoveryPublicIPAddressId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recoveryLBBackendAddressPoolIds"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    recoveryLBBackendAddressPoolIds = array;
                    continue;
                }
                if (property.NameEquals("tfoSubnetName"))
                {
                    tfoSubnetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tfoStaticIPAddress"))
                {
                    tfoStaticIPAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tfoPublicIPAddressId"))
                {
                    tfoPublicIPAddressId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tfoLBBackendAddressPoolIds"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    tfoLBBackendAddressPoolIds = array;
                    continue;
                }
            }
            return new IPConfigDetails(name.Value, Optional.ToNullable(isPrimary), subnetName.Value, staticIPAddress.Value, ipAddressType.Value, Optional.ToNullable(isSeletedForFailover), recoverySubnetName.Value, recoveryStaticIPAddress.Value, recoveryIPAddressType.Value, recoveryPublicIPAddressId.Value, Optional.ToList(recoveryLBBackendAddressPoolIds), tfoSubnetName.Value, tfoStaticIPAddress.Value, tfoPublicIPAddressId.Value, Optional.ToList(tfoLBBackendAddressPoolIds));
        }
    }
}
