// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// Existing storage account input.
    /// Serialized Name: ExistingStorageAccount
    /// </summary>
    public partial class ExistingStorageAccount : StorageAccountCustomDetails
    {
        /// <summary> Initializes a new instance of ExistingStorageAccount. </summary>
        /// <param name="azureStorageAccountId">
        /// The storage account Arm Id. Throw error, if resource does not exists.
        /// Serialized Name: ExistingStorageAccount.azureStorageAccountId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureStorageAccountId"/> is null. </exception>
        public ExistingStorageAccount(ResourceIdentifier azureStorageAccountId)
        {
            Argument.AssertNotNull(azureStorageAccountId, nameof(azureStorageAccountId));

            AzureStorageAccountId = azureStorageAccountId;
            ResourceType = "Existing";
        }

        /// <summary> Initializes a new instance of ExistingStorageAccount. </summary>
        /// <param name="resourceType">
        /// The class type.
        /// Serialized Name: StorageAccountCustomDetails.resourceType
        /// </param>
        /// <param name="azureStorageAccountId">
        /// The storage account Arm Id. Throw error, if resource does not exists.
        /// Serialized Name: ExistingStorageAccount.azureStorageAccountId
        /// </param>
        internal ExistingStorageAccount(string resourceType, ResourceIdentifier azureStorageAccountId) : base(resourceType)
        {
            AzureStorageAccountId = azureStorageAccountId;
            ResourceType = resourceType ?? "Existing";
        }

        /// <summary>
        /// The storage account Arm Id. Throw error, if resource does not exists.
        /// Serialized Name: ExistingStorageAccount.azureStorageAccountId
        /// </summary>
        public ResourceIdentifier AzureStorageAccountId { get; set; }
    }
}
