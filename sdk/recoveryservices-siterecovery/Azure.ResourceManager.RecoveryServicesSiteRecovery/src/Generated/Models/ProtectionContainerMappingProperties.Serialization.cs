// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class ProtectionContainerMappingProperties
    {
        internal static ProtectionContainerMappingProperties DeserializeProtectionContainerMappingProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<ResourceIdentifier> targetProtectionContainerId = default;
            Core.Optional<string> targetProtectionContainerFriendlyName = default;
            Core.Optional<ProtectionContainerMappingProviderSpecificDetails> providerSpecificDetails = default;
            Core.Optional<string> health = default;
            Core.Optional<IReadOnlyList<SiteRecoveryHealthError>> healthErrorDetails = default;
            Core.Optional<ResourceIdentifier> policyId = default;
            Core.Optional<string> state = default;
            Core.Optional<string> sourceProtectionContainerFriendlyName = default;
            Core.Optional<string> sourceFabricFriendlyName = default;
            Core.Optional<string> targetFabricFriendlyName = default;
            Core.Optional<string> policyFriendlyName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("targetProtectionContainerId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetProtectionContainerId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("targetProtectionContainerFriendlyName"u8))
                {
                    targetProtectionContainerFriendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("providerSpecificDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    providerSpecificDetails = ProtectionContainerMappingProviderSpecificDetails.DeserializeProtectionContainerMappingProviderSpecificDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("health"u8))
                {
                    health = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("healthErrorDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<SiteRecoveryHealthError> array = new List<SiteRecoveryHealthError>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SiteRecoveryHealthError.DeserializeSiteRecoveryHealthError(item));
                    }
                    healthErrorDetails = array;
                    continue;
                }
                if (property.NameEquals("policyId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    policyId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("state"u8))
                {
                    state = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceProtectionContainerFriendlyName"u8))
                {
                    sourceProtectionContainerFriendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceFabricFriendlyName"u8))
                {
                    sourceFabricFriendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("targetFabricFriendlyName"u8))
                {
                    targetFabricFriendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("policyFriendlyName"u8))
                {
                    policyFriendlyName = property.Value.GetString();
                    continue;
                }
            }
            return new ProtectionContainerMappingProperties(targetProtectionContainerId.Value, targetProtectionContainerFriendlyName.Value, providerSpecificDetails.Value, health.Value, Core.Optional.ToList(healthErrorDetails), policyId.Value, state.Value, sourceProtectionContainerFriendlyName.Value, sourceFabricFriendlyName.Value, targetFabricFriendlyName.Value, policyFriendlyName.Value);
        }
    }
}
