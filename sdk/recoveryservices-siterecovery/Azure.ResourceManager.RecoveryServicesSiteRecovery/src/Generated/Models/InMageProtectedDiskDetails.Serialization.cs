// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class InMageProtectedDiskDetails
    {
        internal static InMageProtectedDiskDetails DeserializeInMageProtectedDiskDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> diskId = default;
            Core.Optional<string> diskName = default;
            Core.Optional<string> protectionStage = default;
            Core.Optional<string> healthErrorCode = default;
            Core.Optional<long> rpoInSeconds = default;
            Core.Optional<string> resyncRequired = default;
            Core.Optional<int> resyncProgressPercentage = default;
            Core.Optional<long> resyncDurationInSeconds = default;
            Core.Optional<long> diskCapacityInBytes = default;
            Core.Optional<long> fileSystemCapacityInBytes = default;
            Core.Optional<double> sourceDataInMB = default;
            Core.Optional<double> psDataInMB = default;
            Core.Optional<double> targetDataInMB = default;
            Core.Optional<string> diskResized = default;
            Core.Optional<DateTimeOffset> lastRpoCalculatedTime = default;
            Core.Optional<long> resyncProcessedBytes = default;
            Core.Optional<long> resyncTotalTransferredBytes = default;
            Core.Optional<long> resyncLast15MinutesTransferredBytes = default;
            Core.Optional<DateTimeOffset> resyncLastDataTransferTimeUTC = default;
            Core.Optional<DateTimeOffset> resyncStartTime = default;
            Core.Optional<string> progressHealth = default;
            Core.Optional<string> progressStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("diskId"u8))
                {
                    diskId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("diskName"u8))
                {
                    diskName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protectionStage"u8))
                {
                    protectionStage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("healthErrorCode"u8))
                {
                    healthErrorCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rpoInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    rpoInSeconds = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("resyncRequired"u8))
                {
                    resyncRequired = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resyncProgressPercentage"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncProgressPercentage = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("resyncDurationInSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncDurationInSeconds = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("diskCapacityInBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    diskCapacityInBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("fileSystemCapacityInBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    fileSystemCapacityInBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("sourceDataInMB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sourceDataInMB = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("psDataInMB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    psDataInMB = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("targetDataInMB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetDataInMB = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("diskResized"u8))
                {
                    diskResized = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastRpoCalculatedTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastRpoCalculatedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("resyncProcessedBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncProcessedBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("resyncTotalTransferredBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncTotalTransferredBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("resyncLast15MinutesTransferredBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncLast15MinutesTransferredBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("resyncLastDataTransferTimeUTC"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncLastDataTransferTimeUTC = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("resyncStartTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resyncStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("progressHealth"u8))
                {
                    progressHealth = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("progressStatus"u8))
                {
                    progressStatus = property.Value.GetString();
                    continue;
                }
            }
            return new InMageProtectedDiskDetails(diskId.Value, diskName.Value, protectionStage.Value, healthErrorCode.Value, Core.Optional.ToNullable(rpoInSeconds), resyncRequired.Value, Core.Optional.ToNullable(resyncProgressPercentage), Core.Optional.ToNullable(resyncDurationInSeconds), Core.Optional.ToNullable(diskCapacityInBytes), Core.Optional.ToNullable(fileSystemCapacityInBytes), Core.Optional.ToNullable(sourceDataInMB), Core.Optional.ToNullable(psDataInMB), Core.Optional.ToNullable(targetDataInMB), diskResized.Value, Core.Optional.ToNullable(lastRpoCalculatedTime), Core.Optional.ToNullable(resyncProcessedBytes), Core.Optional.ToNullable(resyncTotalTransferredBytes), Core.Optional.ToNullable(resyncLast15MinutesTransferredBytes), Core.Optional.ToNullable(resyncLastDataTransferTimeUTC), Core.Optional.ToNullable(resyncStartTime), progressHealth.Value, progressStatus.Value);
        }
    }
}
