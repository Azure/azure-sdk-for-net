// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary> Logical Network Properties. </summary>
    public partial class SiteRecoveryLogicalNetworkProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="SiteRecoveryLogicalNetworkProperties"/>. </summary>
        internal SiteRecoveryLogicalNetworkProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SiteRecoveryLogicalNetworkProperties"/>. </summary>
        /// <param name="friendlyName"> The Friendly Name. </param>
        /// <param name="networkVirtualizationStatus"> A value indicating whether Network Virtualization is enabled for the logical network. </param>
        /// <param name="logicalNetworkUsage"> A value indicating whether logical network is used as private test network by test failover. </param>
        /// <param name="logicalNetworkDefinitionsStatus"> A value indicating whether logical network definitions are isolated. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal SiteRecoveryLogicalNetworkProperties(string friendlyName, string networkVirtualizationStatus, string logicalNetworkUsage, string logicalNetworkDefinitionsStatus, Dictionary<string, BinaryData> rawData)
        {
            FriendlyName = friendlyName;
            NetworkVirtualizationStatus = networkVirtualizationStatus;
            LogicalNetworkUsage = logicalNetworkUsage;
            LogicalNetworkDefinitionsStatus = logicalNetworkDefinitionsStatus;
            _rawData = rawData;
        }

        /// <summary> The Friendly Name. </summary>
        public string FriendlyName { get; }
        /// <summary> A value indicating whether Network Virtualization is enabled for the logical network. </summary>
        public string NetworkVirtualizationStatus { get; }
        /// <summary> A value indicating whether logical network is used as private test network by test failover. </summary>
        public string LogicalNetworkUsage { get; }
        /// <summary> A value indicating whether logical network definitions are isolated. </summary>
        public string LogicalNetworkDefinitionsStatus { get; }
    }
}
