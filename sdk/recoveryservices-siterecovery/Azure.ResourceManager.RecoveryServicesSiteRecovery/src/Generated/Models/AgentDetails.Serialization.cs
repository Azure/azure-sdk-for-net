// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class AgentDetails
    {
        internal static AgentDetails DeserializeAgentDetails(JsonElement element)
        {
            Optional<string> agentId = default;
            Optional<string> machineId = default;
            Optional<string> biosId = default;
            Optional<string> fqdn = default;
            Optional<IReadOnlyList<AgentDiskDetails>> disks = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("agentId"))
                {
                    agentId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("machineId"))
                {
                    machineId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("biosId"))
                {
                    biosId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fqdn"))
                {
                    fqdn = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("disks"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AgentDiskDetails> array = new List<AgentDiskDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AgentDiskDetails.DeserializeAgentDiskDetails(item));
                    }
                    disks = array;
                    continue;
                }
            }
            return new AgentDetails(agentId.Value, machineId.Value, biosId.Value, fqdn.Value, Optional.ToList(disks));
        }
    }
}
