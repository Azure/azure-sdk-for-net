// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary> VMwareCbt disk input. </summary>
    public partial class VMwareCbtDiskInput
    {
        /// <summary> Initializes a new instance of VMwareCbtDiskInput. </summary>
        /// <param name="diskId"> The disk Id. </param>
        /// <param name="isOSDisk"> A value indicating whether the disk is the OS disk. </param>
        /// <param name="logStorageAccountId"> The log storage account ARM Id. </param>
        /// <param name="logStorageAccountSasSecretName"> The key vault secret name of the log storage account. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="diskId"/>, <paramref name="isOSDisk"/>, <paramref name="logStorageAccountId"/> or <paramref name="logStorageAccountSasSecretName"/> is null. </exception>
        public VMwareCbtDiskInput(string diskId, string isOSDisk, string logStorageAccountId, string logStorageAccountSasSecretName)
        {
            if (diskId == null)
            {
                throw new ArgumentNullException(nameof(diskId));
            }
            if (isOSDisk == null)
            {
                throw new ArgumentNullException(nameof(isOSDisk));
            }
            if (logStorageAccountId == null)
            {
                throw new ArgumentNullException(nameof(logStorageAccountId));
            }
            if (logStorageAccountSasSecretName == null)
            {
                throw new ArgumentNullException(nameof(logStorageAccountSasSecretName));
            }

            DiskId = diskId;
            IsOSDisk = isOSDisk;
            LogStorageAccountId = logStorageAccountId;
            LogStorageAccountSasSecretName = logStorageAccountSasSecretName;
        }

        /// <summary> The disk Id. </summary>
        public string DiskId { get; }
        /// <summary> The disk type. </summary>
        public DiskAccountType? DiskType { get; set; }
        /// <summary> A value indicating whether the disk is the OS disk. </summary>
        public string IsOSDisk { get; }
        /// <summary> The log storage account ARM Id. </summary>
        public string LogStorageAccountId { get; }
        /// <summary> The key vault secret name of the log storage account. </summary>
        public string LogStorageAccountSasSecretName { get; }
        /// <summary> The DiskEncryptionSet ARM Id. </summary>
        public string DiskEncryptionSetId { get; set; }
    }
}
