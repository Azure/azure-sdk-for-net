// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class InconsistentVmDetails
    {
        internal static InconsistentVmDetails DeserializeInconsistentVmDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> vmName = default;
            Optional<string> cloudName = default;
            Optional<IReadOnlyList<string>> details = default;
            Optional<IReadOnlyList<string>> errorIds = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("vmName"u8))
                {
                    vmName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cloudName"u8))
                {
                    cloudName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("details"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    details = array;
                    continue;
                }
                if (property.NameEquals("errorIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    errorIds = array;
                    continue;
                }
            }
            return new InconsistentVmDetails(vmName.Value, cloudName.Value, Optional.ToList(details), Optional.ToList(errorIds));
        }
    }
}
