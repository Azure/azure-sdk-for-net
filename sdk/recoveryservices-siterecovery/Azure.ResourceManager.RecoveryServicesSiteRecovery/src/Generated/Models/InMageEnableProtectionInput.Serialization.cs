// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    public partial class InMageEnableProtectionInput : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(VmFriendlyName))
            {
                writer.WritePropertyName("vmFriendlyName");
                writer.WriteStringValue(VmFriendlyName);
            }
            writer.WritePropertyName("masterTargetId");
            writer.WriteStringValue(MasterTargetId);
            writer.WritePropertyName("processServerId");
            writer.WriteStringValue(ProcessServerId);
            writer.WritePropertyName("retentionDrive");
            writer.WriteStringValue(RetentionDrive);
            if (Optional.IsDefined(RunAsAccountId))
            {
                writer.WritePropertyName("runAsAccountId");
                writer.WriteStringValue(RunAsAccountId);
            }
            writer.WritePropertyName("multiVmGroupId");
            writer.WriteStringValue(MultiVmGroupId);
            writer.WritePropertyName("multiVmGroupName");
            writer.WriteStringValue(MultiVmGroupName);
            if (Optional.IsDefined(DatastoreName))
            {
                writer.WritePropertyName("datastoreName");
                writer.WriteStringValue(DatastoreName);
            }
            if (Optional.IsDefined(DiskExclusionInput))
            {
                writer.WritePropertyName("diskExclusionInput");
                writer.WriteObjectValue(DiskExclusionInput);
            }
            if (Optional.IsCollectionDefined(DisksToInclude))
            {
                writer.WritePropertyName("disksToInclude");
                writer.WriteStartArray();
                foreach (var item in DisksToInclude)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("instanceType");
            writer.WriteStringValue(InstanceType);
            writer.WriteEndObject();
        }
    }
}
