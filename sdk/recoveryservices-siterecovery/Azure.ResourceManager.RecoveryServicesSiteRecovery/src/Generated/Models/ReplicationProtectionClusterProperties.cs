// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary> Replication protection cluster custom data details. </summary>
    public partial class ReplicationProtectionClusterProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ReplicationProtectionClusterProperties"/>. </summary>
        public ReplicationProtectionClusterProperties()
        {
            AllowedOperations = new ChangeTrackingList<string>();
            HealthErrors = new ChangeTrackingList<SiteRecoveryHealthError>();
            ClusterNodeFqdns = new ChangeTrackingList<string>();
            ClusterProtectedItemIds = new ChangeTrackingList<ResourceIdentifier>();
            ClusterRegisteredNodes = new ChangeTrackingList<RegisteredClusterNodes>();
        }

        /// <summary> Initializes a new instance of <see cref="ReplicationProtectionClusterProperties"/>. </summary>
        /// <param name="protectionClusterType"> The type of protection cluster type. </param>
        /// <param name="primaryFabricFriendlyName"> The friendly name of the primary fabric. </param>
        /// <param name="primaryFabricProvider"> The fabric provider of the primary fabric. </param>
        /// <param name="recoveryFabricFriendlyName"> The friendly name of recovery fabric. </param>
        /// <param name="recoveryFabricId"> The Arm Id of recovery fabric. </param>
        /// <param name="primaryProtectionContainerFriendlyName"> The name of primary protection container friendly name. </param>
        /// <param name="recoveryProtectionContainerFriendlyName"> The name of recovery container friendly name. </param>
        /// <param name="protectionState"> The protection status. </param>
        /// <param name="protectionStateDescription"> The protection state description. </param>
        /// <param name="activeLocation"> The Current active location of the Protection cluster. </param>
        /// <param name="testFailoverState"> The Test failover state. </param>
        /// <param name="testFailoverStateDescription"> The Test failover state description. </param>
        /// <param name="allowedOperations"> The allowed operations on the Replication protection cluster. </param>
        /// <param name="replicationHealth"> The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration. </param>
        /// <param name="healthErrors"> List of health errors. </param>
        /// <param name="lastSuccessfulFailoverOn"> The last successful failover time. </param>
        /// <param name="lastSuccessfulTestFailoverOn"> The last successful test failover time. </param>
        /// <param name="policyFriendlyName"> The name of Policy governing this PE. </param>
        /// <param name="currentScenario"> The current scenario. </param>
        /// <param name="recoveryContainerId"> The recovery container Id. </param>
        /// <param name="agentClusterId"> The Agent cluster Id. </param>
        /// <param name="clusterFqdn"> The cluster FQDN. </param>
        /// <param name="clusterNodeFqdns"> The List of cluster Node FQDNs. </param>
        /// <param name="clusterProtectedItemIds"> The List of Protected Item Id's. </param>
        /// <param name="provisioningState"> The provisioning state of the cluster. </param>
        /// <param name="areAllClusterNodesRegistered"> A value indicating whether all nodes of the cluster are registered or not. </param>
        /// <param name="clusterRegisteredNodes"> The registered node details. </param>
        /// <param name="providerSpecificDetails">
        /// The Replication cluster provider custom settings.
        /// Please note <see cref="ReplicationClusterProviderSpecificSettings"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="A2AReplicationProtectionClusterDetails"/>.
        /// </param>
        /// <param name="sharedDiskProperties"> The shared disk properties. </param>
        /// <param name="policyId"> The Policy Id. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ReplicationProtectionClusterProperties(string protectionClusterType, string primaryFabricFriendlyName, string primaryFabricProvider, string recoveryFabricFriendlyName, ResourceIdentifier recoveryFabricId, string primaryProtectionContainerFriendlyName, string recoveryProtectionContainerFriendlyName, string protectionState, string protectionStateDescription, string activeLocation, string testFailoverState, string testFailoverStateDescription, IList<string> allowedOperations, string replicationHealth, IList<SiteRecoveryHealthError> healthErrors, DateTimeOffset? lastSuccessfulFailoverOn, DateTimeOffset? lastSuccessfulTestFailoverOn, string policyFriendlyName, CurrentScenarioDetails currentScenario, ResourceIdentifier recoveryContainerId, string agentClusterId, string clusterFqdn, IList<string> clusterNodeFqdns, IList<ResourceIdentifier> clusterProtectedItemIds, string provisioningState, bool? areAllClusterNodesRegistered, IList<RegisteredClusterNodes> clusterRegisteredNodes, ReplicationClusterProviderSpecificSettings providerSpecificDetails, SharedDiskReplicationItemProperties sharedDiskProperties, ResourceIdentifier policyId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProtectionClusterType = protectionClusterType;
            PrimaryFabricFriendlyName = primaryFabricFriendlyName;
            PrimaryFabricProvider = primaryFabricProvider;
            RecoveryFabricFriendlyName = recoveryFabricFriendlyName;
            RecoveryFabricId = recoveryFabricId;
            PrimaryProtectionContainerFriendlyName = primaryProtectionContainerFriendlyName;
            RecoveryProtectionContainerFriendlyName = recoveryProtectionContainerFriendlyName;
            ProtectionState = protectionState;
            ProtectionStateDescription = protectionStateDescription;
            ActiveLocation = activeLocation;
            TestFailoverState = testFailoverState;
            TestFailoverStateDescription = testFailoverStateDescription;
            AllowedOperations = allowedOperations;
            ReplicationHealth = replicationHealth;
            HealthErrors = healthErrors;
            LastSuccessfulFailoverOn = lastSuccessfulFailoverOn;
            LastSuccessfulTestFailoverOn = lastSuccessfulTestFailoverOn;
            PolicyFriendlyName = policyFriendlyName;
            CurrentScenario = currentScenario;
            RecoveryContainerId = recoveryContainerId;
            AgentClusterId = agentClusterId;
            ClusterFqdn = clusterFqdn;
            ClusterNodeFqdns = clusterNodeFqdns;
            ClusterProtectedItemIds = clusterProtectedItemIds;
            ProvisioningState = provisioningState;
            AreAllClusterNodesRegistered = areAllClusterNodesRegistered;
            ClusterRegisteredNodes = clusterRegisteredNodes;
            ProviderSpecificDetails = providerSpecificDetails;
            SharedDiskProperties = sharedDiskProperties;
            PolicyId = policyId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The type of protection cluster type. </summary>
        public string ProtectionClusterType { get; set; }
        /// <summary> The friendly name of the primary fabric. </summary>
        public string PrimaryFabricFriendlyName { get; set; }
        /// <summary> The fabric provider of the primary fabric. </summary>
        public string PrimaryFabricProvider { get; set; }
        /// <summary> The friendly name of recovery fabric. </summary>
        public string RecoveryFabricFriendlyName { get; set; }
        /// <summary> The Arm Id of recovery fabric. </summary>
        public ResourceIdentifier RecoveryFabricId { get; set; }
        /// <summary> The name of primary protection container friendly name. </summary>
        public string PrimaryProtectionContainerFriendlyName { get; set; }
        /// <summary> The name of recovery container friendly name. </summary>
        public string RecoveryProtectionContainerFriendlyName { get; set; }
        /// <summary> The protection status. </summary>
        public string ProtectionState { get; set; }
        /// <summary> The protection state description. </summary>
        public string ProtectionStateDescription { get; set; }
        /// <summary> The Current active location of the Protection cluster. </summary>
        public string ActiveLocation { get; set; }
        /// <summary> The Test failover state. </summary>
        public string TestFailoverState { get; set; }
        /// <summary> The Test failover state description. </summary>
        public string TestFailoverStateDescription { get; set; }
        /// <summary> The allowed operations on the Replication protection cluster. </summary>
        public IList<string> AllowedOperations { get; }
        /// <summary> The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration. </summary>
        public string ReplicationHealth { get; set; }
        /// <summary> List of health errors. </summary>
        public IList<SiteRecoveryHealthError> HealthErrors { get; }
        /// <summary> The last successful failover time. </summary>
        public DateTimeOffset? LastSuccessfulFailoverOn { get; set; }
        /// <summary> The last successful test failover time. </summary>
        public DateTimeOffset? LastSuccessfulTestFailoverOn { get; set; }
        /// <summary> The name of Policy governing this PE. </summary>
        public string PolicyFriendlyName { get; set; }
        /// <summary> The current scenario. </summary>
        public CurrentScenarioDetails CurrentScenario { get; set; }
        /// <summary> The recovery container Id. </summary>
        public ResourceIdentifier RecoveryContainerId { get; set; }
        /// <summary> The Agent cluster Id. </summary>
        public string AgentClusterId { get; set; }
        /// <summary> The cluster FQDN. </summary>
        public string ClusterFqdn { get; set; }
        /// <summary> The List of cluster Node FQDNs. </summary>
        public IList<string> ClusterNodeFqdns { get; }
        /// <summary> The List of Protected Item Id's. </summary>
        public IList<ResourceIdentifier> ClusterProtectedItemIds { get; }
        /// <summary> The provisioning state of the cluster. </summary>
        public string ProvisioningState { get; }
        /// <summary> A value indicating whether all nodes of the cluster are registered or not. </summary>
        public bool? AreAllClusterNodesRegistered { get; set; }
        /// <summary> The registered node details. </summary>
        public IList<RegisteredClusterNodes> ClusterRegisteredNodes { get; }
        /// <summary>
        /// The Replication cluster provider custom settings.
        /// Please note <see cref="ReplicationClusterProviderSpecificSettings"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="A2AReplicationProtectionClusterDetails"/>.
        /// </summary>
        public ReplicationClusterProviderSpecificSettings ProviderSpecificDetails { get; set; }
        /// <summary> The shared disk properties. </summary>
        public SharedDiskReplicationItemProperties SharedDiskProperties { get; set; }
        /// <summary> The Policy Id. </summary>
        public ResourceIdentifier PolicyId { get; set; }
    }
}
