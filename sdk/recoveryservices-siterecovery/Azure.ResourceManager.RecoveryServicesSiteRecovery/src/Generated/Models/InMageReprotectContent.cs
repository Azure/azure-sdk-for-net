// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// InMageAzureV2 specific provider input.
    /// Serialized Name: InMageReprotectInput
    /// </summary>
    public partial class InMageReprotectContent : ReverseReplicationProviderSpecificContent
    {
        /// <summary> Initializes a new instance of InMageReprotectContent. </summary>
        /// <param name="masterTargetId">
        /// The Master Target Id.
        /// Serialized Name: InMageReprotectInput.masterTargetId
        /// </param>
        /// <param name="processServerId">
        /// The Process Server Id.
        /// Serialized Name: InMageReprotectInput.processServerId
        /// </param>
        /// <param name="retentionDrive">
        /// The retention drive to use on the MT.
        /// Serialized Name: InMageReprotectInput.retentionDrive
        /// </param>
        /// <param name="profileId">
        /// The Policy Id.
        /// Serialized Name: InMageReprotectInput.profileId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="masterTargetId"/>, <paramref name="processServerId"/>, <paramref name="retentionDrive"/> or <paramref name="profileId"/> is null. </exception>
        public InMageReprotectContent(string masterTargetId, string processServerId, string retentionDrive, string profileId)
        {
            Argument.AssertNotNull(masterTargetId, nameof(masterTargetId));
            Argument.AssertNotNull(processServerId, nameof(processServerId));
            Argument.AssertNotNull(retentionDrive, nameof(retentionDrive));
            Argument.AssertNotNull(profileId, nameof(profileId));

            MasterTargetId = masterTargetId;
            ProcessServerId = processServerId;
            RetentionDrive = retentionDrive;
            ProfileId = profileId;
            DisksToInclude = new ChangeTrackingList<string>();
            InstanceType = "InMage";
        }

        /// <summary>
        /// The Master Target Id.
        /// Serialized Name: InMageReprotectInput.masterTargetId
        /// </summary>
        public string MasterTargetId { get; }
        /// <summary>
        /// The Process Server Id.
        /// Serialized Name: InMageReprotectInput.processServerId
        /// </summary>
        public string ProcessServerId { get; }
        /// <summary>
        /// The retention drive to use on the MT.
        /// Serialized Name: InMageReprotectInput.retentionDrive
        /// </summary>
        public string RetentionDrive { get; }
        /// <summary>
        /// The CS account Id.
        /// Serialized Name: InMageReprotectInput.runAsAccountId
        /// </summary>
        public string RunAsAccountId { get; set; }
        /// <summary>
        /// The target datastore name.
        /// Serialized Name: InMageReprotectInput.datastoreName
        /// </summary>
        public string DatastoreName { get; set; }
        /// <summary>
        /// The enable disk exclusion input.
        /// Serialized Name: InMageReprotectInput.diskExclusionInput
        /// </summary>
        public InMageDiskExclusionContent DiskExclusionContent { get; set; }
        /// <summary>
        /// The Policy Id.
        /// Serialized Name: InMageReprotectInput.profileId
        /// </summary>
        public string ProfileId { get; }
        /// <summary>
        /// The disks to include list.
        /// Serialized Name: InMageReprotectInput.disksToInclude
        /// </summary>
        public IList<string> DisksToInclude { get; }
    }
}
