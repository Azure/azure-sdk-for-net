// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// Details of a Master Target Server.
    /// Serialized Name: MasterTargetServer
    /// </summary>
    public partial class MasterTargetServer
    {
        /// <summary> Initializes a new instance of MasterTargetServer. </summary>
        internal MasterTargetServer()
        {
            RetentionVolumes = new ChangeTrackingList<RetentionVolume>();
            DataStores = new ChangeTrackingList<SiteRecoveryDataStore>();
            ValidationErrors = new ChangeTrackingList<SiteRecoveryHealthError>();
            HealthErrors = new ChangeTrackingList<SiteRecoveryHealthError>();
        }

        /// <summary> Initializes a new instance of MasterTargetServer. </summary>
        /// <param name="id">
        /// The server Id.
        /// Serialized Name: MasterTargetServer.id
        /// </param>
        /// <param name="ipAddress">
        /// The IP address of the server.
        /// Serialized Name: MasterTargetServer.ipAddress
        /// </param>
        /// <param name="name">
        /// The server name.
        /// Serialized Name: MasterTargetServer.name
        /// </param>
        /// <param name="osType">
        /// The OS type of the server.
        /// Serialized Name: MasterTargetServer.osType
        /// </param>
        /// <param name="agentVersion">
        /// The version of the scout component on the server.
        /// Serialized Name: MasterTargetServer.agentVersion
        /// </param>
        /// <param name="lastHeartbeat">
        /// The last heartbeat received from the server.
        /// Serialized Name: MasterTargetServer.lastHeartbeat
        /// </param>
        /// <param name="versionStatus">
        /// Version status.
        /// Serialized Name: MasterTargetServer.versionStatus
        /// </param>
        /// <param name="retentionVolumes">
        /// The retention volumes of Master target Server.
        /// Serialized Name: MasterTargetServer.retentionVolumes
        /// </param>
        /// <param name="dataStores">
        /// The list of data stores in the fabric.
        /// Serialized Name: MasterTargetServer.dataStores
        /// </param>
        /// <param name="validationErrors">
        /// Validation errors.
        /// Serialized Name: MasterTargetServer.validationErrors
        /// </param>
        /// <param name="healthErrors">
        /// Health errors.
        /// Serialized Name: MasterTargetServer.healthErrors
        /// </param>
        /// <param name="diskCount">
        /// Disk count of the master target.
        /// Serialized Name: MasterTargetServer.diskCount
        /// </param>
        /// <param name="osVersion">
        /// OS Version of the master target.
        /// Serialized Name: MasterTargetServer.osVersion
        /// </param>
        /// <param name="agentExpireOn">
        /// Agent expiry date.
        /// Serialized Name: MasterTargetServer.agentExpiryDate
        /// </param>
        /// <param name="marsAgentVersion">
        /// MARS agent version.
        /// Serialized Name: MasterTargetServer.marsAgentVersion
        /// </param>
        /// <param name="marsAgentExpireOn">
        /// MARS agent expiry date.
        /// Serialized Name: MasterTargetServer.marsAgentExpiryDate
        /// </param>
        /// <param name="agentVersionDetails">
        /// Agent version details.
        /// Serialized Name: MasterTargetServer.agentVersionDetails
        /// </param>
        /// <param name="marsAgentVersionDetails">
        /// Mars agent version details.
        /// Serialized Name: MasterTargetServer.marsAgentVersionDetails
        /// </param>
        internal MasterTargetServer(string id, IPAddress ipAddress, string name, string osType, string agentVersion, DateTimeOffset? lastHeartbeat, string versionStatus, IReadOnlyList<RetentionVolume> retentionVolumes, IReadOnlyList<SiteRecoveryDataStore> dataStores, IReadOnlyList<SiteRecoveryHealthError> validationErrors, IReadOnlyList<SiteRecoveryHealthError> healthErrors, int? diskCount, string osVersion, DateTimeOffset? agentExpireOn, string marsAgentVersion, DateTimeOffset? marsAgentExpireOn, VersionDetails agentVersionDetails, VersionDetails marsAgentVersionDetails)
        {
            Id = id;
            IPAddress = ipAddress;
            Name = name;
            OSType = osType;
            AgentVersion = agentVersion;
            LastHeartbeat = lastHeartbeat;
            VersionStatus = versionStatus;
            RetentionVolumes = retentionVolumes;
            DataStores = dataStores;
            ValidationErrors = validationErrors;
            HealthErrors = healthErrors;
            DiskCount = diskCount;
            OSVersion = osVersion;
            AgentExpireOn = agentExpireOn;
            MarsAgentVersion = marsAgentVersion;
            MarsAgentExpireOn = marsAgentExpireOn;
            AgentVersionDetails = agentVersionDetails;
            MarsAgentVersionDetails = marsAgentVersionDetails;
        }

        /// <summary>
        /// The server Id.
        /// Serialized Name: MasterTargetServer.id
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// The IP address of the server.
        /// Serialized Name: MasterTargetServer.ipAddress
        /// </summary>
        public IPAddress IPAddress { get; }
        /// <summary>
        /// The server name.
        /// Serialized Name: MasterTargetServer.name
        /// </summary>
        public string Name { get; }
        /// <summary>
        /// The OS type of the server.
        /// Serialized Name: MasterTargetServer.osType
        /// </summary>
        public string OSType { get; }
        /// <summary>
        /// The version of the scout component on the server.
        /// Serialized Name: MasterTargetServer.agentVersion
        /// </summary>
        public string AgentVersion { get; }
        /// <summary>
        /// The last heartbeat received from the server.
        /// Serialized Name: MasterTargetServer.lastHeartbeat
        /// </summary>
        public DateTimeOffset? LastHeartbeat { get; }
        /// <summary>
        /// Version status.
        /// Serialized Name: MasterTargetServer.versionStatus
        /// </summary>
        public string VersionStatus { get; }
        /// <summary>
        /// The retention volumes of Master target Server.
        /// Serialized Name: MasterTargetServer.retentionVolumes
        /// </summary>
        public IReadOnlyList<RetentionVolume> RetentionVolumes { get; }
        /// <summary>
        /// The list of data stores in the fabric.
        /// Serialized Name: MasterTargetServer.dataStores
        /// </summary>
        public IReadOnlyList<SiteRecoveryDataStore> DataStores { get; }
        /// <summary>
        /// Validation errors.
        /// Serialized Name: MasterTargetServer.validationErrors
        /// </summary>
        public IReadOnlyList<SiteRecoveryHealthError> ValidationErrors { get; }
        /// <summary>
        /// Health errors.
        /// Serialized Name: MasterTargetServer.healthErrors
        /// </summary>
        public IReadOnlyList<SiteRecoveryHealthError> HealthErrors { get; }
        /// <summary>
        /// Disk count of the master target.
        /// Serialized Name: MasterTargetServer.diskCount
        /// </summary>
        public int? DiskCount { get; }
        /// <summary>
        /// OS Version of the master target.
        /// Serialized Name: MasterTargetServer.osVersion
        /// </summary>
        public string OSVersion { get; }
        /// <summary>
        /// Agent expiry date.
        /// Serialized Name: MasterTargetServer.agentExpiryDate
        /// </summary>
        public DateTimeOffset? AgentExpireOn { get; }
        /// <summary>
        /// MARS agent version.
        /// Serialized Name: MasterTargetServer.marsAgentVersion
        /// </summary>
        public string MarsAgentVersion { get; }
        /// <summary>
        /// MARS agent expiry date.
        /// Serialized Name: MasterTargetServer.marsAgentExpiryDate
        /// </summary>
        public DateTimeOffset? MarsAgentExpireOn { get; }
        /// <summary>
        /// Agent version details.
        /// Serialized Name: MasterTargetServer.agentVersionDetails
        /// </summary>
        public VersionDetails AgentVersionDetails { get; }
        /// <summary>
        /// Mars agent version details.
        /// Serialized Name: MasterTargetServer.marsAgentVersionDetails
        /// </summary>
        public VersionDetails MarsAgentVersionDetails { get; }
    }
}
