// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// DRA details.
    /// Serialized Name: DraDetails
    /// </summary>
    public partial class SiteRecoveryDraDetails
    {
        /// <summary> Initializes a new instance of SiteRecoveryDraDetails. </summary>
        internal SiteRecoveryDraDetails()
        {
            HealthErrors = new ChangeTrackingList<SiteRecoveryHealthError>();
        }

        /// <summary> Initializes a new instance of SiteRecoveryDraDetails. </summary>
        /// <param name="id">
        /// The DRA Id.
        /// Serialized Name: DraDetails.id
        /// </param>
        /// <param name="name">
        /// The DRA name.
        /// Serialized Name: DraDetails.name
        /// </param>
        /// <param name="biosId">
        /// The DRA Bios Id.
        /// Serialized Name: DraDetails.biosId
        /// </param>
        /// <param name="version">
        /// The version.
        /// Serialized Name: DraDetails.version
        /// </param>
        /// <param name="lastHeartbeatReceivedOn">
        /// The last heartbeat received from the DRA.
        /// Serialized Name: DraDetails.lastHeartbeatUtc
        /// </param>
        /// <param name="health">
        /// The health.
        /// Serialized Name: DraDetails.health
        /// </param>
        /// <param name="healthErrors">
        /// The health errors.
        /// Serialized Name: DraDetails.healthErrors
        /// </param>
        /// <param name="forwardProtectedItemCount">
        /// The count of protected items which are protected in forward direction.
        /// Serialized Name: DraDetails.forwardProtectedItemCount
        /// </param>
        /// <param name="reverseProtectedItemCount">
        /// The count of protected items which are protected in reverse direction.
        /// Serialized Name: DraDetails.reverseProtectedItemCount
        /// </param>
        internal SiteRecoveryDraDetails(string id, string name, string biosId, string version, DateTimeOffset? lastHeartbeatReceivedOn, ProtectionHealth? health, IReadOnlyList<SiteRecoveryHealthError> healthErrors, int? forwardProtectedItemCount, int? reverseProtectedItemCount)
        {
            Id = id;
            Name = name;
            BiosId = biosId;
            Version = version;
            LastHeartbeatReceivedOn = lastHeartbeatReceivedOn;
            Health = health;
            HealthErrors = healthErrors;
            ForwardProtectedItemCount = forwardProtectedItemCount;
            ReverseProtectedItemCount = reverseProtectedItemCount;
        }

        /// <summary>
        /// The DRA Id.
        /// Serialized Name: DraDetails.id
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// The DRA name.
        /// Serialized Name: DraDetails.name
        /// </summary>
        public string Name { get; }
        /// <summary>
        /// The DRA Bios Id.
        /// Serialized Name: DraDetails.biosId
        /// </summary>
        public string BiosId { get; }
        /// <summary>
        /// The version.
        /// Serialized Name: DraDetails.version
        /// </summary>
        public string Version { get; }
        /// <summary>
        /// The last heartbeat received from the DRA.
        /// Serialized Name: DraDetails.lastHeartbeatUtc
        /// </summary>
        public DateTimeOffset? LastHeartbeatReceivedOn { get; }
        /// <summary>
        /// The health.
        /// Serialized Name: DraDetails.health
        /// </summary>
        public ProtectionHealth? Health { get; }
        /// <summary>
        /// The health errors.
        /// Serialized Name: DraDetails.healthErrors
        /// </summary>
        public IReadOnlyList<SiteRecoveryHealthError> HealthErrors { get; }
        /// <summary>
        /// The count of protected items which are protected in forward direction.
        /// Serialized Name: DraDetails.forwardProtectedItemCount
        /// </summary>
        public int? ForwardProtectedItemCount { get; }
        /// <summary>
        /// The count of protected items which are protected in reverse direction.
        /// Serialized Name: DraDetails.reverseProtectedItemCount
        /// </summary>
        public int? ReverseProtectedItemCount { get; }
    }
}
