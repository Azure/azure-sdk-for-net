// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// InMageRcmFailback specific provider input.
    /// Serialized Name: InMageRcmFailbackReprotectInput
    /// </summary>
    public partial class InMageRcmFailbackReprotectContent : ReverseReplicationProviderSpecificContent
    {
        /// <summary> Initializes a new instance of InMageRcmFailbackReprotectContent. </summary>
        /// <param name="processServerId">
        /// The process server Id.
        /// Serialized Name: InMageRcmFailbackReprotectInput.processServerId
        /// </param>
        /// <param name="policyId">
        /// The Policy Id.
        /// Serialized Name: InMageRcmFailbackReprotectInput.policyId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="processServerId"/> or <paramref name="policyId"/> is null. </exception>
        public InMageRcmFailbackReprotectContent(string processServerId, ResourceIdentifier policyId)
        {
            Argument.AssertNotNull(processServerId, nameof(processServerId));
            Argument.AssertNotNull(policyId, nameof(policyId));

            ProcessServerId = processServerId;
            PolicyId = policyId;
            InstanceType = "InMageRcmFailback";
        }

        /// <summary>
        /// The process server Id.
        /// Serialized Name: InMageRcmFailbackReprotectInput.processServerId
        /// </summary>
        public string ProcessServerId { get; }
        /// <summary>
        /// The run as account Id.
        /// Serialized Name: InMageRcmFailbackReprotectInput.runAsAccountId
        /// </summary>
        public string RunAsAccountId { get; set; }
        /// <summary>
        /// The Policy Id.
        /// Serialized Name: InMageRcmFailbackReprotectInput.policyId
        /// </summary>
        public ResourceIdentifier PolicyId { get; }
    }
}
