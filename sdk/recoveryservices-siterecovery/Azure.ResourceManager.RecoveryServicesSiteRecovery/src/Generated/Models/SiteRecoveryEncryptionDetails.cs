// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary> Encryption details for the fabric. </summary>
    public partial class SiteRecoveryEncryptionDetails
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="SiteRecoveryEncryptionDetails"/>. </summary>
        internal SiteRecoveryEncryptionDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SiteRecoveryEncryptionDetails"/>. </summary>
        /// <param name="kekState"> The key encryption key state for the Vmm. </param>
        /// <param name="kekCertThumbprint"> The key encryption key certificate thumbprint. </param>
        /// <param name="kekCertExpireOn"> The key encryption key certificate expiry date. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal SiteRecoveryEncryptionDetails(string kekState, string kekCertThumbprint, DateTimeOffset? kekCertExpireOn, Dictionary<string, BinaryData> rawData)
        {
            KekState = kekState;
            KekCertThumbprint = kekCertThumbprint;
            KekCertExpireOn = kekCertExpireOn;
            _rawData = rawData;
        }

        /// <summary> The key encryption key state for the Vmm. </summary>
        public string KekState { get; }
        /// <summary> The key encryption key certificate thumbprint. </summary>
        public string KekCertThumbprint { get; }
        /// <summary> The key encryption key certificate expiry date. </summary>
        public DateTimeOffset? KekCertExpireOn { get; }
    }
}
