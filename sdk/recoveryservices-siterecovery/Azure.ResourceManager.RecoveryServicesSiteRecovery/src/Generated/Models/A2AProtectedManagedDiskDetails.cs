// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// A2A protected managed disk details.
    /// Serialized Name: A2AProtectedManagedDiskDetails
    /// </summary>
    public partial class A2AProtectedManagedDiskDetails
    {
        /// <summary> Initializes a new instance of A2AProtectedManagedDiskDetails. </summary>
        internal A2AProtectedManagedDiskDetails()
        {
            AllowedDiskLevelOperation = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of A2AProtectedManagedDiskDetails. </summary>
        /// <param name="diskId">
        /// The managed disk Arm id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskId
        /// </param>
        /// <param name="recoveryResourceGroupId">
        /// The recovery disk resource group Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryResourceGroupId
        /// </param>
        /// <param name="recoveryTargetDiskId">
        /// Recovery target disk Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryTargetDiskId
        /// </param>
        /// <param name="recoveryReplicaDiskId">
        /// Recovery replica disk Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryReplicaDiskId
        /// </param>
        /// <param name="recoveryOrignalTargetDiskId">
        /// Recovery original target disk Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryOrignalTargetDiskId
        /// </param>
        /// <param name="recoveryReplicaDiskAccountType">
        /// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryReplicaDiskAccountType
        /// </param>
        /// <param name="recoveryTargetDiskAccountType">
        /// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryTargetDiskAccountType
        /// </param>
        /// <param name="recoveryDiskEncryptionSetId">
        /// The recovery disk encryption set Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryDiskEncryptionSetId
        /// </param>
        /// <param name="primaryDiskEncryptionSetId">
        /// The primary disk encryption set Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.primaryDiskEncryptionSetId
        /// </param>
        /// <param name="diskName">
        /// The disk name.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskName
        /// </param>
        /// <param name="diskCapacityInBytes">
        /// The disk capacity in bytes.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskCapacityInBytes
        /// </param>
        /// <param name="primaryStagingAzureStorageAccountId">
        /// The primary staging storage account.
        /// Serialized Name: A2AProtectedManagedDiskDetails.primaryStagingAzureStorageAccountId
        /// </param>
        /// <param name="diskType">
        /// The type of disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskType
        /// </param>
        /// <param name="isResyncRequired">
        /// A value indicating whether resync is required for this disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.resyncRequired
        /// </param>
        /// <param name="monitoringPercentageCompletion">
        /// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
        /// Serialized Name: A2AProtectedManagedDiskDetails.monitoringPercentageCompletion
        /// </param>
        /// <param name="monitoringJobType">
        /// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
        /// Serialized Name: A2AProtectedManagedDiskDetails.monitoringJobType
        /// </param>
        /// <param name="dataPendingInStagingStorageAccountInMB">
        /// The data pending for replication in MB at staging account.
        /// Serialized Name: A2AProtectedManagedDiskDetails.dataPendingInStagingStorageAccountInMB
        /// </param>
        /// <param name="dataPendingAtSourceAgentInMB">
        /// The data pending at source virtual machine in MB.
        /// Serialized Name: A2AProtectedManagedDiskDetails.dataPendingAtSourceAgentInMB
        /// </param>
        /// <param name="diskState">
        /// The disk state.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskState
        /// </param>
        /// <param name="allowedDiskLevelOperation">
        /// The disk level operations list.
        /// Serialized Name: A2AProtectedManagedDiskDetails.allowedDiskLevelOperation
        /// </param>
        /// <param name="isDiskEncrypted">
        /// A value indicating whether vm has encrypted os disk or not.
        /// Serialized Name: A2AProtectedManagedDiskDetails.isDiskEncrypted
        /// </param>
        /// <param name="secretIdentifier">
        /// The secret URL / identifier (BEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.secretIdentifier
        /// </param>
        /// <param name="dekKeyVaultArmId">
        /// The KeyVault resource id for secret (BEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.dekKeyVaultArmId
        /// </param>
        /// <param name="isDiskKeyEncrypted">
        /// A value indicating whether disk key got encrypted or not.
        /// Serialized Name: A2AProtectedManagedDiskDetails.isDiskKeyEncrypted
        /// </param>
        /// <param name="keyIdentifier">
        /// The key URL / identifier (KEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.keyIdentifier
        /// </param>
        /// <param name="kekKeyVaultArmId">
        /// The KeyVault resource id for key (KEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.kekKeyVaultArmId
        /// </param>
        /// <param name="failoverDiskName">
        /// The failover name for the managed disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.failoverDiskName
        /// </param>
        /// <param name="tfoDiskName">
        /// The test failover name for the managed disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.tfoDiskName
        /// </param>
        internal A2AProtectedManagedDiskDetails(string diskId, ResourceIdentifier recoveryResourceGroupId, ResourceIdentifier recoveryTargetDiskId, ResourceIdentifier recoveryReplicaDiskId, ResourceIdentifier recoveryOrignalTargetDiskId, string recoveryReplicaDiskAccountType, string recoveryTargetDiskAccountType, ResourceIdentifier recoveryDiskEncryptionSetId, ResourceIdentifier primaryDiskEncryptionSetId, string diskName, long? diskCapacityInBytes, ResourceIdentifier primaryStagingAzureStorageAccountId, string diskType, bool? isResyncRequired, int? monitoringPercentageCompletion, string monitoringJobType, double? dataPendingInStagingStorageAccountInMB, double? dataPendingAtSourceAgentInMB, string diskState, IReadOnlyList<string> allowedDiskLevelOperation, bool? isDiskEncrypted, string secretIdentifier, ResourceIdentifier dekKeyVaultArmId, bool? isDiskKeyEncrypted, string keyIdentifier, ResourceIdentifier kekKeyVaultArmId, string failoverDiskName, string tfoDiskName)
        {
            DiskId = diskId;
            RecoveryResourceGroupId = recoveryResourceGroupId;
            RecoveryTargetDiskId = recoveryTargetDiskId;
            RecoveryReplicaDiskId = recoveryReplicaDiskId;
            RecoveryOrignalTargetDiskId = recoveryOrignalTargetDiskId;
            RecoveryReplicaDiskAccountType = recoveryReplicaDiskAccountType;
            RecoveryTargetDiskAccountType = recoveryTargetDiskAccountType;
            RecoveryDiskEncryptionSetId = recoveryDiskEncryptionSetId;
            PrimaryDiskEncryptionSetId = primaryDiskEncryptionSetId;
            DiskName = diskName;
            DiskCapacityInBytes = diskCapacityInBytes;
            PrimaryStagingAzureStorageAccountId = primaryStagingAzureStorageAccountId;
            DiskType = diskType;
            IsResyncRequired = isResyncRequired;
            MonitoringPercentageCompletion = monitoringPercentageCompletion;
            MonitoringJobType = monitoringJobType;
            DataPendingInStagingStorageAccountInMB = dataPendingInStagingStorageAccountInMB;
            DataPendingAtSourceAgentInMB = dataPendingAtSourceAgentInMB;
            DiskState = diskState;
            AllowedDiskLevelOperation = allowedDiskLevelOperation;
            IsDiskEncrypted = isDiskEncrypted;
            SecretIdentifier = secretIdentifier;
            DekKeyVaultArmId = dekKeyVaultArmId;
            IsDiskKeyEncrypted = isDiskKeyEncrypted;
            KeyIdentifier = keyIdentifier;
            KekKeyVaultArmId = kekKeyVaultArmId;
            FailoverDiskName = failoverDiskName;
            TfoDiskName = tfoDiskName;
        }

        /// <summary>
        /// The managed disk Arm id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskId
        /// </summary>
        public string DiskId { get; }
        /// <summary>
        /// The recovery disk resource group Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryResourceGroupId
        /// </summary>
        public ResourceIdentifier RecoveryResourceGroupId { get; }
        /// <summary>
        /// Recovery target disk Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryTargetDiskId
        /// </summary>
        public ResourceIdentifier RecoveryTargetDiskId { get; }
        /// <summary>
        /// Recovery replica disk Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryReplicaDiskId
        /// </summary>
        public ResourceIdentifier RecoveryReplicaDiskId { get; }
        /// <summary>
        /// Recovery original target disk Arm Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryOrignalTargetDiskId
        /// </summary>
        public ResourceIdentifier RecoveryOrignalTargetDiskId { get; }
        /// <summary>
        /// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryReplicaDiskAccountType
        /// </summary>
        public string RecoveryReplicaDiskAccountType { get; }
        /// <summary>
        /// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryTargetDiskAccountType
        /// </summary>
        public string RecoveryTargetDiskAccountType { get; }
        /// <summary>
        /// The recovery disk encryption set Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.recoveryDiskEncryptionSetId
        /// </summary>
        public ResourceIdentifier RecoveryDiskEncryptionSetId { get; }
        /// <summary>
        /// The primary disk encryption set Id.
        /// Serialized Name: A2AProtectedManagedDiskDetails.primaryDiskEncryptionSetId
        /// </summary>
        public ResourceIdentifier PrimaryDiskEncryptionSetId { get; }
        /// <summary>
        /// The disk name.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskName
        /// </summary>
        public string DiskName { get; }
        /// <summary>
        /// The disk capacity in bytes.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskCapacityInBytes
        /// </summary>
        public long? DiskCapacityInBytes { get; }
        /// <summary>
        /// The primary staging storage account.
        /// Serialized Name: A2AProtectedManagedDiskDetails.primaryStagingAzureStorageAccountId
        /// </summary>
        public ResourceIdentifier PrimaryStagingAzureStorageAccountId { get; }
        /// <summary>
        /// The type of disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskType
        /// </summary>
        public string DiskType { get; }
        /// <summary>
        /// A value indicating whether resync is required for this disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.resyncRequired
        /// </summary>
        public bool? IsResyncRequired { get; }
        /// <summary>
        /// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
        /// Serialized Name: A2AProtectedManagedDiskDetails.monitoringPercentageCompletion
        /// </summary>
        public int? MonitoringPercentageCompletion { get; }
        /// <summary>
        /// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
        /// Serialized Name: A2AProtectedManagedDiskDetails.monitoringJobType
        /// </summary>
        public string MonitoringJobType { get; }
        /// <summary>
        /// The data pending for replication in MB at staging account.
        /// Serialized Name: A2AProtectedManagedDiskDetails.dataPendingInStagingStorageAccountInMB
        /// </summary>
        public double? DataPendingInStagingStorageAccountInMB { get; }
        /// <summary>
        /// The data pending at source virtual machine in MB.
        /// Serialized Name: A2AProtectedManagedDiskDetails.dataPendingAtSourceAgentInMB
        /// </summary>
        public double? DataPendingAtSourceAgentInMB { get; }
        /// <summary>
        /// The disk state.
        /// Serialized Name: A2AProtectedManagedDiskDetails.diskState
        /// </summary>
        public string DiskState { get; }
        /// <summary>
        /// The disk level operations list.
        /// Serialized Name: A2AProtectedManagedDiskDetails.allowedDiskLevelOperation
        /// </summary>
        public IReadOnlyList<string> AllowedDiskLevelOperation { get; }
        /// <summary>
        /// A value indicating whether vm has encrypted os disk or not.
        /// Serialized Name: A2AProtectedManagedDiskDetails.isDiskEncrypted
        /// </summary>
        public bool? IsDiskEncrypted { get; }
        /// <summary>
        /// The secret URL / identifier (BEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.secretIdentifier
        /// </summary>
        public string SecretIdentifier { get; }
        /// <summary>
        /// The KeyVault resource id for secret (BEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.dekKeyVaultArmId
        /// </summary>
        public ResourceIdentifier DekKeyVaultArmId { get; }
        /// <summary>
        /// A value indicating whether disk key got encrypted or not.
        /// Serialized Name: A2AProtectedManagedDiskDetails.isDiskKeyEncrypted
        /// </summary>
        public bool? IsDiskKeyEncrypted { get; }
        /// <summary>
        /// The key URL / identifier (KEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.keyIdentifier
        /// </summary>
        public string KeyIdentifier { get; }
        /// <summary>
        /// The KeyVault resource id for key (KEK).
        /// Serialized Name: A2AProtectedManagedDiskDetails.kekKeyVaultArmId
        /// </summary>
        public ResourceIdentifier KekKeyVaultArmId { get; }
        /// <summary>
        /// The failover name for the managed disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.failoverDiskName
        /// </summary>
        public string FailoverDiskName { get; }
        /// <summary>
        /// The test failover name for the managed disk.
        /// Serialized Name: A2AProtectedManagedDiskDetails.tfoDiskName
        /// </summary>
        public string TfoDiskName { get; }
    }
}
