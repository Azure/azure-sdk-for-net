// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// The HyperVIPConfigDetails.
    /// Serialized Name: IPConfigDetails
    /// </summary>
    public partial class HyperVIPConfigDetails
    {
        /// <summary> Initializes a new instance of HyperVIPConfigDetails. </summary>
        internal HyperVIPConfigDetails()
        {
            RecoveryLBBackendAddressPoolIds = new ChangeTrackingList<string>();
            TfoLBBackendAddressPoolIds = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of HyperVIPConfigDetails. </summary>
        /// <param name="name"> Serialized Name: IPConfigDetails.name. </param>
        /// <param name="isPrimary"> Serialized Name: IPConfigDetails.isPrimary. </param>
        /// <param name="subnetName"> Serialized Name: IPConfigDetails.subnetName. </param>
        /// <param name="staticIPAddress"> Serialized Name: IPConfigDetails.staticIPAddress. </param>
        /// <param name="ipAddressType"> Serialized Name: IPConfigDetails.ipAddressType. </param>
        /// <param name="isSeletedForFailover"> Serialized Name: IPConfigDetails.isSeletedForFailover. </param>
        /// <param name="recoverySubnetName"> Serialized Name: IPConfigDetails.recoverySubnetName. </param>
        /// <param name="recoveryStaticIPAddress"> Serialized Name: IPConfigDetails.recoveryStaticIPAddress. </param>
        /// <param name="recoveryIPAddressType"> Serialized Name: IPConfigDetails.recoveryIPAddressType. </param>
        /// <param name="recoveryPublicIPAddressId"> Serialized Name: IPConfigDetails.recoveryPublicIPAddressId. </param>
        /// <param name="recoveryLBBackendAddressPoolIds"> Serialized Name: IPConfigDetails.recoveryLBBackendAddressPoolIds. </param>
        /// <param name="tfoSubnetName"> Serialized Name: IPConfigDetails.tfoSubnetName. </param>
        /// <param name="tfoStaticIPAddress"> Serialized Name: IPConfigDetails.tfoStaticIPAddress. </param>
        /// <param name="tfoPublicIPAddressId"> Serialized Name: IPConfigDetails.tfoPublicIPAddressId. </param>
        /// <param name="tfoLBBackendAddressPoolIds"> Serialized Name: IPConfigDetails.tfoLBBackendAddressPoolIds. </param>
        internal HyperVIPConfigDetails(string name, bool? isPrimary, string subnetName, IPAddress staticIPAddress, string ipAddressType, bool? isSeletedForFailover, string recoverySubnetName, IPAddress recoveryStaticIPAddress, string recoveryIPAddressType, ResourceIdentifier recoveryPublicIPAddressId, IReadOnlyList<string> recoveryLBBackendAddressPoolIds, string tfoSubnetName, IPAddress tfoStaticIPAddress, ResourceIdentifier tfoPublicIPAddressId, IReadOnlyList<string> tfoLBBackendAddressPoolIds)
        {
            Name = name;
            IsPrimary = isPrimary;
            SubnetName = subnetName;
            StaticIPAddress = staticIPAddress;
            IPAddressType = ipAddressType;
            IsSeletedForFailover = isSeletedForFailover;
            RecoverySubnetName = recoverySubnetName;
            RecoveryStaticIPAddress = recoveryStaticIPAddress;
            RecoveryIPAddressType = recoveryIPAddressType;
            RecoveryPublicIPAddressId = recoveryPublicIPAddressId;
            RecoveryLBBackendAddressPoolIds = recoveryLBBackendAddressPoolIds;
            TfoSubnetName = tfoSubnetName;
            TfoStaticIPAddress = tfoStaticIPAddress;
            TfoPublicIPAddressId = tfoPublicIPAddressId;
            TfoLBBackendAddressPoolIds = tfoLBBackendAddressPoolIds;
        }

        /// <summary> Serialized Name: IPConfigDetails.name. </summary>
        public string Name { get; }
        /// <summary> Serialized Name: IPConfigDetails.isPrimary. </summary>
        public bool? IsPrimary { get; }
        /// <summary> Serialized Name: IPConfigDetails.subnetName. </summary>
        public string SubnetName { get; }
        /// <summary> Serialized Name: IPConfigDetails.staticIPAddress. </summary>
        public IPAddress StaticIPAddress { get; }
        /// <summary> Serialized Name: IPConfigDetails.ipAddressType. </summary>
        public string IPAddressType { get; }
        /// <summary> Serialized Name: IPConfigDetails.isSeletedForFailover. </summary>
        public bool? IsSeletedForFailover { get; }
        /// <summary> Serialized Name: IPConfigDetails.recoverySubnetName. </summary>
        public string RecoverySubnetName { get; }
        /// <summary> Serialized Name: IPConfigDetails.recoveryStaticIPAddress. </summary>
        public IPAddress RecoveryStaticIPAddress { get; }
        /// <summary> Serialized Name: IPConfigDetails.recoveryIPAddressType. </summary>
        public string RecoveryIPAddressType { get; }
        /// <summary> Serialized Name: IPConfigDetails.recoveryPublicIPAddressId. </summary>
        public ResourceIdentifier RecoveryPublicIPAddressId { get; }
        /// <summary> Serialized Name: IPConfigDetails.recoveryLBBackendAddressPoolIds. </summary>
        public IReadOnlyList<string> RecoveryLBBackendAddressPoolIds { get; }
        /// <summary> Serialized Name: IPConfigDetails.tfoSubnetName. </summary>
        public string TfoSubnetName { get; }
        /// <summary> Serialized Name: IPConfigDetails.tfoStaticIPAddress. </summary>
        public IPAddress TfoStaticIPAddress { get; }
        /// <summary> Serialized Name: IPConfigDetails.tfoPublicIPAddressId. </summary>
        public ResourceIdentifier TfoPublicIPAddressId { get; }
        /// <summary> Serialized Name: IPConfigDetails.tfoLBBackendAddressPoolIds. </summary>
        public IReadOnlyList<string> TfoLBBackendAddressPoolIds { get; }
    }
}
