// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary> Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider. </summary>
    public partial class InMageVolumeExclusionOptions
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="InMageVolumeExclusionOptions"/>. </summary>
        public InMageVolumeExclusionOptions()
        {
        }

        /// <summary> Initializes a new instance of <see cref="InMageVolumeExclusionOptions"/>. </summary>
        /// <param name="volumeLabel"> The volume label. The disk having any volume with this label will be excluded from replication. </param>
        /// <param name="onlyExcludeIfSingleVolume"> The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InMageVolumeExclusionOptions(string volumeLabel, string onlyExcludeIfSingleVolume, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            VolumeLabel = volumeLabel;
            OnlyExcludeIfSingleVolume = onlyExcludeIfSingleVolume;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The volume label. The disk having any volume with this label will be excluded from replication. </summary>
        public string VolumeLabel { get; set; }
        /// <summary> The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false. </summary>
        public string OnlyExcludeIfSingleVolume { get; set; }
    }
}
