// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The list of disk configuration for vmSku which are part of SAP
    /// deployment.
    /// </summary>
    public partial class SAPDiskConfigurationsResult
    {
        /// <summary>
        /// Initializes a new instance of the SAPDiskConfigurationsResult
        /// class.
        /// </summary>
        public SAPDiskConfigurationsResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPDiskConfigurationsResult
        /// class.
        /// </summary>
        /// <param name="volumeConfigurations">The disk configuration for the
        /// db volume. For HANA, Required volumes are: ['hana/data',
        /// 'hana/log', hana/shared', 'usr/sap', 'os'], Optional volume :
        /// ['backup'].</param>
        public SAPDiskConfigurationsResult(IDictionary<string, SAPDiskConfiguration> volumeConfigurations = default(IDictionary<string, SAPDiskConfiguration>))
        {
            VolumeConfigurations = volumeConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the disk configuration for the db volume. For HANA,
        /// Required volumes are: ['hana/data', 'hana/log', hana/shared',
        /// 'usr/sap', 'os'], Optional volume : ['backup'].
        /// </summary>
        [JsonProperty(PropertyName = "volumeConfigurations")]
        public IDictionary<string, SAPDiskConfiguration> VolumeConfigurations { get; set; }

    }
}
