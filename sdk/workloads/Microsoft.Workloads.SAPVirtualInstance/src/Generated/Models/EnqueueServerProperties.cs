// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the SAP Enqueue Server properties.
    /// </summary>
    public partial class EnqueueServerProperties
    {
        /// <summary>
        /// Initializes a new instance of the EnqueueServerProperties class.
        /// </summary>
        public EnqueueServerProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnqueueServerProperties class.
        /// </summary>
        /// <param name="hostname">Enqueue Server SAP Hostname.</param>
        /// <param name="ipAddress">Enqueue Server SAP IP Address.</param>
        /// <param name="port">Enqueue Server Port.</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy', 'Degraded'</param>
        public EnqueueServerProperties(string hostname = default(string), string ipAddress = default(string), long? port = default(long?), string health = default(string))
        {
            Hostname = hostname;
            IpAddress = ipAddress;
            Port = port;
            Health = health;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets enqueue Server SAP Hostname.
        /// </summary>
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; private set; }

        /// <summary>
        /// Gets enqueue Server SAP IP Address.
        /// </summary>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; private set; }

        /// <summary>
        /// Gets enqueue Server Port.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public long? Port { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy',
        /// 'Degraded'
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public string Health { get; private set; }

    }
}
