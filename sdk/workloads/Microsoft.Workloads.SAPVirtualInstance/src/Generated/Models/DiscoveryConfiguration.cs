// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Discovery Details.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Discovery")]
    public partial class DiscoveryConfiguration : SAPConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the DiscoveryConfiguration class.
        /// </summary>
        public DiscoveryConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiscoveryConfiguration class.
        /// </summary>
        /// <param name="centralServerVmId">The virtual machine ID of the
        /// Central Server.</param>
        /// <param name="managedRgStorageAccountName">The custom storage
        /// account name for the storage account created by the service in the
        /// managed resource group created as part of VIS
        /// deployment.&lt;br&gt;&lt;br&gt;Refer to the storage account naming
        /// rules
        /// [here](https://learn.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftstorage).&lt;br&gt;&lt;br&gt;If
        /// not provided, the service will create the storage account with a
        /// random name.</param>
        /// <param name="appLocation">The geo-location where the SAP system
        /// exists.</param>
        public DiscoveryConfiguration(string centralServerVmId = default(string), string managedRgStorageAccountName = default(string), string appLocation = default(string))
        {
            CentralServerVmId = centralServerVmId;
            ManagedRgStorageAccountName = managedRgStorageAccountName;
            AppLocation = appLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the virtual machine ID of the Central Server.
        /// </summary>
        [JsonProperty(PropertyName = "centralServerVmId")]
        public string CentralServerVmId { get; set; }

        /// <summary>
        /// Gets or sets the custom storage account name for the storage
        /// account created by the service in the managed resource group
        /// created as part of VIS
        /// deployment.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Refer to the storage
        /// account naming rules
        /// [here](https://learn.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftstorage).&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If
        /// not provided, the service will create the storage account with a
        /// random name.
        /// </summary>
        [JsonProperty(PropertyName = "managedRgStorageAccountName")]
        public string ManagedRgStorageAccountName { get; set; }

        /// <summary>
        /// Gets the geo-location where the SAP system exists.
        /// </summary>
        [JsonProperty(PropertyName = "appLocation")]
        public string AppLocation { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ManagedRgStorageAccountName != null)
            {
                if (ManagedRgStorageAccountName.Length > 24)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ManagedRgStorageAccountName", 24);
                }
                if (ManagedRgStorageAccountName.Length < 3)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ManagedRgStorageAccountName", 3);
                }
            }
        }
    }
}
