// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Stop SAP instance(s) request body.
    /// </summary>
    public partial class StopRequest
    {
        /// <summary>
        /// Initializes a new instance of the StopRequest class.
        /// </summary>
        public StopRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StopRequest class.
        /// </summary>
        /// <param name="softStopTimeoutSeconds">This parameter defines how
        /// long (in seconds) the soft shutdown waits until the RFC/HTTP
        /// clients no longer consider the server for calls with load
        /// balancing. Value 0 means that the kernel does not wait, but goes
        /// directly into the next shutdown state, i.e. hard stop.</param>
        /// <param name="deallocateVm">The boolean value indicates whether to
        /// Stop and deallocate the virtual machines along with the SAP
        /// instances.</param>
        public StopRequest(long? softStopTimeoutSeconds = default(long?), bool? deallocateVm = default(bool?))
        {
            SoftStopTimeoutSeconds = softStopTimeoutSeconds;
            DeallocateVm = deallocateVm;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets this parameter defines how long (in seconds) the soft
        /// shutdown waits until the RFC/HTTP clients no longer consider the
        /// server for calls with load balancing. Value 0 means that the kernel
        /// does not wait, but goes directly into the next shutdown state, i.e.
        /// hard stop.
        /// </summary>
        [JsonProperty(PropertyName = "softStopTimeoutSeconds")]
        public long? SoftStopTimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or sets the boolean value indicates whether to Stop and
        /// deallocate the virtual machines along with the SAP instances.
        /// </summary>
        [JsonProperty(PropertyName = "deallocateVm")]
        public bool? DeallocateVm { get; set; }

    }
}
