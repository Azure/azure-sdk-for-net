// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The SAP request to get list of availability zones.
    /// </summary>
    public partial class SAPAvailabilityZoneDetailsRequest
    {
        /// <summary>
        /// Initializes a new instance of the SAPAvailabilityZoneDetailsRequest
        /// class.
        /// </summary>
        public SAPAvailabilityZoneDetailsRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPAvailabilityZoneDetailsRequest
        /// class.
        /// </summary>
        /// <param name="appLocation">The geo-location where the SAP resources
        /// will be created.</param>
        /// <param name="sapProduct">Possible values include: 'ECC', 'S4HANA',
        /// 'Other'</param>
        /// <param name="databaseType">The database type. Eg: HANA, DB2, etc.
        /// Possible values include: 'HANA', 'DB2'</param>
        public SAPAvailabilityZoneDetailsRequest(string appLocation, string sapProduct, string databaseType)
        {
            AppLocation = appLocation;
            SapProduct = sapProduct;
            DatabaseType = databaseType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the geo-location where the SAP resources will be
        /// created.
        /// </summary>
        [JsonProperty(PropertyName = "appLocation")]
        public string AppLocation { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ECC', 'S4HANA', 'Other'
        /// </summary>
        [JsonProperty(PropertyName = "sapProduct")]
        public string SapProduct { get; set; }

        /// <summary>
        /// Gets or sets the database type. Eg: HANA, DB2, etc. Possible values
        /// include: 'HANA', 'DB2'
        /// </summary>
        [JsonProperty(PropertyName = "databaseType")]
        public string DatabaseType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AppLocation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppLocation");
            }
            if (SapProduct == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SapProduct");
            }
            if (DatabaseType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DatabaseType");
            }
        }
    }
}
