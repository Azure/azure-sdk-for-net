// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The full resource names object for database layer resources. The number
    /// of entries in this list should be equal to the number VMs to be created
    /// for database layer.
    /// </summary>
    public partial class DatabaseServerFullResourceNames
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseServerFullResourceNames
        /// class.
        /// </summary>
        public DatabaseServerFullResourceNames()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabaseServerFullResourceNames
        /// class.
        /// </summary>
        /// <param name="virtualMachines">The list of virtual machine naming
        /// details.</param>
        /// <param name="availabilitySetName">The full name for availability
        /// set. In case name is not provided, it will be defaulted to
        /// {SID}-DB-AvSet.</param>
        public DatabaseServerFullResourceNames(IList<VirtualMachineResourceNames> virtualMachines = default(IList<VirtualMachineResourceNames>), string availabilitySetName = default(string), LoadBalancerResourceNames loadBalancer = default(LoadBalancerResourceNames))
        {
            VirtualMachines = virtualMachines;
            AvailabilitySetName = availabilitySetName;
            LoadBalancer = loadBalancer;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of virtual machine naming details.
        /// </summary>
        [JsonProperty(PropertyName = "virtualMachines")]
        public IList<VirtualMachineResourceNames> VirtualMachines { get; set; }

        /// <summary>
        /// Gets or sets the full name for availability set. In case name is
        /// not provided, it will be defaulted to {SID}-DB-AvSet.
        /// </summary>
        [JsonProperty(PropertyName = "availabilitySetName")]
        public string AvailabilitySetName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancer")]
        public LoadBalancerResourceNames LoadBalancer { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (VirtualMachines != null)
            {
                if (VirtualMachines.Count > 2)
                {
                    throw new ValidationException(ValidationRules.MaxItems, "VirtualMachines", 2);
                }
                foreach (var element in VirtualMachines)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (LoadBalancer != null)
            {
                LoadBalancer.Validate();
            }
        }
    }
}
