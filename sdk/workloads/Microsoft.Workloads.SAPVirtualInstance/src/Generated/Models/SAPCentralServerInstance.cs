// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Define the SAP Central Services Instance resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SAPCentralServerInstance : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the SAPCentralServerInstance class.
        /// </summary>
        public SAPCentralServerInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPCentralServerInstance class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="instanceNo">The central services instance
        /// number.</param>
        /// <param name="subnet">The central services instance subnet.</param>
        /// <param name="kernelVersion">The central services instance Kernel
        /// Version.</param>
        /// <param name="kernelPatch">The central services instance Kernel
        /// Patch level.</param>
        /// <param name="loadBalancerDetails">The Load Balancer details such as
        /// LoadBalancer ID attached to ASCS Virtual Machines</param>
        /// <param name="vmDetails">The list of virtual machines corresponding
        /// to the Central Services instance.</param>
        /// <param name="status">Possible values include: 'Starting',
        /// 'Running', 'Stopping', 'Offline', 'PartiallyRunning',
        /// 'Unavailable', 'SoftShutdown'</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy', 'Degraded'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Updating', 'Creating', 'Failed', 'Deleting',
        /// 'Canceled'</param>
        /// <param name="errors">Defines the errors related to SAP Central
        /// Services Instance resource.</param>
        public SAPCentralServerInstance(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), string instanceNo = default(string), string subnet = default(string), MessageServerProperties messageServerProperties = default(MessageServerProperties), EnqueueServerProperties enqueueServerProperties = default(EnqueueServerProperties), GatewayServerProperties gatewayServerProperties = default(GatewayServerProperties), EnqueueReplicationServerProperties enqueueReplicationServerProperties = default(EnqueueReplicationServerProperties), string kernelVersion = default(string), string kernelPatch = default(string), LoadBalancerDetails loadBalancerDetails = default(LoadBalancerDetails), IList<CentralServerVmDetails> vmDetails = default(IList<CentralServerVmDetails>), string status = default(string), string health = default(string), string provisioningState = default(string), SAPVirtualInstanceError errors = default(SAPVirtualInstanceError))
            : base(location, id, name, type, systemData, tags)
        {
            InstanceNo = instanceNo;
            Subnet = subnet;
            MessageServerProperties = messageServerProperties;
            EnqueueServerProperties = enqueueServerProperties;
            GatewayServerProperties = gatewayServerProperties;
            EnqueueReplicationServerProperties = enqueueReplicationServerProperties;
            KernelVersion = kernelVersion;
            KernelPatch = kernelPatch;
            LoadBalancerDetails = loadBalancerDetails;
            VmDetails = vmDetails;
            Status = status;
            Health = health;
            ProvisioningState = provisioningState;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the central services instance number.
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceNo")]
        public string InstanceNo { get; private set; }

        /// <summary>
        /// Gets the central services instance subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public string Subnet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.messageServerProperties")]
        public MessageServerProperties MessageServerProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.enqueueServerProperties")]
        public EnqueueServerProperties EnqueueServerProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayServerProperties")]
        public GatewayServerProperties GatewayServerProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.enqueueReplicationServerProperties")]
        public EnqueueReplicationServerProperties EnqueueReplicationServerProperties { get; set; }

        /// <summary>
        /// Gets the central services instance Kernel Version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelVersion")]
        public string KernelVersion { get; private set; }

        /// <summary>
        /// Gets the central services instance Kernel Patch level.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelPatch")]
        public string KernelPatch { get; private set; }

        /// <summary>
        /// Gets the Load Balancer details such as LoadBalancer ID attached to
        /// ASCS Virtual Machines
        /// </summary>
        [JsonProperty(PropertyName = "properties.loadBalancerDetails")]
        public LoadBalancerDetails LoadBalancerDetails { get; private set; }

        /// <summary>
        /// Gets the list of virtual machines corresponding to the Central
        /// Services instance.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmDetails")]
        public IList<CentralServerVmDetails> VmDetails { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Starting', 'Running', 'Stopping',
        /// 'Offline', 'PartiallyRunning', 'Unavailable', 'SoftShutdown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy',
        /// 'Degraded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Updating', 'Creating',
        /// 'Failed', 'Deleting', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the errors related to SAP Central Services Instance
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public SAPVirtualInstanceError Errors { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
