// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Gets or sets the HA software configuration.
    /// </summary>
    public partial class HighAvailabilitySoftwareConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// HighAvailabilitySoftwareConfiguration class.
        /// </summary>
        public HighAvailabilitySoftwareConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// HighAvailabilitySoftwareConfiguration class.
        /// </summary>
        /// <param name="fencingClientId">The fencing client id.</param>
        /// <param name="fencingClientPassword">The fencing client id
        /// secret/password. The secret should never expire. This will be used
        /// pacemaker to start/stop the cluster VMs.</param>
        public HighAvailabilitySoftwareConfiguration(string fencingClientId, string fencingClientPassword)
        {
            FencingClientId = fencingClientId;
            FencingClientPassword = fencingClientPassword;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the fencing client id.
        /// </summary>
        [JsonProperty(PropertyName = "fencingClientId")]
        public string FencingClientId { get; set; }

        /// <summary>
        /// Gets or sets the fencing client id secret/password. The secret
        /// should never expire. This will be used pacemaker to start/stop the
        /// cluster VMs.
        /// </summary>
        [JsonProperty(PropertyName = "fencingClientPassword")]
        public string FencingClientPassword { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FencingClientId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FencingClientId");
            }
            if (FencingClientPassword == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FencingClientPassword");
            }
        }
    }
}
