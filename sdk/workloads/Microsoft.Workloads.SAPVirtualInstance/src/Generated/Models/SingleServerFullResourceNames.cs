// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The resource name object where the specified values will be full
    /// resource names of the corresponding resources in a single server SAP
    /// system.
    /// </summary>
    [Newtonsoft.Json.JsonObject("FullResourceName")]
    public partial class SingleServerFullResourceNames : SingleServerCustomResourceNames
    {
        /// <summary>
        /// Initializes a new instance of the SingleServerFullResourceNames
        /// class.
        /// </summary>
        public SingleServerFullResourceNames()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SingleServerFullResourceNames
        /// class.
        /// </summary>
        public SingleServerFullResourceNames(VirtualMachineResourceNames virtualMachine = default(VirtualMachineResourceNames))
        {
            VirtualMachine = virtualMachine;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "virtualMachine")]
        public VirtualMachineResourceNames VirtualMachine { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (VirtualMachine != null)
            {
                VirtualMachine.Validate();
            }
        }
    }
}
