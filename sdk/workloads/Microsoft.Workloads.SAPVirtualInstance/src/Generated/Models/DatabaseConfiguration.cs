// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Gets or sets the database configuration.
    /// </summary>
    public partial class DatabaseConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseConfiguration class.
        /// </summary>
        public DatabaseConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabaseConfiguration class.
        /// </summary>
        /// <param name="subnetId">The subnet id.</param>
        /// <param name="virtualMachineConfiguration">Gets or sets the virtual
        /// machine configuration.</param>
        /// <param name="instanceCount">The number of database VMs.</param>
        /// <param name="databaseType">The database type. Possible values
        /// include: 'HANA', 'DB2'</param>
        /// <param name="diskConfiguration">Gets or sets the disk
        /// configuration.</param>
        public DatabaseConfiguration(string subnetId, VirtualMachineConfiguration virtualMachineConfiguration, long instanceCount, string databaseType = default(string), DiskConfiguration diskConfiguration = default(DiskConfiguration))
        {
            DatabaseType = databaseType;
            SubnetId = subnetId;
            VirtualMachineConfiguration = virtualMachineConfiguration;
            InstanceCount = instanceCount;
            DiskConfiguration = diskConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the database type. Possible values include: 'HANA',
        /// 'DB2'
        /// </summary>
        [JsonProperty(PropertyName = "databaseType")]
        public string DatabaseType { get; set; }

        /// <summary>
        /// Gets or sets the subnet id.
        /// </summary>
        [JsonProperty(PropertyName = "subnetId")]
        public string SubnetId { get; set; }

        /// <summary>
        /// Gets or sets the virtual machine configuration.
        /// </summary>
        [JsonProperty(PropertyName = "virtualMachineConfiguration")]
        public VirtualMachineConfiguration VirtualMachineConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the number of database VMs.
        /// </summary>
        [JsonProperty(PropertyName = "instanceCount")]
        public long InstanceCount { get; set; }

        /// <summary>
        /// Gets or sets the disk configuration.
        /// </summary>
        [JsonProperty(PropertyName = "diskConfiguration")]
        public DiskConfiguration DiskConfiguration { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SubnetId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SubnetId");
            }
            if (VirtualMachineConfiguration == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VirtualMachineConfiguration");
            }
            if (VirtualMachineConfiguration != null)
            {
                VirtualMachineConfiguration.Validate();
            }
        }
    }
}
