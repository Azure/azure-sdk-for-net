// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The recommended configuration for a three tier SAP system.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ThreeTier")]
    public partial class ThreeTierRecommendationResult : SAPSizingRecommendationResult
    {
        /// <summary>
        /// Initializes a new instance of the ThreeTierRecommendationResult
        /// class.
        /// </summary>
        public ThreeTierRecommendationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ThreeTierRecommendationResult
        /// class.
        /// </summary>
        /// <param name="dbVmSku">The database VM SKU.</param>
        /// <param name="databaseInstanceCount">The database server instance
        /// count.</param>
        /// <param name="centralServerVmSku">The central server VM SKU.</param>
        /// <param name="centralServerInstanceCount">The central server
        /// instance count.</param>
        /// <param name="applicationServerVmSku">The application server VM
        /// SKU.</param>
        /// <param name="applicationServerInstanceCount">The application server
        /// instance count.</param>
        public ThreeTierRecommendationResult(string dbVmSku = default(string), long? databaseInstanceCount = default(long?), string centralServerVmSku = default(string), long? centralServerInstanceCount = default(long?), string applicationServerVmSku = default(string), long? applicationServerInstanceCount = default(long?))
        {
            DbVmSku = dbVmSku;
            DatabaseInstanceCount = databaseInstanceCount;
            CentralServerVmSku = centralServerVmSku;
            CentralServerInstanceCount = centralServerInstanceCount;
            ApplicationServerVmSku = applicationServerVmSku;
            ApplicationServerInstanceCount = applicationServerInstanceCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the database VM SKU.
        /// </summary>
        [JsonProperty(PropertyName = "dbVmSku")]
        public string DbVmSku { get; set; }

        /// <summary>
        /// Gets or sets the database server instance count.
        /// </summary>
        [JsonProperty(PropertyName = "databaseInstanceCount")]
        public long? DatabaseInstanceCount { get; set; }

        /// <summary>
        /// Gets or sets the central server VM SKU.
        /// </summary>
        [JsonProperty(PropertyName = "centralServerVmSku")]
        public string CentralServerVmSku { get; set; }

        /// <summary>
        /// Gets or sets the central server instance count.
        /// </summary>
        [JsonProperty(PropertyName = "centralServerInstanceCount")]
        public long? CentralServerInstanceCount { get; set; }

        /// <summary>
        /// Gets or sets the application server VM SKU.
        /// </summary>
        [JsonProperty(PropertyName = "applicationServerVmSku")]
        public string ApplicationServerVmSku { get; set; }

        /// <summary>
        /// Gets or sets the application server instance count.
        /// </summary>
        [JsonProperty(PropertyName = "applicationServerInstanceCount")]
        public long? ApplicationServerInstanceCount { get; set; }

    }
}
