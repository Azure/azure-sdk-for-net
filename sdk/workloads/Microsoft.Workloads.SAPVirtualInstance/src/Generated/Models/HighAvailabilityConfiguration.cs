// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Gets or sets the high availability configuration.
    /// </summary>
    public partial class HighAvailabilityConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the HighAvailabilityConfiguration
        /// class.
        /// </summary>
        public HighAvailabilityConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HighAvailabilityConfiguration
        /// class.
        /// </summary>
        /// <param name="highAvailabilityType">The high availability type.
        /// Possible values include: 'AvailabilitySet',
        /// 'AvailabilityZone'</param>
        public HighAvailabilityConfiguration(string highAvailabilityType)
        {
            HighAvailabilityType = highAvailabilityType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the high availability type. Possible values include:
        /// 'AvailabilitySet', 'AvailabilityZone'
        /// </summary>
        [JsonProperty(PropertyName = "highAvailabilityType")]
        public string HighAvailabilityType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (HighAvailabilityType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HighAvailabilityType");
            }
        }
    }
}
