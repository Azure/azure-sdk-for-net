// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Gets or sets the three tier SAP configuration. For prerequisites for
    /// creating the infrastructure, please see
    /// [here](https://go.microsoft.com/fwlink/?linkid=2212611&amp;clcid=0x409)
    /// </summary>
    [Newtonsoft.Json.JsonObject("ThreeTier")]
    public partial class ThreeTierConfiguration : InfrastructureConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ThreeTierConfiguration class.
        /// </summary>
        public ThreeTierConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ThreeTierConfiguration class.
        /// </summary>
        /// <param name="appResourceGroup">The application resource group where
        /// SAP system resources will be deployed.</param>
        /// <param name="centralServer">The central server
        /// configuration.</param>
        /// <param name="applicationServer">The application server
        /// configuration.</param>
        /// <param name="databaseServer">The database configuration.</param>
        /// <param name="networkConfiguration">Network configuration common to
        /// all servers</param>
        /// <param name="highAvailabilityConfig">The high availability
        /// configuration.</param>
        /// <param name="storageConfiguration">The storage
        /// configuration.</param>
        /// <param name="customResourceNames">The set of custom names to be
        /// used for underlying azure resources that are part of the SAP
        /// system.</param>
        public ThreeTierConfiguration(string appResourceGroup, CentralServerConfiguration centralServer, ApplicationServerConfiguration applicationServer, DatabaseConfiguration databaseServer, NetworkConfiguration networkConfiguration = default(NetworkConfiguration), HighAvailabilityConfiguration highAvailabilityConfig = default(HighAvailabilityConfiguration), StorageConfiguration storageConfiguration = default(StorageConfiguration), ThreeTierCustomResourceNames customResourceNames = default(ThreeTierCustomResourceNames))
            : base(appResourceGroup)
        {
            NetworkConfiguration = networkConfiguration;
            CentralServer = centralServer;
            ApplicationServer = applicationServer;
            DatabaseServer = databaseServer;
            HighAvailabilityConfig = highAvailabilityConfig;
            StorageConfiguration = storageConfiguration;
            CustomResourceNames = customResourceNames;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets network configuration common to all servers
        /// </summary>
        [JsonProperty(PropertyName = "networkConfiguration")]
        public NetworkConfiguration NetworkConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the central server configuration.
        /// </summary>
        [JsonProperty(PropertyName = "centralServer")]
        public CentralServerConfiguration CentralServer { get; set; }

        /// <summary>
        /// Gets or sets the application server configuration.
        /// </summary>
        [JsonProperty(PropertyName = "applicationServer")]
        public ApplicationServerConfiguration ApplicationServer { get; set; }

        /// <summary>
        /// Gets or sets the database configuration.
        /// </summary>
        [JsonProperty(PropertyName = "databaseServer")]
        public DatabaseConfiguration DatabaseServer { get; set; }

        /// <summary>
        /// Gets or sets the high availability configuration.
        /// </summary>
        [JsonProperty(PropertyName = "highAvailabilityConfig")]
        public HighAvailabilityConfiguration HighAvailabilityConfig { get; set; }

        /// <summary>
        /// Gets or sets the storage configuration.
        /// </summary>
        [JsonProperty(PropertyName = "storageConfiguration")]
        public StorageConfiguration StorageConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the set of custom names to be used for underlying
        /// azure resources that are part of the SAP system.
        /// </summary>
        [JsonProperty(PropertyName = "customResourceNames")]
        public ThreeTierCustomResourceNames CustomResourceNames { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (CentralServer == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CentralServer");
            }
            if (ApplicationServer == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApplicationServer");
            }
            if (DatabaseServer == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DatabaseServer");
            }
            if (CentralServer != null)
            {
                CentralServer.Validate();
            }
            if (ApplicationServer != null)
            {
                ApplicationServer.Validate();
            }
            if (DatabaseServer != null)
            {
                DatabaseServer.Validate();
            }
            if (HighAvailabilityConfig != null)
            {
                HighAvailabilityConfig.Validate();
            }
        }
    }
}
