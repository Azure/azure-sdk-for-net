// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Define the SAP Application Server Instance resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SAPApplicationServerInstance : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the SAPApplicationServerInstance
        /// class.
        /// </summary>
        public SAPApplicationServerInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPApplicationServerInstance
        /// class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="instanceNo">Application server Instance
        /// Number.</param>
        /// <param name="subnet">Application server Subnet.</param>
        /// <param name="hostname">Application server instance SAP
        /// hostname.</param>
        /// <param name="kernelVersion"> Application server instance SAP Kernel
        /// Version.</param>
        /// <param name="kernelPatch">Application server instance SAP Kernel
        /// Patch level.</param>
        /// <param name="ipAddress"> Application server instance SAP IP
        /// Address.</param>
        /// <param name="gatewayPort">Application server instance gateway
        /// Port.</param>
        /// <param name="icmHttpPort">Application server instance ICM HTTP
        /// Port.</param>
        /// <param name="icmHttpsPort">Application server instance ICM HTTPS
        /// Port.</param>
        /// <param name="dispatcherStatus">Application server instance
        /// dispatcher status.</param>
        /// <param name="loadBalancerDetails">The Load Balancer details such as
        /// LoadBalancer ID attached to Application Server Virtual
        /// Machines</param>
        /// <param name="vmDetails">The list of virtual machines.</param>
        /// <param name="status">Possible values include: 'Starting',
        /// 'Running', 'Stopping', 'Offline', 'PartiallyRunning',
        /// 'Unavailable', 'SoftShutdown'</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy', 'Degraded'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Updating', 'Creating', 'Failed', 'Deleting',
        /// 'Canceled'</param>
        /// <param name="errors">Defines the Application Instance
        /// errors.</param>
        public SAPApplicationServerInstance(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), string instanceNo = default(string), string subnet = default(string), string hostname = default(string), string kernelVersion = default(string), string kernelPatch = default(string), string ipAddress = default(string), long? gatewayPort = default(long?), long? icmHttpPort = default(long?), long? icmHttpsPort = default(long?), string dispatcherStatus = default(string), LoadBalancerDetails loadBalancerDetails = default(LoadBalancerDetails), IList<ApplicationServerVmDetails> vmDetails = default(IList<ApplicationServerVmDetails>), string status = default(string), string health = default(string), string provisioningState = default(string), SAPVirtualInstanceError errors = default(SAPVirtualInstanceError))
            : base(location, id, name, type, systemData, tags)
        {
            InstanceNo = instanceNo;
            Subnet = subnet;
            Hostname = hostname;
            KernelVersion = kernelVersion;
            KernelPatch = kernelPatch;
            IpAddress = ipAddress;
            GatewayPort = gatewayPort;
            IcmHttpPort = icmHttpPort;
            IcmHttpsPort = icmHttpsPort;
            DispatcherStatus = dispatcherStatus;
            LoadBalancerDetails = loadBalancerDetails;
            VmDetails = vmDetails;
            Status = status;
            Health = health;
            ProvisioningState = provisioningState;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets application server Instance Number.
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceNo")]
        public string InstanceNo { get; private set; }

        /// <summary>
        /// Gets application server Subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public string Subnet { get; private set; }

        /// <summary>
        /// Gets application server instance SAP hostname.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostname")]
        public string Hostname { get; private set; }

        /// <summary>
        /// Gets  Application server instance SAP Kernel Version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelVersion")]
        public string KernelVersion { get; private set; }

        /// <summary>
        /// Gets application server instance SAP Kernel Patch level.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelPatch")]
        public string KernelPatch { get; private set; }

        /// <summary>
        /// Gets  Application server instance SAP IP Address.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipAddress")]
        public string IpAddress { get; private set; }

        /// <summary>
        /// Gets application server instance gateway Port.
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayPort")]
        public long? GatewayPort { get; private set; }

        /// <summary>
        /// Gets application server instance ICM HTTP Port.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icmHttpPort")]
        public long? IcmHttpPort { get; private set; }

        /// <summary>
        /// Gets application server instance ICM HTTPS Port.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icmHttpsPort")]
        public long? IcmHttpsPort { get; private set; }

        /// <summary>
        /// Gets application server instance dispatcher status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dispatcherStatus")]
        public string DispatcherStatus { get; private set; }

        /// <summary>
        /// Gets the Load Balancer details such as LoadBalancer ID attached to
        /// Application Server Virtual Machines
        /// </summary>
        [JsonProperty(PropertyName = "properties.loadBalancerDetails")]
        public LoadBalancerDetails LoadBalancerDetails { get; private set; }

        /// <summary>
        /// Gets the list of virtual machines.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmDetails")]
        public IList<ApplicationServerVmDetails> VmDetails { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Starting', 'Running', 'Stopping',
        /// 'Offline', 'PartiallyRunning', 'Unavailable', 'SoftShutdown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy',
        /// 'Degraded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Updating', 'Creating',
        /// 'Failed', 'Deleting', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the Application Instance errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public SAPVirtualInstanceError Errors { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
