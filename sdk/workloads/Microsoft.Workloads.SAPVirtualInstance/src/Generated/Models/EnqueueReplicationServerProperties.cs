// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the SAP Enqueue Replication Server (ERS) properties.
    /// </summary>
    public partial class EnqueueReplicationServerProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// EnqueueReplicationServerProperties class.
        /// </summary>
        public EnqueueReplicationServerProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// EnqueueReplicationServerProperties class.
        /// </summary>
        /// <param name="ersVersion">Possible values include:
        /// 'EnqueueReplicator1', 'EnqueueReplicator2'</param>
        /// <param name="instanceNo">ERS Instance Number.</param>
        /// <param name="hostname">ERS SAP Hostname.</param>
        /// <param name="kernelVersion">ERS SAP Kernel Version.</param>
        /// <param name="kernelPatch">ERS SAP Kernel Patch level.</param>
        /// <param name="ipAddress">ERS SAP IP Address.</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy', 'Degraded'</param>
        public EnqueueReplicationServerProperties(string ersVersion = default(string), string instanceNo = default(string), string hostname = default(string), string kernelVersion = default(string), string kernelPatch = default(string), string ipAddress = default(string), string health = default(string))
        {
            ErsVersion = ersVersion;
            InstanceNo = instanceNo;
            Hostname = hostname;
            KernelVersion = kernelVersion;
            KernelPatch = kernelPatch;
            IpAddress = ipAddress;
            Health = health;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets possible values include: 'EnqueueReplicator1',
        /// 'EnqueueReplicator2'
        /// </summary>
        [JsonProperty(PropertyName = "ersVersion")]
        public string ErsVersion { get; private set; }

        /// <summary>
        /// Gets ERS Instance Number.
        /// </summary>
        [JsonProperty(PropertyName = "instanceNo")]
        public string InstanceNo { get; private set; }

        /// <summary>
        /// Gets ERS SAP Hostname.
        /// </summary>
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; private set; }

        /// <summary>
        /// Gets ERS SAP Kernel Version.
        /// </summary>
        [JsonProperty(PropertyName = "kernelVersion")]
        public string KernelVersion { get; private set; }

        /// <summary>
        /// Gets ERS SAP Kernel Patch level.
        /// </summary>
        [JsonProperty(PropertyName = "kernelPatch")]
        public string KernelPatch { get; private set; }

        /// <summary>
        /// Gets ERS SAP IP Address.
        /// </summary>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy',
        /// 'Degraded'
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public string Health { get; private set; }

    }
}
