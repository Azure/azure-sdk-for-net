// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPVirtualInstance
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SAPDatabaseInstancesOperations.
    /// </summary>
    public static partial class SAPDatabaseInstancesOperationsExtensions
    {
            /// <summary>
            /// Gets the SAP Database Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            public static SAPDatabaseInstance Get(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName)
            {
                return operations.GetAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the SAP Database Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> GetAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates the Database resource corresponding to the Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// PUT by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Request body of Database resource of a SAP system.
            /// </param>
            public static SAPDatabaseInstance Create(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, SAPDatabaseInstance body = default(SAPDatabaseInstance))
            {
                return operations.CreateAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates the Database resource corresponding to the Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// PUT by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Request body of Database resource of a SAP system.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> CreateAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, SAPDatabaseInstance body = default(SAPDatabaseInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the Database instance resource. This can be used to update tags on
            /// the resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            public static SAPDatabaseInstance Update(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.UpdateAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the Database instance resource. This can be used to update tags on
            /// the resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> UpdateAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the Database resource corresponding to a Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// Delete by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            public static SAPDatabaseInstancesDeleteHeaders Delete(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName)
            {
                return operations.DeleteAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the Database resource corresponding to a Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// Delete by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstancesDeleteHeaders> DeleteAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Lists the Database resources associated with a Virtual Instance for SAP
            /// solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            public static IPage<SAPDatabaseInstance> List(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.ListAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Database resources associated with a Virtual Instance for SAP
            /// solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SAPDatabaseInstance>> ListAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Starts the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='startVm'>
            /// The boolean value indicates whether to start the virtual machines before
            /// starting the SAP instances.
            /// </param>
            public static OperationStatusResult StartInstance(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, bool? startVm = false)
            {
                return operations.StartInstanceAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, startVm).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Starts the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='startVm'>
            /// The boolean value indicates whether to start the virtual machines before
            /// starting the SAP instances.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> StartInstanceAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, bool? startVm = false, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.StartInstanceWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, startVm, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Stops the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Stop request for the database instance of the SAP system.
            /// </param>
            public static OperationStatusResult StopInstance(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, StopRequest body = default(StopRequest))
            {
                return operations.StopInstanceAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Stops the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Stop request for the database instance of the SAP system.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> StopInstanceAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, StopRequest body = default(StopRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.StopInstanceWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates the Database resource corresponding to the Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// PUT by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Request body of Database resource of a SAP system.
            /// </param>
            public static SAPDatabaseInstance BeginCreate(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, SAPDatabaseInstance body = default(SAPDatabaseInstance))
            {
                return operations.BeginCreateAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates the Database resource corresponding to the Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// PUT by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Request body of Database resource of a SAP system.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> BeginCreateAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, SAPDatabaseInstance body = default(SAPDatabaseInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the Database resource corresponding to a Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// Delete by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            public static SAPDatabaseInstancesDeleteHeaders BeginDelete(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName)
            {
                return operations.BeginDeleteAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the Database resource corresponding to a Virtual Instance for SAP
            /// solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only.
            /// Delete by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstancesDeleteHeaders> BeginDeleteAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Starts the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='startVm'>
            /// The boolean value indicates whether to start the virtual machines before
            /// starting the SAP instances.
            /// </param>
            public static OperationStatusResult BeginStartInstance(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, bool? startVm = false)
            {
                return operations.BeginStartInstanceAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, startVm).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Starts the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='startVm'>
            /// The boolean value indicates whether to start the virtual machines before
            /// starting the SAP instances.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> BeginStartInstanceAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, bool? startVm = false, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginStartInstanceWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, startVm, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Stops the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Stop request for the database instance of the SAP system.
            /// </param>
            public static OperationStatusResult BeginStopInstance(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, StopRequest body = default(StopRequest))
            {
                return operations.BeginStopInstanceAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Stops the database instance of the SAP system.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='databaseInstanceName'>
            /// Database resource name string modeled as parameter for auto generation to
            /// work correctly.
            /// </param>
            /// <param name='body'>
            /// Stop request for the database instance of the SAP system.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> BeginStopInstanceAsync(this ISAPDatabaseInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string databaseInstanceName, StopRequest body = default(StopRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginStopInstanceWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, databaseInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the Database resources associated with a Virtual Instance for SAP
            /// solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SAPDatabaseInstance> ListNext(this ISAPDatabaseInstancesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Database resources associated with a Virtual Instance for SAP
            /// solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SAPDatabaseInstance>> ListNextAsync(this ISAPDatabaseInstancesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
