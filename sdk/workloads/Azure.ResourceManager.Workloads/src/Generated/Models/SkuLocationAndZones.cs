// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Workloads.Models
{
    /// <summary> The SKU location and zone. </summary>
    public partial class SkuLocationAndZones
    {
        /// <summary> Initializes a new instance of SkuLocationAndZones. </summary>
        internal SkuLocationAndZones()
        {
            Zones = new ChangeTrackingList<string>();
            ZoneDetails = new ChangeTrackingList<SkuZoneDetail>();
            ExtendedLocations = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of SkuLocationAndZones. </summary>
        /// <param name="location"> The location of the SKU. </param>
        /// <param name="zones"> The availability zones of SKU location. </param>
        /// <param name="zoneDetails"> The availability zone details of the SKU location. </param>
        /// <param name="extendedLocations"> The extended locations of SKU. </param>
        /// <param name="locationType"> Type of the extended location. </param>
        internal SkuLocationAndZones(AzureLocation? location, IReadOnlyList<string> zones, IReadOnlyList<SkuZoneDetail> zoneDetails, IReadOnlyList<string> extendedLocations, LocationType? locationType)
        {
            Location = location;
            Zones = zones;
            ZoneDetails = zoneDetails;
            ExtendedLocations = extendedLocations;
            LocationType = locationType;
        }

        /// <summary> The location of the SKU. </summary>
        public AzureLocation? Location { get; }
        /// <summary> The availability zones of SKU location. </summary>
        public IReadOnlyList<string> Zones { get; }
        /// <summary> The availability zone details of the SKU location. </summary>
        public IReadOnlyList<SkuZoneDetail> ZoneDetails { get; }
        /// <summary> The extended locations of SKU. </summary>
        public IReadOnlyList<string> ExtendedLocations { get; }
        /// <summary> Type of the extended location. </summary>
        public LocationType? LocationType { get; }
    }
}
