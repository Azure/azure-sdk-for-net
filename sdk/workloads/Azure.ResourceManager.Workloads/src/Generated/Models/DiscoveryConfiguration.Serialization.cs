// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Workloads.Models
{
    public partial class DiscoveryConfiguration : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(CentralServerVmId))
            {
                writer.WritePropertyName("centralServerVmId"u8);
                writer.WriteStringValue(CentralServerVmId);
            }
            if (Core.Optional.IsDefined(ManagedRgStorageAccountName))
            {
                writer.WritePropertyName("managedRgStorageAccountName"u8);
                writer.WriteStringValue(ManagedRgStorageAccountName);
            }
            writer.WritePropertyName("configurationType"u8);
            writer.WriteStringValue(ConfigurationType.ToString());
            writer.WriteEndObject();
        }

        internal static DiscoveryConfiguration DeserializeDiscoveryConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<ResourceIdentifier> centralServerVmId = default;
            Core.Optional<string> managedRgStorageAccountName = default;
            Core.Optional<AzureLocation> appLocation = default;
            SapConfigurationType configurationType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("centralServerVmId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    centralServerVmId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("managedRgStorageAccountName"u8))
                {
                    managedRgStorageAccountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appLocation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    appLocation = new AzureLocation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("configurationType"u8))
                {
                    configurationType = new SapConfigurationType(property.Value.GetString());
                    continue;
                }
            }
            return new DiscoveryConfiguration(configurationType, centralServerVmId.Value, managedRgStorageAccountName.Value, Core.Optional.ToNullable(appLocation));
        }
    }
}
