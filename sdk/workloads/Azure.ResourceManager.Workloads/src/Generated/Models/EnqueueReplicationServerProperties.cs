// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Workloads.Models
{
    /// <summary> Defines the SAP Enqueue Replication Server (ERS) properties. </summary>
    public partial class EnqueueReplicationServerProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EnqueueReplicationServerProperties"/>. </summary>
        public EnqueueReplicationServerProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="EnqueueReplicationServerProperties"/>. </summary>
        /// <param name="ersVersion"> Defines the type of Enqueue Replication Server. </param>
        /// <param name="instanceNo"> ERS Instance Number. </param>
        /// <param name="hostname"> ERS SAP Hostname. </param>
        /// <param name="kernelVersion"> ERS SAP Kernel Version. </param>
        /// <param name="kernelPatch"> ERS SAP Kernel Patch level. </param>
        /// <param name="ipAddress"> ERS SAP IP Address. </param>
        /// <param name="health"> Defines the health of SAP Instances. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EnqueueReplicationServerProperties(EnqueueReplicationServerType? ersVersion, string instanceNo, string hostname, string kernelVersion, string kernelPatch, string ipAddress, SapHealthState? health, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ErsVersion = ersVersion;
            InstanceNo = instanceNo;
            Hostname = hostname;
            KernelVersion = kernelVersion;
            KernelPatch = kernelPatch;
            IPAddress = ipAddress;
            Health = health;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Defines the type of Enqueue Replication Server. </summary>
        public EnqueueReplicationServerType? ErsVersion { get; }
        /// <summary> ERS Instance Number. </summary>
        public string InstanceNo { get; }
        /// <summary> ERS SAP Hostname. </summary>
        public string Hostname { get; }
        /// <summary> ERS SAP Kernel Version. </summary>
        public string KernelVersion { get; }
        /// <summary> ERS SAP Kernel Patch level. </summary>
        public string KernelPatch { get; }
        /// <summary> ERS SAP IP Address. </summary>
        public string IPAddress { get; }
        /// <summary> Defines the health of SAP Instances. </summary>
        public SapHealthState? Health { get; }
    }
}
