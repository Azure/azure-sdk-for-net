// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Workloads.Models
{
    public partial class SapDiskConfiguration
    {
        internal static SapDiskConfiguration DeserializeSapDiskConfiguration(JsonElement element)
        {
            Optional<string> volume = default;
            Optional<string> diskType = default;
            Optional<long> diskCount = default;
            Optional<long> diskSizeGB = default;
            Optional<long> diskIopsReadWrite = default;
            Optional<long> diskMBpsReadWrite = default;
            Optional<string> diskStorageType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("volume"u8))
                {
                    volume = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("diskType"u8))
                {
                    diskType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("diskCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diskCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("diskSizeGB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diskSizeGB = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("diskIopsReadWrite"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diskIopsReadWrite = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("diskMBpsReadWrite"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diskMBpsReadWrite = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("diskStorageType"u8))
                {
                    diskStorageType = property.Value.GetString();
                    continue;
                }
            }
            return new SapDiskConfiguration(volume.Value, diskType.Value, Optional.ToNullable(diskCount), Optional.ToNullable(diskSizeGB), Optional.ToNullable(diskIopsReadWrite), Optional.ToNullable(diskMBpsReadWrite), diskStorageType.Value);
        }
    }
}
