// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Workloads.Models
{
    public partial class SupportedConfigurationsDiskDetails
    {
        internal static SupportedConfigurationsDiskDetails DeserializeSupportedConfigurationsDiskDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<SapDiskSku> sku = default;
            Core.Optional<long> sizeGB = default;
            Core.Optional<long> minimumSupportedDiskCount = default;
            Core.Optional<long> maximumSupportedDiskCount = default;
            Core.Optional<long> iopsReadWrite = default;
            Core.Optional<long> mbpsReadWrite = default;
            Core.Optional<string> diskTier = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sku"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sku = SapDiskSku.DeserializeSapDiskSku(property.Value);
                    continue;
                }
                if (property.NameEquals("sizeGB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sizeGB = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("minimumSupportedDiskCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minimumSupportedDiskCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("maximumSupportedDiskCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maximumSupportedDiskCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("iopsReadWrite"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    iopsReadWrite = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("mbpsReadWrite"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    mbpsReadWrite = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("diskTier"u8))
                {
                    diskTier = property.Value.GetString();
                    continue;
                }
            }
            return new SupportedConfigurationsDiskDetails(sku.Value, Core.Optional.ToNullable(sizeGB), Core.Optional.ToNullable(minimumSupportedDiskCount), Core.Optional.ToNullable(maximumSupportedDiskCount), Core.Optional.ToNullable(iopsReadWrite), Core.Optional.ToNullable(mbpsReadWrite), diskTier.Value);
        }
    }
}
