// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Workloads.Models
{
    /// <summary> Stop SAP instance(s) request body. </summary>
    public partial class SapStopContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="SapStopContent"/>. </summary>
        public SapStopContent()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SapStopContent"/>. </summary>
        /// <param name="softStopTimeoutSeconds"> This parameter defines how long (in seconds) the soft shutdown waits until the RFC/HTTP clients no longer consider the server for calls with load balancing. Value 0 means that the kernel does not wait, but goes directly into the next shutdown state, i.e. hard stop. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal SapStopContent(long? softStopTimeoutSeconds, Dictionary<string, BinaryData> rawData)
        {
            SoftStopTimeoutSeconds = softStopTimeoutSeconds;
            _rawData = rawData;
        }

        /// <summary> This parameter defines how long (in seconds) the soft shutdown waits until the RFC/HTTP clients no longer consider the server for calls with load balancing. Value 0 means that the kernel does not wait, but goes directly into the next shutdown state, i.e. hard stop. </summary>
        public long? SoftStopTimeoutSeconds { get; set; }
    }
}
