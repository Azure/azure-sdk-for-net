// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Workloads.Models
{
    public partial class ThreeTierRecommendationResult
    {
        internal static ThreeTierRecommendationResult DeserializeThreeTierRecommendationResult(JsonElement element)
        {
            Optional<string> dbVmSku = default;
            Optional<long> databaseInstanceCount = default;
            Optional<string> centralServerVmSku = default;
            Optional<long> centralServerInstanceCount = default;
            Optional<string> applicationServerVmSku = default;
            Optional<long> applicationServerInstanceCount = default;
            SapDeploymentType deploymentType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dbVmSku"))
                {
                    dbVmSku = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("databaseInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    databaseInstanceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("centralServerVmSku"))
                {
                    centralServerVmSku = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("centralServerInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    centralServerInstanceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("applicationServerVmSku"))
                {
                    applicationServerVmSku = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("applicationServerInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    applicationServerInstanceCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("deploymentType"))
                {
                    deploymentType = new SapDeploymentType(property.Value.GetString());
                    continue;
                }
            }
            return new ThreeTierRecommendationResult(deploymentType, dbVmSku.Value, Optional.ToNullable(databaseInstanceCount), centralServerVmSku.Value, Optional.ToNullable(centralServerInstanceCount), applicationServerVmSku.Value, Optional.ToNullable(applicationServerInstanceCount));
        }
    }
}
