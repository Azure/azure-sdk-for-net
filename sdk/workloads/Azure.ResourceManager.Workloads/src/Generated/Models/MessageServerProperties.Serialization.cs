// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Workloads.Models
{
    public partial class MessageServerProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WriteEndObject();
        }

        internal static MessageServerProperties DeserializeMessageServerProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<long?> msPort = default;
            Core.Optional<long?> internalMsPort = default;
            Core.Optional<long?> httpPort = default;
            Core.Optional<long?> httpsPort = default;
            Core.Optional<string> hostname = default;
            Core.Optional<string> ipAddress = default;
            Core.Optional<SapHealthState> health = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("msPort"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        msPort = null;
                        continue;
                    }
                    msPort = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("internalMsPort"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        internalMsPort = null;
                        continue;
                    }
                    internalMsPort = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("httpPort"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        httpPort = null;
                        continue;
                    }
                    httpPort = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("httpsPort"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        httpsPort = null;
                        continue;
                    }
                    httpsPort = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("hostname"u8))
                {
                    hostname = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ipAddress"u8))
                {
                    ipAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("health"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    health = new SapHealthState(property.Value.GetString());
                    continue;
                }
            }
            return new MessageServerProperties(Core.Optional.ToNullable(msPort), Core.Optional.ToNullable(internalMsPort), Core.Optional.ToNullable(httpPort), Core.Optional.ToNullable(httpsPort), hostname.Value, ipAddress.Value, Core.Optional.ToNullable(health));
        }
    }
}
