// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The SKU definition.
    /// </summary>
    public partial class SkuDefinition
    {
        /// <summary>
        /// Initializes a new instance of the SkuDefinition class.
        /// </summary>
        public SkuDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkuDefinition class.
        /// </summary>
        /// <param name="name">The name of the SKU.</param>
        /// <param name="resourceType">Resource type the SKU applicable
        /// for.</param>
        /// <param name="tier">This field is required to be implemented by the
        /// Resource Provider if the service has more than one tier, but is not
        /// required on a PUT.</param>
        /// <param name="size">The SKU size. When the name field is the
        /// combination of tier and some other value, this would be the
        /// standalone code. </param>
        /// <param name="family">If the service has different generations of
        /// hardware, for the same SKU, then that can be captured here.</param>
        /// <param name="kind">If the service has different kinds of hardware,
        /// for the same SKU, then that can be captured here.</param>
        /// <param name="locations">List of locations where this SKU is
        /// available.</param>
        /// <param name="locationInfo">List of locations where this SKU is
        /// available.</param>
        /// <param name="capacity">If the SKU supports scale out/in then the
        /// capacity integer should be included. If scale out/in is not
        /// possible for the resource this may be omitted.</param>
        /// <param name="costs">The SKU costs.</param>
        /// <param name="capabilities">The SKU capabilities.</param>
        /// <param name="restrictions">The SKU restrictions.</param>
        public SkuDefinition(string name, string resourceType = default(string), string tier = default(string), string size = default(string), string family = default(string), string kind = default(string), IList<string> locations = default(IList<string>), IList<SkuLocationAndZones> locationInfo = default(IList<SkuLocationAndZones>), object capacity = default(object), IList<SkuCost> costs = default(IList<SkuCost>), IList<SkuCapability> capabilities = default(IList<SkuCapability>), IList<SkuRestriction> restrictions = default(IList<SkuRestriction>))
        {
            Name = name;
            ResourceType = resourceType;
            Tier = tier;
            Size = size;
            Family = family;
            Kind = kind;
            Locations = locations;
            LocationInfo = locationInfo;
            Capacity = capacity;
            Costs = costs;
            Capabilities = capabilities;
            Restrictions = restrictions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the SKU.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets resource type the SKU applicable for.
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets this field is required to be implemented by the
        /// Resource Provider if the service has more than one tier, but is not
        /// required on a PUT.
        /// </summary>
        [JsonProperty(PropertyName = "tier")]
        public string Tier { get; set; }

        /// <summary>
        /// Gets or sets the SKU size. When the name field is the combination
        /// of tier and some other value, this would be the standalone code.
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public string Size { get; set; }

        /// <summary>
        /// Gets or sets if the service has different generations of hardware,
        /// for the same SKU, then that can be captured here.
        /// </summary>
        [JsonProperty(PropertyName = "family")]
        public string Family { get; set; }

        /// <summary>
        /// Gets or sets if the service has different kinds of hardware, for
        /// the same SKU, then that can be captured here.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets list of locations where this SKU is available.
        /// </summary>
        [JsonProperty(PropertyName = "locations")]
        public IList<string> Locations { get; set; }

        /// <summary>
        /// Gets or sets list of locations where this SKU is available.
        /// </summary>
        [JsonProperty(PropertyName = "locationInfo")]
        public IList<SkuLocationAndZones> LocationInfo { get; set; }

        /// <summary>
        /// Gets or sets if the SKU supports scale out/in then the capacity
        /// integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public object Capacity { get; set; }

        /// <summary>
        /// Gets or sets the SKU costs.
        /// </summary>
        [JsonProperty(PropertyName = "costs")]
        public IList<SkuCost> Costs { get; set; }

        /// <summary>
        /// Gets or sets the SKU capabilities.
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IList<SkuCapability> Capabilities { get; set; }

        /// <summary>
        /// Gets or sets the SKU restrictions.
        /// </summary>
        [JsonProperty(PropertyName = "restrictions")]
        public IList<SkuRestriction> Restrictions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
