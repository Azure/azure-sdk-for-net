// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network profile
    /// </summary>
    public partial class NetworkProfile
    {
        /// <summary>
        /// Initializes a new instance of the NetworkProfile class.
        /// </summary>
        public NetworkProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkProfile class.
        /// </summary>
        /// <param name="loadBalancerType">Load balancer type. Possible values
        /// include: 'ApplicationGateway', 'LoadBalancer'</param>
        /// <param name="loadBalancerSku">Load balancer SKU</param>
        /// <param name="loadBalancerTier">Load balancer tier</param>
        /// <param name="capacity">Capacity, applicable only for Application
        /// Gateway</param>
        /// <param name="azureFrontDoorEnabled">Whether to enable Azure front
        /// door. Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="vNetResourceId">Virtual network resource Id</param>
        /// <param name="loadBalancerResourceId">Azure Loadbalancer or
        /// ApplicationGateway resource Id</param>
        /// <param name="azureFrontDoorResourceId">Azure front door resource
        /// id</param>
        /// <param name="frontEndPublicIpResourceId">Loadbalancer front-end IP
        /// address resource Id</param>
        /// <param name="outboundPublicIpResourceIds">List of outbound public
        /// IP resource IDs</param>
        public NetworkProfile(string loadBalancerType, string loadBalancerSku = default(string), string loadBalancerTier = default(string), int? capacity = default(int?), string azureFrontDoorEnabled = default(string), string vNetResourceId = default(string), string loadBalancerResourceId = default(string), string azureFrontDoorResourceId = default(string), string frontEndPublicIpResourceId = default(string), IList<string> outboundPublicIpResourceIds = default(IList<string>))
        {
            LoadBalancerType = loadBalancerType;
            LoadBalancerSku = loadBalancerSku;
            LoadBalancerTier = loadBalancerTier;
            Capacity = capacity;
            AzureFrontDoorEnabled = azureFrontDoorEnabled;
            VNetResourceId = vNetResourceId;
            LoadBalancerResourceId = loadBalancerResourceId;
            AzureFrontDoorResourceId = azureFrontDoorResourceId;
            FrontEndPublicIpResourceId = frontEndPublicIpResourceId;
            OutboundPublicIpResourceIds = outboundPublicIpResourceIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets load balancer type. Possible values include:
        /// 'ApplicationGateway', 'LoadBalancer'
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerType")]
        public string LoadBalancerType { get; set; }

        /// <summary>
        /// Gets or sets load balancer SKU
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerSku")]
        public string LoadBalancerSku { get; set; }

        /// <summary>
        /// Gets or sets load balancer tier
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerTier")]
        public string LoadBalancerTier { get; set; }

        /// <summary>
        /// Gets or sets capacity, applicable only for Application Gateway
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public int? Capacity { get; set; }

        /// <summary>
        /// Gets or sets whether to enable Azure front door. Possible values
        /// include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "azureFrontDoorEnabled")]
        public string AzureFrontDoorEnabled { get; set; }

        /// <summary>
        /// Gets virtual network resource Id
        /// </summary>
        [JsonProperty(PropertyName = "vNetResourceId")]
        public string VNetResourceId { get; private set; }

        /// <summary>
        /// Gets azure Loadbalancer or ApplicationGateway resource Id
        /// </summary>
        [JsonProperty(PropertyName = "loadBalancerResourceId")]
        public string LoadBalancerResourceId { get; private set; }

        /// <summary>
        /// Gets azure front door resource id
        /// </summary>
        [JsonProperty(PropertyName = "azureFrontDoorResourceId")]
        public string AzureFrontDoorResourceId { get; private set; }

        /// <summary>
        /// Gets loadbalancer front-end IP address resource Id
        /// </summary>
        [JsonProperty(PropertyName = "frontEndPublicIpResourceId")]
        public string FrontEndPublicIpResourceId { get; private set; }

        /// <summary>
        /// Gets list of outbound public IP resource IDs
        /// </summary>
        [JsonProperty(PropertyName = "outboundPublicIpResourceIds")]
        public IList<string> OutboundPublicIpResourceIds { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (LoadBalancerType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LoadBalancerType");
            }
        }
    }
}
