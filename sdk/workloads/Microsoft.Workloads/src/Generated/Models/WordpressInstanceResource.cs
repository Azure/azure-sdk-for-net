// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// WordPress instance resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WordpressInstanceResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the WordpressInstanceResource class.
        /// </summary>
        public WordpressInstanceResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WordpressInstanceResource class.
        /// </summary>
        /// <param name="version">Application version. Possible values include:
        /// '5.4.3', '5.4.2', '5.4.1', '5.4'</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="databaseName">Database name used by the
        /// application</param>
        /// <param name="databaseUser">User name used by the application to
        /// connect to database</param>
        /// <param name="siteUrl">Site Url to access the WordPress
        /// application</param>
        /// <param name="provisioningState">WordPress instance provisioning
        /// state. Possible values include: 'NotSpecified', 'Accepted',
        /// 'Created', 'Succeeded', 'Failed', 'Canceled', 'Installing'</param>
        public WordpressInstanceResource(string version, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string databaseName = default(string), string databaseUser = default(string), string siteUrl = default(string), string provisioningState = default(string))
            : base(id, name, type, systemData)
        {
            Version = version;
            DatabaseName = databaseName;
            DatabaseUser = databaseUser;
            SiteUrl = siteUrl;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets application version. Possible values include: '5.4.3',
        /// '5.4.2', '5.4.1', '5.4'
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets database name used by the application
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets user name used by the application to connect to
        /// database
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseUser")]
        public string DatabaseUser { get; set; }

        /// <summary>
        /// Gets site Url to access the WordPress application
        /// </summary>
        [JsonProperty(PropertyName = "properties.siteUrl")]
        public string SiteUrl { get; private set; }

        /// <summary>
        /// Gets wordPress instance provisioning state. Possible values
        /// include: 'NotSpecified', 'Accepted', 'Created', 'Succeeded',
        /// 'Failed', 'Canceled', 'Installing'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Version == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Version");
            }
        }
    }
}
