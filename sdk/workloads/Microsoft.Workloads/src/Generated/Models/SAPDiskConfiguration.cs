// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The SAP Disk Configuration.
    /// </summary>
    public partial class SAPDiskConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the SAPDiskConfiguration class.
        /// </summary>
        public SAPDiskConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPDiskConfiguration class.
        /// </summary>
        /// <param name="volume">The volume name.</param>
        /// <param name="diskType">The disk type.</param>
        /// <param name="diskCount">The disk count.</param>
        /// <param name="diskSizeGB">The disk size in GB.</param>
        /// <param name="diskIopsReadWrite">The disk Iops.</param>
        /// <param name="diskMBpsReadWrite">The disk provisioned throughput in
        /// MBps.</param>
        /// <param name="diskStorageType">The disk storage type</param>
        public SAPDiskConfiguration(string volume = default(string), string diskType = default(string), long? diskCount = default(long?), long? diskSizeGB = default(long?), long? diskIopsReadWrite = default(long?), long? diskMBpsReadWrite = default(long?), string diskStorageType = default(string))
        {
            Volume = volume;
            DiskType = diskType;
            DiskCount = diskCount;
            DiskSizeGB = diskSizeGB;
            DiskIopsReadWrite = diskIopsReadWrite;
            DiskMBpsReadWrite = diskMBpsReadWrite;
            DiskStorageType = diskStorageType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the volume name.
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public string Volume { get; set; }

        /// <summary>
        /// Gets or sets the disk type.
        /// </summary>
        [JsonProperty(PropertyName = "diskType")]
        public string DiskType { get; set; }

        /// <summary>
        /// Gets or sets the disk count.
        /// </summary>
        [JsonProperty(PropertyName = "diskCount")]
        public long? DiskCount { get; set; }

        /// <summary>
        /// Gets or sets the disk size in GB.
        /// </summary>
        [JsonProperty(PropertyName = "diskSizeGB")]
        public long? DiskSizeGB { get; set; }

        /// <summary>
        /// Gets or sets the disk Iops.
        /// </summary>
        [JsonProperty(PropertyName = "diskIopsReadWrite")]
        public long? DiskIopsReadWrite { get; set; }

        /// <summary>
        /// Gets or sets the disk provisioned throughput in MBps.
        /// </summary>
        [JsonProperty(PropertyName = "diskMBpsReadWrite")]
        public long? DiskMBpsReadWrite { get; set; }

        /// <summary>
        /// Gets or sets the disk storage type
        /// </summary>
        [JsonProperty(PropertyName = "diskStorageType")]
        public string DiskStorageType { get; set; }

    }
}
