// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VMSS profile
    /// </summary>
    public partial class VmssNodesProfile : NodeProfile
    {
        /// <summary>
        /// Initializes a new instance of the VmssNodesProfile class.
        /// </summary>
        public VmssNodesProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VmssNodesProfile class.
        /// </summary>
        /// <param name="nodeSku">VM SKU for node(s)</param>
        /// <param name="osImage">OS image used for creating the nodes</param>
        /// <param name="osDisk">OS disk details</param>
        /// <param name="name">VM or VMSS name</param>
        /// <param name="dataDisks">Data disks details. This property is not in
        /// use right now</param>
        /// <param name="nodeResourceIds">VM/VMSS resource ARM Ids</param>
        /// <param name="autoScaleMinCount">Minimum number of nodes for
        /// autoscale</param>
        /// <param name="autoScaleMaxCount">Maximum number of nodes for
        /// autoscale</param>
        public VmssNodesProfile(string nodeSku, OsImageProfile osImage, DiskInfo osDisk, string name = default(string), IList<DiskInfo> dataDisks = default(IList<DiskInfo>), IList<string> nodeResourceIds = default(IList<string>), int? autoScaleMinCount = default(int?), int? autoScaleMaxCount = default(int?))
            : base(nodeSku, osImage, osDisk, name, dataDisks, nodeResourceIds)
        {
            AutoScaleMinCount = autoScaleMinCount;
            AutoScaleMaxCount = autoScaleMaxCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets minimum number of nodes for autoscale
        /// </summary>
        [JsonProperty(PropertyName = "autoScaleMinCount")]
        public int? AutoScaleMinCount { get; set; }

        /// <summary>
        /// Gets or sets maximum number of nodes for autoscale
        /// </summary>
        [JsonProperty(PropertyName = "autoScaleMaxCount")]
        public int? AutoScaleMaxCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (AutoScaleMinCount < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "AutoScaleMinCount", 1);
            }
            if (AutoScaleMaxCount < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "AutoScaleMaxCount", 1);
            }
        }
    }
}
