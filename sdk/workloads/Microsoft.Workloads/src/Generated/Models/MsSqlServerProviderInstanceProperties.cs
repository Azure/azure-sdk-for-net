// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Gets or sets the SQL server provider properties.
    /// </summary>
    [Newtonsoft.Json.JsonObject("MsSqlServer")]
    public partial class MsSqlServerProviderInstanceProperties : ProviderSpecificProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MsSqlServerProviderInstanceProperties class.
        /// </summary>
        public MsSqlServerProviderInstanceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MsSqlServerProviderInstanceProperties class.
        /// </summary>
        /// <param name="hostname">Gets or sets the SQL server host
        /// name.</param>
        /// <param name="dbPort">Gets or sets the database sql port.</param>
        /// <param name="dbUsername">Gets or sets the database user
        /// name.</param>
        /// <param name="dbPassword">Gets or sets the database
        /// password.</param>
        /// <param name="dbPasswordUri">Gets or sets the key vault URI to
        /// secret with the database password.</param>
        /// <param name="sapSid">Gets or sets the SAP System Identifier</param>
        public MsSqlServerProviderInstanceProperties(string hostname = default(string), string dbPort = default(string), string dbUsername = default(string), string dbPassword = default(string), string dbPasswordUri = default(string), string sapSid = default(string))
        {
            Hostname = hostname;
            DbPort = dbPort;
            DbUsername = dbUsername;
            DbPassword = dbPassword;
            DbPasswordUri = dbPasswordUri;
            SapSid = sapSid;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SQL server host name.
        /// </summary>
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; set; }

        /// <summary>
        /// Gets or sets the database sql port.
        /// </summary>
        [JsonProperty(PropertyName = "dbPort")]
        public string DbPort { get; set; }

        /// <summary>
        /// Gets or sets the database user name.
        /// </summary>
        [JsonProperty(PropertyName = "dbUsername")]
        public string DbUsername { get; set; }

        /// <summary>
        /// Gets or sets the database password.
        /// </summary>
        [JsonProperty(PropertyName = "dbPassword")]
        public string DbPassword { get; set; }

        /// <summary>
        /// Gets or sets the key vault URI to secret with the database
        /// password.
        /// </summary>
        [JsonProperty(PropertyName = "dbPasswordUri")]
        public string DbPasswordUri { get; set; }

        /// <summary>
        /// Gets or sets the SAP System Identifier
        /// </summary>
        [JsonProperty(PropertyName = "sapSid")]
        public string SapSid { get; set; }

    }
}
