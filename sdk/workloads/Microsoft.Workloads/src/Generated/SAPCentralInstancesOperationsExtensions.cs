// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SAPCentralInstancesOperations.
    /// </summary>
    public static partial class SAPCentralInstancesOperationsExtensions
    {
            /// <summary>
            /// Gets the SAP Central Services Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            public static SAPCentralServerInstance Get(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName)
            {
                return operations.GetAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the SAP Central Services Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPCentralServerInstance> GetAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. PUT operation on
            /// this resource by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='body'>
            /// The SAP Central Services Instance request body.
            /// </param>
            public static SAPCentralServerInstance Create(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, SAPCentralServerInstance body = default(SAPCentralServerInstance))
            {
                return operations.CreateAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. PUT operation on
            /// this resource by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='body'>
            /// The SAP Central Services Instance request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPCentralServerInstance> CreateAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, SAPCentralServerInstance body = default(SAPCentralServerInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This can be used to update tags on the resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            public static SAPCentralServerInstance Update(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.UpdateAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This can be used to update tags on the resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPCentralServerInstance> UpdateAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. Delete operation on
            /// this resource by end user will return a Bad Request error. You can delete
            /// the parent resource, which is the Virtual Instance for SAP solutions
            /// resource, using the delete operation on it.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            public static OperationStatusResult Delete(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName)
            {
                return operations.DeleteAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. Delete operation on
            /// this resource by end user will return a Bad Request error. You can delete
            /// the parent resource, which is the Virtual Instance for SAP solutions
            /// resource, using the delete operation on it.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> DeleteAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the SAP Central Services Instance resource for the given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            public static IPage<SAPCentralServerInstance> List(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.ListAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the SAP Central Services Instance resource for the given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SAPCentralServerInstance>> ListAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. PUT operation on
            /// this resource by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='body'>
            /// The SAP Central Services Instance request body.
            /// </param>
            public static SAPCentralServerInstance BeginCreate(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, SAPCentralServerInstance body = default(SAPCentralServerInstance))
            {
                return operations.BeginCreateAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. PUT operation on
            /// this resource by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='body'>
            /// The SAP Central Services Instance request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPCentralServerInstance> BeginCreateAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, SAPCentralServerInstance body = default(SAPCentralServerInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This can be used to update tags on the resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            public static SAPCentralServerInstance BeginUpdate(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.BeginUpdateAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This can be used to update tags on the resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPCentralServerInstance> BeginUpdateAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. Delete operation on
            /// this resource by end user will return a Bad Request error. You can delete
            /// the parent resource, which is the Virtual Instance for SAP solutions
            /// resource, using the delete operation on it.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            public static OperationStatusResult BeginDelete(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName)
            {
                return operations.BeginDeleteAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the SAP Central Services Instance resource.
            /// &lt;br&gt;&lt;br&gt;This will be used by service only. Delete operation on
            /// this resource by end user will return a Bad Request error. You can delete
            /// the parent resource, which is the Virtual Instance for SAP solutions
            /// resource, using the delete operation on it.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='centralInstanceName'>
            /// Central Services Instance resource name string modeled as parameter for
            /// auto generation to work correctly.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> BeginDeleteAsync(this ISAPCentralInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string centralInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, centralInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the SAP Central Services Instance resource for the given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SAPCentralServerInstance> ListNext(this ISAPCentralInstancesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the SAP Central Services Instance resource for the given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SAPCentralServerInstance>> ListNextAsync(this ISAPCentralInstancesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
