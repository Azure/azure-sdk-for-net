// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SAPApplicationServerInstancesOperations.
    /// </summary>
    public static partial class SAPApplicationServerInstancesOperationsExtensions
    {
            /// <summary>
            /// Gets the SAP Application Server Instance corresponding to the Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            public static SAPApplicationServerInstance Get(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName)
            {
                return operations.GetAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the SAP Application Server Instance corresponding to the Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> GetAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource. &lt;br&gt;&lt;br&gt;This
            /// will be used by service only. PUT by end user will return a Bad Request
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server Instance resource request body.
            /// </param>
            public static SAPApplicationServerInstance Create(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, SAPApplicationServerInstance body = default(SAPApplicationServerInstance))
            {
                return operations.CreateAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource. &lt;br&gt;&lt;br&gt;This
            /// will be used by service only. PUT by end user will return a Bad Request
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server Instance resource request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> CreateAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, SAPApplicationServerInstance body = default(SAPApplicationServerInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            public static SAPApplicationServerInstance Update(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.UpdateAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> UpdateAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the SAP Application Server Instance resource.
            /// &lt;br&gt;&lt;br&gt;This operation will be used by service only. Delete by
            /// end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            public static OperationStatusResult Delete(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName)
            {
                return operations.DeleteAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the SAP Application Server Instance resource.
            /// &lt;br&gt;&lt;br&gt;This operation will be used by service only. Delete by
            /// end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> DeleteAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the SAP Application Server Instance resources for a given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            public static IPage<SAPApplicationServerInstance> List(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.ListAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the SAP Application Server Instance resources for a given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SAPApplicationServerInstance>> ListAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource. &lt;br&gt;&lt;br&gt;This
            /// will be used by service only. PUT by end user will return a Bad Request
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server Instance resource request body.
            /// </param>
            public static SAPApplicationServerInstance BeginCreate(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, SAPApplicationServerInstance body = default(SAPApplicationServerInstance))
            {
                return operations.BeginCreateAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource. &lt;br&gt;&lt;br&gt;This
            /// will be used by service only. PUT by end user will return a Bad Request
            /// error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server Instance resource request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> BeginCreateAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, SAPApplicationServerInstance body = default(SAPApplicationServerInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            public static SAPApplicationServerInstance BeginUpdate(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>))
            {
                return operations.BeginUpdateAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, tags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Application Server Instance resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='tags'>
            /// Gets or sets the Resource tags.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> BeginUpdateAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, IDictionary<string, string> tags = default(IDictionary<string, string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, tags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the SAP Application Server Instance resource.
            /// &lt;br&gt;&lt;br&gt;This operation will be used by service only. Delete by
            /// end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            public static OperationStatusResult BeginDelete(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName)
            {
                return operations.BeginDeleteAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the SAP Application Server Instance resource.
            /// &lt;br&gt;&lt;br&gt;This operation will be used by service only. Delete by
            /// end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the Virtual Instances for SAP solutions resource
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> BeginDeleteAsync(this ISAPApplicationServerInstancesOperations operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the SAP Application Server Instance resources for a given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SAPApplicationServerInstance> ListNext(this ISAPApplicationServerInstancesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the SAP Application Server Instance resources for a given Virtual
            /// Instance for SAP solutions resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SAPApplicationServerInstance>> ListNextAsync(this ISAPApplicationServerInstancesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
