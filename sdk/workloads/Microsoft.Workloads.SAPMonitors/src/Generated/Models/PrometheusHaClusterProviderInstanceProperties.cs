// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPMonitors.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Gets or sets the PrometheusHaCluster provider properties.
    /// </summary>
    [Newtonsoft.Json.JsonObject("PrometheusHaCluster")]
    public partial class PrometheusHaClusterProviderInstanceProperties : ProviderSpecificProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PrometheusHaClusterProviderInstanceProperties class.
        /// </summary>
        public PrometheusHaClusterProviderInstanceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PrometheusHaClusterProviderInstanceProperties class.
        /// </summary>
        /// <param name="prometheusUrl">URL of the Node Exporter
        /// endpoint.</param>
        /// <param name="hostname">Gets or sets the target machine
        /// name.</param>
        /// <param name="sid">Gets or sets the cluster sid.</param>
        /// <param name="clusterName">Gets or sets the clusterName.</param>
        /// <param name="sslPreference">Possible values include: 'Disabled',
        /// 'RootCertificate', 'ServerCertificate'</param>
        /// <param name="sslCertificateUri">Gets or sets the blob URI to SSL
        /// certificate for the HA cluster exporter.</param>
        public PrometheusHaClusterProviderInstanceProperties(string prometheusUrl = default(string), string hostname = default(string), string sid = default(string), string clusterName = default(string), string sslPreference = default(string), string sslCertificateUri = default(string))
        {
            PrometheusUrl = prometheusUrl;
            Hostname = hostname;
            Sid = sid;
            ClusterName = clusterName;
            SslPreference = sslPreference;
            SslCertificateUri = sslCertificateUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets URL of the Node Exporter endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "prometheusUrl")]
        public string PrometheusUrl { get; set; }

        /// <summary>
        /// Gets or sets the target machine name.
        /// </summary>
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; set; }

        /// <summary>
        /// Gets or sets the cluster sid.
        /// </summary>
        [JsonProperty(PropertyName = "sid")]
        public string Sid { get; set; }

        /// <summary>
        /// Gets or sets the clusterName.
        /// </summary>
        [JsonProperty(PropertyName = "clusterName")]
        public string ClusterName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Disabled',
        /// 'RootCertificate', 'ServerCertificate'
        /// </summary>
        [JsonProperty(PropertyName = "sslPreference")]
        public string SslPreference { get; set; }

        /// <summary>
        /// Gets or sets the blob URI to SSL certificate for the HA cluster
        /// exporter.
        /// </summary>
        [JsonProperty(PropertyName = "sslCertificateUri")]
        public string SslCertificateUri { get; set; }

    }
}
