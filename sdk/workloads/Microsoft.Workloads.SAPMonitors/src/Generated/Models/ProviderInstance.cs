// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPMonitors.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A provider instance associated with SAP monitor.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ProviderInstance : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ProviderInstance class.
        /// </summary>
        public ProviderInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProviderInstance class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="provisioningState">State of provisioning of the
        /// provider instance. Possible values include: 'Accepted', 'Creating',
        /// 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating',
        /// 'Canceled'</param>
        /// <param name="health">Resource health details</param>
        /// <param name="errors">Defines the provider instance errors.</param>
        /// <param name="providerSettings">Defines the provider specific
        /// properties.</param>
        public ProviderInstance(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string provisioningState = default(string), Health health = default(Health), ProviderInstancePropertiesErrors errors = default(ProviderInstancePropertiesErrors), ProviderSpecificProperties providerSettings = default(ProviderSpecificProperties))
            : base(id, name, type, systemData)
        {
            ProvisioningState = provisioningState;
            Health = health;
            Errors = errors;
            ProviderSettings = providerSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets state of provisioning of the provider instance. Possible
        /// values include: 'Accepted', 'Creating', 'Updating', 'Failed',
        /// 'Succeeded', 'Deleting', 'Migrating', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets resource health details
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public Health Health { get; private set; }

        /// <summary>
        /// Gets defines the provider instance errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public ProviderInstancePropertiesErrors Errors { get; private set; }

        /// <summary>
        /// Gets or sets defines the provider specific properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerSettings")]
        public ProviderSpecificProperties ProviderSettings { get; set; }

    }
}
