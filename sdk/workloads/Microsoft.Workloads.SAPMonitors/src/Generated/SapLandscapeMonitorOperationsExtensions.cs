// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPMonitors
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SapLandscapeMonitorOperations.
    /// </summary>
    public static partial class SapLandscapeMonitorOperationsExtensions
    {
            /// <summary>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor.
            /// </summary>
            /// <remarks>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor for the
            /// specified subscription, resource group, and resource name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            public static SapLandscapeMonitor Get(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName)
            {
                return operations.GetAsync(resourceGroupName, monitorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor.
            /// </summary>
            /// <remarks>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor for the
            /// specified subscription, resource group, and resource name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SapLandscapeMonitor> GetAsync(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, monitorName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a SAP Landscape Monitor Dashboard.
            /// </summary>
            /// <remarks>
            /// Creates a SAP Landscape Monitor Dashboard for the specified subscription,
            /// resource group, and resource name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='sapLandscapeMonitorParameter'>
            /// Request body representing a configuration for Sap Landscape Monitor
            /// Dashboard
            /// </param>
            public static SapLandscapeMonitor Create(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, SapLandscapeMonitor sapLandscapeMonitorParameter)
            {
                return operations.CreateAsync(resourceGroupName, monitorName, sapLandscapeMonitorParameter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a SAP Landscape Monitor Dashboard.
            /// </summary>
            /// <remarks>
            /// Creates a SAP Landscape Monitor Dashboard for the specified subscription,
            /// resource group, and resource name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='sapLandscapeMonitorParameter'>
            /// Request body representing a configuration for Sap Landscape Monitor
            /// Dashboard
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SapLandscapeMonitor> CreateAsync(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, SapLandscapeMonitor sapLandscapeMonitorParameter, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, monitorName, sapLandscapeMonitorParameter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a SAP Landscape Monitor Dashboard.
            /// </summary>
            /// <remarks>
            /// Deletes a SAP Landscape Monitor Dashboard with the specified subscription,
            /// resource group, and SAP monitor name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            public static void Delete(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName)
            {
                operations.DeleteAsync(resourceGroupName, monitorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a SAP Landscape Monitor Dashboard.
            /// </summary>
            /// <remarks>
            /// Deletes a SAP Landscape Monitor Dashboard with the specified subscription,
            /// resource group, and SAP monitor name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, monitorName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Patches the SAP Landscape Monitor Dashboard.
            /// </summary>
            /// <remarks>
            /// Patches the SAP Landscape Monitor Dashboard for the specified subscription,
            /// resource group, and SAP monitor name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='sapLandscapeMonitorParameter'>
            /// Request body representing a configuration for Sap Landscape Monitor
            /// Dashboard
            /// </param>
            public static SapLandscapeMonitor Update(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, SapLandscapeMonitor sapLandscapeMonitorParameter)
            {
                return operations.UpdateAsync(resourceGroupName, monitorName, sapLandscapeMonitorParameter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Patches the SAP Landscape Monitor Dashboard.
            /// </summary>
            /// <remarks>
            /// Patches the SAP Landscape Monitor Dashboard for the specified subscription,
            /// resource group, and SAP monitor name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='sapLandscapeMonitorParameter'>
            /// Request body representing a configuration for Sap Landscape Monitor
            /// Dashboard
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SapLandscapeMonitor> UpdateAsync(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, SapLandscapeMonitor sapLandscapeMonitorParameter, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, monitorName, sapLandscapeMonitorParameter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor.
            /// </summary>
            /// <remarks>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor for the
            /// specified subscription, resource group, and resource name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            public static SapLandscapeMonitorListResult List(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName)
            {
                return operations.ListAsync(resourceGroupName, monitorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor.
            /// </summary>
            /// <remarks>
            /// Gets configuration values for Single Pane Of Glass for SAP monitor for the
            /// specified subscription, resource group, and resource name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='monitorName'>
            /// Name of the SAP monitor resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SapLandscapeMonitorListResult> ListAsync(this ISapLandscapeMonitorOperations operations, string resourceGroupName, string monitorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, monitorName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
