// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.SAPMonitors
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ProviderInstancesOperations operations.
    /// </summary>
    public partial interface IProviderInstancesOperations
    {
        /// <summary>
        /// Gets a list of provider instances in the specified SAP monitor.
        /// </summary>
        /// <remarks>
        /// Gets a list of provider instances in the specified SAP monitor. The
        /// operations returns various properties of each provider instances.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='monitorName'>
        /// Name of the SAP monitor resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<ProviderInstance>>> ListWithHttpMessagesAsync(string resourceGroupName, string monitorName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets properties of a provider instance.
        /// </summary>
        /// <remarks>
        /// Gets properties of a provider instance for the specified
        /// subscription, resource group, SAP monitor name, and resource name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='monitorName'>
        /// Name of the SAP monitor resource.
        /// </param>
        /// <param name='providerInstanceName'>
        /// Name of the provider instance.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ProviderInstance>> GetWithHttpMessagesAsync(string resourceGroupName, string monitorName, string providerInstanceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a provider instance.
        /// </summary>
        /// <remarks>
        /// Creates a provider instance for the specified subscription,
        /// resource group, SAP monitor name, and resource name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='monitorName'>
        /// Name of the SAP monitor resource.
        /// </param>
        /// <param name='providerInstanceName'>
        /// Name of the provider instance.
        /// </param>
        /// <param name='providerSettings'>
        /// Defines the provider specific properties.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ProviderInstance>> CreateWithHttpMessagesAsync(string resourceGroupName, string monitorName, string providerInstanceName, ProviderSpecificProperties providerSettings = default(ProviderSpecificProperties), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a provider instance.
        /// </summary>
        /// <remarks>
        /// Deletes a provider instance for the specified subscription,
        /// resource group, SAP monitor name, and resource name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='monitorName'>
        /// Name of the SAP monitor resource.
        /// </param>
        /// <param name='providerInstanceName'>
        /// Name of the provider instance.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<ProviderInstancesDeleteHeaders>> DeleteWithHttpMessagesAsync(string resourceGroupName, string monitorName, string providerInstanceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a provider instance.
        /// </summary>
        /// <remarks>
        /// Creates a provider instance for the specified subscription,
        /// resource group, SAP monitor name, and resource name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='monitorName'>
        /// Name of the SAP monitor resource.
        /// </param>
        /// <param name='providerInstanceName'>
        /// Name of the provider instance.
        /// </param>
        /// <param name='providerSettings'>
        /// Defines the provider specific properties.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ProviderInstance>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string monitorName, string providerInstanceName, ProviderSpecificProperties providerSettings = default(ProviderSpecificProperties), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a provider instance.
        /// </summary>
        /// <remarks>
        /// Deletes a provider instance for the specified subscription,
        /// resource group, SAP monitor name, and resource name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='monitorName'>
        /// Name of the SAP monitor resource.
        /// </param>
        /// <param name='providerInstanceName'>
        /// Name of the provider instance.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationHeaderResponse<ProviderInstancesDeleteHeaders>> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string monitorName, string providerInstanceName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a list of provider instances in the specified SAP monitor.
        /// </summary>
        /// <remarks>
        /// Gets a list of provider instances in the specified SAP monitor. The
        /// operations returns various properties of each provider instances.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<ProviderInstance>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
