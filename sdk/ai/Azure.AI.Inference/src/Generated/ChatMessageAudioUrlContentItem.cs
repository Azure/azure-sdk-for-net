// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Inference
{
    /// <summary> A structured chat content item for audio content passed as a url. </summary>
    internal partial class ChatMessageAudioUrlContentItem : ChatMessageContentItem
    {
        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioUrlContentItem"/>. </summary>
        /// <param name="audioUrl"> The details of the audio url. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="audioUrl"/> is null. </exception>
        public ChatMessageAudioUrlContentItem(ChatMessageInputAudioUrl audioUrl)
        {
            Argument.AssertNotNull(audioUrl, nameof(audioUrl));

            Type = "audio_url";
            AudioUrl = audioUrl;
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioUrlContentItem"/>. </summary>
        /// <param name="type"> The discriminated object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="audioUrl"> The details of the audio url. </param>
        internal ChatMessageAudioUrlContentItem(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, ChatMessageInputAudioUrl audioUrl) : base(type, serializedAdditionalRawData)
        {
            AudioUrl = audioUrl;
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioUrlContentItem"/> for deserialization. </summary>
        internal ChatMessageAudioUrlContentItem()
        {
        }

        /// <summary> The details of the audio url. </summary>
        public ChatMessageInputAudioUrl AudioUrl { get; }
    }
}
