// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Inference
{
    /// <summary>
    /// A request chat message containing developer instructions that influence how the model will generate a chat completions
    /// response. Some AI models support a developer message instead of a system message.
    /// </summary>
    public partial class ChatRequestDeveloperMessage : ChatRequestMessage
    {
        /// <summary> Initializes a new instance of <see cref="ChatRequestDeveloperMessage"/>. </summary>
        /// <param name="content"> The contents of the developer message. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public ChatRequestDeveloperMessage(string content)
        {
            Argument.AssertNotNull(content, nameof(content));

            Role = ChatRole.Developer;
            Content = content;
        }

        /// <summary> Initializes a new instance of <see cref="ChatRequestDeveloperMessage"/>. </summary>
        /// <param name="role"> The chat role associated with this message. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="content"> The contents of the developer message. </param>
        internal ChatRequestDeveloperMessage(ChatRole role, IDictionary<string, BinaryData> serializedAdditionalRawData, string content) : base(role, serializedAdditionalRawData)
        {
            Content = content;
        }

        /// <summary> Initializes a new instance of <see cref="ChatRequestDeveloperMessage"/> for deserialization. </summary>
        internal ChatRequestDeveloperMessage()
        {
        }

        /// <summary> The contents of the developer message. </summary>
        public string Content { get; }
    }
}
