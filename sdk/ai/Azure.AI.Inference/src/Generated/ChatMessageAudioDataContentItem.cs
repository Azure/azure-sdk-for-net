// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Inference
{
    /// <summary> A structured chat content item for audio content passed as base64 encoded data. </summary>
    internal partial class ChatMessageAudioDataContentItem : ChatMessageContentItem
    {
        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioDataContentItem"/>. </summary>
        /// <param name="inputAudio"> The details of the input audio data. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="inputAudio"/> is null. </exception>
        public ChatMessageAudioDataContentItem(ChatMessageInputAudio inputAudio)
        {
            Argument.AssertNotNull(inputAudio, nameof(inputAudio));

            Type = "input_audio";
            InputAudio = inputAudio;
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioDataContentItem"/>. </summary>
        /// <param name="type"> The discriminated object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="inputAudio"> The details of the input audio data. </param>
        internal ChatMessageAudioDataContentItem(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, ChatMessageInputAudio inputAudio) : base(type, serializedAdditionalRawData)
        {
            InputAudio = inputAudio;
        }

        /// <summary> Initializes a new instance of <see cref="ChatMessageAudioDataContentItem"/> for deserialization. </summary>
        internal ChatMessageAudioDataContentItem()
        {
        }

        /// <summary> The details of the input audio data. </summary>
        public ChatMessageInputAudio InputAudio { get; }
    }
}
