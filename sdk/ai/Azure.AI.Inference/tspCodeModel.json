{
  "name": "AI.Model",
  "apiVersions": [
    "2024-05-01-preview"
  ],
  "enums": [
    {
      "$id": "1",
      "kind": "enum",
      "name": "ChatRole",
      "crossLanguageDefinitionId": "AI.Model.ChatRole",
      "valueType": {
        "$id": "2",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "3",
          "kind": "enumvalue",
          "name": "system",
          "value": "system",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "The role that instructs or sets the behavior of the assistant.",
          "decorators": []
        },
        {
          "$id": "4",
          "kind": "enumvalue",
          "name": "user",
          "value": "user",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "The role that provides input for chat completions.",
          "decorators": []
        },
        {
          "$id": "5",
          "kind": "enumvalue",
          "name": "assistant",
          "value": "assistant",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "The role that provides responses to system-instructed, user-prompted input.",
          "decorators": []
        },
        {
          "$id": "6",
          "kind": "enumvalue",
          "name": "tool",
          "value": "tool",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "The role that represents extension tool activity within a chat completions operation.",
          "decorators": []
        },
        {
          "$id": "7",
          "kind": "enumvalue",
          "name": "developer",
          "value": "developer",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "The role that instructs or sets the behavior of the assistant. Some AI models support this role instead of the 'system' role.",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "A description of the intended purpose of a message within a chat completions interaction.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Output,Json",
      "decorators": []
    },
    {
      "$id": "8",
      "kind": "enum",
      "name": "ChatMessageImageDetailLevel",
      "crossLanguageDefinitionId": "AI.Model.ChatMessageImageDetailLevel",
      "valueType": {
        "$id": "9",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "10",
          "kind": "enumvalue",
          "name": "auto",
          "value": "auto",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Specifies that the model should determine which detail level to apply using heuristics like image size.",
          "decorators": []
        },
        {
          "$id": "11",
          "kind": "enumvalue",
          "name": "low",
          "value": "low",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Specifies that image evaluation should be constrained to the 'low-res' model that may be faster and consume fewer\ntokens but may also be less accurate for highly detailed images.",
          "decorators": []
        },
        {
          "$id": "12",
          "kind": "enumvalue",
          "name": "high",
          "value": "high",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Specifies that image evaluation should enable the 'high-res' model that may be more accurate for highly detailed\nimages but may also be slower and consume more tokens.",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "A representation of the possible image detail levels for image-based chat completions message content.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "13",
      "kind": "enum",
      "name": "AudioContentFormat",
      "crossLanguageDefinitionId": "AI.Model.AudioContentFormat",
      "valueType": {
        "$id": "14",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "15",
          "kind": "enumvalue",
          "name": "wav",
          "value": "wav",
          "valueType": {
            "$ref": "14"
          },
          "enumType": {
            "$ref": "13"
          },
          "doc": "Specifies audio in WAV format.",
          "decorators": []
        },
        {
          "$id": "16",
          "kind": "enumvalue",
          "name": "mp3",
          "value": "mp3",
          "valueType": {
            "$ref": "14"
          },
          "enumType": {
            "$ref": "13"
          },
          "doc": "Specifies audio in MP3 format.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Inference",
      "doc": "A representation of the possible audio formats for audio.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "17",
      "kind": "enum",
      "name": "ChatCompletionsToolChoicePreset",
      "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolChoicePreset",
      "valueType": {
        "$id": "18",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "19",
          "kind": "enumvalue",
          "name": "auto",
          "value": "auto",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "Specifies that the model may either use any of the tools provided in this chat completions request or\ninstead return a standard chat completions response as if no tools were provided.",
          "decorators": []
        },
        {
          "$id": "20",
          "kind": "enumvalue",
          "name": "none",
          "value": "none",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "Specifies that the model should not respond with a tool call and should instead provide a standard chat\ncompletions response. Response content may still be influenced by the provided tool definitions.",
          "decorators": []
        },
        {
          "$id": "21",
          "kind": "enumvalue",
          "name": "required",
          "value": "required",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "Specifies that the model should respond with a call to one or more tools.",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "Represents a generic policy for how a chat completions tool may be selected.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "22",
      "kind": "enum",
      "name": "CompletionsFinishReason",
      "crossLanguageDefinitionId": "AI.Model.CompletionsFinishReason",
      "valueType": {
        "$id": "23",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "24",
          "kind": "enumvalue",
          "name": "stopped",
          "value": "stop",
          "valueType": {
            "$ref": "23"
          },
          "enumType": {
            "$ref": "22"
          },
          "doc": "Completions ended normally and reached its end of token generation.",
          "decorators": []
        },
        {
          "$id": "25",
          "kind": "enumvalue",
          "name": "tokenLimitReached",
          "value": "length",
          "valueType": {
            "$ref": "23"
          },
          "enumType": {
            "$ref": "22"
          },
          "doc": "Completions exhausted available token limits before generation could complete.",
          "decorators": []
        },
        {
          "$id": "26",
          "kind": "enumvalue",
          "name": "contentFiltered",
          "value": "content_filter",
          "valueType": {
            "$ref": "23"
          },
          "enumType": {
            "$ref": "22"
          },
          "doc": "Completions generated a response that was identified as potentially sensitive per content\nmoderation policies.",
          "decorators": []
        },
        {
          "$id": "27",
          "kind": "enumvalue",
          "name": "toolCalls",
          "value": "tool_calls",
          "valueType": {
            "$ref": "23"
          },
          "enumType": {
            "$ref": "22"
          },
          "doc": "Completion ended with the model calling a provided tool for output.",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "Representation of the manner in which a completions response concluded.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Output,Json",
      "decorators": []
    },
    {
      "$id": "28",
      "kind": "enum",
      "name": "ModelType",
      "crossLanguageDefinitionId": "AI.Model.ModelType",
      "valueType": {
        "$id": "29",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "30",
          "kind": "enumvalue",
          "name": "embeddings",
          "value": "embeddings",
          "valueType": {
            "$ref": "29"
          },
          "enumType": {
            "$ref": "28"
          },
          "doc": "A model capable of generating embeddings from a text",
          "decorators": []
        },
        {
          "$id": "31",
          "kind": "enumvalue",
          "name": "image_generation",
          "value": "image_generation",
          "valueType": {
            "$ref": "29"
          },
          "enumType": {
            "$ref": "28"
          },
          "doc": "A model capable of generating images from an image and text description",
          "decorators": []
        },
        {
          "$id": "32",
          "kind": "enumvalue",
          "name": "text_generation",
          "value": "text_generation",
          "valueType": {
            "$ref": "29"
          },
          "enumType": {
            "$ref": "28"
          },
          "doc": "A text generation model",
          "decorators": []
        },
        {
          "$id": "33",
          "kind": "enumvalue",
          "name": "image_embeddings",
          "value": "image_embeddings",
          "valueType": {
            "$ref": "29"
          },
          "enumType": {
            "$ref": "28"
          },
          "doc": "A model capable of generating embeddings from an image",
          "decorators": []
        },
        {
          "$id": "34",
          "kind": "enumvalue",
          "name": "audio_generation",
          "value": "audio_generation",
          "valueType": {
            "$ref": "29"
          },
          "enumType": {
            "$ref": "28"
          },
          "doc": "A text-to-audio generative model",
          "decorators": []
        },
        {
          "$id": "35",
          "kind": "enumvalue",
          "name": "chat_completion",
          "value": "chat_completion",
          "valueType": {
            "$ref": "29"
          },
          "enumType": {
            "$ref": "28"
          },
          "doc": "A model capable of taking chat-formatted messages and generate responses",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "The type of AI model",
      "isFixed": false,
      "isFlags": false,
      "usage": "Output,Json",
      "decorators": []
    },
    {
      "$id": "36",
      "kind": "enum",
      "name": "EmbeddingEncodingFormat",
      "crossLanguageDefinitionId": "AI.Model.EmbeddingEncodingFormat",
      "valueType": {
        "$id": "37",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "38",
          "kind": "enumvalue",
          "name": "base64",
          "value": "base64",
          "valueType": {
            "$ref": "37"
          },
          "enumType": {
            "$ref": "36"
          },
          "doc": "Base64",
          "decorators": []
        },
        {
          "$id": "39",
          "kind": "enumvalue",
          "name": "binary",
          "value": "binary",
          "valueType": {
            "$ref": "37"
          },
          "enumType": {
            "$ref": "36"
          },
          "doc": "Binary",
          "decorators": []
        },
        {
          "$id": "40",
          "kind": "enumvalue",
          "name": "float",
          "value": "float",
          "valueType": {
            "$ref": "37"
          },
          "enumType": {
            "$ref": "36"
          },
          "doc": "Floating point",
          "decorators": []
        },
        {
          "$id": "41",
          "kind": "enumvalue",
          "name": "int8",
          "value": "int8",
          "valueType": {
            "$ref": "37"
          },
          "enumType": {
            "$ref": "36"
          },
          "doc": "Signed 8-bit integer",
          "decorators": []
        },
        {
          "$id": "42",
          "kind": "enumvalue",
          "name": "ubinary",
          "value": "ubinary",
          "valueType": {
            "$ref": "37"
          },
          "enumType": {
            "$ref": "36"
          },
          "doc": "ubinary",
          "decorators": []
        },
        {
          "$id": "43",
          "kind": "enumvalue",
          "name": "uint8",
          "value": "uint8",
          "valueType": {
            "$ref": "37"
          },
          "enumType": {
            "$ref": "36"
          },
          "doc": "Unsigned 8-bit integer",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "The format of the embeddings result.\nReturns a 422 error if the model doesn't support the value or parameter.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "44",
      "kind": "enum",
      "name": "EmbeddingInputType",
      "crossLanguageDefinitionId": "AI.Model.EmbeddingInputType",
      "valueType": {
        "$id": "45",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "46",
          "kind": "enumvalue",
          "name": "text",
          "value": "text",
          "valueType": {
            "$ref": "45"
          },
          "enumType": {
            "$ref": "44"
          },
          "doc": "Indicates the input is a general text input.",
          "decorators": []
        },
        {
          "$id": "47",
          "kind": "enumvalue",
          "name": "query",
          "value": "query",
          "valueType": {
            "$ref": "45"
          },
          "enumType": {
            "$ref": "44"
          },
          "doc": "Indicates the input represents a search query to find the most relevant documents in your vector database.",
          "decorators": []
        },
        {
          "$id": "48",
          "kind": "enumvalue",
          "name": "document",
          "value": "document",
          "valueType": {
            "$ref": "45"
          },
          "enumType": {
            "$ref": "44"
          },
          "doc": "Indicates the input represents a document that is stored in a vector database.",
          "decorators": []
        }
      ],
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "doc": "Represents the input types used for embedding search.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "49",
      "kind": "enum",
      "name": "ExtraParameters",
      "crossLanguageDefinitionId": "AI.Model.ExtraParameters",
      "valueType": {
        "$id": "50",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "51",
          "kind": "enumvalue",
          "name": "error",
          "value": "error",
          "valueType": {
            "$ref": "50"
          },
          "enumType": {
            "$ref": "49"
          },
          "doc": "The service will error if it detected extra parameters in the request payload. This is the service default.",
          "decorators": []
        },
        {
          "$id": "52",
          "kind": "enumvalue",
          "name": "drop",
          "value": "drop",
          "valueType": {
            "$ref": "50"
          },
          "enumType": {
            "$ref": "49"
          },
          "doc": "The service will ignore (drop) extra parameters in the request payload. It will only pass the known parameters to the back-end AI model.",
          "decorators": []
        },
        {
          "$id": "53",
          "kind": "enumvalue",
          "name": "pass_through",
          "value": "pass-through",
          "valueType": {
            "$ref": "50"
          },
          "enumType": {
            "$ref": "49"
          },
          "doc": "The service will pass extra parameters to the back-end AI model.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Inference",
      "doc": "Controls what happens if extra parameters, undefined by the REST API, are passed in the JSON request payload.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input",
      "decorators": []
    },
    {
      "$id": "54",
      "kind": "enum",
      "name": "Versions",
      "crossLanguageDefinitionId": "AI.Model.Versions",
      "valueType": {
        "$id": "55",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "56",
          "kind": "enumvalue",
          "name": "v2024_05_01_Preview",
          "value": "2024-05-01-preview",
          "valueType": {
            "$ref": "55"
          },
          "enumType": {
            "$ref": "54"
          },
          "doc": "The 2024-05-01-preview version of the AI.Model service.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Inference",
      "doc": "The AI.Model service versions.",
      "isFixed": true,
      "isFlags": false,
      "usage": "ApiVersionEnum",
      "decorators": []
    },
    {
      "$id": "57",
      "kind": "enum",
      "name": "ChatCompletionsToolCallType",
      "crossLanguageDefinitionId": "",
      "valueType": {
        "$id": "58",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "59",
          "kind": "enumvalue",
          "name": "function",
          "value": "function",
          "valueType": {
            "$ref": "58"
          },
          "enumType": {
            "$ref": "57"
          }
        }
      ],
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Output,Json",
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "decorators": []
    },
    {
      "$id": "60",
      "kind": "enum",
      "name": "ChatCompletionsToolDefinitionType",
      "crossLanguageDefinitionId": "",
      "valueType": {
        "$id": "61",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "62",
          "kind": "enumvalue",
          "name": "function",
          "value": "function",
          "valueType": {
            "$ref": "61"
          },
          "enumType": {
            "$ref": "60"
          }
        }
      ],
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "decorators": []
    },
    {
      "$id": "63",
      "kind": "enum",
      "name": "ChatCompletionsNamedToolChoiceType",
      "crossLanguageDefinitionId": "",
      "valueType": {
        "$id": "64",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "65",
          "kind": "enumvalue",
          "name": "function",
          "value": "function",
          "valueType": {
            "$ref": "64"
          },
          "enumType": {
            "$ref": "63"
          }
        }
      ],
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "access": "public",
      "namespace": "Azure.AI.Inference",
      "decorators": []
    }
  ],
  "constants": [
    {
      "$id": "66",
      "kind": "constant",
      "name": "ChatMessageTextContentItemType",
      "namespace": "Azure.AI.Inference",
      "access": "public",
      "usage": "Input,Json",
      "valueType": {
        "$id": "67",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "text",
      "decorators": []
    },
    {
      "$id": "68",
      "kind": "constant",
      "name": "ChatMessageImageContentItemType",
      "namespace": "Azure.AI.Inference",
      "access": "public",
      "usage": "Input,Json",
      "valueType": {
        "$id": "69",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "image_url",
      "decorators": []
    },
    {
      "$id": "70",
      "kind": "constant",
      "name": "ChatMessageAudioUrlContentItemType",
      "namespace": "Azure.AI.Inference",
      "access": "internal",
      "usage": "Input,Json",
      "valueType": {
        "$id": "71",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "audio_url",
      "decorators": []
    },
    {
      "$id": "72",
      "kind": "constant",
      "name": "ChatMessageAudioDataContentItemType",
      "namespace": "Azure.AI.Inference",
      "access": "internal",
      "usage": "Input,Json",
      "valueType": {
        "$id": "73",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "input_audio",
      "decorators": []
    },
    {
      "$id": "74",
      "kind": "constant",
      "name": "ChatCompletionsToolCallType",
      "namespace": "Azure.AI.Inference",
      "access": "public",
      "usage": "Input,Output,Json",
      "valueType": {
        "$ref": "57"
      },
      "value": "function",
      "decorators": []
    },
    {
      "$id": "75",
      "kind": "constant",
      "name": "ChatCompletionsResponseFormatTextType",
      "namespace": "Azure.AI.Inference",
      "usage": "Input,Json",
      "valueType": {
        "$id": "76",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "text",
      "decorators": []
    },
    {
      "$id": "77",
      "kind": "constant",
      "name": "ChatCompletionsResponseFormatJsonObjectType",
      "namespace": "Azure.AI.Inference",
      "usage": "Input,Json",
      "valueType": {
        "$id": "78",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "json_object",
      "decorators": []
    },
    {
      "$id": "79",
      "kind": "constant",
      "name": "ChatCompletionsResponseFormatJsonSchemaType",
      "namespace": "Azure.AI.Inference",
      "access": "internal",
      "usage": "Input,Json",
      "valueType": {
        "$id": "80",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "json_schema",
      "decorators": []
    },
    {
      "$id": "81",
      "kind": "constant",
      "name": "ChatCompletionsToolDefinitionType",
      "namespace": "Azure.AI.Inference",
      "access": "public",
      "usage": "Input,Json",
      "valueType": {
        "$ref": "60"
      },
      "value": "function",
      "decorators": []
    },
    {
      "$id": "82",
      "kind": "constant",
      "name": "ChatCompletionsNamedToolChoiceType",
      "namespace": "Azure.AI.Inference",
      "access": "public",
      "usage": "Input,Json",
      "valueType": {
        "$ref": "63"
      },
      "value": "function",
      "decorators": []
    },
    {
      "$id": "83",
      "kind": "constant",
      "name": "completeContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "84",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "85",
      "kind": "constant",
      "name": "completeContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "86",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "87",
      "kind": "constant",
      "name": "getModelInfoContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "88",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "89",
      "kind": "constant",
      "name": "embedContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "90",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "91",
      "kind": "constant",
      "name": "embedContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "92",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "93",
      "kind": "constant",
      "name": "getModelInfoContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "94",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "95",
      "kind": "constant",
      "name": "embedContentType2",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "96",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "97",
      "kind": "constant",
      "name": "embedContentType3",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "98",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "99",
      "kind": "constant",
      "name": "getModelInfoContentType2",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "100",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    }
  ],
  "models": [
    {
      "$id": "101",
      "kind": "model",
      "name": "ChatCompletionsOptions",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions",
      "usage": "Input,Json",
      "doc": "The configuration information for a chat completions request.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "decorators": [],
      "additionalProperties": {
        "$id": "102",
        "kind": "unknown",
        "name": "unknown",
        "crossLanguageDefinitionId": "",
        "decorators": []
      },
      "properties": [
        {
          "$id": "103",
          "kind": "property",
          "name": "messages",
          "serializedName": "messages",
          "doc": "The collection of context messages associated with this chat completions request.\nTypical usage begins with a chat message for the System role that provides instructions for\nthe behavior of the assistant, followed by alternating messages between the User and\nAssistant roles.",
          "type": {
            "$id": "104",
            "kind": "array",
            "name": "ArrayChatRequestMessage",
            "valueType": {
              "$id": "105",
              "kind": "model",
              "name": "ChatRequestMessage",
              "namespace": "Azure.AI.Inference",
              "crossLanguageDefinitionId": "AI.Model.ChatRequestMessage",
              "access": "public",
              "usage": "Input,Json",
              "doc": "An abstract representation of a chat message as provided in a request.",
              "decorators": [],
              "discriminatorProperty": {
                "$id": "106",
                "kind": "property",
                "name": "role",
                "serializedName": "role",
                "doc": "The chat role associated with this message.",
                "type": {
                  "$ref": "1"
                },
                "optional": false,
                "readOnly": false,
                "discriminator": true,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "AI.Model.ChatRequestMessage.role",
                "serializationOptions": {
                  "json": {
                    "name": "role"
                  }
                }
              },
              "properties": [
                {
                  "$ref": "106"
                }
              ],
              "discriminatedSubtypes": {
                "system": {
                  "$id": "107",
                  "kind": "model",
                  "name": "ChatRequestSystemMessage",
                  "namespace": "Azure.AI.Inference",
                  "crossLanguageDefinitionId": "AI.Model.ChatRequestSystemMessage",
                  "access": "public",
                  "usage": "Input,Json",
                  "doc": "A request chat message containing system instructions that influence how the model will generate a chat completions\nresponse.",
                  "discriminatorValue": "system",
                  "decorators": [],
                  "baseModel": {
                    "$ref": "105"
                  },
                  "properties": [
                    {
                      "$id": "108",
                      "kind": "property",
                      "name": "role",
                      "serializedName": "role",
                      "doc": "The chat role associated with this message, which is always 'system' for system messages.",
                      "type": {
                        "$ref": "3"
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": true,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestSystemMessage.role",
                      "serializationOptions": {
                        "json": {
                          "name": "role"
                        }
                      }
                    },
                    {
                      "$id": "109",
                      "kind": "property",
                      "name": "content",
                      "serializedName": "content",
                      "doc": "The contents of the system message.",
                      "type": {
                        "$id": "110",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestSystemMessage.content",
                      "serializationOptions": {
                        "json": {
                          "name": "content"
                        }
                      }
                    }
                  ]
                },
                "developer": {
                  "$id": "111",
                  "kind": "model",
                  "name": "ChatRequestDeveloperMessage",
                  "namespace": "Azure.AI.Inference",
                  "crossLanguageDefinitionId": "AI.Model.ChatRequestDeveloperMessage",
                  "access": "public",
                  "usage": "Input,Json",
                  "doc": "A request chat message containing developer instructions that influence how the model will generate a chat completions\nresponse. Some AI models support a developer message instead of a system message.",
                  "discriminatorValue": "developer",
                  "decorators": [],
                  "baseModel": {
                    "$ref": "105"
                  },
                  "properties": [
                    {
                      "$id": "112",
                      "kind": "property",
                      "name": "role",
                      "serializedName": "role",
                      "doc": "The chat role associated with this message, which is always 'developer' for developer messages.",
                      "type": {
                        "$ref": "7"
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": true,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestDeveloperMessage.role",
                      "serializationOptions": {
                        "json": {
                          "name": "role"
                        }
                      }
                    },
                    {
                      "$id": "113",
                      "kind": "property",
                      "name": "content",
                      "serializedName": "content",
                      "doc": "The contents of the developer message.",
                      "type": {
                        "$id": "114",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestDeveloperMessage.content",
                      "serializationOptions": {
                        "json": {
                          "name": "content"
                        }
                      }
                    }
                  ]
                },
                "user": {
                  "$id": "115",
                  "kind": "model",
                  "name": "ChatRequestUserMessage",
                  "namespace": "Azure.AI.Inference",
                  "crossLanguageDefinitionId": "AI.Model.ChatRequestUserMessage",
                  "access": "public",
                  "usage": "Input,Json",
                  "doc": "A request chat message representing user input to the assistant.",
                  "discriminatorValue": "user",
                  "decorators": [],
                  "baseModel": {
                    "$ref": "105"
                  },
                  "properties": [
                    {
                      "$id": "116",
                      "kind": "property",
                      "name": "role",
                      "serializedName": "role",
                      "doc": "The chat role associated with this message, which is always 'user' for user messages.",
                      "type": {
                        "$ref": "4"
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": true,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestUserMessage.role",
                      "serializationOptions": {
                        "json": {
                          "name": "role"
                        }
                      }
                    },
                    {
                      "$id": "117",
                      "kind": "property",
                      "name": "content",
                      "serializedName": "content",
                      "doc": "The contents of the user message, with available input types varying by selected model.",
                      "type": {
                        "$id": "118",
                        "kind": "union",
                        "name": "ChatRequestUserMessageContent",
                        "variantTypes": [
                          {
                            "$id": "119",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          {
                            "$id": "120",
                            "kind": "array",
                            "name": "ArrayChatMessageContentItem",
                            "valueType": {
                              "$id": "121",
                              "kind": "model",
                              "name": "ChatMessageContentItem",
                              "namespace": "Azure.AI.Inference",
                              "crossLanguageDefinitionId": "AI.Model.ChatMessageContentItem",
                              "access": "public",
                              "usage": "Input,Json",
                              "doc": "An abstract representation of a structured content item within a chat message.",
                              "decorators": [],
                              "discriminatorProperty": {
                                "$id": "122",
                                "kind": "property",
                                "name": "type",
                                "serializedName": "type",
                                "doc": "The discriminated object type.",
                                "type": {
                                  "$id": "123",
                                  "kind": "string",
                                  "name": "string",
                                  "crossLanguageDefinitionId": "TypeSpec.string",
                                  "decorators": []
                                },
                                "optional": false,
                                "readOnly": false,
                                "discriminator": true,
                                "flatten": false,
                                "decorators": [],
                                "crossLanguageDefinitionId": "AI.Model.ChatMessageContentItem.type",
                                "serializationOptions": {
                                  "json": {
                                    "name": "type"
                                  }
                                }
                              },
                              "properties": [
                                {
                                  "$ref": "122"
                                }
                              ],
                              "discriminatedSubtypes": {
                                "text": {
                                  "$id": "124",
                                  "kind": "model",
                                  "name": "ChatMessageTextContentItem",
                                  "namespace": "Azure.AI.Inference",
                                  "crossLanguageDefinitionId": "AI.Model.ChatMessageTextContentItem",
                                  "access": "public",
                                  "usage": "Input,Json",
                                  "doc": "A structured chat content item containing plain text.",
                                  "discriminatorValue": "text",
                                  "decorators": [],
                                  "baseModel": {
                                    "$ref": "121"
                                  },
                                  "properties": [
                                    {
                                      "$id": "125",
                                      "kind": "property",
                                      "name": "type",
                                      "serializedName": "type",
                                      "doc": "The discriminated object type: always 'text' for this type.",
                                      "type": {
                                        "$ref": "66"
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": true,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageTextContentItem.type",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "type"
                                        }
                                      }
                                    },
                                    {
                                      "$id": "126",
                                      "kind": "property",
                                      "name": "text",
                                      "serializedName": "text",
                                      "doc": "The content of the message.",
                                      "type": {
                                        "$id": "127",
                                        "kind": "string",
                                        "name": "string",
                                        "crossLanguageDefinitionId": "TypeSpec.string",
                                        "decorators": []
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": false,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageTextContentItem.text",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "text"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "image_url": {
                                  "$id": "128",
                                  "kind": "model",
                                  "name": "ChatMessageImageContentItem",
                                  "namespace": "Azure.AI.Inference",
                                  "crossLanguageDefinitionId": "AI.Model.ChatMessageImageContentItem",
                                  "access": "public",
                                  "usage": "Input,Json",
                                  "doc": "A structured chat content item containing an image reference.",
                                  "discriminatorValue": "image_url",
                                  "decorators": [],
                                  "baseModel": {
                                    "$ref": "121"
                                  },
                                  "properties": [
                                    {
                                      "$id": "129",
                                      "kind": "property",
                                      "name": "type",
                                      "serializedName": "type",
                                      "doc": "The discriminated object type: always 'image_url' for this type.",
                                      "type": {
                                        "$ref": "68"
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": true,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageImageContentItem.type",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "type"
                                        }
                                      }
                                    },
                                    {
                                      "$id": "130",
                                      "kind": "property",
                                      "name": "imageUrl",
                                      "serializedName": "image_url",
                                      "doc": "An internet location, which must be accessible to the model,from which the image may be retrieved.",
                                      "type": {
                                        "$id": "131",
                                        "kind": "model",
                                        "name": "ChatMessageImageUrl",
                                        "namespace": "Azure.AI.Inference",
                                        "crossLanguageDefinitionId": "AI.Model.ChatMessageImageUrl",
                                        "access": "public",
                                        "usage": "Input,Json",
                                        "doc": "An internet location from which the model may retrieve an image.",
                                        "decorators": [],
                                        "properties": [
                                          {
                                            "$id": "132",
                                            "kind": "property",
                                            "name": "url",
                                            "serializedName": "url",
                                            "doc": "The URL of the image.",
                                            "type": {
                                              "$id": "133",
                                              "kind": "string",
                                              "name": "string",
                                              "crossLanguageDefinitionId": "TypeSpec.string",
                                              "decorators": []
                                            },
                                            "optional": false,
                                            "readOnly": false,
                                            "discriminator": false,
                                            "flatten": false,
                                            "decorators": [],
                                            "crossLanguageDefinitionId": "AI.Model.ChatMessageImageUrl.url",
                                            "serializationOptions": {
                                              "json": {
                                                "name": "url"
                                              }
                                            }
                                          },
                                          {
                                            "$id": "134",
                                            "kind": "property",
                                            "name": "detail",
                                            "serializedName": "detail",
                                            "doc": "The evaluation quality setting to use, which controls relative prioritization of speed, token consumption, and\naccuracy.",
                                            "type": {
                                              "$ref": "8"
                                            },
                                            "optional": true,
                                            "readOnly": false,
                                            "discriminator": false,
                                            "flatten": false,
                                            "decorators": [],
                                            "crossLanguageDefinitionId": "AI.Model.ChatMessageImageUrl.detail",
                                            "serializationOptions": {
                                              "json": {
                                                "name": "detail"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": false,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageImageContentItem.imageUrl",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "image_url"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "audio_url": {
                                  "$id": "135",
                                  "kind": "model",
                                  "name": "ChatMessageAudioUrlContentItem",
                                  "namespace": "Azure.AI.Inference",
                                  "crossLanguageDefinitionId": "AI.Model.ChatMessageAudioUrlContentItem",
                                  "access": "internal",
                                  "usage": "Input,Json",
                                  "doc": "A structured chat content item for audio content passed as a url.",
                                  "discriminatorValue": "audio_url",
                                  "decorators": [],
                                  "baseModel": {
                                    "$ref": "121"
                                  },
                                  "properties": [
                                    {
                                      "$id": "136",
                                      "kind": "property",
                                      "name": "type",
                                      "serializedName": "type",
                                      "doc": "The discriminated object type: always 'audio_url' for this type.",
                                      "type": {
                                        "$ref": "70"
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": true,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageAudioUrlContentItem.type",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "type"
                                        }
                                      }
                                    },
                                    {
                                      "$id": "137",
                                      "kind": "property",
                                      "name": "audioUrl",
                                      "serializedName": "audio_url",
                                      "doc": "The details of the audio url.",
                                      "type": {
                                        "$id": "138",
                                        "kind": "model",
                                        "name": "ChatMessageInputAudioUrl",
                                        "namespace": "Azure.AI.Inference",
                                        "crossLanguageDefinitionId": "AI.Model.ChatMessageInputAudioUrl",
                                        "usage": "Input,Json",
                                        "doc": "The details of the audio url.",
                                        "decorators": [],
                                        "properties": [
                                          {
                                            "$id": "139",
                                            "kind": "property",
                                            "name": "url",
                                            "serializedName": "url",
                                            "doc": "The URL of the audio content.",
                                            "type": {
                                              "$id": "140",
                                              "kind": "string",
                                              "name": "string",
                                              "crossLanguageDefinitionId": "TypeSpec.string",
                                              "decorators": []
                                            },
                                            "optional": false,
                                            "readOnly": false,
                                            "discriminator": false,
                                            "flatten": false,
                                            "decorators": [],
                                            "crossLanguageDefinitionId": "AI.Model.ChatMessageInputAudioUrl.url",
                                            "serializationOptions": {
                                              "json": {
                                                "name": "url"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": false,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageAudioUrlContentItem.audioUrl",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "audio_url"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "input_audio": {
                                  "$id": "141",
                                  "kind": "model",
                                  "name": "ChatMessageAudioDataContentItem",
                                  "namespace": "Azure.AI.Inference",
                                  "crossLanguageDefinitionId": "AI.Model.ChatMessageAudioDataContentItem",
                                  "access": "internal",
                                  "usage": "Input,Json",
                                  "doc": "A structured chat content item for audio content passed as base64 encoded data.",
                                  "discriminatorValue": "input_audio",
                                  "decorators": [],
                                  "baseModel": {
                                    "$ref": "121"
                                  },
                                  "properties": [
                                    {
                                      "$id": "142",
                                      "kind": "property",
                                      "name": "type",
                                      "serializedName": "type",
                                      "doc": "The discriminated object type: always 'input_audio' for this type.",
                                      "type": {
                                        "$ref": "72"
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": true,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageAudioDataContentItem.type",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "type"
                                        }
                                      }
                                    },
                                    {
                                      "$id": "143",
                                      "kind": "property",
                                      "name": "inputAudio",
                                      "serializedName": "input_audio",
                                      "doc": "The details of the input audio data.",
                                      "type": {
                                        "$id": "144",
                                        "kind": "model",
                                        "name": "ChatMessageInputAudio",
                                        "namespace": "Azure.AI.Inference",
                                        "crossLanguageDefinitionId": "AI.Model.ChatMessageInputAudio",
                                        "usage": "Input,Json",
                                        "doc": "The details of the input audio data.",
                                        "decorators": [],
                                        "properties": [
                                          {
                                            "$id": "145",
                                            "kind": "property",
                                            "name": "data",
                                            "serializedName": "data",
                                            "doc": "Base64 encoded audio data",
                                            "type": {
                                              "$id": "146",
                                              "kind": "string",
                                              "name": "string",
                                              "crossLanguageDefinitionId": "TypeSpec.string",
                                              "decorators": []
                                            },
                                            "optional": false,
                                            "readOnly": false,
                                            "discriminator": false,
                                            "flatten": false,
                                            "decorators": [],
                                            "crossLanguageDefinitionId": "AI.Model.ChatMessageInputAudio.data",
                                            "serializationOptions": {
                                              "json": {
                                                "name": "data"
                                              }
                                            }
                                          },
                                          {
                                            "$id": "147",
                                            "kind": "property",
                                            "name": "format",
                                            "serializedName": "format",
                                            "doc": "The audio format of the audio content.",
                                            "type": {
                                              "$ref": "13"
                                            },
                                            "optional": false,
                                            "readOnly": false,
                                            "discriminator": false,
                                            "flatten": false,
                                            "decorators": [],
                                            "crossLanguageDefinitionId": "AI.Model.ChatMessageInputAudio.format",
                                            "serializationOptions": {
                                              "json": {
                                                "name": "format"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "optional": false,
                                      "readOnly": false,
                                      "discriminator": false,
                                      "flatten": false,
                                      "decorators": [],
                                      "crossLanguageDefinitionId": "AI.Model.ChatMessageAudioDataContentItem.inputAudio",
                                      "serializationOptions": {
                                        "json": {
                                          "name": "input_audio"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "crossLanguageDefinitionId": "TypeSpec.Array",
                            "decorators": []
                          }
                        ],
                        "namespace": "",
                        "decorators": []
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestUserMessage.content",
                      "serializationOptions": {
                        "json": {
                          "name": "content"
                        }
                      }
                    }
                  ]
                },
                "assistant": {
                  "$id": "148",
                  "kind": "model",
                  "name": "ChatRequestAssistantMessage",
                  "namespace": "Azure.AI.Inference",
                  "crossLanguageDefinitionId": "AI.Model.ChatRequestAssistantMessage",
                  "access": "public",
                  "usage": "Input,Json",
                  "doc": "A request chat message representing response or action from the assistant.",
                  "discriminatorValue": "assistant",
                  "decorators": [],
                  "baseModel": {
                    "$ref": "105"
                  },
                  "properties": [
                    {
                      "$id": "149",
                      "kind": "property",
                      "name": "role",
                      "serializedName": "role",
                      "doc": "The chat role associated with this message, which is always 'assistant' for assistant messages.",
                      "type": {
                        "$ref": "5"
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": true,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestAssistantMessage.role",
                      "serializationOptions": {
                        "json": {
                          "name": "role"
                        }
                      }
                    },
                    {
                      "$id": "150",
                      "kind": "property",
                      "name": "content",
                      "serializedName": "content",
                      "doc": "The content of the message.",
                      "type": {
                        "$id": "151",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestAssistantMessage.content",
                      "serializationOptions": {
                        "json": {
                          "name": "content"
                        }
                      }
                    },
                    {
                      "$id": "152",
                      "kind": "property",
                      "name": "toolCalls",
                      "serializedName": "tool_calls",
                      "doc": "The tool calls that must be resolved and have their outputs appended to subsequent input messages for the chat\ncompletions request to resolve as configured.",
                      "type": {
                        "$id": "153",
                        "kind": "array",
                        "name": "ArrayChatCompletionsToolCall",
                        "valueType": {
                          "$id": "154",
                          "kind": "model",
                          "name": "ChatCompletionsToolCall",
                          "namespace": "Azure.AI.Inference",
                          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolCall",
                          "access": "public",
                          "usage": "Input,Output,Json",
                          "doc": "A function tool call requested by the AI model.",
                          "decorators": [],
                          "properties": [
                            {
                              "$id": "155",
                              "kind": "property",
                              "name": "id",
                              "serializedName": "id",
                              "doc": "The ID of the tool call.",
                              "type": {
                                "$id": "156",
                                "kind": "string",
                                "name": "string",
                                "crossLanguageDefinitionId": "TypeSpec.string",
                                "decorators": []
                              },
                              "optional": false,
                              "readOnly": false,
                              "discriminator": false,
                              "flatten": false,
                              "decorators": [],
                              "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolCall.id",
                              "serializationOptions": {
                                "json": {
                                  "name": "id"
                                }
                              }
                            },
                            {
                              "$id": "157",
                              "kind": "property",
                              "name": "type",
                              "serializedName": "type",
                              "doc": "The type of tool call. Currently, only `function` is supported.",
                              "type": {
                                "$ref": "74"
                              },
                              "optional": false,
                              "readOnly": false,
                              "discriminator": false,
                              "flatten": false,
                              "decorators": [],
                              "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolCall.type",
                              "serializationOptions": {
                                "json": {
                                  "name": "type"
                                }
                              }
                            },
                            {
                              "$id": "158",
                              "kind": "property",
                              "name": "function",
                              "serializedName": "function",
                              "doc": "The details of the function call requested by the AI model.",
                              "type": {
                                "$id": "159",
                                "kind": "model",
                                "name": "FunctionCall",
                                "namespace": "Azure.AI.Inference",
                                "crossLanguageDefinitionId": "AI.Model.FunctionCall",
                                "access": "public",
                                "usage": "Input,Output,Json",
                                "doc": "The name and arguments of a function that should be called, as generated by the model.",
                                "decorators": [],
                                "properties": [
                                  {
                                    "$id": "160",
                                    "kind": "property",
                                    "name": "name",
                                    "serializedName": "name",
                                    "doc": "The name of the function to call.",
                                    "type": {
                                      "$id": "161",
                                      "kind": "string",
                                      "name": "string",
                                      "crossLanguageDefinitionId": "TypeSpec.string",
                                      "decorators": []
                                    },
                                    "optional": false,
                                    "readOnly": false,
                                    "discriminator": false,
                                    "flatten": false,
                                    "decorators": [],
                                    "crossLanguageDefinitionId": "AI.Model.FunctionCall.name",
                                    "serializationOptions": {
                                      "json": {
                                        "name": "name"
                                      }
                                    }
                                  },
                                  {
                                    "$id": "162",
                                    "kind": "property",
                                    "name": "arguments",
                                    "serializedName": "arguments",
                                    "doc": "The arguments to call the function with, as generated by the model in JSON format.\nNote that the model does not always generate valid JSON, and may hallucinate parameters\nnot defined by your function schema. Validate the arguments in your code before calling\nyour function.",
                                    "type": {
                                      "$id": "163",
                                      "kind": "string",
                                      "name": "string",
                                      "crossLanguageDefinitionId": "TypeSpec.string",
                                      "decorators": []
                                    },
                                    "optional": false,
                                    "readOnly": false,
                                    "discriminator": false,
                                    "flatten": false,
                                    "decorators": [],
                                    "crossLanguageDefinitionId": "AI.Model.FunctionCall.arguments",
                                    "serializationOptions": {
                                      "json": {
                                        "name": "arguments"
                                      }
                                    }
                                  }
                                ]
                              },
                              "optional": false,
                              "readOnly": false,
                              "discriminator": false,
                              "flatten": false,
                              "decorators": [],
                              "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolCall.function",
                              "serializationOptions": {
                                "json": {
                                  "name": "function"
                                }
                              }
                            }
                          ]
                        },
                        "crossLanguageDefinitionId": "TypeSpec.Array",
                        "decorators": []
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestAssistantMessage.toolCalls",
                      "serializationOptions": {
                        "json": {
                          "name": "tool_calls"
                        }
                      }
                    }
                  ]
                },
                "tool": {
                  "$id": "164",
                  "kind": "model",
                  "name": "ChatRequestToolMessage",
                  "namespace": "Azure.AI.Inference",
                  "crossLanguageDefinitionId": "AI.Model.ChatRequestToolMessage",
                  "access": "public",
                  "usage": "Input,Json",
                  "doc": "A request chat message representing requested output from a configured tool.",
                  "discriminatorValue": "tool",
                  "decorators": [],
                  "baseModel": {
                    "$ref": "105"
                  },
                  "properties": [
                    {
                      "$id": "165",
                      "kind": "property",
                      "name": "role",
                      "serializedName": "role",
                      "doc": "The chat role associated with this message, which is always 'tool' for tool messages.",
                      "type": {
                        "$ref": "6"
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": true,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestToolMessage.role",
                      "serializationOptions": {
                        "json": {
                          "name": "role"
                        }
                      }
                    },
                    {
                      "$id": "166",
                      "kind": "property",
                      "name": "content",
                      "serializedName": "content",
                      "doc": "The content of the message.",
                      "type": {
                        "$id": "167",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestToolMessage.content",
                      "serializationOptions": {
                        "json": {
                          "name": "content"
                        }
                      }
                    },
                    {
                      "$id": "168",
                      "kind": "property",
                      "name": "toolCallId",
                      "serializedName": "tool_call_id",
                      "doc": "The ID of the tool call resolved by the provided content.",
                      "type": {
                        "$id": "169",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "AI.Model.ChatRequestToolMessage.toolCallId",
                      "serializationOptions": {
                        "json": {
                          "name": "tool_call_id"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.messages",
          "serializationOptions": {
            "json": {
              "name": "messages"
            }
          }
        },
        {
          "$id": "170",
          "kind": "property",
          "name": "frequency_penalty",
          "serializedName": "frequency_penalty",
          "doc": "A value that influences the probability of generated tokens appearing based on their cumulative\nfrequency in generated text.\nPositive values will make tokens less likely to appear as their frequency increases and\ndecrease the likelihood of the model repeating the same statements verbatim.\nSupported range is [-2, 2].",
          "type": {
            "$id": "171",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.frequency_penalty",
          "serializationOptions": {
            "json": {
              "name": "frequency_penalty"
            }
          }
        },
        {
          "$id": "172",
          "kind": "property",
          "name": "InternalShouldStreamResponse",
          "serializedName": "stream",
          "doc": "A value indicating whether chat completions should be streamed for this request.",
          "type": {
            "$id": "173",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.stream",
          "serializationOptions": {
            "json": {
              "name": "stream"
            }
          }
        },
        {
          "$id": "174",
          "kind": "property",
          "name": "presence_penalty",
          "serializedName": "presence_penalty",
          "doc": "A value that influences the probability of generated tokens appearing based on their existing\npresence in generated text.\nPositive values will make tokens less likely to appear when they already exist and increase the\nmodel's likelihood to output new topics.\nSupported range is [-2, 2].",
          "type": {
            "$id": "175",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.presence_penalty",
          "serializationOptions": {
            "json": {
              "name": "presence_penalty"
            }
          }
        },
        {
          "$id": "176",
          "kind": "property",
          "name": "temperature",
          "serializedName": "temperature",
          "doc": "The sampling temperature to use that controls the apparent creativity of generated completions.\nHigher values will make output more random while lower values will make results more focused\nand deterministic.\nIt is not recommended to modify temperature and top_p for the same completions request as the\ninteraction of these two settings is difficult to predict.\nSupported range is [0, 1].",
          "type": {
            "$id": "177",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.temperature",
          "serializationOptions": {
            "json": {
              "name": "temperature"
            }
          }
        },
        {
          "$id": "178",
          "kind": "property",
          "name": "NucleusSamplingFactor",
          "serializedName": "top_p",
          "doc": "An alternative to sampling with temperature called nucleus sampling. This value causes the\nmodel to consider the results of tokens with the provided probability mass. As an example, a\nvalue of 0.15 will cause only the tokens comprising the top 15% of probability mass to be\nconsidered.\nIt is not recommended to modify temperature and top_p for the same completions request as the\ninteraction of these two settings is difficult to predict.\nSupported range is [0, 1].",
          "type": {
            "$id": "179",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.top_p",
          "serializationOptions": {
            "json": {
              "name": "top_p"
            }
          }
        },
        {
          "$id": "180",
          "kind": "property",
          "name": "max_tokens",
          "serializedName": "max_tokens",
          "doc": "The maximum number of tokens to generate.",
          "type": {
            "$id": "181",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.max_tokens",
          "serializationOptions": {
            "json": {
              "name": "max_tokens"
            }
          }
        },
        {
          "$id": "182",
          "kind": "property",
          "name": "response_format",
          "serializedName": "response_format",
          "doc": "An object specifying the format that the model must output.\n\nSetting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema.\n\nSetting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the message the model generates is valid JSON.\n\n**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially cut off if `finish_reason=\"length\"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.",
          "type": {
            "$id": "183",
            "kind": "model",
            "name": "ChatCompletionsResponseFormat",
            "namespace": "Azure.AI.Inference",
            "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormat",
            "usage": "Input,Json",
            "doc": "Represents the format that the model must output. Use this to enable JSON mode instead of the default text mode.\nNote that to enable JSON mode, some AI models may also require you to instruct the model to produce JSON\nvia a system or user message.",
            "decorators": [],
            "discriminatorProperty": {
              "$id": "184",
              "kind": "property",
              "name": "type",
              "serializedName": "type",
              "doc": "The response format type to use for chat completions.",
              "type": {
                "$id": "185",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": true,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormat.type",
              "serializationOptions": {
                "json": {
                  "name": "type"
                }
              }
            },
            "properties": [
              {
                "$ref": "184"
              }
            ],
            "discriminatedSubtypes": {
              "text": {
                "$id": "186",
                "kind": "model",
                "name": "ChatCompletionsResponseFormatText",
                "namespace": "Azure.AI.Inference",
                "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatText",
                "usage": "Input,Json",
                "doc": "A response format for Chat Completions that emits text responses. This is the default response format.",
                "discriminatorValue": "text",
                "decorators": [],
                "baseModel": {
                  "$ref": "183"
                },
                "properties": [
                  {
                    "$id": "187",
                    "kind": "property",
                    "name": "type",
                    "serializedName": "type",
                    "doc": "Response format type: always 'text' for this object.",
                    "type": {
                      "$ref": "75"
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": true,
                    "flatten": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatText.type",
                    "serializationOptions": {
                      "json": {
                        "name": "type"
                      }
                    }
                  }
                ]
              },
              "json_object": {
                "$id": "188",
                "kind": "model",
                "name": "ChatCompletionsResponseFormatJsonObject",
                "namespace": "Azure.AI.Inference",
                "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonObject",
                "usage": "Input,Json",
                "doc": "A response format for Chat Completions that restricts responses to emitting valid JSON objects.\nNote that to enable JSON mode, some AI models may also require you to instruct the model to produce JSON\nvia a system or user message.",
                "discriminatorValue": "json_object",
                "decorators": [],
                "baseModel": {
                  "$ref": "183"
                },
                "properties": [
                  {
                    "$id": "189",
                    "kind": "property",
                    "name": "type",
                    "serializedName": "type",
                    "doc": "Response format type: always 'json_object' for this object.",
                    "type": {
                      "$ref": "77"
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": true,
                    "flatten": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonObject.type",
                    "serializationOptions": {
                      "json": {
                        "name": "type"
                      }
                    }
                  }
                ]
              },
              "json_schema": {
                "$id": "190",
                "kind": "model",
                "name": "ChatCompletionsResponseFormatJsonSchema",
                "namespace": "Azure.AI.Inference",
                "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchema",
                "access": "internal",
                "usage": "Input,Json",
                "doc": "A response format for Chat Completions that restricts responses to emitting valid JSON objects, with a\nJSON schema specified by the caller.",
                "discriminatorValue": "json_schema",
                "decorators": [],
                "baseModel": {
                  "$ref": "183"
                },
                "properties": [
                  {
                    "$id": "191",
                    "kind": "property",
                    "name": "type",
                    "serializedName": "type",
                    "doc": "The type of response format being defined: `json_schema`",
                    "type": {
                      "$ref": "79"
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": true,
                    "flatten": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchema.type",
                    "serializationOptions": {
                      "json": {
                        "name": "type"
                      }
                    }
                  },
                  {
                    "$id": "192",
                    "kind": "property",
                    "name": "json_schema",
                    "serializedName": "json_schema",
                    "doc": "The definition of the required JSON schema in the response, and associated metadata.",
                    "type": {
                      "$id": "193",
                      "kind": "model",
                      "name": "ChatCompletionsResponseFormatJsonSchemaDefinition",
                      "namespace": "Azure.AI.Inference",
                      "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchemaDefinition",
                      "usage": "Input,Json",
                      "doc": "Defines the response format for chat completions as JSON with a given schema.\nThe AI model will need to adhere to this schema when generating completions.",
                      "decorators": [],
                      "properties": [
                        {
                          "$id": "194",
                          "kind": "property",
                          "name": "name",
                          "serializedName": "name",
                          "doc": "A name that labels this JSON schema. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.",
                          "type": {
                            "$id": "195",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchemaDefinition.name",
                          "serializationOptions": {
                            "json": {
                              "name": "name"
                            }
                          }
                        },
                        {
                          "$id": "196",
                          "kind": "property",
                          "name": "schema",
                          "serializedName": "schema",
                          "doc": "The definition of the JSON schema. See https://json-schema.org/overview/what-is-jsonschema.\nNote that AI models usually only support a subset of the keywords defined by JSON schema.\nConsult your AI model documentation to determine what is supported.",
                          "type": {
                            "$id": "197",
                            "kind": "dict",
                            "keyType": {
                              "$id": "198",
                              "kind": "string",
                              "name": "string",
                              "crossLanguageDefinitionId": "TypeSpec.string",
                              "decorators": []
                            },
                            "valueType": {
                              "$id": "199",
                              "kind": "unknown",
                              "name": "unknown",
                              "crossLanguageDefinitionId": "",
                              "decorators": []
                            },
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchemaDefinition.schema",
                          "serializationOptions": {
                            "json": {
                              "name": "schema"
                            }
                          }
                        },
                        {
                          "$id": "200",
                          "kind": "property",
                          "name": "description",
                          "serializedName": "description",
                          "doc": "A description of the response format, used by the AI model to determine how to generate responses in this format.",
                          "type": {
                            "$id": "201",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": true,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchemaDefinition.description",
                          "serializationOptions": {
                            "json": {
                              "name": "description"
                            }
                          }
                        },
                        {
                          "$id": "202",
                          "kind": "property",
                          "name": "strict",
                          "serializedName": "strict",
                          "doc": "If set to true, the service will error out if the provided JSON schema contains keywords\nnot supported by the AI model. An example of such keyword may be `maxLength` for JSON type `string`.\nIf false, and the provided JSON schema contains keywords not supported by the AI model,\nthe AI model will not error out. Instead it will ignore the unsupported keywords.",
                          "type": {
                            "$id": "203",
                            "kind": "boolean",
                            "name": "boolean",
                            "crossLanguageDefinitionId": "TypeSpec.boolean",
                            "decorators": []
                          },
                          "optional": true,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchemaDefinition.strict",
                          "serializationOptions": {
                            "json": {
                              "name": "strict"
                            }
                          }
                        }
                      ]
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": false,
                    "flatten": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "AI.Model.ChatCompletionsResponseFormatJsonSchema.json_schema",
                    "serializationOptions": {
                      "json": {
                        "name": "json_schema"
                      }
                    }
                  }
                ]
              }
            }
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.response_format",
          "serializationOptions": {
            "json": {
              "name": "response_format"
            }
          }
        },
        {
          "$id": "204",
          "kind": "property",
          "name": "StopSequences",
          "serializedName": "stop",
          "doc": "A collection of textual sequences that will end completions generation.",
          "type": {
            "$id": "205",
            "kind": "array",
            "name": "Array",
            "valueType": {
              "$id": "206",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.stop",
          "serializationOptions": {
            "json": {
              "name": "stop"
            }
          }
        },
        {
          "$id": "207",
          "kind": "property",
          "name": "tools",
          "serializedName": "tools",
          "doc": "A list of tools the model may request to call. Currently, only functions are supported as a tool. The model\nmay response with a function call request and provide the input arguments in JSON format for that function.",
          "type": {
            "$id": "208",
            "kind": "array",
            "name": "ArrayChatCompletionsToolDefinition",
            "valueType": {
              "$id": "209",
              "kind": "model",
              "name": "ChatCompletionsToolDefinition",
              "namespace": "Azure.AI.Inference",
              "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolDefinition",
              "access": "public",
              "usage": "Input,Json",
              "doc": "The definition of a chat completions tool that can call a function.",
              "decorators": [],
              "properties": [
                {
                  "$id": "210",
                  "kind": "property",
                  "name": "type",
                  "serializedName": "type",
                  "doc": "The type of the tool. Currently, only `function` is supported.",
                  "type": {
                    "$ref": "81"
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolDefinition.type",
                  "serializationOptions": {
                    "json": {
                      "name": "type"
                    }
                  }
                },
                {
                  "$id": "211",
                  "kind": "property",
                  "name": "function",
                  "serializedName": "function",
                  "doc": "The function definition details for the function tool.",
                  "type": {
                    "$id": "212",
                    "kind": "model",
                    "name": "FunctionDefinition",
                    "namespace": "Azure.AI.Inference",
                    "crossLanguageDefinitionId": "AI.Model.FunctionDefinition",
                    "access": "public",
                    "usage": "Input,Json",
                    "doc": "The definition of a caller-specified function that chat completions may invoke in response to matching user input.",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "213",
                        "kind": "property",
                        "name": "name",
                        "serializedName": "name",
                        "doc": "The name of the function to be called.",
                        "type": {
                          "$id": "214",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.FunctionDefinition.name",
                        "serializationOptions": {
                          "json": {
                            "name": "name"
                          }
                        }
                      },
                      {
                        "$id": "215",
                        "kind": "property",
                        "name": "description",
                        "serializedName": "description",
                        "doc": "A description of what the function does. The model will use this description when selecting the function and\ninterpreting its parameters.",
                        "type": {
                          "$id": "216",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.FunctionDefinition.description",
                        "serializationOptions": {
                          "json": {
                            "name": "description"
                          }
                        }
                      },
                      {
                        "$id": "217",
                        "kind": "property",
                        "name": "parameters",
                        "serializedName": "parameters",
                        "doc": "The parameters the function accepts, described as a JSON Schema object.",
                        "type": {
                          "$ref": "197"
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.FunctionDefinition.parameters",
                        "serializationOptions": {
                          "json": {
                            "name": "parameters"
                          }
                        }
                      }
                    ]
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ChatCompletionsToolDefinition.function",
                  "serializationOptions": {
                    "json": {
                      "name": "function"
                    }
                  }
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.tools",
          "serializationOptions": {
            "json": {
              "name": "tools"
            }
          }
        },
        {
          "$id": "218",
          "kind": "property",
          "name": "toolChoice",
          "serializedName": "tool_choice",
          "doc": "If specified, the model will configure which of the provided tools it can use for the chat completions response.",
          "type": {
            "$id": "219",
            "kind": "union",
            "name": "ChatCompletionsOptionsToolChoice",
            "variantTypes": [
              {
                "$ref": "17"
              },
              {
                "$id": "220",
                "kind": "model",
                "name": "ChatCompletionsNamedToolChoice",
                "namespace": "Azure.AI.Inference",
                "crossLanguageDefinitionId": "AI.Model.ChatCompletionsNamedToolChoice",
                "access": "public",
                "usage": "Input,Json",
                "doc": "A tool selection of a specific, named function tool that will limit chat completions to using the named function.",
                "decorators": [],
                "properties": [
                  {
                    "$id": "221",
                    "kind": "property",
                    "name": "type",
                    "serializedName": "type",
                    "doc": "The type of the tool. Currently, only `function` is supported.",
                    "type": {
                      "$ref": "82"
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": false,
                    "flatten": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "AI.Model.ChatCompletionsNamedToolChoice.type",
                    "serializationOptions": {
                      "json": {
                        "name": "type"
                      }
                    }
                  },
                  {
                    "$id": "222",
                    "kind": "property",
                    "name": "function",
                    "serializedName": "function",
                    "doc": "The function that should be called.",
                    "type": {
                      "$id": "223",
                      "kind": "model",
                      "name": "ChatCompletionsNamedToolChoiceFunction",
                      "namespace": "Azure.AI.Inference",
                      "crossLanguageDefinitionId": "AI.Model.ChatCompletionsNamedToolChoiceFunction",
                      "access": "public",
                      "usage": "Input,Json",
                      "doc": "A tool selection of a specific, named function tool that will limit chat completions to using the named function.",
                      "decorators": [],
                      "properties": [
                        {
                          "$id": "224",
                          "kind": "property",
                          "name": "name",
                          "serializedName": "name",
                          "doc": "The name of the function that should be called.",
                          "type": {
                            "$id": "225",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsNamedToolChoiceFunction.name",
                          "serializationOptions": {
                            "json": {
                              "name": "name"
                            }
                          }
                        }
                      ]
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": false,
                    "flatten": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "AI.Model.ChatCompletionsNamedToolChoice.function",
                    "serializationOptions": {
                      "json": {
                        "name": "function"
                      }
                    }
                  }
                ]
              }
            ],
            "namespace": "",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.toolChoice",
          "serializationOptions": {
            "json": {
              "name": "tool_choice"
            }
          }
        },
        {
          "$id": "226",
          "kind": "property",
          "name": "seed",
          "serializedName": "seed",
          "doc": "If specified, the system will make a best effort to sample deterministically such that repeated requests with the\nsame seed and parameters should return the same result. Determinism is not guaranteed.",
          "type": {
            "$id": "227",
            "kind": "int64",
            "name": "int64",
            "crossLanguageDefinitionId": "TypeSpec.int64",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.seed",
          "serializationOptions": {
            "json": {
              "name": "seed"
            }
          }
        },
        {
          "$id": "228",
          "kind": "property",
          "name": "model",
          "serializedName": "model",
          "doc": "ID of the specific AI model to use, if more than one model is available on the endpoint.",
          "type": {
            "$id": "229",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletionsOptions.model",
          "serializationOptions": {
            "json": {
              "name": "model"
            }
          }
        }
      ]
    },
    {
      "$ref": "105"
    },
    {
      "$ref": "107"
    },
    {
      "$ref": "111"
    },
    {
      "$ref": "115"
    },
    {
      "$ref": "121"
    },
    {
      "$ref": "124"
    },
    {
      "$ref": "128"
    },
    {
      "$ref": "131"
    },
    {
      "$ref": "135"
    },
    {
      "$ref": "138"
    },
    {
      "$ref": "141"
    },
    {
      "$ref": "144"
    },
    {
      "$ref": "148"
    },
    {
      "$ref": "154"
    },
    {
      "$ref": "159"
    },
    {
      "$ref": "164"
    },
    {
      "$ref": "183"
    },
    {
      "$ref": "186"
    },
    {
      "$ref": "188"
    },
    {
      "$ref": "190"
    },
    {
      "$ref": "193"
    },
    {
      "$ref": "209"
    },
    {
      "$ref": "212"
    },
    {
      "$ref": "220"
    },
    {
      "$ref": "223"
    },
    {
      "$id": "230",
      "kind": "model",
      "name": "ChatCompletions",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.ChatCompletions",
      "access": "public",
      "usage": "Output,Json",
      "doc": "Representation of the response data from a chat completions request.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "decorators": [],
      "properties": [
        {
          "$id": "231",
          "kind": "property",
          "name": "id",
          "serializedName": "id",
          "doc": "A unique identifier associated with this chat completions response.",
          "type": {
            "$id": "232",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletions.id",
          "serializationOptions": {
            "json": {
              "name": "id"
            }
          }
        },
        {
          "$id": "233",
          "kind": "property",
          "name": "created",
          "serializedName": "created",
          "doc": "The first timestamp associated with generation activity for this completions response,\nrepresented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.",
          "type": {
            "$id": "234",
            "kind": "utcDateTime",
            "name": "utcDateTime",
            "encode": "unixTimestamp",
            "wireType": {
              "$id": "235",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletions.created",
          "serializationOptions": {
            "json": {
              "name": "created"
            }
          }
        },
        {
          "$id": "236",
          "kind": "property",
          "name": "model",
          "serializedName": "model",
          "doc": "The model used for the chat completion.",
          "type": {
            "$id": "237",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletions.model",
          "serializationOptions": {
            "json": {
              "name": "model"
            }
          }
        },
        {
          "$id": "238",
          "kind": "property",
          "name": "choices",
          "serializedName": "choices",
          "doc": "The collection of completions choices associated with this completions response.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
          "type": {
            "$id": "239",
            "kind": "array",
            "name": "ArrayChatChoice",
            "valueType": {
              "$id": "240",
              "kind": "model",
              "name": "ChatChoice",
              "namespace": "Azure.AI.Inference",
              "crossLanguageDefinitionId": "AI.Model.ChatChoice",
              "access": "public",
              "usage": "Output,Json",
              "doc": "The representation of a single prompt completion as part of an overall chat completions request.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
              "decorators": [],
              "properties": [
                {
                  "$id": "241",
                  "kind": "property",
                  "name": "index",
                  "serializedName": "index",
                  "doc": "The ordered index associated with this chat completions choice.",
                  "type": {
                    "$id": "242",
                    "kind": "int32",
                    "name": "int32",
                    "crossLanguageDefinitionId": "TypeSpec.int32",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ChatChoice.index",
                  "serializationOptions": {
                    "json": {
                      "name": "index"
                    }
                  }
                },
                {
                  "$id": "243",
                  "kind": "property",
                  "name": "finish_reason",
                  "serializedName": "finish_reason",
                  "doc": "The reason that this chat completions choice completed its generated.",
                  "type": {
                    "$id": "244",
                    "kind": "nullable",
                    "type": {
                      "$ref": "22"
                    },
                    "namespace": ""
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ChatChoice.finish_reason",
                  "serializationOptions": {
                    "json": {
                      "name": "finish_reason"
                    }
                  }
                },
                {
                  "$id": "245",
                  "kind": "property",
                  "name": "message",
                  "serializedName": "message",
                  "doc": "The chat message for a given chat completions prompt.",
                  "type": {
                    "$id": "246",
                    "kind": "model",
                    "name": "ChatResponseMessage",
                    "namespace": "Azure.AI.Inference",
                    "crossLanguageDefinitionId": "AI.Model.ChatResponseMessage",
                    "access": "public",
                    "usage": "Output,Json",
                    "doc": "A representation of a chat message as received in a response.",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "247",
                        "kind": "property",
                        "name": "role",
                        "serializedName": "role",
                        "doc": "The chat role associated with the message.",
                        "type": {
                          "$ref": "1"
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.ChatResponseMessage.role",
                        "serializationOptions": {
                          "json": {
                            "name": "role"
                          }
                        }
                      },
                      {
                        "$id": "248",
                        "kind": "property",
                        "name": "content",
                        "serializedName": "content",
                        "doc": "The content of the message.",
                        "type": {
                          "$id": "249",
                          "kind": "nullable",
                          "type": {
                            "$id": "250",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "namespace": ""
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.ChatResponseMessage.content",
                        "serializationOptions": {
                          "json": {
                            "name": "content"
                          }
                        }
                      },
                      {
                        "$id": "251",
                        "kind": "property",
                        "name": "toolCalls",
                        "serializedName": "tool_calls",
                        "doc": "The tool calls that must be resolved and have their outputs appended to subsequent input messages for the chat\ncompletions request to resolve as configured.",
                        "type": {
                          "$ref": "153"
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.ChatResponseMessage.toolCalls",
                        "serializationOptions": {
                          "json": {
                            "name": "tool_calls"
                          }
                        }
                      }
                    ]
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ChatChoice.message",
                  "serializationOptions": {
                    "json": {
                      "name": "message"
                    }
                  }
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletions.choices",
          "serializationOptions": {
            "json": {
              "name": "choices"
            }
          }
        },
        {
          "$id": "252",
          "kind": "property",
          "name": "usage",
          "serializedName": "usage",
          "doc": "Usage information for tokens processed and generated as part of this completions operation.",
          "type": {
            "$id": "253",
            "kind": "model",
            "name": "CompletionsUsage",
            "namespace": "Azure.AI.Inference",
            "crossLanguageDefinitionId": "AI.Model.CompletionsUsage",
            "access": "public",
            "usage": "Output,Json",
            "doc": "Representation of the token counts processed for a completions request.\nCounts consider all tokens across prompts, choices, choice alternates, best_of generations, and\nother consumers.",
            "decorators": [],
            "properties": [
              {
                "$id": "254",
                "kind": "property",
                "name": "completion_tokens",
                "serializedName": "completion_tokens",
                "doc": "The number of tokens generated across all completions emissions.",
                "type": {
                  "$id": "255",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "AI.Model.CompletionsUsage.completion_tokens",
                "serializationOptions": {
                  "json": {
                    "name": "completion_tokens"
                  }
                }
              },
              {
                "$id": "256",
                "kind": "property",
                "name": "prompt_tokens",
                "serializedName": "prompt_tokens",
                "doc": "The number of tokens in the provided prompts for the completions request.",
                "type": {
                  "$id": "257",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "AI.Model.CompletionsUsage.prompt_tokens",
                "serializationOptions": {
                  "json": {
                    "name": "prompt_tokens"
                  }
                }
              },
              {
                "$id": "258",
                "kind": "property",
                "name": "total_tokens",
                "serializedName": "total_tokens",
                "doc": "The total number of tokens processed for the completions request and response.",
                "type": {
                  "$id": "259",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "AI.Model.CompletionsUsage.total_tokens",
                "serializationOptions": {
                  "json": {
                    "name": "total_tokens"
                  }
                }
              }
            ]
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ChatCompletions.usage",
          "serializationOptions": {
            "json": {
              "name": "usage"
            }
          }
        }
      ]
    },
    {
      "$ref": "240"
    },
    {
      "$ref": "246"
    },
    {
      "$ref": "253"
    },
    {
      "$id": "260",
      "kind": "model",
      "name": "ErrorResponse",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "Azure.Core.Foundations.ErrorResponse",
      "usage": "Json,Exception",
      "doc": "A response containing error details.",
      "decorators": [],
      "properties": [
        {
          "$id": "261",
          "kind": "property",
          "name": "error",
          "serializedName": "error",
          "doc": "The error object.",
          "type": {
            "$id": "262",
            "kind": "model",
            "name": "Error",
            "namespace": "Azure.AI.Inference",
            "crossLanguageDefinitionId": "Azure.Core.Foundations.Error",
            "usage": "Json,Exception",
            "doc": "The error object.",
            "decorators": [],
            "properties": [
              {
                "$id": "263",
                "kind": "property",
                "name": "code",
                "serializedName": "code",
                "doc": "One of a server-defined set of error codes.",
                "type": {
                  "$id": "264",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.code",
                "serializationOptions": {
                  "json": {
                    "name": "code"
                  }
                }
              },
              {
                "$id": "265",
                "kind": "property",
                "name": "message",
                "serializedName": "message",
                "doc": "A human-readable representation of the error.",
                "type": {
                  "$id": "266",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.message",
                "serializationOptions": {
                  "json": {
                    "name": "message"
                  }
                }
              },
              {
                "$id": "267",
                "kind": "property",
                "name": "target",
                "serializedName": "target",
                "doc": "The target of the error.",
                "type": {
                  "$id": "268",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.target",
                "serializationOptions": {
                  "json": {
                    "name": "target"
                  }
                }
              },
              {
                "$id": "269",
                "kind": "property",
                "name": "details",
                "serializedName": "details",
                "doc": "An array of details about specific errors that led to this reported error.",
                "type": {
                  "$id": "270",
                  "kind": "array",
                  "name": "ArrayError",
                  "valueType": {
                    "$ref": "262"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.details",
                "serializationOptions": {
                  "json": {
                    "name": "details"
                  }
                }
              },
              {
                "$id": "271",
                "kind": "property",
                "name": "innererror",
                "serializedName": "innererror",
                "doc": "An object containing more specific information than the current object about the error.",
                "type": {
                  "$id": "272",
                  "kind": "model",
                  "name": "InnerError",
                  "namespace": "Azure.AI.Inference",
                  "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError",
                  "usage": "Json,Exception",
                  "doc": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#handling-errors.",
                  "decorators": [],
                  "properties": [
                    {
                      "$id": "273",
                      "kind": "property",
                      "name": "code",
                      "serializedName": "code",
                      "doc": "One of a server-defined set of error codes.",
                      "type": {
                        "$id": "274",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.code",
                      "serializationOptions": {
                        "json": {
                          "name": "code"
                        }
                      }
                    },
                    {
                      "$id": "275",
                      "kind": "property",
                      "name": "innererror",
                      "serializedName": "innererror",
                      "doc": "Inner error.",
                      "type": {
                        "$ref": "272"
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.innererror",
                      "serializationOptions": {
                        "json": {
                          "name": "innererror"
                        }
                      }
                    }
                  ]
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.innererror",
                "serializationOptions": {
                  "json": {
                    "name": "innererror"
                  }
                }
              }
            ]
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.Core.Foundations.ErrorResponse.error",
          "serializationOptions": {
            "json": {
              "name": "error"
            }
          }
        },
        {
          "$id": "276",
          "kind": "header",
          "name": "errorCode",
          "serializedName": "x-ms-error-code",
          "doc": "String error code indicating what went wrong.",
          "type": {
            "$id": "277",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.Core.Foundations.ErrorResponse.errorCode",
          "correspondingMethodParams": []
        }
      ]
    },
    {
      "$ref": "262"
    },
    {
      "$ref": "272"
    },
    {
      "$id": "278",
      "kind": "model",
      "name": "ModelInfo",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.ModelInfo",
      "access": "public",
      "usage": "Output,Json",
      "doc": "Represents some basic information about the AI model.",
      "decorators": [],
      "properties": [
        {
          "$id": "279",
          "kind": "property",
          "name": "model_name",
          "serializedName": "model_name",
          "doc": "The name of the AI model. For example: `Phi21`",
          "type": {
            "$id": "280",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ModelInfo.model_name",
          "serializationOptions": {
            "json": {
              "name": "model_name"
            }
          }
        },
        {
          "$id": "281",
          "kind": "property",
          "name": "model_type",
          "serializedName": "model_type",
          "doc": "The type of the AI model. A Unique identifier for the profile.",
          "type": {
            "$ref": "28"
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ModelInfo.model_type",
          "serializationOptions": {
            "json": {
              "name": "model_type"
            }
          }
        },
        {
          "$id": "282",
          "kind": "property",
          "name": "model_provider_name",
          "serializedName": "model_provider_name",
          "doc": "The model provider name. For example: `Microsoft Research`",
          "type": {
            "$id": "283",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ModelInfo.model_provider_name",
          "serializationOptions": {
            "json": {
              "name": "model_provider_name"
            }
          }
        }
      ]
    },
    {
      "$id": "284",
      "kind": "model",
      "name": "EmbeddingsOptions",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.EmbeddingsOptions",
      "usage": "Input,Json",
      "doc": "The configuration information for an embeddings request.",
      "decorators": [],
      "additionalProperties": {
        "$id": "285",
        "kind": "unknown",
        "name": "unknown",
        "crossLanguageDefinitionId": "",
        "decorators": []
      },
      "properties": [
        {
          "$id": "286",
          "kind": "property",
          "name": "input",
          "serializedName": "input",
          "doc": "Input text to embed, encoded as a string or array of tokens.\nTo embed multiple inputs in a single request, pass an array\nof strings or array of token arrays.",
          "type": {
            "$ref": "205"
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsOptions.input",
          "serializationOptions": {
            "json": {
              "name": "input"
            }
          }
        },
        {
          "$id": "287",
          "kind": "property",
          "name": "dimensions",
          "serializedName": "dimensions",
          "doc": "Optional. The number of dimensions the resulting output embeddings should have.\nPassing null causes the model to use its default value.\nReturns a 422 error if the model doesn't support the value or parameter.",
          "type": {
            "$id": "288",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsOptions.dimensions",
          "serializationOptions": {
            "json": {
              "name": "dimensions"
            }
          }
        },
        {
          "$id": "289",
          "kind": "property",
          "name": "encoding_format",
          "serializedName": "encoding_format",
          "doc": "Optional. The desired format for the returned embeddings.",
          "type": {
            "$ref": "36"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsOptions.encoding_format",
          "serializationOptions": {
            "json": {
              "name": "encoding_format"
            }
          }
        },
        {
          "$id": "290",
          "kind": "property",
          "name": "input_type",
          "serializedName": "input_type",
          "doc": "Optional. The type of the input.\nReturns a 422 error if the model doesn't support the value or parameter.",
          "type": {
            "$ref": "44"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsOptions.input_type",
          "serializationOptions": {
            "json": {
              "name": "input_type"
            }
          }
        },
        {
          "$id": "291",
          "kind": "property",
          "name": "model",
          "serializedName": "model",
          "doc": "ID of the specific AI model to use, if more than one model is available on the endpoint.",
          "type": {
            "$id": "292",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsOptions.model",
          "serializationOptions": {
            "json": {
              "name": "model"
            }
          }
        }
      ]
    },
    {
      "$id": "293",
      "kind": "model",
      "name": "EmbeddingsResult",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.EmbeddingsResult",
      "access": "public",
      "usage": "Output,Json",
      "doc": "Representation of the response data from an embeddings request.\nEmbeddings measure the relatedness of text strings and are commonly used for search, clustering,\nrecommendations, and other similar scenarios.",
      "decorators": [],
      "properties": [
        {
          "$id": "294",
          "kind": "property",
          "name": "id",
          "serializedName": "id",
          "doc": "Unique identifier for the embeddings result.",
          "type": {
            "$id": "295",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsResult.id",
          "serializationOptions": {
            "json": {
              "name": "id"
            }
          }
        },
        {
          "$id": "296",
          "kind": "property",
          "name": "data",
          "serializedName": "data",
          "doc": "Embedding values for the prompts submitted in the request.",
          "type": {
            "$id": "297",
            "kind": "array",
            "name": "ArrayEmbeddingItem",
            "valueType": {
              "$id": "298",
              "kind": "model",
              "name": "EmbeddingItem",
              "namespace": "Azure.AI.Inference",
              "crossLanguageDefinitionId": "AI.Model.EmbeddingItem",
              "access": "public",
              "usage": "Output,Json",
              "doc": "Representation of a single embeddings relatedness comparison.",
              "decorators": [],
              "properties": [
                {
                  "$id": "299",
                  "kind": "property",
                  "name": "embedding",
                  "serializedName": "embedding",
                  "doc": "List of embedding values for the input prompt. These represent a measurement of the\nvector-based relatedness of the provided input. Or a base64 encoded string of the embedding vector.",
                  "type": {
                    "$id": "300",
                    "kind": "union",
                    "name": "EmbeddingItemEmbedding",
                    "variantTypes": [
                      {
                        "$id": "301",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      {
                        "$id": "302",
                        "kind": "array",
                        "name": "Array1",
                        "valueType": {
                          "$id": "303",
                          "kind": "float32",
                          "name": "float32",
                          "crossLanguageDefinitionId": "TypeSpec.float32",
                          "decorators": []
                        },
                        "crossLanguageDefinitionId": "TypeSpec.Array",
                        "decorators": []
                      }
                    ],
                    "namespace": "",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.EmbeddingItem.embedding",
                  "serializationOptions": {
                    "json": {
                      "name": "embedding"
                    }
                  }
                },
                {
                  "$id": "304",
                  "kind": "property",
                  "name": "index",
                  "serializedName": "index",
                  "doc": "Index of the prompt to which the EmbeddingItem corresponds.",
                  "type": {
                    "$id": "305",
                    "kind": "int32",
                    "name": "int32",
                    "crossLanguageDefinitionId": "TypeSpec.int32",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.EmbeddingItem.index",
                  "serializationOptions": {
                    "json": {
                      "name": "index"
                    }
                  }
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsResult.data",
          "serializationOptions": {
            "json": {
              "name": "data"
            }
          }
        },
        {
          "$id": "306",
          "kind": "property",
          "name": "usage",
          "serializedName": "usage",
          "doc": "Usage counts for tokens input using the embeddings API.",
          "type": {
            "$id": "307",
            "kind": "model",
            "name": "EmbeddingsUsage",
            "namespace": "Azure.AI.Inference",
            "crossLanguageDefinitionId": "AI.Model.EmbeddingsUsage",
            "access": "public",
            "usage": "Output,Json",
            "doc": "Measurement of the amount of tokens used in this request and response.",
            "decorators": [],
            "properties": [
              {
                "$id": "308",
                "kind": "property",
                "name": "prompt_tokens",
                "serializedName": "prompt_tokens",
                "doc": "Number of tokens in the request.",
                "type": {
                  "$id": "309",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "AI.Model.EmbeddingsUsage.prompt_tokens",
                "serializationOptions": {
                  "json": {
                    "name": "prompt_tokens"
                  }
                }
              },
              {
                "$id": "310",
                "kind": "property",
                "name": "total_tokens",
                "serializedName": "total_tokens",
                "doc": "Total number of tokens transacted in this request/response. Should equal the\nnumber of tokens in the request.",
                "type": {
                  "$id": "311",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "AI.Model.EmbeddingsUsage.total_tokens",
                "serializationOptions": {
                  "json": {
                    "name": "total_tokens"
                  }
                }
              }
            ]
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsResult.usage",
          "serializationOptions": {
            "json": {
              "name": "usage"
            }
          }
        },
        {
          "$id": "312",
          "kind": "property",
          "name": "model",
          "serializedName": "model",
          "doc": "The model ID used to generate this result.",
          "type": {
            "$id": "313",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.EmbeddingsResult.model",
          "serializationOptions": {
            "json": {
              "name": "model"
            }
          }
        }
      ]
    },
    {
      "$ref": "298"
    },
    {
      "$ref": "307"
    },
    {
      "$id": "314",
      "kind": "model",
      "name": "ImageEmbeddingsOptions",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingsOptions",
      "usage": "Input,Json",
      "doc": "The configuration information for an image embeddings request.",
      "decorators": [],
      "additionalProperties": {
        "$id": "315",
        "kind": "unknown",
        "name": "unknown",
        "crossLanguageDefinitionId": "",
        "decorators": []
      },
      "properties": [
        {
          "$id": "316",
          "kind": "property",
          "name": "input",
          "serializedName": "input",
          "doc": "Input image to embed. To embed multiple inputs in a single request, pass an array.\nThe input must not exceed the max input tokens for the model.",
          "type": {
            "$id": "317",
            "kind": "array",
            "name": "ArrayImageEmbeddingInput",
            "valueType": {
              "$id": "318",
              "kind": "model",
              "name": "ImageEmbeddingInput",
              "namespace": "Azure.AI.Inference",
              "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingInput",
              "access": "public",
              "usage": "Input,Json",
              "doc": "Represents an image with optional text.",
              "decorators": [],
              "properties": [
                {
                  "$id": "319",
                  "kind": "property",
                  "name": "image",
                  "serializedName": "image",
                  "doc": "The input image encoded in base64 string as a data URL. Example: `data:image/{format};base64,{data}`.",
                  "type": {
                    "$id": "320",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingInput.image",
                  "serializationOptions": {
                    "json": {
                      "name": "image"
                    }
                  }
                },
                {
                  "$id": "321",
                  "kind": "property",
                  "name": "text",
                  "serializedName": "text",
                  "doc": "Optional. The text input to feed into the model (like DINO, CLIP).\nReturns a 422 error if the model doesn't support the value or parameter.",
                  "type": {
                    "$id": "322",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingInput.text",
                  "serializationOptions": {
                    "json": {
                      "name": "text"
                    }
                  }
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingsOptions.input",
          "serializationOptions": {
            "json": {
              "name": "input"
            }
          }
        },
        {
          "$id": "323",
          "kind": "property",
          "name": "dimensions",
          "serializedName": "dimensions",
          "doc": "Optional. The number of dimensions the resulting output embeddings should have.\nPassing null causes the model to use its default value.\nReturns a 422 error if the model doesn't support the value or parameter.",
          "type": {
            "$id": "324",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingsOptions.dimensions",
          "serializationOptions": {
            "json": {
              "name": "dimensions"
            }
          }
        },
        {
          "$id": "325",
          "kind": "property",
          "name": "encoding_format",
          "serializedName": "encoding_format",
          "doc": "Optional. The number of dimensions the resulting output embeddings should have.\nPassing null causes the model to use its default value.\nReturns a 422 error if the model doesn't support the value or parameter.",
          "type": {
            "$ref": "36"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingsOptions.encoding_format",
          "serializationOptions": {
            "json": {
              "name": "encoding_format"
            }
          }
        },
        {
          "$id": "326",
          "kind": "property",
          "name": "input_type",
          "serializedName": "input_type",
          "doc": "Optional. The type of the input.\nReturns a 422 error if the model doesn't support the value or parameter.",
          "type": {
            "$ref": "44"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingsOptions.input_type",
          "serializationOptions": {
            "json": {
              "name": "input_type"
            }
          }
        },
        {
          "$id": "327",
          "kind": "property",
          "name": "model",
          "serializedName": "model",
          "doc": "ID of the specific AI model to use, if more than one model is available on the endpoint.",
          "type": {
            "$id": "328",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.ImageEmbeddingsOptions.model",
          "serializationOptions": {
            "json": {
              "name": "model"
            }
          }
        }
      ]
    },
    {
      "$ref": "318"
    },
    {
      "$id": "329",
      "kind": "model",
      "name": "StreamingChatCompletionsUpdate",
      "namespace": "Azure.AI.Inference",
      "crossLanguageDefinitionId": "AI.Model.StreamingChatCompletionsUpdate",
      "access": "public",
      "usage": "Output",
      "doc": "Represents a response update to a chat completions request, when the service is streaming updates \nusing Server Sent Events (SSE).\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "decorators": [],
      "properties": [
        {
          "$id": "330",
          "kind": "property",
          "name": "id",
          "serializedName": "id",
          "doc": "A unique identifier associated with this chat completions response.",
          "type": {
            "$id": "331",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.StreamingChatCompletionsUpdate.id",
          "serializationOptions": {}
        },
        {
          "$id": "332",
          "kind": "property",
          "name": "created",
          "serializedName": "created",
          "doc": "The first timestamp associated with generation activity for this completions response,\nrepresented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.",
          "type": {
            "$id": "333",
            "kind": "utcDateTime",
            "name": "utcDateTime",
            "encode": "unixTimestamp",
            "wireType": {
              "$id": "334",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.StreamingChatCompletionsUpdate.created",
          "serializationOptions": {}
        },
        {
          "$id": "335",
          "kind": "property",
          "name": "model",
          "serializedName": "model",
          "doc": "The model used for the chat completion.",
          "type": {
            "$id": "336",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.StreamingChatCompletionsUpdate.model",
          "serializationOptions": {}
        },
        {
          "$id": "337",
          "kind": "property",
          "name": "choices",
          "serializedName": "choices",
          "doc": "An update to the collection of completion choices associated with this completions response.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
          "type": {
            "$id": "338",
            "kind": "array",
            "name": "ArrayStreamingChatChoiceUpdate",
            "valueType": {
              "$id": "339",
              "kind": "model",
              "name": "StreamingChatChoiceUpdate",
              "namespace": "Azure.AI.Inference",
              "crossLanguageDefinitionId": "AI.Model.StreamingChatChoiceUpdate",
              "access": "public",
              "usage": "Output",
              "doc": "Represents an update to a single prompt completion when the service is streaming updates \nusing Server Sent Events (SSE).\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
              "decorators": [],
              "properties": [
                {
                  "$id": "340",
                  "kind": "property",
                  "name": "index",
                  "serializedName": "index",
                  "doc": "The ordered index associated with this chat completions choice.",
                  "type": {
                    "$id": "341",
                    "kind": "int32",
                    "name": "int32",
                    "crossLanguageDefinitionId": "TypeSpec.int32",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.StreamingChatChoiceUpdate.index",
                  "serializationOptions": {}
                },
                {
                  "$id": "342",
                  "kind": "property",
                  "name": "finish_reason",
                  "serializedName": "finish_reason",
                  "doc": "The reason that this chat completions choice completed its generated.",
                  "type": {
                    "$ref": "244"
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.StreamingChatChoiceUpdate.finish_reason",
                  "serializationOptions": {}
                },
                {
                  "$id": "343",
                  "kind": "property",
                  "name": "delta",
                  "serializedName": "delta",
                  "doc": "An update to the chat message for a given chat completions prompt.",
                  "type": {
                    "$id": "344",
                    "kind": "model",
                    "name": "StreamingChatResponseMessageUpdate",
                    "namespace": "Azure.AI.Inference",
                    "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseMessageUpdate",
                    "access": "public",
                    "usage": "Output",
                    "doc": "A representation of a chat message update as received in a streaming response.",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "345",
                        "kind": "property",
                        "name": "role",
                        "serializedName": "role",
                        "doc": "The chat role associated with the message. If present, should always be 'assistant'",
                        "type": {
                          "$ref": "1"
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseMessageUpdate.role",
                        "serializationOptions": {}
                      },
                      {
                        "$id": "346",
                        "kind": "property",
                        "name": "content",
                        "serializedName": "content",
                        "doc": "The content of the message.",
                        "type": {
                          "$id": "347",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseMessageUpdate.content",
                        "serializationOptions": {}
                      },
                      {
                        "$id": "348",
                        "kind": "property",
                        "name": "toolCalls",
                        "serializedName": "tool_calls",
                        "doc": "The tool calls that must be resolved and have their outputs appended to subsequent input messages for the chat\ncompletions request to resolve as configured.",
                        "type": {
                          "$id": "349",
                          "kind": "array",
                          "name": "ArrayStreamingChatResponseToolCallUpdate",
                          "valueType": {
                            "$id": "350",
                            "kind": "model",
                            "name": "StreamingChatResponseToolCallUpdate",
                            "namespace": "Azure.AI.Inference",
                            "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseToolCallUpdate",
                            "access": "public",
                            "usage": "Output",
                            "doc": "An update to the function tool call information requested by the AI model.",
                            "decorators": [],
                            "properties": [
                              {
                                "$id": "351",
                                "kind": "property",
                                "name": "id",
                                "serializedName": "id",
                                "doc": "The ID of the tool call.",
                                "type": {
                                  "$id": "352",
                                  "kind": "string",
                                  "name": "string",
                                  "crossLanguageDefinitionId": "TypeSpec.string",
                                  "decorators": []
                                },
                                "optional": false,
                                "readOnly": false,
                                "discriminator": false,
                                "flatten": false,
                                "decorators": [],
                                "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseToolCallUpdate.id",
                                "serializationOptions": {}
                              },
                              {
                                "$id": "353",
                                "kind": "property",
                                "name": "function",
                                "serializedName": "function",
                                "doc": "Updates to the function call requested by the AI model.",
                                "type": {
                                  "$ref": "159"
                                },
                                "optional": false,
                                "readOnly": false,
                                "discriminator": false,
                                "flatten": false,
                                "decorators": [],
                                "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseToolCallUpdate.function",
                                "serializationOptions": {}
                              }
                            ]
                          },
                          "crossLanguageDefinitionId": "TypeSpec.Array",
                          "decorators": []
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "AI.Model.StreamingChatResponseMessageUpdate.toolCalls",
                        "serializationOptions": {
                          "json": {
                            "name": "tool_calls"
                          }
                        }
                      }
                    ]
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "AI.Model.StreamingChatChoiceUpdate.delta",
                  "serializationOptions": {}
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.StreamingChatCompletionsUpdate.choices",
          "serializationOptions": {}
        },
        {
          "$id": "354",
          "kind": "property",
          "name": "usage",
          "serializedName": "usage",
          "doc": "Usage information for tokens processed and generated as part of this completions operation.",
          "type": {
            "$ref": "253"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "AI.Model.StreamingChatCompletionsUpdate.usage",
          "serializationOptions": {}
        }
      ]
    },
    {
      "$ref": "339"
    },
    {
      "$ref": "344"
    },
    {
      "$ref": "350"
    }
  ],
  "clients": [
    {
      "$id": "355",
      "kind": "client",
      "name": "ChatCompletionsClient",
      "namespace": "Azure.AI.Inference",
      "methods": [
        {
          "$id": "356",
          "kind": "basic",
          "name": "complete",
          "accessibility": "internal",
          "apiVersions": [
            "2024-05-01-preview"
          ],
          "doc": "Gets chat completions for the provided chat messages.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data. The method makes a REST API call to the `/chat/completions` route\non the given endpoint.",
          "operation": {
            "$id": "357",
            "name": "complete",
            "resourceName": "Client1",
            "doc": "Gets chat completions for the provided chat messages.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data. The method makes a REST API call to the `/chat/completions` route\non the given endpoint.",
            "accessibility": "internal",
            "parameters": [
              {
                "$id": "358",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "359",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "360",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01-preview"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "361",
                "name": "extra_params",
                "nameInRequest": "extra-parameters",
                "doc": "Controls what happens if extra parameters, undefined by the REST API,\nare passed in the JSON request payload.\nThis sets the HTTP request header `extra-parameters`.",
                "type": {
                  "$ref": "49"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "362",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "83"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "363",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "85"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "364",
                "name": "body",
                "nameInRequest": "body",
                "doc": "The options for chat completions.",
                "type": {
                  "$ref": "101"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "230"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{endpoint}",
            "path": "/chat/completions",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "Customizations.Client1.complete",
            "decorators": [],
            "examples": [
              {
                "$id": "365",
                "kind": "http",
                "name": "maximum set chat completion",
                "description": "maximum set chat completion",
                "filePath": "2024-05-01-preview/GetChatCompletions_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "358"
                    },
                    "value": {
                      "$id": "366",
                      "kind": "string",
                      "type": {
                        "$ref": "359"
                      },
                      "value": "2024-05-01-preview"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "361"
                    },
                    "value": {
                      "$id": "367",
                      "kind": "string",
                      "type": {
                        "$ref": "49"
                      },
                      "value": "error"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "364"
                    },
                    "value": {
                      "$id": "368",
                      "kind": "model",
                      "type": {
                        "$ref": "101"
                      },
                      "value": {
                        "messages": {
                          "$id": "369",
                          "kind": "array",
                          "type": {
                            "$ref": "104"
                          },
                          "value": [
                            {
                              "$id": "370",
                              "kind": "model",
                              "type": {
                                "$ref": "105"
                              },
                              "value": {
                                "role": {
                                  "$id": "371",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "1"
                                  },
                                  "value": "ChatRequestMessage"
                                }
                              }
                            }
                          ]
                        },
                        "frequency_penalty": {
                          "$id": "372",
                          "kind": "number",
                          "type": {
                            "$ref": "171"
                          },
                          "value": -2
                        },
                        "stream": {
                          "$id": "373",
                          "kind": "boolean",
                          "type": {
                            "$ref": "173"
                          },
                          "value": true
                        },
                        "presence_penalty": {
                          "$id": "374",
                          "kind": "number",
                          "type": {
                            "$ref": "175"
                          },
                          "value": -1
                        },
                        "temperature": {
                          "$id": "375",
                          "kind": "number",
                          "type": {
                            "$ref": "177"
                          },
                          "value": 0
                        },
                        "top_p": {
                          "$id": "376",
                          "kind": "number",
                          "type": {
                            "$ref": "179"
                          },
                          "value": 0
                        },
                        "max_tokens": {
                          "$id": "377",
                          "kind": "number",
                          "type": {
                            "$ref": "181"
                          },
                          "value": 0
                        },
                        "response_format": {
                          "$id": "378",
                          "kind": "model",
                          "type": {
                            "$ref": "183"
                          },
                          "value": {
                            "type": {
                              "$id": "379",
                              "kind": "string",
                              "type": {
                                "$ref": "185"
                              },
                              "value": "ChatCompletionsResponseFormat"
                            }
                          }
                        },
                        "stop": {
                          "$id": "380",
                          "kind": "array",
                          "type": {
                            "$ref": "205"
                          },
                          "value": [
                            {
                              "$id": "381",
                              "kind": "string",
                              "type": {
                                "$ref": "206"
                              },
                              "value": "dcfnxrdeumnoytdaooqkbl"
                            }
                          ]
                        },
                        "tools": {
                          "$id": "382",
                          "kind": "array",
                          "type": {
                            "$ref": "208"
                          },
                          "value": [
                            {
                              "$id": "383",
                              "kind": "model",
                              "type": {
                                "$ref": "209"
                              },
                              "value": {
                                "type": {
                                  "$id": "384",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "81"
                                  },
                                  "value": "function"
                                },
                                "function": {
                                  "$id": "385",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "212"
                                  },
                                  "value": {
                                    "name": {
                                      "$id": "386",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "214"
                                      },
                                      "value": "ikvkykzp"
                                    },
                                    "description": {
                                      "$id": "387",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "216"
                                      },
                                      "value": "gofxoftbpdi"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "seed": {
                          "$id": "388",
                          "kind": "number",
                          "type": {
                            "$ref": "227"
                          },
                          "value": 21
                        },
                        "model": {
                          "$id": "389",
                          "kind": "string",
                          "type": {
                            "$ref": "229"
                          },
                          "value": "askiizcjob"
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "230"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "390",
                      "kind": "model",
                      "type": {
                        "$ref": "230"
                      },
                      "value": {
                        "id": {
                          "$id": "391",
                          "kind": "string",
                          "type": {
                            "$ref": "232"
                          },
                          "value": "kgousajxgzyhugvqekuswuqbk"
                        },
                        "created": {
                          "$id": "392",
                          "kind": "number",
                          "type": {
                            "$ref": "234"
                          },
                          "value": 18
                        },
                        "model": {
                          "$id": "393",
                          "kind": "string",
                          "type": {
                            "$ref": "237"
                          },
                          "value": "zjxvtpxhzhvgjrhit"
                        },
                        "usage": {
                          "$id": "394",
                          "kind": "model",
                          "type": {
                            "$ref": "253"
                          },
                          "value": {
                            "completion_tokens": {
                              "$id": "395",
                              "kind": "number",
                              "type": {
                                "$ref": "255"
                              },
                              "value": 19
                            },
                            "prompt_tokens": {
                              "$id": "396",
                              "kind": "number",
                              "type": {
                                "$ref": "257"
                              },
                              "value": 28
                            },
                            "total_tokens": {
                              "$id": "397",
                              "kind": "number",
                              "type": {
                                "$ref": "259"
                              },
                              "value": 16
                            }
                          }
                        },
                        "choices": {
                          "$id": "398",
                          "kind": "array",
                          "type": {
                            "$ref": "239"
                          },
                          "value": [
                            {
                              "$id": "399",
                              "kind": "model",
                              "type": {
                                "$ref": "240"
                              },
                              "value": {
                                "index": {
                                  "$id": "400",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "242"
                                  },
                                  "value": 7
                                },
                                "finish_reason": {
                                  "$id": "401",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "22"
                                  },
                                  "value": "stop"
                                },
                                "message": {
                                  "$id": "402",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "246"
                                  },
                                  "value": {
                                    "role": {
                                      "$id": "403",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "1"
                                      },
                                      "value": "system"
                                    },
                                    "content": {
                                      "$id": "404",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "250"
                                      },
                                      "value": "jnsnrwblpuokzbkrzdcwubpfz"
                                    },
                                    "tool_calls": {
                                      "$id": "405",
                                      "kind": "array",
                                      "type": {
                                        "$ref": "153"
                                      },
                                      "value": [
                                        {
                                          "$id": "406",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "154"
                                          },
                                          "value": {
                                            "id": {
                                              "$id": "407",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "156"
                                              },
                                              "value": "yrobmilsrugmbwukmzo"
                                            },
                                            "type": {
                                              "$id": "408",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "74"
                                              },
                                              "value": "function"
                                            },
                                            "function": {
                                              "$id": "409",
                                              "kind": "model",
                                              "type": {
                                                "$ref": "159"
                                              },
                                              "value": {
                                                "name": {
                                                  "$id": "410",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "161"
                                                  },
                                                  "value": "ikvkykzp"
                                                },
                                                "arguments": {
                                                  "$id": "411",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "163"
                                                  },
                                                  "value": "oqxvktuduomvckic"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "412",
                "kind": "http",
                "name": "minimum set chat completion",
                "description": "minimum set chat completion",
                "filePath": "2024-05-01-preview/GetChatCompletions_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "358"
                    },
                    "value": {
                      "$id": "413",
                      "kind": "string",
                      "type": {
                        "$ref": "359"
                      },
                      "value": "2024-05-01-preview"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "364"
                    },
                    "value": {
                      "$id": "414",
                      "kind": "model",
                      "type": {
                        "$ref": "101"
                      },
                      "value": {
                        "messages": {
                          "$id": "415",
                          "kind": "array",
                          "type": {
                            "$ref": "104"
                          },
                          "value": [
                            {
                              "$id": "416",
                              "kind": "model",
                              "type": {
                                "$ref": "105"
                              },
                              "value": {
                                "role": {
                                  "$id": "417",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "1"
                                  },
                                  "value": "ChatRequestMessage"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "230"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "418",
                      "kind": "model",
                      "type": {
                        "$ref": "230"
                      },
                      "value": {
                        "id": {
                          "$id": "419",
                          "kind": "string",
                          "type": {
                            "$ref": "232"
                          },
                          "value": "kgousajxgzyhugvqekuswuqbk"
                        },
                        "created": {
                          "$id": "420",
                          "kind": "number",
                          "type": {
                            "$ref": "234"
                          },
                          "value": 18
                        },
                        "model": {
                          "$id": "421",
                          "kind": "string",
                          "type": {
                            "$ref": "237"
                          },
                          "value": "zjxvtpxhzhvgjrhit"
                        },
                        "usage": {
                          "$id": "422",
                          "kind": "model",
                          "type": {
                            "$ref": "253"
                          },
                          "value": {
                            "completion_tokens": {
                              "$id": "423",
                              "kind": "number",
                              "type": {
                                "$ref": "255"
                              },
                              "value": 19
                            },
                            "prompt_tokens": {
                              "$id": "424",
                              "kind": "number",
                              "type": {
                                "$ref": "257"
                              },
                              "value": 28
                            },
                            "total_tokens": {
                              "$id": "425",
                              "kind": "number",
                              "type": {
                                "$ref": "259"
                              },
                              "value": 16
                            }
                          }
                        },
                        "choices": {
                          "$id": "426",
                          "kind": "array",
                          "type": {
                            "$ref": "239"
                          },
                          "value": [
                            {
                              "$id": "427",
                              "kind": "model",
                              "type": {
                                "$ref": "240"
                              },
                              "value": {
                                "index": {
                                  "$id": "428",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "242"
                                  },
                                  "value": 7
                                },
                                "finish_reason": {
                                  "$id": "429",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "22"
                                  },
                                  "value": "stop"
                                },
                                "message": {
                                  "$id": "430",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "246"
                                  },
                                  "value": {
                                    "role": {
                                      "$id": "431",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "1"
                                      },
                                      "value": "system"
                                    },
                                    "content": {
                                      "$id": "432",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "250"
                                      },
                                      "value": "jnsnrwblpuokzbkrzdcwubpfz"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "433",
              "name": "body",
              "nameInRequest": "body",
              "doc": "The options for chat completions.",
              "type": {
                "$ref": "101"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "434",
              "name": "extra_params",
              "nameInRequest": "extra-parameters",
              "doc": "Controls what happens if extra parameters, undefined by the REST API,\nare passed in the JSON request payload.\nThis sets the HTTP request header `extra-parameters`.",
              "type": {
                "$ref": "49"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "435",
              "name": "contentType",
              "nameInRequest": "contentType",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "83"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "436",
              "name": "accept",
              "nameInRequest": "accept",
              "type": {
                "$ref": "85"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "230"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "Customizations.Client1.complete"
        },
        {
          "$id": "437",
          "kind": "basic",
          "name": "getModelInfo",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01-preview"
          ],
          "doc": "Returns information about the AI model.\nThe method makes a REST API call to the `/info` route on the given endpoint.\nThis method will only work when using Serverless API or Managed Compute endpoint.\nIt will not work for GitHub Models endpoint or Azure OpenAI endpoint.",
          "operation": {
            "$id": "438",
            "name": "getModelInfo",
            "resourceName": "Client1",
            "doc": "Returns information about the AI model.\nThe method makes a REST API call to the `/info` route on the given endpoint.\nThis method will only work when using Serverless API or Managed Compute endpoint.\nIt will not work for GitHub Models endpoint or Azure OpenAI endpoint.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "439",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "440",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "441",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01-preview"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "442",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "87"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "278"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}",
            "path": "/info",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "Customizations.Client1.getModelInfo",
            "decorators": [],
            "examples": [
              {
                "$id": "443",
                "kind": "http",
                "name": "maximum set model information",
                "description": "maximum set model information",
                "filePath": "2024-05-01-preview/GetModelInfo_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "439"
                    },
                    "value": {
                      "$id": "444",
                      "kind": "string",
                      "type": {
                        "$ref": "440"
                      },
                      "value": "2024-05-01-preview"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "278"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "445",
                      "kind": "model",
                      "type": {
                        "$ref": "278"
                      },
                      "value": {
                        "model_name": {
                          "$id": "446",
                          "kind": "string",
                          "type": {
                            "$ref": "280"
                          },
                          "value": "jno"
                        },
                        "model_type": {
                          "$id": "447",
                          "kind": "string",
                          "type": {
                            "$ref": "28"
                          },
                          "value": "embeddings"
                        },
                        "model_provider_name": {
                          "$id": "448",
                          "kind": "string",
                          "type": {
                            "$ref": "283"
                          },
                          "value": "ulyaphtaszwdkefpbkklnjtrhzh"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "449",
                "kind": "http",
                "name": "minimum set model information",
                "description": "minimum set model information",
                "filePath": "2024-05-01-preview/GetModelInfo_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "439"
                    },
                    "value": {
                      "$id": "450",
                      "kind": "string",
                      "type": {
                        "$ref": "440"
                      },
                      "value": "2024-05-01-preview"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "278"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "451",
                      "kind": "model",
                      "type": {
                        "$ref": "278"
                      },
                      "value": {
                        "model_name": {
                          "$id": "452",
                          "kind": "string",
                          "type": {
                            "$ref": "280"
                          },
                          "value": "jno"
                        },
                        "model_type": {
                          "$id": "453",
                          "kind": "string",
                          "type": {
                            "$ref": "28"
                          },
                          "value": "embeddings"
                        },
                        "model_provider_name": {
                          "$id": "454",
                          "kind": "string",
                          "type": {
                            "$ref": "283"
                          },
                          "value": "ulyaphtaszwdkefpbkklnjtrhzh"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "455",
              "name": "accept",
              "nameInRequest": "accept",
              "type": {
                "$ref": "87"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "278"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "Customizations.Client1.getModelInfo"
        }
      ],
      "parameters": [
        {
          "$id": "456",
          "name": "endpoint",
          "nameInRequest": "endpoint",
          "doc": "Service host",
          "type": {
            "$id": "457",
            "kind": "url",
            "name": "endpoint",
            "crossLanguageDefinitionId": "TypeSpec.url"
          },
          "location": "Uri",
          "isApiVersion": false,
          "isContentType": false,
          "isRequired": true,
          "isEndpoint": true,
          "skipUrlEncoding": false,
          "explode": false,
          "kind": "Client",
          "serverUrlTemplate": "{endpoint}"
        }
      ],
      "decorators": [],
      "crossLanguageDefinitionId": "Customizations.Client1",
      "apiVersions": [
        "2024-05-01-preview"
      ]
    },
    {
      "$id": "458",
      "kind": "client",
      "name": "EmbeddingsClient",
      "namespace": "Azure.AI.Inference",
      "methods": [
        {
          "$id": "459",
          "kind": "basic",
          "name": "embed",
          "accessibility": "internal",
          "apiVersions": [
            "2024-05-01-preview"
          ],
          "doc": "Return the embedding vectors for given text prompts.\nThe method makes a REST API call to the `/embeddings` route on the given endpoint.",
          "operation": {
            "$id": "460",
            "name": "embed",
            "resourceName": "Client2",
            "doc": "Return the embedding vectors for given text prompts.\nThe method makes a REST API call to the `/embeddings` route on the given endpoint.",
            "accessibility": "internal",
            "parameters": [
              {
                "$id": "461",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "462",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "463",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01-preview"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "464",
                "name": "extra_params",
                "nameInRequest": "extra-parameters",
                "doc": "Controls what happens if extra parameters, undefined by the REST API,\nare passed in the JSON request payload.\nThis sets the HTTP request header `extra-parameters`.",
                "type": {
                  "$ref": "49"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "465",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "89"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "466",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "91"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "467",
                "name": "body",
                "nameInRequest": "body",
                "doc": "The body of the request containing the options for generating embeddings.",
                "type": {
                  "$ref": "284"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "293"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{endpoint}",
            "path": "/embeddings",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "Customizations.Client2.embed",
            "decorators": [],
            "examples": [
              {
                "$id": "468",
                "kind": "http",
                "name": "maximum set embeddings",
                "description": "maximum set embeddings",
                "filePath": "2024-05-01-preview/GetEmbeddings_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "461"
                    },
                    "value": {
                      "$id": "469",
                      "kind": "string",
                      "type": {
                        "$ref": "462"
                      },
                      "value": "2024-05-01-preview"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "464"
                    },
                    "value": {
                      "$id": "470",
                      "kind": "string",
                      "type": {
                        "$ref": "49"
                      },
                      "value": "error"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "467"
                    },
                    "value": {
                      "$id": "471",
                      "kind": "model",
                      "type": {
                        "$ref": "284"
                      },
                      "value": {
                        "input": {
                          "$id": "472",
                          "kind": "array",
                          "type": {
                            "$ref": "205"
                          },
                          "value": [
                            {
                              "$id": "473",
                              "kind": "string",
                              "type": {
                                "$ref": "206"
                              },
                              "value": "p"
                            }
                          ]
                        },
                        "dimensions": {
                          "$id": "474",
                          "kind": "number",
                          "type": {
                            "$ref": "288"
                          },
                          "value": 11
                        },
                        "encoding_format": {
                          "$id": "475",
                          "kind": "string",
                          "type": {
                            "$ref": "36"
                          },
                          "value": "base64"
                        },
                        "input_type": {
                          "$id": "476",
                          "kind": "string",
                          "type": {
                            "$ref": "44"
                          },
                          "value": "text"
                        },
                        "model": {
                          "$id": "477",
                          "kind": "string",
                          "type": {
                            "$ref": "292"
                          },
                          "value": "kwkpluujwiabfquhkaugttxut"
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "293"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "478",
                      "kind": "model",
                      "type": {
                        "$ref": "293"
                      },
                      "value": {
                        "id": {
                          "$id": "479",
                          "kind": "string",
                          "type": {
                            "$ref": "295"
                          },
                          "value": "cknxthfa"
                        },
                        "data": {
                          "$id": "480",
                          "kind": "array",
                          "type": {
                            "$ref": "297"
                          },
                          "value": [
                            {
                              "$id": "481",
                              "kind": "model",
                              "type": {
                                "$ref": "298"
                              },
                              "value": {
                                "index": {
                                  "$id": "482",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "305"
                                  },
                                  "value": 21
                                }
                              }
                            }
                          ]
                        },
                        "usage": {
                          "$id": "483",
                          "kind": "model",
                          "type": {
                            "$ref": "307"
                          },
                          "value": {
                            "prompt_tokens": {
                              "$id": "484",
                              "kind": "number",
                              "type": {
                                "$ref": "309"
                              },
                              "value": 4
                            },
                            "total_tokens": {
                              "$id": "485",
                              "kind": "number",
                              "type": {
                                "$ref": "311"
                              },
                              "value": 22
                            }
                          }
                        },
                        "model": {
                          "$id": "486",
                          "kind": "string",
                          "type": {
                            "$ref": "313"
                          },
                          "value": "uvrmctbnze"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "487",
                "kind": "http",
                "name": "minimum set embeddings",
                "description": "minimum set embeddings",
                "filePath": "2024-05-01-preview/GetEmbeddings_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "461"
                    },
                    "value": {
                      "$id": "488",
                      "kind": "string",
                      "type": {
                        "$ref": "462"
                      },
                      "value": "2024-05-01-preview"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "467"
                    },
                    "value": {
                      "$id": "489",
                      "kind": "model",
                      "type": {
                        "$ref": "284"
                      },
                      "value": {
                        "input": {
                          "$id": "490",
                          "kind": "array",
                          "type": {
                            "$ref": "205"
                          },
                          "value": [
                            {
                              "$id": "491",
                              "kind": "string",
                              "type": {
                                "$ref": "206"
                              },
                              "value": "ujbdzqgintkjjorqvgtyqxehwod"
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "293"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "492",
                      "kind": "model",
                      "type": {
                        "$ref": "293"
                      },
                      "value": {
                        "id": {
                          "$id": "493",
                          "kind": "string",
                          "type": {
                            "$ref": "295"
                          },
                          "value": "kmclubpbyrjjrcihu"
                        },
                        "data": {
                          "$id": "494",
                          "kind": "array",
                          "type": {
                            "$ref": "297"
                          },
                          "value": [
                            {
                              "$id": "495",
                              "kind": "model",
                              "type": {
                                "$ref": "298"
                              },
                              "value": {
                                "embedding": {
                                  "$id": "496",
                                  "kind": "union",
                                  "type": {
                                    "$ref": "300"
                                  },
                                  "value": [
                                    3
                                  ]
                                },
                                "index": {
                                  "$id": "497",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "305"
                                  },
                                  "value": 20
                                }
                              }
                            }
                          ]
                        },
                        "usage": {
                          "$id": "498",
                          "kind": "model",
                          "type": {
                            "$ref": "307"
                          },
                          "value": {
                            "prompt_tokens": {
                              "$id": "499",
                              "kind": "number",
                              "type": {
                                "$ref": "309"
                              },
                              "value": 17
                            },
                            "total_tokens": {
                              "$id": "500",
                              "kind": "number",
                              "type": {
                                "$ref": "311"
                              },
                              "value": 25
                            }
                          }
                        },
                        "model": {
                          "$id": "501",
                          "kind": "string",
                          "type": {
                            "$ref": "313"
                          },
                          "value": "gg"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "502",
              "name": "body",
              "nameInRequest": "body",
              "doc": "The body of the request containing the options for generating embeddings.",
              "type": {
                "$ref": "284"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "503",
              "name": "extra_params",
              "nameInRequest": "extra-parameters",
              "doc": "Controls what happens if extra parameters, undefined by the REST API,\nare passed in the JSON request payload.\nThis sets the HTTP request header `extra-parameters`.",
              "type": {
                "$ref": "49"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "504",
              "name": "contentType",
              "nameInRequest": "contentType",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "89"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "505",
              "name": "accept",
              "nameInRequest": "accept",
              "type": {
                "$ref": "91"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "293"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "Customizations.Client2.embed"
        },
        {
          "$id": "506",
          "kind": "basic",
          "name": "getModelInfo",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01-preview"
          ],
          "doc": "Returns information about the AI model.\nThe method makes a REST API call to the `/info` route on the given endpoint.\nThis method will only work when using Serverless API or Managed Compute endpoint.\nIt will not work for GitHub Models endpoint or Azure OpenAI endpoint.",
          "operation": {
            "$id": "507",
            "name": "getModelInfo",
            "resourceName": "Client2",
            "doc": "Returns information about the AI model.\nThe method makes a REST API call to the `/info` route on the given endpoint.\nThis method will only work when using Serverless API or Managed Compute endpoint.\nIt will not work for GitHub Models endpoint or Azure OpenAI endpoint.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "508",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "509",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "510",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01-preview"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "511",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "93"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "278"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}",
            "path": "/info",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "Customizations.Client2.getModelInfo",
            "decorators": [],
            "examples": [
              {
                "$id": "512",
                "kind": "http",
                "name": "maximum set model information",
                "description": "maximum set model information",
                "filePath": "2024-05-01-preview/GetModelInfo_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "508"
                    },
                    "value": {
                      "$id": "513",
                      "kind": "string",
                      "type": {
                        "$ref": "509"
                      },
                      "value": "2024-05-01-preview"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "278"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "514",
                      "kind": "model",
                      "type": {
                        "$ref": "278"
                      },
                      "value": {
                        "model_name": {
                          "$id": "515",
                          "kind": "string",
                          "type": {
                            "$ref": "280"
                          },
                          "value": "jno"
                        },
                        "model_type": {
                          "$id": "516",
                          "kind": "string",
                          "type": {
                            "$ref": "28"
                          },
                          "value": "embeddings"
                        },
                        "model_provider_name": {
                          "$id": "517",
                          "kind": "string",
                          "type": {
                            "$ref": "283"
                          },
                          "value": "ulyaphtaszwdkefpbkklnjtrhzh"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "518",
                "kind": "http",
                "name": "minimum set model information",
                "description": "minimum set model information",
                "filePath": "2024-05-01-preview/GetModelInfo_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "508"
                    },
                    "value": {
                      "$id": "519",
                      "kind": "string",
                      "type": {
                        "$ref": "509"
                      },
                      "value": "2024-05-01-preview"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "278"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "520",
                      "kind": "model",
                      "type": {
                        "$ref": "278"
                      },
                      "value": {
                        "model_name": {
                          "$id": "521",
                          "kind": "string",
                          "type": {
                            "$ref": "280"
                          },
                          "value": "jno"
                        },
                        "model_type": {
                          "$id": "522",
                          "kind": "string",
                          "type": {
                            "$ref": "28"
                          },
                          "value": "embeddings"
                        },
                        "model_provider_name": {
                          "$id": "523",
                          "kind": "string",
                          "type": {
                            "$ref": "283"
                          },
                          "value": "ulyaphtaszwdkefpbkklnjtrhzh"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "524",
              "name": "accept",
              "nameInRequest": "accept",
              "type": {
                "$ref": "93"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "278"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "Customizations.Client2.getModelInfo"
        }
      ],
      "parameters": [
        {
          "$id": "525",
          "name": "endpoint",
          "nameInRequest": "endpoint",
          "doc": "Service host",
          "type": {
            "$id": "526",
            "kind": "url",
            "name": "endpoint",
            "crossLanguageDefinitionId": "TypeSpec.url"
          },
          "location": "Uri",
          "isApiVersion": false,
          "isContentType": false,
          "isRequired": true,
          "isEndpoint": true,
          "skipUrlEncoding": false,
          "explode": false,
          "kind": "Client",
          "serverUrlTemplate": "{endpoint}"
        }
      ],
      "decorators": [],
      "crossLanguageDefinitionId": "Customizations.Client2",
      "apiVersions": [
        "2024-05-01-preview"
      ]
    },
    {
      "$id": "527",
      "kind": "client",
      "name": "ImageEmbeddingsClient",
      "namespace": "Azure.AI.Inference",
      "methods": [
        {
          "$id": "528",
          "kind": "basic",
          "name": "embed",
          "accessibility": "internal",
          "apiVersions": [
            "2024-05-01-preview"
          ],
          "doc": "Return the embedding vectors for given images.\nThe method makes a REST API call to the `/images/embeddings` route on the given endpoint.",
          "operation": {
            "$id": "529",
            "name": "embed",
            "resourceName": "Client3",
            "doc": "Return the embedding vectors for given images.\nThe method makes a REST API call to the `/images/embeddings` route on the given endpoint.",
            "accessibility": "internal",
            "parameters": [
              {
                "$id": "530",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "531",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "532",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01-preview"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "533",
                "name": "extra_params",
                "nameInRequest": "extra-parameters",
                "doc": "Controls what happens if extra parameters, undefined by the REST API,\nare passed in the JSON request payload.\nThis sets the HTTP request header `extra-parameters`.",
                "type": {
                  "$ref": "49"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "534",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "95"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "535",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "97"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "536",
                "name": "body",
                "nameInRequest": "body",
                "doc": "The body of the request containing options for image embeddings.",
                "type": {
                  "$ref": "314"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "293"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{endpoint}",
            "path": "/images/embeddings",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "Customizations.Client3.embed",
            "decorators": [],
            "examples": [
              {
                "$id": "537",
                "kind": "http",
                "name": "maximum set image embeddings",
                "description": "maximum set image embeddings",
                "filePath": "2024-05-01-preview/GetImageEmbeddings_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "530"
                    },
                    "value": {
                      "$id": "538",
                      "kind": "string",
                      "type": {
                        "$ref": "531"
                      },
                      "value": "2024-05-01-preview"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "533"
                    },
                    "value": {
                      "$id": "539",
                      "kind": "string",
                      "type": {
                        "$ref": "49"
                      },
                      "value": "error"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "536"
                    },
                    "value": {
                      "$id": "540",
                      "kind": "model",
                      "type": {
                        "$ref": "314"
                      },
                      "value": {
                        "input": {
                          "$id": "541",
                          "kind": "array",
                          "type": {
                            "$ref": "317"
                          },
                          "value": [
                            {
                              "$id": "542",
                              "kind": "model",
                              "type": {
                                "$ref": "318"
                              },
                              "value": {
                                "image": {
                                  "$id": "543",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "320"
                                  },
                                  "value": "puqkvvlvgcjyzughesnkena"
                                },
                                "text": {
                                  "$id": "544",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "322"
                                  },
                                  "value": "azrzyjsmnuefqpowpvfmyobeehqsni"
                                }
                              }
                            }
                          ]
                        },
                        "dimensions": {
                          "$id": "545",
                          "kind": "number",
                          "type": {
                            "$ref": "324"
                          },
                          "value": 26
                        },
                        "encoding_format": {
                          "$id": "546",
                          "kind": "string",
                          "type": {
                            "$ref": "36"
                          },
                          "value": "base64"
                        },
                        "input_type": {
                          "$id": "547",
                          "kind": "string",
                          "type": {
                            "$ref": "44"
                          },
                          "value": "text"
                        },
                        "model": {
                          "$id": "548",
                          "kind": "string",
                          "type": {
                            "$ref": "328"
                          },
                          "value": "jyb"
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "293"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "549",
                      "kind": "model",
                      "type": {
                        "$ref": "293"
                      },
                      "value": {
                        "id": {
                          "$id": "550",
                          "kind": "string",
                          "type": {
                            "$ref": "295"
                          },
                          "value": "cknxthfa"
                        },
                        "data": {
                          "$id": "551",
                          "kind": "array",
                          "type": {
                            "$ref": "297"
                          },
                          "value": [
                            {
                              "$id": "552",
                              "kind": "model",
                              "type": {
                                "$ref": "298"
                              },
                              "value": {
                                "index": {
                                  "$id": "553",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "305"
                                  },
                                  "value": 21
                                }
                              }
                            }
                          ]
                        },
                        "usage": {
                          "$id": "554",
                          "kind": "model",
                          "type": {
                            "$ref": "307"
                          },
                          "value": {
                            "prompt_tokens": {
                              "$id": "555",
                              "kind": "number",
                              "type": {
                                "$ref": "309"
                              },
                              "value": 4
                            },
                            "total_tokens": {
                              "$id": "556",
                              "kind": "number",
                              "type": {
                                "$ref": "311"
                              },
                              "value": 22
                            }
                          }
                        },
                        "model": {
                          "$id": "557",
                          "kind": "string",
                          "type": {
                            "$ref": "313"
                          },
                          "value": "uvrmctbnze"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "558",
                "kind": "http",
                "name": "minimum set image embeddings",
                "description": "minimum set image embeddings",
                "filePath": "2024-05-01-preview/GetImageEmbeddings_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "530"
                    },
                    "value": {
                      "$id": "559",
                      "kind": "string",
                      "type": {
                        "$ref": "531"
                      },
                      "value": "2024-05-01-preview"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "536"
                    },
                    "value": {
                      "$id": "560",
                      "kind": "model",
                      "type": {
                        "$ref": "314"
                      },
                      "value": {
                        "input": {
                          "$id": "561",
                          "kind": "array",
                          "type": {
                            "$ref": "317"
                          },
                          "value": [
                            {
                              "$id": "562",
                              "kind": "model",
                              "type": {
                                "$ref": "318"
                              },
                              "value": {
                                "image": {
                                  "$id": "563",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "320"
                                  },
                                  "value": "gvmojtfooxixxzayrditjlyymg"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "293"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "564",
                      "kind": "model",
                      "type": {
                        "$ref": "293"
                      },
                      "value": {
                        "id": {
                          "$id": "565",
                          "kind": "string",
                          "type": {
                            "$ref": "295"
                          },
                          "value": "kmclubpbyrjjrcihu"
                        },
                        "data": {
                          "$id": "566",
                          "kind": "array",
                          "type": {
                            "$ref": "297"
                          },
                          "value": [
                            {
                              "$id": "567",
                              "kind": "model",
                              "type": {
                                "$ref": "298"
                              },
                              "value": {
                                "embedding": {
                                  "$id": "568",
                                  "kind": "union",
                                  "type": {
                                    "$ref": "300"
                                  },
                                  "value": [
                                    3
                                  ]
                                },
                                "index": {
                                  "$id": "569",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "305"
                                  },
                                  "value": 20
                                }
                              }
                            }
                          ]
                        },
                        "usage": {
                          "$id": "570",
                          "kind": "model",
                          "type": {
                            "$ref": "307"
                          },
                          "value": {
                            "prompt_tokens": {
                              "$id": "571",
                              "kind": "number",
                              "type": {
                                "$ref": "309"
                              },
                              "value": 17
                            },
                            "total_tokens": {
                              "$id": "572",
                              "kind": "number",
                              "type": {
                                "$ref": "311"
                              },
                              "value": 25
                            }
                          }
                        },
                        "model": {
                          "$id": "573",
                          "kind": "string",
                          "type": {
                            "$ref": "313"
                          },
                          "value": "gg"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "574",
              "name": "body",
              "nameInRequest": "body",
              "doc": "The body of the request containing options for image embeddings.",
              "type": {
                "$ref": "314"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "575",
              "name": "extra_params",
              "nameInRequest": "extra-parameters",
              "doc": "Controls what happens if extra parameters, undefined by the REST API,\nare passed in the JSON request payload.\nThis sets the HTTP request header `extra-parameters`.",
              "type": {
                "$ref": "49"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "576",
              "name": "contentType",
              "nameInRequest": "contentType",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "95"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "577",
              "name": "accept",
              "nameInRequest": "accept",
              "type": {
                "$ref": "97"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "293"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "Customizations.Client3.embed"
        },
        {
          "$id": "578",
          "kind": "basic",
          "name": "getModelInfo",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01-preview"
          ],
          "doc": "Returns information about the AI model.\nThe method makes a REST API call to the `/info` route on the given endpoint.\nThis method will only work when using Serverless API or Managed Compute endpoint.\nIt will not work for GitHub Models endpoint or Azure OpenAI endpoint.",
          "operation": {
            "$id": "579",
            "name": "getModelInfo",
            "resourceName": "Client3",
            "doc": "Returns information about the AI model.\nThe method makes a REST API call to the `/info` route on the given endpoint.\nThis method will only work when using Serverless API or Managed Compute endpoint.\nIt will not work for GitHub Models endpoint or Azure OpenAI endpoint.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "580",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "581",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "582",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01-preview"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "583",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "99"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "278"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}",
            "path": "/info",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "Customizations.Client3.getModelInfo",
            "decorators": [],
            "examples": [
              {
                "$id": "584",
                "kind": "http",
                "name": "maximum set model information",
                "description": "maximum set model information",
                "filePath": "2024-05-01-preview/GetModelInfo_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "580"
                    },
                    "value": {
                      "$id": "585",
                      "kind": "string",
                      "type": {
                        "$ref": "581"
                      },
                      "value": "2024-05-01-preview"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "278"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "586",
                      "kind": "model",
                      "type": {
                        "$ref": "278"
                      },
                      "value": {
                        "model_name": {
                          "$id": "587",
                          "kind": "string",
                          "type": {
                            "$ref": "280"
                          },
                          "value": "jno"
                        },
                        "model_type": {
                          "$id": "588",
                          "kind": "string",
                          "type": {
                            "$ref": "28"
                          },
                          "value": "embeddings"
                        },
                        "model_provider_name": {
                          "$id": "589",
                          "kind": "string",
                          "type": {
                            "$ref": "283"
                          },
                          "value": "ulyaphtaszwdkefpbkklnjtrhzh"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "590",
                "kind": "http",
                "name": "minimum set model information",
                "description": "minimum set model information",
                "filePath": "2024-05-01-preview/GetModelInfo_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "580"
                    },
                    "value": {
                      "$id": "591",
                      "kind": "string",
                      "type": {
                        "$ref": "581"
                      },
                      "value": "2024-05-01-preview"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "278"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "592",
                      "kind": "model",
                      "type": {
                        "$ref": "278"
                      },
                      "value": {
                        "model_name": {
                          "$id": "593",
                          "kind": "string",
                          "type": {
                            "$ref": "280"
                          },
                          "value": "jno"
                        },
                        "model_type": {
                          "$id": "594",
                          "kind": "string",
                          "type": {
                            "$ref": "28"
                          },
                          "value": "embeddings"
                        },
                        "model_provider_name": {
                          "$id": "595",
                          "kind": "string",
                          "type": {
                            "$ref": "283"
                          },
                          "value": "ulyaphtaszwdkefpbkklnjtrhzh"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "596",
              "name": "accept",
              "nameInRequest": "accept",
              "type": {
                "$ref": "99"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "278"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "Customizations.Client3.getModelInfo"
        }
      ],
      "parameters": [
        {
          "$id": "597",
          "name": "endpoint",
          "nameInRequest": "endpoint",
          "doc": "Service host",
          "type": {
            "$id": "598",
            "kind": "url",
            "name": "endpoint",
            "crossLanguageDefinitionId": "TypeSpec.url"
          },
          "location": "Uri",
          "isApiVersion": false,
          "isContentType": false,
          "isRequired": true,
          "isEndpoint": true,
          "skipUrlEncoding": false,
          "explode": false,
          "kind": "Client",
          "serverUrlTemplate": "{endpoint}"
        }
      ],
      "decorators": [],
      "crossLanguageDefinitionId": "Customizations.Client3",
      "apiVersions": [
        "2024-05-01-preview"
      ]
    }
  ],
  "auth": {
    "apiKey": {
      "name": "Authorization",
      "in": "header",
      "prefix": "Bearer"
    },
    "oAuth2": {
      "flows": [
        {
          "scopes": [
            "https://ml.azure.com/.default"
          ],
          "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize"
        }
      ]
    }
  }
}
