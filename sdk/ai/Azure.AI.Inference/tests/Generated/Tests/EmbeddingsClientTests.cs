// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Inference.Tests
{
    public partial class EmbeddingsClientTests : AIInferenceTestBase
    {
        public EmbeddingsClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_Embed_MaximumSetEmbeddings()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.EmbedAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_Embed_MaximumSetEmbeddings_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            EmbeddingsOptions embeddingsOptions = null;
            Response<EmbeddingsResult> response = await client.EmbedAsync(embeddingsOptions);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_Embed_MinimumSetEmbeddings()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.EmbedAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_Embed_MinimumSetEmbeddings_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            EmbeddingsOptions embeddingsOptions = null;
            Response<EmbeddingsResult> response = await client.EmbedAsync(embeddingsOptions);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_GetModelInfo_MaximumSetModelInformation()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            Response response = await client.GetModelInfoAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_GetModelInfo_MaximumSetModelInformation_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            Response<ModelInfo> response = await client.GetModelInfoAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_GetModelInfo_MinimumSetModelInformation()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            Response response = await client.GetModelInfoAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Client2_GetModelInfo_MinimumSetModelInformation_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = CreateEmbeddingsClient(endpoint, credential);

            Response<ModelInfo> response = await client.GetModelInfoAsync();
        }
    }
}
