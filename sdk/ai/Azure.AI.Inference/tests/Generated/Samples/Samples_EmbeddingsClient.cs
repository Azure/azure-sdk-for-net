// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Inference.Samples
{
    public partial class Samples_EmbeddingsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_Embed_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                embeddingsOptions = new
                {
                    input = new object[]
            {
"<input>"
            },
                },
            });
            Response response = client.Embed(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("embedding").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("index").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
            Console.WriteLine(result.GetProperty("model").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_Embed_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                embeddingsOptions = new
                {
                    input = new object[]
            {
"<input>"
            },
                },
            });
            Response response = await client.EmbedAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("embedding").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("index").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
            Console.WriteLine(result.GetProperty("model").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_Embed_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            EmbeddingsOptions embeddingsOptions = new EmbeddingsOptions(new string[] { "<input>" });
            Response<EmbeddingsResult> response = client.Embed(embeddingsOptions);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_Embed_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            EmbeddingsOptions embeddingsOptions = new EmbeddingsOptions(new string[] { "<input>" });
            Response<EmbeddingsResult> response = await client.EmbedAsync(embeddingsOptions);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_Embed_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                embeddingsOptions = new
                {
                    input = new object[]
            {
"<input>"
            },
                    dimensions = 1234,
                    encoding_format = "base64",
                    input_type = "text",
                    model = "<model>",
                },
            });
            Response response = client.Embed(content, extraParams: "error");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("embedding").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("index").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
            Console.WriteLine(result.GetProperty("model").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_Embed_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                embeddingsOptions = new
                {
                    input = new object[]
            {
"<input>"
            },
                    dimensions = 1234,
                    encoding_format = "base64",
                    input_type = "text",
                    model = "<model>",
                },
            });
            Response response = await client.EmbedAsync(content, extraParams: "error");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("embedding").ToString());
            Console.WriteLine(result.GetProperty("data")[0].GetProperty("index").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
            Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
            Console.WriteLine(result.GetProperty("model").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_Embed_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            EmbeddingsOptions embeddingsOptions = new EmbeddingsOptions(new string[] { "<input>" })
            {
                Dimensions = 1234,
                EncodingFormat = EmbeddingEncodingFormat.Base64,
                InputType = EmbeddingInputType.Text,
                Model = "<model>",
            };
            Response<EmbeddingsResult> response = client.Embed(embeddingsOptions, extraParams: ExtraParameters.Error);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_Embed_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            EmbeddingsOptions embeddingsOptions = new EmbeddingsOptions(new string[] { "<input>" })
            {
                Dimensions = 1234,
                EncodingFormat = EmbeddingEncodingFormat.Base64,
                InputType = EmbeddingInputType.Text,
                Model = "<model>",
            };
            Response<EmbeddingsResult> response = await client.EmbedAsync(embeddingsOptions, extraParams: ExtraParameters.Error);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_GetModelInfo_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response response = client.GetModelInfo(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("model_name").ToString());
            Console.WriteLine(result.GetProperty("model_type").ToString());
            Console.WriteLine(result.GetProperty("model_provider_name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_GetModelInfo_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response response = await client.GetModelInfoAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("model_name").ToString());
            Console.WriteLine(result.GetProperty("model_type").ToString());
            Console.WriteLine(result.GetProperty("model_provider_name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_GetModelInfo_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response<ModelInfo> response = client.GetModelInfo();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_GetModelInfo_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response<ModelInfo> response = await client.GetModelInfoAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_GetModelInfo_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response response = client.GetModelInfo(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("model_name").ToString());
            Console.WriteLine(result.GetProperty("model_type").ToString());
            Console.WriteLine(result.GetProperty("model_provider_name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_GetModelInfo_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response response = await client.GetModelInfoAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("model_name").ToString());
            Console.WriteLine(result.GetProperty("model_type").ToString());
            Console.WriteLine(result.GetProperty("model_provider_name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Client2_GetModelInfo_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response<ModelInfo> response = client.GetModelInfo();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Client2_GetModelInfo_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            EmbeddingsClient client = new EmbeddingsClient(endpoint, credential);

            Response<ModelInfo> response = await client.GetModelInfoAsync();
        }
    }
}
