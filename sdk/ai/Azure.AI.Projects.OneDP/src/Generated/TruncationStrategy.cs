// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> Describes how to truncate messages if they exceed model or provider limits. </summary>
    public partial class TruncationStrategy
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="TruncationStrategy"/>. </summary>
        /// <param name="type"> The type of truncation strategy to apply. Known values: 'auto', 'lastMessages', or a custom string. </param>
        public TruncationStrategy(TruncationStrategyType type)
        {
            Type = type;
        }

        /// <summary> Initializes a new instance of <see cref="TruncationStrategy"/>. </summary>
        /// <param name="type"> The type of truncation strategy to apply. Known values: 'auto', 'lastMessages', or a custom string. </param>
        /// <param name="lastMessages"> The number of most recent messages to retain when using 'lastMessages' strategy. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal TruncationStrategy(TruncationStrategyType type, int? lastMessages, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Type = type;
            LastMessages = lastMessages;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="TruncationStrategy"/> for deserialization. </summary>
        internal TruncationStrategy()
        {
        }

        /// <summary> The type of truncation strategy to apply. Known values: 'auto', 'lastMessages', or a custom string. </summary>
        public TruncationStrategyType Type { get; set; }
        /// <summary> The number of most recent messages to retain when using 'lastMessages' strategy. </summary>
        public int? LastMessages { get; set; }
    }
}
