// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> A structured chat content item containing plain text. </summary>
    public partial class TextContent : AIContent
    {
        /// <summary> Initializes a new instance of <see cref="TextContent"/>. </summary>
        /// <param name="text"> The text content. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        public TextContent(string text)
        {
            Argument.AssertNotNull(text, nameof(text));

            Type = "text";
            Text = text;
            Annotations = new ChangeTrackingList<Annotations>();
        }

        /// <summary> Initializes a new instance of <see cref="TextContent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="text"> The text content. </param>
        /// <param name="annotations"> A list of annotations in the text content. </param>
        internal TextContent(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string text, IList<Annotations> annotations) : base(type, serializedAdditionalRawData)
        {
            Text = text;
            Annotations = annotations;
        }

        /// <summary> Initializes a new instance of <see cref="TextContent"/> for deserialization. </summary>
        internal TextContent()
        {
        }

        /// <summary> The text content. </summary>
        public string Text { get; set; }
        /// <summary> A list of annotations in the text content. </summary>
        public IList<Annotations> Annotations { get; }
    }
}
