// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> A structured chat content item containing a content filter. </summary>
    public partial class ContentFilterContent : AIContent
    {
        /// <summary> Initializes a new instance of <see cref="ContentFilterContent"/>. </summary>
        /// <param name="contentFilter"> Content filter data. </param>
        /// <param name="detected"> Whether content was flagged/detected. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="contentFilter"/> is null. </exception>
        public ContentFilterContent(string contentFilter, bool detected)
        {
            Argument.AssertNotNull(contentFilter, nameof(contentFilter));

            Type = "contentFilter";
            ContentFilter = contentFilter;
            Detected = detected;
        }

        /// <summary> Initializes a new instance of <see cref="ContentFilterContent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="contentFilter"> Content filter data. </param>
        /// <param name="detected"> Whether content was flagged/detected. </param>
        internal ContentFilterContent(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string contentFilter, bool detected) : base(type, serializedAdditionalRawData)
        {
            ContentFilter = contentFilter;
            Detected = detected;
        }

        /// <summary> Initializes a new instance of <see cref="ContentFilterContent"/> for deserialization. </summary>
        internal ContentFilterContent()
        {
        }

        /// <summary> Content filter data. </summary>
        public string ContentFilter { get; set; }
        /// <summary> Whether content was flagged/detected. </summary>
        public bool Detected { get; set; }
    }
}
