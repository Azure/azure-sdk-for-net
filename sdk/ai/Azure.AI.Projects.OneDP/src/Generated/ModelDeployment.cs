// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> Model Deployment Definition. </summary>
    public partial class ModelDeployment : Deployment
    {
        /// <summary> Initializes a new instance of <see cref="ModelDeployment"/>. </summary>
        internal ModelDeployment()
        {
            Type = DeploymentType.ModelDeployment;
            Capabilities = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ModelDeployment"/>. </summary>
        /// <param name="type"> The type of the deployment. </param>
        /// <param name="name"> Name of the deployment. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="modelName"> Publisher-specific name of the deployed model. </param>
        /// <param name="modelVersion"> Publisher-specific version of the deployed model. </param>
        /// <param name="modelPublisher"> Name of the deployed model's publisher. </param>
        /// <param name="capabilities"> Capabilities of deployed model. </param>
        /// <param name="sku"> Sku of the model deployment. </param>
        /// <param name="connectionName"> Name of the connection the deployment comes from. </param>
        internal ModelDeployment(DeploymentType type, string name, IDictionary<string, BinaryData> serializedAdditionalRawData, string modelName, string modelVersion, string modelPublisher, IReadOnlyDictionary<string, string> capabilities, Sku sku, string connectionName) : base(type, name, serializedAdditionalRawData)
        {
            ModelName = modelName;
            ModelVersion = modelVersion;
            ModelPublisher = modelPublisher;
            Capabilities = capabilities;
            Sku = sku;
            ConnectionName = connectionName;
        }

        /// <summary> Publisher-specific name of the deployed model. </summary>
        public string ModelName { get; }
        /// <summary> Publisher-specific version of the deployed model. </summary>
        public string ModelVersion { get; }
        /// <summary> Name of the deployed model's publisher. </summary>
        public string ModelPublisher { get; }
        /// <summary> Capabilities of deployed model. </summary>
        public IReadOnlyDictionary<string, string> Capabilities { get; }
        /// <summary> Sku of the model deployment. </summary>
        public Sku Sku { get; }
        /// <summary> Name of the connection the deployment comes from. </summary>
        public string ConnectionName { get; }
    }
}
