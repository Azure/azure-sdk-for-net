// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> Possible roles of the message author. </summary>
    internal readonly partial struct AuthorRole : IEquatable<AuthorRole>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AuthorRole"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AuthorRole(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UserValue = "user";
        private const string AgentValue = "agent";
        private const string SystemValue = "system";
        private const string ToolValue = "tool";
        private const string DeveloperValue = "developer";

        /// <summary> user. </summary>
        public static AuthorRole User { get; } = new AuthorRole(UserValue);
        /// <summary> agent. </summary>
        public static AuthorRole Agent { get; } = new AuthorRole(AgentValue);
        /// <summary> system. </summary>
        public static AuthorRole System { get; } = new AuthorRole(SystemValue);
        /// <summary> tool. </summary>
        public static AuthorRole Tool { get; } = new AuthorRole(ToolValue);
        /// <summary> developer. </summary>
        public static AuthorRole Developer { get; } = new AuthorRole(DeveloperValue);
        /// <summary> Determines if two <see cref="AuthorRole"/> values are the same. </summary>
        public static bool operator ==(AuthorRole left, AuthorRole right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AuthorRole"/> values are not the same. </summary>
        public static bool operator !=(AuthorRole left, AuthorRole right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AuthorRole"/>. </summary>
        public static implicit operator AuthorRole(string value) => new AuthorRole(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AuthorRole other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AuthorRole other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
