<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetRunInputsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetRunInputsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response<RunInputs> response = await client.GetRunInputsAsync("<runId>");
]]></code>
This sample shows how to call GetRunInputsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response<RunInputs> response = await client.GetRunInputsAsync("<runId>");
]]></code></example>
    </member>
    <member name="GetRunInputs(string,CancellationToken)">
      <example>
This sample shows how to call GetRunInputs.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response<RunInputs> response = client.GetRunInputs("<runId>");
]]></code>
This sample shows how to call GetRunInputs with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response<RunInputs> response = client.GetRunInputs("<runId>");
]]></code></example>
    </member>
    <member name="GetRunInputsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetRunInputsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response response = await client.GetRunInputsAsync("<runId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("input")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("conversationId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("role").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("content")[0].GetProperty("type").ToString());
]]></code>
This sample shows how to call GetRunInputsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response response = await client.GetRunInputsAsync("<runId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("agentId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("agentId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("agentRunId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("conversationId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("role").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("content")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("authorName").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("conversationId").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("options").GetProperty("truncationStrategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("options").GetProperty("truncationStrategy").GetProperty("lastMessages").ToString());
Console.WriteLine(result.GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("provider").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("endpoint").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("stringValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("intValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("floatValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("boolValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("nullValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("options").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("parameters").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("parameters").GetProperty("required")[0].ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("toolChoice").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="GetRunInputs(string,RequestContext)">
      <example>
This sample shows how to call GetRunInputs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response response = client.GetRunInputs("<runId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("input")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("conversationId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("role").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("content")[0].GetProperty("type").ToString());
]]></code>
This sample shows how to call GetRunInputs with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
Runs client = new AIProjectClient(endpoint, credential).GetRunsClient(apiVersion: "2025-05-01-preview");

Response response = client.GetRunInputs("<runId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("agentId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("agentId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("agentRunId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("conversationId").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("role").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("content")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("authorName").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("input")[0].GetProperty("completedAt").ToString());
Console.WriteLine(result.GetProperty("conversationId").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("options").GetProperty("truncationStrategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("options").GetProperty("truncationStrategy").GetProperty("lastMessages").ToString());
Console.WriteLine(result.GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("provider").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("endpoint").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("stringValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("intValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("floatValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("boolValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("agentModel").GetProperty("options").GetProperty("nullValue").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("options").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("parameters").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("tools")[0].GetProperty("override").GetProperty("parameters").GetProperty("required")[0].ToString());
Console.WriteLine(result.GetProperty("agentConfiguration").GetProperty("toolChoice").GetProperty("type").ToString());
]]></code></example>
    </member>
  </members>
</doc>