<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetRedTeamAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetRedTeamAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response<RedTeam> response = await client.GetRedTeamAsync("<name>");
]]></code>
This sample shows how to call GetRedTeamAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response<RedTeam> response = await client.GetRedTeamAsync("<name>");
]]></code></example>
    </member>
    <member name="GetRedTeam(string,CancellationToken)">
      <example>
This sample shows how to call GetRedTeam.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response<RedTeam> response = client.GetRedTeam("<name>");
]]></code>
This sample shows how to call GetRedTeam with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response<RedTeam> response = client.GetRedTeam("<name>");
]]></code></example>
    </member>
    <member name="GetRedTeamAsync(string,RequestContext)">
      <example>
This sample shows how to call GetRedTeamAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response response = await client.GetRedTeamAsync("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
]]></code>
This sample shows how to call GetRedTeamAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response response = await client.GetRedTeamAsync("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
Console.WriteLine(result.GetProperty("applicationScenario").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetRedTeam(string,RequestContext)">
      <example>
This sample shows how to call GetRedTeam and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response response = client.GetRedTeam("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
]]></code>
This sample shows how to call GetRedTeam with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response response = client.GetRedTeam("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
Console.WriteLine(result.GetProperty("applicationScenario").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="CreateRunAsync(RedTeam,CancellationToken)">
      <example>
This sample shows how to call CreateRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam("<scanName>", 1234, new AttackStrategy[] { AttackStrategy.Easy }, true, new RiskCategory[] { RiskCategory.HateUnfairness });
Response<RedTeam> response = await client.CreateRunAsync(redTeam);
]]></code>
This sample shows how to call CreateRunAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam("<scanName>", 1234, new AttackStrategy[] { AttackStrategy.Easy }, true, new RiskCategory[] { RiskCategory.HateUnfairness })
{
    ApplicationScenario = "<applicationScenario>",
    Tags =
    {
        ["key"] = "<tags>"
    },
    Properties =
    {
        ["key"] = "<properties>"
    },
};
Response<RedTeam> response = await client.CreateRunAsync(redTeam);
]]></code></example>
    </member>
    <member name="CreateRun(RedTeam,CancellationToken)">
      <example>
This sample shows how to call CreateRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam("<scanName>", 1234, new AttackStrategy[] { AttackStrategy.Easy }, true, new RiskCategory[] { RiskCategory.HateUnfairness });
Response<RedTeam> response = client.CreateRun(redTeam);
]]></code>
This sample shows how to call CreateRun with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam("<scanName>", 1234, new AttackStrategy[] { AttackStrategy.Easy }, true, new RiskCategory[] { RiskCategory.HateUnfairness })
{
    ApplicationScenario = "<applicationScenario>",
    Tags =
    {
        ["key"] = "<tags>"
    },
    Properties =
    {
        ["key"] = "<properties>"
    },
};
Response<RedTeam> response = client.CreateRun(redTeam);
]]></code></example>
    </member>
    <member name="CreateRunAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    scanName = "<scanName>",
    numTurns = 1234,
    attackStrategy = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
});
Response response = await client.CreateRunAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
]]></code>
This sample shows how to call CreateRunAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    scanName = "<scanName>",
    numTurns = 1234,
    attackStrategy = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
    applicationScenario = "<applicationScenario>",
    tags = new
    {
        key = "<tags>",
    },
    properties = new
    {
        key = "<properties>",
    },
});
Response response = await client.CreateRunAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
Console.WriteLine(result.GetProperty("applicationScenario").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="CreateRun(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    scanName = "<scanName>",
    numTurns = 1234,
    attackStrategy = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
});
Response response = client.CreateRun(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
]]></code>
This sample shows how to call CreateRun with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    scanName = "<scanName>",
    numTurns = 1234,
    attackStrategy = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
    applicationScenario = "<applicationScenario>",
    tags = new
    {
        key = "<tags>",
    },
    properties = new
    {
        key = "<properties>",
    },
});
Response response = client.CreateRun(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanName").ToString());
Console.WriteLine(result.GetProperty("numTurns").ToString());
Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
Console.WriteLine(result.GetProperty("simulationOnly").ToString());
Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
Console.WriteLine(result.GetProperty("applicationScenario").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetRedTeamsAsync(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRedTeamsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

await foreach (RedTeam item in client.GetRedTeamsAsync())
{
}
]]></code>
This sample shows how to call GetRedTeamsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

await foreach (RedTeam item in client.GetRedTeamsAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetRedTeams(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetRedTeams.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

foreach (RedTeam item in client.GetRedTeams())
{
}
]]></code>
This sample shows how to call GetRedTeams with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

foreach (RedTeam item in client.GetRedTeams(maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetRedTeamsAsync(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRedTeamsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetRedTeamsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("scanName").ToString());
    Console.WriteLine(result.GetProperty("numTurns").ToString());
    Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
    Console.WriteLine(result.GetProperty("simulationOnly").ToString());
    Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
}
]]></code>
This sample shows how to call GetRedTeamsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetRedTeamsAsync(1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("scanName").ToString());
    Console.WriteLine(result.GetProperty("numTurns").ToString());
    Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
    Console.WriteLine(result.GetProperty("simulationOnly").ToString());
    Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
    Console.WriteLine(result.GetProperty("applicationScenario").ToString());
    Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="GetRedTeams(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetRedTeams and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetRedTeams(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("scanName").ToString());
    Console.WriteLine(result.GetProperty("numTurns").ToString());
    Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
    Console.WriteLine(result.GetProperty("simulationOnly").ToString());
    Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
}
]]></code>
This sample shows how to call GetRedTeams with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetRedTeams(1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("scanName").ToString());
    Console.WriteLine(result.GetProperty("numTurns").ToString());
    Console.WriteLine(result.GetProperty("attackStrategy")[0].ToString());
    Console.WriteLine(result.GetProperty("simulationOnly").ToString());
    Console.WriteLine(result.GetProperty("riskCategories")[0].ToString());
    Console.WriteLine(result.GetProperty("applicationScenario").ToString());
    Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>