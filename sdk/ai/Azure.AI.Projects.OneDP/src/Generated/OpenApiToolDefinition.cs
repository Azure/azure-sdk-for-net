// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> A tool definition for an OpenAI-based API described by an OpenAPI specification. </summary>
    public partial class OpenApiToolDefinition : AgentToolDefinition
    {
        /// <summary> Initializes a new instance of <see cref="OpenApiToolDefinition"/>. </summary>
        /// <param name="name"> The name of the OpenAPI-based tool. </param>
        /// <param name="openApiSpec"> A string containing the raw OpenAPI specification data. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="openApiSpec"/> is null. </exception>
        public OpenApiToolDefinition(string name, string openApiSpec)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(openApiSpec, nameof(openApiSpec));

            Type = "OpenAI.OpenApi";
            Name = name;
            OpenApiSpec = openApiSpec;
        }

        /// <summary> Initializes a new instance of <see cref="OpenApiToolDefinition"/>. </summary>
        /// <param name="type"> Discriminates the various child 'tool definition' types. </param>
        /// <param name="options">
        /// Additional options that specify the behavior of this tool (also polymorphic).
        /// Please note <see cref="AgentToolOptions"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="FunctionToolOptions"/>.
        /// </param>
        /// <param name="override"> A set of overrides for the tool's name, description, or parameters. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="name"> The name of the OpenAPI-based tool. </param>
        /// <param name="description"> A description for the tool. </param>
        /// <param name="openApiSpec"> A string containing the raw OpenAPI specification data. </param>
        internal OpenApiToolDefinition(string type, AgentToolOptions options, AgentToolDefinitionOverride @override, IDictionary<string, BinaryData> serializedAdditionalRawData, string name, string description, string openApiSpec) : base(type, options, @override, serializedAdditionalRawData)
        {
            Name = name;
            Description = description;
            OpenApiSpec = openApiSpec;
        }

        /// <summary> Initializes a new instance of <see cref="OpenApiToolDefinition"/> for deserialization. </summary>
        internal OpenApiToolDefinition()
        {
        }

        /// <summary> The name of the OpenAPI-based tool. </summary>
        public string Name { get; set; }
        /// <summary> A description for the tool. </summary>
        public string Description { get; set; }
        /// <summary> A string containing the raw OpenAPI specification data. </summary>
        public string OpenApiSpec { get; set; }
    }
}
