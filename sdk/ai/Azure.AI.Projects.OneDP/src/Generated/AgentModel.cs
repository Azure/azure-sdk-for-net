// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary>
    /// Represents the model or provider-specific data used by the agent.
    /// Please note <see cref="AgentModel"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="AzureAgentModel"/> and <see cref="OpenAIAgentModel"/>.
    /// </summary>
    public abstract partial class AgentModel
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private protected IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AgentModel"/>. </summary>
        /// <param name="id"> A unique model or deployment ID for this agent model. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        protected AgentModel(string id)
        {
            Argument.AssertNotNull(id, nameof(id));

            Id = id;
        }

        /// <summary> Initializes a new instance of <see cref="AgentModel"/>. </summary>
        /// <param name="id"> A unique model or deployment ID for this agent model. </param>
        /// <param name="provider"> The name of the provider for this model (e.g., 'openai'). </param>
        /// <param name="endpoint"> An endpoint where the provider can be reached, if applicable. </param>
        /// <param name="options"> Provider-specific configuration and options (JSON-like structure). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AgentModel(string id, string provider, string endpoint, JSONAny options, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            Provider = provider;
            Endpoint = endpoint;
            Options = options;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AgentModel"/> for deserialization. </summary>
        internal AgentModel()
        {
        }

        /// <summary> A unique model or deployment ID for this agent model. </summary>
        public string Id { get; set; }
        /// <summary> The name of the provider for this model (e.g., 'openai'). </summary>
        internal string Provider { get; set; }
        /// <summary> An endpoint where the provider can be reached, if applicable. </summary>
        public string Endpoint { get; set; }
        /// <summary> Provider-specific configuration and options (JSON-like structure). </summary>
        public JSONAny Options { get; set; }
    }
}
