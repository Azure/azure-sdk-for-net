// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> Behavior specifying that the agent must always use the listed tools. </summary>
    public partial class RequiredToolChoiceBehavior : ToolChoiceBehavior
    {
        /// <summary> Initializes a new instance of <see cref="RequiredToolChoiceBehavior"/>. </summary>
        /// <param name="toolNames"> The tool names that the agent must use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="toolNames"/> is null. </exception>
        public RequiredToolChoiceBehavior(IEnumerable<string> toolNames)
        {
            Argument.AssertNotNull(toolNames, nameof(toolNames));

            Type = "required";
            ToolNames = toolNames.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="RequiredToolChoiceBehavior"/>. </summary>
        /// <param name="type"> The kind of tool-choice strategy. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="toolNames"> The tool names that the agent must use. </param>
        internal RequiredToolChoiceBehavior(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<string> toolNames) : base(type, serializedAdditionalRawData)
        {
            ToolNames = toolNames;
        }

        /// <summary> Initializes a new instance of <see cref="RequiredToolChoiceBehavior"/> for deserialization. </summary>
        internal RequiredToolChoiceBehavior()
        {
        }

        /// <summary> The tool names that the agent must use. </summary>
        public IList<string> ToolNames { get; }
    }
}
