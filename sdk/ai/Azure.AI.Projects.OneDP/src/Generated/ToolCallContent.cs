// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects.OneDP
{
    /// <summary> A structured chat content item describing a tool call request. </summary>
    public partial class ToolCallContent : AIContent
    {
        /// <summary> Initializes a new instance of <see cref="ToolCallContent"/>. </summary>
        /// <param name="name"> The name of the tool to call. </param>
        /// <param name="toolCallId"> The unique ID of the tool call. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="toolCallId"/> is null. </exception>
        public ToolCallContent(string name, string toolCallId)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(toolCallId, nameof(toolCallId));

            Type = "toolCall";
            Name = name;
            ToolCallId = toolCallId;
        }

        /// <summary> Initializes a new instance of <see cref="ToolCallContent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="name"> The name of the tool to call. </param>
        /// <param name="toolCallId"> The unique ID of the tool call. </param>
        /// <param name="arguments"> Arguments passed to this tool call, expressed as JSON-like data rather than `unknown`. </param>
        internal ToolCallContent(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string name, string toolCallId, JSONAny arguments) : base(type, serializedAdditionalRawData)
        {
            Name = name;
            ToolCallId = toolCallId;
            Arguments = arguments;
        }

        /// <summary> Initializes a new instance of <see cref="ToolCallContent"/> for deserialization. </summary>
        internal ToolCallContent()
        {
        }

        /// <summary> The name of the tool to call. </summary>
        public string Name { get; set; }
        /// <summary> The unique ID of the tool call. </summary>
        public string ToolCallId { get; set; }
        /// <summary> Arguments passed to this tool call, expressed as JSON-like data rather than `unknown`. </summary>
        public JSONAny Arguments { get; set; }
    }
}
