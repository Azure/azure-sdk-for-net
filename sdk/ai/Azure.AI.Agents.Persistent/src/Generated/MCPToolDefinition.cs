// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Agents.Persistent
{
    /// <summary> The input definition information for a MCP tool which defines a MCP server endpoint. </summary>
    public partial class MCPToolDefinition : ToolDefinition
    {
        /// <summary> Initializes a new instance of <see cref="MCPToolDefinition"/>. </summary>
        /// <param name="serverLabel"> The label for the MCP server. </param>
        /// <param name="serverUrl"> The endpoint for the MCP server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serverLabel"/> or <paramref name="serverUrl"/> is null. </exception>
        public MCPToolDefinition(string serverLabel, string serverUrl)
        {
            Argument.AssertNotNull(serverLabel, nameof(serverLabel));
            Argument.AssertNotNull(serverUrl, nameof(serverUrl));

            Type = "mcp";
            ServerLabel = serverLabel;
            ServerUrl = serverUrl;
            AllowedTools = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="MCPToolDefinition"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="serverLabel"> The label for the MCP server. </param>
        /// <param name="serverUrl"> The endpoint for the MCP server. </param>
        /// <param name="allowedTools"> List of allowed tools for MCP server. </param>
        internal MCPToolDefinition(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string serverLabel, string serverUrl, IList<string> allowedTools) : base(type, serializedAdditionalRawData)
        {
            ServerLabel = serverLabel;
            ServerUrl = serverUrl;
            AllowedTools = allowedTools;
        }

        /// <summary> Initializes a new instance of <see cref="MCPToolDefinition"/> for deserialization. </summary>
        internal MCPToolDefinition()
        {
        }

        /// <summary> The label for the MCP server. </summary>
        public string ServerLabel { get; set; }
        /// <summary> The endpoint for the MCP server. </summary>
        public string ServerUrl { get; set; }
        /// <summary> List of allowed tools for MCP server. </summary>
        public IList<string> AllowedTools { get; }
    }
}
