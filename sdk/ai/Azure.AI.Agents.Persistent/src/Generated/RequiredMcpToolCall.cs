// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Agents.Persistent
{
    /// <summary> A representation of a requested call to a MCP tool, needed by the model to continue evaluation of a run. </summary>
    public partial class RequiredMcpToolCall : RequiredToolCall
    {
        /// <summary> Initializes a new instance of <see cref="RequiredMcpToolCall"/>. </summary>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when submitting tool outputs. </param>
        /// <param name="arguments"> The arguments to use when invoking the mcp tool, as provided by the model. Arguments are presented as a JSON document that should be validated and parsed for evaluation. </param>
        /// <param name="name"> The name of the function used on the MCP server. </param>
        /// <param name="serverLabel"> The label of the MCP server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="arguments"/>, <paramref name="name"/> or <paramref name="serverLabel"/> is null. </exception>
        internal RequiredMcpToolCall(string id, string arguments, string name, string serverLabel) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(arguments, nameof(arguments));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(serverLabel, nameof(serverLabel));

            Arguments = arguments;
            Name = name;
            ServerLabel = serverLabel;
        }

        /// <summary> Initializes a new instance of <see cref="RequiredMcpToolCall"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when submitting tool outputs. </param>
        /// <param name="arguments"> The arguments to use when invoking the mcp tool, as provided by the model. Arguments are presented as a JSON document that should be validated and parsed for evaluation. </param>
        /// <param name="name"> The name of the function used on the MCP server. </param>
        /// <param name="serverLabel"> The label of the MCP server. </param>
        internal RequiredMcpToolCall(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string id, string arguments, string name, string serverLabel) : base(type, serializedAdditionalRawData, id)
        {
            Arguments = arguments;
            Name = name;
            ServerLabel = serverLabel;
        }

        /// <summary> Initializes a new instance of <see cref="RequiredMcpToolCall"/> for deserialization. </summary>
        internal RequiredMcpToolCall()
        {
        }

        /// <summary> The arguments to use when invoking the mcp tool, as provided by the model. Arguments are presented as a JSON document that should be validated and parsed for evaluation. </summary>
        public string Arguments { get; }
        /// <summary> The name of the function used on the MCP server. </summary>
        public string Name { get; }
        /// <summary> The label of the MCP server. </summary>
        public string ServerLabel { get; }
    }
}
