// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Agents.Persistent
{
    /// <summary> A AI Search Index resource. </summary>
    public partial class AISearchIndexResource
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AISearchIndexResource"/>. </summary>
        public AISearchIndexResource()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AISearchIndexResource"/>. </summary>
        /// <param name="indexConnectionId"> An index connection id in an IndexResource attached to this agent. </param>
        /// <param name="indexName"> The name of an index in an IndexResource attached to this agent. </param>
        /// <param name="queryType"> Type of query in an AIIndexResource attached to this agent. </param>
        /// <param name="topK"> Number of documents to retrieve from search and present to the model. </param>
        /// <param name="filter"> filter string for search resource. </param>
        /// <param name="indexAssetId"> Index asset id for search resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AISearchIndexResource(string indexConnectionId, string indexName, AzureAISearchQueryType? queryType, int? topK, string filter, string indexAssetId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            IndexConnectionId = indexConnectionId;
            IndexName = indexName;
            QueryType = queryType;
            TopK = topK;
            Filter = filter;
            IndexAssetId = indexAssetId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }
        /// <summary> Type of query in an AIIndexResource attached to this agent. </summary>
        public AzureAISearchQueryType? QueryType { get; set; }
    }
}
