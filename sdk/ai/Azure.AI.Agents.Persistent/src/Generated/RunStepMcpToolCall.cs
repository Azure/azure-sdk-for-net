// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Agents.Persistent
{
    /// <summary>
    /// A record of a call to a MCP tool, issued by the model in evaluation of a defined tool, that represents
    /// executed MCP actions.
    /// </summary>
    public partial class RunStepMcpToolCall : RunStepToolCall
    {
        /// <summary> Initializes a new instance of <see cref="RunStepMcpToolCall"/>. </summary>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when you submit tool outputs. </param>
        /// <param name="arguments"> Arguments to the MCP tool call, as provided by the model. Arguments are presented as a JSON document that should be validated and parsed for evaluation. </param>
        /// <param name="name"> Name of the function used on the MCP server. </param>
        /// <param name="output"> Output of the MCP tool call. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="arguments"/>, <paramref name="name"/> or <paramref name="output"/> is null. </exception>
        internal RunStepMcpToolCall(string id, string arguments, string name, string output) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(arguments, nameof(arguments));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(output, nameof(output));

            Type = "mcp";
            Arguments = arguments;
            Name = name;
            Output = output;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepMcpToolCall"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when you submit tool outputs. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="arguments"> Arguments to the MCP tool call, as provided by the model. Arguments are presented as a JSON document that should be validated and parsed for evaluation. </param>
        /// <param name="name"> Name of the function used on the MCP server. </param>
        /// <param name="output"> Output of the MCP tool call. </param>
        /// <param name="serverLabel"> The label for the MCP server. </param>
        internal RunStepMcpToolCall(string type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, string arguments, string name, string output, string serverLabel) : base(type, id, serializedAdditionalRawData)
        {
            Arguments = arguments;
            Name = name;
            Output = output;
            ServerLabel = serverLabel;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepMcpToolCall"/> for deserialization. </summary>
        internal RunStepMcpToolCall()
        {
        }

        /// <summary> Arguments to the MCP tool call, as provided by the model. Arguments are presented as a JSON document that should be validated and parsed for evaluation. </summary>
        public string Arguments { get; }
        /// <summary> Name of the function used on the MCP server. </summary>
        public string Name { get; }
        /// <summary> Output of the MCP tool call. </summary>
        public string Output { get; }
        /// <summary> The label for the MCP server. </summary>
        public string ServerLabel { get; }
    }
}
