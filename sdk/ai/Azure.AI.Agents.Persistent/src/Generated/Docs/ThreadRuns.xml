<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateRunAsync(string,string,string,string,string,IEnumerable{ThreadMessageOptions},IEnumerable{ToolDefinition},bool?,float?,float?,int?,int?,Truncation,BinaryData,BinaryData,bool?,IReadOnlyDictionary{string,string},IEnumerable{RunAdditionalFieldList},CancellationToken)">
      <example>
This sample shows how to call CreateRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = await client.CreateRunAsync("hhkihlfdkkrjn", "jsgtmtrsdyptblawced");
]]></code></example>
    </member>
    <member name="CreateRun(string,string,string,string,string,IEnumerable{ThreadMessageOptions},IEnumerable{ToolDefinition},bool?,float?,float?,int?,int?,Truncation,BinaryData,BinaryData,bool?,IReadOnlyDictionary{string,string},IEnumerable{RunAdditionalFieldList},CancellationToken)">
      <example>
This sample shows how to call CreateRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = client.CreateRun("hhkihlfdkkrjn", "jsgtmtrsdyptblawced");
]]></code></example>
    </member>
    <member name="CreateRunAsync(string,RequestContent,IEnumerable{RunAdditionalFieldList},RequestContext)">
      <example>
This sample shows how to call CreateRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

using RequestContent content = RequestContent.Create(new
{
    assistant_id = "jsgtmtrsdyptblawced",
    model = "yefdnxmqfpqutszahxptiqgatxohu",
    instructions = "jdhepydeilwuqxwgxliiiekqdbt",
    additional_instructions = "oyacdunpwfbtz",
    additional_messages = new object[]
    {
        new
        {
            role = "user",
            attachments = new object[]
            {
                new
                {
                    file_id = "uslxhectlaptpkjcxnjzhkzprso",
                    data_source = new
                    {
                        uri = "soctjzrqyjyxixlqr",
                        type = "uri_asset",
                    },
                    tools = Array.Empty<object>(),
                }
            },
            metadata = new
            {
                key3153 = "qn",
            },
        }
    },
    tools = Array.Empty<object>(),
    stream = true,
    temperature = 8F,
    top_p = 3F,
    max_prompt_tokens = 21,
    max_completion_tokens = 12,
    truncation_strategy = new
    {
        type = "auto",
        last_messages = 6,
    },
    parallel_tool_calls = true,
    metadata = new
    {
        key5117 = "vfjqhklfxpyyojenxqnitzynwpqt",
    },
});
Response response = await client.CreateRunAsync("hhkihlfdkkrjn", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="CreateRun(string,RequestContent,IEnumerable{RunAdditionalFieldList},RequestContext)">
      <example>
This sample shows how to call CreateRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

using RequestContent content = RequestContent.Create(new
{
    assistant_id = "jsgtmtrsdyptblawced",
    model = "yefdnxmqfpqutszahxptiqgatxohu",
    instructions = "jdhepydeilwuqxwgxliiiekqdbt",
    additional_instructions = "oyacdunpwfbtz",
    additional_messages = new object[]
    {
        new
        {
            role = "user",
            attachments = new object[]
            {
                new
                {
                    file_id = "uslxhectlaptpkjcxnjzhkzprso",
                    data_source = new
                    {
                        uri = "soctjzrqyjyxixlqr",
                        type = "uri_asset",
                    },
                    tools = Array.Empty<object>(),
                }
            },
            metadata = new
            {
                key3153 = "qn",
            },
        }
    },
    tools = Array.Empty<object>(),
    stream = true,
    temperature = 8F,
    top_p = 3F,
    max_prompt_tokens = 21,
    max_completion_tokens = 12,
    truncation_strategy = new
    {
        type = "auto",
        last_messages = 6,
    },
    parallel_tool_calls = true,
    metadata = new
    {
        key5117 = "vfjqhklfxpyyojenxqnitzynwpqt",
    },
});
Response response = client.CreateRun("hhkihlfdkkrjn", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="GetRunAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = await client.GetRunAsync("sqccjmfw", "acsobiqvtzctqgmfilzbouk");
]]></code></example>
    </member>
    <member name="GetRun(string,string,CancellationToken)">
      <example>
This sample shows how to call GetRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = client.GetRun("sqccjmfw", "acsobiqvtzctqgmfilzbouk");
]]></code></example>
    </member>
    <member name="GetRunAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response response = await client.GetRunAsync("sqccjmfw", "acsobiqvtzctqgmfilzbouk", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="GetRun(string,string,RequestContext)">
      <example>
This sample shows how to call GetRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response response = client.GetRun("sqccjmfw", "acsobiqvtzctqgmfilzbouk", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="UpdateRunAsync(string,string,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call UpdateRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = await client.UpdateRunAsync("wnookprnxkufoddul", "aifrevvhqlpbxsdkflwkzpdlyewggr");
]]></code></example>
    </member>
    <member name="UpdateRun(string,string,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call UpdateRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = client.UpdateRun("wnookprnxkufoddul", "aifrevvhqlpbxsdkflwkzpdlyewggr");
]]></code></example>
    </member>
    <member name="UpdateRunAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

using RequestContent content = RequestContent.Create(new
{
    metadata = new
    {
        key5657 = "pzozpdyzydhspttzavjorh",
    },
});
Response response = await client.UpdateRunAsync("wnookprnxkufoddul", "aifrevvhqlpbxsdkflwkzpdlyewggr", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="UpdateRun(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

using RequestContent content = RequestContent.Create(new
{
    metadata = new
    {
        key5657 = "pzozpdyzydhspttzavjorh",
    },
});
Response response = client.UpdateRun("wnookprnxkufoddul", "aifrevvhqlpbxsdkflwkzpdlyewggr", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="SubmitToolOutputsToRunAsync(string,string,IEnumerable{ToolOutput},bool?,CancellationToken)">
      <example>
This sample shows how to call SubmitToolOutputsToRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = await client.SubmitToolOutputsToRunAsync("fponkaqg", "qt", new ToolOutput[]
{
    new ToolOutput
    {
        ToolCallId = "jccizgl",
        Output = "tfpajqwuaghahhyzmn",
    }
});
]]></code></example>
    </member>
    <member name="SubmitToolOutputsToRun(string,string,IEnumerable{ToolOutput},bool?,CancellationToken)">
      <example>
This sample shows how to call SubmitToolOutputsToRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = client.SubmitToolOutputsToRun("fponkaqg", "qt", new ToolOutput[]
{
    new ToolOutput
    {
        ToolCallId = "jccizgl",
        Output = "tfpajqwuaghahhyzmn",
    }
});
]]></code></example>
    </member>
    <member name="SubmitToolOutputsToRunAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SubmitToolOutputsToRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

using RequestContent content = RequestContent.Create(new
{
    tool_outputs = new object[]
    {
        new
        {
            tool_call_id = "jccizgl",
            output = "tfpajqwuaghahhyzmn",
        }
    },
    stream = true,
});
Response response = await client.SubmitToolOutputsToRunAsync("fponkaqg", "qt", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="SubmitToolOutputsToRun(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SubmitToolOutputsToRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

using RequestContent content = RequestContent.Create(new
{
    tool_outputs = new object[]
    {
        new
        {
            tool_call_id = "jccizgl",
            output = "tfpajqwuaghahhyzmn",
        }
    },
    stream = true,
});
Response response = client.SubmitToolOutputsToRun("fponkaqg", "qt", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="CancelRunAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call CancelRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = await client.CancelRunAsync("cfgrrkaqlomzywojd", "dgpclan");
]]></code></example>
    </member>
    <member name="CancelRun(string,string,CancellationToken)">
      <example>
This sample shows how to call CancelRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response<ThreadRun> response = client.CancelRun("cfgrrkaqlomzywojd", "dgpclan");
]]></code></example>
    </member>
    <member name="CancelRunAsync(string,string,RequestContext)">
      <example>
This sample shows how to call CancelRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response response = await client.CancelRunAsync("cfgrrkaqlomzywojd", "dgpclan", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="CancelRun(string,string,RequestContext)">
      <example>
This sample shows how to call CancelRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

Response response = client.CancelRun("cfgrrkaqlomzywojd", "dgpclan", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("thread_id").ToString());
Console.WriteLine(result.GetProperty("assistant_id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("expires_at").ToString());
Console.WriteLine(result.GetProperty("started_at").ToString());
Console.WriteLine(result.GetProperty("completed_at").ToString());
Console.WriteLine(result.GetProperty("cancelled_at").ToString());
Console.WriteLine(result.GetProperty("failed_at").ToString());
Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_choice").ToString());
Console.WriteLine(result.GetProperty("response_format").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,int?,ListSortOrder?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetRunsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

await foreach (ThreadRun item in client.GetRunsAsync("luhcnx"))
{
}
]]></code></example>
    </member>
    <member name="GetRuns(string,int?,ListSortOrder?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetRuns.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

foreach (ThreadRun item in client.GetRuns("luhcnx"))
{
}
]]></code></example>
    </member>
    <member name="GetRunsAsync(string,int?,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetRunsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

await foreach (BinaryData item in client.GetRunsAsync("luhcnx", 29, "asc", "lbxjqlfasgdfb", "ukgtkdgvuzzjlnjjdxotjvgw", (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("thread_id").ToString());
    Console.WriteLine(result.GetProperty("assistant_id").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("model").ToString());
    Console.WriteLine(result.GetProperty("instructions").ToString());
    Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("expires_at").ToString());
    Console.WriteLine(result.GetProperty("started_at").ToString());
    Console.WriteLine(result.GetProperty("completed_at").ToString());
    Console.WriteLine(result.GetProperty("cancelled_at").ToString());
    Console.WriteLine(result.GetProperty("failed_at").ToString());
    Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
    Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
    Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
    Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
    Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
    Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("tool_choice").ToString());
    Console.WriteLine(result.GetProperty("response_format").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
}
]]></code></example>
    </member>
    <member name="GetRuns(string,int?,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetRuns and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
ThreadRuns client = new PersistentAgentsAdministrationClient(endpoint, credential).GetThreadRunsClient();

foreach (BinaryData item in client.GetRuns("luhcnx", 29, "asc", "lbxjqlfasgdfb", "ukgtkdgvuzzjlnjjdxotjvgw", (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("thread_id").ToString());
    Console.WriteLine(result.GetProperty("assistant_id").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("model").ToString());
    Console.WriteLine(result.GetProperty("instructions").ToString());
    Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("expires_at").ToString());
    Console.WriteLine(result.GetProperty("started_at").ToString());
    Console.WriteLine(result.GetProperty("completed_at").ToString());
    Console.WriteLine(result.GetProperty("cancelled_at").ToString());
    Console.WriteLine(result.GetProperty("failed_at").ToString());
    Console.WriteLine(result.GetProperty("incomplete_details").GetProperty("reason").ToString());
    Console.WriteLine(result.GetProperty("usage").GetProperty("completion_tokens").ToString());
    Console.WriteLine(result.GetProperty("usage").GetProperty("prompt_tokens").ToString());
    Console.WriteLine(result.GetProperty("usage").GetProperty("total_tokens").ToString());
    Console.WriteLine(result.GetProperty("max_prompt_tokens").ToString());
    Console.WriteLine(result.GetProperty("max_completion_tokens").ToString());
    Console.WriteLine(result.GetProperty("truncation_strategy").GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("tool_choice").ToString());
    Console.WriteLine(result.GetProperty("response_format").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("parallel_tool_calls").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>