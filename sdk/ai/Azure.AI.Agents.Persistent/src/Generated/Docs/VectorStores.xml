<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateVectorStoreAsync(IEnumerable{string},string,VectorStoreConfiguration,VectorStoreExpirationPolicy,VectorStoreChunkingStrategy,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call CreateVectorStoreAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = await client.CreateVectorStoreAsync();
]]></code>
This sample shows how to call CreateVectorStoreAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = await client.CreateVectorStoreAsync();
]]></code></example>
    </member>
    <member name="CreateVectorStore(IEnumerable{string},string,VectorStoreConfiguration,VectorStoreExpirationPolicy,VectorStoreChunkingStrategy,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call CreateVectorStore.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = client.CreateVectorStore();
]]></code>
This sample shows how to call CreateVectorStore.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = client.CreateVectorStore();
]]></code></example>
    </member>
    <member name="CreateVectorStoreAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateVectorStoreAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new
{
    file_ids = new object[]
    {
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt"
    },
    name = "u",
    configuration = new
    {
        data_sources = new object[]
        {
            new
            {
                uri = "soctjzrqyjyxixlqr",
                type = "uri_asset",
            }
        },
    },
    expires_after = new
    {
        anchor = "last_active_at",
        days = 73,
    },
    metadata = new
    {
        key9029 = "ghicfhykvpyj",
    },
});
Response response = await client.CreateVectorStoreAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call CreateVectorStoreAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateVectorStoreAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateVectorStore(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateVectorStore and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new
{
    file_ids = new object[]
    {
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt",
        "hileejdmsljnblywbqgrycpbeczbt"
    },
    name = "u",
    configuration = new
    {
        data_sources = new object[]
        {
            new
            {
                uri = "soctjzrqyjyxixlqr",
                type = "uri_asset",
            }
        },
    },
    expires_after = new
    {
        anchor = "last_active_at",
        days = 73,
    },
    metadata = new
    {
        key9029 = "ghicfhykvpyj",
    },
});
Response response = client.CreateVectorStore(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call CreateVectorStore and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateVectorStore(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetVectorStoreAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetVectorStoreAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = await client.GetVectorStoreAsync("vjsfufonwjwzvygdq");
]]></code>
This sample shows how to call GetVectorStoreAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = await client.GetVectorStoreAsync("jhrejmwmyblsdagsx");
]]></code></example>
    </member>
    <member name="GetVectorStore(string,CancellationToken)">
      <example>
This sample shows how to call GetVectorStore.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = client.GetVectorStore("vjsfufonwjwzvygdq");
]]></code>
This sample shows how to call GetVectorStore.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = client.GetVectorStore("jhrejmwmyblsdagsx");
]]></code></example>
    </member>
    <member name="GetVectorStoreAsync(string,RequestContext)">
      <example>
This sample shows how to call GetVectorStoreAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response response = await client.GetVectorStoreAsync("vjsfufonwjwzvygdq", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call GetVectorStoreAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response response = await client.GetVectorStoreAsync("jhrejmwmyblsdagsx", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetVectorStore(string,RequestContext)">
      <example>
This sample shows how to call GetVectorStore and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response response = client.GetVectorStore("vjsfufonwjwzvygdq", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call GetVectorStore and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response response = client.GetVectorStore("jhrejmwmyblsdagsx", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="ModifyVectorStoreAsync(string,string,VectorStoreExpirationPolicy,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call ModifyVectorStoreAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = await client.ModifyVectorStoreAsync("pqhrqxzleymrjogjppdtlmxlsfculn");
]]></code>
This sample shows how to call ModifyVectorStoreAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = await client.ModifyVectorStoreAsync("jlamdmhxwayxxeiexcyulxcocw");
]]></code></example>
    </member>
    <member name="ModifyVectorStore(string,string,VectorStoreExpirationPolicy,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call ModifyVectorStore.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = client.ModifyVectorStore("pqhrqxzleymrjogjppdtlmxlsfculn");
]]></code>
This sample shows how to call ModifyVectorStore.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

Response<PersistentAgentsVectorStore> response = client.ModifyVectorStore("jlamdmhxwayxxeiexcyulxcocw");
]]></code></example>
    </member>
    <member name="ModifyVectorStoreAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call ModifyVectorStoreAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new
{
    name = "jcrzfsgxsgelufbkjidfvnu",
    expires_after = new
    {
        anchor = "last_active_at",
        days = 73,
    },
    metadata = new
    {
        key9792 = "cxmmdtwupsjnjixdoaravhbkrqqqm",
    },
});
Response response = await client.ModifyVectorStoreAsync("pqhrqxzleymrjogjppdtlmxlsfculn", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call ModifyVectorStoreAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ModifyVectorStoreAsync("jlamdmhxwayxxeiexcyulxcocw", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="ModifyVectorStore(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call ModifyVectorStore and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new
{
    name = "jcrzfsgxsgelufbkjidfvnu",
    expires_after = new
    {
        anchor = "last_active_at",
        days = 73,
    },
    metadata = new
    {
        key9792 = "cxmmdtwupsjnjixdoaravhbkrqqqm",
    },
});
Response response = client.ModifyVectorStore("pqhrqxzleymrjogjppdtlmxlsfculn", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call ModifyVectorStore and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.ModifyVectorStore("jlamdmhxwayxxeiexcyulxcocw", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("usage_bytes").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("last_active_at").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetVectorStoresAsync(int?,ListSortOrder?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetVectorStoresAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

await foreach (PersistentAgentsVectorStore item in client.GetVectorStoresAsync())
{
}
]]></code>
This sample shows how to call GetVectorStoresAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

await foreach (PersistentAgentsVectorStore item in client.GetVectorStoresAsync())
{
}
]]></code></example>
    </member>
    <member name="GetVectorStores(int?,ListSortOrder?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetVectorStores.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

foreach (PersistentAgentsVectorStore item in client.GetVectorStores())
{
}
]]></code>
This sample shows how to call GetVectorStores.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

foreach (PersistentAgentsVectorStore item in client.GetVectorStores())
{
}
]]></code></example>
    </member>
    <member name="GetVectorStoresAsync(int?,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetVectorStoresAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

await foreach (BinaryData item in client.GetVectorStoresAsync(20, "asc", "cfgbzxzpyyflnolbxpkbsz", "forspimiuzzd", (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("usage_bytes").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("last_active_at").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code>
This sample shows how to call GetVectorStoresAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

await foreach (BinaryData item in client.GetVectorStoresAsync((int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("usage_bytes").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("last_active_at").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetVectorStores(int?,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetVectorStores and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

foreach (BinaryData item in client.GetVectorStores(20, "asc", "cfgbzxzpyyflnolbxpkbsz", "forspimiuzzd", (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("usage_bytes").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("last_active_at").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code>
This sample shows how to call GetVectorStores and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
VectorStores client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoresClient();

foreach (BinaryData item in client.GetVectorStores((int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("usage_bytes").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("last_active_at").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>