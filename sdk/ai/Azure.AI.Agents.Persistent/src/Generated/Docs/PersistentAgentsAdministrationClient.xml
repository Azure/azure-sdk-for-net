<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateAgentAsync(string,string,string,string,IEnumerable{ToolDefinition},ToolResources,float?,float?,BinaryData,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call CreateAgentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = await client.CreateAgentAsync("jyrgfmhrrrngtonrmo");
]]></code>
This sample shows how to call CreateAgentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = await client.CreateAgentAsync("jyrgfmhrrrngtonrmo");
]]></code></example>
    </member>
    <member name="CreateAgent(string,string,string,string,IEnumerable{ToolDefinition},ToolResources,float?,float?,BinaryData,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call CreateAgent.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = client.CreateAgent("jyrgfmhrrrngtonrmo");
]]></code>
This sample shows how to call CreateAgent.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = client.CreateAgent("jyrgfmhrrrngtonrmo");
]]></code></example>
    </member>
    <member name="CreateAgentAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAgentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    model = "jyrgfmhrrrngtonrmo",
    name = "zyldigcd",
    description = "dhjkjzixwadczfduxpodfrdhgz",
    instructions = "haeralumiezrrsaqzmbkkjcfxpqqog",
    tools = Array.Empty<object>(),
    tool_resources = new
    {
        code_interpreter = new
        {
            file_ids = new object[]
            {
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul"
            },
            data_sources = new object[]
            {
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                }
            },
        },
        file_search = new
        {
            vector_store_ids = new object[]
            {
                "jkrrjfupyxehwacylflmx"
            },
            vector_stores = new object[]
            {
                new
                {
                    name = "bftl",
                    configuration = new
                    {
                        data_sources = new object[]
                        {
                            new
                            {
                                uri = "soctjzrqyjyxixlqr",
                                type = "uri_asset",
                            }
                        },
                    },
                }
            },
        },
        azure_ai_search = new
        {
            indexes = new object[]
            {
                new
                {
                    index_connection_id = "zkqk",
                    index_name = "yvxhjyiomlffkuboqokcojfd",
                    query_type = "simple",
                    top_k = 27,
                    filter = "jjbewpsjmygox",
                    index_asset_id = "iwfmzmxzh",
                }
            },
        },
    },
    temperature = 11F,
    top_p = 19F,
    metadata = new
    {
        key8068 = "ebsxjdqlsifbuarpdcrwysf",
    },
});
Response response = await client.CreateAgentAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call CreateAgentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    model = "jyrgfmhrrrngtonrmo",
});
Response response = await client.CreateAgentAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateAgent(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAgent and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    model = "jyrgfmhrrrngtonrmo",
    name = "zyldigcd",
    description = "dhjkjzixwadczfduxpodfrdhgz",
    instructions = "haeralumiezrrsaqzmbkkjcfxpqqog",
    tools = Array.Empty<object>(),
    tool_resources = new
    {
        code_interpreter = new
        {
            file_ids = new object[]
            {
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul"
            },
            data_sources = new object[]
            {
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                }
            },
        },
        file_search = new
        {
            vector_store_ids = new object[]
            {
                "jkrrjfupyxehwacylflmx"
            },
            vector_stores = new object[]
            {
                new
                {
                    name = "bftl",
                    configuration = new
                    {
                        data_sources = new object[]
                        {
                            new
                            {
                                uri = "soctjzrqyjyxixlqr",
                                type = "uri_asset",
                            }
                        },
                    },
                }
            },
        },
        azure_ai_search = new
        {
            indexes = new object[]
            {
                new
                {
                    index_connection_id = "zkqk",
                    index_name = "yvxhjyiomlffkuboqokcojfd",
                    query_type = "simple",
                    top_k = 27,
                    filter = "jjbewpsjmygox",
                    index_asset_id = "iwfmzmxzh",
                }
            },
        },
    },
    temperature = 11F,
    top_p = 19F,
    metadata = new
    {
        key8068 = "ebsxjdqlsifbuarpdcrwysf",
    },
});
Response response = client.CreateAgent(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call CreateAgent and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    model = "jyrgfmhrrrngtonrmo",
});
Response response = client.CreateAgent(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAgentAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAgentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = await client.GetAgentAsync("rzrtnsfncjtctybnxemiugavvf");
]]></code>
This sample shows how to call GetAgentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = await client.GetAgentAsync("rzrtnsfncjtctybnxemiugavvf");
]]></code></example>
    </member>
    <member name="GetAgent(string,CancellationToken)">
      <example>
This sample shows how to call GetAgent.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = client.GetAgent("rzrtnsfncjtctybnxemiugavvf");
]]></code>
This sample shows how to call GetAgent.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = client.GetAgent("rzrtnsfncjtctybnxemiugavvf");
]]></code></example>
    </member>
    <member name="GetAgentAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAgentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response response = await client.GetAgentAsync("rzrtnsfncjtctybnxemiugavvf", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call GetAgentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response response = await client.GetAgentAsync("rzrtnsfncjtctybnxemiugavvf", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAgent(string,RequestContext)">
      <example>
This sample shows how to call GetAgent and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response response = client.GetAgent("rzrtnsfncjtctybnxemiugavvf", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call GetAgent and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response response = client.GetAgent("rzrtnsfncjtctybnxemiugavvf", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="UpdateAgentAsync(string,string,string,string,string,IEnumerable{ToolDefinition},ToolResources,float?,float?,BinaryData,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call UpdateAgentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = await client.UpdateAgentAsync("nibpceztzjbmfzoas");
]]></code>
This sample shows how to call UpdateAgentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = await client.UpdateAgentAsync("nibpceztzjbmfzoas");
]]></code></example>
    </member>
    <member name="UpdateAgent(string,string,string,string,string,IEnumerable{ToolDefinition},ToolResources,float?,float?,BinaryData,IReadOnlyDictionary{string,string},CancellationToken)">
      <example>
This sample shows how to call UpdateAgent.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = client.UpdateAgent("nibpceztzjbmfzoas");
]]></code>
This sample shows how to call UpdateAgent.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

Response<PersistentAgent> response = client.UpdateAgent("nibpceztzjbmfzoas");
]]></code></example>
    </member>
    <member name="UpdateAgentAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAgentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    model = "ovsqsbcptyb",
    name = "twuqmjwybuqaolohuuhwwgnmfxpwgj",
    description = "iosozem",
    instructions = "wvkhggyrkzvhx",
    tools = Array.Empty<object>(),
    tool_resources = new
    {
        code_interpreter = new
        {
            file_ids = new object[]
            {
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul"
            },
            data_sources = new object[]
            {
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                }
            },
        },
        file_search = new
        {
            vector_store_ids = new object[]
            {
                "jkrrjfupyxehwacylflmx"
            },
            vector_stores = new object[]
            {
                new
                {
                    name = "bftl",
                    configuration = new
                    {
                        data_sources = new object[]
                        {
                            new
                            {
                                uri = "soctjzrqyjyxixlqr",
                                type = "uri_asset",
                            }
                        },
                    },
                }
            },
        },
        azure_ai_search = new
        {
            indexes = new object[]
            {
                new
                {
                    index_connection_id = "zkqk",
                    index_name = "yvxhjyiomlffkuboqokcojfd",
                    query_type = "simple",
                    top_k = 27,
                    filter = "jjbewpsjmygox",
                    index_asset_id = "iwfmzmxzh",
                }
            },
        },
    },
    temperature = 26F,
    top_p = 14F,
    metadata = new
    {
        key11 = "mpbdrolmnthhjmjq",
    },
});
Response response = await client.UpdateAgentAsync("nibpceztzjbmfzoas", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call UpdateAgentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateAgentAsync("nibpceztzjbmfzoas", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="UpdateAgent(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAgent and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    model = "ovsqsbcptyb",
    name = "twuqmjwybuqaolohuuhwwgnmfxpwgj",
    description = "iosozem",
    instructions = "wvkhggyrkzvhx",
    tools = Array.Empty<object>(),
    tool_resources = new
    {
        code_interpreter = new
        {
            file_ids = new object[]
            {
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul",
                "nfbbvmtttxtmwzmjtkzhgul"
            },
            data_sources = new object[]
            {
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                },
                new
                {
                    uri = "soctjzrqyjyxixlqr",
                    type = "uri_asset",
                }
            },
        },
        file_search = new
        {
            vector_store_ids = new object[]
            {
                "jkrrjfupyxehwacylflmx"
            },
            vector_stores = new object[]
            {
                new
                {
                    name = "bftl",
                    configuration = new
                    {
                        data_sources = new object[]
                        {
                            new
                            {
                                uri = "soctjzrqyjyxixlqr",
                                type = "uri_asset",
                            }
                        },
                    },
                }
            },
        },
        azure_ai_search = new
        {
            indexes = new object[]
            {
                new
                {
                    index_connection_id = "zkqk",
                    index_name = "yvxhjyiomlffkuboqokcojfd",
                    query_type = "simple",
                    top_k = 27,
                    filter = "jjbewpsjmygox",
                    index_asset_id = "iwfmzmxzh",
                }
            },
        },
    },
    temperature = 26F,
    top_p = 14F,
    metadata = new
    {
        key11 = "mpbdrolmnthhjmjq",
    },
});
Response response = client.UpdateAgent("nibpceztzjbmfzoas", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code>
This sample shows how to call UpdateAgent and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateAgent("nibpceztzjbmfzoas", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("object").ToString());
Console.WriteLine(result.GetProperty("created_at").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("model").ToString());
Console.WriteLine(result.GetProperty("instructions").ToString());
Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tool_resources").ToString());
Console.WriteLine(result.GetProperty("temperature").ToString());
Console.WriteLine(result.GetProperty("top_p").ToString());
Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetAgentsAsync(int?,ListSortOrder?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetAgentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

await foreach (PersistentAgent item in client.GetAgentsAsync())
{
}
]]></code>
This sample shows how to call GetAgentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

await foreach (PersistentAgent item in client.GetAgentsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetAgents(int?,ListSortOrder?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetAgents.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

foreach (PersistentAgent item in client.GetAgents())
{
}
]]></code>
This sample shows how to call GetAgents.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

foreach (PersistentAgent item in client.GetAgents())
{
}
]]></code></example>
    </member>
    <member name="GetAgentsAsync(int?,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetAgentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

await foreach (BinaryData item in client.GetAgentsAsync(23, "asc", "ybuapkj", "yicprwkzcjbeirwuznafws", (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("model").ToString());
    Console.WriteLine(result.GetProperty("instructions").ToString());
    Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("tool_resources").ToString());
    Console.WriteLine(result.GetProperty("temperature").ToString());
    Console.WriteLine(result.GetProperty("top_p").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code>
This sample shows how to call GetAgentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

await foreach (BinaryData item in client.GetAgentsAsync((int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("model").ToString());
    Console.WriteLine(result.GetProperty("instructions").ToString());
    Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("tool_resources").ToString());
    Console.WriteLine(result.GetProperty("temperature").ToString());
    Console.WriteLine(result.GetProperty("top_p").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetAgents(int?,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetAgents and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

foreach (BinaryData item in client.GetAgents(23, "asc", "ybuapkj", "yicprwkzcjbeirwuznafws", (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("model").ToString());
    Console.WriteLine(result.GetProperty("instructions").ToString());
    Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("tool_resources").ToString());
    Console.WriteLine(result.GetProperty("temperature").ToString());
    Console.WriteLine(result.GetProperty("top_p").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code>
This sample shows how to call GetAgents and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
PersistentAgentsAdministrationClient client = new PersistentAgentsAdministrationClient(endpoint, credential);

foreach (BinaryData item in client.GetAgents((int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("object").ToString());
    Console.WriteLine(result.GetProperty("created_at").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("model").ToString());
    Console.WriteLine(result.GetProperty("instructions").ToString());
    Console.WriteLine(result.GetProperty("tools")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("tool_resources").ToString());
    Console.WriteLine(result.GetProperty("temperature").ToString());
    Console.WriteLine(result.GetProperty("top_p").ToString());
    Console.WriteLine(result.GetProperty("metadata").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>