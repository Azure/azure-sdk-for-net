// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Agents.Persistent
{
    /// <summary> A record of a call to the connected agent. </summary>
    public partial class RunStepConnectedAgentToolCall : RunStepToolCall
    {
        /// <summary> Initializes a new instance of <see cref="RunStepConnectedAgentToolCall"/>. </summary>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when you submit tool outputs. </param>
        /// <param name="connectedAgent"> The connected agent step information. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="connectedAgent"/> is null. </exception>
        internal RunStepConnectedAgentToolCall(string id, RunStepConnectedAgent connectedAgent) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(connectedAgent, nameof(connectedAgent));

            Type = "connected_agent";
            ConnectedAgent = connectedAgent;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepConnectedAgentToolCall"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when you submit tool outputs. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="connectedAgent"> The connected agent step information. </param>
        internal RunStepConnectedAgentToolCall(string type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, RunStepConnectedAgent connectedAgent) : base(type, id, serializedAdditionalRawData)
        {
            ConnectedAgent = connectedAgent;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepConnectedAgentToolCall"/> for deserialization. </summary>
        internal RunStepConnectedAgentToolCall()
        {
        }

        /// <summary> The connected agent step information. </summary>
        public RunStepConnectedAgent ConnectedAgent { get; }
    }
}
