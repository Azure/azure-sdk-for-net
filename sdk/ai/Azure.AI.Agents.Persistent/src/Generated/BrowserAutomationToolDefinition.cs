// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Agents.Persistent
{
    /// <summary> The input definition information for a Browser Automation Tool, as used to configure an Agent. </summary>
    public partial class BrowserAutomationToolDefinition : ToolDefinition
    {
        /// <summary> Initializes a new instance of <see cref="BrowserAutomationToolDefinition"/>. </summary>
        /// <param name="browserAutomation"> The Browser Automation Tool parameters. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="browserAutomation"/> is null. </exception>
        public BrowserAutomationToolDefinition(BrowserAutomationToolParameters browserAutomation)
        {
            Argument.AssertNotNull(browserAutomation, nameof(browserAutomation));

            Type = "browser_automation";
            BrowserAutomation = browserAutomation;
        }

        /// <summary> Initializes a new instance of <see cref="BrowserAutomationToolDefinition"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="browserAutomation"> The Browser Automation Tool parameters. </param>
        internal BrowserAutomationToolDefinition(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, BrowserAutomationToolParameters browserAutomation) : base(type, serializedAdditionalRawData)
        {
            BrowserAutomation = browserAutomation;
        }

        /// <summary> Initializes a new instance of <see cref="BrowserAutomationToolDefinition"/> for deserialization. </summary>
        internal BrowserAutomationToolDefinition()
        {
        }

        /// <summary> The Browser Automation Tool parameters. </summary>
        public BrowserAutomationToolParameters BrowserAutomation { get; set; }
    }
}
