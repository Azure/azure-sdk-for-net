// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Agents.Persistent.Samples
{
    public partial class Samples_VectorStoreFileBatches
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            using RequestContent content = RequestContent.Create(new
            {
                file_ids = new object[]
            {
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall"
            },
                data_sources = new object[]
            {
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
}
            },
            });
            Response response = client.CreateVectorStoreFileBatch("bvcjtemrnqtycjuaerlxllednm", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            using RequestContent content = RequestContent.Create(new
            {
                file_ids = new object[]
            {
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall",
"sseovtmhsfpghlqyzulhnhhhasall"
            },
                data_sources = new object[]
            {
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
},
new
{
uri = "soctjzrqyjyxixlqr",
type = "uri_asset",
}
            },
            });
            Response response = await client.CreateVectorStoreFileBatchAsync("bvcjtemrnqtycjuaerlxllednm", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = client.CreateVectorStoreFileBatch("bvcjtemrnqtycjuaerlxllednm");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = await client.CreateVectorStoreFileBatchAsync("bvcjtemrnqtycjuaerlxllednm");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.CreateVectorStoreFileBatch("eyxdrn", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.CreateVectorStoreFileBatchAsync("eyxdrn", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = client.CreateVectorStoreFileBatch("eyxdrn");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CreateVectorStoreFileBatch_VectorStoreFileBatchesCreateVectorStoreFileBatchMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = await client.CreateVectorStoreFileBatchAsync("eyxdrn");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = client.GetVectorStoreFileBatch("kdcqszoqvfaipuhvijnwxmegovmeuv", "juytv", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = await client.GetVectorStoreFileBatchAsync("kdcqszoqvfaipuhvijnwxmegovmeuv", "juytv", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = client.GetVectorStoreFileBatch("kdcqszoqvfaipuhvijnwxmegovmeuv", "juytv");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = await client.GetVectorStoreFileBatchAsync("kdcqszoqvfaipuhvijnwxmegovmeuv", "juytv");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = client.GetVectorStoreFileBatch("kz", "pmzxfueg", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = await client.GetVectorStoreFileBatchAsync("kz", "pmzxfueg", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = client.GetVectorStoreFileBatch("kz", "pmzxfueg");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatch_VectorStoreFileBatchesGetVectorStoreFileBatchMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = await client.GetVectorStoreFileBatchAsync("kz", "pmzxfueg");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = client.CancelVectorStoreFileBatch("kpjojtaxsspjvzyxmfgwxusqde", "lqtvimqtqecqy", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = await client.CancelVectorStoreFileBatchAsync("kpjojtaxsspjvzyxmfgwxusqde", "lqtvimqtqecqy", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = client.CancelVectorStoreFileBatch("kpjojtaxsspjvzyxmfgwxusqde", "lqtvimqtqecqy");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = await client.CancelVectorStoreFileBatchAsync("kpjojtaxsspjvzyxmfgwxusqde", "lqtvimqtqecqy");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = client.CancelVectorStoreFileBatch("fldyjeftzzkqinhz", "qsniwwejf", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response response = await client.CancelVectorStoreFileBatchAsync("fldyjeftzzkqinhz", "qsniwwejf", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("object").ToString());
            Console.WriteLine(result.GetProperty("created_at").ToString());
            Console.WriteLine(result.GetProperty("vector_store_id").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("in_progress").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("completed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("file_counts").GetProperty("total").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = client.CancelVectorStoreFileBatch("fldyjeftzzkqinhz", "qsniwwejf");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_CancelVectorStoreFileBatch_VectorStoreFileBatchesCancelVectorStoreFileBatchMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            Response<VectorStoreFileBatch> response = await client.CancelVectorStoreFileBatchAsync("fldyjeftzzkqinhz", "qsniwwejf");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMaximumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            foreach (BinaryData item in client.GetVectorStoreFileBatchFiles("itweqinnhpanpqxkxwqfi", "b", "in_progress", 22, "asc", "uotopjkuhxuxypqooudmdt", "lunnzgjqyjlrlvsldrkhrjvaqfovp", (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("usage_bytes").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("vector_store_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("chunking_strategy").GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMaximumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            await foreach (BinaryData item in client.GetVectorStoreFileBatchFilesAsync("itweqinnhpanpqxkxwqfi", "b", "in_progress", 22, "asc", "uotopjkuhxuxypqooudmdt", "lunnzgjqyjlrlvsldrkhrjvaqfovp", (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("usage_bytes").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("vector_store_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("chunking_strategy").GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMaximumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            foreach (VectorStoreFile item in client.GetVectorStoreFileBatchFiles("itweqinnhpanpqxkxwqfi", "b"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMaximumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            await foreach (VectorStoreFile item in client.GetVectorStoreFileBatchFilesAsync("itweqinnhpanpqxkxwqfi", "b"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMinimumSet()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            foreach (BinaryData item in client.GetVectorStoreFileBatchFiles("awzuqhqpzl", "gipykvmemjcss", (string)null, (int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("usage_bytes").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("vector_store_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("chunking_strategy").GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMinimumSet_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            await foreach (BinaryData item in client.GetVectorStoreFileBatchFilesAsync("awzuqhqpzl", "gipykvmemjcss", (string)null, (int?)null, (string)null, (string)null, (string)null, (RequestContext)null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("object").ToString());
                Console.WriteLine(result.GetProperty("usage_bytes").ToString());
                Console.WriteLine(result.GetProperty("created_at").ToString());
                Console.WriteLine(result.GetProperty("vector_store_id").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("last_error").GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("chunking_strategy").GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMinimumSet_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            foreach (VectorStoreFile item in client.GetVectorStoreFileBatchFiles("awzuqhqpzl", "gipykvmemjcss"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VectorStoreFileBatches_GetVectorStoreFileBatchFiles_VectorStoreFileBatchesListVectorStoreFileBatchFilesMinimumSet_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            VectorStoreFileBatches client = new PersistentAgentsAdministrationClient(endpoint, credential).GetVectorStoreFileBatchesClient();

            await foreach (VectorStoreFile item in client.GetVectorStoreFileBatchFilesAsync("awzuqhqpzl", "gipykvmemjcss"))
            {
            }
        }
    }
}
