// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// Returned in `server_vad` mode when the server detects the end of speech in
    /// the audio buffer. The server will also send an `conversation.item.created`
    /// event with the user message item that is created from the audio buffer.
    /// </summary>
    public partial class ServerEventInputAudioBufferSpeechStopped : ServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="ServerEventInputAudioBufferSpeechStopped"/>. </summary>
        /// <param name="audioEndMs">
        /// Milliseconds since the session started when speech stopped. This will
        /// correspond to the end of audio sent to the model, and thus includes the
        /// `min_silence_duration_ms` configured in the Session.
        /// </param>
        /// <param name="itemId"> The ID of the user message item that will be created. </param>
        internal ServerEventInputAudioBufferSpeechStopped(int audioEndMs, string itemId) : base("input_audio_buffer.speech_stopped")
        {
            AudioEndMs = audioEndMs;
            ItemId = itemId;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventInputAudioBufferSpeechStopped"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="audioEndMs">
        /// Milliseconds since the session started when speech stopped. This will
        /// correspond to the end of audio sent to the model, and thus includes the
        /// `min_silence_duration_ms` configured in the Session.
        /// </param>
        /// <param name="itemId"> The ID of the user message item that will be created. </param>
        internal ServerEventInputAudioBufferSpeechStopped(string @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties, int audioEndMs, string itemId) : base(@type, eventId, additionalBinaryDataProperties)
        {
            AudioEndMs = audioEndMs;
            ItemId = itemId;
        }

        /// <summary>
        /// Milliseconds since the session started when speech stopped. This will
        /// correspond to the end of audio sent to the model, and thus includes the
        /// `min_silence_duration_ms` configured in the Session.
        /// </summary>
        public int AudioEndMs { get; }

        /// <summary> The ID of the user message item that will be created. </summary>
        public string ItemId { get; }
    }
}
