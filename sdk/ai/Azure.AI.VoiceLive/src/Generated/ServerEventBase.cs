// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// A voicelive server event.
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="ServerEventError"/>, <see cref="ServerEventSessionCreated"/>, <see cref="ServerEventSessionUpdated"/>, <see cref="ServerEventSessionAvatarConnecting"/>, <see cref="ServerEventInputAudioBufferCommitted"/>, <see cref="ServerEventInputAudioBufferCleared"/>, <see cref="ServerEventInputAudioBufferSpeechStarted"/>, <see cref="ServerEventInputAudioBufferSpeechStopped"/>, <see cref="ServerEventConversationItemCreated"/>, <see cref="ServerEventConversationItemInputAudioTranscriptionCompleted"/>, <see cref="ServerEventConversationItemInputAudioTranscriptionFailed"/>, <see cref="ServerEventConversationItemTruncated"/>, <see cref="ServerEventConversationItemDeleted"/>, <see cref="ServerEventResponseCreated"/>, <see cref="ServerEventResponseDone"/>, <see cref="ServerEventResponseOutputItemAdded"/>, <see cref="ServerEventResponseOutputItemDone"/>, <see cref="ServerEventResponseContentPartAdded"/>, <see cref="ServerEventResponseContentPartDone"/>, <see cref="ServerEventResponseTextDelta"/>, <see cref="ServerEventResponseTextDone"/>, <see cref="ServerEventResponseAudioTranscriptDelta"/>, <see cref="ServerEventResponseAudioTranscriptDone"/>, <see cref="ServerEventResponseAudioDelta"/>, <see cref="ServerEventResponseAudioDone"/>, <see cref="ServerEventResponseAnimationBlendshapeDelta"/>, <see cref="ServerEventResponseAnimationBlendshapeDone"/>, <see cref="ServerEventResponseEmotionHypothesis"/>, <see cref="ServerEventResponseAudioTimestampDelta"/>, <see cref="ServerEventResponseAudioTimestampDone"/>, <see cref="ServerEventResponseAnimationVisemeDelta"/>, <see cref="ServerEventResponseAnimationVisemeDone"/>, <see cref="ServerEventConversationItemInputAudioTranscriptionDelta"/>, <see cref="ServerEventConversationItemRetrieved"/>, <see cref="ServerEventResponseFunctionCallArgumentsDelta"/>, and <see cref="ServerEventResponseFunctionCallArgumentsDone"/>.
    /// </summary>
    public abstract partial class ServerEventBase
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ServerEventBase"/>. </summary>
        /// <param name="type"> The type of event. </param>
        private protected ServerEventBase(ServerEventType @type)
        {
            Type = @type;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventBase"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ServerEventBase(ServerEventType @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            EventId = eventId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The type of event. </summary>
        internal ServerEventType Type { get; set; }

        /// <summary> Gets the EventId. </summary>
        public virtual string EventId { get; }
    }
}
