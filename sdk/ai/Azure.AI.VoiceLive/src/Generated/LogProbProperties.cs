// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> A single log probability entry for a token. </summary>
    public partial class LogProbProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="LogProbProperties"/>. </summary>
        /// <param name="token"> The token that was used to generate the log probability. </param>
        /// <param name="logprob"> The log probability of the token. </param>
        /// <param name="bytes"> The bytes that were used to generate the log probability. </param>
        internal LogProbProperties(string token, float logprob, BinaryData bytes)
        {
            Token = token;
            Logprob = logprob;
            Bytes = bytes;
        }

        /// <summary> Initializes a new instance of <see cref="LogProbProperties"/>. </summary>
        /// <param name="token"> The token that was used to generate the log probability. </param>
        /// <param name="logprob"> The log probability of the token. </param>
        /// <param name="bytes"> The bytes that were used to generate the log probability. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal LogProbProperties(string token, float logprob, BinaryData bytes, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Token = token;
            Logprob = logprob;
            Bytes = bytes;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The token that was used to generate the log probability. </summary>
        public string Token { get; }

        /// <summary> The log probability of the token. </summary>
        public float Logprob { get; }
    }
}
