// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    internal partial class ClientEventInputAudioBufferAppend : ClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="ClientEventInputAudioBufferAppend"/>. </summary>
        /// <param name="audio">
        /// Base64-encoded audio. This must be in the format specified by the
        /// `input_audio_format` field in the session configuration.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="audio"/> is null. </exception>
        public ClientEventInputAudioBufferAppend(string audio) : base(ClientEventType.InputAudioBufferAppend)
        {
            Argument.AssertNotNull(audio, nameof(audio));

            Audio = audio;
        }

        /// <summary> Initializes a new instance of <see cref="ClientEventInputAudioBufferAppend"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="audio">
        /// Base64-encoded audio. This must be in the format specified by the
        /// `input_audio_format` field in the session configuration.
        /// </param>
        internal ClientEventInputAudioBufferAppend(ClientEventType @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties, string audio) : base(@type, eventId, additionalBinaryDataProperties)
        {
            Audio = audio;
        }

        /// <summary>
        /// Base64-encoded audio. This must be in the format specified by the
        /// `input_audio_format` field in the session configuration.
        /// </summary>
        public string Audio { get; }
    }
}
