// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> The VoiceLiveSessionResponse. </summary>
    public partial class VoiceLiveSessionResponse : VoiceLiveSessionOptions
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveSessionResponse"/>. </summary>
        internal VoiceLiveSessionResponse()
        {
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveSessionResponse"/>. </summary>
        /// <param name="model"></param>
        /// <param name="modalities"></param>
        /// <param name="animation"></param>
        /// <param name="instructions"></param>
        /// <param name="inputAudioSamplingRate">
        /// Input audio sampling rate in Hz. Available values:
        /// - For pcm16: 8000, 16000, 24000
        /// - For g711_alaw/g711_ulaw: 8000
        /// </param>
        /// <param name="inputAudioFormat"></param>
        /// <param name="outputAudioFormat"></param>
        /// <param name="turnDetection"></param>
        /// <param name="inputAudioNoiseReduction"></param>
        /// <param name="inputAudioEchoCancellation"></param>
        /// <param name="avatar"></param>
        /// <param name="inputAudioTranscription"></param>
        /// <param name="outputAudioTimestampTypes"></param>
        /// <param name="tools"></param>
        /// <param name="temperature"></param>
        /// <param name="voiceInternal"></param>
        /// <param name="maxResponseOutputTokens"></param>
        /// <param name="toolChoice"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="agent"></param>
        /// <param name="id"></param>
        internal VoiceLiveSessionResponse(string model, IList<InputModality> modalities, AnimationOptions animation, string instructions, int? inputAudioSamplingRate, InputAudioFormat? inputAudioFormat, OutputAudioFormat? outputAudioFormat, TurnDetection turnDetection, AudioNoiseReduction inputAudioNoiseReduction, AudioEchoCancellation inputAudioEchoCancellation, AvatarConfiguration avatar, AudioInputTranscriptionSettings inputAudioTranscription, IList<AudioTimestampType> outputAudioTimestampTypes, IList<VoiceLiveToolDefinition> tools, float? temperature, BinaryData voiceInternal, BinaryData maxResponseOutputTokens, BinaryData toolChoice, IDictionary<string, BinaryData> additionalBinaryDataProperties, RespondingAgentOptions agent, string id) : base(model, modalities, animation, instructions, inputAudioSamplingRate, inputAudioFormat, outputAudioFormat, turnDetection, inputAudioNoiseReduction, inputAudioEchoCancellation, avatar, inputAudioTranscription, outputAudioTimestampTypes, tools, temperature, voiceInternal, maxResponseOutputTokens, toolChoice, additionalBinaryDataProperties)
        {
            Agent = agent;
            Id = id;
        }

        /// <summary> Gets the Agent. </summary>
        public RespondingAgentOptions Agent { get; }

        /// <summary> Gets the Id. </summary>
        public string Id { get; }
    }
}
