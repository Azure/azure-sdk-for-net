// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Represents a word-level audio timestamp delta for a response. </summary>
    public partial class ResponseAudioTimestampDeltaEvent : VoiceLiveServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="ResponseAudioTimestampDeltaEvent"/>. </summary>
        /// <param name="responseId"></param>
        /// <param name="itemId"></param>
        /// <param name="outputIndex"></param>
        /// <param name="contentIndex"></param>
        /// <param name="audioOffsetMs"></param>
        /// <param name="audioDurationMs"></param>
        /// <param name="text"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="responseId"/>, <paramref name="itemId"/> or <paramref name="text"/> is null. </exception>
        internal ResponseAudioTimestampDeltaEvent(string responseId, string itemId, int outputIndex, int contentIndex, int audioOffsetMs, int audioDurationMs, string text)
        {
            Argument.AssertNotNull(responseId, nameof(responseId));
            Argument.AssertNotNull(itemId, nameof(itemId));
            Argument.AssertNotNull(text, nameof(text));

            Type = VoiceLiveServerEventType.ResponseAudioTimestampDelta;
            ResponseId = responseId;
            ItemId = itemId;
            OutputIndex = outputIndex;
            ContentIndex = contentIndex;
            AudioOffsetMs = audioOffsetMs;
            AudioDurationMs = audioDurationMs;
            Text = text;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseAudioTimestampDeltaEvent"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="responseId"></param>
        /// <param name="itemId"></param>
        /// <param name="outputIndex"></param>
        /// <param name="contentIndex"></param>
        /// <param name="audioOffsetMs"></param>
        /// <param name="audioDurationMs"></param>
        /// <param name="text"></param>
        /// <param name="timestampType"></param>
        internal ResponseAudioTimestampDeltaEvent(VoiceLiveServerEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string responseId, string itemId, int outputIndex, int contentIndex, int audioOffsetMs, int audioDurationMs, string text, ResponseAudioTimestampDeltaEventTimestampType timestampType) : base(type, eventId, serializedAdditionalRawData)
        {
            ResponseId = responseId;
            ItemId = itemId;
            OutputIndex = outputIndex;
            ContentIndex = contentIndex;
            AudioOffsetMs = audioOffsetMs;
            AudioDurationMs = audioDurationMs;
            Text = text;
            TimestampType = timestampType;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseAudioTimestampDeltaEvent"/> for deserialization. </summary>
        internal ResponseAudioTimestampDeltaEvent()
        {
        }

        /// <summary> Gets the response id. </summary>
        public string ResponseId { get; }
        /// <summary> Gets the item id. </summary>
        public string ItemId { get; }
        /// <summary> Gets the output index. </summary>
        public int OutputIndex { get; }
        /// <summary> Gets the content index. </summary>
        public int ContentIndex { get; }
        /// <summary> Gets the audio offset ms. </summary>
        public int AudioOffsetMs { get; }
        /// <summary> Gets the audio duration ms. </summary>
        public int AudioDurationMs { get; }
        /// <summary> Gets the text. </summary>
        public string Text { get; }
        /// <summary> Gets the timestamp type. </summary>
        public ResponseAudioTimestampDeltaEventTimestampType TimestampType { get; } = ResponseAudioTimestampDeltaEventTimestampType.Word;
    }
}
