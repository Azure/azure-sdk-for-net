// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    internal partial class ClientEventConversationItemTruncate : ClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="ClientEventConversationItemTruncate"/>. </summary>
        /// <param name="itemId">
        /// The ID of the assistant message item to truncate. Only assistant message
        /// items can be truncated.
        /// </param>
        /// <param name="contentIndex"> The index of the content part to truncate. Set this to 0. </param>
        /// <param name="audioEndMs">
        /// Inclusive duration up to which audio is truncated, in milliseconds. If
        /// the audio_end_ms is greater than the actual audio duration, the server
        /// will respond with an error.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="itemId"/> is null. </exception>
        public ClientEventConversationItemTruncate(string itemId, int contentIndex, int audioEndMs) : base(ClientEventType.ConversationItemTruncate)
        {
            Argument.AssertNotNull(itemId, nameof(itemId));

            ItemId = itemId;
            ContentIndex = contentIndex;
            AudioEndMs = audioEndMs;
        }

        /// <summary> Initializes a new instance of <see cref="ClientEventConversationItemTruncate"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="itemId">
        /// The ID of the assistant message item to truncate. Only assistant message
        /// items can be truncated.
        /// </param>
        /// <param name="contentIndex"> The index of the content part to truncate. Set this to 0. </param>
        /// <param name="audioEndMs">
        /// Inclusive duration up to which audio is truncated, in milliseconds. If
        /// the audio_end_ms is greater than the actual audio duration, the server
        /// will respond with an error.
        /// </param>
        internal ClientEventConversationItemTruncate(ClientEventType @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties, string itemId, int contentIndex, int audioEndMs) : base(@type, eventId, additionalBinaryDataProperties)
        {
            ItemId = itemId;
            ContentIndex = contentIndex;
            AudioEndMs = audioEndMs;
        }

        /// <summary>
        /// The ID of the assistant message item to truncate. Only assistant message
        /// items can be truncated.
        /// </summary>
        public string ItemId { get; }

        /// <summary> The index of the content part to truncate. Set this to 0. </summary>
        public int ContentIndex { get; }

        /// <summary>
        /// Inclusive duration up to which audio is truncated, in milliseconds. If
        /// the audio_end_ms is greater than the actual audio duration, the server
        /// will respond with an error.
        /// </summary>
        public int AudioEndMs { get; }
    }
}
