// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Represents a viseme ID delta update for animation based on audio. </summary>
    public partial class ResponseAnimationVisemeDeltaEvent : ServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="ResponseAnimationVisemeDeltaEvent"/>. </summary>
        /// <param name="responseId"></param>
        /// <param name="itemId"></param>
        /// <param name="outputIndex"></param>
        /// <param name="contentIndex"></param>
        /// <param name="audioOffsetMs"></param>
        /// <param name="visemeId"></param>
        internal ResponseAnimationVisemeDeltaEvent(string responseId, string itemId, int outputIndex, int contentIndex, int audioOffsetMs, int visemeId) : base("response.animation_viseme.delta")
        {
            ResponseId = responseId;
            ItemId = itemId;
            OutputIndex = outputIndex;
            ContentIndex = contentIndex;
            AudioOffsetMs = audioOffsetMs;
            VisemeId = visemeId;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseAnimationVisemeDeltaEvent"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="responseId"></param>
        /// <param name="itemId"></param>
        /// <param name="outputIndex"></param>
        /// <param name="contentIndex"></param>
        /// <param name="audioOffsetMs"></param>
        /// <param name="visemeId"></param>
        internal ResponseAnimationVisemeDeltaEvent(string @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties, string responseId, string itemId, int outputIndex, int contentIndex, int audioOffsetMs, int visemeId) : base(@type, eventId, additionalBinaryDataProperties)
        {
            ResponseId = responseId;
            ItemId = itemId;
            OutputIndex = outputIndex;
            ContentIndex = contentIndex;
            AudioOffsetMs = audioOffsetMs;
            VisemeId = visemeId;
        }

        /// <summary> Gets the ResponseId. </summary>
        public string ResponseId { get; }

        /// <summary> Gets the ItemId. </summary>
        public string ItemId { get; }

        /// <summary> Gets the OutputIndex. </summary>
        public int OutputIndex { get; }

        /// <summary> Gets the ContentIndex. </summary>
        public int ContentIndex { get; }

        /// <summary> Gets the AudioOffsetMs. </summary>
        public int AudioOffsetMs { get; }

        /// <summary> Gets the VisemeId. </summary>
        public int VisemeId { get; }
    }
}
