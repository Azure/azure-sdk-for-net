// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>  Appends audio data to an ongoing input turn. </summary>
    public partial class VoiceLiveClientEventInputAudioTurnAppend : VoiceLiveClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventInputAudioTurnAppend"/>. </summary>
        /// <param name="turnId"> The ID of the turn this audio is part of. </param>
        /// <param name="audio"> Base64-encoded audio chunk. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="turnId"/> or <paramref name="audio"/> is null. </exception>
        internal VoiceLiveClientEventInputAudioTurnAppend(string turnId, string audio)
        {
            Argument.AssertNotNull(turnId, nameof(turnId));
            Argument.AssertNotNull(audio, nameof(audio));

            Type = VoiceLiveClientEventType.InputAudioTurnAppend;
            TurnId = turnId;
            Audio = audio;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventInputAudioTurnAppend"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="turnId"> The ID of the turn this audio is part of. </param>
        /// <param name="audio"> Base64-encoded audio chunk. </param>
        internal VoiceLiveClientEventInputAudioTurnAppend(VoiceLiveClientEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string turnId, string audio) : base(type, eventId, serializedAdditionalRawData)
        {
            TurnId = turnId;
            Audio = audio;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventInputAudioTurnAppend"/> for deserialization. </summary>
        internal VoiceLiveClientEventInputAudioTurnAppend()
        {
        }

        /// <summary> The ID of the turn this audio is part of. </summary>
        public string TurnId { get; }
        /// <summary> Base64-encoded audio chunk. </summary>
        public string Audio { get; }
    }
}
