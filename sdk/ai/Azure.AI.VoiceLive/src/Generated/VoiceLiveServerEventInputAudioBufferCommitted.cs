// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// Returned when an input audio buffer is committed, either by the client or
    /// automatically in server VAD mode. The `item_id` property is the ID of the user
    /// message item that will be created, thus a `conversation.item.created` event
    /// will also be sent to the client.
    /// </summary>
    public partial class VoiceLiveServerEventInputAudioBufferCommitted : VoiceLiveServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventInputAudioBufferCommitted"/>. </summary>
        /// <param name="itemId"> The ID of the user message item that will be created. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="itemId"/> is null. </exception>
        internal VoiceLiveServerEventInputAudioBufferCommitted(string itemId)
        {
            Argument.AssertNotNull(itemId, nameof(itemId));

            Type = VoiceLiveServerEventType.InputAudioBufferCommitted;
            ItemId = itemId;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventInputAudioBufferCommitted"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="previousItemId"> The ID of the preceding item after which the new item will be inserted. </param>
        /// <param name="itemId"> The ID of the user message item that will be created. </param>
        internal VoiceLiveServerEventInputAudioBufferCommitted(VoiceLiveServerEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string previousItemId, string itemId) : base(type, eventId, serializedAdditionalRawData)
        {
            PreviousItemId = previousItemId;
            ItemId = itemId;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventInputAudioBufferCommitted"/> for deserialization. </summary>
        internal VoiceLiveServerEventInputAudioBufferCommitted()
        {
        }

        /// <summary> The ID of the preceding item after which the new item will be inserted. </summary>
        public string PreviousItemId { get; }
        /// <summary> The ID of the user message item that will be created. </summary>
        public string ItemId { get; }
    }
}
