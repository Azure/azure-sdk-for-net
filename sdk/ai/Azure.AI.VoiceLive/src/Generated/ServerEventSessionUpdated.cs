// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// Returned when a session is updated with a `session.update` event, unless
    /// there is an error.
    /// </summary>
    public partial class ServerEventSessionUpdated : ServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="ServerEventSessionUpdated"/>. </summary>
        /// <param name="session"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="session"/> is null. </exception>
        internal ServerEventSessionUpdated(ResponseSession session)
        {
            Argument.AssertNotNull(session, nameof(session));

            Type = ServerEventType.SessionUpdated;
            Session = session;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventSessionUpdated"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="session"></param>
        internal ServerEventSessionUpdated(ServerEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, ResponseSession session) : base(type, eventId, serializedAdditionalRawData)
        {
            Session = session;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventSessionUpdated"/> for deserialization. </summary>
        internal ServerEventSessionUpdated()
        {
        }

        /// <summary> Gets the session. </summary>
        public ResponseSession Session { get; }
    }
}
