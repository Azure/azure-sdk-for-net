// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// Returned when a conversation item is created. There are several scenarios that produce this event:
    ///   - The server is generating a Response, which if successful will produce
    ///     either one or two Items, which will be of type `message`
    ///     (role `assistant`) or type `function_call`.
    ///   - The input audio buffer has been committed, either by the client or the
    ///     server (in `server_vad` mode). The server will take the content of the
    ///     input audio buffer and add it to a new user message Item.
    ///   - The client has sent a `conversation.item.create` event to add a new Item
    ///     to the Conversation.
    /// </summary>
    public partial class VoiceLiveServerEventConversationItemCreated : VoiceLiveServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventConversationItemCreated"/>. </summary>
        /// <param name="previousItemId">
        /// The ID of the preceding item in the Conversation context, allows the
        /// client to understand the order of the conversation.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="previousItemId"/> is null. </exception>
        internal VoiceLiveServerEventConversationItemCreated(string previousItemId)
        {
            Argument.AssertNotNull(previousItemId, nameof(previousItemId));

            Type = VoiceLiveServerEventType.ConversationItemCreated;
            PreviousItemId = previousItemId;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventConversationItemCreated"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="previousItemId">
        /// The ID of the preceding item in the Conversation context, allows the
        /// client to understand the order of the conversation.
        /// </param>
        /// <param name="item"></param>
        internal VoiceLiveServerEventConversationItemCreated(VoiceLiveServerEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string previousItemId, VoiceLiveConversationItem item) : base(type, eventId, serializedAdditionalRawData)
        {
            PreviousItemId = previousItemId;
            Item = item;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventConversationItemCreated"/> for deserialization. </summary>
        internal VoiceLiveServerEventConversationItemCreated()
        {
        }

        /// <summary>
        /// The ID of the preceding item in the Conversation context, allows the
        /// client to understand the order of the conversation.
        /// </summary>
        public string PreviousItemId { get; }
        /// <summary> Gets the item. </summary>
        public VoiceLiveConversationItem Item { get; }
    }
}
