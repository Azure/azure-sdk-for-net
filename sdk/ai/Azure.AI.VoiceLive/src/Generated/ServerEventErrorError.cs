// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> The ServerEventErrorError. </summary>
    public partial class ServerEventErrorError
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ServerEventErrorError"/>. </summary>
        /// <param name="type"> The type of error (e.g., "invalid_request_error", "server_error"). </param>
        /// <param name="message"> A human-readable error message. </param>
        internal ServerEventErrorError(string @type, string message)
        {
            Type = @type;
            Message = message;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventErrorError"/>. </summary>
        /// <param name="type"> The type of error (e.g., "invalid_request_error", "server_error"). </param>
        /// <param name="code"> Error code, if any. </param>
        /// <param name="message"> A human-readable error message. </param>
        /// <param name="param"> Parameter related to the error, if any. </param>
        /// <param name="eventId"> The event_id of the client event that caused the error, if applicable. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ServerEventErrorError(string @type, string code, string message, string @param, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            Code = code;
            Message = message;
            Param = @param;
            EventId = eventId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The type of error (e.g., "invalid_request_error", "server_error"). </summary>
        public string Type { get; }

        /// <summary> Error code, if any. </summary>
        public string Code { get; }

        /// <summary> A human-readable error message. </summary>
        public string Message { get; }

        /// <summary> Parameter related to the error, if any. </summary>
        public string Param { get; }

        /// <summary> The event_id of the client event that caused the error, if applicable. </summary>
        public string EventId { get; }
    }
}
