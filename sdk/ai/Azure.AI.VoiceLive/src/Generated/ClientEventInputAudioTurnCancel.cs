// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>  Cancels an in-progress input audio turn. </summary>
    public partial class ClientEventInputAudioTurnCancel : ClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="ClientEventInputAudioTurnCancel"/>. </summary>
        /// <param name="turnId"> The ID of the turn to cancel. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="turnId"/> is null. </exception>
        internal ClientEventInputAudioTurnCancel(string turnId)
        {
            Argument.AssertNotNull(turnId, nameof(turnId));

            Type = ClientEventType.InputAudioTurnCancel;
            TurnId = turnId;
        }

        /// <summary> Initializes a new instance of <see cref="ClientEventInputAudioTurnCancel"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="turnId"> The ID of the turn to cancel. </param>
        internal ClientEventInputAudioTurnCancel(ClientEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string turnId) : base(type, eventId, serializedAdditionalRawData)
        {
            TurnId = turnId;
        }

        /// <summary> Initializes a new instance of <see cref="ClientEventInputAudioTurnCancel"/> for deserialization. </summary>
        internal ClientEventInputAudioTurnCancel()
        {
        }

        /// <summary> The ID of the turn to cancel. </summary>
        public string TurnId { get; }
    }
}
