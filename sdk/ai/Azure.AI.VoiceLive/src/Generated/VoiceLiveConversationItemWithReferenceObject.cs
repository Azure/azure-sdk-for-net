// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.VoiceLive
{
    /// <summary> The VoiceLiveConversationItemWithReferenceObject. </summary>
    public readonly partial struct VoiceLiveConversationItemWithReferenceObject : IEquatable<VoiceLiveConversationItemWithReferenceObject>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="VoiceLiveConversationItemWithReferenceObject"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public VoiceLiveConversationItemWithReferenceObject(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string RealtimeItemValue = "realtime.item";

        /// <summary> realtime.item. </summary>
        public static VoiceLiveConversationItemWithReferenceObject RealtimeItem { get; } = new VoiceLiveConversationItemWithReferenceObject(RealtimeItemValue);
        /// <summary> Determines if two <see cref="VoiceLiveConversationItemWithReferenceObject"/> values are the same. </summary>
        public static bool operator ==(VoiceLiveConversationItemWithReferenceObject left, VoiceLiveConversationItemWithReferenceObject right) => left.Equals(right);
        /// <summary> Determines if two <see cref="VoiceLiveConversationItemWithReferenceObject"/> values are not the same. </summary>
        public static bool operator !=(VoiceLiveConversationItemWithReferenceObject left, VoiceLiveConversationItemWithReferenceObject right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="VoiceLiveConversationItemWithReferenceObject"/>. </summary>
        public static implicit operator VoiceLiveConversationItemWithReferenceObject(string value) => new VoiceLiveConversationItemWithReferenceObject(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is VoiceLiveConversationItemWithReferenceObject other && Equals(other);
        /// <inheritdoc />
        public bool Equals(VoiceLiveConversationItemWithReferenceObject other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
