// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Sent when the server is in the process of establishing an avatar media connection and provides its SDP answer. </summary>
    public partial class ServerEventSessionAvatarConnecting : ServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="ServerEventSessionAvatarConnecting"/>. </summary>
        /// <param name="serverSdp"> The server's SDP answer for the avatar connection. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serverSdp"/> is null. </exception>
        internal ServerEventSessionAvatarConnecting(string serverSdp)
        {
            Argument.AssertNotNull(serverSdp, nameof(serverSdp));

            Type = ServerEventType.SessionAvatarConnecting;
            ServerSdp = serverSdp;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventSessionAvatarConnecting"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="serverSdp"> The server's SDP answer for the avatar connection. </param>
        internal ServerEventSessionAvatarConnecting(ServerEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string serverSdp) : base(type, eventId, serializedAdditionalRawData)
        {
            ServerSdp = serverSdp;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventSessionAvatarConnecting"/> for deserialization. </summary>
        internal ServerEventSessionAvatarConnecting()
        {
        }

        /// <summary> The server's SDP answer for the avatar connection. </summary>
        public string ServerSdp { get; }
    }
}
