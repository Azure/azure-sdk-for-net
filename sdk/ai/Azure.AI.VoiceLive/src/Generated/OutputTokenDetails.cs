// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Details of output token usage. </summary>
    public partial class OutputTokenDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="OutputTokenDetails"/>. </summary>
        /// <param name="textTokens"> Number of text tokens generated in the output. </param>
        /// <param name="audioTokens"> Number of audio tokens generated in the output. </param>
        internal OutputTokenDetails(int textTokens, int audioTokens)
        {
            TextTokens = textTokens;
            AudioTokens = audioTokens;
        }

        /// <summary> Initializes a new instance of <see cref="OutputTokenDetails"/>. </summary>
        /// <param name="textTokens"> Number of text tokens generated in the output. </param>
        /// <param name="audioTokens"> Number of audio tokens generated in the output. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal OutputTokenDetails(int textTokens, int audioTokens, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            TextTokens = textTokens;
            AudioTokens = audioTokens;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Number of text tokens generated in the output. </summary>
        public int TextTokens { get; }

        /// <summary> Number of audio tokens generated in the output. </summary>
        public int AudioTokens { get; }
    }
}
