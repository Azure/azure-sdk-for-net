// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> The RespondingAgentOptions. </summary>
    public partial class RespondingAgentOptions
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="RespondingAgentOptions"/>. </summary>
        /// <param name="name"></param>
        /// <param name="agentId"></param>
        /// <param name="threadId"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="agentId"/> or <paramref name="threadId"/> is null. </exception>
        public RespondingAgentOptions(string name, string agentId, string threadId)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(agentId, nameof(agentId));
            Argument.AssertNotNull(threadId, nameof(threadId));

            Name = name;
            AgentId = agentId;
            ThreadId = threadId;
        }

        /// <summary> Initializes a new instance of <see cref="RespondingAgentOptions"/>. </summary>
        /// <param name="type"></param>
        /// <param name="name"></param>
        /// <param name="description"></param>
        /// <param name="agentId"></param>
        /// <param name="threadId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal RespondingAgentOptions(string @type, string name, string description, string agentId, string threadId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            Name = name;
            Description = description;
            AgentId = agentId;
            ThreadId = threadId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the Type. </summary>
        public string Type { get; } = "agent";

        /// <summary> Gets or sets the Name. </summary>
        public string Name { get; set; }

        /// <summary> Gets or sets the Description. </summary>
        public string Description { get; set; }

        /// <summary> Gets or sets the AgentId. </summary>
        public string AgentId { get; set; }

        /// <summary> Gets or sets the ThreadId. </summary>
        public string ThreadId { get; set; }
    }
}
