// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// Send this event to update the session’s default configuration.
    /// The client may send this event at any time to update any field,
    /// except for `voice`. However, note that once a session has been
    /// initialized with a particular `model`, it can’t be changed to
    /// another model using `session.update`.
    /// 
    /// When the server receives a `session.update`, it will respond
    /// with a `session.updated` event showing the full, effective configuration.
    /// Only the fields that are present are updated. To clear a field like
    /// `instructions`, pass an empty string.
    /// </summary>
    public partial class ClientEventSessionUpdate : ClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="ClientEventSessionUpdate"/>. </summary>
        /// <param name="session"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="session"/> is null. </exception>
        public ClientEventSessionUpdate(RequestSession session) : base("session.update")
        {
            Argument.AssertNotNull(session, nameof(session));

            Session = session;
        }

        /// <summary> Initializes a new instance of <see cref="ClientEventSessionUpdate"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="session"></param>
        internal ClientEventSessionUpdate(string @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties, RequestSession session) : base(@type, eventId, additionalBinaryDataProperties)
        {
            Session = session;
        }

        /// <summary> Gets the Session. </summary>
        public RequestSession Session { get; }
    }
}
