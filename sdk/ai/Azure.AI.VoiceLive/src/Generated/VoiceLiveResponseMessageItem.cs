// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.VoiceLive
{
    /// <summary> The VoiceLiveResponseMessageItem. </summary>
    public partial class VoiceLiveResponseMessageItem : VoiceLiveConversationResponseItem
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveResponseMessageItem"/>. </summary>
        /// <param name="role"></param>
        /// <param name="content">
        /// Please note <see cref="VoiceLiveContentPart"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="VoiceLiveResponseAudioContentPart"/>, <see cref="VoiceLiveRequestAudioContentPart"/>, <see cref="VoiceLiveRequestTextContentPart"/> and <see cref="VoiceLiveResponseTextContentPart"/>.
        /// </param>
        /// <param name="status"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        internal VoiceLiveResponseMessageItem(VoiceLiveMessageRole role, IEnumerable<VoiceLiveContentPart> content, VoiceLiveItemStatus status)
        {
            Argument.AssertNotNull(content, nameof(content));

            Type = VoiceLive.VoiceLiveItemType?.Message;
            Role = role;
            Content = content.ToList();
            Status = status;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveResponseMessageItem"/>. </summary>
        /// <param name="object"></param>
        /// <param name="type"></param>
        /// <param name="id"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="role"></param>
        /// <param name="content">
        /// Please note <see cref="VoiceLiveContentPart"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="VoiceLiveResponseAudioContentPart"/>, <see cref="VoiceLiveRequestAudioContentPart"/>, <see cref="VoiceLiveRequestTextContentPart"/> and <see cref="VoiceLiveResponseTextContentPart"/>.
        /// </param>
        /// <param name="status"></param>
        internal VoiceLiveResponseMessageItem(VoiceLiveConversationResponseItemObject? @object, VoiceLiveItemType? type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, VoiceLiveMessageRole role, IReadOnlyList<VoiceLiveContentPart> content, VoiceLiveItemStatus status) : base(@object, type, id, serializedAdditionalRawData)
        {
            Role = role;
            Content = content;
            Status = status;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveResponseMessageItem"/> for deserialization. </summary>
        internal VoiceLiveResponseMessageItem()
        {
        }

        /// <summary> Gets the role. </summary>
        public VoiceLiveMessageRole Role { get; }
        /// <summary>
        /// Gets the content
        /// Please note <see cref="VoiceLiveContentPart"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="VoiceLiveResponseAudioContentPart"/>, <see cref="VoiceLiveRequestAudioContentPart"/>, <see cref="VoiceLiveRequestTextContentPart"/> and <see cref="VoiceLiveResponseTextContentPart"/>.
        /// </summary>
        public IReadOnlyList<VoiceLiveContentPart> Content { get; }
        /// <summary> Gets the status. </summary>
        public VoiceLiveItemStatus Status { get; }
    }
}
