// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;

namespace Azure.AI.VoiceLive
{
    /// <summary> The definition of a function tool as used by the voicelive endpoint. </summary>
    public partial class VoiceLiveFunctionDefinition : VoiceLiveToolDefinition
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveFunctionDefinition"/>. </summary>
        /// <param name="name"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public VoiceLiveFunctionDefinition(string name) : base(ToolType.Function)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveFunctionDefinition"/>. </summary>
        /// <param name="type"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="name"></param>
        /// <param name="description"></param>
        /// <param name="parameters"></param>
        internal VoiceLiveFunctionDefinition(ToolType @type, IDictionary<string, BinaryData> additionalBinaryDataProperties, string name, string description, BinaryData parameters) : base(@type, additionalBinaryDataProperties)
        {
            Name = name;
            Description = description;
            Parameters = parameters;
        }

        /// <summary> Gets or sets the Name. </summary>
        public string Name { get; set; }

        /// <summary> Gets or sets the Description. </summary>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the Parameters.
        /// <para> To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, JsonSerializerOptions?)"/>. </para>
        /// <para> To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>. </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term> BinaryData.FromObjectAsJson("foo"). </term>
        /// <description> Creates a payload of "foo". </description>
        /// </item>
        /// <item>
        /// <term> BinaryData.FromString("\"foo\""). </term>
        /// <description> Creates a payload of "foo". </description>
        /// </item>
        /// <item>
        /// <term> BinaryData.FromObjectAsJson(new { key = "value" }). </term>
        /// <description> Creates a payload of { "key": "value" }. </description>
        /// </item>
        /// <item>
        /// <term> BinaryData.FromString("{\"key\": \"value\"}"). </term>
        /// <description> Creates a payload of { "key": "value" }. </description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Parameters { get; set; }
    }
}
