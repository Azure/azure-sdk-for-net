// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// Returned when an error occurs, which could be a client problem or a server
    /// problem. Most errors are recoverable and the session will stay open, we
    /// recommend to implementors to monitor and log error messages by default.
    /// </summary>
    public partial class VoiceLiveServerEventError : VoiceLiveServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventError"/>. </summary>
        /// <param name="error"> Details of the error. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="error"/> is null. </exception>
        internal VoiceLiveServerEventError(VoiceLiveServerEventErrorError error)
        {
            Argument.AssertNotNull(error, nameof(error));

            Type = VoiceLiveServerEventType.Error;
            Error = error;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventError"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="error"> Details of the error. </param>
        internal VoiceLiveServerEventError(VoiceLiveServerEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, VoiceLiveServerEventErrorError error) : base(type, eventId, serializedAdditionalRawData)
        {
            Error = error;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveServerEventError"/> for deserialization. </summary>
        internal VoiceLiveServerEventError()
        {
        }

        /// <summary> Details of the error. </summary>
        public VoiceLiveServerEventErrorError Error { get; }
    }
}
