// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Base model for VAD-based turn detection. </summary>
    public partial class ServerVad : TurnDetection
    {
        /// <summary> Initializes a new instance of <see cref="ServerVad"/>. </summary>
        public ServerVad() : base(TurnDetectionType.ServerVad)
        {
        }

        /// <summary> Initializes a new instance of <see cref="ServerVad"/>. </summary>
        /// <param name="type"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="threshold"></param>
        /// <param name="prefixPaddingMs"></param>
        /// <param name="silenceDurationMs"></param>
        /// <param name="endOfUtteranceDetection"></param>
        /// <param name="autoTruncate"></param>
        internal ServerVad(TurnDetectionType @type, IDictionary<string, BinaryData> additionalBinaryDataProperties, float? threshold, int? prefixPaddingMs, int? silenceDurationMs, EouDetection endOfUtteranceDetection, bool? autoTruncate) : base(@type, additionalBinaryDataProperties)
        {
            Threshold = threshold;
            PrefixPaddingMs = prefixPaddingMs;
            SilenceDurationMs = silenceDurationMs;
            EndOfUtteranceDetection = endOfUtteranceDetection;
            AutoTruncate = autoTruncate;
        }

        /// <summary> Gets or sets the Threshold. </summary>
        public float? Threshold { get; set; }

        /// <summary> Gets or sets the PrefixPaddingMs. </summary>
        public int? PrefixPaddingMs { get; set; }

        /// <summary> Gets or sets the SilenceDurationMs. </summary>
        public int? SilenceDurationMs { get; set; }

        /// <summary> Gets or sets the EndOfUtteranceDetection. </summary>
        public EouDetection EndOfUtteranceDetection { get; set; }

        /// <summary> Gets or sets the AutoTruncate. </summary>
        public bool? AutoTruncate { get; set; }
    }
}
