// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    /// This event is the output of audio transcription for user audio written to the
    /// user audio buffer. Transcription begins when the input audio buffer is
    /// committed by the client or server (in `server_vad` mode). Transcription runs
    /// asynchronously with Response creation, so this event may come before or after
    /// the Response events.
    /// 
    /// VoiceLive API models accept audio natively, and thus input transcription is a
    /// separate process run on a separate ASR (Automatic Speech Recognition) model.
    /// The transcript may diverge somewhat from the model's interpretation, and
    /// should be treated as a rough guide.
    /// </summary>
    public partial class ServerEventConversationItemInputAudioTranscriptionCompleted : ServerEvent
    {
        /// <summary> Initializes a new instance of <see cref="ServerEventConversationItemInputAudioTranscriptionCompleted"/>. </summary>
        /// <param name="itemId"> The ID of the user message item containing the audio. </param>
        /// <param name="contentIndex"> The index of the content part containing the audio. </param>
        /// <param name="transcript"> The transcribed text. </param>
        internal ServerEventConversationItemInputAudioTranscriptionCompleted(string itemId, int contentIndex, string transcript) : base(ServerEventType.ConversationItemInputAudioTranscriptionCompleted)
        {
            ItemId = itemId;
            ContentIndex = contentIndex;
            Transcript = transcript;
        }

        /// <summary> Initializes a new instance of <see cref="ServerEventConversationItemInputAudioTranscriptionCompleted"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="itemId"> The ID of the user message item containing the audio. </param>
        /// <param name="contentIndex"> The index of the content part containing the audio. </param>
        /// <param name="transcript"> The transcribed text. </param>
        internal ServerEventConversationItemInputAudioTranscriptionCompleted(ServerEventType @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties, string itemId, int contentIndex, string transcript) : base(@type, eventId, additionalBinaryDataProperties)
        {
            ItemId = itemId;
            ContentIndex = contentIndex;
            Transcript = transcript;
        }

        /// <summary> The ID of the user message item containing the audio. </summary>
        public string ItemId { get; }

        /// <summary> The index of the content part containing the audio. </summary>
        public int ContentIndex { get; }

        /// <summary> The transcribed text. </summary>
        public string Transcript { get; }
    }
}
