// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Configuration for input audio transcription. </summary>
    public partial class VoiceLiveAudioInputTranscriptionSettings
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="VoiceLiveAudioInputTranscriptionSettings"/>. </summary>
        /// <param name="model"> The model used for transcription. E.g., 'whisper-1', 'azure-fast-transcription', 's2s-ingraph'. </param>
        /// <param name="enabled"> Whether transcription is enabled. </param>
        /// <param name="customModel"> Whether a custom model is being used. </param>
        public VoiceLiveAudioInputTranscriptionSettings(VoiceLiveAudioInputTranscriptionSettingsModel model, bool enabled, bool customModel)
        {
            Model = model;
            Enabled = enabled;
            CustomModel = customModel;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveAudioInputTranscriptionSettings"/>. </summary>
        /// <param name="model"> The model used for transcription. E.g., 'whisper-1', 'azure-fast-transcription', 's2s-ingraph'. </param>
        /// <param name="language"> The language code to use for transcription, if specified. </param>
        /// <param name="enabled"> Whether transcription is enabled. </param>
        /// <param name="customModel"> Whether a custom model is being used. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal VoiceLiveAudioInputTranscriptionSettings(VoiceLiveAudioInputTranscriptionSettingsModel model, string language, bool enabled, bool customModel, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Model = model;
            Language = language;
            Enabled = enabled;
            CustomModel = customModel;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveAudioInputTranscriptionSettings"/> for deserialization. </summary>
        internal VoiceLiveAudioInputTranscriptionSettings()
        {
        }

        /// <summary> The model used for transcription. E.g., 'whisper-1', 'azure-fast-transcription', 's2s-ingraph'. </summary>
        public VoiceLiveAudioInputTranscriptionSettingsModel Model { get; set; }
        /// <summary> The language code to use for transcription, if specified. </summary>
        public string Language { get; set; }
        /// <summary> Whether transcription is enabled. </summary>
        public bool Enabled { get; set; }
        /// <summary> Whether a custom model is being used. </summary>
        public bool CustomModel { get; set; }
    }
}
