// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Error object returned in case of API failure. </summary>
    public partial class VoiceLiveErrorDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="VoiceLiveErrorDetails"/>. </summary>
        /// <param name="message"> Human-readable error message. </param>
        internal VoiceLiveErrorDetails(string message)
        {
            Message = message;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveErrorDetails"/>. </summary>
        /// <param name="code"> Error code, or null if unspecified. </param>
        /// <param name="message"> Human-readable error message. </param>
        /// <param name="param"> Parameter name related to the error, if applicable. </param>
        /// <param name="type"> Type or category of the error. </param>
        /// <param name="eventId"> Event id of the error. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal VoiceLiveErrorDetails(string code, string message, string @param, string @type, string eventId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Code = code;
            Message = message;
            Param = @param;
            Type = @type;
            EventId = eventId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Error code, or null if unspecified. </summary>
        public string Code { get; }

        /// <summary> Human-readable error message. </summary>
        public string Message { get; }

        /// <summary> Parameter name related to the error, if applicable. </summary>
        public string Param { get; }

        /// <summary> Type or category of the error. </summary>
        public string Type { get; }

        /// <summary> Event id of the error. </summary>
        public string EventId { get; }
    }
}
