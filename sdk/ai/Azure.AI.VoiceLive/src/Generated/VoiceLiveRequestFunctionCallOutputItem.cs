// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> The VoiceLiveRequestFunctionCallOutputItem. </summary>
    public partial class VoiceLiveRequestFunctionCallOutputItem : VoiceLiveConversationRequestItem
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveRequestFunctionCallOutputItem"/>. </summary>
        /// <param name="callId"></param>
        /// <param name="output"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="callId"/> or <paramref name="output"/> is null. </exception>
        internal VoiceLiveRequestFunctionCallOutputItem(string callId, string output)
        {
            Argument.AssertNotNull(callId, nameof(callId));
            Argument.AssertNotNull(output, nameof(output));

            Type = VoiceLiveItemType.FunctionCallOutput;
            CallId = callId;
            Output = output;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveRequestFunctionCallOutputItem"/>. </summary>
        /// <param name="type"></param>
        /// <param name="id"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="callId"></param>
        /// <param name="output"></param>
        internal VoiceLiveRequestFunctionCallOutputItem(VoiceLiveItemType type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, string callId, string output) : base(type, id, serializedAdditionalRawData)
        {
            CallId = callId;
            Output = output;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveRequestFunctionCallOutputItem"/> for deserialization. </summary>
        internal VoiceLiveRequestFunctionCallOutputItem()
        {
        }

        /// <summary> Gets the call id. </summary>
        public string CallId { get; }
        /// <summary> Gets the output. </summary>
        public string Output { get; }
    }
}
