// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary> Video streaming parameters for avatar. </summary>
    public partial class VideoParams
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="VideoParams"/>. </summary>
        public VideoParams()
        {
        }

        /// <summary> Initializes a new instance of <see cref="VideoParams"/>. </summary>
        /// <param name="bitrate"> Bitrate in bits per second (e.g., 2000000 for 2 Mbps). </param>
        /// <param name="codec"> Codec to use for encoding. Currently only 'h264' is supported. </param>
        /// <param name="crop"> Optional cropping settings for the video stream. </param>
        /// <param name="resolution"> Optional resolution settings for the video stream. </param>
        /// <param name="background"> Optional background settings for the video. Allows specifying either a solid color or an image URL. </param>
        /// <param name="gopSize"> Group of Pictures (GOP) size for video encoding. Controls the interval between keyframes, affecting compression efficiency and seeking performance. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal VideoParams(int? bitrate, VideoParamsCodec? codec, VideoCrop crop, VideoResolution resolution, VideoBackground background, int? gopSize, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Bitrate = bitrate;
            Codec = codec;
            Crop = crop;
            Resolution = resolution;
            Background = background;
            GopSize = gopSize;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Bitrate in bits per second (e.g., 2000000 for 2 Mbps). </summary>
        public int? Bitrate { get; set; }

        /// <summary> Codec to use for encoding. Currently only 'h264' is supported. </summary>
        public VideoParamsCodec? Codec { get; set; }

        /// <summary> Optional cropping settings for the video stream. </summary>
        public VideoCrop Crop { get; set; }

        /// <summary> Optional resolution settings for the video stream. </summary>
        public VideoResolution Resolution { get; set; }

        /// <summary> Optional background settings for the video. Allows specifying either a solid color or an image URL. </summary>
        public VideoBackground Background { get; set; }

        /// <summary> Group of Pictures (GOP) size for video encoding. Controls the interval between keyframes, affecting compression efficiency and seeking performance. </summary>
        public int? GopSize { get; set; }
    }
}
