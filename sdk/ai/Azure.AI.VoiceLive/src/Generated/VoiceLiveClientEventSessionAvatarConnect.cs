// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>
    ///   Sent when the client connects and provides its SDP (Session Description Protocol)
    ///   for avatar-related media negotiation.
    /// </summary>
    public partial class VoiceLiveClientEventSessionAvatarConnect : VoiceLiveClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventSessionAvatarConnect"/>. </summary>
        /// <param name="clientSdp"> The client's SDP offer. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="clientSdp"/> is null. </exception>
        internal VoiceLiveClientEventSessionAvatarConnect(string clientSdp)
        {
            Argument.AssertNotNull(clientSdp, nameof(clientSdp));

            Type = VoiceLiveClientEventType.SessionAvatarConnect;
            ClientSdp = clientSdp;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventSessionAvatarConnect"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="clientSdp"> The client's SDP offer. </param>
        internal VoiceLiveClientEventSessionAvatarConnect(VoiceLiveClientEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string clientSdp) : base(type, eventId, serializedAdditionalRawData)
        {
            ClientSdp = clientSdp;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventSessionAvatarConnect"/> for deserialization. </summary>
        internal VoiceLiveClientEventSessionAvatarConnect()
        {
        }

        /// <summary> The client's SDP offer. </summary>
        public string ClientSdp { get; }
    }
}
