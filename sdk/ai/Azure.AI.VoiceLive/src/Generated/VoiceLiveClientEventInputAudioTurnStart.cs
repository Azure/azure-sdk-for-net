// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.VoiceLive
{
    /// <summary>  Indicates the start of a new audio input turn. </summary>
    public partial class VoiceLiveClientEventInputAudioTurnStart : VoiceLiveClientEvent
    {
        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventInputAudioTurnStart"/>. </summary>
        /// <param name="turnId"> Unique identifier for the input audio turn. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="turnId"/> is null. </exception>
        internal VoiceLiveClientEventInputAudioTurnStart(string turnId)
        {
            Argument.AssertNotNull(turnId, nameof(turnId));

            Type = VoiceLiveClientEventType.InputAudioTurnStart;
            TurnId = turnId;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventInputAudioTurnStart"/>. </summary>
        /// <param name="type"> The type of event. </param>
        /// <param name="eventId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="turnId"> Unique identifier for the input audio turn. </param>
        internal VoiceLiveClientEventInputAudioTurnStart(VoiceLiveClientEventType type, string eventId, IDictionary<string, BinaryData> serializedAdditionalRawData, string turnId) : base(type, eventId, serializedAdditionalRawData)
        {
            TurnId = turnId;
        }

        /// <summary> Initializes a new instance of <see cref="VoiceLiveClientEventInputAudioTurnStart"/> for deserialization. </summary>
        internal VoiceLiveClientEventInputAudioTurnStart()
        {
        }

        /// <summary> Unique identifier for the input audio turn. </summary>
        public string TurnId { get; }
    }
}
