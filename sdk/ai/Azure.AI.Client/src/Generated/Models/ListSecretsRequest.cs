// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Client.Models
{
    /// <summary> The ListSecretsRequest. </summary>
    internal partial class ListSecretsRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ListSecretsRequest"/>. </summary>
        /// <param name="connectionName"> Connection Name (should be the same as the connection name in the URL path). </param>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="resourceGroupName"> The name of the Resource Group. </param>
        /// <param name="workspaceName"> The name of the workspace (Azure AI Studio hub). </param>
        /// <param name="apiVersionInBody"> The api version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="connectionName"/>, <paramref name="subscriptionId"/>, <paramref name="resourceGroupName"/>, <paramref name="workspaceName"/> or <paramref name="apiVersionInBody"/> is null. </exception>
        internal ListSecretsRequest(string connectionName, string subscriptionId, string resourceGroupName, string workspaceName, string apiVersionInBody)
        {
            Argument.AssertNotNull(connectionName, nameof(connectionName));
            Argument.AssertNotNull(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNull(workspaceName, nameof(workspaceName));
            Argument.AssertNotNull(apiVersionInBody, nameof(apiVersionInBody));

            ConnectionName = connectionName;
            SubscriptionId = subscriptionId;
            ResourceGroupName = resourceGroupName;
            WorkspaceName = workspaceName;
            ApiVersionInBody = apiVersionInBody;
        }

        /// <summary> Initializes a new instance of <see cref="ListSecretsRequest"/>. </summary>
        /// <param name="connectionName"> Connection Name (should be the same as the connection name in the URL path). </param>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="resourceGroupName"> The name of the Resource Group. </param>
        /// <param name="workspaceName"> The name of the workspace (Azure AI Studio hub). </param>
        /// <param name="apiVersionInBody"> The api version. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ListSecretsRequest(string connectionName, string subscriptionId, string resourceGroupName, string workspaceName, string apiVersionInBody, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ConnectionName = connectionName;
            SubscriptionId = subscriptionId;
            ResourceGroupName = resourceGroupName;
            WorkspaceName = workspaceName;
            ApiVersionInBody = apiVersionInBody;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ListSecretsRequest"/> for deserialization. </summary>
        internal ListSecretsRequest()
        {
        }

        /// <summary> Connection Name (should be the same as the connection name in the URL path). </summary>
        public string ConnectionName { get; }
        /// <summary> The ID of the target subscription. </summary>
        public string SubscriptionId { get; }
        /// <summary> The name of the Resource Group. </summary>
        public string ResourceGroupName { get; }
        /// <summary> The name of the workspace (Azure AI Studio hub). </summary>
        public string WorkspaceName { get; }
        /// <summary> The api version. </summary>
        public string ApiVersionInBody { get; }
    }
}
