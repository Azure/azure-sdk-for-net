// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Threading;

namespace Azure.AI.Projects
{
    /// <summary> The AIProjectClient. </summary>
    public partial class AIProjectClient : ClientConnectionProvider
    {
        private readonly Uri _endpoint;
        /// <summary> A credential provider used to authenticate to the service. </summary>
        private readonly AuthenticationTokenProvider _tokenProvider;
        /// <summary> The OAuth2 flows supported by the service. </summary>
        private readonly Dictionary<string, object>[] _flows = new Dictionary<string, object>[] 
        {
            new Dictionary<string, object>
            {
                { GetTokenOptions.ScopesPropertyName, new string[] { "https://ai.azure.com/.default" } },
                { GetTokenOptions.AuthorizationUrlPropertyName, "https://login.microsoftonline.com/common/oauth2/v2.0/authorize" }
            }
        };
        private readonly string _apiVersion;
        private AIProjectConnectionsOperations _cachedAIProjectConnectionsOperations;
        private AIProjectDatasetsOperations _cachedAIProjectDatasetsOperations;
        private AIProjectIndexesOperations _cachedAIProjectIndexesOperations;
        private AIProjectDeploymentsOperations _cachedAIProjectDeploymentsOperations;

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public ClientPipeline Pipeline { get; }

        /// <summary> Initializes a new instance of AIProjectConnectionsOperations. </summary>
        public virtual AIProjectConnectionsOperations GetAIProjectConnectionsOperationsClient()
        {
            return Volatile.Read(ref _cachedAIProjectConnectionsOperations) ?? Interlocked.CompareExchange(ref _cachedAIProjectConnectionsOperations, new AIProjectConnectionsOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedAIProjectConnectionsOperations;
        }

        /// <summary> Initializes a new instance of AIProjectIndexesOperations. </summary>
        public virtual AIProjectIndexesOperations GetAIProjectIndexesOperationsClient()
        {
            return Volatile.Read(ref _cachedAIProjectIndexesOperations) ?? Interlocked.CompareExchange(ref _cachedAIProjectIndexesOperations, new AIProjectIndexesOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedAIProjectIndexesOperations;
        }

        /// <summary> Initializes a new instance of AIProjectDeploymentsOperations. </summary>
        public virtual AIProjectDeploymentsOperations GetAIProjectDeploymentsOperationsClient()
        {
            return Volatile.Read(ref _cachedAIProjectDeploymentsOperations) ?? Interlocked.CompareExchange(ref _cachedAIProjectDeploymentsOperations, new AIProjectDeploymentsOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedAIProjectDeploymentsOperations;
        }
    }
}
