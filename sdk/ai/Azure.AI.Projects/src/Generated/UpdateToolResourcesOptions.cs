// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary>
    /// Request object. A set of resources that are used by the agent's tools. The resources are specific to the type of tool.
    /// For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of
    /// vector store IDs.
    /// </summary>
    public partial class UpdateToolResourcesOptions
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="UpdateToolResourcesOptions"/>. </summary>
        public UpdateToolResourcesOptions()
        {
        }

        /// <summary> Initializes a new instance of <see cref="UpdateToolResourcesOptions"/>. </summary>
        /// <param name="codeInterpreter">
        /// Overrides the list of file IDs made available to the `code_interpreter` tool. There can be a maximum of 20 files
        /// associated with the tool.
        /// </param>
        /// <param name="fileSearch"> Overrides the vector store attached to this agent. There can be a maximum of 1 vector store attached to the agent. </param>
        /// <param name="azureAISearch"> Overrides the resources to be used by the `azure_ai_search` tool consisting of index IDs and names. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UpdateToolResourcesOptions(UpdateCodeInterpreterToolResourceOptions codeInterpreter, UpdateFileSearchToolResourceOptions fileSearch, AzureAISearchResource azureAISearch, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CodeInterpreter = codeInterpreter;
            FileSearch = fileSearch;
            AzureAISearch = azureAISearch;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Overrides the list of file IDs made available to the `code_interpreter` tool. There can be a maximum of 20 files
        /// associated with the tool.
        /// </summary>
        public UpdateCodeInterpreterToolResourceOptions CodeInterpreter { get; set; }
        /// <summary> Overrides the vector store attached to this agent. There can be a maximum of 1 vector store attached to the agent. </summary>
        public UpdateFileSearchToolResourceOptions FileSearch { get; set; }
        /// <summary> Overrides the resources to be used by the `azure_ai_search` tool consisting of index IDs and names. </summary>
        public AzureAISearchResource AzureAISearch { get; set; }
    }
}
