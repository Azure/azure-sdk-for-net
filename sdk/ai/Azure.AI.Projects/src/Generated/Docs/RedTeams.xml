<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetRedTeamAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetRedTeamAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response<RedTeam> response = await client.GetRedTeamAsync("apwpcf");
]]></code></example>
    </member>
    <member name="GetRedTeam(string,CancellationToken)">
      <example>
This sample shows how to call GetRedTeam.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response<RedTeam> response = client.GetRedTeam("apwpcf");
]]></code></example>
    </member>
    <member name="GetRedTeamAsync(string,RequestContext)">
      <example>
This sample shows how to call GetRedTeamAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response response = await client.GetRedTeamAsync("apwpcf", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="GetRedTeam(string,RequestContext)">
      <example>
This sample shows how to call GetRedTeam and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

Response response = client.GetRedTeam("apwpcf", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="CreateAsync(RedTeam,CancellationToken)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
    ApplicationScenario = "qaxxxhjp",
    Tags =
    {
        ["key1287"] = "gbklekkgmxkfbhehgh"
    },
    Properties =
    {
        ["key9280"] = "fwzjtipl"
    },
};
Response<RedTeam> response = await client.CreateAsync(redTeam);
]]></code>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
};
Response<RedTeam> response = await client.CreateAsync(redTeam);
]]></code></example>
    </member>
    <member name="Create(RedTeam,CancellationToken)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
    ApplicationScenario = "qaxxxhjp",
    Tags =
    {
        ["key1287"] = "gbklekkgmxkfbhehgh"
    },
    Properties =
    {
        ["key9280"] = "fwzjtipl"
    },
};
Response<RedTeam> response = client.Create(redTeam);
]]></code>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
};
Response<RedTeam> response = client.Create(redTeam);
]]></code></example>
    </member>
    <member name="CreateAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    numTurns = 10,
    attackStrategies = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
    applicationScenario = "qaxxxhjp",
    tags = new
    {
        key1287 = "gbklekkgmxkfbhehgh",
    },
    properties = new
    {
        key9280 = "fwzjtipl",
    },
});
Response response = await client.CreateAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
]]></code>
This sample shows how to call CreateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    numTurns = 10,
    attackStrategies = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
});
Response response = await client.CreateAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="Create(RequestContent,RequestContext)">
      <example>
This sample shows how to call Create and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    numTurns = 10,
    attackStrategies = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
    applicationScenario = "qaxxxhjp",
    tags = new
    {
        key1287 = "gbklekkgmxkfbhehgh",
    },
    properties = new
    {
        key9280 = "fwzjtipl",
    },
});
Response response = client.Create(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
]]></code>
This sample shows how to call Create and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    numTurns = 10,
    attackStrategies = new object[]
    {
        "easy"
    },
    simulationOnly = true,
    riskCategories = new object[]
    {
        "HateUnfairness"
    },
});
Response response = client.Create(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="GetRedTeamsAsync(CancellationToken)">
      <example>
This sample shows how to call GetRedTeamsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

await foreach (RedTeam item in client.GetRedTeamsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetRedTeams(CancellationToken)">
      <example>
This sample shows how to call GetRedTeams.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

foreach (RedTeam item in client.GetRedTeams())
{
}
]]></code></example>
    </member>
    <member name="GetRedTeamsAsync(RequestContext)">
      <example>
This sample shows how to call GetRedTeamsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetRedTeamsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
}
]]></code></example>
    </member>
    <member name="GetRedTeams(RequestContext)">
      <example>
This sample shows how to call GetRedTeams and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetRedTeams(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("target").GetProperty("type").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>