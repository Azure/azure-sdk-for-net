<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDatasetAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDatasetAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response<DatasetVersion> response = await client.GetDatasetAsync("<name>", "<version>");
]]></code>
This sample shows how to call GetDatasetAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response<DatasetVersion> response = await client.GetDatasetAsync("<name>", "<version>");
]]></code></example>
    </member>
    <member name="GetDataset(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDataset.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response<DatasetVersion> response = client.GetDataset("<name>", "<version>");
]]></code>
This sample shows how to call GetDataset with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response<DatasetVersion> response = client.GetDataset("<name>", "<version>");
]]></code></example>
    </member>
    <member name="GetDatasetAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetDatasetAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = await client.GetDatasetAsync("<name>", "<version>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
]]></code>
This sample shows how to call GetDatasetAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = await client.GetDatasetAsync("<name>", "<version>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("isReference").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDataset(string,string,RequestContext)">
      <example>
This sample shows how to call GetDataset and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = client.GetDataset("<name>", "<version>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
]]></code>
This sample shows how to call GetDataset with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = client.GetDataset("<name>", "<version>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("isReference").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = await client.DeleteAsync("<name>", "<version>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = await client.DeleteAsync("<name>", "<version>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,string,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = client.Delete("<name>", "<version>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

Response response = client.Delete("<name>", "<version>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "uri_file",
    dataUri = "<dataUri>",
});
Response response = await client.CreateOrUpdateAsync("<name>", "<version>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "uri_file",
    dataUri = "<dataUri>",
    description = "<description>",
    tags = new
    {
        key = "<tags>",
    },
});
Response response = await client.CreateOrUpdateAsync("<name>", "<version>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("isReference").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "uri_file",
    dataUri = "<dataUri>",
});
Response response = client.CreateOrUpdate("<name>", "<version>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "uri_file",
    dataUri = "<dataUri>",
    description = "<description>",
    tags = new
    {
        key = "<tags>",
    },
});
Response response = client.CreateOrUpdate("<name>", "<version>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("dataUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("isReference").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="PendingUploadAsync(string,string,PendingUploadRequest,CancellationToken)">
      <example>
This sample shows how to call PendingUploadAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

PendingUploadRequest body = new PendingUploadRequest
{
    PendingUploadId = "mxjahcghabuplfwtlopiqgxtcyw",
    ConnectionName = "bknvpmlisrqxaphkf",
};
Response<PendingUploadResponse> response = await client.PendingUploadAsync("sgrzyrpltz", "ozdqisviavgqgfbtnzk", body);
]]></code>
This sample shows how to call PendingUploadAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

PendingUploadRequest body = new PendingUploadRequest();
Response<PendingUploadResponse> response = await client.PendingUploadAsync("duxoiaywfik", "yzzzt", body);
]]></code></example>
    </member>
    <member name="PendingUpload(string,string,PendingUploadRequest,CancellationToken)">
      <example>
This sample shows how to call PendingUpload.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

PendingUploadRequest body = new PendingUploadRequest
{
    PendingUploadId = "mxjahcghabuplfwtlopiqgxtcyw",
    ConnectionName = "bknvpmlisrqxaphkf",
};
Response<PendingUploadResponse> response = client.PendingUpload("sgrzyrpltz", "ozdqisviavgqgfbtnzk", body);
]]></code>
This sample shows how to call PendingUpload.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

PendingUploadRequest body = new PendingUploadRequest();
Response<PendingUploadResponse> response = client.PendingUpload("duxoiaywfik", "yzzzt", body);
]]></code></example>
    </member>
    <member name="PendingUploadAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call PendingUploadAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    pendingUploadId = "mxjahcghabuplfwtlopiqgxtcyw",
    connectionName = "bknvpmlisrqxaphkf",
    pendingUploadType = "BlobReference",
});
Response response = await client.PendingUploadAsync("sgrzyrpltz", "ozdqisviavgqgfbtnzk", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("pendingUploadId").ToString());
Console.WriteLine(result.GetProperty("pendingUploadType").ToString());
]]></code>
This sample shows how to call PendingUploadAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    pendingUploadType = "BlobReference",
});
Response response = await client.PendingUploadAsync("duxoiaywfik", "yzzzt", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("pendingUploadId").ToString());
Console.WriteLine(result.GetProperty("pendingUploadType").ToString());
]]></code></example>
    </member>
    <member name="PendingUpload(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call PendingUpload and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    pendingUploadId = "mxjahcghabuplfwtlopiqgxtcyw",
    connectionName = "bknvpmlisrqxaphkf",
    pendingUploadType = "BlobReference",
});
Response response = client.PendingUpload("sgrzyrpltz", "ozdqisviavgqgfbtnzk", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("pendingUploadId").ToString());
Console.WriteLine(result.GetProperty("pendingUploadType").ToString());
]]></code>
This sample shows how to call PendingUpload and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    pendingUploadType = "BlobReference",
});
Response response = client.PendingUpload("duxoiaywfik", "yzzzt", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("pendingUploadId").ToString());
Console.WriteLine(result.GetProperty("pendingUploadType").ToString());
]]></code></example>
    </member>
    <member name="GetCredentialsAsync(string,string,GetCredentialsRequest,CancellationToken)">
      <example>
This sample shows how to call GetCredentialsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

GetCredentialsRequest body = new GetCredentialsRequest();
Response<AssetCredentialResponse> response = await client.GetCredentialsAsync("vzqmzhfdzfqegdk", "cuiflnznlzybcrc", body);
]]></code>
This sample shows how to call GetCredentialsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

GetCredentialsRequest body = new GetCredentialsRequest();
Response<AssetCredentialResponse> response = await client.GetCredentialsAsync("sbblxkyqnfvdiqacezyygvts", "ikak", body);
]]></code></example>
    </member>
    <member name="GetCredentials(string,string,GetCredentialsRequest,CancellationToken)">
      <example>
This sample shows how to call GetCredentials.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

GetCredentialsRequest body = new GetCredentialsRequest();
Response<AssetCredentialResponse> response = client.GetCredentials("vzqmzhfdzfqegdk", "cuiflnznlzybcrc", body);
]]></code>
This sample shows how to call GetCredentials.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

GetCredentialsRequest body = new GetCredentialsRequest();
Response<AssetCredentialResponse> response = client.GetCredentials("sbblxkyqnfvdiqacezyygvts", "ikak", body);
]]></code></example>
    </member>
    <member name="GetCredentialsAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call GetCredentialsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetCredentialsAsync("vzqmzhfdzfqegdk", "cuiflnznlzybcrc", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
]]></code>
This sample shows how to call GetCredentialsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new object());
Response response = await client.GetCredentialsAsync("sbblxkyqnfvdiqacezyygvts", "ikak", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="GetCredentials(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call GetCredentials and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetCredentials("vzqmzhfdzfqegdk", "cuiflnznlzybcrc", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
]]></code>
This sample shows how to call GetCredentials and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new object());
Response response = client.GetCredentials("sbblxkyqnfvdiqacezyygvts", "ikak", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("blobReference").GetProperty("blobUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("storageAccountArmId").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("sasUri").ToString());
Console.WriteLine(result.GetProperty("blobReference").GetProperty("credential").GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="GetVersionsAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetVersionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (DatasetVersion item in client.GetVersionsAsync("<name>"))
{
}
]]></code>
This sample shows how to call GetVersionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (DatasetVersion item in client.GetVersionsAsync("<name>", continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetVersions(string,string,CancellationToken)">
      <example>
This sample shows how to call GetVersions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (DatasetVersion item in client.GetVersions("<name>"))
{
}
]]></code>
This sample shows how to call GetVersions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (DatasetVersion item in client.GetVersions("<name>", continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetVersionsAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetVersionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetVersionsAsync("<name>", null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
}
]]></code>
This sample shows how to call GetVersionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetVersionsAsync("<name>", "<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("isReference").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetVersions(string,string,RequestContext)">
      <example>
This sample shows how to call GetVersions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetVersions("<name>", null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
}
]]></code>
This sample shows how to call GetVersions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetVersions("<name>", "<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("isReference").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetDatasetVersionsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetDatasetVersionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (DatasetVersion item in client.GetDatasetVersionsAsync())
{
}
]]></code>
This sample shows how to call GetDatasetVersionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (DatasetVersion item in client.GetDatasetVersionsAsync(continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetDatasetVersions(string,CancellationToken)">
      <example>
This sample shows how to call GetDatasetVersions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (DatasetVersion item in client.GetDatasetVersions())
{
}
]]></code>
This sample shows how to call GetDatasetVersions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (DatasetVersion item in client.GetDatasetVersions(continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetDatasetVersionsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDatasetVersionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetDatasetVersionsAsync(null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
}
]]></code>
This sample shows how to call GetDatasetVersionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetDatasetVersionsAsync("<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("isReference").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetDatasetVersions(string,RequestContext)">
      <example>
This sample shows how to call GetDatasetVersions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetDatasetVersions(null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
}
]]></code>
This sample shows how to call GetDatasetVersions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Datasets client = new AIProjectClient(endpoint, credential).GetDatasetsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetDatasetVersions("<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("dataUri").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("isReference").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("version").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>