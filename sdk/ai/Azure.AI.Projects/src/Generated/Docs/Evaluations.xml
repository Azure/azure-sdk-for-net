<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetEvaluationAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetEvaluationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Response<Evaluation> response = await client.GetEvaluationAsync("so");
]]></code></example>
    </member>
    <member name="GetEvaluation(string,CancellationToken)">
      <example>
This sample shows how to call GetEvaluation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Response<Evaluation> response = client.GetEvaluation("so");
]]></code></example>
    </member>
    <member name="GetEvaluationAsync(string,RequestContext)">
      <example>
This sample shows how to call GetEvaluationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Response response = await client.GetEvaluationAsync("so", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="GetEvaluation(string,RequestContext)">
      <example>
This sample shows how to call GetEvaluation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Response response = client.GetEvaluation("so", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CreateRunAsync(Evaluation,CancellationToken)">
      <example>
This sample shows how to call CreateRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Evaluation evaluation = new Evaluation(null, new Dictionary<string, EvaluatorConfiguration>
{
    ["key2735"] = new EvaluatorConfiguration("gujwtvhptykq")
    {
        InitParams = { },
        DataMapping =
        {
            ["key7400"] = "ijkjfvoswni"
        },
    }
})
{
    DisplayName = "ymjxkodggqrhjnmusta",
    Description = "cuviaxytqckkybxwc",
    Tags =
    {
        ["key30"] = "nqrdpedyhkjzgrbtqhxbmkdmlpdf"
    },
    Properties =
    {
        ["key9192"] = "e"
    },
};
Response<Evaluation> response = await client.CreateRunAsync(evaluation);
]]></code>
This sample shows how to call CreateRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Evaluation evaluation = new Evaluation(null, new Dictionary<string, EvaluatorConfiguration>());
Response<Evaluation> response = await client.CreateRunAsync(evaluation);
]]></code></example>
    </member>
    <member name="CreateRun(Evaluation,CancellationToken)">
      <example>
This sample shows how to call CreateRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Evaluation evaluation = new Evaluation(null, new Dictionary<string, EvaluatorConfiguration>
{
    ["key2735"] = new EvaluatorConfiguration("gujwtvhptykq")
    {
        InitParams = { },
        DataMapping =
        {
            ["key7400"] = "ijkjfvoswni"
        },
    }
})
{
    DisplayName = "ymjxkodggqrhjnmusta",
    Description = "cuviaxytqckkybxwc",
    Tags =
    {
        ["key30"] = "nqrdpedyhkjzgrbtqhxbmkdmlpdf"
    },
    Properties =
    {
        ["key9192"] = "e"
    },
};
Response<Evaluation> response = client.CreateRun(evaluation);
]]></code>
This sample shows how to call CreateRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

Evaluation evaluation = new Evaluation(null, new Dictionary<string, EvaluatorConfiguration>());
Response<Evaluation> response = client.CreateRun(evaluation);
]]></code></example>
    </member>
    <member name="CreateRunAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    displayName = "ymjxkodggqrhjnmusta",
    description = "cuviaxytqckkybxwc",
    tags = new
    {
        key30 = "nqrdpedyhkjzgrbtqhxbmkdmlpdf",
    },
    properties = new
    {
        key9192 = "e",
    },
    evaluators = new
    {
        key2735 = new
        {
            id = "gujwtvhptykq",
            initParams = new object(),
            dataMapping = new
            {
                key7400 = "ijkjfvoswni",
            },
        },
    },
});
Response response = await client.CreateRunAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
]]></code>
This sample shows how to call CreateRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    evaluators = new object(),
});
Response response = await client.CreateRunAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CreateRun(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    displayName = "ymjxkodggqrhjnmusta",
    description = "cuviaxytqckkybxwc",
    tags = new
    {
        key30 = "nqrdpedyhkjzgrbtqhxbmkdmlpdf",
    },
    properties = new
    {
        key9192 = "e",
    },
    evaluators = new
    {
        key2735 = new
        {
            id = "gujwtvhptykq",
            initParams = new object(),
            dataMapping = new
            {
                key7400 = "ijkjfvoswni",
            },
        },
    },
});
Response response = client.CreateRun(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
]]></code>
This sample shows how to call CreateRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    evaluators = new object(),
});
Response response = client.CreateRun(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
]]></code></example>
    </member>
    <member name="CreateAgentEvaluationAsync(AgentEvaluationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateAgentEvaluationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

AgentEvaluationRequest evaluation = new AgentEvaluationRequest("ecfcffqsrdhpecocrufffiqz", new Dictionary<string, EvaluatorConfiguration>
{
    ["key2653"] = new EvaluatorConfiguration("gujwtvhptykq")
    {
        InitParams = { },
        DataMapping =
        {
            ["key7400"] = "ijkjfvoswni"
        },
    }
}, "dvcnrcwar")
{
    ThreadId = "cxjjsyhkeezgnaqqyerrdrbbth",
    SamplingConfiguration = new AgentEvaluationSamplingConfiguration("tj", 7F, 8F),
    RedactionConfiguration = new AgentEvaluationRedactionConfiguration
    {
        RedactScoreProperties = true,
    },
};
Response<AgentEvaluation> response = await client.CreateAgentEvaluationAsync(evaluation);
]]></code>
This sample shows how to call CreateAgentEvaluationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

AgentEvaluationRequest evaluation = new AgentEvaluationRequest("ecfcffqsrdhpecocrufffiqz", new Dictionary<string, EvaluatorConfiguration>(), "dvcnrcwar");
Response<AgentEvaluation> response = await client.CreateAgentEvaluationAsync(evaluation);
]]></code></example>
    </member>
    <member name="CreateAgentEvaluation(AgentEvaluationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateAgentEvaluation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

AgentEvaluationRequest evaluation = new AgentEvaluationRequest("ecfcffqsrdhpecocrufffiqz", new Dictionary<string, EvaluatorConfiguration>
{
    ["key2653"] = new EvaluatorConfiguration("gujwtvhptykq")
    {
        InitParams = { },
        DataMapping =
        {
            ["key7400"] = "ijkjfvoswni"
        },
    }
}, "dvcnrcwar")
{
    ThreadId = "cxjjsyhkeezgnaqqyerrdrbbth",
    SamplingConfiguration = new AgentEvaluationSamplingConfiguration("tj", 7F, 8F),
    RedactionConfiguration = new AgentEvaluationRedactionConfiguration
    {
        RedactScoreProperties = true,
    },
};
Response<AgentEvaluation> response = client.CreateAgentEvaluation(evaluation);
]]></code>
This sample shows how to call CreateAgentEvaluation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

AgentEvaluationRequest evaluation = new AgentEvaluationRequest("ecfcffqsrdhpecocrufffiqz", new Dictionary<string, EvaluatorConfiguration>(), "dvcnrcwar");
Response<AgentEvaluation> response = client.CreateAgentEvaluation(evaluation);
]]></code></example>
    </member>
    <member name="CreateAgentEvaluationAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAgentEvaluationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    runId = "ecfcffqsrdhpecocrufffiqz",
    threadId = "cxjjsyhkeezgnaqqyerrdrbbth",
    evaluators = new
    {
        key2653 = new
        {
            id = "gujwtvhptykq",
            initParams = new object(),
            dataMapping = new
            {
                key7400 = "ijkjfvoswni",
            },
        },
    },
    samplingConfiguration = new
    {
        name = "tj",
        samplingPercent = 7F,
        maxRequestRate = 8F,
    },
    redactionConfiguration = new
    {
        redactScoreProperties = true,
    },
    appInsightsConnectionString = "dvcnrcwar",
});
Response response = await client.CreateAgentEvaluationAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call CreateAgentEvaluationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    runId = "ecfcffqsrdhpecocrufffiqz",
    evaluators = new object(),
    appInsightsConnectionString = "dvcnrcwar",
});
Response response = await client.CreateAgentEvaluationAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="CreateAgentEvaluation(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAgentEvaluation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    runId = "ecfcffqsrdhpecocrufffiqz",
    threadId = "cxjjsyhkeezgnaqqyerrdrbbth",
    evaluators = new
    {
        key2653 = new
        {
            id = "gujwtvhptykq",
            initParams = new object(),
            dataMapping = new
            {
                key7400 = "ijkjfvoswni",
            },
        },
    },
    samplingConfiguration = new
    {
        name = "tj",
        samplingPercent = 7F,
        maxRequestRate = 8F,
    },
    redactionConfiguration = new
    {
        redactScoreProperties = true,
    },
    appInsightsConnectionString = "dvcnrcwar",
});
Response response = client.CreateAgentEvaluation(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call CreateAgentEvaluation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

using RequestContent content = RequestContent.Create(new
{
    runId = "ecfcffqsrdhpecocrufffiqz",
    evaluators = new object(),
    appInsightsConnectionString = "dvcnrcwar",
});
Response response = client.CreateAgentEvaluation(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code></example>
    </member>
    <member name="GetEvaluationsAsync(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetEvaluationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

await foreach (Evaluation item in client.GetEvaluationsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetEvaluations(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetEvaluations.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

foreach (Evaluation item in client.GetEvaluations())
{
}
]]></code></example>
    </member>
    <member name="GetEvaluationsAsync(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetEvaluationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

await foreach (BinaryData item in client.GetEvaluationsAsync(null, 8, 21, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
}
]]></code></example>
    </member>
    <member name="GetEvaluations(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetEvaluations and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
Evaluations client = new AIProjectClient(endpoint, credential).GetEvaluationsClient(apiVersion: "2025-05-15-preview");

foreach (BinaryData item in client.GetEvaluations(null, 8, 21, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("data").GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("evaluators").GetProperty("<key>").GetProperty("id").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>