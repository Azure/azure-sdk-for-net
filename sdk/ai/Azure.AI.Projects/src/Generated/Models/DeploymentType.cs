// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.Projects
{
    /// <summary></summary>
    public readonly partial struct DeploymentType : IEquatable<DeploymentType>
    {
        private readonly string _value;
        /// <summary> Model deployment. </summary>
        private const string ModelDeploymentValue = "ModelDeployment";

        /// <summary> Initializes a new instance of <see cref="DeploymentType"/>. </summary>
        /// <param name="value"> The value. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DeploymentType(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        /// <summary> Model deployment. </summary>
        public static DeploymentType ModelDeployment { get; } = new DeploymentType(ModelDeploymentValue);

        /// <summary> Determines if two <see cref="DeploymentType"/> values are the same. </summary>
        /// <param name="left"> The left value to compare. </param>
        /// <param name="right"> The right value to compare. </param>
        public static bool operator ==(DeploymentType left, DeploymentType right) => left.Equals(right);

        /// <summary> Determines if two <see cref="DeploymentType"/> values are not the same. </summary>
        /// <param name="left"> The left value to compare. </param>
        /// <param name="right"> The right value to compare. </param>
        public static bool operator !=(DeploymentType left, DeploymentType right) => !left.Equals(right);

        /// <summary> Converts a string to a <see cref="DeploymentType"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator DeploymentType(string value) => new DeploymentType(value);

        /// <summary> Converts a string to a <see cref="DeploymentType"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator DeploymentType?(string value) => value == null ? null : new DeploymentType(value);

        /// <inheritdoc/>
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DeploymentType other && Equals(other);

        /// <inheritdoc/>
        public bool Equals(DeploymentType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc/>
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        /// <inheritdoc/>
        public override string ToString() => _value;
    }
}
