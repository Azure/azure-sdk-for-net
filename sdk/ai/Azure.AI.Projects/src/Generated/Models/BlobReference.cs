// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary> Blob reference details. </summary>
    public partial class BlobReference
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BlobReference"/>. </summary>
        /// <param name="storageAccountArmId"> ARM ID of the storage account to use. </param>
        /// <param name="credential"> Credential info to access the storage account. </param>
        /// <param name="blobUri"></param>
        internal BlobReference(string storageAccountArmId, BlobReferenceSasCredential credential, Uri blobUri)
        {
            StorageAccountArmId = storageAccountArmId;
            Credential = credential;
            BlobUri = blobUri;
        }

        /// <summary> Initializes a new instance of <see cref="BlobReference"/>. </summary>
        /// <param name="storageAccountArmId"> ARM ID of the storage account to use. </param>
        /// <param name="credential"> Credential info to access the storage account. </param>
        /// <param name="blobUri"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BlobReference(string storageAccountArmId, BlobReferenceSasCredential credential, Uri blobUri, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            StorageAccountArmId = storageAccountArmId;
            Credential = credential;
            BlobUri = blobUri;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> ARM ID of the storage account to use. </summary>
        public string StorageAccountArmId { get; }

        /// <summary> Credential info to access the storage account. </summary>
        public BlobReferenceSasCredential Credential { get; }
    }
}
