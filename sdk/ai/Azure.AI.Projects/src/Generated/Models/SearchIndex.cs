// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary>
    /// Index resource Definition
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="AzureAISearchIndex"/>, <see cref="ManagedAzureAISearchIndex"/>, and <see cref="CosmosDBIndex"/>.
    /// </summary>
    public abstract partial class SearchIndex
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="SearchIndex"/>. </summary>
        /// <param name="type"> Type of index. </param>
        private protected SearchIndex(IndexType @type)
        {
            Type = @type;
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="SearchIndex"/>. </summary>
        /// <param name="type"> Type of index. </param>
        /// <param name="id"> Asset ID, a unique identifier for the asset. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="version"> The version of the resource. </param>
        /// <param name="description"> The asset description text. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal SearchIndex(IndexType @type, string id, string name, string version, string description, IDictionary<string, string> tags, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Type = @type;
            Id = id;
            Name = name;
            Version = version;
            Description = description;
            Tags = tags;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Type of index. </summary>
        internal IndexType Type { get; set; }

        /// <summary> Asset ID, a unique identifier for the asset. </summary>
        public string Id { get; }

        /// <summary> The name of the resource. </summary>
        public string Name { get; }

        /// <summary> The version of the resource. </summary>
        public string Version { get; }

        /// <summary> The asset description text. </summary>
        public string Description { get; set; }

        /// <summary> Tag dictionary. Tags can be added, removed, and updated. </summary>
        public IDictionary<string, string> Tags { get; }
    }
}
