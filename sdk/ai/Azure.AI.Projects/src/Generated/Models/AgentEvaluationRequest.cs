// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary> Evaluation request for agent run. </summary>
    public partial class AgentEvaluationRequest
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AgentEvaluationRequest"/>. </summary>
        /// <param name="runId"> Identifier of the agent run. </param>
        /// <param name="evaluators"> Evaluators to be used for the evaluation. </param>
        /// <param name="appInsightsConnectionString"> Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="runId"/>, <paramref name="evaluators"/> or <paramref name="appInsightsConnectionString"/> is null. </exception>
        public AgentEvaluationRequest(string runId, IDictionary<string, EvaluatorConfiguration> evaluators, string appInsightsConnectionString)
        {
            Argument.AssertNotNull(runId, nameof(runId));
            Argument.AssertNotNull(evaluators, nameof(evaluators));
            Argument.AssertNotNull(appInsightsConnectionString, nameof(appInsightsConnectionString));

            RunId = runId;
            Evaluators = evaluators;
            AppInsightsConnectionString = appInsightsConnectionString;
        }

        /// <summary> Initializes a new instance of <see cref="AgentEvaluationRequest"/>. </summary>
        /// <param name="runId"> Identifier of the agent run. </param>
        /// <param name="threadId"> Identifier of the agent thread. This field is mandatory currently, but it will be optional in the future. </param>
        /// <param name="evaluators"> Evaluators to be used for the evaluation. </param>
        /// <param name="samplingConfiguration"> Sampling configuration for the evaluation. </param>
        /// <param name="redactionConfiguration"> Redaction configuration for the evaluation. </param>
        /// <param name="appInsightsConnectionString"> Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AgentEvaluationRequest(string runId, string threadId, IDictionary<string, EvaluatorConfiguration> evaluators, AgentEvaluationSamplingConfiguration samplingConfiguration, AgentEvaluationRedactionConfiguration redactionConfiguration, string appInsightsConnectionString, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            RunId = runId;
            ThreadId = threadId;
            Evaluators = evaluators;
            SamplingConfiguration = samplingConfiguration;
            RedactionConfiguration = redactionConfiguration;
            AppInsightsConnectionString = appInsightsConnectionString;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Identifier of the agent run. </summary>
        public string RunId { get; }

        /// <summary> Identifier of the agent thread. This field is mandatory currently, but it will be optional in the future. </summary>
        public string ThreadId { get; set; }

        /// <summary> Evaluators to be used for the evaluation. </summary>
        public IDictionary<string, EvaluatorConfiguration> Evaluators { get; }

        /// <summary> Sampling configuration for the evaluation. </summary>
        public AgentEvaluationSamplingConfiguration SamplingConfiguration { get; set; }

        /// <summary> Redaction configuration for the evaluation. </summary>
        public AgentEvaluationRedactionConfiguration RedactionConfiguration { get; set; }

        /// <summary> Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs. </summary>
        public string AppInsightsConnectionString { get; }
    }
}
