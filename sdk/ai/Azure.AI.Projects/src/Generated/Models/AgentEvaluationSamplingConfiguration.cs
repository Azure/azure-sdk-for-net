// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary> Definition for sampling strategy. </summary>
    public partial class AgentEvaluationSamplingConfiguration
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AgentEvaluationSamplingConfiguration"/>. </summary>
        /// <param name="name"> Name of the sampling strategy. </param>
        /// <param name="samplingPercent"> Percentage of sampling per hour (0-100). </param>
        /// <param name="maxRequestRate"> Maximum request rate per hour (0 to 1000). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public AgentEvaluationSamplingConfiguration(string name, float samplingPercent, float maxRequestRate)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            SamplingPercent = samplingPercent;
            MaxRequestRate = maxRequestRate;
        }

        /// <summary> Initializes a new instance of <see cref="AgentEvaluationSamplingConfiguration"/>. </summary>
        /// <param name="name"> Name of the sampling strategy. </param>
        /// <param name="samplingPercent"> Percentage of sampling per hour (0-100). </param>
        /// <param name="maxRequestRate"> Maximum request rate per hour (0 to 1000). </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AgentEvaluationSamplingConfiguration(string name, float samplingPercent, float maxRequestRate, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            SamplingPercent = samplingPercent;
            MaxRequestRate = maxRequestRate;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the sampling strategy. </summary>
        public string Name { get; }

        /// <summary> Percentage of sampling per hour (0-100). </summary>
        public float SamplingPercent { get; }

        /// <summary> Maximum request rate per hour (0 to 1000). </summary>
        public float MaxRequestRate { get; }
    }
}
