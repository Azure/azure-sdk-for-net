// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary> Represents the response for a pending upload request. </summary>
    public partial class PendingUploadResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="PendingUploadResult"/>. </summary>
        /// <param name="blobReference"> Container-level read, write, list SAS. </param>
        /// <param name="pendingUploadId"> ID for this upload request. </param>
        internal PendingUploadResult(BlobReference blobReference, string pendingUploadId)
        {
            BlobReference = blobReference;
            PendingUploadId = pendingUploadId;
        }

        /// <summary> Initializes a new instance of <see cref="PendingUploadResult"/>. </summary>
        /// <param name="blobReference"> Container-level read, write, list SAS. </param>
        /// <param name="pendingUploadId"> ID for this upload request. </param>
        /// <param name="version"> Version of asset to be created if user did not specify version when initially creating upload. </param>
        /// <param name="pendingUploadType"> BlobReference is the only supported type. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal PendingUploadResult(BlobReference blobReference, string pendingUploadId, string version, PendingUploadType pendingUploadType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            BlobReference = blobReference;
            PendingUploadId = pendingUploadId;
            Version = version;
            PendingUploadType = pendingUploadType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Container-level read, write, list SAS. </summary>
        public BlobReference BlobReference { get; }

        /// <summary> ID for this upload request. </summary>
        public string PendingUploadId { get; }

        /// <summary> Version of asset to be created if user did not specify version when initially creating upload. </summary>
        public string Version { get; }

        /// <summary> BlobReference is the only supported type. </summary>
        public PendingUploadType PendingUploadType { get; } = "BlobReference";
    }
}
