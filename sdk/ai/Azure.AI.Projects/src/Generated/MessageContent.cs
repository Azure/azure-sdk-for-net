// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

<<<<<<<< HEAD:sdk/ai/Azure.AI.Projects/src/Generated/MessageContent.cs
namespace Azure.AI.Projects
{
    /// <summary>
    /// An abstract representation of a single item of thread message content.
    /// Please note <see cref="MessageContent"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="MessageImageFileContent"/> and <see cref="MessageTextContent"/>.
    /// </summary>
    public abstract partial class MessageContent
========
namespace Azure.ResourceManager.ContainerOrchestratorRuntime.Models
{
    /// <summary> Properties for the service resource. </summary>
    public partial class ConnectedClusterServiceProperties
>>>>>>>> 0f03b6ad11f ([ACS][Common] OPS - Dual Persona (#46383)):sdk/containerorchestratorruntime/Azure.ResourceManager.ContainerOrchestratorRuntime/src/Generated/Models/ConnectedClusterServiceProperties.cs
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

<<<<<<<< HEAD:sdk/ai/Azure.AI.Projects/src/Generated/MessageContent.cs
        /// <summary> Initializes a new instance of <see cref="MessageContent"/>. </summary>
        protected MessageContent()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MessageContent"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MessageContent(string type, IDictionary<string, BinaryData> serializedAdditionalRawData)
========
        /// <summary> Initializes a new instance of <see cref="ConnectedClusterServiceProperties"/>. </summary>
        public ConnectedClusterServiceProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ConnectedClusterServiceProperties"/>. </summary>
        /// <param name="rpObjectId"> The object id of the service principal of the RP provisioned in the tenant. </param>
        /// <param name="provisioningState"> Resource provision state. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ConnectedClusterServiceProperties(Guid? rpObjectId, ContainerOrchestratorProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
>>>>>>>> 0f03b6ad11f ([ACS][Common] OPS - Dual Persona (#46383)):sdk/containerorchestratorruntime/Azure.ResourceManager.ContainerOrchestratorRuntime/src/Generated/Models/ConnectedClusterServiceProperties.cs
        {
            RpObjectId = rpObjectId;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The object id of the service principal of the RP provisioned in the tenant. </summary>
        public Guid? RpObjectId { get; }
        /// <summary> Resource provision state. </summary>
        public ContainerOrchestratorProvisioningState? ProvisioningState { get; }
    }
}
