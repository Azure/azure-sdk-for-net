// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary>
    /// A record of a call to a Microsoft Fabric tool, issued by the model in evaluation of a defined tool, that represents
    /// executed Microsoft Fabric operations.
    /// </summary>
    public partial class RunStepMicrosoftFabricToolCall : RunStepToolCall
    {
        /// <summary> Initializes a new instance of <see cref="RunStepMicrosoftFabricToolCall"/>. </summary>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when you submit tool outputs. </param>
        /// <param name="microsoftFabric"> Reserved for future use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="microsoftFabric"/> is null. </exception>
        internal RunStepMicrosoftFabricToolCall(string id, IReadOnlyDictionary<string, string> microsoftFabric) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(microsoftFabric, nameof(microsoftFabric));

            Type = "fabric_aiskill";
            MicrosoftFabric = microsoftFabric;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepMicrosoftFabricToolCall"/>. </summary>
        /// <param name="type"> The object type. </param>
        /// <param name="id"> The ID of the tool call. This ID must be referenced when you submit tool outputs. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="microsoftFabric"> Reserved for future use. </param>
        internal RunStepMicrosoftFabricToolCall(string type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyDictionary<string, string> microsoftFabric) : base(type, id, serializedAdditionalRawData)
        {
            MicrosoftFabric = microsoftFabric;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepMicrosoftFabricToolCall"/> for deserialization. </summary>
        internal RunStepMicrosoftFabricToolCall()
        {
        }

        /// <summary> Reserved for future use. </summary>
        public IReadOnlyDictionary<string, string> MicrosoftFabric { get; }
    }
}
