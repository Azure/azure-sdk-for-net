// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.Core.Foundations;

namespace Azure.AI.Projects
{
    internal partial class DeploymentsOperationsGetDeploymentsAsyncCollectionResult : AsyncCollectionResult
    {
        private readonly DeploymentsOperations _client;
        private readonly string _modelPublisher;
        private readonly string _modelName;
        private readonly string _deploymentType;
        private readonly string _clientRequestId;
        private readonly RequestOptions _options;

        /// <summary> Initializes a new instance of DeploymentsOperationsGetDeploymentsAsyncCollectionResult, which is used to iterate over the pages of a collection. </summary>
        /// <param name="client"> The DeploymentsOperations client used to send requests. </param>
        /// <param name="modelPublisher"> Model publisher to filter models by. </param>
        /// <param name="modelName"> Model name (the publisher specific name) to filter models by. </param>
        /// <param name="deploymentType"> Type of deployment to filter list by. </param>
        /// <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        /// <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        public DeploymentsOperationsGetDeploymentsAsyncCollectionResult(DeploymentsOperations client, string modelPublisher, string modelName, string deploymentType, string clientRequestId, RequestOptions options)
        {
            _client = client;
            _modelPublisher = modelPublisher;
            _modelName = modelName;
            _deploymentType = deploymentType;
            _clientRequestId = clientRequestId;
            _options = options;
        }

        /// <summary> Gets the raw pages of the collection. </summary>
        /// <returns> The raw pages of the collection. </returns>
        public override async IAsyncEnumerable<ClientResult> GetRawPagesAsync()
        {
            PipelineMessage message = _client.CreateGetDeploymentsRequest(_modelPublisher, _modelName, _deploymentType, _clientRequestId, _options);
            Uri nextPageUri = null;
            while (true)
            {
                ClientResult result = ClientResult.FromResponse(await _client.Pipeline.ProcessMessageAsync(message, _options).ConfigureAwait(false));
                yield return result;

                nextPageUri = ((PagedDeployment)result).NextLink;
                if (nextPageUri == null)
                {
                    yield break;
                }
                message = _client.CreateNextGetDeploymentsRequest(nextPageUri, _modelPublisher, _modelName, _deploymentType, _clientRequestId, _options);
            }
        }

        /// <summary> Gets the continuation token from the specified page. </summary>
        /// <param name="page"></param>
        /// <returns> The continuation token for the specified page. </returns>
        public override ContinuationToken GetContinuationToken(ClientResult page)
        {
            Uri nextPage = ((PagedDeployment)page).NextLink;
            if (nextPage != null)
            {
                return ContinuationToken.FromBytes(BinaryData.FromString(nextPage.AbsoluteUri));
            }
            else
            {
                return null;
            }
        }
    }
}
