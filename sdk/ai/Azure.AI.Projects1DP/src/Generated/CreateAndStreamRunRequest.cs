// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects1DP
{
    /// <summary> The CreateAndStreamRunRequest. </summary>
    internal partial class CreateAndStreamRunRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CreateAndStreamRunRequest"/>. </summary>
        /// <param name="agentId"> Unique identifier for the agent responsible for the run. </param>
        /// <param name="createdAt"> Timestamp when the run was initiated (Unix time). </param>
        /// <param name="completedAt"> Timestamp when the run finished processing (Unix time). </param>
        /// <param name="runInputs"> The inputs that were used to start this run. </param>
        /// <param name="runOutputs"> The final outcome of this run, including status, output messages, token usage. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="agentId"/>, <paramref name="runInputs"/> or <paramref name="runOutputs"/> is null. </exception>
        internal CreateAndStreamRunRequest(string agentId, long createdAt, long completedAt, RunInputs runInputs, RunOutputs runOutputs)
        {
            Argument.AssertNotNull(agentId, nameof(agentId));
            Argument.AssertNotNull(runInputs, nameof(runInputs));
            Argument.AssertNotNull(runOutputs, nameof(runOutputs));

            AgentId = agentId;
            CreatedAt = createdAt;
            CompletedAt = completedAt;
            RunInputs = runInputs;
            RunOutputs = runOutputs;
        }

        /// <summary> Initializes a new instance of <see cref="CreateAndStreamRunRequest"/>. </summary>
        /// <param name="agentId"> Unique identifier for the agent responsible for the run. </param>
        /// <param name="createdAt"> Timestamp when the run was initiated (Unix time). </param>
        /// <param name="completedAt"> Timestamp when the run finished processing (Unix time). </param>
        /// <param name="runInputs"> The inputs that were used to start this run. </param>
        /// <param name="runOutputs"> The final outcome of this run, including status, output messages, token usage. </param>
        /// <param name="options"> Optional configuration for run generation. </param>
        /// <param name="userId"> Identifier for the user making the request. </param>
        /// <param name="store"> Flag indicating whether to store the run and associated messages. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CreateAndStreamRunRequest(string agentId, long createdAt, long completedAt, RunInputs runInputs, RunOutputs runOutputs, RunOptions options, string userId, bool? store, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AgentId = agentId;
            CreatedAt = createdAt;
            CompletedAt = completedAt;
            RunInputs = runInputs;
            RunOutputs = runOutputs;
            Options = options;
            UserId = userId;
            Store = store;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CreateAndStreamRunRequest"/> for deserialization. </summary>
        internal CreateAndStreamRunRequest()
        {
        }

        /// <summary> Unique identifier for the agent responsible for the run. </summary>
        public string AgentId { get; }
        /// <summary> Timestamp when the run was initiated (Unix time). </summary>
        public long CreatedAt { get; }
        /// <summary> Timestamp when the run finished processing (Unix time). </summary>
        public long CompletedAt { get; }
        /// <summary> The inputs that were used to start this run. </summary>
        public RunInputs RunInputs { get; }
        /// <summary> The final outcome of this run, including status, output messages, token usage. </summary>
        public RunOutputs RunOutputs { get; }
        /// <summary> Optional configuration for run generation. </summary>
        public RunOptions Options { get; }
        /// <summary> Identifier for the user making the request. </summary>
        public string UserId { get; }
        /// <summary> Flag indicating whether to store the run and associated messages. </summary>
        public bool? Store { get; }
    }
}
