// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SqlMigrationManagementClient.Samples
{
    public partial class Samples_DatabaseMigrationsMongoToCosmosDbRUMongoClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDatabaseMigrationsMongoToCosmosDbRUMongo_ShortVersion()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Response response = client.GetDatabaseMigrationsMongoToCosmosDbRUMongo("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDatabaseMigrationsMongoToCosmosDbRUMongo_ShortVersion_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Response response = await client.GetDatabaseMigrationsMongoToCosmosDbRUMongoAsync("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDatabaseMigrationsMongoToCosmosDbRUMongo_AllParameters()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Response response = client.GetDatabaseMigrationsMongoToCosmosDbRUMongo("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDatabaseMigrationsMongoToCosmosDbRUMongo_AllParameters_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Response response = await client.GetDatabaseMigrationsMongoToCosmosDbRUMongoAsync("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetForScope_ShortVersion()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            foreach (BinaryData item in client.GetForScope("<resourceGroupName>", "<targetResourceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetForScope_ShortVersion_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            await foreach (BinaryData item in client.GetForScopeAsync("<resourceGroupName>", "<targetResourceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetForScope_AllParameters()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            foreach (BinaryData item in client.GetForScope("<resourceGroupName>", "<targetResourceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetForScope_AllParameters_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            await foreach (BinaryData item in client.GetForScopeAsync("<resourceGroupName>", "<targetResourceName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create_ShortVersion()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            using RequestContent content = RequestContent.Create(new object());
            Operation<BinaryData> operation = client.Create(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Create_ShortVersion_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            using RequestContent content = RequestContent.Create(new object());
            Operation<BinaryData> operation = await client.CreateAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create_AllParameters()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    sourceMongoConnection = new
                    {
                        host = "<host>",
                        port = 1234,
                        userName = "<userName>",
                        password = "<password>",
                        useSsl = true,
                        connectionString = "<connectionString>",
                    },
                    collectionList = new object[]
            {
new
{
sourceDatabase = "<sourceDatabase>",
sourceCollection = "<sourceCollection>",
targetDatabase = "<targetDatabase>",
targetCollection = "<targetCollection>",
}
            },
                    kind = "MongoToCosmosDbMongo",
                    scope = "<scope>",
                    migrationService = "<migrationService>",
                    migrationOperationId = "<migrationOperationId>",
                    provisioningError = "<provisioningError>",
                },
            });
            Operation<BinaryData> operation = client.Create(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Create_AllParameters_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    sourceMongoConnection = new
                    {
                        host = "<host>",
                        port = 1234,
                        userName = "<userName>",
                        password = "<password>",
                        useSsl = true,
                        connectionString = "<connectionString>",
                    },
                    collectionList = new object[]
            {
new
{
sourceDatabase = "<sourceDatabase>",
sourceCollection = "<sourceCollection>",
targetDatabase = "<targetDatabase>",
targetCollection = "<targetCollection>",
}
            },
                    kind = "MongoToCosmosDbMongo",
                    scope = "<scope>",
                    migrationService = "<migrationService>",
                    migrationOperationId = "<migrationOperationId>",
                    provisioningError = "<provisioningError>",
                },
            });
            Operation<BinaryData> operation = await client.CreateAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_ShortVersion()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_ShortVersion_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", force: true);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            DatabaseMigrationsMongoToCosmosDbRUMongoClient client = new DatabaseMigrationsMongoToCosmosDbRUMongoClient("<SubscriptionId>");

            Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", force: true);
        }
    }
}
