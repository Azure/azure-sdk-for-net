<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDatabaseMigrationsSqlDbAsync(string,string,string,Guid?,string,RequestContext)">
      <example>
This sample shows how to call GetDatabaseMigrationsSqlDbAsync and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Response response = await client.GetDatabaseMigrationsSqlDbAsync("<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetDatabaseMigrationsSqlDbAsync with all parameters and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Response response = await client.GetDatabaseMigrationsSqlDbAsync("<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<expand>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("migrationState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("sqlDataCopyErrors")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("tableName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("parallelCopyType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("usedParallelCopies").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataWritten").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsCopied").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyStart").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyThroughput").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyDuration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offlineConfiguration").GetProperty("offline").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("tableList")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceDatabaseName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceServerName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetDatabaseCollation").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="GetDatabaseMigrationsSqlDb(string,string,string,Guid?,string,RequestContext)">
      <example>
This sample shows how to call GetDatabaseMigrationsSqlDb and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Response response = client.GetDatabaseMigrationsSqlDb("<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetDatabaseMigrationsSqlDb with all parameters and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Response response = client.GetDatabaseMigrationsSqlDb("<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<expand>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("migrationState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("sqlDataCopyErrors")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("tableName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("parallelCopyType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("usedParallelCopies").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataWritten").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsCopied").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyStart").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyThroughput").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyDuration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offlineConfiguration").GetProperty("offline").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("tableList")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceDatabaseName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceServerName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetDatabaseCollation").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = await client.CreateOrUpdateAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        targetSqlConnection = new
        {
            dataSource = "<dataSource>",
            authentication = "<authentication>",
            userName = "<userName>",
            password = "<password>",
            encryptConnection = true,
            trustServerCertificate = true,
        },
        tableList = new object[]
        {
            "<tableList>"
        },
        sourceDatabaseName = "<sourceDatabaseName>",
        targetDatabaseCollation = "<targetDatabaseCollation>",
        kind = "SqlDb",
        scope = "<scope>",
        migrationService = "<migrationService>",
        migrationOperationId = "<migrationOperationId>",
        provisioningError = "<provisioningError>",
    },
});
Operation<BinaryData> operation = await client.CreateOrUpdateAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("migrationState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("sqlDataCopyErrors")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("tableName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("parallelCopyType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("usedParallelCopies").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataWritten").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsCopied").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyStart").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyThroughput").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyDuration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offlineConfiguration").GetProperty("offline").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("tableList")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceDatabaseName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceServerName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetDatabaseCollation").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = client.CreateOrUpdate(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        targetSqlConnection = new
        {
            dataSource = "<dataSource>",
            authentication = "<authentication>",
            userName = "<userName>",
            password = "<password>",
            encryptConnection = true,
            trustServerCertificate = true,
        },
        tableList = new object[]
        {
            "<tableList>"
        },
        sourceDatabaseName = "<sourceDatabaseName>",
        targetDatabaseCollation = "<targetDatabaseCollation>",
        kind = "SqlDb",
        scope = "<scope>",
        migrationService = "<migrationService>",
        migrationOperationId = "<migrationOperationId>",
        provisioningError = "<provisioningError>",
    },
});
Operation<BinaryData> operation = client.CreateOrUpdate(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("migrationState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("sqlDataCopyErrors")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("tableName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("parallelCopyType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("usedParallelCopies").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataWritten").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsCopied").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyStart").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyThroughput").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyDuration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offlineConfiguration").GetProperty("offline").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("tableList")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceDatabaseName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceServerName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetDatabaseCollation").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(WaitUntil,string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>");
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", force: true);
]]></code></example>
    </member>
    <member name="Delete(WaitUntil,string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>");
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", force: true);
]]></code></example>
    </member>
    <member name="CancelAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CancelAsync.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation operation = await client.CancelAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
]]></code>
This sample shows how to call CancelAsync with all parameters and request content.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    migrationOperationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
});
Operation operation = await client.CancelAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
]]></code></example>
    </member>
    <member name="Cancel(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Cancel.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation operation = client.Cancel(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
]]></code>
This sample shows how to call Cancel with all parameters and request content.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    migrationOperationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
});
Operation operation = client.Cancel(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
]]></code></example>
    </member>
    <member name="RetryAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RetryAsync and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = await client.RetryAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RetryAsync with all parameters and request content and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    migrationOperationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
});
Operation<BinaryData> operation = await client.RetryAsync(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("migrationState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("sqlDataCopyErrors")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("tableName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("parallelCopyType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("usedParallelCopies").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataWritten").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsCopied").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyStart").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyThroughput").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyDuration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offlineConfiguration").GetProperty("offline").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("tableList")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceDatabaseName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceServerName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetDatabaseCollation").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="Retry(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Retry and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = client.Retry(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Retry with all parameters and request content and parse the result.
<code><![CDATA[
DatabaseMigrationsSqlDbClient client = new DatabaseMigrationsSqlDbClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    migrationOperationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
});
Operation<BinaryData> operation = client.Retry(WaitUntil.Completed, "<resourceGroupName>", "<sqlDbInstanceName>", "<targetDbName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("migrationState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("sqlDataCopyErrors")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("tableName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("parallelCopyType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("usedParallelCopies").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("dataWritten").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsRead").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("rowsCopied").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyStart").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyThroughput").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatusDetails").GetProperty("listOfCopyProgressDetails")[0].GetProperty("copyDuration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offlineConfiguration").GetProperty("offline").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("tableList")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("dataSource").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("authentication").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("encryptConnection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceSqlConnection").GetProperty("trustServerCertificate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceDatabaseName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceServerName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetDatabaseCollation").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
  </members>
</doc>