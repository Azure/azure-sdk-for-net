<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDatabaseMigrationsMongoToCosmosDbvCoreMongoAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDatabaseMigrationsMongoToCosmosDbvCoreMongoAsync and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Response response = await client.GetDatabaseMigrationsMongoToCosmosDbvCoreMongoAsync("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetDatabaseMigrationsMongoToCosmosDbvCoreMongoAsync with all parameters and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Response response = await client.GetDatabaseMigrationsMongoToCosmosDbvCoreMongoAsync("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="GetDatabaseMigrationsMongoToCosmosDbvCoreMongo(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDatabaseMigrationsMongoToCosmosDbvCoreMongo and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Response response = client.GetDatabaseMigrationsMongoToCosmosDbvCoreMongo("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetDatabaseMigrationsMongoToCosmosDbvCoreMongo with all parameters and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Response response = client.GetDatabaseMigrationsMongoToCosmosDbvCoreMongo("<resourceGroupName>", "<targetResourceName>", "<migrationName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="GetForScopeAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetForScopeAsync and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

await foreach (BinaryData item in client.GetForScopeAsync("<resourceGroupName>", "<targetResourceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetForScopeAsync with all parameters and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

await foreach (BinaryData item in client.GetForScopeAsync("<resourceGroupName>", "<targetResourceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
}
]]></code></example>
    </member>
    <member name="GetForScope(string,string,RequestContext)">
      <example>
This sample shows how to call GetForScope and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

foreach (BinaryData item in client.GetForScope("<resourceGroupName>", "<targetResourceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetForScope with all parameters and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

foreach (BinaryData item in client.GetForScope("<resourceGroupName>", "<targetResourceName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
}
]]></code></example>
    </member>
    <member name="CreateAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = await client.CreateAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateAsync with all parameters and request content and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        sourceMongoConnection = new
        {
            host = "<host>",
            port = 1234,
            userName = "<userName>",
            password = "<password>",
            useSsl = true,
            connectionString = "<connectionString>",
        },
        collectionList = new object[]
        {
            new
            {
                sourceDatabase = "<sourceDatabase>",
                sourceCollection = "<sourceCollection>",
                targetDatabase = "<targetDatabase>",
                targetCollection = "<targetCollection>",
            }
        },
        kind = "MongoToCosmosDbMongo",
        scope = "<scope>",
        migrationService = "<migrationService>",
        migrationOperationId = "<migrationOperationId>",
        provisioningError = "<provisioningError>",
    },
});
Operation<BinaryData> operation = await client.CreateAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="Create(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Create and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = client.Create(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Create with all parameters and request content and parse the result.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

using RequestContent content = RequestContent.Create(new
{
    properties = new
    {
        sourceMongoConnection = new
        {
            host = "<host>",
            port = 1234,
            userName = "<userName>",
            password = "<password>",
            useSsl = true,
            connectionString = "<connectionString>",
        },
        collectionList = new object[]
        {
            new
            {
                sourceDatabase = "<sourceDatabase>",
                sourceCollection = "<sourceCollection>",
                targetDatabase = "<targetDatabase>",
                targetCollection = "<targetCollection>",
            }
        },
        kind = "MongoToCosmosDbMongo",
        scope = "<scope>",
        migrationService = "<migrationService>",
        migrationOperationId = "<migrationOperationId>",
        provisioningError = "<provisioningError>",
    },
});
Operation<BinaryData> operation = client.Create(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("host").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("port").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("userName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("password").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("useSsl").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("targetMongoConnection").GetProperty("connectionString").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("sourceCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetDatabase").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("targetCollection").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("migrationError").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("sourceDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("processedDocumentCount").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("collectionList")[0].GetProperty("migrationProgressDetails").GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("startedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endedOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationService").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationOperationId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("migrationFailureError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningError").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(WaitUntil,string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>");
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", force: true);
]]></code></example>
    </member>
    <member name="Delete(WaitUntil,string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>");
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
DatabaseMigrationsMongoToCosmosDbvCoreMongoClient client = new DatabaseMigrationsMongoToCosmosDbvCoreMongoClient("<SubscriptionId>");

Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<targetResourceName>", "<migrationName>", force: true);
]]></code></example>
    </member>
  </members>
</doc>