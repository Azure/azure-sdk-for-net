// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Results for checksum based Data Integrity validation results. </summary>
    public partial class DataIntegrityValidationResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DataIntegrityValidationResult"/>. </summary>
        internal DataIntegrityValidationResult()
        {
            FailedObjects = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="DataIntegrityValidationResult"/>. </summary>
        /// <param name="failedObjects"> List of failed table names of source and target pair. </param>
        /// <param name="validationErrors"> List of errors that happened while performing data integrity validation. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DataIntegrityValidationResult(IReadOnlyDictionary<string, string> failedObjects, ValidationError validationErrors, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            FailedObjects = failedObjects;
            ValidationErrors = validationErrors;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> List of failed table names of source and target pair. </summary>
        public IReadOnlyDictionary<string, string> FailedObjects { get; }
        /// <summary> List of errors that happened while performing data integrity validation. </summary>
        public ValidationError ValidationErrors { get; }
    }
}
