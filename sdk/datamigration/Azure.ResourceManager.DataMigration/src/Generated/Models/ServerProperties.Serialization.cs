// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class ServerProperties
    {
        internal static ServerProperties DeserializeServerProperties(JsonElement element)
        {
            Optional<string> serverPlatform = default;
            Optional<string> serverName = default;
            Optional<string> serverVersion = default;
            Optional<string> serverEdition = default;
            Optional<string> serverOperatingSystemVersion = default;
            Optional<int> serverDatabaseCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("serverPlatform"))
                {
                    serverPlatform = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serverName"))
                {
                    serverName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serverVersion"))
                {
                    serverVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serverEdition"))
                {
                    serverEdition = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serverOperatingSystemVersion"))
                {
                    serverOperatingSystemVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serverDatabaseCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    serverDatabaseCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new ServerProperties(serverPlatform.Value, serverName.Value, serverVersion.Value, serverEdition.Value, serverOperatingSystemVersion.Value, Optional.ToNullable(serverDatabaseCount));
        }
    }
}
