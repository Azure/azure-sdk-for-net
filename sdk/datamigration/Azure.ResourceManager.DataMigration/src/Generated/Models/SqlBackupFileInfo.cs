// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Information of backup file. </summary>
    public partial class SqlBackupFileInfo
    {
        /// <summary> Initializes a new instance of <see cref="SqlBackupFileInfo"/>. </summary>
        internal SqlBackupFileInfo()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SqlBackupFileInfo"/>. </summary>
        /// <param name="fileName"> File name. </param>
        /// <param name="status"> Status of the file. (Initial, Uploading, Uploaded, Restoring, Restored or Skipped). </param>
        /// <param name="totalSize"> File size in bytes. </param>
        /// <param name="dataRead"> Bytes read. </param>
        /// <param name="dataWritten"> Bytes written. </param>
        /// <param name="copyThroughput"> Copy throughput in KBps. </param>
        /// <param name="copyDuration"> Copy Duration in seconds. </param>
        /// <param name="familySequenceNumber"> Media family sequence number. </param>
        internal SqlBackupFileInfo(string fileName, string status, long? totalSize, long? dataRead, long? dataWritten, double? copyThroughput, int? copyDuration, int? familySequenceNumber)
        {
            FileName = fileName;
            Status = status;
            TotalSize = totalSize;
            DataRead = dataRead;
            DataWritten = dataWritten;
            CopyThroughput = copyThroughput;
            CopyDuration = copyDuration;
            FamilySequenceNumber = familySequenceNumber;
        }

        /// <summary> File name. </summary>
        public string FileName { get; }
        /// <summary> Status of the file. (Initial, Uploading, Uploaded, Restoring, Restored or Skipped). </summary>
        public string Status { get; }
        /// <summary> File size in bytes. </summary>
        public long? TotalSize { get; }
        /// <summary> Bytes read. </summary>
        public long? DataRead { get; }
        /// <summary> Bytes written. </summary>
        public long? DataWritten { get; }
        /// <summary> Copy throughput in KBps. </summary>
        public double? CopyThroughput { get; }
        /// <summary> Copy Duration in seconds. </summary>
        public int? CopyDuration { get; }
        /// <summary> Media family sequence number. </summary>
        public int? FamilySequenceNumber { get; }
    }
}
