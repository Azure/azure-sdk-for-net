// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Output of the task that gets TDE certificates in Base64 encoded format. </summary>
    public partial class GetTdeCertificatesSqlTaskOutput
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="GetTdeCertificatesSqlTaskOutput"/>. </summary>
        internal GetTdeCertificatesSqlTaskOutput()
        {
            ValidationErrors = new ChangeTrackingList<ReportableException>();
        }

        /// <summary> Initializes a new instance of <see cref="GetTdeCertificatesSqlTaskOutput"/>. </summary>
        /// <param name="base64EncodedCertificates"> Mapping from certificate name to base 64 encoded format. </param>
        /// <param name="validationErrors"> Validation errors. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal GetTdeCertificatesSqlTaskOutput(string base64EncodedCertificates, IReadOnlyList<ReportableException> validationErrors, Dictionary<string, BinaryData> rawData)
        {
            Base64EncodedCertificates = base64EncodedCertificates;
            ValidationErrors = validationErrors;
            _rawData = rawData;
        }

        /// <summary> Mapping from certificate name to base 64 encoded format. </summary>
        public string Base64EncodedCertificates { get; }
        /// <summary> Validation errors. </summary>
        public IReadOnlyList<ReportableException> ValidationErrors { get; }
    }
}
