// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class ReportableException
    {
        internal static ReportableException DeserializeReportableException(JsonElement element)
        {
            Optional<string> message = default;
            Optional<string> actionableMessage = default;
            Optional<string> filePath = default;
            Optional<string> lineNumber = default;
            Optional<int> hResult = default;
            Optional<string> stackTrace = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("message"))
                {
                    message = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("actionableMessage"))
                {
                    actionableMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("filePath"))
                {
                    filePath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lineNumber"))
                {
                    lineNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hResult"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hResult = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("stackTrace"))
                {
                    stackTrace = property.Value.GetString();
                    continue;
                }
            }
            return new ReportableException(message.Value, actionableMessage.Value, filePath.Value, lineNumber.Value, Optional.ToNullable(hResult), stackTrace.Value);
        }
    }
}
