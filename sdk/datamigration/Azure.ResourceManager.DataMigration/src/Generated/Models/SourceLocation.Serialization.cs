// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class SourceLocation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(FileShare))
            {
                writer.WritePropertyName("fileShare");
                writer.WriteObjectValue(FileShare);
            }
            if (Optional.IsDefined(AzureBlob))
            {
                writer.WritePropertyName("azureBlob");
                writer.WriteObjectValue(AzureBlob);
            }
            writer.WriteEndObject();
        }

        internal static SourceLocation DeserializeSourceLocation(JsonElement element)
        {
            Optional<SqlFileShare> fileShare = default;
            Optional<AzureBlob> azureBlob = default;
            Optional<string> fileStorageType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("fileShare"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    fileShare = SqlFileShare.DeserializeSqlFileShare(property.Value);
                    continue;
                }
                if (property.NameEquals("azureBlob"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureBlob = AzureBlob.DeserializeAzureBlob(property.Value);
                    continue;
                }
                if (property.NameEquals("fileStorageType"))
                {
                    fileStorageType = property.Value.GetString();
                    continue;
                }
            }
            return new SourceLocation(fileShare.Value, azureBlob.Value, fileStorageType.Value);
        }
    }
}
