// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataMigration.Models
{
    internal static partial class ServerLevelPermissionsGroupExtensions
    {
        public static string ToSerialString(this ServerLevelPermissionsGroup value) => value switch
        {
            ServerLevelPermissionsGroup.Default => "Default",
            ServerLevelPermissionsGroup.MigrationFromSqlServerToAzureDB => "MigrationFromSqlServerToAzureDB",
            ServerLevelPermissionsGroup.MigrationFromSqlServerToAzureMI => "MigrationFromSqlServerToAzureMI",
            ServerLevelPermissionsGroup.MigrationFromMySqlToAzureDBForMySql => "MigrationFromMySQLToAzureDBForMySQL",
            ServerLevelPermissionsGroup.MigrationFromSqlServerToAzureVm => "MigrationFromSqlServerToAzureVM",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ServerLevelPermissionsGroup value.")
        };

        public static ServerLevelPermissionsGroup ToServerLevelPermissionsGroup(this string value)
        {
            if (string.Equals(value, "Default", StringComparison.InvariantCultureIgnoreCase)) return ServerLevelPermissionsGroup.Default;
            if (string.Equals(value, "MigrationFromSqlServerToAzureDB", StringComparison.InvariantCultureIgnoreCase)) return ServerLevelPermissionsGroup.MigrationFromSqlServerToAzureDB;
            if (string.Equals(value, "MigrationFromSqlServerToAzureMI", StringComparison.InvariantCultureIgnoreCase)) return ServerLevelPermissionsGroup.MigrationFromSqlServerToAzureMI;
            if (string.Equals(value, "MigrationFromMySQLToAzureDBForMySQL", StringComparison.InvariantCultureIgnoreCase)) return ServerLevelPermissionsGroup.MigrationFromMySqlToAzureDBForMySql;
            if (string.Equals(value, "MigrationFromSqlServerToAzureVM", StringComparison.InvariantCultureIgnoreCase)) return ServerLevelPermissionsGroup.MigrationFromSqlServerToAzureVm;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ServerLevelPermissionsGroup value.");
        }
    }
}
