// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Input for command that completes sync migration for a database. </summary>
    public partial class MigrateSyncCompleteCommandInput
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MigrateSyncCompleteCommandInput"/>. </summary>
        /// <param name="databaseName"> Name of database. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="databaseName"/> is null. </exception>
        public MigrateSyncCompleteCommandInput(string databaseName)
        {
            Argument.AssertNotNull(databaseName, nameof(databaseName));

            DatabaseName = databaseName;
        }

        /// <summary> Initializes a new instance of <see cref="MigrateSyncCompleteCommandInput"/>. </summary>
        /// <param name="databaseName"> Name of database. </param>
        /// <param name="commitTimeStamp"> Time stamp to complete. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MigrateSyncCompleteCommandInput(string databaseName, DateTimeOffset? commitTimeStamp, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DatabaseName = databaseName;
            CommitTimeStamp = commitTimeStamp;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="MigrateSyncCompleteCommandInput"/> for deserialization. </summary>
        internal MigrateSyncCompleteCommandInput()
        {
        }

        /// <summary> Name of database. </summary>
        public string DatabaseName { get; set; }
        /// <summary> Time stamp to complete. </summary>
        public DateTimeOffset? CommitTimeStamp { get; set; }
    }
}
