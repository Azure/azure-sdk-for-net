// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class MongoDbDatabaseSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("collections");
            writer.WriteStartObject();
            foreach (var item in Collections)
            {
                writer.WritePropertyName(item.Key);
                writer.WriteObjectValue(item.Value);
            }
            writer.WriteEndObject();
            if (Optional.IsDefined(TargetRUs))
            {
                writer.WritePropertyName("targetRUs");
                writer.WriteNumberValue(TargetRUs.Value);
            }
            writer.WriteEndObject();
        }

        internal static MongoDbDatabaseSettings DeserializeMongoDbDatabaseSettings(JsonElement element)
        {
            IDictionary<string, MongoDbCollectionSettings> collections = default;
            Optional<int> targetRUs = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("collections"))
                {
                    Dictionary<string, MongoDbCollectionSettings> dictionary = new Dictionary<string, MongoDbCollectionSettings>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, MongoDbCollectionSettings.DeserializeMongoDbCollectionSettings(property0.Value));
                    }
                    collections = dictionary;
                    continue;
                }
                if (property.NameEquals("targetRUs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    targetRUs = property.Value.GetInt32();
                    continue;
                }
            }
            return new MongoDbDatabaseSettings(collections, Optional.ToNullable(targetRUs));
        }
    }
}
