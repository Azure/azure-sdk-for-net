// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class SchemaMigrationSetting : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(SchemaOption))
            {
                writer.WritePropertyName("schemaOption"u8);
                writer.WriteStringValue(SchemaOption.Value.ToString());
            }
            if (Core.Optional.IsDefined(FileId))
            {
                writer.WritePropertyName("fileId"u8);
                writer.WriteStringValue(FileId);
            }
            if (Core.Optional.IsDefined(FileName))
            {
                writer.WritePropertyName("fileName"u8);
                writer.WriteStringValue(FileName);
            }
            writer.WriteEndObject();
        }

        internal static SchemaMigrationSetting DeserializeSchemaMigrationSetting(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<SchemaMigrationOption> schemaOption = default;
            Core.Optional<string> fileId = default;
            Core.Optional<string> fileName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("schemaOption"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    schemaOption = new SchemaMigrationOption(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("fileId"u8))
                {
                    fileId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileName"u8))
                {
                    fileName = property.Value.GetString();
                    continue;
                }
            }
            return new SchemaMigrationSetting(Core.Optional.ToNullable(schemaOption), fileId.Value, fileName.Value);
        }
    }
}
