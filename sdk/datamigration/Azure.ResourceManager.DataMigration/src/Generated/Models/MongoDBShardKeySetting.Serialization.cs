// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class MongoDBShardKeySetting : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("fields");
            writer.WriteStartArray();
            foreach (var item in Fields)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsDefined(IsUnique))
            {
                writer.WritePropertyName("isUnique");
                writer.WriteBooleanValue(IsUnique.Value);
            }
            writer.WriteEndObject();
        }

        internal static MongoDBShardKeySetting DeserializeMongoDBShardKeySetting(JsonElement element)
        {
            IList<MongoDBShardKeyField> fields = default;
            Optional<bool> isUnique = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("fields"))
                {
                    List<MongoDBShardKeyField> array = new List<MongoDBShardKeyField>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MongoDBShardKeyField.DeserializeMongoDBShardKeyField(item));
                    }
                    fields = array;
                    continue;
                }
                if (property.NameEquals("isUnique"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isUnique = property.Value.GetBoolean();
                    continue;
                }
            }
            return new MongoDBShardKeySetting(fields, Optional.ToNullable(isUnique));
        }
    }
}
