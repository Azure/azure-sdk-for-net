// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary>
    /// Base class for all types of DMS command properties. If command is not supported by current client, this object is returned.
    /// Please note <see cref="CommandProperties"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="MigrateMISyncCompleteCommandProperties"/>, <see cref="MigrateSyncCompleteCommandProperties"/>, <see cref="MongoDBCancelCommand"/>, <see cref="MongoDBFinishCommand"/> and <see cref="MongoDBRestartCommand"/>.
    /// </summary>
    public abstract partial class CommandProperties
    {
        /// <summary> Initializes a new instance of <see cref="CommandProperties"/>. </summary>
        protected CommandProperties()
        {
            Errors = new ChangeTrackingList<ODataError>();
        }

        /// <summary> Initializes a new instance of <see cref="CommandProperties"/>. </summary>
        /// <param name="commandType"> Command type. </param>
        /// <param name="errors"> Array of errors. This is ignored if submitted. </param>
        /// <param name="state"> The state of the command. This is ignored if submitted. </param>
        internal CommandProperties(CommandType commandType, IReadOnlyList<ODataError> errors, CommandState? state)
        {
            CommandType = commandType;
            Errors = errors;
            State = state;
        }

        /// <summary> Command type. </summary>
        internal CommandType CommandType { get; set; }
        /// <summary> Array of errors. This is ignored if submitted. </summary>
        public IReadOnlyList<ODataError> Errors { get; }
        /// <summary> The state of the command. This is ignored if submitted. </summary>
        public CommandState? State { get; }
    }
}
