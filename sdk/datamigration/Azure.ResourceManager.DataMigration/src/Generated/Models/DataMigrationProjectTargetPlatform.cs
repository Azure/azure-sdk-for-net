// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Target platform of the project. </summary>
    public readonly partial struct DataMigrationProjectTargetPlatform : IEquatable<DataMigrationProjectTargetPlatform>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataMigrationProjectTargetPlatform"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataMigrationProjectTargetPlatform(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SqlDBValue = "SQLDB";
        private const string SqlMIValue = "SQLMI";
        private const string AzureDBForMySqlValue = "AzureDbForMySql";
        private const string AzureDBForPostgreSqlValue = "AzureDbForPostgreSql";
        private const string MongoDBValue = "MongoDb";
        private const string UnknownValue = "Unknown";

        /// <summary> SQLDB. </summary>
        public static DataMigrationProjectTargetPlatform SqlDB { get; } = new DataMigrationProjectTargetPlatform(SqlDBValue);
        /// <summary> SQLMI. </summary>
        public static DataMigrationProjectTargetPlatform SqlMI { get; } = new DataMigrationProjectTargetPlatform(SqlMIValue);
        /// <summary> AzureDbForMySql. </summary>
        public static DataMigrationProjectTargetPlatform AzureDBForMySql { get; } = new DataMigrationProjectTargetPlatform(AzureDBForMySqlValue);
        /// <summary> AzureDbForPostgreSql. </summary>
        public static DataMigrationProjectTargetPlatform AzureDBForPostgreSql { get; } = new DataMigrationProjectTargetPlatform(AzureDBForPostgreSqlValue);
        /// <summary> MongoDb. </summary>
        public static DataMigrationProjectTargetPlatform MongoDB { get; } = new DataMigrationProjectTargetPlatform(MongoDBValue);
        /// <summary> Unknown. </summary>
        public static DataMigrationProjectTargetPlatform Unknown { get; } = new DataMigrationProjectTargetPlatform(UnknownValue);
        /// <summary> Determines if two <see cref="DataMigrationProjectTargetPlatform"/> values are the same. </summary>
        public static bool operator ==(DataMigrationProjectTargetPlatform left, DataMigrationProjectTargetPlatform right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataMigrationProjectTargetPlatform"/> values are not the same. </summary>
        public static bool operator !=(DataMigrationProjectTargetPlatform left, DataMigrationProjectTargetPlatform right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataMigrationProjectTargetPlatform"/>. </summary>
        public static implicit operator DataMigrationProjectTargetPlatform(string value) => new DataMigrationProjectTargetPlatform(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataMigrationProjectTargetPlatform other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataMigrationProjectTargetPlatform other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
