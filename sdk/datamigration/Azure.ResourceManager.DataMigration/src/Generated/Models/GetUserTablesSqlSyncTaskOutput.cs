// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Output of the task that collects user tables for the given list of databases. </summary>
    public partial class GetUserTablesSqlSyncTaskOutput
    {
        /// <summary> Initializes a new instance of <see cref="GetUserTablesSqlSyncTaskOutput"/>. </summary>
        internal GetUserTablesSqlSyncTaskOutput()
        {
            ValidationErrors = new ChangeTrackingList<ReportableException>();
        }

        /// <summary> Initializes a new instance of <see cref="GetUserTablesSqlSyncTaskOutput"/>. </summary>
        /// <param name="databasesToSourceTables"> Mapping from database name to list of source tables. </param>
        /// <param name="databasesToTargetTables"> Mapping from database name to list of target tables. </param>
        /// <param name="tableValidationErrors"> Mapping from database name to list of validation errors. </param>
        /// <param name="validationErrors"> Validation errors. </param>
        internal GetUserTablesSqlSyncTaskOutput(string databasesToSourceTables, string databasesToTargetTables, string tableValidationErrors, IReadOnlyList<ReportableException> validationErrors)
        {
            DatabasesToSourceTables = databasesToSourceTables;
            DatabasesToTargetTables = databasesToTargetTables;
            TableValidationErrors = tableValidationErrors;
            ValidationErrors = validationErrors;
        }

        /// <summary> Mapping from database name to list of source tables. </summary>
        public string DatabasesToSourceTables { get; }
        /// <summary> Mapping from database name to list of target tables. </summary>
        public string DatabasesToTargetTables { get; }
        /// <summary> Mapping from database name to list of validation errors. </summary>
        public string TableValidationErrors { get; }
        /// <summary> Validation errors. </summary>
        public IReadOnlyList<ReportableException> ValidationErrors { get; }
    }
}
