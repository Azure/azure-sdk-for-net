// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> An enumeration of type of objects. </summary>
    public readonly partial struct DataMigrationDatabaseObjectType : IEquatable<DataMigrationDatabaseObjectType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataMigrationDatabaseObjectType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataMigrationDatabaseObjectType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StoredProceduresValue = "StoredProcedures";
        private const string TableValue = "Table";
        private const string UserValue = "User";
        private const string ViewValue = "View";
        private const string FunctionValue = "Function";

        /// <summary> StoredProcedures. </summary>
        public static DataMigrationDatabaseObjectType StoredProcedures { get; } = new DataMigrationDatabaseObjectType(StoredProceduresValue);
        /// <summary> Table. </summary>
        public static DataMigrationDatabaseObjectType Table { get; } = new DataMigrationDatabaseObjectType(TableValue);
        /// <summary> User. </summary>
        public static DataMigrationDatabaseObjectType User { get; } = new DataMigrationDatabaseObjectType(UserValue);
        /// <summary> View. </summary>
        public static DataMigrationDatabaseObjectType View { get; } = new DataMigrationDatabaseObjectType(ViewValue);
        /// <summary> Function. </summary>
        public static DataMigrationDatabaseObjectType Function { get; } = new DataMigrationDatabaseObjectType(FunctionValue);
        /// <summary> Determines if two <see cref="DataMigrationDatabaseObjectType"/> values are the same. </summary>
        public static bool operator ==(DataMigrationDatabaseObjectType left, DataMigrationDatabaseObjectType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataMigrationDatabaseObjectType"/> values are not the same. </summary>
        public static bool operator !=(DataMigrationDatabaseObjectType left, DataMigrationDatabaseObjectType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataMigrationDatabaseObjectType"/>. </summary>
        public static implicit operator DataMigrationDatabaseObjectType(string value) => new DataMigrationDatabaseObjectType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataMigrationDatabaseObjectType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataMigrationDatabaseObjectType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
