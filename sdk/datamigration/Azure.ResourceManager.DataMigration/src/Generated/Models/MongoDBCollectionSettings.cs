// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Describes how an individual MongoDB collection should be migrated. </summary>
    public partial class MongoDBCollectionSettings
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MongoDBCollectionSettings"/>. </summary>
        public MongoDBCollectionSettings()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MongoDBCollectionSettings"/>. </summary>
        /// <param name="canDelete"> Whether the migrator is allowed to drop the target collection in the course of performing a migration. The default is true. </param>
        /// <param name="shardKey"> Describes a MongoDB shard key. </param>
        /// <param name="targetRUs"> The RUs that should be configured on a CosmosDB target, or null to use the default. This has no effect on non-CosmosDB targets. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MongoDBCollectionSettings(bool? canDelete, MongoDBShardKeySetting shardKey, int? targetRUs, Dictionary<string, BinaryData> rawData)
        {
            CanDelete = canDelete;
            ShardKey = shardKey;
            TargetRUs = targetRUs;
            _rawData = rawData;
        }

        /// <summary> Whether the migrator is allowed to drop the target collection in the course of performing a migration. The default is true. </summary>
        public bool? CanDelete { get; set; }
        /// <summary> Describes a MongoDB shard key. </summary>
        public MongoDBShardKeySetting ShardKey { get; set; }
        /// <summary> The RUs that should be configured on a CosmosDB target, or null to use the default. This has no effect on non-CosmosDB targets. </summary>
        public int? TargetRUs { get; set; }
    }
}
