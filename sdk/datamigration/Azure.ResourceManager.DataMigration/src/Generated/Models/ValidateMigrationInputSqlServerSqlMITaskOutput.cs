// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations. </summary>
    public partial class ValidateMigrationInputSqlServerSqlMITaskOutput
    {
        /// <summary> Initializes a new instance of <see cref="ValidateMigrationInputSqlServerSqlMITaskOutput"/>. </summary>
        internal ValidateMigrationInputSqlServerSqlMITaskOutput()
        {
            RestoreDatabaseNameErrors = new ChangeTrackingList<ReportableException>();
            BackupFolderErrors = new ChangeTrackingList<ReportableException>();
            BackupShareCredentialsErrors = new ChangeTrackingList<ReportableException>();
            BackupStorageAccountErrors = new ChangeTrackingList<ReportableException>();
            ExistingBackupErrors = new ChangeTrackingList<ReportableException>();
        }

        /// <summary> Initializes a new instance of <see cref="ValidateMigrationInputSqlServerSqlMITaskOutput"/>. </summary>
        /// <param name="id"> Result identifier. </param>
        /// <param name="name"> Name of database. </param>
        /// <param name="restoreDatabaseNameErrors"> Errors associated with the RestoreDatabaseName. </param>
        /// <param name="backupFolderErrors"> Errors associated with the BackupFolder path. </param>
        /// <param name="backupShareCredentialsErrors"> Errors associated with backup share user name and password credentials. </param>
        /// <param name="backupStorageAccountErrors"> Errors associated with the storage account provided. </param>
        /// <param name="existingBackupErrors"> Errors associated with existing backup files. </param>
        /// <param name="databaseBackupInfo"> Information about backup files when existing backup mode is used. </param>
        internal ValidateMigrationInputSqlServerSqlMITaskOutput(string id, string name, IReadOnlyList<ReportableException> restoreDatabaseNameErrors, IReadOnlyList<ReportableException> backupFolderErrors, IReadOnlyList<ReportableException> backupShareCredentialsErrors, IReadOnlyList<ReportableException> backupStorageAccountErrors, IReadOnlyList<ReportableException> existingBackupErrors, DatabaseBackupInfo databaseBackupInfo)
        {
            Id = id;
            Name = name;
            RestoreDatabaseNameErrors = restoreDatabaseNameErrors;
            BackupFolderErrors = backupFolderErrors;
            BackupShareCredentialsErrors = backupShareCredentialsErrors;
            BackupStorageAccountErrors = backupStorageAccountErrors;
            ExistingBackupErrors = existingBackupErrors;
            DatabaseBackupInfo = databaseBackupInfo;
        }

        /// <summary> Result identifier. </summary>
        public string Id { get; }
        /// <summary> Name of database. </summary>
        public string Name { get; }
        /// <summary> Errors associated with the RestoreDatabaseName. </summary>
        public IReadOnlyList<ReportableException> RestoreDatabaseNameErrors { get; }
        /// <summary> Errors associated with the BackupFolder path. </summary>
        public IReadOnlyList<ReportableException> BackupFolderErrors { get; }
        /// <summary> Errors associated with backup share user name and password credentials. </summary>
        public IReadOnlyList<ReportableException> BackupShareCredentialsErrors { get; }
        /// <summary> Errors associated with the storage account provided. </summary>
        public IReadOnlyList<ReportableException> BackupStorageAccountErrors { get; }
        /// <summary> Errors associated with existing backup files. </summary>
        public IReadOnlyList<ReportableException> ExistingBackupErrors { get; }
        /// <summary> Information about backup files when existing backup mode is used. </summary>
        public DatabaseBackupInfo DatabaseBackupInfo { get; }
    }
}
