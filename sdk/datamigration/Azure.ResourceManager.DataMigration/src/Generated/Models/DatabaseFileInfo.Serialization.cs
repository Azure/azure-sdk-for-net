// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class DatabaseFileInfo
    {
        internal static DatabaseFileInfo DeserializeDatabaseFileInfo(JsonElement element)
        {
            Optional<string> databaseName = default;
            Optional<string> id = default;
            Optional<string> logicalName = default;
            Optional<string> physicalFullName = default;
            Optional<string> restoreFullName = default;
            Optional<DatabaseFileType> fileType = default;
            Optional<double> sizeMB = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("databaseName"))
                {
                    databaseName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("logicalName"))
                {
                    logicalName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("physicalFullName"))
                {
                    physicalFullName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("restoreFullName"))
                {
                    restoreFullName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    fileType = new DatabaseFileType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sizeMB"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sizeMB = property.Value.GetDouble();
                    continue;
                }
            }
            return new DatabaseFileInfo(databaseName.Value, id.Value, logicalName.Value, physicalFullName.Value, restoreFullName.Value, Optional.ToNullable(fileType), Optional.ToNullable(sizeMB));
        }
    }
}
