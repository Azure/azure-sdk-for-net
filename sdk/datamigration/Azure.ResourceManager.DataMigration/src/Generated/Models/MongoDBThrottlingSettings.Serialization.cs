// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class MongoDBThrottlingSettings : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(MinFreeCpu))
            {
                writer.WritePropertyName("minFreeCpu"u8);
                writer.WriteNumberValue(MinFreeCpu.Value);
            }
            if (Core.Optional.IsDefined(MinFreeMemoryMb))
            {
                writer.WritePropertyName("minFreeMemoryMb"u8);
                writer.WriteNumberValue(MinFreeMemoryMb.Value);
            }
            if (Core.Optional.IsDefined(MaxParallelism))
            {
                writer.WritePropertyName("maxParallelism"u8);
                writer.WriteNumberValue(MaxParallelism.Value);
            }
            writer.WriteEndObject();
        }

        internal static MongoDBThrottlingSettings DeserializeMongoDBThrottlingSettings(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> minFreeCpu = default;
            Core.Optional<int> minFreeMemoryMb = default;
            Core.Optional<int> maxParallelism = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("minFreeCpu"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minFreeCpu = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("minFreeMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minFreeMemoryMb = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxParallelism"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxParallelism = property.Value.GetInt32();
                    continue;
                }
            }
            return new MongoDBThrottlingSettings(Core.Optional.ToNullable(minFreeCpu), Core.Optional.ToNullable(minFreeMemoryMb), Core.Optional.ToNullable(maxParallelism));
        }
    }
}
