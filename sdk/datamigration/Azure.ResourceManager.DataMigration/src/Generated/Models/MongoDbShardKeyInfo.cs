// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Describes a MongoDB shard key. </summary>
    public partial class MongoDbShardKeyInfo
    {
        /// <summary> Initializes a new instance of MongoDbShardKeyInfo. </summary>
        /// <param name="fields"> The fields within the shard key. </param>
        /// <param name="isUnique"> Whether the shard key is unique. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="fields"/> is null. </exception>
        internal MongoDbShardKeyInfo(IEnumerable<MongoDbShardKeyField> fields, bool isUnique)
        {
            if (fields == null)
            {
                throw new ArgumentNullException(nameof(fields));
            }

            Fields = fields.ToList();
            IsUnique = isUnique;
        }

        /// <summary> Initializes a new instance of MongoDbShardKeyInfo. </summary>
        /// <param name="fields"> The fields within the shard key. </param>
        /// <param name="isUnique"> Whether the shard key is unique. </param>
        internal MongoDbShardKeyInfo(IReadOnlyList<MongoDbShardKeyField> fields, bool isUnique)
        {
            Fields = fields;
            IsUnique = isUnique;
        }

        /// <summary> The fields within the shard key. </summary>
        public IReadOnlyList<MongoDbShardKeyField> Fields { get; }
        /// <summary> Whether the shard key is unique. </summary>
        public bool IsUnique { get; }
    }
}
