// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Type of the actual difference for the compared object, while performing schema comparison. </summary>
    public readonly partial struct MigrationValidatioUpdateActionType : IEquatable<MigrationValidatioUpdateActionType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MigrationValidatioUpdateActionType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MigrationValidatioUpdateActionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DeletedOnTargetValue = "DeletedOnTarget";
        private const string ChangedOnTargetValue = "ChangedOnTarget";
        private const string AddedOnTargetValue = "AddedOnTarget";

        /// <summary> DeletedOnTarget. </summary>
        public static MigrationValidatioUpdateActionType DeletedOnTarget { get; } = new MigrationValidatioUpdateActionType(DeletedOnTargetValue);
        /// <summary> ChangedOnTarget. </summary>
        public static MigrationValidatioUpdateActionType ChangedOnTarget { get; } = new MigrationValidatioUpdateActionType(ChangedOnTargetValue);
        /// <summary> AddedOnTarget. </summary>
        public static MigrationValidatioUpdateActionType AddedOnTarget { get; } = new MigrationValidatioUpdateActionType(AddedOnTargetValue);
        /// <summary> Determines if two <see cref="MigrationValidatioUpdateActionType"/> values are the same. </summary>
        public static bool operator ==(MigrationValidatioUpdateActionType left, MigrationValidatioUpdateActionType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MigrationValidatioUpdateActionType"/> values are not the same. </summary>
        public static bool operator !=(MigrationValidatioUpdateActionType left, MigrationValidatioUpdateActionType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="MigrationValidatioUpdateActionType"/>. </summary>
        public static implicit operator MigrationValidatioUpdateActionType(string value) => new MigrationValidatioUpdateActionType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MigrationValidatioUpdateActionType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MigrationValidatioUpdateActionType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
