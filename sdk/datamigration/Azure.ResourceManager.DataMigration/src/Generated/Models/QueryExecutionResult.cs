// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Describes query analysis results for execution in source and target. </summary>
    public partial class QueryExecutionResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="QueryExecutionResult"/>. </summary>
        internal QueryExecutionResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="QueryExecutionResult"/>. </summary>
        /// <param name="queryText"> Query text retrieved from the source server. </param>
        /// <param name="statementsInBatch"> Total no. of statements in the batch. </param>
        /// <param name="sourceResult"> Query analysis result from the source. </param>
        /// <param name="targetResult"> Query analysis result from the target. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal QueryExecutionResult(string queryText, long? statementsInBatch, ExecutionStatistics sourceResult, ExecutionStatistics targetResult, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            QueryText = queryText;
            StatementsInBatch = statementsInBatch;
            SourceResult = sourceResult;
            TargetResult = targetResult;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Query text retrieved from the source server. </summary>
        public string QueryText { get; }
        /// <summary> Total no. of statements in the batch. </summary>
        public long? StatementsInBatch { get; }
        /// <summary> Query analysis result from the source. </summary>
        public ExecutionStatistics SourceResult { get; }
        /// <summary> Query analysis result from the target. </summary>
        public ExecutionStatistics TargetResult { get; }
    }
}
