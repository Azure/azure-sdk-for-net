// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    public partial class CopyProgressDetails
    {
        internal static CopyProgressDetails DeserializeCopyProgressDetails(JsonElement element)
        {
            Optional<string> tableName = default;
            Optional<string> status = default;
            Optional<string> parallelCopyType = default;
            Optional<int> usedParallelCopies = default;
            Optional<long> dataRead = default;
            Optional<long> dataWritten = default;
            Optional<long> rowsRead = default;
            Optional<long> rowsCopied = default;
            Optional<DateTimeOffset> copyStart = default;
            Optional<double> copyThroughput = default;
            Optional<int> copyDuration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("tableName"))
                {
                    tableName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("parallelCopyType"))
                {
                    parallelCopyType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("usedParallelCopies"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    usedParallelCopies = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("dataRead"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dataRead = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("dataWritten"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dataWritten = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("rowsRead"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rowsRead = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("rowsCopied"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rowsCopied = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("copyStart"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    copyStart = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("copyThroughput"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    copyThroughput = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("copyDuration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    copyDuration = property.Value.GetInt32();
                    continue;
                }
            }
            return new CopyProgressDetails(tableName.Value, status.Value, parallelCopyType.Value, Optional.ToNullable(usedParallelCopies), Optional.ToNullable(dataRead), Optional.ToNullable(dataWritten), Optional.ToNullable(rowsRead), Optional.ToNullable(rowsCopied), Optional.ToNullable(copyStart), Optional.ToNullable(copyThroughput), Optional.ToNullable(copyDuration));
        }
    }
}
