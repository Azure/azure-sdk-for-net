// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties for the task that validates the connection to and provides
    /// information about a MongoDB server
    /// </summary>
    [Newtonsoft.Json.JsonObject("Connect.MongoDb")]
    public partial class ConnectToMongoDbTaskProperties : ProjectTaskProperties
    {
        /// <summary>
        /// Initializes a new instance of the ConnectToMongoDbTaskProperties
        /// class.
        /// </summary>
        public ConnectToMongoDbTaskProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectToMongoDbTaskProperties
        /// class.
        /// </summary>
        /// <param name="errors">Array of errors. This is ignored if
        /// submitted.</param>
        /// <param name="state">The state of the task. This is ignored if
        /// submitted. Possible values include: 'Unknown', 'Queued', 'Running',
        /// 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation',
        /// 'Faulted'</param>
        /// <param name="commands">Array of command properties.</param>
        /// <param name="clientData">Key value pairs of client data to attach
        /// meta data information to task</param>
        /// <param name="output">An array containing a single
        /// MongoDbClusterInfo object</param>
        public ConnectToMongoDbTaskProperties(IList<ODataError> errors = default(IList<ODataError>), string state = default(string), IList<CommandProperties> commands = default(IList<CommandProperties>), IDictionary<string, string> clientData = default(IDictionary<string, string>), MongoDbConnectionInfo input = default(MongoDbConnectionInfo), IList<MongoDbClusterInfo> output = default(IList<MongoDbClusterInfo>))
            : base(errors, state, commands, clientData)
        {
            Input = input;
            Output = output;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "input")]
        public MongoDbConnectionInfo Input { get; set; }

        /// <summary>
        /// Gets an array containing a single MongoDbClusterInfo object
        /// </summary>
        [JsonProperty(PropertyName = "output")]
        public IList<MongoDbClusterInfo> Output { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Input != null)
            {
                Input.Validate();
            }
            if (Output != null)
            {
                foreach (var element in Output)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
