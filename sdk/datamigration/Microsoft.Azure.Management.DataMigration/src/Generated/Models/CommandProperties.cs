// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Base class for all types of DMS command properties. If command is not
    /// supported by current client, this object is returned.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Unknown")]
    public partial class CommandProperties
    {
        /// <summary>
        /// Initializes a new instance of the CommandProperties class.
        /// </summary>
        public CommandProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommandProperties class.
        /// </summary>
        /// <param name="errors">Array of errors. This is ignored if
        /// submitted.</param>
        /// <param name="state">The state of the command. This is ignored if
        /// submitted. Possible values include: 'Unknown', 'Accepted',
        /// 'Running', 'Succeeded', 'Failed'</param>
        public CommandProperties(IList<ODataError> errors = default(IList<ODataError>), string state = default(string))
        {
            Errors = errors;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets array of errors. This is ignored if submitted.
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<ODataError> Errors { get; private set; }

        /// <summary>
        /// Gets the state of the command. This is ignored if submitted.
        /// Possible values include: 'Unknown', 'Accepted', 'Running',
        /// 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

    }
}
