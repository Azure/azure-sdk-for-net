// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Output for task that validates migration input for SQL sync migrations
    /// </summary>
    public partial class ValidateSyncMigrationInputSqlServerTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ValidateSyncMigrationInputSqlServerTaskOutput class.
        /// </summary>
        public ValidateSyncMigrationInputSqlServerTaskOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ValidateSyncMigrationInputSqlServerTaskOutput class.
        /// </summary>
        /// <param name="id">Database identifier</param>
        /// <param name="name">Name of database</param>
        /// <param name="validationErrors">Errors associated with a selected
        /// database object</param>
        public ValidateSyncMigrationInputSqlServerTaskOutput(string id = default(string), string name = default(string), IList<ReportableException> validationErrors = default(IList<ReportableException>))
        {
            Id = id;
            Name = name;
            ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets database identifier
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets name of database
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets errors associated with a selected database object
        /// </summary>
        [JsonProperty(PropertyName = "validationErrors")]
        public IList<ReportableException> ValidationErrors { get; private set; }

    }
}
