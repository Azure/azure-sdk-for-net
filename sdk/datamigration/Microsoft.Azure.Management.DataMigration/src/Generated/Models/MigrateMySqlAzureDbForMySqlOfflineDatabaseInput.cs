// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Database specific information for offline MySQL to Azure Database for
    /// MySQL migration task inputs
    /// </summary>
    public partial class MigrateMySqlAzureDbForMySqlOfflineDatabaseInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MigrateMySqlAzureDbForMySqlOfflineDatabaseInput class.
        /// </summary>
        public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MigrateMySqlAzureDbForMySqlOfflineDatabaseInput class.
        /// </summary>
        /// <param name="name">Name of the database</param>
        /// <param name="targetDatabaseName">Name of target database. Note:
        /// Target database will be truncated before starting
        /// migration.</param>
        /// <param name="tableMap">Mapping of source to target tables</param>
        public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput(string name = default(string), string targetDatabaseName = default(string), IDictionary<string, string> tableMap = default(IDictionary<string, string>))
        {
            Name = name;
            TargetDatabaseName = targetDatabaseName;
            TableMap = tableMap;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the database
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets name of target database. Note: Target database will be
        /// truncated before starting migration.
        /// </summary>
        [JsonProperty(PropertyName = "targetDatabaseName")]
        public string TargetDatabaseName { get; set; }

        /// <summary>
        /// Gets or sets mapping of source to target tables
        /// </summary>
        [JsonProperty(PropertyName = "tableMap")]
        public IDictionary<string, string> TableMap { get; set; }

    }
}
