// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Azure SKU instance
    /// </summary>
    public partial class ServiceSku
    {
        /// <summary>
        /// Initializes a new instance of the ServiceSku class.
        /// </summary>
        public ServiceSku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceSku class.
        /// </summary>
        /// <param name="name">The unique name of the SKU, such as 'P3'</param>
        /// <param name="tier">The tier of the SKU, such as 'Basic', 'General
        /// Purpose', or 'Business Critical'</param>
        /// <param name="family">The SKU family, used when the service has
        /// multiple performance classes within a tier, such as 'A', 'D', etc.
        /// for virtual machines</param>
        /// <param name="size">The size of the SKU, used when the name alone
        /// does not denote a service size or when a SKU has multiple
        /// performance classes within a family, e.g. 'A1' for virtual
        /// machines</param>
        /// <param name="capacity">The capacity of the SKU, if it supports
        /// scaling</param>
        public ServiceSku(string name = default(string), string tier = default(string), string family = default(string), string size = default(string), int? capacity = default(int?))
        {
            Name = name;
            Tier = tier;
            Family = family;
            Size = size;
            Capacity = capacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique name of the SKU, such as 'P3'
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the tier of the SKU, such as 'Basic', 'General
        /// Purpose', or 'Business Critical'
        /// </summary>
        [JsonProperty(PropertyName = "tier")]
        public string Tier { get; set; }

        /// <summary>
        /// Gets or sets the SKU family, used when the service has multiple
        /// performance classes within a tier, such as 'A', 'D', etc. for
        /// virtual machines
        /// </summary>
        [JsonProperty(PropertyName = "family")]
        public string Family { get; set; }

        /// <summary>
        /// Gets or sets the size of the SKU, used when the name alone does not
        /// denote a service size or when a SKU has multiple performance
        /// classes within a family, e.g. 'A1' for virtual machines
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public string Size { get; set; }

        /// <summary>
        /// Gets or sets the capacity of the SKU, if it supports scaling
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public int? Capacity { get; set; }

    }
}
