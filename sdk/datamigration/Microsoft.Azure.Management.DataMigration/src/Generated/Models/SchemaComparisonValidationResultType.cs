// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Description about the errors happen while performing migration
    /// validation
    /// </summary>
    public partial class SchemaComparisonValidationResultType
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SchemaComparisonValidationResultType class.
        /// </summary>
        public SchemaComparisonValidationResultType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SchemaComparisonValidationResultType class.
        /// </summary>
        /// <param name="objectName">Name of the object that has the
        /// difference</param>
        /// <param name="objectType">Type of the object that has the
        /// difference. e.g (Table/View/StoredProcedure). Possible values
        /// include: 'StoredProcedures', 'Table', 'User', 'View',
        /// 'Function'</param>
        /// <param name="updateAction">Update action type with respect to
        /// target. Possible values include: 'DeletedOnTarget',
        /// 'ChangedOnTarget', 'AddedOnTarget'</param>
        public SchemaComparisonValidationResultType(string objectName = default(string), string objectType = default(string), string updateAction = default(string))
        {
            ObjectName = objectName;
            ObjectType = objectType;
            UpdateAction = updateAction;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the object that has the difference
        /// </summary>
        [JsonProperty(PropertyName = "objectName")]
        public string ObjectName { get; set; }

        /// <summary>
        /// Gets or sets type of the object that has the difference. e.g
        /// (Table/View/StoredProcedure). Possible values include:
        /// 'StoredProcedures', 'Table', 'User', 'View', 'Function'
        /// </summary>
        [JsonProperty(PropertyName = "objectType")]
        public string ObjectType { get; set; }

        /// <summary>
        /// Gets or sets update action type with respect to target. Possible
        /// values include: 'DeletedOnTarget', 'ChangedOnTarget',
        /// 'AddedOnTarget'
        /// </summary>
        [JsonProperty(PropertyName = "updateAction")]
        public string UpdateAction { get; set; }

    }
}
