// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Input for task that migrates SSIS packages from SQL Server to Azure SQL
    /// Database Managed Instance.
    /// </summary>
    public partial class MigrateSsisTaskInput : SqlMigrationTaskInput
    {
        /// <summary>
        /// Initializes a new instance of the MigrateSsisTaskInput class.
        /// </summary>
        public MigrateSsisTaskInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrateSsisTaskInput class.
        /// </summary>
        /// <param name="sourceConnectionInfo">Information for connecting to
        /// source</param>
        /// <param name="targetConnectionInfo">Information for connecting to
        /// target</param>
        /// <param name="ssisMigrationInfo">SSIS package migration
        /// information.</param>
        public MigrateSsisTaskInput(SqlConnectionInfo sourceConnectionInfo, SqlConnectionInfo targetConnectionInfo, SsisMigrationInfo ssisMigrationInfo)
            : base(sourceConnectionInfo, targetConnectionInfo)
        {
            SsisMigrationInfo = ssisMigrationInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets SSIS package migration information.
        /// </summary>
        [JsonProperty(PropertyName = "ssisMigrationInfo")]
        public SsisMigrationInfo SsisMigrationInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (SsisMigrationInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SsisMigrationInfo");
            }
        }
    }
}
