// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Output of the task that collects user tables for the given list of
    /// databases
    /// </summary>
    public partial class GetUserTablesSqlSyncTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the GetUserTablesSqlSyncTaskOutput
        /// class.
        /// </summary>
        public GetUserTablesSqlSyncTaskOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetUserTablesSqlSyncTaskOutput
        /// class.
        /// </summary>
        /// <param name="databasesToSourceTables">Mapping from database name to
        /// list of source tables</param>
        /// <param name="databasesToTargetTables">Mapping from database name to
        /// list of target tables</param>
        /// <param name="tableValidationErrors">Mapping from database name to
        /// list of validation errors</param>
        /// <param name="validationErrors">Validation errors</param>
        public GetUserTablesSqlSyncTaskOutput(IDictionary<string, IList<DatabaseTable>> databasesToSourceTables = default(IDictionary<string, IList<DatabaseTable>>), IDictionary<string, IList<DatabaseTable>> databasesToTargetTables = default(IDictionary<string, IList<DatabaseTable>>), IDictionary<string, IList<string>> tableValidationErrors = default(IDictionary<string, IList<string>>), IList<ReportableException> validationErrors = default(IList<ReportableException>))
        {
            DatabasesToSourceTables = databasesToSourceTables;
            DatabasesToTargetTables = databasesToTargetTables;
            TableValidationErrors = tableValidationErrors;
            ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets mapping from database name to list of source tables
        /// </summary>
        [JsonProperty(PropertyName = "databasesToSourceTables")]
        public IDictionary<string, IList<DatabaseTable>> DatabasesToSourceTables { get; private set; }

        /// <summary>
        /// Gets mapping from database name to list of target tables
        /// </summary>
        [JsonProperty(PropertyName = "databasesToTargetTables")]
        public IDictionary<string, IList<DatabaseTable>> DatabasesToTargetTables { get; private set; }

        /// <summary>
        /// Gets mapping from database name to list of validation errors
        /// </summary>
        [JsonProperty(PropertyName = "tableValidationErrors")]
        public IDictionary<string, IList<string>> TableValidationErrors { get; private set; }

        /// <summary>
        /// Gets validation errors
        /// </summary>
        [JsonProperty(PropertyName = "validationErrors")]
        public IList<ReportableException> ValidationErrors { get; private set; }

    }
}
