// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Output for command that completes sync migration for a database.
    /// </summary>
    public partial class MigrateSyncCompleteCommandOutput
    {
        /// <summary>
        /// Initializes a new instance of the MigrateSyncCompleteCommandOutput
        /// class.
        /// </summary>
        public MigrateSyncCompleteCommandOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrateSyncCompleteCommandOutput
        /// class.
        /// </summary>
        /// <param name="id">Result identifier</param>
        /// <param name="errors">List of errors that happened during the
        /// command execution</param>
        public MigrateSyncCompleteCommandOutput(string id = default(string), IList<ReportableException> errors = default(IList<ReportableException>))
        {
            Id = id;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets result identifier
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets list of errors that happened during the command execution
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<ReportableException> Errors { get; private set; }

    }
}
