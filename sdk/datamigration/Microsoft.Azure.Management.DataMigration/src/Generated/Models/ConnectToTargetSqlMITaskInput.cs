// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Input for the task that validates connection to Azure SQL Database
    /// Managed Instance.
    /// </summary>
    public partial class ConnectToTargetSqlMITaskInput
    {
        /// <summary>
        /// Initializes a new instance of the ConnectToTargetSqlMITaskInput
        /// class.
        /// </summary>
        public ConnectToTargetSqlMITaskInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectToTargetSqlMITaskInput
        /// class.
        /// </summary>
        /// <param name="targetConnectionInfo">Connection information for
        /// target SQL Server</param>
        /// <param name="collectLogins">Flag for whether to collect logins from
        /// target SQL MI server.</param>
        /// <param name="collectAgentJobs">Flag for whether to collect agent
        /// jobs from target SQL MI server.</param>
        /// <param name="validateSsisCatalogOnly">Flag for whether to validate
        /// SSIS catalog is reachable on the target SQL MI server.</param>
        public ConnectToTargetSqlMITaskInput(SqlConnectionInfo targetConnectionInfo, bool? collectLogins = default(bool?), bool? collectAgentJobs = default(bool?), bool? validateSsisCatalogOnly = default(bool?))
        {
            TargetConnectionInfo = targetConnectionInfo;
            CollectLogins = collectLogins;
            CollectAgentJobs = collectAgentJobs;
            ValidateSsisCatalogOnly = validateSsisCatalogOnly;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets connection information for target SQL Server
        /// </summary>
        [JsonProperty(PropertyName = "targetConnectionInfo")]
        public SqlConnectionInfo TargetConnectionInfo { get; set; }

        /// <summary>
        /// Gets or sets flag for whether to collect logins from target SQL MI
        /// server.
        /// </summary>
        [JsonProperty(PropertyName = "collectLogins")]
        public bool? CollectLogins { get; set; }

        /// <summary>
        /// Gets or sets flag for whether to collect agent jobs from target SQL
        /// MI server.
        /// </summary>
        [JsonProperty(PropertyName = "collectAgentJobs")]
        public bool? CollectAgentJobs { get; set; }

        /// <summary>
        /// Gets or sets flag for whether to validate SSIS catalog is reachable
        /// on the target SQL MI server.
        /// </summary>
        [JsonProperty(PropertyName = "validateSsisCatalogOnly")]
        public bool? ValidateSsisCatalogOnly { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetConnectionInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetConnectionInfo");
            }
            if (TargetConnectionInfo != null)
            {
                TargetConnectionInfo.Validate();
            }
        }
    }
}
