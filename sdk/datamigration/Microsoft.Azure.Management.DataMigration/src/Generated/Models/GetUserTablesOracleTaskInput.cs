// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Input for the task that gets the list of tables contained within a
    /// provided list of Oracle schemas.
    /// </summary>
    public partial class GetUserTablesOracleTaskInput
    {
        /// <summary>
        /// Initializes a new instance of the GetUserTablesOracleTaskInput
        /// class.
        /// </summary>
        public GetUserTablesOracleTaskInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetUserTablesOracleTaskInput
        /// class.
        /// </summary>
        /// <param name="connectionInfo">Information for connecting to Oracle
        /// source</param>
        /// <param name="selectedSchemas">List of Oracle schemas for which to
        /// collect tables</param>
        public GetUserTablesOracleTaskInput(OracleConnectionInfo connectionInfo, IList<string> selectedSchemas)
        {
            ConnectionInfo = connectionInfo;
            SelectedSchemas = selectedSchemas;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information for connecting to Oracle source
        /// </summary>
        [JsonProperty(PropertyName = "connectionInfo")]
        public OracleConnectionInfo ConnectionInfo { get; set; }

        /// <summary>
        /// Gets or sets list of Oracle schemas for which to collect tables
        /// </summary>
        [JsonProperty(PropertyName = "selectedSchemas")]
        public IList<string> SelectedSchemas { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ConnectionInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConnectionInfo");
            }
            if (SelectedSchemas == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SelectedSchemas");
            }
            if (ConnectionInfo != null)
            {
                ConnectionInfo.Validate();
            }
        }
    }
}
