// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Information of backup set
    /// </summary>
    public partial class BackupSetInfo
    {
        /// <summary>
        /// Initializes a new instance of the BackupSetInfo class.
        /// </summary>
        public BackupSetInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackupSetInfo class.
        /// </summary>
        /// <param name="backupSetId">Id for the set of backup files</param>
        /// <param name="firstLsn">First log sequence number of the backup
        /// file</param>
        /// <param name="lastLsn">Last log sequence number of the backup
        /// file</param>
        /// <param name="lastModifiedTime">Last modified time of the backup
        /// file in share location</param>
        /// <param name="backupType">Enum of the different backup types.
        /// Possible values include: 'Database', 'TransactionLog', 'File',
        /// 'DifferentialDatabase', 'DifferentialFile', 'Partial',
        /// 'DifferentialPartial'</param>
        /// <param name="listOfBackupFiles">List of files in the backup
        /// set</param>
        /// <param name="databaseName">Name of the database to which the backup
        /// set belongs</param>
        /// <param name="backupStartDate">Date and time that the backup
        /// operation began</param>
        /// <param name="backupFinishedDate">Date and time that the backup
        /// operation finished</param>
        /// <param name="isBackupRestored">Whether the backup set is restored
        /// or not</param>
        public BackupSetInfo(string backupSetId = default(string), string firstLsn = default(string), string lastLsn = default(string), System.DateTimeOffset? lastModifiedTime = default(System.DateTimeOffset?), string backupType = default(string), IList<BackupFileInfo> listOfBackupFiles = default(IList<BackupFileInfo>), string databaseName = default(string), System.DateTimeOffset? backupStartDate = default(System.DateTimeOffset?), System.DateTimeOffset? backupFinishedDate = default(System.DateTimeOffset?), bool? isBackupRestored = default(bool?))
        {
            BackupSetId = backupSetId;
            FirstLsn = firstLsn;
            LastLsn = lastLsn;
            LastModifiedTime = lastModifiedTime;
            BackupType = backupType;
            ListOfBackupFiles = listOfBackupFiles;
            DatabaseName = databaseName;
            BackupStartDate = backupStartDate;
            BackupFinishedDate = backupFinishedDate;
            IsBackupRestored = isBackupRestored;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets id for the set of backup files
        /// </summary>
        [JsonProperty(PropertyName = "backupSetId")]
        public string BackupSetId { get; set; }

        /// <summary>
        /// Gets or sets first log sequence number of the backup file
        /// </summary>
        [JsonProperty(PropertyName = "firstLsn")]
        public string FirstLsn { get; set; }

        /// <summary>
        /// Gets or sets last log sequence number of the backup file
        /// </summary>
        [JsonProperty(PropertyName = "lastLsn")]
        public string LastLsn { get; set; }

        /// <summary>
        /// Gets or sets last modified time of the backup file in share
        /// location
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTimeOffset? LastModifiedTime { get; set; }

        /// <summary>
        /// Gets or sets enum of the different backup types. Possible values
        /// include: 'Database', 'TransactionLog', 'File',
        /// 'DifferentialDatabase', 'DifferentialFile', 'Partial',
        /// 'DifferentialPartial'
        /// </summary>
        [JsonProperty(PropertyName = "backupType")]
        public string BackupType { get; set; }

        /// <summary>
        /// Gets or sets list of files in the backup set
        /// </summary>
        [JsonProperty(PropertyName = "listOfBackupFiles")]
        public IList<BackupFileInfo> ListOfBackupFiles { get; set; }

        /// <summary>
        /// Gets or sets name of the database to which the backup set belongs
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets date and time that the backup operation began
        /// </summary>
        [JsonProperty(PropertyName = "backupStartDate")]
        public System.DateTimeOffset? BackupStartDate { get; set; }

        /// <summary>
        /// Gets or sets date and time that the backup operation finished
        /// </summary>
        [JsonProperty(PropertyName = "backupFinishedDate")]
        public System.DateTimeOffset? BackupFinishedDate { get; set; }

        /// <summary>
        /// Gets or sets whether the backup set is restored or not
        /// </summary>
        [JsonProperty(PropertyName = "isBackupRestored")]
        public bool? IsBackupRestored { get; set; }

    }
}
