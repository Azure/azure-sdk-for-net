// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Grafana.Models
{
    /// <summary>
    /// The StartTLSPolicy setting of the SMTP configuration
    /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
    /// </summary>
    public readonly partial struct GrafanaStartTlsPolicy : IEquatable<GrafanaStartTlsPolicy>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="GrafanaStartTlsPolicy"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public GrafanaStartTlsPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string OpportunisticStartTlsValue = "OpportunisticStartTLS";
        private const string MandatoryStartTlsValue = "MandatoryStartTLS";
        private const string NoStartTlsValue = "NoStartTLS";

        /// <summary> OpportunisticStartTLS. </summary>
        public static GrafanaStartTlsPolicy OpportunisticStartTls { get; } = new GrafanaStartTlsPolicy(OpportunisticStartTlsValue);
        /// <summary> MandatoryStartTLS. </summary>
        public static GrafanaStartTlsPolicy MandatoryStartTls { get; } = new GrafanaStartTlsPolicy(MandatoryStartTlsValue);
        /// <summary> NoStartTLS. </summary>
        public static GrafanaStartTlsPolicy NoStartTls { get; } = new GrafanaStartTlsPolicy(NoStartTlsValue);
        /// <summary> Determines if two <see cref="GrafanaStartTlsPolicy"/> values are the same. </summary>
        public static bool operator ==(GrafanaStartTlsPolicy left, GrafanaStartTlsPolicy right) => left.Equals(right);
        /// <summary> Determines if two <see cref="GrafanaStartTlsPolicy"/> values are not the same. </summary>
        public static bool operator !=(GrafanaStartTlsPolicy left, GrafanaStartTlsPolicy right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="GrafanaStartTlsPolicy"/>. </summary>
        public static implicit operator GrafanaStartTlsPolicy(string value) => new GrafanaStartTlsPolicy(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is GrafanaStartTlsPolicy other && Equals(other);
        /// <inheritdoc />
        public bool Equals(GrafanaStartTlsPolicy other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
