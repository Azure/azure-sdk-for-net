// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Grafana.Models
{
    public partial class ManagedGrafanaPatchProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ZoneRedundancy))
            {
                writer.WritePropertyName("zoneRedundancy"u8);
                writer.WriteStringValue(ZoneRedundancy.Value.ToString());
            }
            if (Optional.IsDefined(ApiKey))
            {
                writer.WritePropertyName("apiKey"u8);
                writer.WriteStringValue(ApiKey.Value.ToString());
            }
            if (Optional.IsDefined(DeterministicOutboundIP))
            {
                writer.WritePropertyName("deterministicOutboundIP"u8);
                writer.WriteStringValue(DeterministicOutboundIP.Value.ToString());
            }
            if (Optional.IsDefined(PublicNetworkAccess))
            {
                writer.WritePropertyName("publicNetworkAccess"u8);
                writer.WriteStringValue(PublicNetworkAccess.Value.ToString());
            }
            if (Optional.IsDefined(GrafanaIntegrations))
            {
                writer.WritePropertyName("grafanaIntegrations"u8);
                writer.WriteObjectValue(GrafanaIntegrations);
            }
            if (Optional.IsDefined(EnterpriseConfigurations))
            {
                writer.WritePropertyName("enterpriseConfigurations"u8);
                writer.WriteObjectValue(EnterpriseConfigurations);
            }
            if (Optional.IsDefined(GrafanaConfigurations))
            {
                writer.WritePropertyName("grafanaConfigurations"u8);
                writer.WriteObjectValue(GrafanaConfigurations);
            }
            if (Optional.IsCollectionDefined(GrafanaPlugins))
            {
                writer.WritePropertyName("grafanaPlugins"u8);
                writer.WriteStartObject();
                foreach (var item in GrafanaPlugins)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(GrafanaMajorVersion))
            {
                writer.WritePropertyName("grafanaMajorVersion"u8);
                writer.WriteStringValue(GrafanaMajorVersion);
            }
            writer.WriteEndObject();
        }
    }
}
