// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ResourceHealth;

namespace Azure.ResourceManager.ResourceHealth.Samples
{
    public partial class Sample_ResourceHealthChildAvailabilityStatusResource
    {
        // GetChildCurrentHealthByResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetChildCurrentHealthByResource()
        {
            // Generated from example definition: specification/resourcehealth/resource-manager/Microsoft.ResourceHealth/stable/2022-10-01/examples/ChildAvailabilityStatus_GetByResource.json
            // this example is just showing the usage of "ChildAvailabilityStatuses_GetByResource" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceHealthChildAvailabilityStatusResource created on azure
            // for more information of creating ResourceHealthChildAvailabilityStatusResource, please refer to the document of ResourceHealthChildAvailabilityStatusResource
            string resourceUri = "subscriptions/227b734f-e14f-4de6-b7fc-3190c21e69f6/resourceGroups/JUHACKETRHCTEST/providers/Microsoft.Compute/virtualMachineScaleSets/rhctest/virtualMachines/4";
            ResourceIdentifier resourceHealthChildAvailabilityStatusResourceId = ResourceHealthChildAvailabilityStatusResource.CreateResourceIdentifier(resourceUri);
            ResourceHealthChildAvailabilityStatusResource resourceHealthChildAvailabilityStatus = client.GetResourceHealthChildAvailabilityStatusResource(resourceHealthChildAvailabilityStatusResourceId);

            // invoke the operation
            string expand = "recommendedactions";
            ResourceHealthChildAvailabilityStatusResource result = await resourceHealthChildAvailabilityStatus.GetAsync(expand: expand);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ResourceHealthAvailabilityStatusData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
