// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_ExecutionCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_ExecutionsCreateOrUpdateMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-08-01/examples/Executions_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "Executions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "EE6D9590-0D52-4B1C-935C-FE49DBF838EB";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "abcde";
            string workflowName = "abcde";
            string versionName = "abcde";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // get the collection of this ExecutionResource
            ExecutionCollection collection = edgeWorkflowVersion.GetExecutions();

            // invoke the operation
            string executionName = "abcde";
            ExecutionData data = new ExecutionData
            {
                Properties = new ExecutionProperties("souenlqwltljsojdcbpc")
                {
                    Specification = { },
                },
                ExtendedLocation = new AzureResourceManagerCommonTypesExtendedLocation("ugf", ExtendedLocationType.EdgeZone),
            };
            ArmOperation<ExecutionResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, executionName, data);
            ExecutionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ExecutionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ExecutionsGetMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-08-01/examples/Executions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Executions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "EE6D9590-0D52-4B1C-935C-FE49DBF838EB";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "abcde";
            string workflowName = "abcde";
            string versionName = "abcde";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // get the collection of this ExecutionResource
            ExecutionCollection collection = edgeWorkflowVersion.GetExecutions();

            // invoke the operation
            string executionName = "abcde";
            ExecutionResource result = await collection.GetAsync(executionName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ExecutionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ExecutionsListByWorkflowVersionMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-08-01/examples/Executions_ListByWorkflowVersion_MaximumSet_Gen.json
            // this example is just showing the usage of "Executions_ListByWorkflowVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "EE6D9590-0D52-4B1C-935C-FE49DBF838EB";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "abcde";
            string workflowName = "abcde";
            string versionName = "abcde";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // get the collection of this ExecutionResource
            ExecutionCollection collection = edgeWorkflowVersion.GetExecutions();

            // invoke the operation and iterate over the result
            await foreach (ExecutionResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ExecutionData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_ExecutionsGetMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-08-01/examples/Executions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Executions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "EE6D9590-0D52-4B1C-935C-FE49DBF838EB";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "abcde";
            string workflowName = "abcde";
            string versionName = "abcde";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // get the collection of this ExecutionResource
            ExecutionCollection collection = edgeWorkflowVersion.GetExecutions();

            // invoke the operation
            string executionName = "abcde";
            bool result = await collection.ExistsAsync(executionName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_ExecutionsGetMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-08-01/examples/Executions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Executions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "EE6D9590-0D52-4B1C-935C-FE49DBF838EB";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "abcde";
            string workflowName = "abcde";
            string versionName = "abcde";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // get the collection of this ExecutionResource
            ExecutionCollection collection = edgeWorkflowVersion.GetExecutions();

            // invoke the operation
            string executionName = "abcde";
            NullableResponse<ExecutionResource> response = await collection.GetIfExistsAsync(executionName);
            ExecutionResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ExecutionData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
