// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_EdgeContextResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ContextsGetMaximumSet()
        {
            // Generated from example definition: 2025-06-01/Contexts_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Context_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeContextResource created on azure
            // for more information of creating EdgeContextResource, please refer to the document of EdgeContextResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "testname";
            ResourceIdentifier edgeContextResourceId = EdgeContextResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName);
            EdgeContextResource edgeContext = client.GetEdgeContextResource(edgeContextResourceId);

            // invoke the operation
            EdgeContextResource result = await edgeContext.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeContextData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ContextsDeleteMaximumSet()
        {
            // Generated from example definition: 2025-06-01/Contexts_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "Context_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeContextResource created on azure
            // for more information of creating EdgeContextResource, please refer to the document of EdgeContextResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "testname";
            ResourceIdentifier edgeContextResourceId = EdgeContextResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName);
            EdgeContextResource edgeContext = client.GetEdgeContextResource(edgeContextResourceId);

            // invoke the operation
            await edgeContext.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ContextsUpdateMaximumSet()
        {
            // Generated from example definition: 2025-06-01/Contexts_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "Context_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeContextResource created on azure
            // for more information of creating EdgeContextResource, please refer to the document of EdgeContextResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "testname";
            ResourceIdentifier edgeContextResourceId = EdgeContextResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName);
            EdgeContextResource edgeContext = client.GetEdgeContextResource(edgeContextResourceId);

            // invoke the operation
            EdgeContextPatch patch = new EdgeContextPatch
            {
                Tags =
{
["key9545"] = "dhxykbzgliyqxxizttbjhuruhhv"
},
                Properties = new EdgeContextUpdateProperties
                {
                    Capabilities = {new ContextCapability("tpylinjcmlnycfpofpxjtqmt", "banbenutsngwytoqh")
{
State = EdgeResourceState.Active,
}},
                    Hierarchies = { new ContextHierarchy("upqe", "vg") },
                },
            };
            ArmOperation<EdgeContextResource> lro = await edgeContext.UpdateAsync(WaitUntil.Completed, patch);
            EdgeContextResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeContextData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
