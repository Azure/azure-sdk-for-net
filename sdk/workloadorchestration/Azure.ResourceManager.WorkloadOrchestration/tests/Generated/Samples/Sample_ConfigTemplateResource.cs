// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_ConfigTemplateResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ConfigTemplatesGetMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/ConfigTemplates_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigTemplates_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigTemplateResource created on azure
            // for more information of creating ConfigTemplateResource, please refer to the document of ConfigTemplateResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string configTemplateName = "testname";
            ResourceIdentifier configTemplateResourceId = ConfigTemplateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configTemplateName);
            ConfigTemplateResource configTemplate = client.GetConfigTemplateResource(configTemplateResourceId);

            // invoke the operation
            ConfigTemplateResource result = await configTemplate.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ConfigTemplateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ConfigTemplatesDeleteMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/ConfigTemplates_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigTemplates_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigTemplateResource created on azure
            // for more information of creating ConfigTemplateResource, please refer to the document of ConfigTemplateResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string configTemplateName = "testname";
            ResourceIdentifier configTemplateResourceId = ConfigTemplateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configTemplateName);
            ConfigTemplateResource configTemplate = client.GetConfigTemplateResource(configTemplateResourceId);

            // invoke the operation
            await configTemplate.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ConfigTemplatesUpdateMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/ConfigTemplates_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigTemplates_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigTemplateResource created on azure
            // for more information of creating ConfigTemplateResource, please refer to the document of ConfigTemplateResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string configTemplateName = "testname";
            ResourceIdentifier configTemplateResourceId = ConfigTemplateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configTemplateName);
            ConfigTemplateResource configTemplate = client.GetConfigTemplateResource(configTemplateResourceId);

            // invoke the operation
            ConfigTemplatePatch patch = new ConfigTemplatePatch
            {
                ConfigTemplatePropertiesUpdateDescription = "cavjiqnrbzsvedicrixhwnfj",
                Tags =
{
["key7701"] = "wrsv"
},
            };
            ConfigTemplateResource result = await configTemplate.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ConfigTemplateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateVersion_ConfigTemplatesCreateVersionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/ConfigTemplates_CreateVersion_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigTemplates_CreateVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigTemplateResource created on azure
            // for more information of creating ConfigTemplateResource, please refer to the document of ConfigTemplateResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string configTemplateName = "testname";
            ResourceIdentifier configTemplateResourceId = ConfigTemplateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configTemplateName);
            ConfigTemplateResource configTemplate = client.GetConfigTemplateResource(configTemplateResourceId);

            // invoke the operation
            ConfigTemplateVersionWithUpdateType body = new ConfigTemplateVersionWithUpdateType(new ConfigTemplateVersionData
            {
                Properties = new ConfigTemplateVersionProperties("rgricnhvcbqykc"),
            })
            {
                UpdateType = UpdateType.Major,
                Version = "1.0.0",
            };
            ArmOperation<ConfigTemplateVersionResource> lro = await configTemplate.CreateVersionAsync(WaitUntil.Completed, body);
            ConfigTemplateVersionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ConfigTemplateVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RemoveVersion_ConfigTemplatesRemoveVersionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/ConfigTemplates_RemoveVersion_MaximumSet_Gen.json
            // this example is just showing the usage of "ConfigTemplates_RemoveVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ConfigTemplateResource created on azure
            // for more information of creating ConfigTemplateResource, please refer to the document of ConfigTemplateResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string configTemplateName = "testname";
            ResourceIdentifier configTemplateResourceId = ConfigTemplateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, configTemplateName);
            ConfigTemplateResource configTemplate = client.GetConfigTemplateResource(configTemplateResourceId);

            // invoke the operation
            VersionContent content = new VersionContent("ghtvdzgmzncaifrnuumg");
            RemoveVersionResult result = await configTemplate.RemoveVersionAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
