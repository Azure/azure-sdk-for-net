// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_EdgeDynamicSchemaResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DynamicSchemasGetMaximumSet()
        {
            // Generated from example definition: 2025-06-01/DynamicSchemas_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicSchema_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeDynamicSchemaResource created on azure
            // for more information of creating EdgeDynamicSchemaResource, please refer to the document of EdgeDynamicSchemaResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string schemaName = "testname";
            string dynamicSchemaName = "testname";
            ResourceIdentifier edgeDynamicSchemaResourceId = EdgeDynamicSchemaResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, schemaName, dynamicSchemaName);
            EdgeDynamicSchemaResource edgeDynamicSchema = client.GetEdgeDynamicSchemaResource(edgeDynamicSchemaResourceId);

            // invoke the operation
            EdgeDynamicSchemaResource result = await edgeDynamicSchema.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeDynamicSchemaData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DynamicSchemasDeleteMaximumSet()
        {
            // Generated from example definition: 2025-06-01/DynamicSchemas_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicSchema_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeDynamicSchemaResource created on azure
            // for more information of creating EdgeDynamicSchemaResource, please refer to the document of EdgeDynamicSchemaResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string schemaName = "testname";
            string dynamicSchemaName = "testname";
            ResourceIdentifier edgeDynamicSchemaResourceId = EdgeDynamicSchemaResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, schemaName, dynamicSchemaName);
            EdgeDynamicSchemaResource edgeDynamicSchema = client.GetEdgeDynamicSchemaResource(edgeDynamicSchemaResourceId);

            // invoke the operation
            await edgeDynamicSchema.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_DynamicSchemasUpdateMaximumSet()
        {
            // Generated from example definition: 2025-06-01/DynamicSchemas_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "DynamicSchema_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeDynamicSchemaResource created on azure
            // for more information of creating EdgeDynamicSchemaResource, please refer to the document of EdgeDynamicSchemaResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string schemaName = "testname";
            string dynamicSchemaName = "testname";
            ResourceIdentifier edgeDynamicSchemaResourceId = EdgeDynamicSchemaResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, schemaName, dynamicSchemaName);
            EdgeDynamicSchemaResource edgeDynamicSchema = client.GetEdgeDynamicSchemaResource(edgeDynamicSchemaResourceId);

            // invoke the operation
            EdgeDynamicSchemaData data = new EdgeDynamicSchemaData
            {
                Properties = new EdgeDynamicSchemaProperties(),
            };
            EdgeDynamicSchemaResource result = await edgeDynamicSchema.UpdateAsync(data);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeDynamicSchemaData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
