// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_WorkflowTemplateVersionResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_WorkflowTemplateVersionsGetMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/WorkflowTemplateVersions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "WorkflowTemplateVersions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkflowTemplateVersionResource created on azure
            // for more information of creating WorkflowTemplateVersionResource, please refer to the document of WorkflowTemplateVersionResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string workflowTemplateName = "testname";
            string workflowTemplateVersionName = "1.0.0";
            ResourceIdentifier workflowTemplateVersionResourceId = WorkflowTemplateVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workflowTemplateName, workflowTemplateVersionName);
            WorkflowTemplateVersionResource workflowTemplateVersion = client.GetWorkflowTemplateVersionResource(workflowTemplateVersionResourceId);

            // invoke the operation
            WorkflowTemplateVersionResource result = await workflowTemplateVersion.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WorkflowTemplateVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_WorkflowTemplateVersionsDeleteMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/WorkflowTemplateVersions_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "WorkflowTemplateVersions_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkflowTemplateVersionResource created on azure
            // for more information of creating WorkflowTemplateVersionResource, please refer to the document of WorkflowTemplateVersionResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string workflowTemplateName = "testname";
            string workflowTemplateVersionName = "1.0.0";
            ResourceIdentifier workflowTemplateVersionResourceId = WorkflowTemplateVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workflowTemplateName, workflowTemplateVersionName);
            WorkflowTemplateVersionResource workflowTemplateVersion = client.GetWorkflowTemplateVersionResource(workflowTemplateVersionResourceId);

            // invoke the operation
            await workflowTemplateVersion.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_WorkflowTemplateVersionsUpdateMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/WorkflowTemplateVersions_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "WorkflowTemplateVersions_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkflowTemplateVersionResource created on azure
            // for more information of creating WorkflowTemplateVersionResource, please refer to the document of WorkflowTemplateVersionResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string workflowTemplateName = "testname";
            string workflowTemplateVersionName = "1.0.0";
            ResourceIdentifier workflowTemplateVersionResourceId = WorkflowTemplateVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workflowTemplateName, workflowTemplateVersionName);
            WorkflowTemplateVersionResource workflowTemplateVersion = client.GetWorkflowTemplateVersionResource(workflowTemplateVersionResourceId);

            // invoke the operation
            UpdateType updateType = UpdateType.Major;
            WorkflowTemplateVersionPatch patch = new WorkflowTemplateVersionPatch
            {
                Properties = new WorkflowTemplateVersionPropertiesUpdate
                {
                    Configurations = "bw",
                    StageSpecTemplate = {new StageSpecTemplate("nexavxadasnlftmvwcdhqgtweoycvz")
{
Specification = {},
OrchestratorType = OrchestratorType.TO,
}},
                },
            };
            WorkflowTemplateVersionResource result = await workflowTemplateVersion.UpdateAsync(updateType, patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WorkflowTemplateVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
