// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_EdgeWorkflowVersionResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_WorkflowVersionsGetMaximumSet()
        {
            // Generated from example definition: 2025-06-01/WorkflowVersions_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "WorkflowVersion_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "testname";
            string workflowName = "testname";
            string versionName = "testname";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // invoke the operation
            EdgeWorkflowVersionResource result = await edgeWorkflowVersion.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeWorkflowVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_WorkflowVersionsDeleteMaximumSet()
        {
            // Generated from example definition: 2025-06-01/WorkflowVersions_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "WorkflowVersion_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "testname";
            string workflowName = "testname";
            string versionName = "testname";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // invoke the operation
            await edgeWorkflowVersion.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_WorkflowVersionsUpdateMaximumSet()
        {
            // Generated from example definition: 2025-06-01/WorkflowVersions_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "WorkflowVersion_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this EdgeWorkflowVersionResource created on azure
            // for more information of creating EdgeWorkflowVersionResource, please refer to the document of EdgeWorkflowVersionResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string contextName = "testname";
            string workflowName = "testname";
            string versionName = "testname";
            ResourceIdentifier edgeWorkflowVersionResourceId = EdgeWorkflowVersionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, contextName, workflowName, versionName);
            EdgeWorkflowVersionResource edgeWorkflowVersion = client.GetEdgeWorkflowVersionResource(edgeWorkflowVersionResourceId);

            // invoke the operation
            EdgeWorkflowVersionData data = new EdgeWorkflowVersionData
            {
                Properties = new EdgeWorkflowVersionProperties(new StageSpec[]
            {
new StageSpec("amrbjd")
{
Specification = {},
Tasks = {new TaskSpec("xxmeyvmgydbcwxqwjhadjxjod", new Dictionary<string, BinaryData>())
{
TargetId = new ResourceIdentifier("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"),
}},
TaskOption = new EdgeTaskConfig
{
Concurrency = 3,
ErrorAction = new TaskErrorAction
{
Mode = TaskErrorActionModeType.StopOnAnyFailure,
MaxToleratedFailures = 0,
},
},
}
            })
                {
                    Specification = { },
                },
            };
            ArmOperation<EdgeWorkflowVersionResource> lro = await edgeWorkflowVersion.UpdateAsync(WaitUntil.Completed, data);
            EdgeWorkflowVersionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeWorkflowVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
