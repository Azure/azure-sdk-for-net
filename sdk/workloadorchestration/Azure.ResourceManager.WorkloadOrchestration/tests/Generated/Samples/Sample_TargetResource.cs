// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_TargetResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_TargetsGetMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            TargetResource result = await target.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TargetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_TargetsDeleteMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            bool? forceDelete = true;
            await target.DeleteAsync(WaitUntil.Completed, forceDelete: forceDelete);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_TargetsUpdateMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            TargetPatch patch = new TargetPatch
            {
                Properties = new TargetPropertiesUpdate
                {
                    Description = "yhnhdpznncdvncmnvoeohqjx",
                    DisplayName = "pguujtzjjvixgjitugybrefp",
                    TargetSpecification = { },
                    Capabilities = { "dasqhyxfakivfzqb" },
                    HierarchyLevel = "hfyntwxetgsmnucbjvvphtyxu",
                    SolutionScope = "testname",
                    State = ResourceState.Active,
                },
                Tags =
{
["key8026"] = "yoosplotwgoquvpox"
},
            };
            ArmOperation<TargetResource> lro = await target.UpdateAsync(WaitUntil.Completed, patch);
            TargetResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            TargetData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task InstallSolution_TargetsInstallSolutionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_InstallSolution_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_InstallSolution" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            InstallSolutionContent content = new InstallSolutionContent("ayggzqrdodozomnfvgag", "jqsmzygmvhtvhwnpgojpfkhpb");
            await target.InstallSolutionAsync(WaitUntil.Completed, content);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task PublishSolutionVersion_TargetsPublishSolutionVersionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_PublishSolutionVersion_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_PublishSolutionVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            SolutionVersionContent content = new SolutionVersionContent("ywafigxpemxvuxrybbgvzbprhaspgt", "lwjsyauhyngiydh", "fhnasirsxjtkejttkbewcu");
            ArmOperation<SolutionVersionResource> lro = await target.PublishSolutionVersionAsync(WaitUntil.Completed, content);
            SolutionVersionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SolutionVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RemoveRevision_TargetsRemoveRevisionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_RemoveRevision_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_RemoveRevision" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            RemoveRevisionContent content = new RemoveRevisionContent("jpdyngmnvpzblkv", "tomwmqybqomwkfaeukjneva");
            await target.RemoveRevisionAsync(WaitUntil.Completed, content);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task ResolveConfiguration_TargetsResolveConfigurationMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_ResolveConfiguration_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_ResolveConfiguration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            SolutionTemplateContent content = new SolutionTemplateContent("fkkhgpcnsm", "adbdfozvdwuuaegtpsneuty")
            {
                SolutionInstanceName = "testname",
                SolutionDependencies = {new SolutionDependencyContent
{
SolutionVersionId = "cydzqntmjlqtksbavjwteru",
SolutionTemplateId = "liqauthxnscodbiwktwfwrrsg",
SolutionTemplateVersion = "gordjasyxxrj",
SolutionInstanceName = "testname",
TargetId = "steadvphxtyhjokqicrtg",
Dependencies = {},
}},
            };
            ArmOperation<ResolvedConfiguration> lro = await target.ResolveConfigurationAsync(WaitUntil.Completed, content);
            ResolvedConfiguration result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task ReviewSolutionVersion_TargetsReviewSolutionVersionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_ReviewSolutionVersion_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_ReviewSolutionVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            SolutionTemplateContent content = new SolutionTemplateContent("fkkhgpcnsm", "adbdfozvdwuuaegtpsneuty")
            {
                SolutionInstanceName = "testname",
                SolutionDependencies = {new SolutionDependencyContent
{
SolutionVersionId = "cydzqntmjlqtksbavjwteru",
SolutionTemplateId = "liqauthxnscodbiwktwfwrrsg",
SolutionTemplateVersion = "gordjasyxxrj",
SolutionInstanceName = "testname",
TargetId = "steadvphxtyhjokqicrtg",
Dependencies = {},
}},
            };
            ArmOperation<SolutionVersionResource> lro = await target.ReviewSolutionVersionAsync(WaitUntil.Completed, content);
            SolutionVersionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SolutionVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task UninstallSolution_TargetsUninstallSolutionMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_UninstallSolution_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_UninstallSolution" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            UninstallSolutionContent content = new UninstallSolutionContent("npwgvjk")
            {
                SolutionInstanceName = "lzihiumrcxbolmkqktvtuqyhg",
            };
            await target.UninstallSolutionAsync(WaitUntil.Completed, content);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task UpdateExternalValidationStatus_TargetsUpdateExternalValidationStatusMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/preview/2025-06-01-preview/examples/Targets_UpdateExternalValidationStatus_MaximumSet_Gen.json
            // this example is just showing the usage of "Targets_UpdateExternalValidationStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TargetResource created on azure
            // for more information of creating TargetResource, please refer to the document of TargetResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            ResourceIdentifier targetResourceId = TargetResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName);
            TargetResource target = client.GetTargetResource(targetResourceId);

            // invoke the operation
            UpdateExternalValidationStatusContent content = new UpdateExternalValidationStatusContent("shntcsuwlmpehmuqkrbf", "ivsjzwy", ValidationStatus.Valid)
            {
                ErrorDetails = new ResponseError(null, null),
            };
            ArmOperation<SolutionVersionResource> lro = await target.UpdateExternalValidationStatusAsync(WaitUntil.Completed, content);
            SolutionVersionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SolutionVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
