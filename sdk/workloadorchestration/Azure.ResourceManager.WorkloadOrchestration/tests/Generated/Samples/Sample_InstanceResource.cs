// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.WorkloadOrchestration.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.WorkloadOrchestration.Samples
{
    public partial class Sample_InstanceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_InstancesGetMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-06-01/examples/Instances_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Instances_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this InstanceResource created on azure
            // for more information of creating InstanceResource, please refer to the document of InstanceResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            string solutionName = "testname";
            string instanceName = "testname";
            ResourceIdentifier instanceResourceId = InstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName, solutionName, instanceName);
            InstanceResource instance = client.GetInstanceResource(instanceResourceId);

            // invoke the operation
            InstanceResource result = await instance.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            InstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_InstancesDeleteMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-06-01/examples/Instances_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "Instances_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this InstanceResource created on azure
            // for more information of creating InstanceResource, please refer to the document of InstanceResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            string solutionName = "testname";
            string instanceName = "testname";
            ResourceIdentifier instanceResourceId = InstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName, solutionName, instanceName);
            InstanceResource instance = client.GetInstanceResource(instanceResourceId);

            // invoke the operation
            await instance.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_InstancesUpdateMaximumSet()
        {
            // Generated from example definition: specification/edge/resource-manager/Microsoft.Edge/configurationmanager/stable/2025-06-01/examples/Instances_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "Instances_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this InstanceResource created on azure
            // for more information of creating InstanceResource, please refer to the document of InstanceResource
            string subscriptionId = "9D54FE4C-00AF-4836-8F48-B6A9C4E47192";
            string resourceGroupName = "rgconfigurationmanager";
            string targetName = "testname";
            string solutionName = "testname";
            string instanceName = "testname";
            ResourceIdentifier instanceResourceId = InstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, targetName, solutionName, instanceName);
            InstanceResource instance = client.GetInstanceResource(instanceResourceId);

            // invoke the operation
            InstancePatch patch = new InstancePatch
            {
                Properties = new InstancePropertiesUpdate
                {
                    SolutionVersionId = "vrpzlamkvanqibtjarpxit",
                    TargetId = "tqkdvc",
                    ActiveState = ActiveState.Active,
                    ReconciliationPolicy = new ReconciliationPolicyPropertiesUpdate
                    {
                        State = ReconciliationState.Inactive,
                        Interval = "cmzlrjwnlshnkgv",
                    },
                    SolutionScope = "testname",
                },
            };
            ArmOperation<InstanceResource> lro = await instance.UpdateAsync(WaitUntil.Completed, patch);
            InstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            InstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
