// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.WorkloadOrchestration.Models
{
    /// <summary> Workflow Template Version Properties. </summary>
    public partial class WorkflowTemplateVersionProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="WorkflowTemplateVersionProperties"/>. </summary>
        /// <param name="stageSpecTemplate"> workflow template specification. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="stageSpecTemplate"/> is null. </exception>
        public WorkflowTemplateVersionProperties(IEnumerable<StageSpecTemplate> stageSpecTemplate)
        {
            Argument.AssertNotNull(stageSpecTemplate, nameof(stageSpecTemplate));

            StageSpecTemplate = stageSpecTemplate.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="WorkflowTemplateVersionProperties"/>. </summary>
        /// <param name="configurations"> Config expressions for this workflow version. </param>
        /// <param name="stageSpecTemplate"> workflow template specification. </param>
        /// <param name="provisioningState"> Provisioning state of resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal WorkflowTemplateVersionProperties(string configurations, IList<StageSpecTemplate> stageSpecTemplate, ProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Configurations = configurations;
            StageSpecTemplate = stageSpecTemplate;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="WorkflowTemplateVersionProperties"/> for deserialization. </summary>
        internal WorkflowTemplateVersionProperties()
        {
        }

        /// <summary> Config expressions for this workflow version. </summary>
        public string Configurations { get; set; }
        /// <summary> workflow template specification. </summary>
        public IList<StageSpecTemplate> StageSpecTemplate { get; }
        /// <summary> Provisioning state of resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
