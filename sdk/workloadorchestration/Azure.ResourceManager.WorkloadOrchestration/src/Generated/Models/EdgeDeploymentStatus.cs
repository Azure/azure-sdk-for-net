// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.WorkloadOrchestration.Models
{
    /// <summary> Deployment Status. </summary>
    public partial class EdgeDeploymentStatus
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EdgeDeploymentStatus"/>. </summary>
        internal EdgeDeploymentStatus()
        {
            TargetStatuses = new ChangeTrackingList<TargetStatus>();
        }

        /// <summary> Initializes a new instance of <see cref="EdgeDeploymentStatus"/>. </summary>
        /// <param name="lastModified"> The lastModified of the Status. </param>
        /// <param name="deployed"> Indicates if Instance is deployed. </param>
        /// <param name="expectedRunningJobId"> The expected running job id. </param>
        /// <param name="runningJobId"> The running job id. </param>
        /// <param name="status"> Deployment status. </param>
        /// <param name="statusDetails"> Status details. </param>
        /// <param name="generation"> Deployment Generation. </param>
        /// <param name="targetStatuses"> Target resource statuses. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EdgeDeploymentStatus(DateTimeOffset? lastModified, int? deployed, int? expectedRunningJobId, int? runningJobId, string status, string statusDetails, int? generation, IReadOnlyList<TargetStatus> targetStatuses, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LastModified = lastModified;
            Deployed = deployed;
            ExpectedRunningJobId = expectedRunningJobId;
            RunningJobId = runningJobId;
            Status = status;
            StatusDetails = statusDetails;
            Generation = generation;
            TargetStatuses = targetStatuses;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The lastModified of the Status. </summary>
        public DateTimeOffset? LastModified { get; }
        /// <summary> Indicates if Instance is deployed. </summary>
        public int? Deployed { get; }
        /// <summary> The expected running job id. </summary>
        public int? ExpectedRunningJobId { get; }
        /// <summary> The running job id. </summary>
        public int? RunningJobId { get; }
        /// <summary> Deployment status. </summary>
        public string Status { get; }
        /// <summary> Status details. </summary>
        public string StatusDetails { get; }
        /// <summary> Deployment Generation. </summary>
        public int? Generation { get; }
        /// <summary> Target resource statuses. </summary>
        public IReadOnlyList<TargetStatus> TargetStatuses { get; }
    }
}
