// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dashboard
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GrafanaOperations.
    /// </summary>
    public static partial class GrafanaOperationsExtensions
    {
            /// <summary>
            /// List all resources of workspaces for Grafana under the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            public static IPage<GrafanaResource> List(this IGrafanaOperations operations, string subscriptionId)
            {
                return operations.ListAsync(subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GrafanaResource>> ListAsync(this IGrafanaOperations operations, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(subscriptionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified resource
            /// group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            public static IPage<GrafanaResource> ListByResourceGroup(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(subscriptionId, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified resource
            /// group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GrafanaResource>> ListByResourceGroupAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(subscriptionId, resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the properties of a specific workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            public static GrafanaResource Get(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                return operations.GetAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the properties of a specific workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GrafanaResource> GetAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a workspace for Grafana resource. This API is idempotent,
            /// so user can either create a new grafana or update an existing grafana.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static GrafanaResource Create(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, GrafanaResource body = default(GrafanaResource))
            {
                return operations.CreateAsync(subscriptionId, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a workspace for Grafana resource. This API is idempotent,
            /// so user can either create a new grafana or update an existing grafana.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GrafanaResource> CreateAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, GrafanaResource body = default(GrafanaResource), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update a workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static GrafanaResource Update(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, GrafanaResourceUpdateParameters body = default(GrafanaResourceUpdateParameters))
            {
                return operations.UpdateAsync(subscriptionId, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GrafanaResource> UpdateAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, GrafanaResourceUpdateParameters body = default(GrafanaResourceUpdateParameters), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            public static void Delete(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                operations.DeleteAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create or update a workspace for Grafana resource. This API is idempotent,
            /// so user can either create a new grafana or update an existing grafana.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static GrafanaResource BeginCreate(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, GrafanaResource body = default(GrafanaResource))
            {
                return operations.BeginCreateAsync(subscriptionId, resourceGroupName, workspaceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a workspace for Grafana resource. This API is idempotent,
            /// so user can either create a new grafana or update an existing grafana.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GrafanaResource> BeginCreateAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, GrafanaResource body = default(GrafanaResource), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            public static void BeginDelete(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                operations.BeginDeleteAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a workspace for Grafana resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Gets subscription credentials which uniquely identify Microsoft Azure
            /// subscription. The subscription ID forms part of the URI for every service
            /// call.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of Azure Managed Workspace for Grafana.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IGrafanaOperations operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<GrafanaResource> ListNext(this IGrafanaOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GrafanaResource>> ListNextAsync(this IGrafanaOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified resource
            /// group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<GrafanaResource> ListByResourceGroupNext(this IGrafanaOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all resources of workspaces for Grafana under the specified resource
            /// group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GrafanaResource>> ListByResourceGroupNextAsync(this IGrafanaOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
