// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.Dell.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableDellResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableDellResourceGroupResource"/> class for mocking. </summary>
        protected MockableDellResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDellResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDellResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of FileSystemResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of FileSystemResources and their operations over a FileSystemResource. </returns>
        public virtual FileSystemResourceCollection GetFileSystemResources()
        {
            return GetCachedClient(client => new FileSystemResourceCollection(client, Id));
        }

        /// <summary>
        /// Get a FileSystemResource
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dell.Storage/filesystems/{filesystemName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>FileSystemResource_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-21-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="FileSystemResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="filesystemName"> Name of the filesystem resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="filesystemName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="filesystemName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<FileSystemResource>> GetFileSystemResourceAsync(string filesystemName, CancellationToken cancellationToken = default)
        {
            return await GetFileSystemResources().GetAsync(filesystemName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a FileSystemResource
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dell.Storage/filesystems/{filesystemName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>FileSystemResource_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-21-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="FileSystemResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="filesystemName"> Name of the filesystem resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="filesystemName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="filesystemName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<FileSystemResource> GetFileSystemResource(string filesystemName, CancellationToken cancellationToken = default)
        {
            return GetFileSystemResources().Get(filesystemName, cancellationToken);
        }
    }
}
