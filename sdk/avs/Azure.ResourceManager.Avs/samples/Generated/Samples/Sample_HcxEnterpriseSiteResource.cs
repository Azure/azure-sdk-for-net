// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Avs;

namespace Azure.ResourceManager.Avs.Samples
{
    public partial class Sample_HcxEnterpriseSiteResource
    {
        // HcxEnterpriseSites_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_HcxEnterpriseSitesGet()
        {
            // Generated from example definition: specification/vmware/resource-manager/Microsoft.AVS/stable/2022-05-01/examples/HcxEnterpriseSites_Get.json
            // this example is just showing the usage of "HcxEnterpriseSites_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HcxEnterpriseSiteResource created on azure
            // for more information of creating HcxEnterpriseSiteResource, please refer to the document of HcxEnterpriseSiteResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string hcxEnterpriseSiteName = "site1";
            ResourceIdentifier hcxEnterpriseSiteResourceId = HcxEnterpriseSiteResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, hcxEnterpriseSiteName);
            HcxEnterpriseSiteResource hcxEnterpriseSite = client.GetHcxEnterpriseSiteResource(hcxEnterpriseSiteResourceId);

            // invoke the operation
            HcxEnterpriseSiteResource result = await hcxEnterpriseSite.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HcxEnterpriseSiteData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // HcxEnterpriseSites_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_HcxEnterpriseSitesCreateOrUpdate()
        {
            // Generated from example definition: specification/vmware/resource-manager/Microsoft.AVS/stable/2022-05-01/examples/HcxEnterpriseSites_CreateOrUpdate.json
            // this example is just showing the usage of "HcxEnterpriseSites_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HcxEnterpriseSiteResource created on azure
            // for more information of creating HcxEnterpriseSiteResource, please refer to the document of HcxEnterpriseSiteResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string hcxEnterpriseSiteName = "site1";
            ResourceIdentifier hcxEnterpriseSiteResourceId = HcxEnterpriseSiteResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, hcxEnterpriseSiteName);
            HcxEnterpriseSiteResource hcxEnterpriseSite = client.GetHcxEnterpriseSiteResource(hcxEnterpriseSiteResourceId);

            // invoke the operation
            HcxEnterpriseSiteData data = new HcxEnterpriseSiteData();
            ArmOperation<HcxEnterpriseSiteResource> lro = await hcxEnterpriseSite.UpdateAsync(WaitUntil.Completed, data);
            HcxEnterpriseSiteResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HcxEnterpriseSiteData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // HcxEnterpriseSites_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_HcxEnterpriseSitesDelete()
        {
            // Generated from example definition: specification/vmware/resource-manager/Microsoft.AVS/stable/2022-05-01/examples/HcxEnterpriseSites_Delete.json
            // this example is just showing the usage of "HcxEnterpriseSites_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HcxEnterpriseSiteResource created on azure
            // for more information of creating HcxEnterpriseSiteResource, please refer to the document of HcxEnterpriseSiteResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string hcxEnterpriseSiteName = "site1";
            ResourceIdentifier hcxEnterpriseSiteResourceId = HcxEnterpriseSiteResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, hcxEnterpriseSiteName);
            HcxEnterpriseSiteResource hcxEnterpriseSite = client.GetHcxEnterpriseSiteResource(hcxEnterpriseSiteResourceId);

            // invoke the operation
            await hcxEnterpriseSite.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
