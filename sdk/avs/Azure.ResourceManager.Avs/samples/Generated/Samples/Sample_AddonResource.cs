// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Avs.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Avs.Samples
{
    public partial class Sample_AddonResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AddonsGetArcReg()
        {
            // Generated from example definition: 2024-09-01/Addons_Get_ArcReg.json
            // this example is just showing the usage of "Addon_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "arc";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonResource result = await addon.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AddonsGetHCX()
        {
            // Generated from example definition: 2024-09-01/Addons_Get_HCX.json
            // this example is just showing the usage of "Addon_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "hcx";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonResource result = await addon.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AddonsGetHCXWithNetworks()
        {
            // Generated from example definition: 2024-09-01/Addons_Get_HCX_With_Networks.json
            // this example is just showing the usage of "Addon_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "hcx";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonResource result = await addon.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AddonsGetSRM()
        {
            // Generated from example definition: 2024-09-01/Addons_Get_SRM.json
            // this example is just showing the usage of "Addon_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "srm";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonResource result = await addon.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AddonsGetVR()
        {
            // Generated from example definition: 2024-09-01/Addons_Get_VR.json
            // this example is just showing the usage of "Addon_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "vr";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonResource result = await addon.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_AddonsDelete()
        {
            // Generated from example definition: 2024-09-01/Addons_Delete.json
            // this example is just showing the usage of "Addon_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "srm";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            await addon.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_AddonsCreateOrUpdateArcReg()
        {
            // Generated from example definition: 2024-09-01/Addons_CreateOrUpdate_ArcReg.json
            // this example is just showing the usage of "Addon_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "arc";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonData data = new AddonData
            {
                Properties = new AddonArcProperties
                {
                    VCenter = "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg_test/providers/Microsoft.ConnectedVMwarevSphere/VCenters/test-vcenter",
                },
            };
            ArmOperation<AddonResource> lro = await addon.UpdateAsync(WaitUntil.Completed, data);
            AddonResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_AddonsCreateOrUpdateHCX()
        {
            // Generated from example definition: 2024-09-01/Addons_CreateOrUpdate_HCX.json
            // this example is just showing the usage of "Addon_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "hcx";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonData data = new AddonData
            {
                Properties = new AddonHcxProperties("VMware MaaS Cloud Provider (Enterprise)"),
            };
            ArmOperation<AddonResource> lro = await addon.UpdateAsync(WaitUntil.Completed, data);
            AddonResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_AddonsCreateOrUpdateHCXWithNetworks()
        {
            // Generated from example definition: 2024-09-01/Addons_CreateOrUpdate_HCX_With_Networks.json
            // this example is just showing the usage of "Addon_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "hcx";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonData data = new AddonData
            {
                Properties = new AddonHcxProperties("VMware MaaS Cloud Provider (Enterprise)")
                {
                    ManagementNetwork = "10.3.1.0/24",
                    UplinkNetwork = "10.3.2.0/24",
                },
            };
            ArmOperation<AddonResource> lro = await addon.UpdateAsync(WaitUntil.Completed, data);
            AddonResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_AddonsCreateOrUpdateSRM()
        {
            // Generated from example definition: 2024-09-01/Addons_CreateOrUpdate_SRM.json
            // this example is just showing the usage of "Addon_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "srm";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonData data = new AddonData
            {
                Properties = new AddonSrmProperties
                {
                    LicenseKey = "41915178-A8FF-4A4D-B683-6D735AF5E3F5",
                },
            };
            ArmOperation<AddonResource> lro = await addon.UpdateAsync(WaitUntil.Completed, data);
            AddonResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_AddonsCreateOrUpdateVR()
        {
            // Generated from example definition: 2024-09-01/Addons_CreateOrUpdate_VR.json
            // this example is just showing the usage of "Addon_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AddonResource created on azure
            // for more information of creating AddonResource, please refer to the document of AddonResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "group1";
            string privateCloudName = "cloud1";
            string addonName = "vr";
            ResourceIdentifier addonResourceId = AddonResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateCloudName, addonName);
            AddonResource addon = client.GetAddonResource(addonResourceId);

            // invoke the operation
            AddonData data = new AddonData
            {
                Properties = new AddonVrProperties(1),
            };
            ArmOperation<AddonResource> lro = await addon.UpdateAsync(WaitUntil.Completed, data);
            AddonResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AddonData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
