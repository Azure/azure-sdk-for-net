// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Avs.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Avs
{
    /// <summary> A class representing the PrivateCloud data model. </summary>
    public partial class PrivateCloudData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of PrivateCloudData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> The private cloud SKU. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sku"/> is null. </exception>
        public PrivateCloudData(AzureLocation location, AvsSku sku) : base(location)
        {
            if (sku == null)
            {
                throw new ArgumentNullException(nameof(sku));
            }

            Sku = sku;
            IdentitySources = new ChangeTrackingList<IdentitySource>();
            ExternalCloudLinks = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of PrivateCloudData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> The private cloud SKU. </param>
        /// <param name="identity"> The identity of the private cloud, if configured. Current supported identity types: SystemAssigned, None. </param>
        /// <param name="managementCluster"> The default cluster used for management. </param>
        /// <param name="internet"> Connectivity to internet is enabled or disabled. </param>
        /// <param name="identitySources"> vCenter Single Sign On Identity Sources. </param>
        /// <param name="availability"> Properties describing how the cloud is distributed across availability zones. </param>
        /// <param name="encryption"> Customer managed key encryption, can be enabled or disabled. </param>
        /// <param name="provisioningState"> The provisioning state. </param>
        /// <param name="circuit"> An ExpressRoute Circuit. </param>
        /// <param name="endpoints"> The endpoints. </param>
        /// <param name="networkBlock"> The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22. </param>
        /// <param name="managementNetwork"> Network used to access vCenter Server and NSX-T Manager. </param>
        /// <param name="provisioningNetwork"> Used for virtual machine cold migration, cloning, and snapshot migration. </param>
        /// <param name="vmotionNetwork"> Used for live migration of virtual machines. </param>
        /// <param name="vcenterPassword"> Optionally, set the vCenter admin password when the private cloud is created. </param>
        /// <param name="nsxtPassword"> Optionally, set the NSX-T Manager password when the private cloud is created. </param>
        /// <param name="vcenterCertificateThumbprint"> Thumbprint of the vCenter Server SSL certificate. </param>
        /// <param name="nsxtCertificateThumbprint"> Thumbprint of the NSX-T Manager SSL certificate. </param>
        /// <param name="externalCloudLinks"> Array of cloud link IDs from other clouds that connect to this one. </param>
        /// <param name="secondaryCircuit"> A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud. </param>
        internal PrivateCloudData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, AvsSku sku, ManagedServiceIdentity identity, ManagementCluster managementCluster, InternetEnum? internet, IList<IdentitySource> identitySources, AvailabilityProperties availability, Encryption encryption, PrivateCloudProvisioningState? provisioningState, Circuit circuit, Endpoints endpoints, string networkBlock, string managementNetwork, string provisioningNetwork, string vmotionNetwork, string vcenterPassword, string nsxtPassword, string vcenterCertificateThumbprint, string nsxtCertificateThumbprint, IReadOnlyList<string> externalCloudLinks, Circuit secondaryCircuit) : base(id, name, resourceType, systemData, tags, location)
        {
            Sku = sku;
            Identity = identity;
            ManagementCluster = managementCluster;
            Internet = internet;
            IdentitySources = identitySources;
            Availability = availability;
            Encryption = encryption;
            ProvisioningState = provisioningState;
            Circuit = circuit;
            Endpoints = endpoints;
            NetworkBlock = networkBlock;
            ManagementNetwork = managementNetwork;
            ProvisioningNetwork = provisioningNetwork;
            VmotionNetwork = vmotionNetwork;
            VcenterPassword = vcenterPassword;
            NsxtPassword = nsxtPassword;
            VcenterCertificateThumbprint = vcenterCertificateThumbprint;
            NsxtCertificateThumbprint = nsxtCertificateThumbprint;
            ExternalCloudLinks = externalCloudLinks;
            SecondaryCircuit = secondaryCircuit;
        }

        /// <summary> The private cloud SKU. </summary>
        internal AvsSku Sku { get; set; }
        /// <summary> The name of the SKU. </summary>
        public string SkuName
        {
            get => Sku is null ? default : Sku.Name;
            set => Sku = new AvsSku(value);
        }

        /// <summary> The identity of the private cloud, if configured. Current supported identity types: SystemAssigned, None. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> The default cluster used for management. </summary>
        public ManagementCluster ManagementCluster { get; set; }
        /// <summary> Connectivity to internet is enabled or disabled. </summary>
        public InternetEnum? Internet { get; set; }
        /// <summary> vCenter Single Sign On Identity Sources. </summary>
        public IList<IdentitySource> IdentitySources { get; }
        /// <summary> Properties describing how the cloud is distributed across availability zones. </summary>
        public AvailabilityProperties Availability { get; set; }
        /// <summary> Customer managed key encryption, can be enabled or disabled. </summary>
        public Encryption Encryption { get; set; }
        /// <summary> The provisioning state. </summary>
        public PrivateCloudProvisioningState? ProvisioningState { get; }
        /// <summary> An ExpressRoute Circuit. </summary>
        public Circuit Circuit { get; set; }
        /// <summary> The endpoints. </summary>
        public Endpoints Endpoints { get; }
        /// <summary> The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22. </summary>
        public string NetworkBlock { get; set; }
        /// <summary> Network used to access vCenter Server and NSX-T Manager. </summary>
        public string ManagementNetwork { get; }
        /// <summary> Used for virtual machine cold migration, cloning, and snapshot migration. </summary>
        public string ProvisioningNetwork { get; }
        /// <summary> Used for live migration of virtual machines. </summary>
        public string VmotionNetwork { get; }
        /// <summary> Optionally, set the vCenter admin password when the private cloud is created. </summary>
        public string VcenterPassword { get; set; }
        /// <summary> Optionally, set the NSX-T Manager password when the private cloud is created. </summary>
        public string NsxtPassword { get; set; }
        /// <summary> Thumbprint of the vCenter Server SSL certificate. </summary>
        public string VcenterCertificateThumbprint { get; }
        /// <summary> Thumbprint of the NSX-T Manager SSL certificate. </summary>
        public string NsxtCertificateThumbprint { get; }
        /// <summary> Array of cloud link IDs from other clouds that connect to this one. </summary>
        public IReadOnlyList<string> ExternalCloudLinks { get; }
        /// <summary> A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud. </summary>
        public Circuit SecondaryCircuit { get; set; }
    }
}
