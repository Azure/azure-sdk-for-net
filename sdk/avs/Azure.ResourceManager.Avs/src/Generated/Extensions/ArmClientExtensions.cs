// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager;

namespace Azure.ResourceManager.Avs
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region PrivateCloud
        /// <summary> Gets an object representing a PrivateCloud along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateCloud" /> object. </returns>
        public static PrivateCloud GetPrivateCloud(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateCloud(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Cluster
        /// <summary> Gets an object representing a Cluster along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Cluster" /> object. </returns>
        public static Cluster GetCluster(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Cluster(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Datastore
        /// <summary> Gets an object representing a Datastore along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Datastore" /> object. </returns>
        public static Datastore GetDatastore(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Datastore(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region HcxEnterpriseSite
        /// <summary> Gets an object representing a HcxEnterpriseSite along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HcxEnterpriseSite" /> object. </returns>
        public static HcxEnterpriseSite GetHcxEnterpriseSite(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new HcxEnterpriseSite(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ExpressRouteAuthorization
        /// <summary> Gets an object representing a ExpressRouteAuthorization along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteAuthorization" /> object. </returns>
        public static ExpressRouteAuthorization GetExpressRouteAuthorization(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ExpressRouteAuthorization(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region GlobalReachConnection
        /// <summary> Gets an object representing a GlobalReachConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GlobalReachConnection" /> object. </returns>
        public static GlobalReachConnection GetGlobalReachConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new GlobalReachConnection(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region WorkloadNetworkSegment
        /// <summary> Gets an object representing a WorkloadNetworkSegment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkloadNetworkSegment" /> object. </returns>
        public static WorkloadNetworkSegment GetWorkloadNetworkSegment(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new WorkloadNetworkSegment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CloudLink
        /// <summary> Gets an object representing a CloudLink along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CloudLink" /> object. </returns>
        public static CloudLink GetCloudLink(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CloudLink(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Addon
        /// <summary> Gets an object representing a Addon along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Addon" /> object. </returns>
        public static Addon GetAddon(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Addon(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PlacementPolicy
        /// <summary> Gets an object representing a PlacementPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PlacementPolicy" /> object. </returns>
        public static PlacementPolicy GetPlacementPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PlacementPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ScriptExecution
        /// <summary> Gets an object representing a ScriptExecution along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ScriptExecution" /> object. </returns>
        public static ScriptExecution GetScriptExecution(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ScriptExecution(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}
