// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Avs.Models
{
    /// <summary> The properties of a private cloud resource. </summary>
    internal partial class PrivateCloudProperties : PrivateCloudUpdateProperties
    {
        /// <summary> Initializes a new instance of PrivateCloudProperties. </summary>
        /// <param name="networkBlock"> The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkBlock"/> is null. </exception>
        internal PrivateCloudProperties(string networkBlock)
        {
            if (networkBlock == null)
            {
                throw new ArgumentNullException(nameof(networkBlock));
            }

            NetworkBlock = networkBlock;
            ExternalCloudLinks = new ChangeTrackingList<string>();
        }

        /// <summary> The provisioning state. </summary>
        public PrivateCloudProvisioningState? ProvisioningState { get; }
        /// <summary> An ExpressRoute Circuit. </summary>
        public Circuit Circuit { get; }
        /// <summary> The endpoints. </summary>
        public Endpoints Endpoints { get; }
        /// <summary> The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22. </summary>
        public string NetworkBlock { get; }
        /// <summary> Network used to access vCenter Server and NSX-T Manager. </summary>
        public string ManagementNetwork { get; }
        /// <summary> Used for virtual machine cold migration, cloning, and snapshot migration. </summary>
        public string ProvisioningNetwork { get; }
        /// <summary> Used for live migration of virtual machines. </summary>
        public string VmotionNetwork { get; }
        /// <summary> Optionally, set the vCenter admin password when the private cloud is created. </summary>
        public string VcenterPassword { get; }
        /// <summary> Optionally, set the NSX-T Manager password when the private cloud is created. </summary>
        public string NsxtPassword { get; }
        /// <summary> Thumbprint of the vCenter Server SSL certificate. </summary>
        public string VcenterCertificateThumbprint { get; }
        /// <summary> Thumbprint of the NSX-T Manager SSL certificate. </summary>
        public string NsxtCertificateThumbprint { get; }
        /// <summary> Array of cloud link IDs from other clouds that connect to this one. </summary>
        public IReadOnlyList<string> ExternalCloudLinks { get; }
        /// <summary> A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud. </summary>
        public Circuit SecondaryCircuit { get; }
    }
}
