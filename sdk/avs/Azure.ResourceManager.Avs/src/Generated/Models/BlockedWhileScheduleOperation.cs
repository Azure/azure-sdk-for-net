// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Avs.Models
{
    /// <summary> Time ranges blocked for scheduling maintenance. </summary>
    public partial class BlockedWhileScheduleOperation : ScheduleOperationConstraint
    {
        /// <summary> Initializes a new instance of <see cref="BlockedWhileScheduleOperation"/>. </summary>
        /// <param name="category"> Category of blocked date. </param>
        internal BlockedWhileScheduleOperation(BlockedDatesConstraintCategory category)
        {
            Category = category;
            TimeRanges = new ChangeTrackingList<BlockedDatesConstraintTimeRange>();
            Kind = ScheduleOperationConstraintKind.BlockedWhileScheduleOperation;
        }

        /// <summary> Initializes a new instance of <see cref="BlockedWhileScheduleOperation"/>. </summary>
        /// <param name="kind"> The kind of operation. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="category"> Category of blocked date. </param>
        /// <param name="timeRanges"> Date ranges blocked for schedule. </param>
        internal BlockedWhileScheduleOperation(ScheduleOperationConstraintKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, BlockedDatesConstraintCategory category, IReadOnlyList<BlockedDatesConstraintTimeRange> timeRanges) : base(kind, serializedAdditionalRawData)
        {
            Category = category;
            TimeRanges = timeRanges;
            Kind = kind;
        }

        /// <summary> Initializes a new instance of <see cref="BlockedWhileScheduleOperation"/> for deserialization. </summary>
        internal BlockedWhileScheduleOperation()
        {
        }

        /// <summary> Category of blocked date. </summary>
        public BlockedDatesConstraintCategory Category { get; }
        /// <summary> Date ranges blocked for schedule. </summary>
        public IReadOnlyList<BlockedDatesConstraintTimeRange> TimeRanges { get; }
    }
}
