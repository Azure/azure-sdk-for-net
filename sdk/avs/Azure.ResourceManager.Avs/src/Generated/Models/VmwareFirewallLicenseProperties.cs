// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Avs.Models
{
    /// <summary> The properties of a VMware Firewall license. </summary>
    public partial class VmwareFirewallLicenseProperties : LicenseProperties
    {
        /// <summary> Initializes a new instance of <see cref="VmwareFirewallLicenseProperties"/>. </summary>
        /// <param name="cores"> Number of cores included in the license, measured per hour. </param>
        /// <param name="endOn"> UTC datetime when the license expires. </param>
        public VmwareFirewallLicenseProperties(int cores, DateTimeOffset endOn)
        {
            Cores = cores;
            EndOn = endOn;
            Labels = new ChangeTrackingList<Label>();
            Kind = LicenseKind.VmwareFirewall;
        }

        /// <summary> Initializes a new instance of <see cref="VmwareFirewallLicenseProperties"/>. </summary>
        /// <param name="kind"> License kind. </param>
        /// <param name="provisioningState"> The state of the license provisioning. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="licenseKey"> License key. </param>
        /// <param name="cores"> Number of cores included in the license, measured per hour. </param>
        /// <param name="endOn"> UTC datetime when the license expires. </param>
        /// <param name="broadcomSiteId"> The Broadcom site ID associated with the license. </param>
        /// <param name="broadcomContractNumber"> The Broadcom contract number associated with the license. </param>
        /// <param name="labels"> Additional labels passed through for license reporting. </param>
        internal VmwareFirewallLicenseProperties(LicenseKind kind, LicenseProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData, string licenseKey, int cores, DateTimeOffset endOn, string broadcomSiteId, string broadcomContractNumber, IList<Label> labels) : base(kind, provisioningState, serializedAdditionalRawData)
        {
            LicenseKey = licenseKey;
            Cores = cores;
            EndOn = endOn;
            BroadcomSiteId = broadcomSiteId;
            BroadcomContractNumber = broadcomContractNumber;
            Labels = labels;
            Kind = kind;
        }

        /// <summary> Initializes a new instance of <see cref="VmwareFirewallLicenseProperties"/> for deserialization. </summary>
        internal VmwareFirewallLicenseProperties()
        {
        }

        /// <summary> License key. </summary>
        public string LicenseKey { get; set; }
        /// <summary> Number of cores included in the license, measured per hour. </summary>
        public int Cores { get; set; }
        /// <summary> UTC datetime when the license expires. </summary>
        public DateTimeOffset EndOn { get; set; }
        /// <summary> The Broadcom site ID associated with the license. </summary>
        public string BroadcomSiteId { get; set; }
        /// <summary> The Broadcom contract number associated with the license. </summary>
        public string BroadcomContractNumber { get; set; }
        /// <summary> Additional labels passed through for license reporting. </summary>
        public IList<Label> Labels { get; }
    }
}
