// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Avs.Models
{
    public partial class SingleSignOnIdentitySource : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Core.Optional.IsDefined(Alias))
            {
                writer.WritePropertyName("alias"u8);
                writer.WriteStringValue(Alias);
            }
            if (Core.Optional.IsDefined(Domain))
            {
                writer.WritePropertyName("domain"u8);
                writer.WriteStringValue(Domain);
            }
            if (Core.Optional.IsDefined(BaseUserDN))
            {
                writer.WritePropertyName("baseUserDN"u8);
                writer.WriteStringValue(BaseUserDN);
            }
            if (Core.Optional.IsDefined(BaseGroupDN))
            {
                writer.WritePropertyName("baseGroupDN"u8);
                writer.WriteStringValue(BaseGroupDN);
            }
            if (Core.Optional.IsDefined(PrimaryServer))
            {
                writer.WritePropertyName("primaryServer"u8);
                writer.WriteStringValue(PrimaryServer.AbsoluteUri);
            }
            if (Core.Optional.IsDefined(SecondaryServer))
            {
                writer.WritePropertyName("secondaryServer"u8);
                writer.WriteStringValue(SecondaryServer.AbsoluteUri);
            }
            if (Core.Optional.IsDefined(Ssl))
            {
                writer.WritePropertyName("ssl"u8);
                writer.WriteStringValue(Ssl.Value.ToString());
            }
            if (Core.Optional.IsDefined(Username))
            {
                writer.WritePropertyName("username"u8);
                writer.WriteStringValue(Username);
            }
            if (Core.Optional.IsDefined(Password))
            {
                writer.WritePropertyName("password"u8);
                writer.WriteStringValue(Password);
            }
            writer.WriteEndObject();
        }

        internal static SingleSignOnIdentitySource DeserializeSingleSignOnIdentitySource(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> name = default;
            Core.Optional<string> @alias = default;
            Core.Optional<string> domain = default;
            Core.Optional<string> baseUserDN = default;
            Core.Optional<string> baseGroupDN = default;
            Core.Optional<Uri> primaryServer = default;
            Core.Optional<Uri> secondaryServer = default;
            Core.Optional<SslCertificateStatus> ssl = default;
            Core.Optional<string> username = default;
            Core.Optional<string> password = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("alias"u8))
                {
                    @alias = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("domain"u8))
                {
                    domain = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("baseUserDN"u8))
                {
                    baseUserDN = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("baseGroupDN"u8))
                {
                    baseGroupDN = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("primaryServer"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    primaryServer = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("secondaryServer"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    secondaryServer = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ssl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ssl = new SslCertificateStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("username"u8))
                {
                    username = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("password"u8))
                {
                    password = property.Value.GetString();
                    continue;
                }
            }
            return new SingleSignOnIdentitySource(name.Value, @alias.Value, domain.Value, baseUserDN.Value, baseGroupDN.Value, primaryServer.Value, secondaryServer.Value, Core.Optional.ToNullable(ssl), username.Value, password.Value);
        }
    }
}
