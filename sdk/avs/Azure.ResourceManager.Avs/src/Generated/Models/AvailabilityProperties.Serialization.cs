// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Avs.Models
{
    public partial class AvailabilityProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Strategy))
            {
                writer.WritePropertyName("strategy");
                writer.WriteStringValue(Strategy.Value.ToString());
            }
            if (Optional.IsDefined(Zone))
            {
                writer.WritePropertyName("zone");
                writer.WriteNumberValue(Zone.Value);
            }
            if (Optional.IsDefined(SecondaryZone))
            {
                writer.WritePropertyName("secondaryZone");
                writer.WriteNumberValue(SecondaryZone.Value);
            }
            writer.WriteEndObject();
        }

        internal static AvailabilityProperties DeserializeAvailabilityProperties(JsonElement element)
        {
            Optional<AvailabilityStrategy> strategy = default;
            Optional<int> zone = default;
            Optional<int> secondaryZone = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("strategy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    strategy = new AvailabilityStrategy(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("zone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    zone = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("secondaryZone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    secondaryZone = property.Value.GetInt32();
                    continue;
                }
            }
            return new AvailabilityProperties(Optional.ToNullable(strategy), Optional.ToNullable(zone), Optional.ToNullable(secondaryZone));
        }
    }
}
