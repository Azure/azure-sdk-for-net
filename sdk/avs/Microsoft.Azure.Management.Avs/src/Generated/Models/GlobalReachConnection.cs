// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A global reach connection resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class GlobalReachConnection : Resource
    {
        /// <summary>
        /// Initializes a new instance of the GlobalReachConnection class.
        /// </summary>
        public GlobalReachConnection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GlobalReachConnection class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="provisioningState">The state of the  ExpressRoute
        /// Circuit Authorization provisioning. Possible values include:
        /// 'Succeeded', 'Failed', 'Updating'</param>
        /// <param name="addressPrefix">The network used for global reach
        /// carved out from the original network block provided for the private
        /// cloud</param>
        /// <param name="authorizationKey">Authorization key from the peer
        /// express route used for the global reach connection</param>
        /// <param name="circuitConnectionStatus">The connection status of the
        /// global reach connection. Possible values include: 'Connected',
        /// 'Connecting', 'Disconnected'</param>
        /// <param name="peerExpressRouteCircuit">Identifier of the
        /// ExpressRoute Circuit to peer with in the global reach
        /// connection</param>
        public GlobalReachConnection(string id = default(string), string name = default(string), string type = default(string), string provisioningState = default(string), string addressPrefix = default(string), string authorizationKey = default(string), string circuitConnectionStatus = default(string), string peerExpressRouteCircuit = default(string))
            : base(id, name, type)
        {
            ProvisioningState = provisioningState;
            AddressPrefix = addressPrefix;
            AuthorizationKey = authorizationKey;
            CircuitConnectionStatus = circuitConnectionStatus;
            PeerExpressRouteCircuit = peerExpressRouteCircuit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the state of the  ExpressRoute Circuit Authorization
        /// provisioning. Possible values include: 'Succeeded', 'Failed',
        /// 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets the network used for global reach carved out from the original
        /// network block provided for the private cloud
        /// </summary>
        [JsonProperty(PropertyName = "properties.addressPrefix")]
        public string AddressPrefix { get; private set; }

        /// <summary>
        /// Gets or sets authorization key from the peer express route used for
        /// the global reach connection
        /// </summary>
        [JsonProperty(PropertyName = "properties.authorizationKey")]
        public string AuthorizationKey { get; set; }

        /// <summary>
        /// Gets the connection status of the global reach connection. Possible
        /// values include: 'Connected', 'Connecting', 'Disconnected'
        /// </summary>
        [JsonProperty(PropertyName = "properties.circuitConnectionStatus")]
        public string CircuitConnectionStatus { get; private set; }

        /// <summary>
        /// Gets or sets identifier of the ExpressRoute Circuit to peer with in
        /// the global reach connection
        /// </summary>
        [JsonProperty(PropertyName = "properties.peerExpressRouteCircuit")]
        public string PeerExpressRouteCircuit { get; set; }

    }
}
