// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Script Package resources available for execution
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ScriptPackage : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ScriptPackage class.
        /// </summary>
        public ScriptPackage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScriptPackage class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="description">User friendly description of the
        /// package</param>
        /// <param name="version">Module version</param>
        /// <param name="company">Company that created and supports the
        /// package</param>
        /// <param name="uri">Link to support by the package vendor</param>
        public ScriptPackage(string id = default(string), string name = default(string), string type = default(string), string description = default(string), string version = default(string), string company = default(string), string uri = default(string))
            : base(id, name, type)
        {
            Description = description;
            Version = version;
            Company = company;
            Uri = uri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets user friendly description of the package
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets module version
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets company that created and supports the package
        /// </summary>
        [JsonProperty(PropertyName = "properties.company")]
        public string Company { get; private set; }

        /// <summary>
        /// Gets link to support by the package vendor
        /// </summary>
        [JsonProperty(PropertyName = "properties.uri")]
        public string Uri { get; private set; }

    }
}
