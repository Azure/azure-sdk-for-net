// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// vCenter Single Sign On Identity Source
    /// </summary>
    public partial class IdentitySource
    {
        /// <summary>
        /// Initializes a new instance of the IdentitySource class.
        /// </summary>
        public IdentitySource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IdentitySource class.
        /// </summary>
        /// <param name="name">The name of the identity source</param>
        /// <param name="alias">The domain's NetBIOS name</param>
        /// <param name="domain">The domain's dns name</param>
        /// <param name="baseUserDN">The base distinguished name for
        /// users</param>
        /// <param name="baseGroupDN">The base distinguished name for
        /// groups</param>
        /// <param name="primaryServer">Primary server URL</param>
        /// <param name="secondaryServer">Secondary server URL</param>
        /// <param name="ssl">Protect LDAP communication using SSL certificate
        /// (LDAPS). Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="username">The ID of an Active Directory user with a
        /// minimum of read-only access to Base DN for users and group</param>
        /// <param name="password">The password of the Active Directory user
        /// with a minimum of read-only access to Base DN for users and
        /// groups.</param>
        public IdentitySource(string name = default(string), string alias = default(string), string domain = default(string), string baseUserDN = default(string), string baseGroupDN = default(string), string primaryServer = default(string), string secondaryServer = default(string), string ssl = default(string), string username = default(string), string password = default(string))
        {
            Name = name;
            Alias = alias;
            Domain = domain;
            BaseUserDN = baseUserDN;
            BaseGroupDN = baseGroupDN;
            PrimaryServer = primaryServer;
            SecondaryServer = secondaryServer;
            Ssl = ssl;
            Username = username;
            Password = password;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the identity source
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the domain's NetBIOS name
        /// </summary>
        [JsonProperty(PropertyName = "alias")]
        public string Alias { get; set; }

        /// <summary>
        /// Gets or sets the domain's dns name
        /// </summary>
        [JsonProperty(PropertyName = "domain")]
        public string Domain { get; set; }

        /// <summary>
        /// Gets or sets the base distinguished name for users
        /// </summary>
        [JsonProperty(PropertyName = "baseUserDN")]
        public string BaseUserDN { get; set; }

        /// <summary>
        /// Gets or sets the base distinguished name for groups
        /// </summary>
        [JsonProperty(PropertyName = "baseGroupDN")]
        public string BaseGroupDN { get; set; }

        /// <summary>
        /// Gets or sets primary server URL
        /// </summary>
        [JsonProperty(PropertyName = "primaryServer")]
        public string PrimaryServer { get; set; }

        /// <summary>
        /// Gets or sets secondary server URL
        /// </summary>
        [JsonProperty(PropertyName = "secondaryServer")]
        public string SecondaryServer { get; set; }

        /// <summary>
        /// Gets or sets protect LDAP communication using SSL certificate
        /// (LDAPS). Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "ssl")]
        public string Ssl { get; set; }

        /// <summary>
        /// Gets or sets the ID of an Active Directory user with a minimum of
        /// read-only access to Base DN for users and group
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets the password of the Active Directory user with a
        /// minimum of read-only access to Base DN for users and groups.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

    }
}
